
 length of audio =  1.834313



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0 1.9200000000000002 1.9200000000000002

 start3, duration3, end3 =  0.02 1.12 1.1400000000000001

 Initial start, duration, end =  0 1.9200000000000002 1.9200000000000002

 Cut at: start, duration =  0 1.814313     guard_end =  1.814313 

Running scan for frate = 125
Running scan for frate = 125
Considering guard n with value 3 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard y with value 7.199999999999999 for l ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard z with value 1 for kl ...
Considering guard zh with value 1 for kl ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 2.4000000000000004 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 125 public <climbed> = (((sil [((ch <any_Cx_k_ch_b>) | (<any_Cx_k_ch_b> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil b (sil [((ch <any_Cx_k_ch_b>) | (<any_Cx_k_ch_b> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_n_b_ch_k_l> n)] | [(n <any_Cx_n_b_ch_k_l>)]) (k | d | ((<any_Cx_n_b_ch_k_l> n) | (n <any_Cx_n_b_ch_k_l>)))) (([(<any_Cx_y_n_l_k> y)] | [(y <any_Cx_y_n_l_k>)]) (l | ((<any_Cx_y_n_l> y) | (y <any_Cx_y_n_l>)))) ((([(<any_Vx_sh_y_ay_noSlide> sh)] | [(sh <any_Vx_sh_y_ay_noSlide>)]) ([(<any_Cx_sh_y_m_l> sh)] | [(sh <any_Cx_sh_y_m_l>)])) (ay | ((<any_Vx_sh_y_ay_noSlide> sh) | (sh <any_Vx_sh_y_ay_noSlide>)))) (([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)]) (m | ((<any_Cx_sh_sh_m_d> sh) | (sh <any_Cx_sh_sh_m_d>)))) (([(<any_Cx_sh_sh_d_m> sh)] | [(sh <any_Cx_sh_sh_d_m>)]) (d | ((<any_Cx_sh_sh_d_m> sh) | (sh <any_Cx_sh_sh_d_m>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_thr> thr)] | [(thr <any_Cx_sh_d_thr>)]) sil))
frate, target rule = 125 public <climbed> = (((sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_z_p_z_kl> z)] | [(z <any_Cx_z_p_z_kl>)]) (kl | ((<any_Cx_z_p_z_kl> z) | (z <any_Cx_z_p_z_kl>)))) ((([(<any_Vx_zh_z_ay_noSlide> zh)] | [(zh <any_Vx_zh_z_ay_noSlide>)]) ([(<any_Cx_zh_z_m_kl> zh)] | [(zh <any_Cx_zh_z_m_kl>)])) (ay | ((<any_Vx_zh_z_ay_noSlide> zh) | (zh <any_Vx_zh_z_ay_noSlide>)))) (([(<any_Cx_sh_zh_m> sh)] | [(sh <any_Cx_sh_zh_m>)]) (m | ((<any_Cx_sh_zh_m_d> sh) | (sh <any_Cx_sh_zh_m_d>)))) (([(<any_Cx_sh_sh_d_m> sh)] | [(sh <any_Cx_sh_sh_d_m>)]) (d | ((<any_Cx_sh_sh_d_m> sh) | (sh <any_Cx_sh_sh_d_m>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_g> g)] | [(g <any_Cx_sh_d_g>)]) sil))
Running scan for frate = 105
Running scan for frate = 105
Considering guard n with value 3 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard z with value 1 for kl ...
Considering guard zh with value 1 for kl ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard y with value 7.199999999999999 for l ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard zh with value 2.4000000000000004 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 105 public <climbed> = (((sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_z_p_z_kl> z)] | [(z <any_Cx_z_p_z_kl>)]) (kl | ((<any_Cx_z_p_z_kl> z) | (z <any_Cx_z_p_z_kl>)))) ((([(<any_Vx_zh_z_ay_noSlide> zh)] | [(zh <any_Vx_zh_z_ay_noSlide>)]) ([(<any_Cx_zh_z_m_kl> zh)] | [(zh <any_Cx_zh_z_m_kl>)])) (ay | ((<any_Vx_zh_z_ay_noSlide> zh) | (zh <any_Vx_zh_z_ay_noSlide>)))) (([(<any_Cx_sh_zh_m> sh)] | [(sh <any_Cx_sh_zh_m>)]) (m | ((<any_Cx_sh_zh_m_d> sh) | (sh <any_Cx_sh_zh_m_d>)))) (([(<any_Cx_sh_sh_d_m> sh)] | [(sh <any_Cx_sh_sh_d_m>)]) (d | ((<any_Cx_sh_sh_d_m> sh) | (sh <any_Cx_sh_sh_d_m>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_b> b)] | [(b <any_Cx_sh_d_b>)]) sil))
Running scan for frate = 91
Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard z with value 1 for kl ...
Considering guard zh with value 1 for kl ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard zh with value 2.4000000000000004 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 105 public <climbed> = (((sil [((p <any_Cx_k_p_b>) | (<any_Cx_k_p_b> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]) | (sil b (sil [((p <any_Cx_k_p_b>) | (<any_Cx_k_p_b> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]))) (([(<any_Cx_n_b_p_k_l> n)] | [(n <any_Cx_n_b_p_k_l>)]) (k | d | ((<any_Cx_n_b_p_k_l> n) | (n <any_Cx_n_b_p_k_l>)))) (([(<any_Cx_y_n_l_k> y)] | [(y <any_Cx_y_n_l_k>)]) (l | ((<any_Cx_y_n_l> y) | (y <any_Cx_y_n_l>)))) ((([(<any_Vx_sh_y_ay_noSlide> sh)] | [(sh <any_Vx_sh_y_ay_noSlide>)]) ([(<any_Cx_sh_y_m_l> sh)] | [(sh <any_Cx_sh_y_m_l>)])) (ay | ((<any_Vx_sh_y_ay_noSlide> sh) | (sh <any_Vx_sh_y_ay_noSlide>)))) (([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)]) (m | ((<any_Cx_sh_sh_m_d> sh) | (sh <any_Cx_sh_sh_m_d>)))) (([(<any_Cx_sh_sh_d_m> sh)] | [(sh <any_Cx_sh_sh_d_m>)]) (d | ((<any_Cx_sh_sh_d_m> sh) | (sh <any_Cx_sh_sh_d_m>)))) (([(<any_vowel_noSlide> dh)] | [(dh <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_dh> dh)] | [(dh <any_Cx_sh_d_dh>)]) sil))
Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 91
frate, target rule = 91 public <climbed> = (((sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_z_p_z_kl> z)] | [(z <any_Cx_z_p_z_kl>)]) (kl | ((<any_Cx_z_p_z_kl> z) | (z <any_Cx_z_p_z_kl>)))) ((([(<any_Vx_zh_z_ay_noSlide> zh)] | [(zh <any_Vx_zh_z_ay_noSlide>)]) ([(<any_Cx_zh_z_m_kl> zh)] | [(zh <any_Cx_zh_z_m_kl>)])) (ay | ((<any_Vx_zh_z_ay_noSlide> zh) | (zh <any_Vx_zh_z_ay_noSlide>)))) (([(<any_Cx_sh_zh_m> sh)] | [(sh <any_Cx_sh_zh_m>)]) (m | ((<any_Cx_sh_zh_m_d> sh) | (sh <any_Cx_sh_zh_m_d>)))) (([(<any_Cx_sh_sh_d_m> sh)] | [(sh <any_Cx_sh_sh_d_m>)]) (d | ((<any_Cx_sh_sh_d_m> sh) | (sh <any_Cx_sh_sh_d_m>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_g> g)] | [(g <any_Cx_sh_d_g>)]) sil))
Considering guard n with value 3 for k ...
candidateGuards = map[n:true]
Picking guard, n

Running scan for frate = 80
Considering guard y with value 7.199999999999999 for l ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard z with value 1 for kl ...
Considering guard zh with value 1 for kl ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 2.4000000000000004 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 80 public <climbed> = (((sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_z_p_z_kl> z)] | [(z <any_Cx_z_p_z_kl>)]) (kl | ((<any_Cx_z_p_z_kl> z) | (z <any_Cx_z_p_z_kl>)))) ((([(<any_Vx_zh_z_ay_noSlide> zh)] | [(zh <any_Vx_zh_z_ay_noSlide>)]) ([(<any_Cx_zh_z_m_kl> zh)] | [(zh <any_Cx_zh_z_m_kl>)])) (ay | ((<any_Vx_zh_z_ay_noSlide> zh) | (zh <any_Vx_zh_z_ay_noSlide>)))) (([(<any_Cx_sh_zh_m> sh)] | [(sh <any_Cx_sh_zh_m>)]) (m | ((<any_Cx_sh_zh_m_d> sh) | (sh <any_Cx_sh_zh_m_d>)))) (([(<any_Cx_sh_sh_d_m> sh)] | [(sh <any_Cx_sh_sh_d_m>)]) (d | ((<any_Cx_sh_sh_d_m> sh) | (sh <any_Cx_sh_sh_d_m>)))) (([(<any_vowel_noSlide> dh)] | [(dh <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_dh> dh)] | [(dh <any_Cx_sh_d_dh>)]) sil))
frate, target rule = 91 public <climbed> = (((sil [((d <any_Cx_k_d_b>) | (<any_Cx_k_d_b> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil b (sil [((d <any_Cx_k_d_b>) | (<any_Cx_k_d_b> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_n_b_d_k_l> n)] | [(n <any_Cx_n_b_d_k_l>)]) (k | d | ((<any_Cx_n_b_d_k_l> n) | (n <any_Cx_n_b_d_k_l>)))) (([(<any_Cx_y_n_l_k> y)] | [(y <any_Cx_y_n_l_k>)]) (l | ((<any_Cx_y_n_l> y) | (y <any_Cx_y_n_l>)))) ((([(<any_Vx_sh_y_ay_noSlide> sh)] | [(sh <any_Vx_sh_y_ay_noSlide>)]) ([(<any_Cx_sh_y_m_l> sh)] | [(sh <any_Cx_sh_y_m_l>)])) (ay | ((<any_Vx_sh_y_ay_noSlide> sh) | (sh <any_Vx_sh_y_ay_noSlide>)))) (([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)]) (m | ((<any_Cx_sh_sh_m_d> sh) | (sh <any_Cx_sh_sh_m_d>)))) (([(<any_Cx_sh_sh_d_m> sh)] | [(sh <any_Cx_sh_sh_d_m>)]) (d | ((<any_Cx_sh_sh_d_m> sh) | (sh <any_Cx_sh_sh_d_m>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_b> b)] | [(b <any_Cx_sh_d_b>)]) sil))
Running scan for frate = 72
Considering guard zh with value 1 for kl ...
Considering guard z with value 1 for kl ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Running scan for frate = 80
Considering guard zh with value 2.4000000000000004 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard n with value 3 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard y with value 7.199999999999999 for l ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 72 public <climbed> = (((sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_kl> zh)] | [(zh <any_Cx_zh_p_z_kl>)]) (kl | ((<any_Cx_zh_p_z_kl> zh) | (zh <any_Cx_zh_p_z_kl>)))) ((([(<any_Vx_zh_zh_ay_noSlide> zh)] | [(zh <any_Vx_zh_zh_ay_noSlide>)]) ([(<any_Cx_zh_zh_m_kl> zh)] | [(zh <any_Cx_zh_zh_m_kl>)])) (ay | ((<any_Vx_zh_zh_ay_noSlide> zh) | (zh <any_Vx_zh_zh_ay_noSlide>)))) (([(<any_Cx_sh_zh_m> sh)] | [(sh <any_Cx_sh_zh_m>)]) (m | ((<any_Cx_sh_zh_m_d> sh) | (sh <any_Cx_sh_zh_m_d>)))) (([(<any_Cx_sh_sh_d_m> sh)] | [(sh <any_Cx_sh_sh_d_m>)]) (d | ((<any_Cx_sh_sh_d_m> sh) | (sh <any_Cx_sh_sh_d_m>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_thr> thr)] | [(thr <any_Cx_sh_d_thr>)]) sil))
Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 80 public <climbed> = (((sil [((g <any_Cx_k_g_b>) | (<any_Cx_k_g_b> g))] [((g <any_vowel_noSlide>) | (<any_vowel_noSlide> g))]) | (sil b (sil [((g <any_Cx_k_g_b>) | (<any_Cx_k_g_b> g))] [((g <any_vowel_noSlide>) | (<any_vowel_noSlide> g))]))) (([(<any_Cx_n_b_g_k_l> n)] | [(n <any_Cx_n_b_g_k_l>)]) (k | d | ((<any_Cx_n_b_g_k_l> n) | (n <any_Cx_n_b_g_k_l>)))) (([(<any_Cx_y_n_l_k> y)] | [(y <any_Cx_y_n_l_k>)]) (l | ((<any_Cx_y_n_l> y) | (y <any_Cx_y_n_l>)))) ((([(<any_Vx_sh_y_ay_noSlide> sh)] | [(sh <any_Vx_sh_y_ay_noSlide>)]) ([(<any_Cx_sh_y_m_l> sh)] | [(sh <any_Cx_sh_y_m_l>)])) (ay | ((<any_Vx_sh_y_ay_noSlide> sh) | (sh <any_Vx_sh_y_ay_noSlide>)))) (([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)]) (m | ((<any_Cx_sh_sh_m_d> sh) | (sh <any_Cx_sh_sh_m_d>)))) (([(<any_Cx_sh_sh_d_m> sh)] | [(sh <any_Cx_sh_sh_d_m>)]) (d | ((<any_Cx_sh_sh_d_m> sh) | (sh <any_Cx_sh_sh_d_m>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_b> b)] | [(b <any_Cx_sh_d_b>)]) sil))
Running scan for frate = 72
Considering guard n with value 3 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard y with value 7.199999999999999 for l ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 72 public <climbed> = (((sil [((g <any_Cx_k_g_b>) | (<any_Cx_k_g_b> g))] [((g <any_vowel_noSlide>) | (<any_vowel_noSlide> g))]) | (sil b (sil [((g <any_Cx_k_g_b>) | (<any_Cx_k_g_b> g))] [((g <any_vowel_noSlide>) | (<any_vowel_noSlide> g))]))) (([(<any_Cx_n_b_g_k_l> n)] | [(n <any_Cx_n_b_g_k_l>)]) (k | d | ((<any_Cx_n_b_g_k_l> n) | (n <any_Cx_n_b_g_k_l>)))) (([(<any_Cx_y_n_l_k> y)] | [(y <any_Cx_y_n_l_k>)]) (l | ((<any_Cx_y_n_l> y) | (y <any_Cx_y_n_l>)))) ((([(<any_Vx_sh_y_ay_noSlide> sh)] | [(sh <any_Vx_sh_y_ay_noSlide>)]) ([(<any_Cx_sh_y_m_l> sh)] | [(sh <any_Cx_sh_y_m_l>)])) (ay | ((<any_Vx_sh_y_ay_noSlide> sh) | (sh <any_Vx_sh_y_ay_noSlide>)))) (([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)]) (m | ((<any_Cx_sh_sh_m_d> sh) | (sh <any_Cx_sh_sh_m_d>)))) (([(<any_Cx_sh_sh_d_m> sh)] | [(sh <any_Cx_sh_sh_d_m>)]) (d | ((<any_Cx_sh_sh_d_m> sh) | (sh <any_Cx_sh_sh_d_m>)))) (([(<any_vowel_noSlide> dh)] | [(dh <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_dh> dh)] | [(dh <any_Cx_sh_d_dh>)]) sil))

results =
{72 [{sil 0 22} {p 23 28} {sil 29 42} {kl 43 56} {ay 57 72} {m 73 81} {d 82 93} {sil 94 129}]}
{80 [{sil 0 24} {p 25 31} {sil 32 47} {kl 48 62} {ay 63 80} {m 81 90} {d 91 103} {sil 104 143}]}
{91 [{sil 0 28} {p 29 35} {sil 36 53} {kl 54 71} {ay 72 91} {m 92 102} {d 103 117} {sil 118 159}]}
{105 [{sil 0 31} {p 32 42} {sil 43 61} {kl 62 82} {ay 83 105} {m 106 119} {d 120 136} {sil 137 185}]}
{125 [{sil 3 38} {p 39 51} {sil 52 74} {kl 75 99} {ay 100 126} {m 127 143} {d 144 163} {sil 164 226}]}

normalised results =
{72 [{sil 0 22} {p 32 39} {sil 40 58} {kl 60 78} {ay 79 100} {m 101 113} {d 114 129} {sil 131 179}]}
{80 [{sil 0 24} {p 31 39} {sil 40 59} {kl 60 78} {ay 79 100} {m 101 113} {d 114 129} {sil 130 179}]}
{91 [{sil 0 28} {p 32 38} {sil 40 58} {kl 59 78} {ay 79 100} {m 101 112} {d 113 129} {sil 130 175}]}
{105 [{sil 0 31} {p 30 40} {sil 41 58} {kl 59 78} {ay 79 100} {m 101 113} {d 114 130} {sil 130 176}]}
{125 [{sil 3 38} {p 31 41} {sil 42 59} {kl 60 79} {ay 80 101} {m 102 114} {d 115 130} {sil 131 181}]}

ruleAligned = [{{kl 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{ay 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{m 0} [{0 5} {1 5} {2 5} {3 5} {4 5}]} {{d 0} [{0 6} {1 6} {2 6} {3 6} {4 6}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {p 32 32} {sil 40 40} {kl 60 78} {ay 79 100} {m 101 113} {d 114 129} {sil 131 131}]}
{80 [{sil 0 0} {p 31 31} {sil 40 40} {kl 60 78} {ay 79 100} {m 101 113} {d 114 129} {sil 130 130}]}
{91 [{sil 0 0} {p 32 32} {sil 40 40} {kl 59 78} {ay 79 100} {m 101 112} {d 113 129} {sil 130 130}]}
{105 [{sil 0 0} {p 30 30} {sil 41 41} {kl 59 78} {ay 79 100} {m 101 113} {d 114 130} {sil 130 130}]}
{125 [{sil 3 3} {p 31 31} {sil 42 42} {kl 60 79} {ay 80 101} {m 102 114} {d 115 130} {sil 131 131}]}

timeAligned = [{{kl 60 78} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{ay 79 100} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{m 101 113} [{0 5} {1 5} {2 5} {3 5} {4 5}]} {{d 114 129} [{0 6} {1 6} {2 6} {3 6} {4 6}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 78
i, iTime, newITime, timeStartFrom = 2 1 2 100
i, iTime, newITime, timeStartFrom = 3 2 3 112
combinedVerdict    = [{kl 0} {ay 0} {m 0} {d 0}]
ruleAlignedVerdict = [{kl 0} {ay 0} {m 0} {d 0}]

score->
+1 for kl
+1 for ay
+1 for m
+1 for d
score<-: 9

results =
{72 [{sil 0 39} {k 40 51} {l 52 56} {ay 57 72} {m 73 81} {d 82 93} {sil 94 129}]}
{80 [{sil 0 44} {k 45 57} {l 58 62} {ay 63 80} {m 81 90} {d 91 103} {sil 104 143}]}
{91 [{sil 0 51} {k 52 64} {l 65 70} {ay 71 91} {m 92 102} {d 103 117} {sil 118 159}]}
{105 [{sil 0 61} {k 62 75} {l 76 82} {ay 83 105} {m 106 119} {d 120 136} {sil 137 185}]}
{125 [{sil 3 74} {k 75 90} {l 91 98} {ay 99 126} {m 127 143} {d 144 163} {sil 164 226}]}

normalised results =
{72 [{sil 0 39} {k 56 71} {l 72 78} {ay 79 100} {m 101 113} {d 114 129} {sil 131 179}]}
{80 [{sil 0 44} {k 56 71} {l 73 78} {ay 79 100} {m 101 113} {d 114 129} {sil 130 179}]}
{91 [{sil 0 51} {k 57 70} {l 71 77} {ay 78 100} {m 101 112} {d 113 129} {sil 130 175}]}
{105 [{sil 0 61} {k 59 71} {l 72 78} {ay 79 100} {m 101 113} {d 114 130} {sil 130 176}]}
{125 [{sil 3 74} {k 60 72} {l 73 78} {ay 79 101} {m 102 114} {d 115 130} {sil 131 181}]}

ruleAligned = [{{k 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{l 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{ay 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{m 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{d 0} [{0 5} {1 5} {2 5} {3 5} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {k 56 71} {l 72 78} {ay 79 100} {m 101 113} {d 114 129} {sil 131 131}]}
{80 [{sil 0 0} {k 56 71} {l 73 78} {ay 79 100} {m 101 113} {d 114 129} {sil 130 130}]}
{91 [{sil 0 0} {k 57 70} {l 71 77} {ay 78 100} {m 101 112} {d 113 129} {sil 130 130}]}
{105 [{sil 0 0} {k 59 71} {l 72 78} {ay 79 100} {m 101 113} {d 114 130} {sil 130 130}]}
{125 [{sil 3 3} {k 60 72} {l 73 78} {ay 79 101} {m 102 114} {d 115 130} {sil 131 131}]}

timeAligned = [{{k 57 71} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{l 72 78} [{0 2} {2 2} {3 2} {1 2} {4 2}]} {{ay 79 100} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{m 101 113} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{d 114 129} [{0 5} {1 5} {2 5} {3 5} {4 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 70
i, iTime, newITime, timeStartFrom = 2 1 2 77
i, iTime, newITime, timeStartFrom = 3 2 3 100
i, iTime, newITime, timeStartFrom = 4 3 4 112
combinedVerdict    = [{k 0} {l 0} {ay 0} {m 0} {d 0}]
ruleAlignedVerdict = [{k 0} {l 0} {ay 0} {m 0} {d 0}]

score->
+1 for k
+1 for l
+1 for ay
+1 for m
+1 for d
score<-: 10
testPronounce k good l good ay good m good d good
publish->
phonsToAlphas = [{[k] c} {[l] l} {[ay] i} {[m] mbe} {[d] d}]
getVerdict<-:new {c [k] 0}
getVerdict<-:new {l [l] 0}
getVerdict<-:new {i [ay] 0}
getVerdict<-:new {mbe [m] 0}
getVerdict<-:new {d [d] 0}
lettersVerdicts = [{c [k] 0} {l [l] 0} {i [ay] 0} {mbe [m] 0} {d [d] 0}]
publish<-
Total: 324.821317ms
{
  "results": [
    {
      "letters": "c",
      "phonemes": "k",
      "verdict": "good"
    },
    {
      "letters": "l",
      "phonemes": "l",
      "verdict": "good"
    },
    {
      "letters": "i",
      "phonemes": "ɑɪ",
      "verdict": "good"
    },
    {
      "letters": "mbe",
      "phonemes": "m",
      "verdict": "good"
    },
    {
      "letters": "d",
      "phonemes": "d",
      "verdict": "good"
    }
  ],
  "err": null
}
