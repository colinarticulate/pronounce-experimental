
 length of audio =  2.453



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.8 1 1.8

 start3, duration3, end3 =  1.14 0.58 1.7199999999999998

 Initial start, duration, end =  0.7000000000000001 1.1 1.8

 Cut at: start, duration =  0.7000000000000001 1.55     guard_end =  2.25 

Running scan for frate = 125
Considering guard ch with value 1.4 for m ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 1.4 for ay ...
candidateGuards = map[ch:true]
Picking guard, ch

frate, target rule = 125 public <my> = (((sil [((z <any_Cx_m_z_p>) | (<any_Cx_m_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_m_z_p>) | (<any_Cx_m_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ch_p_z_m> ch)] | [(ch <any_Cx_ch_p_z_m>)]) (m | ((<any_Cx_ch_p_z_m> ch) | (ch <any_Cx_ch_p_z_m>)))) ((([(<any_Vx_ch_ch_ay_noSlide> ch)] | [(ch <any_Vx_ch_ch_ay_noSlide>)]) ([(<any_Cx_ch_ch_m> ch)] | [(ch <any_Cx_ch_ch_m>)])) (ay | ((<any_Vx_ch_ch_ay_noSlide> ch) | (ch <any_Vx_ch_ch_ay_noSlide>)))) (([(<any_Cx_ch_ay_m> m)] | [(m <any_Cx_ch_ay_m>)]) ([(<any_Vx_ch_ay_m> m)] | [(m <any_Vx_ch_ay_m>)]) sil))
Running scan for frate = 105
Considering guard ch with value 1.4 for m ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 1.4 for ay ...
candidateGuards = map[ch:true]
Picking guard, ch

frate, target rule = 105 public <my> = (((sil [((l <any_Cx_m_l_p>) | (<any_Cx_m_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]) | (sil p (sil [((l <any_Cx_m_l_p>) | (<any_Cx_m_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]))) (([(<any_Cx_ch_p_l_m> ch)] | [(ch <any_Cx_ch_p_l_m>)]) (m | ((<any_Cx_ch_p_l_m> ch) | (ch <any_Cx_ch_p_l_m>)))) ((([(<any_Vx_ch_ch_ay_noSlide> ch)] | [(ch <any_Vx_ch_ch_ay_noSlide>)]) ([(<any_Cx_ch_ch_m> ch)] | [(ch <any_Cx_ch_ch_m>)])) (ay | ((<any_Vx_ch_ch_ay_noSlide> ch) | (ch <any_Vx_ch_ch_ay_noSlide>)))) (([(<any_Cx_ch_ay_hh> hh)] | [(hh <any_Cx_ch_ay_hh>)]) ([(<any_Vx_ch_ay_hh> hh)] | [(hh <any_Vx_ch_ay_hh>)]) sil))
Running scan for frate = 91
Considering guard ch with value 1.4 for m ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 1.4 for ay ...
candidateGuards = map[ch:true]
Picking guard, ch

frate, target rule = 91 public <my> = (((sil [((v <any_Cx_m_v_p>) | (<any_Cx_m_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]) | (sil p (sil [((v <any_Cx_m_v_p>) | (<any_Cx_m_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]))) (([(<any_Cx_ch_p_v_m> ch)] | [(ch <any_Cx_ch_p_v_m>)]) (m | ((<any_Cx_ch_p_v_m> ch) | (ch <any_Cx_ch_p_v_m>)))) ((([(<any_Vx_ch_ch_ay_noSlide> ch)] | [(ch <any_Vx_ch_ch_ay_noSlide>)]) ([(<any_Cx_ch_ch_m> ch)] | [(ch <any_Cx_ch_ch_m>)])) (ay | ((<any_Vx_ch_ch_ay_noSlide> ch) | (ch <any_Vx_ch_ch_ay_noSlide>)))) (([(<any_Cx_ch_ay_p> p)] | [(p <any_Cx_ch_ay_p>)]) ([(<any_Vx_ch_ay_p> p)] | [(p <any_Vx_ch_ay_p>)]) sil))
Running scan for frate = 80
Considering guard ch with value 1.4 for m ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 1.4 for ay ...
candidateGuards = map[ch:true]
Picking guard, ch

frate, target rule = 80 public <my> = (((sil [((d <any_Cx_m_d_p>) | (<any_Cx_m_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil p (sil [((d <any_Cx_m_d_p>) | (<any_Cx_m_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_ch_p_d_m> ch)] | [(ch <any_Cx_ch_p_d_m>)]) (m | ((<any_Cx_ch_p_d_m> ch) | (ch <any_Cx_ch_p_d_m>)))) ((([(<any_Vx_ch_ch_ay_noSlide> ch)] | [(ch <any_Vx_ch_ch_ay_noSlide>)]) ([(<any_Cx_ch_ch_m> ch)] | [(ch <any_Cx_ch_ch_m>)])) (ay | ((<any_Vx_ch_ch_ay_noSlide> ch) | (ch <any_Vx_ch_ch_ay_noSlide>)))) (([(<any_Cx_ch_ay_m> m)] | [(m <any_Cx_ch_ay_m>)]) ([(<any_Vx_ch_ay_m> m)] | [(m <any_Vx_ch_ay_m>)]) sil))
Running scan for frate = 72
Considering guard ch with value 1.4 for m ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 1.4 for ay ...
candidateGuards = map[ch:true]
Picking guard, ch

frate, target rule = 72 public <my> = (((sil [((v <any_Cx_m_v_p>) | (<any_Cx_m_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]) | (sil p (sil [((v <any_Cx_m_v_p>) | (<any_Cx_m_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]))) (([(<any_Cx_ch_p_v_m> ch)] | [(ch <any_Cx_ch_p_v_m>)]) (m | ((<any_Cx_ch_p_v_m> ch) | (ch <any_Cx_ch_p_v_m>)))) ((([(<any_Vx_ch_ch_ay_noSlide> ch)] | [(ch <any_Vx_ch_ch_ay_noSlide>)]) ([(<any_Cx_ch_ch_m> ch)] | [(ch <any_Cx_ch_ch_m>)])) (ay | ((<any_Vx_ch_ch_ay_noSlide> ch) | (ch <any_Vx_ch_ch_ay_noSlide>)))) (([(<any_Cx_ch_ay_m> m)] | [(m <any_Cx_ch_ay_m>)]) ([(<any_Vx_ch_ay_m> m)] | [(m <any_Vx_ch_ay_m>)]) sil))

results =
{72 [{sil 0 10} {v 11 17} {iy 18 28} {m 29 40} {ay 41 58} {m 59 61} {v 62 76} {sil 77 98}]}
{80 [{sil 0 12} {p 13 24} {sil 25 32} {m 33 44} {ay 45 66} {m 67 69} {v 70 75} {sil 76 95}]}
{91 [{sil 0 12} {v 13 18} {ih 19 31} {m 32 50} {ay 51 77} {v 78 98} {p 99 101} {sil 102 139}]}
{105 [{sil 0 19} {l 20 25} {iy 26 43} {m 44 58} {ay 59 91} {v 92 106} {hh 107 117} {sil 118 158}]}
{125 [{sil 3 18} {z 19 26} {ih 27 43} {m 44 70} {ay 71 106} {m 107 109} {v 110 160} {sil 161 189}]}

normalised results =
{72 [{sil 0 10} {v 15 24} {iy 25 39} {m 40 56} {ay 57 81} {m 82 82} {v 86 106} {sil 107 136}]}
{80 [{sil 0 12} {p 16 30} {sil 31 40} {m 41 55} {ay 56 83} {m 84 84} {v 88 94} {sil 95 119}]}
{91 [{sil 0 12} {v 14 20} {ih 21 34} {m 35 55} {ay 56 85} {v 86 108} {p 109 109} {sil 112 153}]}
{105 [{sil 0 19} {l 19 24} {iy 25 41} {m 42 55} {ay 56 87} {v 88 101} {hh 102 111} {sil 112 150}]}
{125 [{sil 3 18} {z 15 21} {ih 22 34} {m 35 56} {ay 57 85} {m 86 86} {v 88 128} {sil 129 151}]}

ruleAligned = [{{m 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{ay 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{v 3} [{0 6} {1 6} {2 5} {3 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {v 15 24} {iy 25 39} {m 40 56} {ay 57 81} {m 82 82} {v 86 106} {sil 107 107}]}
{80 [{sil 0 0} {p 16 16} {sil 31 31} {m 41 55} {ay 56 83} {m 84 84} {v 88 94} {sil 95 95}]}
{91 [{sil 0 0} {v 14 14} {ih 21 34} {m 35 55} {ay 56 85} {v 86 108} {p 109 109} {sil 112 112}]}
{105 [{sil 0 0} {l 19 24} {iy 25 41} {m 42 55} {ay 56 87} {v 88 101} {hh 102 111} {sil 112 112}]}
{125 [{sil 3 3} {z 15 21} {ih 22 34} {m 35 56} {ay 57 85} {m 86 86} {v 88 88} {sil 129 129}]}

timeAligned = [{{m 40 55} [{0 3} {2 3} {4 3} {1 3} {3 3}]} {{ay 56 85} [{1 4} {2 4} {3 4} {0 4} {4 4}]} {{v 88 101} [{0 6} {1 6} {2 5} {3 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 55
i, iTime, newITime, timeStartFrom = 2 1 2 81
combinedVerdict    = [{m 0} {ay 0} {v 3}]
ruleAlignedVerdict = [{m 0} {ay 0} {v 3}]

score->
+1 for m
+1 for ay
-1 for v
score<-: 1
testPronounce m good ay good v surprise
publish->
phonsToAlphas = [{[m] m} {[ay] y}]
getVerdict<-:new {m [m] 0}
getVerdict<-:new {y [ay] 0}
lettersVerdicts = [{m [m] 0} {y [ay] 0} {v [v] 3}]
publish<-
Total: 220.466512ms
{
  "results": [
    {
      "letters": "m",
      "phonemes": "m",
      "verdict": "good"
    },
    {
      "letters": "y",
      "phonemes": "ɑɪ",
      "verdict": "good"
    },
    {
      "letters": "v",
      "phonemes": "v",
      "verdict": "surprise"
    }
  ],
  "err": null
}
