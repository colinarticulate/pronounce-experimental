
 length of audio =  2.4145



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.8 1.1800000000000002 1.9800000000000002

 start3, duration3, end3 =  0.8200000000000001 1.04 1.86

 Initial start, duration, end =  0.7000000000000001 1.2800000000000002 1.9800000000000002

 Cut at: start, duration =  0.7000000000000001 1.6944999999999997     guard_end =  2.3945 

Running scan for frate = 125
Considering guard z with value 1 for r ...
Considering guard y with value 1 for r ...
candidateGuards = map[y:true z:true]
Picking guard, z

Considering guard y with value 2 for ah ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3.2 for sh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 1.6 for axr ...
candidateGuards = map[y:true]
Picking guard, y

frate, target rule = 125 public <russia> = (((sil [((hh <any_Cx_r_hh_p>) | (<any_Cx_r_hh_p> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil p (sil [((hh <any_Cx_r_hh_p>) | (<any_Cx_r_hh_p> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_z_p_hh_r> z)] | [(z <any_Cx_z_p_hh_r>)]) (r | l | w | ((<any_Cx_z_p_hh_r> z) | (z <any_Cx_z_p_hh_r>)))) ((([(<any_Vx_y_z_ah_noSlide> y)] | [(y <any_Vx_y_z_ah_noSlide>)]) ([(<any_Cx_y_z_sh_r> y)] | [(y <any_Cx_y_z_sh_r>)])) (ah | ((<any_Vx_y_z_ah_noSlide> y) | (y <any_Vx_y_z_ah_noSlide>)))) (([(<any_Cx_y_y_sh> y)] | [(y <any_Cx_y_y_sh>)]) (sh | ((<any_Cx_y_y_sh_axr> y) | (y <any_Cx_y_y_sh_axr>)))) (([(<any_Cx_y_y_axr_sh> y)] | [(y <any_Cx_y_y_axr_sh>)]) (axr | ((<any_Cx_y_y_axr_sh> y) | (y <any_Cx_y_y_axr_sh>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_y_axr_hh> hh)] | [(hh <any_Cx_y_axr_hh>)]) sil))
Running scan for frate = 105
Considering guard z with value 1 for r ...
Considering guard y with value 1 for r ...
candidateGuards = map[y:true z:true]
Picking guard, z

Considering guard y with value 2 for ah ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3.2 for sh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 1.6 for axr ...
candidateGuards = map[y:true]
Picking guard, y

frate, target rule = 105 public <russia> = (((sil [((n <any_Cx_r_n_p>) | (<any_Cx_r_n_p> n))] [((n <any_vowel_noSlide>) | (<any_vowel_noSlide> n))]) | (sil p (sil [((n <any_Cx_r_n_p>) | (<any_Cx_r_n_p> n))] [((n <any_vowel_noSlide>) | (<any_vowel_noSlide> n))]))) (([(<any_Cx_z_p_n_r> z)] | [(z <any_Cx_z_p_n_r>)]) (r | l | w | ((<any_Cx_z_p_n_r> z) | (z <any_Cx_z_p_n_r>)))) ((([(<any_Vx_y_z_ah_noSlide> y)] | [(y <any_Vx_y_z_ah_noSlide>)]) ([(<any_Cx_y_z_sh_r> y)] | [(y <any_Cx_y_z_sh_r>)])) (ah | ((<any_Vx_y_z_ah_noSlide> y) | (y <any_Vx_y_z_ah_noSlide>)))) (([(<any_Cx_y_y_sh> y)] | [(y <any_Cx_y_y_sh>)]) (sh | ((<any_Cx_y_y_sh_axr> y) | (y <any_Cx_y_y_sh_axr>)))) (([(<any_Cx_y_y_axr_sh> y)] | [(y <any_Cx_y_y_axr_sh>)]) (axr | ((<any_Cx_y_y_axr_sh> y) | (y <any_Cx_y_y_axr_sh>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_y_axr_f> f)] | [(f <any_Cx_y_axr_f>)]) sil))
Running scan for frate = 91
Considering guard y with value 1 for r ...
Considering guard z with value 1 for r ...
candidateGuards = map[y:true z:true]
Picking guard, y

Considering guard y with value 2 for ah ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3.2 for sh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 1.6 for axr ...
candidateGuards = map[y:true]
Picking guard, y

frate, target rule = 91 public <russia> = (((sil [((m <any_Cx_r_m_p>) | (<any_Cx_r_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]) | (sil p (sil [((m <any_Cx_r_m_p>) | (<any_Cx_r_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]))) (([(<any_Cx_y_p_m_r> y)] | [(y <any_Cx_y_p_m_r>)]) (r | l | w | ((<any_Cx_y_p_m_r> y) | (y <any_Cx_y_p_m_r>)))) ((([(<any_Vx_y_y_ah_noSlide> y)] | [(y <any_Vx_y_y_ah_noSlide>)]) ([(<any_Cx_y_y_sh_r> y)] | [(y <any_Cx_y_y_sh_r>)])) (ah | ((<any_Vx_y_y_ah_noSlide> y) | (y <any_Vx_y_y_ah_noSlide>)))) (([(<any_Cx_y_y_sh> y)] | [(y <any_Cx_y_y_sh>)]) (sh | ((<any_Cx_y_y_sh_axr> y) | (y <any_Cx_y_y_sh_axr>)))) (([(<any_Cx_y_y_axr_sh> y)] | [(y <any_Cx_y_y_axr_sh>)]) (axr | ((<any_Cx_y_y_axr_sh> y) | (y <any_Cx_y_y_axr_sh>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_y_axr_m> m)] | [(m <any_Cx_y_axr_m>)]) sil))
Running scan for frate = 80
Considering guard y with value 1 for r ...
Considering guard z with value 1 for r ...
candidateGuards = map[y:true z:true]
Picking guard, y

Considering guard y with value 2 for ah ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3.2 for sh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 1.6 for axr ...
candidateGuards = map[y:true]
Picking guard, y

frate, target rule = 80 public <russia> = (((sil [((hh <any_Cx_r_hh_p>) | (<any_Cx_r_hh_p> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil p (sil [((hh <any_Cx_r_hh_p>) | (<any_Cx_r_hh_p> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_y_p_hh_r> y)] | [(y <any_Cx_y_p_hh_r>)]) (r | l | w | ((<any_Cx_y_p_hh_r> y) | (y <any_Cx_y_p_hh_r>)))) ((([(<any_Vx_y_y_ah_noSlide> y)] | [(y <any_Vx_y_y_ah_noSlide>)]) ([(<any_Cx_y_y_sh_r> y)] | [(y <any_Cx_y_y_sh_r>)])) (ah | ((<any_Vx_y_y_ah_noSlide> y) | (y <any_Vx_y_y_ah_noSlide>)))) (([(<any_Cx_y_y_sh> y)] | [(y <any_Cx_y_y_sh>)]) (sh | ((<any_Cx_y_y_sh_axr> y) | (y <any_Cx_y_y_sh_axr>)))) (([(<any_Cx_y_y_axr_sh> y)] | [(y <any_Cx_y_y_axr_sh>)]) (axr | ((<any_Cx_y_y_axr_sh> y) | (y <any_Cx_y_y_axr_sh>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_y_axr_n> n)] | [(n <any_Cx_y_axr_n>)]) sil))
Running scan for frate = 72
Considering guard y with value 1 for r ...
Considering guard z with value 1 for r ...
candidateGuards = map[y:true z:true]
Picking guard, y

Considering guard y with value 2 for ah ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3.2 for sh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 1.6 for axr ...
candidateGuards = map[y:true]
Picking guard, y

frate, target rule = 72 public <russia> = (((sil [((n <any_Cx_r_n_p>) | (<any_Cx_r_n_p> n))] [((n <any_vowel_noSlide>) | (<any_vowel_noSlide> n))]) | (sil p (sil [((n <any_Cx_r_n_p>) | (<any_Cx_r_n_p> n))] [((n <any_vowel_noSlide>) | (<any_vowel_noSlide> n))]))) (([(<any_Cx_y_p_n_r> y)] | [(y <any_Cx_y_p_n_r>)]) (r | l | w | ((<any_Cx_y_p_n_r> y) | (y <any_Cx_y_p_n_r>)))) ((([(<any_Vx_y_y_ah_noSlide> y)] | [(y <any_Vx_y_y_ah_noSlide>)]) ([(<any_Cx_y_y_sh_r> y)] | [(y <any_Cx_y_y_sh_r>)])) (ah | ((<any_Vx_y_y_ah_noSlide> y) | (y <any_Vx_y_y_ah_noSlide>)))) (([(<any_Cx_y_y_sh> y)] | [(y <any_Cx_y_y_sh>)]) (sh | ((<any_Cx_y_y_sh_axr> y) | (y <any_Cx_y_y_sh_axr>)))) (([(<any_Cx_y_y_axr_sh> y)] | [(y <any_Cx_y_y_axr_sh>)]) (axr | ((<any_Cx_y_y_axr_sh> y) | (y <any_Cx_y_y_axr_sh>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_y_axr_thr> thr)] | [(thr <any_Cx_y_axr_thr>)]) sil))

results =
{72 [{sil 0 10} {r 11 31} {ah 32 34} {sh 35 54} {axr 55 69} {sil 70 81}]}
{80 [{sil 0 12} {r 13 35} {ah 36 38} {sh 39 52} {y 53 59} {g 60 63} {axr 64 77} {sil 78 88}]}
{91 [{sil 0 14} {r 15 41} {ah 42 44} {ch 45 59} {y 60 73} {axr 74 108} {sil 109 152}]}
{105 [{sil 0 17} {r 18 52} {ch 53 69} {y 70 84} {ah 85 92} {y 93 97} {m 98 105} {axr 106 125} {sil 126 173}]}
{125 [{sil 3 24} {r 25 63} {ch 64 83} {y 84 92} {y 93 101} {eh 102 121} {y 122 124} {g 125 133} {axr 134 150} {sil 151 211}]}

normalised results =
{72 [{sil 0 10} {r 15 43} {ah 44 44} {sh 49 75} {axr 76 96} {sil 97 113}]}
{80 [{sil 0 12} {r 16 44} {ah 45 45} {sh 49 65} {y 66 74} {g 75 79} {axr 80 96} {sil 98 110}]}
{91 [{sil 0 14} {r 16 45} {ah 46 46} {ch 49 65} {y 66 80} {axr 81 119} {sil 120 167}]}
{105 [{sil 0 17} {r 17 50} {ch 50 66} {y 67 80} {ah 81 88} {y 89 92} {m 93 100} {axr 101 119} {sil 120 165}]}
{125 [{sil 3 24} {r 20 50} {ch 51 66} {y 67 74} {y 74 81} {eh 82 97} {y 98 98} {g 100 106} {axr 107 120} {sil 121 169}]}

ruleAligned = [{{r 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ah 2} [{3 4}]} {{sh 2} [{0 3} {1 3}]} {{axr 0} [{0 4} {1 6} {2 5} {3 7} {4 8}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {r 15 43} {ah 44 44} {sh 49 75} {axr 76 96} {sil 97 97}]}
{80 [{sil 0 0} {r 16 44} {ah 45 45} {sh 49 65} {y 66 74} {g 75 79} {axr 80 96} {sil 98 98}]}
{91 [{sil 0 0} {r 16 45} {ah 46 46} {ch 49 65} {y 66 80} {axr 81 119} {sil 120 120}]}
{105 [{sil 0 0} {r 17 50} {ch 50 66} {y 67 80} {ah 81 88} {y 89 89} {m 93 100} {axr 101 119} {sil 120 120}]}
{125 [{sil 3 3} {r 20 50} {ch 51 66} {y 67 74} {y 74 81} {eh 82 97} {y 98 98} {g 100 106} {axr 107 120} {sil 121 121}]}

timeAligned = [{{r 16 45} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ch 51 65} [{2 3} {3 2} {4 2}]} {{y 67 80} [{1 4} {2 4} {3 3} {4 3} {4 4}]} {{axr 81 96} [{0 4} {1 6} {2 5}]} {{axr 107 119} [{2 5} {3 7} {4 8}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 -1 43
i, iTime, newITime, timeStartFrom = 2 0 -1 43
i, iTime, newITime, timeStartFrom = 3 0 3 43
combinedVerdict    = [{r 0} {ah 2} {sh 2} {ch 3} {y 3} {axr 0} {axr 3}]
ruleAlignedVerdict = [{r 0} {ah 2} {sh 2} {axr 0}]

score->
+1 for r
-1 for ah
-1 for sh
-1 for ch
-1 for y
+1 for axr
score<-: -2
bestResult = {-2 [{r 0} {ah 2} {sh 2} {ch 3} {y 3} {axr 0}] [r ah sh axr]}
testPronounce r good ah missing sh missing ch surprise y surprise axr good
publish->
phonsToAlphas = [{[r] r} {[ah] u} {[sh] ssi} {[axr] a}]
getVerdict<-:new {r [r] 0}
getVerdict<-:new {u [ah] 2}
getVerdict<-:new {ssi [sh] 2}
getVerdict<-:new {a [axr] 0}
lettersVerdicts = [{r [r] 0} {u [ah] 2} {ssi [sh] 2} {ch [ch] 3} {y [y] 3} {a [axr] 0}]
publish<-
Total: 240.622028ms
{
  "results": [
    {
      "letters": "r",
      "phonemes": "É¹",
      "verdict": "good"
    },
    {
      "letters": "u",
      "phonemes": "Ê",
      "verdict": "missing"
    },
    {
      "letters": "ssi",
      "phonemes": "Ê",
      "verdict": "missing"
    },
    {
      "letters": "ch",
      "phonemes": "Ê§",
      "verdict": "surprise"
    },
    {
      "letters": "y",
      "phonemes": "j",
      "verdict": "surprise"
    },
    {
      "letters": "a",
      "phonemes": "ÉÉ¹",
      "verdict": "good"
    }
  ],
  "err": null
}
