
 length of audio =  1.446312



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.5800000000000001 0.64 1.2200000000000002

 start3, duration3, end3 =  0.5800000000000001 0.58 1.1600000000000001

 Initial start, duration, end =  0.4800000000000001 0.7400000000000001 1.2200000000000002

 Cut at: start, duration =  0.4800000000000001 0.9463119999999999     guard_end =  1.426312 

Running scan for frate = 125
Considering guard sh with value 0.8 for w ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for er ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 125 public <world> = (((sil [((n <any_Cx_w_n_p>) | (<any_Cx_w_n_p> n))] [((n <any_vowel_noSlide>) | (<any_vowel_noSlide> n))]) | (sil p (sil [((n <any_Cx_w_n_p>) | (<any_Cx_w_n_p> n))] [((n <any_vowel_noSlide>) | (<any_vowel_noSlide> n))]))) (([(<any_Cx_sh_p_n_w> sh)] | [(sh <any_Cx_sh_p_n_w>)]) (w | v | ((<any_Cx_sh_p_n_w> sh) | (sh <any_Cx_sh_p_n_w>)))) ((([(<any_Vx_sh_sh_er_noSlide> sh)] | [(sh <any_Vx_sh_sh_er_noSlide>)]) ([(<any_Cx_sh_sh_l_w> sh)] | [(sh <any_Cx_sh_sh_l_w>)])) (er | ((<any_Vx_sh_sh_er_noSlide> sh) | (sh <any_Vx_sh_sh_er_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l_d> sh) | (sh <any_Cx_sh_sh_l_d>)))) (([(<any_Cx_sh_sh_d_l> sh)] | [(sh <any_Cx_sh_sh_d_l>)]) (d | ((<any_Cx_sh_sh_d_l> sh) | (sh <any_Cx_sh_sh_d_l>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_g> g)] | [(g <any_Cx_sh_d_g>)]) sil))
Running scan for frate = 105
Considering guard sh with value 0.8 for w ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for er ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 105 public <world> = (((sil [((l <any_Cx_w_l_p>) | (<any_Cx_w_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]) | (sil p (sil [((l <any_Cx_w_l_p>) | (<any_Cx_w_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]))) (([(<any_Cx_sh_p_l_w> sh)] | [(sh <any_Cx_sh_p_l_w>)]) (w | v | ((<any_Cx_sh_p_l_w> sh) | (sh <any_Cx_sh_p_l_w>)))) ((([(<any_Vx_sh_sh_er_noSlide> sh)] | [(sh <any_Vx_sh_sh_er_noSlide>)]) ([(<any_Cx_sh_sh_l_w> sh)] | [(sh <any_Cx_sh_sh_l_w>)])) (er | ((<any_Vx_sh_sh_er_noSlide> sh) | (sh <any_Vx_sh_sh_er_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l_d> sh) | (sh <any_Cx_sh_sh_l_d>)))) (([(<any_Cx_sh_sh_d_l> sh)] | [(sh <any_Cx_sh_sh_d_l>)]) (d | ((<any_Cx_sh_sh_d_l> sh) | (sh <any_Cx_sh_sh_d_l>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_thr> thr)] | [(thr <any_Cx_sh_d_thr>)]) sil))
Running scan for frate = 91
Considering guard sh with value 0.8 for w ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for er ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 91 public <world> = (((sil [((r <any_Cx_w_r_p>) | (<any_Cx_w_r_p> r))] [((r <any_vowel_noSlide>) | (<any_vowel_noSlide> r))]) | (sil p (sil [((r <any_Cx_w_r_p>) | (<any_Cx_w_r_p> r))] [((r <any_vowel_noSlide>) | (<any_vowel_noSlide> r))]))) (([(<any_Cx_sh_p_r_w> sh)] | [(sh <any_Cx_sh_p_r_w>)]) (w | v | ((<any_Cx_sh_p_r_w> sh) | (sh <any_Cx_sh_p_r_w>)))) ((([(<any_Vx_sh_sh_er_noSlide> sh)] | [(sh <any_Vx_sh_sh_er_noSlide>)]) ([(<any_Cx_sh_sh_l_w> sh)] | [(sh <any_Cx_sh_sh_l_w>)])) (er | ((<any_Vx_sh_sh_er_noSlide> sh) | (sh <any_Vx_sh_sh_er_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l_d> sh) | (sh <any_Cx_sh_sh_l_d>)))) (([(<any_Cx_sh_sh_d_l> sh)] | [(sh <any_Cx_sh_sh_d_l>)]) (d | ((<any_Cx_sh_sh_d_l> sh) | (sh <any_Cx_sh_sh_d_l>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_thr> thr)] | [(thr <any_Cx_sh_d_thr>)]) sil))
Running scan for frate = 80
Considering guard sh with value 0.8 for w ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for er ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 80 public <world> = (((sil [((z <any_Cx_w_z_p>) | (<any_Cx_w_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_w_z_p>) | (<any_Cx_w_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_w> sh)] | [(sh <any_Cx_sh_p_z_w>)]) (w | v | ((<any_Cx_sh_p_z_w> sh) | (sh <any_Cx_sh_p_z_w>)))) ((([(<any_Vx_sh_sh_er_noSlide> sh)] | [(sh <any_Vx_sh_sh_er_noSlide>)]) ([(<any_Cx_sh_sh_l_w> sh)] | [(sh <any_Cx_sh_sh_l_w>)])) (er | ((<any_Vx_sh_sh_er_noSlide> sh) | (sh <any_Vx_sh_sh_er_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l_d> sh) | (sh <any_Cx_sh_sh_l_d>)))) (([(<any_Cx_sh_sh_d_l> sh)] | [(sh <any_Cx_sh_sh_d_l>)]) (d | ((<any_Cx_sh_sh_d_l> sh) | (sh <any_Cx_sh_sh_d_l>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_g> g)] | [(g <any_Cx_sh_d_g>)]) sil))
Running scan for frate = 72
Considering guard sh with value 0.8 for w ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for er ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 72 public <world> = (((sil [((d <any_Cx_w_d_p>) | (<any_Cx_w_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil p (sil [((d <any_Cx_w_d_p>) | (<any_Cx_w_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_sh_p_d_w> sh)] | [(sh <any_Cx_sh_p_d_w>)]) (w | v | ((<any_Cx_sh_p_d_w> sh) | (sh <any_Cx_sh_p_d_w>)))) ((([(<any_Vx_sh_sh_er_noSlide> sh)] | [(sh <any_Vx_sh_sh_er_noSlide>)]) ([(<any_Cx_sh_sh_l_w> sh)] | [(sh <any_Cx_sh_sh_l_w>)])) (er | ((<any_Vx_sh_sh_er_noSlide> sh) | (sh <any_Vx_sh_sh_er_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l_d> sh) | (sh <any_Cx_sh_sh_l_d>)))) (([(<any_Cx_sh_sh_d_l> sh)] | [(sh <any_Cx_sh_sh_d_l>)]) (d | ((<any_Cx_sh_sh_d_l> sh) | (sh <any_Cx_sh_sh_d_l>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_v> v)] | [(v <any_Cx_sh_d_v>)]) sil))

results =
{72 [{sil 0 10} {w 11 20} {er 21 30} {l 31 33} {d 34 38} {v 39 53} {ch 54 63} {sil 64 66}]}
{80 [{sil 0 11} {w 12 22} {er 23 33} {sh 34 36} {g 37 42} {v 43 60} {sh 61 69} {sil 70 74}]}
{91 [{sil 0 2} {p 3 11} {sil 12 14} {w 15 26} {er 27 38} {l 39 42} {d 43 67} {sil 68 80}]}
{105 [{sil 0 2} {p 3 12} {sil 13 16} {w 17 30} {er 31 45} {l 46 49} {d 50 78} {sil 79 94}]}
{125 [{sil 3 21} {w 22 36} {er 37 54} {l 55 60} {d 61 67} {g 68 78} {v 79 113} {sil 114 118}]}

normalised results =
{72 [{sil 0 10} {w 15 28} {er 29 42} {l 43 43} {d 47 53} {v 54 74} {ch 75 88} {sil 89 89}]}
{80 [{sil 0 11} {w 15 28} {er 29 41} {sh 43 43} {g 46 53} {v 54 75} {sh 76 86} {sil 88 93}]}
{91 [{sil 0 2} {p 3 12} {sil 13 13} {w 16 29} {er 30 42} {l 43 46} {d 47 74} {sil 75 88}]}
{105 [{sil 0 2} {p 3 11} {sil 12 15} {w 16 29} {er 30 43} {l 44 47} {d 48 74} {sil 75 90}]}
{125 [{sil 3 21} {w 18 29} {er 30 43} {l 44 48} {d 49 54} {g 54 62} {v 63 90} {sil 91 94}]}

ruleAligned = [{{w 0} [{0 1} {1 1} {2 3} {3 3} {4 1}]} {{er 0} [{0 2} {1 2} {2 4} {3 4} {4 2}]} {{l 1} [{2 5} {3 5} {4 3}]} {{d 0} [{0 4} {2 6} {3 6} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {w 15 28} {er 29 42} {l 43 43} {d 47 53} {v 54 74} {ch 75 88} {sil 89 89}]}
{80 [{sil 0 0} {w 15 28} {er 29 41} {sh 43 43} {g 46 53} {v 54 75} {sh 76 86} {sil 88 88}]}
{91 [{sil 0 0} {p 3 3} {sil 13 13} {w 16 29} {er 30 42} {l 43 46} {d 47 74} {sil 75 75}]}
{105 [{sil 0 0} {p 3 3} {sil 12 12} {w 16 29} {er 30 43} {l 44 47} {d 48 74} {sil 75 75}]}
{125 [{sil 3 3} {w 18 29} {er 30 43} {l 44 48} {d 49 54} {g 54 62} {v 63 90} {sil 91 91}]}

timeAligned = [{{w 16 29} [{0 1} {1 1} {2 3} {3 3} {4 1}]} {{er 30 42} [{0 2} {1 2} {2 4} {3 4} {4 2}]} {{d 48 54} [{0 4} {2 6} {3 6} {4 4}]} {{v 63 74} [{0 5} {1 5} {4 6}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 28
i, iTime, newITime, timeStartFrom = 2 1 -1 41
i, iTime, newITime, timeStartFrom = 3 1 2 41
combinedVerdict    = [{w 0} {er 0} {l 2} {d 0} {v 3}]
ruleAlignedVerdict = [{w 0} {er 0} {l 1} {d 0}]

score->
+1 for w
+1 for er
-1 for l
+1 for d
-1 for v
score<-: 1
bestResult = {1 [{w 0} {er 0} {l 2} {d 0} {v 3}] [w er l d]}
testPronounce w good er good l missing d good v surprise
publish->
phonsToAlphas = [{[w] w} {[er] or} {[l] l} {[d] d}]
getVerdict<-:new {w [w] 0}
getVerdict<-:new {or [er] 0}
getVerdict<-:new {l [l] 2}
getVerdict<-:new {d [d] 0}
lettersVerdicts = [{w [w] 0} {or [er] 0} {l [l] 2} {d [d] 0} {v [v] 3}]
publish<-
Total: 240.842018ms
{
  "results": [
    {
      "letters": "w",
      "phonemes": "w",
      "verdict": "good"
    },
    {
      "letters": "or",
      "phonemes": "ɜɹ",
      "verdict": "good"
    },
    {
      "letters": "l",
      "phonemes": "l",
      "verdict": "missing"
    },
    {
      "letters": "d",
      "phonemes": "d",
      "verdict": "good"
    },
    {
      "letters": "v",
      "phonemes": "v",
      "verdict": "surprise"
    }
  ],
  "err": null
}
