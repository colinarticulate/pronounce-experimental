
 length of audio =  2.204438



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.78 0.9 1.6800000000000002

 start3, duration3, end3 =  0.9 0.72 1.62

 Initial start, duration, end =  0.68 1 1.6800000000000002

 Cut at: start, duration =  0.68 1.45     guard_end =  2.13 

Running scan for frate = 125
Considering guard n with value 3 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard y with value 7.199999999999999 for l ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 1.4 for m ...
candidateGuards = map[ch:true]
Picking guard, ch


frate, target rule = 125 public <climb> = (((sil [((p <any_Cx_k_p_b>) | (<any_Cx_k_p_b> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]) | (sil b (sil [((p <any_Cx_k_p_b>) | (<any_Cx_k_p_b> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]))) (([(<any_Cx_n_b_p_k_l> n)] | [(n <any_Cx_n_b_p_k_l>)]) (k | ((<any_Cx_n_b_p_k_l> n) | (n <any_Cx_n_b_p_k_l>)))) (([(<any_Cx_y_n_l_k> y)] | [(y <any_Cx_y_n_l_k>)]) (l | ((<any_Cx_y_n_l> y) | (y <any_Cx_y_n_l>)))) ((([(<any_Vx_sh_y_ay_noSlide> sh)] | [(sh <any_Vx_sh_y_ay_noSlide>)]) ([(<any_Cx_sh_y_m_l> sh)] | [(sh <any_Cx_sh_y_m_l>)])) (ay | ((<any_Vx_sh_y_ay_noSlide> sh) | (sh <any_Vx_sh_y_ay_noSlide>)))) (([(<any_Cx_ch_sh_m> ch)] | [(ch <any_Cx_ch_sh_m>)]) (m | ((<any_Cx_ch_sh_m> ch) | (ch <any_Cx_ch_sh_m>)))) (([(<any_vowel_noSlide> l)] | [(l <any_vowel_noSlide>)]) ([(<any_Cx_ch_m_l> l)] | [(l <any_Cx_ch_m_l>)]) sil))
Running scan for frate = 105
Considering guard n with value 3 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard y with value 7.199999999999999 for l ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 1.4 for m ...
candidateGuards = map[ch:true]
Picking guard, ch


frate, target rule = 105 public <climb> = (((sil [((p <any_Cx_k_p_b>) | (<any_Cx_k_p_b> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]) | (sil b (sil [((p <any_Cx_k_p_b>) | (<any_Cx_k_p_b> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]))) (([(<any_Cx_n_b_p_k_l> n)] | [(n <any_Cx_n_b_p_k_l>)]) (k | ((<any_Cx_n_b_p_k_l> n) | (n <any_Cx_n_b_p_k_l>)))) (([(<any_Cx_y_n_l_k> y)] | [(y <any_Cx_y_n_l_k>)]) (l | ((<any_Cx_y_n_l> y) | (y <any_Cx_y_n_l>)))) ((([(<any_Vx_sh_y_ay_noSlide> sh)] | [(sh <any_Vx_sh_y_ay_noSlide>)]) ([(<any_Cx_sh_y_m_l> sh)] | [(sh <any_Cx_sh_y_m_l>)])) (ay | ((<any_Vx_sh_y_ay_noSlide> sh) | (sh <any_Vx_sh_y_ay_noSlide>)))) (([(<any_Cx_ch_sh_m> ch)] | [(ch <any_Cx_ch_sh_m>)]) (m | ((<any_Cx_ch_sh_m> ch) | (ch <any_Cx_ch_sh_m>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_ch_m_thr> thr)] | [(thr <any_Cx_ch_m_thr>)]) sil))
Running scan for frate = 91
Considering guard n with value 3 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard y with value 7.199999999999999 for l ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 1.4 for m ...
candidateGuards = map[ch:true]
Picking guard, ch


frate, target rule = 91 public <climb> = (((sil [((p <any_Cx_k_p_b>) | (<any_Cx_k_p_b> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]) | (sil b (sil [((p <any_Cx_k_p_b>) | (<any_Cx_k_p_b> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]))) (([(<any_Cx_n_b_p_k_l> n)] | [(n <any_Cx_n_b_p_k_l>)]) (k | ((<any_Cx_n_b_p_k_l> n) | (n <any_Cx_n_b_p_k_l>)))) (([(<any_Cx_y_n_l_k> y)] | [(y <any_Cx_y_n_l_k>)]) (l | ((<any_Cx_y_n_l> y) | (y <any_Cx_y_n_l>)))) ((([(<any_Vx_sh_y_ay_noSlide> sh)] | [(sh <any_Vx_sh_y_ay_noSlide>)]) ([(<any_Cx_sh_y_m_l> sh)] | [(sh <any_Cx_sh_y_m_l>)])) (ay | ((<any_Vx_sh_y_ay_noSlide> sh) | (sh <any_Vx_sh_y_ay_noSlide>)))) (([(<any_Cx_ch_sh_m> ch)] | [(ch <any_Cx_ch_sh_m>)]) (m | ((<any_Cx_ch_sh_m> ch) | (ch <any_Cx_ch_sh_m>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_ch_m_b> b)] | [(b <any_Cx_ch_m_b>)]) sil))
Running scan for frate = 80
Considering guard n with value 3 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard y with value 7.199999999999999 for l ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 1.4 for m ...
candidateGuards = map[ch:true]
Picking guard, ch


frate, target rule = 80 public <climb> = (((sil [((t <any_Cx_k_t_b>) | (<any_Cx_k_t_b> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil b (sil [((t <any_Cx_k_t_b>) | (<any_Cx_k_t_b> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_n_b_t_k_l> n)] | [(n <any_Cx_n_b_t_k_l>)]) (k | ((<any_Cx_n_b_t_k_l> n) | (n <any_Cx_n_b_t_k_l>)))) (([(<any_Cx_y_n_l_k> y)] | [(y <any_Cx_y_n_l_k>)]) (l | ((<any_Cx_y_n_l> y) | (y <any_Cx_y_n_l>)))) ((([(<any_Vx_sh_y_ay_noSlide> sh)] | [(sh <any_Vx_sh_y_ay_noSlide>)]) ([(<any_Cx_sh_y_m_l> sh)] | [(sh <any_Cx_sh_y_m_l>)])) (ay | ((<any_Vx_sh_y_ay_noSlide> sh) | (sh <any_Vx_sh_y_ay_noSlide>)))) (([(<any_Cx_ch_sh_m> ch)] | [(ch <any_Cx_ch_sh_m>)]) (m | ((<any_Cx_ch_sh_m> ch) | (ch <any_Cx_ch_sh_m>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_ch_m_thr> thr)] | [(thr <any_Cx_ch_m_thr>)]) sil))
Running scan for frate = 72
Considering guard n with value 3 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard y with value 7.199999999999999 for l ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 1.4 for m ...
candidateGuards = map[ch:true]
Picking guard, ch


frate, target rule = 72 public <climb> = (((sil [((d <any_Cx_k_d_b>) | (<any_Cx_k_d_b> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil b (sil [((d <any_Cx_k_d_b>) | (<any_Cx_k_d_b> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_n_b_d_k_l> n)] | [(n <any_Cx_n_b_d_k_l>)]) (k | ((<any_Cx_n_b_d_k_l> n) | (n <any_Cx_n_b_d_k_l>)))) (([(<any_Cx_y_n_l_k> y)] | [(y <any_Cx_y_n_l_k>)]) (l | ((<any_Cx_y_n_l> y) | (y <any_Cx_y_n_l>)))) ((([(<any_Vx_sh_y_ay_noSlide> sh)] | [(sh <any_Vx_sh_y_ay_noSlide>)]) ([(<any_Cx_sh_y_m_l> sh)] | [(sh <any_Cx_sh_y_m_l>)])) (ay | ((<any_Vx_sh_y_ay_noSlide> sh) | (sh <any_Vx_sh_y_ay_noSlide>)))) (([(<any_Cx_ch_sh_m> ch)] | [(ch <any_Cx_ch_sh_m>)]) (m | ((<any_Cx_ch_sh_m> ch) | (ch <any_Cx_ch_sh_m>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_ch_m_d> d)] | [(d <any_Cx_ch_m_d>)]) sil))
Running scan for frate = 125
Considering guard z with value 1 for kl ...
Considering guard zh with value 1 for kl ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard zh with value 2.4000000000000004 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 1.4 for m ...
candidateGuards = map[ch:true]
Picking guard, ch


frate, target rule = 125 public <climb> = (((sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_z_p_z_kl> z)] | [(z <any_Cx_z_p_z_kl>)]) (kl | ((<any_Cx_z_p_z_kl> z) | (z <any_Cx_z_p_z_kl>)))) ((([(<any_Vx_zh_z_ay_noSlide> zh)] | [(zh <any_Vx_zh_z_ay_noSlide>)]) ([(<any_Cx_zh_z_m_kl> zh)] | [(zh <any_Cx_zh_z_m_kl>)])) (ay | ((<any_Vx_zh_z_ay_noSlide> zh) | (zh <any_Vx_zh_z_ay_noSlide>)))) (([(<any_Cx_ch_zh_m> ch)] | [(ch <any_Cx_ch_zh_m>)]) (m | ((<any_Cx_ch_zh_m> ch) | (ch <any_Cx_ch_zh_m>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_ch_m_b> b)] | [(b <any_Cx_ch_m_b>)]) sil))
Running scan for frate = 105
Considering guard zh with value 1 for kl ...
Considering guard z with value 1 for kl ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard zh with value 2.4000000000000004 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 1.4 for m ...
candidateGuards = map[ch:true]
Picking guard, ch


frate, target rule = 105 public <climb> = (((sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_kl> zh)] | [(zh <any_Cx_zh_p_z_kl>)]) (kl | ((<any_Cx_zh_p_z_kl> zh) | (zh <any_Cx_zh_p_z_kl>)))) ((([(<any_Vx_zh_zh_ay_noSlide> zh)] | [(zh <any_Vx_zh_zh_ay_noSlide>)]) ([(<any_Cx_zh_zh_m_kl> zh)] | [(zh <any_Cx_zh_zh_m_kl>)])) (ay | ((<any_Vx_zh_zh_ay_noSlide> zh) | (zh <any_Vx_zh_zh_ay_noSlide>)))) (([(<any_Cx_ch_zh_m> ch)] | [(ch <any_Cx_ch_zh_m>)]) (m | ((<any_Cx_ch_zh_m> ch) | (ch <any_Cx_ch_zh_m>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_ch_m_v> v)] | [(v <any_Cx_ch_m_v>)]) sil))
Running scan for frate = 91
Considering guard zh with value 1 for kl ...
Considering guard z with value 1 for kl ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard zh with value 2.4000000000000004 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 1.4 for m ...
candidateGuards = map[ch:true]
Picking guard, ch


frate, target rule = 91 public <climb> = (((sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_kl> zh)] | [(zh <any_Cx_zh_p_z_kl>)]) (kl | ((<any_Cx_zh_p_z_kl> zh) | (zh <any_Cx_zh_p_z_kl>)))) ((([(<any_Vx_zh_zh_ay_noSlide> zh)] | [(zh <any_Vx_zh_zh_ay_noSlide>)]) ([(<any_Cx_zh_zh_m_kl> zh)] | [(zh <any_Cx_zh_zh_m_kl>)])) (ay | ((<any_Vx_zh_zh_ay_noSlide> zh) | (zh <any_Vx_zh_zh_ay_noSlide>)))) (([(<any_Cx_ch_zh_m> ch)] | [(ch <any_Cx_ch_zh_m>)]) (m | ((<any_Cx_ch_zh_m> ch) | (ch <any_Cx_ch_zh_m>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_ch_m_b> b)] | [(b <any_Cx_ch_m_b>)]) sil))
Running scan for frate = 80
Considering guard zh with value 1 for kl ...
Considering guard z with value 1 for kl ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard zh with value 2.4000000000000004 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 1.4 for m ...
candidateGuards = map[ch:true]
Picking guard, ch


frate, target rule = 80 public <climb> = (((sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_kl> zh)] | [(zh <any_Cx_zh_p_z_kl>)]) (kl | ((<any_Cx_zh_p_z_kl> zh) | (zh <any_Cx_zh_p_z_kl>)))) ((([(<any_Vx_zh_zh_ay_noSlide> zh)] | [(zh <any_Vx_zh_zh_ay_noSlide>)]) ([(<any_Cx_zh_zh_m_kl> zh)] | [(zh <any_Cx_zh_zh_m_kl>)])) (ay | ((<any_Vx_zh_zh_ay_noSlide> zh) | (zh <any_Vx_zh_zh_ay_noSlide>)))) (([(<any_Cx_ch_zh_m> ch)] | [(ch <any_Cx_ch_zh_m>)]) (m | ((<any_Cx_ch_zh_m> ch) | (ch <any_Cx_ch_zh_m>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_ch_m_b> b)] | [(b <any_Cx_ch_m_b>)]) sil))
Running scan for frate = 72
Considering guard zh with value 1 for kl ...
Considering guard z with value 1 for kl ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard zh with value 2.4000000000000004 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 1.4 for m ...
candidateGuards = map[ch:true]
Picking guard, ch


frate, target rule = 72 public <climb> = (((sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_kl> zh)] | [(zh <any_Cx_zh_p_z_kl>)]) (kl | ((<any_Cx_zh_p_z_kl> zh) | (zh <any_Cx_zh_p_z_kl>)))) ((([(<any_Vx_zh_zh_ay_noSlide> zh)] | [(zh <any_Vx_zh_zh_ay_noSlide>)]) ([(<any_Cx_zh_zh_m_kl> zh)] | [(zh <any_Cx_zh_zh_m_kl>)])) (ay | ((<any_Vx_zh_zh_ay_noSlide> zh) | (zh <any_Vx_zh_zh_ay_noSlide>)))) (([(<any_Cx_ch_zh_m> ch)] | [(ch <any_Cx_ch_zh_m>)]) (m | ((<any_Cx_ch_zh_m> ch) | (ch <any_Cx_ch_zh_m>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_ch_m_thr> thr)] | [(thr <any_Cx_ch_m_thr>)]) sil))

results =
{72 [{sil 74 76} {k 77 79} {l 80 82} {ay 83 85} {m 86 88} {sil 89 99}]}
{80 [{sil 82 85} {k 86 88} {l 89 91} {ay 92 94} {m 95 97} {sil 98 109}]}
{91 [{sil 0 13} {k 14 27} {l 28 30} {ay 31 55} {m 56 79} {sil 80 130}]}
{105 [{sil 0 16} {k 17 31} {l 32 34} {ay 35 64} {m 65 91} {sil 92 151}]}
{125 [{sil 3 21} {k 22 38} {l 39 41} {ay 42 77} {m 78 108} {sil 109 181}]}

normalised results =
{72 [{sil 74 76} {k 107 107} {l 111 111} {ay 115 115} {m 119 119} {sil 124 138}]}
{80 [{sil 82 85} {k 108 108} {l 111 111} {ay 115 115} {m 119 119} {sil 123 136}]}
{91 [{sil 0 13} {k 15 30} {l 31 31} {ay 34 60} {m 62 87} {sil 88 143}]}
{105 [{sil 0 16} {k 16 30} {l 30 30} {ay 33 61} {m 62 87} {sil 88 144}]}
{125 [{sil 3 21} {k 18 30} {l 31 31} {ay 34 62} {m 62 86} {sil 87 145}]}

ruleAligned = [{{k 1} [{2 1} {3 1} {4 1}]} {{l 2} []} {{ay 1} [{2 3} {3 3} {4 3}]} {{m 1} [{2 4} {3 4} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 74 74} {k 107 107} {l 111 111} {ay 115 115} {m 119 119} {sil 124 124}]}
{80 [{sil 82 82} {k 108 108} {l 111 111} {ay 115 115} {m 119 119} {sil 123 123}]}
{91 [{sil 0 0} {k 15 30} {l 31 31} {ay 34 60} {m 62 87} {sil 88 88}]}
{105 [{sil 0 0} {k 16 30} {l 30 30} {ay 33 61} {m 62 87} {sil 88 88}]}
{125 [{sil 3 3} {k 18 30} {l 31 31} {ay 34 62} {m 62 86} {sil 87 87}]}

timeAligned = [{{k 18 30} [{2 1} {3 1} {4 1}]} {{ay 34 60} [{2 3} {3 3} {4 3}]} {{m 62 86} [{2 4} {3 4} {4 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 -1 30
i, iTime, newITime, timeStartFrom = 2 0 1 30
i, iTime, newITime, timeStartFrom = 3 1 2 60
combinedVerdict    = [{k 1} {l 2} {ay 1} {m 1}]
ruleAlignedVerdict = [{k 1} {l 2} {ay 1} {m 1}]

score->
+1 for k
-1 for l
+1 for ay
+1 for m
score<-: 2

results =
{72 [{sil 74 76} {kl 77 79} {ay 80 82} {m 83 85} {sil 86 99}]}
{80 [{sil 82 84} {kl 85 87} {ay 88 90} {m 91 93} {sil 94 109}]}
{91 [{sil 0 16} {kl 17 28} {ay 29 55} {m 56 79} {sil 80 130}]}
{105 [{sil 0 18} {kl 19 33} {ay 34 64} {m 65 91} {sil 92 151}]}
{125 [{sil 3 27} {z 28 32} {hh 33 40} {ay 41 77} {m 78 108} {sil 109 181}]}

normalised results =
{72 [{sil 74 76} {kl 107 107} {ay 111 111} {m 115 115} {sil 119 138}]}
{80 [{sil 82 84} {kl 106 106} {ay 110 110} {m 114 114} {sil 118 136}]}
{91 [{sil 0 16} {kl 19 31} {ay 32 60} {m 62 87} {sil 88 143}]}
{105 [{sil 0 18} {kl 18 31} {ay 32 61} {m 62 87} {sil 88 144}]}
{125 [{sil 3 27} {z 22 26} {hh 26 32} {ay 33 62} {m 62 86} {sil 87 145}]}

ruleAligned = [{{kl 2} [{2 1} {3 1}]} {{ay 1} [{2 2} {3 2} {4 3}]} {{m 1} [{2 3} {3 3} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 74 74} {kl 107 107} {ay 111 111} {m 115 115} {sil 119 119}]}
{80 [{sil 82 82} {kl 106 106} {ay 110 110} {m 114 114} {sil 118 118}]}
{91 [{sil 0 0} {kl 19 31} {ay 32 60} {m 62 87} {sil 88 88}]}
{105 [{sil 0 0} {kl 18 31} {ay 32 61} {m 62 87} {sil 88 88}]}
{125 [{sil 3 3} {z 22 22} {hh 26 32} {ay 33 62} {m 62 86} {sil 87 87}]}

timeAligned = [{{ay 33 60} [{2 2} {3 2} {4 3}]} {{m 62 86} [{2 3} {3 3} {4 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 -1 0
i, iTime, newITime, timeStartFrom = 1 0 0 0
i, iTime, newITime, timeStartFrom = 2 0 1 60
combinedVerdict    = [{kl 2} {ay 1} {m 1}]
ruleAlignedVerdict = [{kl 2} {ay 1} {m 1}]

score->
-1 for kl
+1 for ay
+1 for m
score<-: 1
bestResult = {2 [{k 1} {l 2} {ay 1} {m 1}] [k l ay m]}
testPronounce k possible l missing ay possible m possible
publish->
phonsToAlphas = [{[k] c} {[l] l} {[ay] i} {[m] mb}]
getVerdict<-:new {c [k] 1}
getVerdict<-:new {l [l] 2}
getVerdict<-:new {i [ay] 1}
getVerdict<-:new {mb [m] 1}
lettersVerdicts = [{c [k] 1} {l [l] 2} {i [ay] 1} {mb [m] 1}]
publish<-
{
  "results": [
    {
      "letters": "c",
      "phonemes": "k",
      "verdict": "possible"
    },
    {
      "letters": "l",
      "phonemes": "l",
      "verdict": "missing"
    },
    {
      "letters": "i",
      "phonemes": "ɑɪ",
      "verdict": "possible"
    },
    {
      "letters": "mb",
      "phonemes": "m",
      "verdict": "possible"
    }
  ],
  "err": null
}
