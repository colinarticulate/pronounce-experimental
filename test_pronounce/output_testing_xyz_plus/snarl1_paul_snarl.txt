
 length of audio =  1.346375



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.28 1.06 1.34

 start3, duration3, end3 =  0.4600000000000001 0.72 1.1800000000000002

 Initial start, duration, end =  0.18000000000000002 1.1600000000000001 1.34

 Cut at: start, duration =  0.18000000000000002 1.1463750000000001     guard_end =  1.326375 

Running scan for frate = 125
Considering guard b with value 3.4000000000000004 for s ...
candidateGuards = map[b:true]
Picking guard, b

Considering guard b with value 6.800000000000001 for n ...
candidateGuards = map[b:true]
Picking guard, b

Considering guard sh with value 1.6 for aa ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 125 public <snarl> = (((sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]) | (sil p (sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]))) (([(<any_Cx_b_p_th_s_n> b)] | [(b <any_Cx_b_p_th_s_n>)]) (s | z | ((<any_Cx_b_p_th_s_n> b) | (b <any_Cx_b_p_th_s_n>)))) (([(<any_Cx_b_b_n_s> b)] | [(b <any_Cx_b_b_n_s>)]) (n | ((<any_Cx_b_b_n> b) | (b <any_Cx_b_b_n>)))) ((([(<any_Vx_sh_b_aa_noSlide> sh)] | [(sh <any_Vx_sh_b_aa_noSlide>)]) ([(<any_Cx_sh_b_l_n> sh)] | [(sh <any_Cx_sh_b_l_n>)])) (aa | ((<any_Vx_sh_b_aa_noSlide> sh) | (sh <any_Vx_sh_b_aa_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) (([(<any_vowel_noSlide> r)] | [(r <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_r> r)] | [(r <any_Cx_sh_l_r>)]) sil))
Running scan for frate = 105
Considering guard b with value 3.4000000000000004 for s ...
candidateGuards = map[b:true]
Picking guard, b

Considering guard b with value 6.800000000000001 for n ...
candidateGuards = map[b:true]
Picking guard, b

Considering guard sh with value 1.6 for aa ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 105 public <snarl> = (((sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil p (sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_b_p_sh_s_n> b)] | [(b <any_Cx_b_p_sh_s_n>)]) (s | z | ((<any_Cx_b_p_sh_s_n> b) | (b <any_Cx_b_p_sh_s_n>)))) (([(<any_Cx_b_b_n_s> b)] | [(b <any_Cx_b_b_n_s>)]) (n | ((<any_Cx_b_b_n> b) | (b <any_Cx_b_b_n>)))) ((([(<any_Vx_sh_b_aa_noSlide> sh)] | [(sh <any_Vx_sh_b_aa_noSlide>)]) ([(<any_Cx_sh_b_l_n> sh)] | [(sh <any_Cx_sh_b_l_n>)])) (aa | ((<any_Vx_sh_b_aa_noSlide> sh) | (sh <any_Vx_sh_b_aa_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_thr> thr)] | [(thr <any_Cx_sh_l_thr>)]) sil))
Running scan for frate = 91
Considering guard b with value 3.4000000000000004 for s ...
candidateGuards = map[b:true]
Picking guard, b

Considering guard b with value 6.800000000000001 for n ...
candidateGuards = map[b:true]
Picking guard, b

Considering guard sh with value 1.6 for aa ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 91 public <snarl> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_b_p_ch_s_n> b)] | [(b <any_Cx_b_p_ch_s_n>)]) (s | z | ((<any_Cx_b_p_ch_s_n> b) | (b <any_Cx_b_p_ch_s_n>)))) (([(<any_Cx_b_b_n_s> b)] | [(b <any_Cx_b_b_n_s>)]) (n | ((<any_Cx_b_b_n> b) | (b <any_Cx_b_b_n>)))) ((([(<any_Vx_sh_b_aa_noSlide> sh)] | [(sh <any_Vx_sh_b_aa_noSlide>)]) ([(<any_Cx_sh_b_l_n> sh)] | [(sh <any_Cx_sh_b_l_n>)])) (aa | ((<any_Vx_sh_b_aa_noSlide> sh) | (sh <any_Vx_sh_b_aa_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_f> f)] | [(f <any_Cx_sh_l_f>)]) sil))
Running scan for frate = 80
Considering guard b with value 3.4000000000000004 for s ...
candidateGuards = map[b:true]
Picking guard, b

Considering guard b with value 6.800000000000001 for n ...
candidateGuards = map[b:true]
Picking guard, b

Considering guard sh with value 1.6 for aa ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 80 public <snarl> = (((sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_b_p_z_s_n> b)] | [(b <any_Cx_b_p_z_s_n>)]) (s | z | ((<any_Cx_b_p_z_s_n> b) | (b <any_Cx_b_p_z_s_n>)))) (([(<any_Cx_b_b_n_s> b)] | [(b <any_Cx_b_b_n_s>)]) (n | ((<any_Cx_b_b_n> b) | (b <any_Cx_b_b_n>)))) ((([(<any_Vx_sh_b_aa_noSlide> sh)] | [(sh <any_Vx_sh_b_aa_noSlide>)]) ([(<any_Cx_sh_b_l_n> sh)] | [(sh <any_Cx_sh_b_l_n>)])) (aa | ((<any_Vx_sh_b_aa_noSlide> sh) | (sh <any_Vx_sh_b_aa_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) (([(<any_vowel_noSlide> w)] | [(w <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_w> w)] | [(w <any_Cx_sh_l_w>)]) sil))
Running scan for frate = 72
Considering guard b with value 3.4000000000000004 for s ...
candidateGuards = map[b:true]
Picking guard, b

Considering guard b with value 6.800000000000001 for n ...
candidateGuards = map[b:true]
Picking guard, b

Considering guard sh with value 1.6 for aa ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 72 public <snarl> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_b_p_ch_s_n> b)] | [(b <any_Cx_b_p_ch_s_n>)]) (s | z | ((<any_Cx_b_p_ch_s_n> b) | (b <any_Cx_b_p_ch_s_n>)))) (([(<any_Cx_b_b_n_s> b)] | [(b <any_Cx_b_b_n_s>)]) (n | ((<any_Cx_b_b_n> b) | (b <any_Cx_b_b_n>)))) ((([(<any_Vx_sh_b_aa_noSlide> sh)] | [(sh <any_Vx_sh_b_aa_noSlide>)]) ([(<any_Cx_sh_b_l_n> sh)] | [(sh <any_Cx_sh_b_l_n>)])) (aa | ((<any_Vx_sh_b_aa_noSlide> sh) | (sh <any_Vx_sh_b_aa_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) (([(<any_vowel_noSlide> r)] | [(r <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_r> r)] | [(r <any_Cx_sh_l_r>)]) sil))

results =
{72 [{sil 0 8} {s 9 27} {n 28 31} {aa 32 52} {l 53 62} {sil 63 72}]}
{80 [{sil 0 9} {s 10 30} {n 31 34} {aa 35 59} {l 60 68} {sil 69 77}]}
{91 [{sil 0 11} {s 12 35} {n 36 39} {aa 40 67} {l 68 83} {sil 84 103}]}
{105 [{sil 0 14} {s 15 41} {n 42 45} {aa 46 78} {l 79 96} {sil 97 115}]}
{125 [{sil 3 19} {s 20 50} {n 51 55} {aa 56 93} {l 94 113} {sil 114 139}]}

normalised results =
{72 [{sil 0 8} {s 13 38} {n 39 43} {aa 44 72} {l 74 86} {sil 88 100}]}
{80 [{sil 0 9} {s 13 38} {n 39 43} {aa 44 74} {l 75 85} {sil 86 96}]}
{91 [{sil 0 11} {s 13 38} {n 40 43} {aa 44 74} {l 75 91} {sil 92 113}]}
{105 [{sil 0 14} {s 14 39} {n 40 43} {aa 44 74} {l 75 91} {sil 92 110}]}
{125 [{sil 3 19} {s 16 40} {n 41 44} {aa 45 74} {l 75 90} {sil 91 111}]}

ruleAligned = [{{s 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{n 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{aa 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{l 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {s 13 38} {n 39 43} {aa 44 72} {l 74 86} {sil 88 88}]}
{80 [{sil 0 0} {s 13 38} {n 39 43} {aa 44 74} {l 75 85} {sil 86 86}]}
{91 [{sil 0 0} {s 13 38} {n 40 43} {aa 44 74} {l 75 91} {sil 92 92}]}
{105 [{sil 0 0} {s 14 39} {n 40 43} {aa 44 74} {l 75 91} {sil 92 92}]}
{125 [{sil 3 3} {s 16 40} {n 41 44} {aa 45 74} {l 75 90} {sil 91 91}]}

timeAligned = [{{s 13 38} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{n 40 43} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{aa 44 74} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{l 75 90} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 38
i, iTime, newITime, timeStartFrom = 2 1 2 43
i, iTime, newITime, timeStartFrom = 3 2 3 72
combinedVerdict    = [{s 0} {n 0} {aa 0} {l 0}]
ruleAlignedVerdict = [{s 0} {n 0} {aa 0} {l 0}]

score->
+1 for s
+1 for n
+1 for aa
+1 for l
score<-: 9
testPronounce s good n good aa good l good
publish->
phonsToAlphas = [{[s] s} {[n] n} {[aa] ar} {[l] l}]
getVerdict<-:new {s [s] 0}
getVerdict<-:new {n [n] 0}
getVerdict<-:new {ar [aa] 0}
getVerdict<-:new {l [l] 0}
lettersVerdicts = [{s [s] 0} {n [n] 0} {ar [aa] 0} {l [l] 0}]
publish<-
Total: 214.329249ms
{
  "results": [
    {
      "letters": "s",
      "phonemes": "s",
      "verdict": "good"
    },
    {
      "letters": "n",
      "phonemes": "n",
      "verdict": "good"
    },
    {
      "letters": "ar",
      "phonemes": "É‘",
      "verdict": "good"
    },
    {
      "letters": "l",
      "phonemes": "l",
      "verdict": "good"
    }
  ],
  "err": null
}
