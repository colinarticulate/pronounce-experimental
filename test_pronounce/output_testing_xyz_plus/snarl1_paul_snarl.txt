
 length of audio =  1.346375



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.26 1.08 1.34

 start3, duration3, end3 =  0.4600000000000001 0.72 1.1800000000000002

 Initial start, duration, end =  0.16 1.1800000000000002 1.34

 Cut at: start, duration =  0.16 1.1663750000000002     guard_end =  1.326375 

Running scan for frate = 125
Considering guard b with value 3.4000000000000004 for s ...
candidateGuards = map[b:true]
Picking guard, b

Considering guard b with value 6.800000000000001 for n ...
candidateGuards = map[b:true]
Picking guard, b

Considering guard sh with value 1.6 for aa ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 125 public <snarl> = (((sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_b_p_z_s_n> b)] | [(b <any_Cx_b_p_z_s_n>)]) (s | z | ((<any_Cx_b_p_z_s_n> b) | (b <any_Cx_b_p_z_s_n>)))) (([(<any_Cx_b_b_n_s> b)] | [(b <any_Cx_b_b_n_s>)]) (n | ((<any_Cx_b_b_n> b) | (b <any_Cx_b_b_n>)))) ((([(<any_Vx_sh_b_aa_noSlide> sh)] | [(sh <any_Vx_sh_b_aa_noSlide>)]) ([(<any_Cx_sh_b_l_n> sh)] | [(sh <any_Cx_sh_b_l_n>)])) (aa | ((<any_Vx_sh_b_aa_noSlide> sh) | (sh <any_Vx_sh_b_aa_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_f> f)] | [(f <any_Cx_sh_l_f>)]) sil))
Running scan for frate = 105
Considering guard b with value 3.4000000000000004 for s ...
candidateGuards = map[b:true]
Picking guard, b

Considering guard b with value 6.800000000000001 for n ...
candidateGuards = map[b:true]
Picking guard, b

Considering guard sh with value 1.6 for aa ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 105 public <snarl> = (((sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil p (sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_b_p_sh_s_n> b)] | [(b <any_Cx_b_p_sh_s_n>)]) (s | z | ((<any_Cx_b_p_sh_s_n> b) | (b <any_Cx_b_p_sh_s_n>)))) (([(<any_Cx_b_b_n_s> b)] | [(b <any_Cx_b_b_n_s>)]) (n | ((<any_Cx_b_b_n> b) | (b <any_Cx_b_b_n>)))) ((([(<any_Vx_sh_b_aa_noSlide> sh)] | [(sh <any_Vx_sh_b_aa_noSlide>)]) ([(<any_Cx_sh_b_l_n> sh)] | [(sh <any_Cx_sh_b_l_n>)])) (aa | ((<any_Vx_sh_b_aa_noSlide> sh) | (sh <any_Vx_sh_b_aa_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_f> f)] | [(f <any_Cx_sh_l_f>)]) sil))
Running scan for frate = 91
Considering guard b with value 3.4000000000000004 for s ...
candidateGuards = map[b:true]
Picking guard, b

Considering guard b with value 6.800000000000001 for n ...
candidateGuards = map[b:true]
Picking guard, b

Considering guard sh with value 1.6 for aa ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 91 public <snarl> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_b_p_ch_s_n> b)] | [(b <any_Cx_b_p_ch_s_n>)]) (s | z | ((<any_Cx_b_p_ch_s_n> b) | (b <any_Cx_b_p_ch_s_n>)))) (([(<any_Cx_b_b_n_s> b)] | [(b <any_Cx_b_b_n_s>)]) (n | ((<any_Cx_b_b_n> b) | (b <any_Cx_b_b_n>)))) ((([(<any_Vx_sh_b_aa_noSlide> sh)] | [(sh <any_Vx_sh_b_aa_noSlide>)]) ([(<any_Cx_sh_b_l_n> sh)] | [(sh <any_Cx_sh_b_l_n>)])) (aa | ((<any_Vx_sh_b_aa_noSlide> sh) | (sh <any_Vx_sh_b_aa_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_thr> thr)] | [(thr <any_Cx_sh_l_thr>)]) sil))
Running scan for frate = 80
Considering guard b with value 3.4000000000000004 for s ...
candidateGuards = map[b:true]
Picking guard, b

Considering guard b with value 6.800000000000001 for n ...
candidateGuards = map[b:true]
Picking guard, b

Considering guard sh with value 1.6 for aa ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 80 public <snarl> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_b_p_ch_s_n> b)] | [(b <any_Cx_b_p_ch_s_n>)]) (s | z | ((<any_Cx_b_p_ch_s_n> b) | (b <any_Cx_b_p_ch_s_n>)))) (([(<any_Cx_b_b_n_s> b)] | [(b <any_Cx_b_b_n_s>)]) (n | ((<any_Cx_b_b_n> b) | (b <any_Cx_b_b_n>)))) ((([(<any_Vx_sh_b_aa_noSlide> sh)] | [(sh <any_Vx_sh_b_aa_noSlide>)]) ([(<any_Cx_sh_b_l_n> sh)] | [(sh <any_Cx_sh_b_l_n>)])) (aa | ((<any_Vx_sh_b_aa_noSlide> sh) | (sh <any_Vx_sh_b_aa_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_f> f)] | [(f <any_Cx_sh_l_f>)]) sil))
Running scan for frate = 72
Considering guard b with value 3.4000000000000004 for s ...
candidateGuards = map[b:true]
Picking guard, b

Considering guard b with value 6.800000000000001 for n ...
candidateGuards = map[b:true]
Picking guard, b

Considering guard sh with value 1.6 for aa ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 72 public <snarl> = (((sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil p (sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_b_p_t_s_n> b)] | [(b <any_Cx_b_p_t_s_n>)]) (s | z | ((<any_Cx_b_p_t_s_n> b) | (b <any_Cx_b_p_t_s_n>)))) (([(<any_Cx_b_b_n_s> b)] | [(b <any_Cx_b_b_n_s>)]) (n | ((<any_Cx_b_b_n> b) | (b <any_Cx_b_b_n>)))) ((([(<any_Vx_sh_b_aa_noSlide> sh)] | [(sh <any_Vx_sh_b_aa_noSlide>)]) ([(<any_Cx_sh_b_l_n> sh)] | [(sh <any_Cx_sh_b_l_n>)])) (aa | ((<any_Vx_sh_b_aa_noSlide> sh) | (sh <any_Vx_sh_b_aa_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_f> f)] | [(f <any_Cx_sh_l_f>)]) sil))

results =
{72 [{sil 0 10} {s 11 28} {n 29 32} {aa 33 54} {l 55 64} {sil 65 73}]}
{80 [{sil 0 11} {s 12 32} {n 33 36} {aa 37 60} {l 61 70} {sil 71 78}]}
{91 [{sil 0 13} {s 14 36} {n 37 41} {aa 42 68} {l 69 85} {sil 86 104}]}
{105 [{sil 0 16} {s 17 43} {n 44 47} {aa 48 80} {l 81 99} {sil 100 117}]}
{125 [{sil 3 20} {s 21 52} {n 53 57} {aa 58 96} {l 97 118} {sil 119 141}]}

normalised results =
{72 [{sil 0 10} {s 15 39} {n 40 44} {aa 46 75} {l 76 89} {sil 90 101}]}
{80 [{sil 0 11} {s 15 40} {n 41 45} {aa 46 75} {l 76 88} {sil 89 98}]}
{91 [{sil 0 13} {s 15 40} {n 41 45} {aa 46 75} {l 76 93} {sil 95 114}]}
{105 [{sil 0 16} {s 16 41} {n 42 45} {aa 46 76} {l 77 94} {sil 95 111}]}
{125 [{sil 3 20} {s 17 42} {n 42 46} {aa 46 77} {l 78 94} {sil 95 113}]}

ruleAligned = [{{s 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{n 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{aa 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{l 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {s 15 39} {n 40 44} {aa 46 75} {l 76 89} {sil 90 90}]}
{80 [{sil 0 0} {s 15 40} {n 41 45} {aa 46 75} {l 76 88} {sil 89 89}]}
{91 [{sil 0 0} {s 15 40} {n 41 45} {aa 46 75} {l 76 93} {sil 95 95}]}
{105 [{sil 0 0} {s 16 41} {n 42 45} {aa 46 76} {l 77 94} {sil 95 95}]}
{125 [{sil 3 3} {s 17 42} {n 42 46} {aa 46 77} {l 78 94} {sil 95 95}]}

timeAligned = [{{s 15 40} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{n 41 45} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{aa 46 75} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{l 76 93} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 39
i, iTime, newITime, timeStartFrom = 2 1 2 44
i, iTime, newITime, timeStartFrom = 3 2 3 75
combinedVerdict    = [{s 0} {n 0} {aa 0} {l 0}]
ruleAlignedVerdict = [{s 0} {n 0} {aa 0} {l 0}]

score->
+1 for s
+1 for n
+1 for aa
+1 for l
score<-: 9
testPronounce s good n good aa good l good
publish->
phonsToAlphas = [{[s] s} {[n] n} {[aa] ar} {[l] l}]
getVerdict<-:new {s [s] 0}
getVerdict<-:new {n [n] 0}
getVerdict<-:new {ar [aa] 0}
getVerdict<-:new {l [l] 0}
lettersVerdicts = [{s [s] 0} {n [n] 0} {ar [aa] 0} {l [l] 0}]
publish<-
{
  "results": [
    {
      "letters": "s",
      "phonemes": "s",
      "verdict": "good"
    },
    {
      "letters": "n",
      "phonemes": "n",
      "verdict": "good"
    },
    {
      "letters": "ar",
      "phonemes": "É‘",
      "verdict": "good"
    },
    {
      "letters": "l",
      "phonemes": "l",
      "verdict": "good"
    }
  ],
  "err": null
}
