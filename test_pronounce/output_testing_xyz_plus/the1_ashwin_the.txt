
 length of audio =  3.562312



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.28 1.2200000000000002 1.5000000000000002

 start3, duration3, end3 =  0.54 0.7 1.24

 Initial start, duration, end =  0.18000000000000002 1.3200000000000003 1.5000000000000002

 Cut at: start, duration =  0.18000000000000002 1.7700000000000002     guard_end =  1.9500000000000002 

Running scan for frate = 125
Considering guard ch with value 3 for dh ...
candidateGuards = map[ch:true]
Picking guard, ch

Running scan for frate = 125
Considering guard ch with value 3 for iy ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard zh with value 1 for dh ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 125 public <the> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ch_p_z_dh> ch)] | [(ch <any_Cx_ch_p_z_dh>)]) (dh | t | ((<any_Cx_ch_p_z_dh> ch) | (ch <any_Cx_ch_p_z_dh>)))) ((([(<any_Vx_ch_ch_iy_noSlide> ch)] | [(ch <any_Vx_ch_ch_iy_noSlide>)]) ([(<any_Cx_ch_ch_dh> ch)] | [(ch <any_Cx_ch_ch_dh>)])) (iy | ((<any_Vx_ch_ch_iy_noSlide> ch) | (ch <any_Vx_ch_ch_iy_noSlide>)))) (([(<any_Cx_ch_iy_n> n)] | [(n <any_Cx_ch_iy_n>)]) ([(<any_Vx_ch_iy_n> n)] | [(n <any_Vx_ch_iy_n>)]) sil))
Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

Running scan for frate = 105
frate, target rule = 125 public <the> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_dh> zh)] | [(zh <any_Cx_zh_p_z_dh>)]) (dh | t | ((<any_Cx_zh_p_z_dh_axr> zh) | (zh <any_Cx_zh_p_z_dh_axr>)))) (([(<any_Cx_zh_zh_axr_dh> zh)] | [(zh <any_Cx_zh_zh_axr_dh>)]) (axr | ((<any_Cx_zh_zh_axr> zh) | (zh <any_Cx_zh_zh_axr>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_f> f)] | [(f <any_Cx_zh_axr_f>)]) sil))
Considering guard ch with value 3 for dh ...
candidateGuards = map[ch:true]
Picking guard, ch

Running scan for frate = 105
Considering guard ch with value 3 for iy ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard zh with value 1 for dh ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 105 public <the> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ch_p_z_dh> ch)] | [(ch <any_Cx_ch_p_z_dh>)]) (dh | t | ((<any_Cx_ch_p_z_dh> ch) | (ch <any_Cx_ch_p_z_dh>)))) ((([(<any_Vx_ch_ch_iy_noSlide> ch)] | [(ch <any_Vx_ch_ch_iy_noSlide>)]) ([(<any_Cx_ch_ch_dh> ch)] | [(ch <any_Cx_ch_ch_dh>)])) (iy | ((<any_Vx_ch_ch_iy_noSlide> ch) | (ch <any_Vx_ch_ch_iy_noSlide>)))) (([(<any_Cx_ch_iy_thr> thr)] | [(thr <any_Cx_ch_iy_thr>)]) ([(<any_Vx_ch_iy_thr> thr)] | [(thr <any_Vx_ch_iy_thr>)]) sil))
Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

Running scan for frate = 91
frate, target rule = 105 public <the> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_dh> zh)] | [(zh <any_Cx_zh_p_z_dh>)]) (dh | t | ((<any_Cx_zh_p_z_dh_axr> zh) | (zh <any_Cx_zh_p_z_dh_axr>)))) (([(<any_Cx_zh_zh_axr_dh> zh)] | [(zh <any_Cx_zh_zh_axr_dh>)]) (axr | ((<any_Cx_zh_zh_axr> zh) | (zh <any_Cx_zh_zh_axr>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_f> f)] | [(f <any_Cx_zh_axr_f>)]) sil))
Considering guard ch with value 3 for dh ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 3 for iy ...
candidateGuards = map[ch:true]
Picking guard, ch

Running scan for frate = 91
frate, target rule = 91 public <the> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ch_p_z_dh> ch)] | [(ch <any_Cx_ch_p_z_dh>)]) (dh | t | ((<any_Cx_ch_p_z_dh> ch) | (ch <any_Cx_ch_p_z_dh>)))) ((([(<any_Vx_ch_ch_iy_noSlide> ch)] | [(ch <any_Vx_ch_ch_iy_noSlide>)]) ([(<any_Cx_ch_ch_dh> ch)] | [(ch <any_Cx_ch_ch_dh>)])) (iy | ((<any_Vx_ch_ch_iy_noSlide> ch) | (ch <any_Vx_ch_ch_iy_noSlide>)))) (([(<any_Cx_ch_iy_m> m)] | [(m <any_Cx_ch_iy_m>)]) ([(<any_Vx_ch_iy_m> m)] | [(m <any_Vx_ch_iy_m>)]) sil))
Considering guard zh with value 1 for dh ...
candidateGuards = map[zh:true]
Picking guard, zh

Running scan for frate = 80
Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 3 for dh ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 3 for iy ...
candidateGuards = map[ch:true]
Picking guard, ch

frate, target rule = 91 public <the> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_dh> zh)] | [(zh <any_Cx_zh_p_z_dh>)]) (dh | t | ((<any_Cx_zh_p_z_dh_axr> zh) | (zh <any_Cx_zh_p_z_dh_axr>)))) (([(<any_Cx_zh_zh_axr_dh> zh)] | [(zh <any_Cx_zh_zh_axr_dh>)]) (axr | ((<any_Cx_zh_zh_axr> zh) | (zh <any_Cx_zh_zh_axr>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_m> m)] | [(m <any_Cx_zh_axr_m>)]) sil))
frate, target rule = 80 public <the> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ch_p_z_dh> ch)] | [(ch <any_Cx_ch_p_z_dh>)]) (dh | t | ((<any_Cx_ch_p_z_dh> ch) | (ch <any_Cx_ch_p_z_dh>)))) ((([(<any_Vx_ch_ch_iy_noSlide> ch)] | [(ch <any_Vx_ch_ch_iy_noSlide>)]) ([(<any_Cx_ch_ch_dh> ch)] | [(ch <any_Cx_ch_ch_dh>)])) (iy | ((<any_Vx_ch_ch_iy_noSlide> ch) | (ch <any_Vx_ch_ch_iy_noSlide>)))) (([(<any_Cx_ch_iy_hh> hh)] | [(hh <any_Cx_ch_iy_hh>)]) ([(<any_Vx_ch_iy_hh> hh)] | [(hh <any_Vx_ch_iy_hh>)]) sil))
Running scan for frate = 80
Running scan for frate = 72
Considering guard zh with value 1 for dh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 3 for dh ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 3 for iy ...
candidateGuards = map[ch:true]
Picking guard, ch

frate, target rule = 80 public <the> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_dh> zh)] | [(zh <any_Cx_zh_p_z_dh>)]) (dh | t | ((<any_Cx_zh_p_z_dh_axr> zh) | (zh <any_Cx_zh_p_z_dh_axr>)))) (([(<any_Cx_zh_zh_axr_dh> zh)] | [(zh <any_Cx_zh_zh_axr_dh>)]) (axr | ((<any_Cx_zh_zh_axr> zh) | (zh <any_Cx_zh_zh_axr>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_m> m)] | [(m <any_Cx_zh_axr_m>)]) sil))
frate, target rule = 72 public <the> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ch_p_z_dh> ch)] | [(ch <any_Cx_ch_p_z_dh>)]) (dh | t | ((<any_Cx_ch_p_z_dh> ch) | (ch <any_Cx_ch_p_z_dh>)))) ((([(<any_Vx_ch_ch_iy_noSlide> ch)] | [(ch <any_Vx_ch_ch_iy_noSlide>)]) ([(<any_Cx_ch_ch_dh> ch)] | [(ch <any_Cx_ch_ch_dh>)])) (iy | ((<any_Vx_ch_ch_iy_noSlide> ch) | (ch <any_Vx_ch_ch_iy_noSlide>)))) (([(<any_Cx_ch_iy_ng> ng)] | [(ng <any_Cx_ch_iy_ng>)]) ([(<any_Vx_ch_iy_ng> ng)] | [(ng <any_Vx_ch_iy_ng>)]) sil))
Running scan for frate = 72
Considering guard zh with value 1 for dh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 72 public <the> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_dh> zh)] | [(zh <any_Cx_zh_p_z_dh>)]) (dh | t | ((<any_Cx_zh_p_z_dh_axr> zh) | (zh <any_Cx_zh_p_z_dh_axr>)))) (([(<any_Cx_zh_zh_axr_dh> zh)] | [(zh <any_Cx_zh_zh_axr_dh>)]) (axr | ((<any_Cx_zh_zh_axr> zh) | (zh <any_Cx_zh_zh_axr>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_hh> hh)] | [(hh <any_Cx_zh_axr_hh>)]) sil))

results =
{72 [{sil 0 22} {z 23 27} {w 28 41} {t 42 47} {axr 48 69} {sil 70 80}]}
{80 [{sil 0 25} {z 26 30} {w 31 46} {t 47 52} {axr 53 77} {sil 78 86}]}
{91 [{sil 0 28} {t 29 35} {axr 36 38} {m 39 55} {ah 56 91} {sil 92 159}]}
{105 [{sil 0 32} {t 33 44} {zh 45 47} {d 48 71} {ah 72 95} {f 96 104} {sil 105 185}]}
{125 [{sil 3 40} {t 41 48} {zh 49 51} {w 52 81} {ah 82 117} {f 118 125} {sil 126 217}]}

normalised results =
{72 [{sil 0 22} {z 32 38} {w 39 57} {t 58 65} {axr 67 96} {sil 97 111}]}
{80 [{sil 0 25} {z 33 38} {w 39 58} {t 59 65} {axr 66 96} {sil 98 108}]}
{91 [{sil 0 28} {t 32 38} {axr 40 40} {m 43 60} {ah 62 100} {sil 101 175}]}
{105 [{sil 0 32} {t 31 42} {zh 43 43} {d 46 68} {ah 69 90} {f 91 99} {sil 100 176}]}
{125 [{sil 3 40} {t 33 38} {zh 39 39} {w 42 65} {ah 66 94} {f 94 100} {sil 101 174}]}

ruleAligned = [{{dh 2} []} {{t 3} [{0 3} {1 3} {2 1} {3 1} {4 1}]} {{axr 2} [{0 4} {1 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {z 32 32} {w 39 57} {t 58 65} {axr 67 96} {sil 97 97}]}
{80 [{sil 0 0} {z 33 33} {w 39 58} {t 59 65} {axr 66 96} {sil 98 98}]}
{91 [{sil 0 0} {t 32 38} {axr 40 40} {m 43 60} {ah 62 62} {sil 101 101}]}
{105 [{sil 0 0} {t 31 42} {zh 43 43} {d 46 68} {ah 69 90} {f 91 99} {sil 100 100}]}
{125 [{sil 3 3} {t 33 38} {zh 39 39} {w 42 65} {ah 66 94} {f 94 100} {sil 101 101}]}

timeAligned = [{{t 33 38} [{2 1} {3 1} {4 1}]} {{w 42 57} [{0 2} {1 2} {4 3}]}]

i, iTime, newITime, timeStartFrom = 0 0 -1 0
i, iTime, newITime, timeStartFrom = 1 0 0 0
i, iTime, newITime, timeStartFrom = 2 0 -1 38
combinedVerdict    = [{dh 2} {t 3} {axr 2} {w 3}]
ruleAlignedVerdict = [{dh 2} {t 3} {axr 2}]

score->
-1 for dh
-1 for t
-1 for axr
-1 for w
score<-: -4

results =
{72 [{sil 0 22} {ch 23 26} {d 27 48} {eh 49 64} {ch 65 67} {sil 68 80}]}
{80 [{sil 0 32} {ch 33 35} {d 36 54} {eh 55 71} {ch 72 74} {sil 75 86}]}
{91 [{sil 0 28} {t 29 34} {iy 35 38} {m 39 52} {d 53 60} {er 61 88} {m 89 91} {sil 92 159}]}
{105 [{sil 0 32} {t 33 42} {ch 43 45} {m 46 59} {iy 60 63} {d 64 69} {thr 70 72} {er 73 99} {thr 100 102} {sil 103 185}]}
{125 [{sil 3 40} {t 41 52} {iy 53 55} {n 56 78} {d 79 84} {er 85 111} {n 112 118} {sil 119 217}]}

normalised results =
{72 [{sil 0 22} {ch 32 36} {d 38 67} {eh 68 89} {ch 90 90} {sil 94 111}]}
{80 [{sil 0 32} {ch 41 41} {d 45 68} {eh 69 89} {ch 90 90} {sil 94 108}]}
{91 [{sil 0 28} {t 32 37} {iy 38 42} {m 43 57} {d 58 66} {er 67 97} {m 98 98} {sil 101 175}]}
{105 [{sil 0 32} {t 31 40} {ch 41 41} {m 44 56} {iy 57 60} {d 61 66} {thr 67 67} {er 70 94} {thr 95 95} {sil 98 176}]}
{125 [{sil 3 40} {t 33 42} {iy 42 42} {n 45 62} {d 63 67} {er 68 89} {n 90 94} {sil 95 174}]}

ruleAligned = [{{dh 2} []} {{t 3} [{2 1} {3 1} {4 1}]} {{iy 2} []} {{d 3} [{2 4} {3 5} {4 4}]} {{er 3} [{2 5} {3 7} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {ch 32 32} {d 38 67} {eh 68 89} {ch 90 90} {sil 94 94}]}
{80 [{sil 0 0} {ch 41 41} {d 45 68} {eh 69 89} {ch 90 90} {sil 94 94}]}
{91 [{sil 0 0} {t 32 37} {iy 38 38} {m 43 57} {d 58 66} {er 67 97} {m 98 98} {sil 101 101}]}
{105 [{sil 0 0} {t 31 40} {ch 41 41} {m 44 56} {iy 57 57} {d 61 66} {thr 67 67} {er 70 94} {thr 95 95} {sil 98 98}]}
{125 [{sil 3 3} {t 33 42} {iy 42 42} {n 45 62} {d 63 67} {er 68 89} {n 90 94} {sil 95 95}]}

timeAligned = [{{t 33 37} [{2 1} {3 1} {4 1}]} {{d 58 67} [{0 2} {1 2} {2 4} {3 5} {4 4}]} {{er 70 89} [{2 5} {3 7} {4 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 -1 0
i, iTime, newITime, timeStartFrom = 1 0 0 0
i, iTime, newITime, timeStartFrom = 2 0 -1 37
i, iTime, newITime, timeStartFrom = 3 0 1 37
i, iTime, newITime, timeStartFrom = 4 1 2 66
combinedVerdict    = [{dh 2} {t 3} {iy 2} {d 3} {er 3}]
ruleAlignedVerdict = [{dh 2} {t 3} {iy 2} {d 3} {er 3}]

score->
-1 for dh
-1 for t
-1 for iy
-1 for d
-1 for er
score<-: -5
bestResult = {-4 [{dh 2} {t 3} {axr 2} {w 3}] [dh axr]}
testPronounce dh missing t surprise axr missing w surprise
publish->
phonsToAlphas = [{[dh] th} {[axr] e}]
getVerdict<-:new {th [dh] 2}
getVerdict<-:new {e [axr] 2}
lettersVerdicts = [{th [dh] 2} {t [t] 3} {e [axr] 2} {w [w] 3}]
publish<-
Total: 374.156726ms
{
  "results": [
    {
      "letters": "th",
      "phonemes": "ð",
      "verdict": "missing"
    },
    {
      "letters": "t",
      "phonemes": "t",
      "verdict": "surprise"
    },
    {
      "letters": "e",
      "phonemes": "əɹ",
      "verdict": "missing"
    },
    {
      "letters": "w",
      "phonemes": "w",
      "verdict": "surprise"
    }
  ],
  "err": null
}
