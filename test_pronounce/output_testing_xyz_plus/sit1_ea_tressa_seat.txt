
 length of audio =  2.070375



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.92 0.62 1.54

 start3, duration3, end3 =  1.0999999999999999 0.28 1.38

 Initial start, duration, end =  0.8200000000000001 0.72 1.54

 Cut at: start, duration =  0.8200000000000001 1.17     guard_end =  1.99 

Running scan for frate = 125
Considering guard aa with value 1 for s ...
candidateGuards = map[aa:true]
Picking guard, aa

Considering guard aa with value 2 for iy ...
candidateGuards = map[aa:true]
Picking guard, aa

Considering guard aa with value 1 for t ...
Considering guard ao with value 1 for t ...
candidateGuards = map[aa:true ao:true]
Picking guard, aa

frate, target rule = 125 public <seat> = (((sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil p (sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_aa_p_sh_s> aa)] | [(aa <any_Cx_aa_p_sh_s>)]) (s | z | ((<any_Cx_aa_p_sh_s> aa) | (aa <any_Cx_aa_p_sh_s>)))) ((([(<any_Vx_aa_aa_iy_noSlide> aa)] | [(aa <any_Vx_aa_aa_iy_noSlide>)]) ([(<any_Cx_aa_aa_t_s> aa)] | [(aa <any_Cx_aa_aa_t_s>)])) (iy | ((<any_Vx_aa_aa_iy_noSlide> aa) | (aa <any_Vx_aa_aa_iy_noSlide>)))) (([(<any_Cx_aa_aa_t> aa)] | [(aa <any_Cx_aa_aa_t>)]) (t | ((<any_Cx_aa_aa_t> aa) | (aa <any_Cx_aa_aa_t>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_aa_t_g> g)] | [(g <any_Cx_aa_t_g>)]) sil))
Running scan for frate = 105
Considering guard aa with value 1 for s ...
candidateGuards = map[aa:true]
Picking guard, aa

Considering guard aa with value 2 for iy ...
candidateGuards = map[aa:true]
Picking guard, aa

Considering guard ao with value 1 for t ...
Considering guard aa with value 1 for t ...
candidateGuards = map[aa:true ao:true]
Picking guard, aa

frate, target rule = 105 public <seat> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_aa_p_ch_s> aa)] | [(aa <any_Cx_aa_p_ch_s>)]) (s | z | ((<any_Cx_aa_p_ch_s> aa) | (aa <any_Cx_aa_p_ch_s>)))) ((([(<any_Vx_aa_aa_iy_noSlide> aa)] | [(aa <any_Vx_aa_aa_iy_noSlide>)]) ([(<any_Cx_aa_aa_t_s> aa)] | [(aa <any_Cx_aa_aa_t_s>)])) (iy | ((<any_Vx_aa_aa_iy_noSlide> aa) | (aa <any_Vx_aa_aa_iy_noSlide>)))) (([(<any_Cx_aa_aa_t> aa)] | [(aa <any_Cx_aa_aa_t>)]) (t | ((<any_Cx_aa_aa_t> aa) | (aa <any_Cx_aa_aa_t>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_aa_t_d> d)] | [(d <any_Cx_aa_t_d>)]) sil))
Running scan for frate = 91
Considering guard aa with value 1 for s ...
candidateGuards = map[aa:true]
Picking guard, aa

Considering guard aa with value 2 for iy ...
candidateGuards = map[aa:true]
Picking guard, aa

Considering guard ao with value 1 for t ...
Considering guard aa with value 1 for t ...
candidateGuards = map[aa:true ao:true]
Picking guard, ao

frate, target rule = 91 public <seat> = (((sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil p (sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_aa_p_sh_s> aa)] | [(aa <any_Cx_aa_p_sh_s>)]) (s | z | ((<any_Cx_aa_p_sh_s> aa) | (aa <any_Cx_aa_p_sh_s>)))) ((([(<any_Vx_aa_aa_iy_noSlide> aa)] | [(aa <any_Vx_aa_aa_iy_noSlide>)]) ([(<any_Cx_aa_aa_t_s> aa)] | [(aa <any_Cx_aa_aa_t_s>)])) (iy | ((<any_Vx_aa_aa_iy_noSlide> aa) | (aa <any_Vx_aa_aa_iy_noSlide>)))) (([(<any_Cx_ao_aa_t> ao)] | [(ao <any_Cx_ao_aa_t>)]) (t | ((<any_Cx_ao_aa_t> ao) | (ao <any_Cx_ao_aa_t>)))) (([(<any_vowel_noSlide> ch)] | [(ch <any_vowel_noSlide>)]) ([(<any_Cx_ao_t_ch> ch)] | [(ch <any_Cx_ao_t_ch>)]) sil))
Running scan for frate = 80
Considering guard aa with value 1 for s ...
candidateGuards = map[aa:true]
Picking guard, aa

Considering guard aa with value 2 for iy ...
candidateGuards = map[aa:true]
Picking guard, aa

Considering guard aa with value 1 for t ...
Considering guard ao with value 1 for t ...
candidateGuards = map[aa:true ao:true]
Picking guard, aa

frate, target rule = 80 public <seat> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_aa_p_ch_s> aa)] | [(aa <any_Cx_aa_p_ch_s>)]) (s | z | ((<any_Cx_aa_p_ch_s> aa) | (aa <any_Cx_aa_p_ch_s>)))) ((([(<any_Vx_aa_aa_iy_noSlide> aa)] | [(aa <any_Vx_aa_aa_iy_noSlide>)]) ([(<any_Cx_aa_aa_t_s> aa)] | [(aa <any_Cx_aa_aa_t_s>)])) (iy | ((<any_Vx_aa_aa_iy_noSlide> aa) | (aa <any_Vx_aa_aa_iy_noSlide>)))) (([(<any_Cx_aa_aa_t> aa)] | [(aa <any_Cx_aa_aa_t>)]) (t | ((<any_Cx_aa_aa_t> aa) | (aa <any_Cx_aa_aa_t>)))) (([(<any_vowel_noSlide> ch)] | [(ch <any_vowel_noSlide>)]) ([(<any_Cx_aa_t_ch> ch)] | [(ch <any_Cx_aa_t_ch>)]) sil))
Running scan for frate = 72
Considering guard aa with value 1 for s ...
candidateGuards = map[aa:true]
Picking guard, aa

Considering guard aa with value 2 for iy ...
candidateGuards = map[aa:true]
Picking guard, aa

Considering guard ao with value 1 for t ...
Considering guard aa with value 1 for t ...
candidateGuards = map[aa:true ao:true]
Picking guard, ao

frate, target rule = 72 public <seat> = (((sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil p (sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_aa_p_sh_s> aa)] | [(aa <any_Cx_aa_p_sh_s>)]) (s | z | ((<any_Cx_aa_p_sh_s> aa) | (aa <any_Cx_aa_p_sh_s>)))) ((([(<any_Vx_aa_aa_iy_noSlide> aa)] | [(aa <any_Vx_aa_aa_iy_noSlide>)]) ([(<any_Cx_aa_aa_t_s> aa)] | [(aa <any_Cx_aa_aa_t_s>)])) (iy | ((<any_Vx_aa_aa_iy_noSlide> aa) | (aa <any_Vx_aa_aa_iy_noSlide>)))) (([(<any_Cx_ao_aa_t> ao)] | [(ao <any_Cx_ao_aa_t>)]) (t | ((<any_Cx_ao_aa_t> ao) | (ao <any_Cx_ao_aa_t>)))) (([(<any_vowel_noSlide> k)] | [(k <any_vowel_noSlide>)]) ([(<any_Cx_ao_t_k> k)] | [(k <any_Cx_ao_t_k>)]) sil))

results =
{72 [{sil 0 9} {s 10 26} {iy 27 38} {t 39 52} {sil 53 65}]}
{80 [{sil 0 11} {s 12 29} {ih 30 40} {aa 41 43} {t 44 57} {sil 58 71}]}
{91 [{sil 0 13} {s 14 33} {ih 34 46} {aa 47 49} {t 50 66} {sil 67 101}]}
{105 [{sil 0 16} {s 17 38} {ih 39 56} {aa 57 59} {t 60 75} {sil 76 122}]}
{125 [{sil 3 21} {s 22 47} {ih 48 68} {aa 69 71} {t 72 91} {sil 92 146}]}

normalised results =
{72 [{sil 0 9} {s 14 36} {iy 38 53} {t 54 72} {sil 74 90}]}
{80 [{sil 0 11} {s 15 36} {ih 38 50} {aa 51 51} {t 55 71} {sil 73 89}]}
{91 [{sil 0 13} {s 15 36} {ih 37 51} {aa 52 52} {t 55 73} {sil 74 111}]}
{105 [{sil 0 16} {s 16 36} {ih 37 53} {aa 54 54} {t 57 71} {sil 72 116}]}
{125 [{sil 3 21} {s 18 38} {ih 38 54} {aa 55 55} {t 58 73} {sil 74 117}]}

ruleAligned = [{{s 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{iy 2} [{0 2}]} {{ih 3} [{1 2} {2 2} {3 2} {4 2}]} {{t 0} [{0 3} {1 4} {2 4} {3 4} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {s 14 36} {iy 38 53} {t 54 72} {sil 74 74}]}
{80 [{sil 0 0} {s 15 36} {ih 38 50} {aa 51 51} {t 55 71} {sil 73 73}]}
{91 [{sil 0 0} {s 15 36} {ih 37 51} {aa 52 52} {t 55 73} {sil 74 74}]}
{105 [{sil 0 0} {s 16 36} {ih 37 53} {aa 54 54} {t 57 71} {sil 72 72}]}
{125 [{sil 3 3} {s 18 38} {ih 38 54} {aa 55 55} {t 58 73} {sil 74 74}]}

timeAligned = [{{s 15 36} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ih 38 51} [{1 2} {2 2} {3 2} {4 2}]} {{t 55 72} [{0 3} {1 4} {2 4} {3 4} {4 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 -1 36
i, iTime, newITime, timeStartFrom = 2 0 1 36
i, iTime, newITime, timeStartFrom = 3 1 2 50
combinedVerdict    = [{s 0} {iy 2} {ih 3} {t 0}]
ruleAlignedVerdict = [{s 0} {iy 2} {ih 3} {t 0}]

score->
+1 for s
-1 for iy
-1 for ih
+1 for t
score<-: 0
bestResult = {0 [{s 0} {iy 2} {ih 3} {t 0}] [s iy t]}
testPronounce s good iy missing ih surprise t good
publish->
phonsToAlphas = [{[s] s} {[iy] ea} {[t] t}]
getVerdict<-:new {s [s] 0}
getVerdict<-:new {ea [iy] 2}
getVerdict<-:new {t [t] 0}
lettersVerdicts = [{s [s] 0} {ea [iy] 2} {ih [ih] 3} {t [t] 0}]
publish<-
Total: 313.057073ms
{
  "results": [
    {
      "letters": "s",
      "phonemes": "s",
      "verdict": "good"
    },
    {
      "letters": "ea",
      "phonemes": "iː",
      "verdict": "missing"
    },
    {
      "letters": "ih",
      "phonemes": "ɪ",
      "verdict": "surprise"
    },
    {
      "letters": "t",
      "phonemes": "t",
      "verdict": "good"
    }
  ],
  "err": null
}
