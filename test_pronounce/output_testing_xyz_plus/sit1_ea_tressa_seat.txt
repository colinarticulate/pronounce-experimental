
 length of audio =  2.070375



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.7000000000000001 0.84 1.54

 start3, duration3, end3 =  1.0999999999999999 0.28 1.38

 Initial start, duration, end =  0.6000000000000001 0.94 1.54

 Cut at: start, duration =  0.6000000000000001 1.39     guard_end =  1.99 

Running scan for frate = 125
Considering guard aa with value 1 for s ...
candidateGuards = map[aa:true]
Picking guard, aa

Considering guard aa with value 2 for iy ...
candidateGuards = map[aa:true]
Picking guard, aa

Considering guard aa with value 1 for t ...
Considering guard ao with value 1 for t ...
candidateGuards = map[aa:true ao:true]
Picking guard, aa


frate, target rule = 125 public <seat> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_aa_p_ch_s> aa)] | [(aa <any_Cx_aa_p_ch_s>)]) (s | z | ((<any_Cx_aa_p_ch_s> aa) | (aa <any_Cx_aa_p_ch_s>)))) ((([(<any_Vx_aa_aa_iy_noSlide> aa)] | [(aa <any_Vx_aa_aa_iy_noSlide>)]) ([(<any_Cx_aa_aa_t_s> aa)] | [(aa <any_Cx_aa_aa_t_s>)])) (iy | ((<any_Vx_aa_aa_iy_noSlide> aa) | (aa <any_Vx_aa_aa_iy_noSlide>)))) (([(<any_Cx_aa_aa_t> aa)] | [(aa <any_Cx_aa_aa_t>)]) (t | ((<any_Cx_aa_aa_t> aa) | (aa <any_Cx_aa_aa_t>)))) (([(<any_vowel_noSlide> k)] | [(k <any_vowel_noSlide>)]) ([(<any_Cx_aa_t_k> k)] | [(k <any_Cx_aa_t_k>)]) sil))
Running scan for frate = 105
Considering guard aa with value 1 for s ...
candidateGuards = map[aa:true]
Picking guard, aa

Considering guard aa with value 2 for iy ...
candidateGuards = map[aa:true]
Picking guard, aa

Considering guard aa with value 1 for t ...
Considering guard ao with value 1 for t ...
candidateGuards = map[aa:true ao:true]
Picking guard, aa


frate, target rule = 105 public <seat> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_aa_p_ch_s> aa)] | [(aa <any_Cx_aa_p_ch_s>)]) (s | z | ((<any_Cx_aa_p_ch_s> aa) | (aa <any_Cx_aa_p_ch_s>)))) ((([(<any_Vx_aa_aa_iy_noSlide> aa)] | [(aa <any_Vx_aa_aa_iy_noSlide>)]) ([(<any_Cx_aa_aa_t_s> aa)] | [(aa <any_Cx_aa_aa_t_s>)])) (iy | ((<any_Vx_aa_aa_iy_noSlide> aa) | (aa <any_Vx_aa_aa_iy_noSlide>)))) (([(<any_Cx_aa_aa_t> aa)] | [(aa <any_Cx_aa_aa_t>)]) (t | ((<any_Cx_aa_aa_t> aa) | (aa <any_Cx_aa_aa_t>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_aa_t_d> d)] | [(d <any_Cx_aa_t_d>)]) sil))
Running scan for frate = 91
Considering guard aa with value 1 for s ...
candidateGuards = map[aa:true]
Picking guard, aa

Considering guard aa with value 2 for iy ...
candidateGuards = map[aa:true]
Picking guard, aa

Considering guard aa with value 1 for t ...
Considering guard ao with value 1 for t ...
candidateGuards = map[aa:true ao:true]
Picking guard, aa


frate, target rule = 91 public <seat> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_aa_p_ch_s> aa)] | [(aa <any_Cx_aa_p_ch_s>)]) (s | z | ((<any_Cx_aa_p_ch_s> aa) | (aa <any_Cx_aa_p_ch_s>)))) ((([(<any_Vx_aa_aa_iy_noSlide> aa)] | [(aa <any_Vx_aa_aa_iy_noSlide>)]) ([(<any_Cx_aa_aa_t_s> aa)] | [(aa <any_Cx_aa_aa_t_s>)])) (iy | ((<any_Vx_aa_aa_iy_noSlide> aa) | (aa <any_Vx_aa_aa_iy_noSlide>)))) (([(<any_Cx_aa_aa_t> aa)] | [(aa <any_Cx_aa_aa_t>)]) (t | ((<any_Cx_aa_aa_t> aa) | (aa <any_Cx_aa_aa_t>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_aa_t_thr> thr)] | [(thr <any_Cx_aa_t_thr>)]) sil))
Running scan for frate = 80
Considering guard aa with value 1 for s ...
candidateGuards = map[aa:true]
Picking guard, aa

Considering guard aa with value 2 for iy ...
candidateGuards = map[aa:true]
Picking guard, aa

Considering guard aa with value 1 for t ...
Considering guard ao with value 1 for t ...
candidateGuards = map[aa:true ao:true]
Picking guard, aa


frate, target rule = 80 public <seat> = (((sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil p (sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_aa_p_sh_s> aa)] | [(aa <any_Cx_aa_p_sh_s>)]) (s | z | ((<any_Cx_aa_p_sh_s> aa) | (aa <any_Cx_aa_p_sh_s>)))) ((([(<any_Vx_aa_aa_iy_noSlide> aa)] | [(aa <any_Vx_aa_aa_iy_noSlide>)]) ([(<any_Cx_aa_aa_t_s> aa)] | [(aa <any_Cx_aa_aa_t_s>)])) (iy | ((<any_Vx_aa_aa_iy_noSlide> aa) | (aa <any_Vx_aa_aa_iy_noSlide>)))) (([(<any_Cx_aa_aa_t> aa)] | [(aa <any_Cx_aa_aa_t>)]) (t | ((<any_Cx_aa_aa_t> aa) | (aa <any_Cx_aa_aa_t>)))) (([(<any_vowel_noSlide> k)] | [(k <any_vowel_noSlide>)]) ([(<any_Cx_aa_t_k> k)] | [(k <any_Cx_aa_t_k>)]) sil))
Running scan for frate = 72
Considering guard aa with value 1 for s ...
candidateGuards = map[aa:true]
Picking guard, aa

Considering guard aa with value 2 for iy ...
candidateGuards = map[aa:true]
Picking guard, aa

Considering guard ao with value 1 for t ...
Considering guard aa with value 1 for t ...
candidateGuards = map[aa:true ao:true]
Picking guard, ao


frate, target rule = 72 public <seat> = (((sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]) | (sil p (sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]))) (([(<any_Cx_aa_p_th_s> aa)] | [(aa <any_Cx_aa_p_th_s>)]) (s | z | ((<any_Cx_aa_p_th_s> aa) | (aa <any_Cx_aa_p_th_s>)))) ((([(<any_Vx_aa_aa_iy_noSlide> aa)] | [(aa <any_Vx_aa_aa_iy_noSlide>)]) ([(<any_Cx_aa_aa_t_s> aa)] | [(aa <any_Cx_aa_aa_t_s>)])) (iy | ((<any_Vx_aa_aa_iy_noSlide> aa) | (aa <any_Vx_aa_aa_iy_noSlide>)))) (([(<any_Cx_ao_aa_t> ao)] | [(ao <any_Cx_ao_aa_t>)]) (t | ((<any_Cx_ao_aa_t> ao) | (ao <any_Cx_ao_aa_t>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_ao_t_g> g)] | [(g <any_Cx_ao_t_g>)]) sil))

results =
{72 [{sil 0 25} {s 26 41} {ih 42 52} {aa 53 55} {t 56 67} {sil 68 81}]}
{80 [{sil 0 29} {s 30 46} {ih 47 58} {aa 59 61} {t 62 75} {sil 76 88}]}
{91 [{sil 0 33} {s 34 53} {ih 54 66} {aa 67 69} {t 70 86} {sil 87 125}]}
{105 [{sil 0 39} {s 40 61} {ih 62 76} {aa 77 80} {t 81 99} {sil 100 145}]}
{125 [{sil 3 48} {s 49 70} {aa 71 73} {ih 74 99} {t 100 119} {sil 120 169}]}

normalised results =
{72 [{sil 0 25} {s 36 57} {ih 58 72} {aa 74 74} {t 78 93} {sil 94 113}]}
{80 [{sil 0 29} {s 38 58} {ih 59 73} {aa 74 74} {t 78 94} {sil 95 110}]}
{91 [{sil 0 33} {s 37 58} {ih 59 73} {aa 74 74} {t 77 95} {sil 96 137}]}
{105 [{sil 0 39} {s 38 58} {ih 59 72} {aa 73 76} {t 77 94} {sil 95 138}]}
{125 [{sil 3 48} {s 39 56} {aa 57 57} {ih 59 79} {t 80 95} {sil 96 135}]}

ruleAligned = [{{s 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{iy 2} []} {{ih 3} [{0 2} {1 2} {2 2} {3 2} {4 3}]} {{t 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {s 36 57} {ih 58 72} {aa 74 74} {t 78 93} {sil 94 94}]}
{80 [{sil 0 0} {s 38 58} {ih 59 73} {aa 74 74} {t 78 94} {sil 95 95}]}
{91 [{sil 0 0} {s 37 58} {ih 59 73} {aa 74 74} {t 77 95} {sil 96 96}]}
{105 [{sil 0 0} {s 38 58} {ih 59 72} {aa 73 73} {t 77 94} {sil 95 95}]}
{125 [{sil 3 3} {s 39 56} {aa 57 57} {ih 59 79} {t 80 95} {sil 96 96}]}

timeAligned = [{{s 38 58} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ih 59 73} [{0 2} {1 2} {2 2} {3 2} {4 3}]} {{t 78 94} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 -1 56
i, iTime, newITime, timeStartFrom = 2 0 1 56
i, iTime, newITime, timeStartFrom = 3 1 2 72
combinedVerdict    = [{s 0} {iy 2} {ih 3} {t 0}]
ruleAlignedVerdict = [{s 0} {iy 2} {ih 3} {t 0}]

score->
+1 for s
-1 for iy
-1 for ih
+1 for t
score<-: 0
bestResult = {0 [{s 0} {iy 2} {ih 3} {t 0}] [s iy t]}
testPronounce s good iy missing ih surprise t good
publish->
phonsToAlphas = [{[s] s} {[iy] ea} {[t] t}]
getVerdict<-:new {s [s] 0}
getVerdict<-:new {ea [iy] 2}
getVerdict<-:new {t [t] 0}
lettersVerdicts = [{s [s] 0} {ea [iy] 2} {ih [ih] 3} {t [t] 0}]
publish<-
{
  "results": [
    {
      "letters": "s",
      "phonemes": "s",
      "verdict": "good"
    },
    {
      "letters": "ea",
      "phonemes": "iː",
      "verdict": "missing"
    },
    {
      "letters": "ih",
      "phonemes": "ɪ",
      "verdict": "surprise"
    },
    {
      "letters": "t",
      "phonemes": "t",
      "verdict": "good"
    }
  ],
  "err": null
}
