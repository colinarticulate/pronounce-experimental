
 length of audio =  3.505813



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.5 0.9 1.4

 start3, duration3, end3 =  0.62 0.64 1.26

 Initial start, duration, end =  0.4 0.9999999999999999 1.4

 Cut at: start, duration =  0.4 1.45     guard_end =  1.85 

Running scan for frate = 125
Considering guard z with value 1 for k ...
Considering guard zh with value 1 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard zh with value 2 for ae ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard jh with value 6.4 for th ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard ch with value 9.6 for ow ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 12 for d ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard r with value 4.2 for z ...
candidateGuards = map[r:true]
Picking guard, r

frate, target rule = 125 public <cathodes> = (((sil [((p <any_Cx_k_p_b>) | (<any_Cx_k_p_b> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]) | (sil b (sil [((p <any_Cx_k_p_b>) | (<any_Cx_k_p_b> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]))) (([(<any_Cx_z_b_p_k> z)] | [(z <any_Cx_z_b_p_k>)]) (k | d | ((<any_Cx_z_b_p_k> z) | (z <any_Cx_z_b_p_k>)))) ((([(<any_Vx_zh_z_ae_noSlide> zh)] | [(zh <any_Vx_zh_z_ae_noSlide>)]) ([(<any_Cx_zh_z_th_k> zh)] | [(zh <any_Cx_zh_z_th_k>)])) (ae | ((<any_Vx_zh_z_ae_noSlide> zh) | (zh <any_Vx_zh_z_ae_noSlide>)))) (([(<any_Cx_jh_zh_th> jh)] | [(jh <any_Cx_jh_zh_th>)]) (th | ((<any_Cx_jh_zh_th> jh) | (jh <any_Cx_jh_zh_th>)))) ((([(<any_Vx_ch_jh_ow_noSlide> ch)] | [(ch <any_Vx_ch_jh_ow_noSlide>)]) ([(<any_Cx_ch_jh_d_th> ch)] | [(ch <any_Cx_ch_jh_d_th>)])) (ow | ((<any_Vx_ch_jh_ow_noSlide> ch) | (ch <any_Vx_ch_jh_ow_noSlide>)))) (([(<any_Cx_ch_ch_d> ch)] | [(ch <any_Cx_ch_ch_d>)]) (d | ((<any_Cx_ch_ch_d_z> ch) | (ch <any_Cx_ch_ch_d_z>)))) (([(<any_Cx_r_ch_z_d> r)] | [(r <any_Cx_r_ch_z_d>)]) (z | ((<any_Cx_r_ch_z_d> r) | (r <any_Cx_r_ch_z_d>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_r_z_thr> thr)] | [(thr <any_Cx_r_z_thr>)]) sil))
Running scan for frate = 105
Considering guard z with value 1 for k ...
Considering guard zh with value 1 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard zh with value 2 for ae ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard jh with value 6.4 for th ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard ch with value 9.6 for ow ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 12 for d ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard r with value 4.2 for z ...
candidateGuards = map[r:true]
Picking guard, r

frate, target rule = 105 public <cathodes> = (((sil [((t <any_Cx_k_t_b>) | (<any_Cx_k_t_b> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil b (sil [((t <any_Cx_k_t_b>) | (<any_Cx_k_t_b> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_z_b_t_k> z)] | [(z <any_Cx_z_b_t_k>)]) (k | d | ((<any_Cx_z_b_t_k> z) | (z <any_Cx_z_b_t_k>)))) ((([(<any_Vx_zh_z_ae_noSlide> zh)] | [(zh <any_Vx_zh_z_ae_noSlide>)]) ([(<any_Cx_zh_z_th_k> zh)] | [(zh <any_Cx_zh_z_th_k>)])) (ae | ((<any_Vx_zh_z_ae_noSlide> zh) | (zh <any_Vx_zh_z_ae_noSlide>)))) (([(<any_Cx_jh_zh_th> jh)] | [(jh <any_Cx_jh_zh_th>)]) (th | ((<any_Cx_jh_zh_th> jh) | (jh <any_Cx_jh_zh_th>)))) ((([(<any_Vx_ch_jh_ow_noSlide> ch)] | [(ch <any_Vx_ch_jh_ow_noSlide>)]) ([(<any_Cx_ch_jh_d_th> ch)] | [(ch <any_Cx_ch_jh_d_th>)])) (ow | ((<any_Vx_ch_jh_ow_noSlide> ch) | (ch <any_Vx_ch_jh_ow_noSlide>)))) (([(<any_Cx_ch_ch_d> ch)] | [(ch <any_Cx_ch_ch_d>)]) (d | ((<any_Cx_ch_ch_d_z> ch) | (ch <any_Cx_ch_ch_d_z>)))) (([(<any_Cx_r_ch_z_d> r)] | [(r <any_Cx_r_ch_z_d>)]) (z | ((<any_Cx_r_ch_z_d> r) | (r <any_Cx_r_ch_z_d>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_r_z_thr> thr)] | [(thr <any_Cx_r_z_thr>)]) sil))
Running scan for frate = 91
Considering guard zh with value 1 for k ...
Considering guard z with value 1 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for ae ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard jh with value 6.4 for th ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard ch with value 9.6 for ow ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 12 for d ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard r with value 4.2 for z ...
candidateGuards = map[r:true]
Picking guard, r

frate, target rule = 91 public <cathodes> = (((sil [((p <any_Cx_k_p_b>) | (<any_Cx_k_p_b> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]) | (sil b (sil [((p <any_Cx_k_p_b>) | (<any_Cx_k_p_b> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]))) (([(<any_Cx_zh_b_p_k> zh)] | [(zh <any_Cx_zh_b_p_k>)]) (k | d | ((<any_Cx_zh_b_p_k> zh) | (zh <any_Cx_zh_b_p_k>)))) ((([(<any_Vx_zh_zh_ae_noSlide> zh)] | [(zh <any_Vx_zh_zh_ae_noSlide>)]) ([(<any_Cx_zh_zh_th_k> zh)] | [(zh <any_Cx_zh_zh_th_k>)])) (ae | ((<any_Vx_zh_zh_ae_noSlide> zh) | (zh <any_Vx_zh_zh_ae_noSlide>)))) (([(<any_Cx_jh_zh_th> jh)] | [(jh <any_Cx_jh_zh_th>)]) (th | ((<any_Cx_jh_zh_th> jh) | (jh <any_Cx_jh_zh_th>)))) ((([(<any_Vx_ch_jh_ow_noSlide> ch)] | [(ch <any_Vx_ch_jh_ow_noSlide>)]) ([(<any_Cx_ch_jh_d_th> ch)] | [(ch <any_Cx_ch_jh_d_th>)])) (ow | ((<any_Vx_ch_jh_ow_noSlide> ch) | (ch <any_Vx_ch_jh_ow_noSlide>)))) (([(<any_Cx_ch_ch_d> ch)] | [(ch <any_Cx_ch_ch_d>)]) (d | ((<any_Cx_ch_ch_d_z> ch) | (ch <any_Cx_ch_ch_d_z>)))) (([(<any_Cx_r_ch_z_d> r)] | [(r <any_Cx_r_ch_z_d>)]) (z | ((<any_Cx_r_ch_z_d> r) | (r <any_Cx_r_ch_z_d>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_r_z_v> v)] | [(v <any_Cx_r_z_v>)]) sil))
Running scan for frate = 80
Considering guard z with value 1 for k ...
Considering guard zh with value 1 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard zh with value 2 for ae ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard jh with value 6.4 for th ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard ch with value 9.6 for ow ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 12 for d ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard r with value 4.2 for z ...
candidateGuards = map[r:true]
Picking guard, r

frate, target rule = 80 public <cathodes> = (((sil [((d <any_Cx_k_d_b>) | (<any_Cx_k_d_b> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil b (sil [((d <any_Cx_k_d_b>) | (<any_Cx_k_d_b> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_z_b_d_k> z)] | [(z <any_Cx_z_b_d_k>)]) (k | d | ((<any_Cx_z_b_d_k> z) | (z <any_Cx_z_b_d_k>)))) ((([(<any_Vx_zh_z_ae_noSlide> zh)] | [(zh <any_Vx_zh_z_ae_noSlide>)]) ([(<any_Cx_zh_z_th_k> zh)] | [(zh <any_Cx_zh_z_th_k>)])) (ae | ((<any_Vx_zh_z_ae_noSlide> zh) | (zh <any_Vx_zh_z_ae_noSlide>)))) (([(<any_Cx_jh_zh_th> jh)] | [(jh <any_Cx_jh_zh_th>)]) (th | ((<any_Cx_jh_zh_th> jh) | (jh <any_Cx_jh_zh_th>)))) ((([(<any_Vx_ch_jh_ow_noSlide> ch)] | [(ch <any_Vx_ch_jh_ow_noSlide>)]) ([(<any_Cx_ch_jh_d_th> ch)] | [(ch <any_Cx_ch_jh_d_th>)])) (ow | ((<any_Vx_ch_jh_ow_noSlide> ch) | (ch <any_Vx_ch_jh_ow_noSlide>)))) (([(<any_Cx_ch_ch_d> ch)] | [(ch <any_Cx_ch_ch_d>)]) (d | ((<any_Cx_ch_ch_d_z> ch) | (ch <any_Cx_ch_ch_d_z>)))) (([(<any_Cx_r_ch_z_d> r)] | [(r <any_Cx_r_ch_z_d>)]) (z | ((<any_Cx_r_ch_z_d> r) | (r <any_Cx_r_ch_z_d>)))) (([(<any_vowel_noSlide> s)] | [(s <any_vowel_noSlide>)]) ([(<any_Cx_r_z_s> s)] | [(s <any_Cx_r_z_s>)]) sil))
Running scan for frate = 72
Considering guard zh with value 1 for k ...
Considering guard z with value 1 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for ae ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard jh with value 6.4 for th ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard ch with value 9.6 for ow ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 12 for d ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard r with value 4.2 for z ...
candidateGuards = map[r:true]
Picking guard, r

frate, target rule = 72 public <cathodes> = (((sil [((d <any_Cx_k_d_b>) | (<any_Cx_k_d_b> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil b (sil [((d <any_Cx_k_d_b>) | (<any_Cx_k_d_b> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_zh_b_d_k> zh)] | [(zh <any_Cx_zh_b_d_k>)]) (k | d | ((<any_Cx_zh_b_d_k> zh) | (zh <any_Cx_zh_b_d_k>)))) ((([(<any_Vx_zh_zh_ae_noSlide> zh)] | [(zh <any_Vx_zh_zh_ae_noSlide>)]) ([(<any_Cx_zh_zh_th_k> zh)] | [(zh <any_Cx_zh_zh_th_k>)])) (ae | ((<any_Vx_zh_zh_ae_noSlide> zh) | (zh <any_Vx_zh_zh_ae_noSlide>)))) (([(<any_Cx_jh_zh_th> jh)] | [(jh <any_Cx_jh_zh_th>)]) (th | ((<any_Cx_jh_zh_th> jh) | (jh <any_Cx_jh_zh_th>)))) ((([(<any_Vx_ch_jh_ow_noSlide> ch)] | [(ch <any_Vx_ch_jh_ow_noSlide>)]) ([(<any_Cx_ch_jh_d_th> ch)] | [(ch <any_Cx_ch_jh_d_th>)])) (ow | ((<any_Vx_ch_jh_ow_noSlide> ch) | (ch <any_Vx_ch_jh_ow_noSlide>)))) (([(<any_Cx_ch_ch_d> ch)] | [(ch <any_Cx_ch_ch_d>)]) (d | ((<any_Cx_ch_ch_d_z> ch) | (ch <any_Cx_ch_ch_d_z>)))) (([(<any_Cx_r_ch_z_d> r)] | [(r <any_Cx_r_ch_z_d>)]) (z | ((<any_Cx_r_ch_z_d> r) | (r <any_Cx_r_ch_z_d>)))) (([(<any_vowel_noSlide> s)] | [(s <any_vowel_noSlide>)]) ([(<any_Cx_r_z_s> s)] | [(s <any_Cx_r_z_s>)]) sil))

results =
{72 [{sil 0 12} {k 13 19} {ae 20 26} {th 27 33} {ow 34 49} {d 50 55} {z 56 66} {sil 67 84}]}
{80 [{sil 0 14} {k 15 22} {ae 23 29} {th 30 37} {ow 38 56} {d 57 61} {z 62 74} {sil 75 92}]}
{91 [{sil 0 16} {k 17 25} {ae 26 34} {th 35 42} {ow 43 54} {m 55 66} {ch 67 71} {z 72 91} {sil 92 130}]}
{105 [{sil 0 19} {k 20 30} {ae 31 40} {th 41 48} {ow 49 62} {m 63 78} {ch 79 81} {z 82 100} {sil 101 151}]}
{125 [{sil 3 25} {k 26 36} {ae 37 48} {th 49 59} {ow 60 76} {m 77 94} {ch 95 98} {z 99 120} {sil 121 181}]}

normalised results =
{72 [{sil 0 12} {k 18 26} {ae 28 36} {th 38 46} {ow 47 68} {d 69 76} {z 78 92} {sil 93 117}]}
{80 [{sil 0 14} {k 19 28} {ae 29 36} {th 38 46} {ow 48 70} {d 71 76} {z 78 93} {sil 94 115}]}
{91 [{sil 0 16} {k 19 27} {ae 29 37} {th 38 46} {ow 47 59} {m 60 73} {ch 74 78} {z 79 100} {sil 101 143}]}
{105 [{sil 0 19} {k 19 29} {ae 30 38} {th 39 46} {ow 47 59} {m 60 74} {ch 75 75} {z 78 95} {sil 96 144}]}
{125 [{sil 3 25} {k 21 29} {ae 30 38} {th 39 47} {ow 48 61} {m 62 75} {ch 76 78} {z 79 96} {sil 97 145}]}

ruleAligned = [{{k 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ae 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{th 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{ow 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{d 2} [{0 5} {1 5}]} {{m 3} [{2 5} {3 5} {4 5}]} {{z 0} [{0 6} {1 6} {2 7} {3 7} {4 7}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {k 18 26} {ae 28 36} {th 38 46} {ow 47 68} {d 69 76} {z 78 92} {sil 93 93}]}
{80 [{sil 0 0} {k 19 28} {ae 29 36} {th 38 46} {ow 48 70} {d 71 76} {z 78 93} {sil 94 94}]}
{91 [{sil 0 0} {k 19 27} {ae 29 37} {th 38 46} {ow 47 59} {m 60 73} {ch 74 74} {z 79 100} {sil 101 101}]}
{105 [{sil 0 0} {k 19 29} {ae 30 38} {th 39 46} {ow 47 59} {m 60 74} {ch 75 75} {z 78 95} {sil 96 96}]}
{125 [{sil 3 3} {k 21 29} {ae 30 38} {th 39 47} {ow 48 61} {m 62 75} {ch 76 76} {z 79 96} {sil 97 97}]}

timeAligned = [{{k 19 28} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ae 29 37} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{th 38 46} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{ow 47 61} [{0 4} {2 4} {3 4} {1 4} {4 4}]} {{m 62 73} [{2 5} {3 5} {4 5}]} {{z 78 95} [{0 6} {1 6} {3 7} {2 7} {4 7}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 26
i, iTime, newITime, timeStartFrom = 2 1 2 36
i, iTime, newITime, timeStartFrom = 3 2 3 46
i, iTime, newITime, timeStartFrom = 4 3 -1 59
i, iTime, newITime, timeStartFrom = 5 3 4 59
i, iTime, newITime, timeStartFrom = 6 4 5 73
combinedVerdict    = [{k 0} {ae 0} {th 0} {ow 0} {d 2} {m 3} {z 0}]
ruleAlignedVerdict = [{k 0} {ae 0} {th 0} {ow 0} {d 2} {m 3} {z 0}]

score->
+1 for k
+1 for ae
+1 for th
+1 for ow
-1 for d
-1 for m
+1 for z
score<-: 3
bestResult = {3 [{k 0} {ae 0} {th 0} {ow 0} {d 2} {m 3} {z 0}] [k ae th ow d z]}
testPronounce k good ae good th good ow good d missing m surprise z good
publish->
phonsToAlphas = [{[k] c} {[ae] a} {[th] th} {[ow] o} {[d] de} {[z] s}]
getVerdict<-:new {c [k] 0}
getVerdict<-:new {a [ae] 0}
getVerdict<-:new {th [th] 0}
getVerdict<-:new {o [ow] 0}
getVerdict<-:new {de [d] 2}
getVerdict<-:new {s [z] 0}
lettersVerdicts = [{c [k] 0} {a [ae] 0} {th [th] 0} {o [ow] 0} {de [d] 2} {m [m] 3} {s [z] 0}]
publish<-
Total: 224.123361ms
{
  "results": [
    {
      "letters": "c",
      "phonemes": "k",
      "verdict": "good"
    },
    {
      "letters": "a",
      "phonemes": "æ",
      "verdict": "good"
    },
    {
      "letters": "th",
      "phonemes": "θ",
      "verdict": "good"
    },
    {
      "letters": "o",
      "phonemes": "oʊ",
      "verdict": "good"
    },
    {
      "letters": "de",
      "phonemes": "d",
      "verdict": "missing"
    },
    {
      "letters": "m",
      "phonemes": "m",
      "verdict": "surprise"
    },
    {
      "letters": "s",
      "phonemes": "z",
      "verdict": "good"
    }
  ],
  "err": null
}
