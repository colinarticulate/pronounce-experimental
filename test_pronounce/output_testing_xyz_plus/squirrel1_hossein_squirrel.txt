
 length of audio =  2.794313



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.76 1.06 1.82

 start3, duration3, end3 =  0.76 0.6 1.3599999999999999

 Initial start, duration, end =  0.66 1.1600000000000001 1.82

 Cut at: start, duration =  0.66 1.61     guard_end =  2.27 

Running scan for frate = 125
Running scan for frate = 125
Considering guard w with value 2 for s ...
Considering guard m with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, m

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard zh with value 4 for w ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 3 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard y with value 3.5999999999999996 for r ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 3 for axl ...
Considering guard ch with value 3 for axl ...
candidateGuards = map[ch:true sh:true]
Picking guard, sh


frate, target rule = 125 public <squirrel> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_m_p_ch_s_k> m)] | [(m <any_Cx_m_p_ch_s_k>)]) (s | z | ((<any_Cx_m_p_ch_s_k> m) | (m <any_Cx_m_p_ch_s_k>)))) (([(<any_Cx_n_m_k_w_s> n)] | [(n <any_Cx_n_m_k_w_s>)]) (k | ((<any_Cx_n_m_k_w> n) | (n <any_Cx_n_m_k_w>)))) (([(<any_Cx_zh_n_w_ax_k> zh)] | [(zh <any_Cx_zh_n_w_ax_k>)]) (w | ((<any_Cx_zh_n_w_ax_k> zh) | (zh <any_Cx_zh_n_w_ax_k>)))) (([(<any_Cx_sh_zh_ax_r_w> sh)] | [(sh <any_Cx_sh_zh_ax_r_w>)]) (ax | ((<any_Cx_sh_zh_ax_r_w> sh) | (sh <any_Cx_sh_zh_ax_r_w>)))) (([(<any_Cx_y_sh_r_ax> y)] | [(y <any_Cx_y_sh_r_ax>)]) (r | ((<any_Cx_y_sh_r_axl_ax> y) | (y <any_Cx_y_sh_r_axl_ax>)))) (([(<any_Cx_sh_y_axl_r> sh)] | [(sh <any_Cx_sh_y_axl_r>)]) (axl | ((<any_Cx_sh_y_axl_r> sh) | (sh <any_Cx_sh_y_axl_r>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_sh_axl_hh> hh)] | [(hh <any_Cx_sh_axl_hh>)]) sil))
Running scan for frate = 105
Considering guard m with value 2 for s ...
Considering guard w with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, m

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard zh with value 4 for w ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 3 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard y with value 3.5999999999999996 for r ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 3 for axl ...
Considering guard ch with value 3 for axl ...
candidateGuards = map[ch:true sh:true]
Picking guard, sh


frate, target rule = 105 public <squirrel> = (((sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil p (sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_m_p_sh_s_k> m)] | [(m <any_Cx_m_p_sh_s_k>)]) (s | z | ((<any_Cx_m_p_sh_s_k> m) | (m <any_Cx_m_p_sh_s_k>)))) (([(<any_Cx_n_m_k_w_s> n)] | [(n <any_Cx_n_m_k_w_s>)]) (k | ((<any_Cx_n_m_k_w> n) | (n <any_Cx_n_m_k_w>)))) (([(<any_Cx_zh_n_w_ax_k> zh)] | [(zh <any_Cx_zh_n_w_ax_k>)]) (w | ((<any_Cx_zh_n_w_ax_k> zh) | (zh <any_Cx_zh_n_w_ax_k>)))) (([(<any_Cx_sh_zh_ax_r_w> sh)] | [(sh <any_Cx_sh_zh_ax_r_w>)]) (ax | ((<any_Cx_sh_zh_ax_r_w> sh) | (sh <any_Cx_sh_zh_ax_r_w>)))) (([(<any_Cx_y_sh_r_ax> y)] | [(y <any_Cx_y_sh_r_ax>)]) (r | ((<any_Cx_y_sh_r_axl_ax> y) | (y <any_Cx_y_sh_r_axl_ax>)))) (([(<any_Cx_sh_y_axl_r> sh)] | [(sh <any_Cx_sh_y_axl_r>)]) (axl | ((<any_Cx_sh_y_axl_r> sh) | (sh <any_Cx_sh_y_axl_r>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_sh_axl_m> m)] | [(m <any_Cx_sh_axl_m>)]) sil))
Running scan for frate = 91
Considering guard m with value 2 for s ...
Considering guard w with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, m

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard zh with value 4 for w ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 3 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard y with value 3.5999999999999996 for r ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard ch with value 3 for axl ...
Considering guard sh with value 3 for axl ...
candidateGuards = map[ch:true sh:true]
Picking guard, ch


frate, target rule = 91 public <squirrel> = (((sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil p (sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_m_p_t_s_k> m)] | [(m <any_Cx_m_p_t_s_k>)]) (s | z | ((<any_Cx_m_p_t_s_k> m) | (m <any_Cx_m_p_t_s_k>)))) (([(<any_Cx_n_m_k_w_s> n)] | [(n <any_Cx_n_m_k_w_s>)]) (k | ((<any_Cx_n_m_k_w> n) | (n <any_Cx_n_m_k_w>)))) (([(<any_Cx_zh_n_w_ax_k> zh)] | [(zh <any_Cx_zh_n_w_ax_k>)]) (w | ((<any_Cx_zh_n_w_ax_k> zh) | (zh <any_Cx_zh_n_w_ax_k>)))) (([(<any_Cx_sh_zh_ax_r_w> sh)] | [(sh <any_Cx_sh_zh_ax_r_w>)]) (ax | ((<any_Cx_sh_zh_ax_r_w> sh) | (sh <any_Cx_sh_zh_ax_r_w>)))) (([(<any_Cx_y_sh_r_ax> y)] | [(y <any_Cx_y_sh_r_ax>)]) (r | ((<any_Cx_y_sh_r_axl_ax> y) | (y <any_Cx_y_sh_r_axl_ax>)))) (([(<any_Cx_ch_y_axl_r> ch)] | [(ch <any_Cx_ch_y_axl_r>)]) (axl | ((<any_Cx_ch_y_axl_r> ch) | (ch <any_Cx_ch_y_axl_r>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_ch_axl_p> p)] | [(p <any_Cx_ch_axl_p>)]) sil))
Running scan for frate = 80
Considering guard w with value 2 for s ...
Considering guard m with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, w

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard zh with value 4 for w ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 3 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard y with value 3.5999999999999996 for r ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard ch with value 3 for axl ...
Considering guard sh with value 3 for axl ...
candidateGuards = map[ch:true sh:true]
Picking guard, ch


frate, target rule = 80 public <squirrel> = (((sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil p (sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_w_p_sh_s_k> w)] | [(w <any_Cx_w_p_sh_s_k>)]) (s | z | ((<any_Cx_w_p_sh_s_k> w) | (w <any_Cx_w_p_sh_s_k>)))) (([(<any_Cx_n_w_k_w_s> n)] | [(n <any_Cx_n_w_k_w_s>)]) (k | ((<any_Cx_n_w_k_w> n) | (n <any_Cx_n_w_k_w>)))) (([(<any_Cx_zh_n_w_ax_k> zh)] | [(zh <any_Cx_zh_n_w_ax_k>)]) (w | ((<any_Cx_zh_n_w_ax_k> zh) | (zh <any_Cx_zh_n_w_ax_k>)))) (([(<any_Cx_sh_zh_ax_r_w> sh)] | [(sh <any_Cx_sh_zh_ax_r_w>)]) (ax | ((<any_Cx_sh_zh_ax_r_w> sh) | (sh <any_Cx_sh_zh_ax_r_w>)))) (([(<any_Cx_y_sh_r_ax> y)] | [(y <any_Cx_y_sh_r_ax>)]) (r | ((<any_Cx_y_sh_r_axl_ax> y) | (y <any_Cx_y_sh_r_axl_ax>)))) (([(<any_Cx_ch_y_axl_r> ch)] | [(ch <any_Cx_ch_y_axl_r>)]) (axl | ((<any_Cx_ch_y_axl_r> ch) | (ch <any_Cx_ch_y_axl_r>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_ch_axl_m> m)] | [(m <any_Cx_ch_axl_m>)]) sil))
Running scan for frate = 72
Considering guard m with value 2 for s ...
Considering guard w with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, m

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard zh with value 4 for w ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 3 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard y with value 3.5999999999999996 for r ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard ch with value 3 for axl ...
Considering guard sh with value 3 for axl ...
candidateGuards = map[ch:true sh:true]
Picking guard, ch


frate, target rule = 72 public <squirrel> = (((sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil p (sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_m_p_sh_s_k> m)] | [(m <any_Cx_m_p_sh_s_k>)]) (s | z | ((<any_Cx_m_p_sh_s_k> m) | (m <any_Cx_m_p_sh_s_k>)))) (([(<any_Cx_n_m_k_w_s> n)] | [(n <any_Cx_n_m_k_w_s>)]) (k | ((<any_Cx_n_m_k_w> n) | (n <any_Cx_n_m_k_w>)))) (([(<any_Cx_zh_n_w_ax_k> zh)] | [(zh <any_Cx_zh_n_w_ax_k>)]) (w | ((<any_Cx_zh_n_w_ax_k> zh) | (zh <any_Cx_zh_n_w_ax_k>)))) (([(<any_Cx_sh_zh_ax_r_w> sh)] | [(sh <any_Cx_sh_zh_ax_r_w>)]) (ax | ((<any_Cx_sh_zh_ax_r_w> sh) | (sh <any_Cx_sh_zh_ax_r_w>)))) (([(<any_Cx_y_sh_r_ax> y)] | [(y <any_Cx_y_sh_r_ax>)]) (r | ((<any_Cx_y_sh_r_axl_ax> y) | (y <any_Cx_y_sh_r_axl_ax>)))) (([(<any_Cx_ch_y_axl_r> ch)] | [(ch <any_Cx_ch_y_axl_r>)]) (axl | ((<any_Cx_ch_y_axl_r> ch) | (ch <any_Cx_ch_y_axl_r>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_ch_axl_hh> hh)] | [(hh <any_Cx_ch_axl_hh>)]) sil))
Running scan for frate = 125
Considering guard w with value 2 for s ...
Considering guard m with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, w

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard zh with value 4 for w ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 3 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard z with value 2 for r ...
Considering guard y with value 2 for r ...
candidateGuards = map[y:true z:true]
Picking guard, z

Considering guard y with value 3.5999999999999996 for ax ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 125 public <squirrel> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_w_p_ch_s_k> w)] | [(w <any_Cx_w_p_ch_s_k>)]) (s | z | ((<any_Cx_w_p_ch_s_k> w) | (w <any_Cx_w_p_ch_s_k>)))) (([(<any_Cx_n_w_k_w_s> n)] | [(n <any_Cx_n_w_k_w_s>)]) (k | ((<any_Cx_n_w_k_w> n) | (n <any_Cx_n_w_k_w>)))) (([(<any_Cx_zh_n_w_ax_k> zh)] | [(zh <any_Cx_zh_n_w_ax_k>)]) (w | ((<any_Cx_zh_n_w_ax_k> zh) | (zh <any_Cx_zh_n_w_ax_k>)))) (([(<any_Cx_sh_zh_ax_r_w> sh)] | [(sh <any_Cx_sh_zh_ax_r_w>)]) (ax | ((<any_Cx_sh_zh_ax_r_w> sh) | (sh <any_Cx_sh_zh_ax_r_w>)))) (([(<any_Cx_z_sh_r_ax_ax> z)] | [(z <any_Cx_z_sh_r_ax_ax>)]) (r | ((<any_Cx_z_sh_r_ax_ax> z) | (z <any_Cx_z_sh_r_ax_ax>)))) (([(<any_Cx_y_z_ax_r> y)] | [(y <any_Cx_y_z_ax_r>)]) (ax | ((<any_Cx_y_z_ax_l_r> y) | (y <any_Cx_y_z_ax_l_r>)))) (([(<any_Cx_sh_y_l_ax> sh)] | [(sh <any_Cx_sh_y_l_ax>)]) (l | ((<any_Cx_sh_y_l_ax> sh) | (sh <any_Cx_sh_y_l_ax>)))) (([(<any_vowel_noSlide> w)] | [(w <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_w> w)] | [(w <any_Cx_sh_l_w>)]) sil))
Running scan for frate = 105
Considering guard m with value 2 for s ...
Considering guard w with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, m

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard zh with value 4 for w ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 3 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard y with value 2 for r ...
Considering guard z with value 2 for r ...
candidateGuards = map[y:true z:true]
Picking guard, y

Considering guard y with value 3.5999999999999996 for ax ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 105 public <squirrel> = (((sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil p (sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_m_p_sh_s_k> m)] | [(m <any_Cx_m_p_sh_s_k>)]) (s | z | ((<any_Cx_m_p_sh_s_k> m) | (m <any_Cx_m_p_sh_s_k>)))) (([(<any_Cx_n_m_k_w_s> n)] | [(n <any_Cx_n_m_k_w_s>)]) (k | ((<any_Cx_n_m_k_w> n) | (n <any_Cx_n_m_k_w>)))) (([(<any_Cx_zh_n_w_ax_k> zh)] | [(zh <any_Cx_zh_n_w_ax_k>)]) (w | ((<any_Cx_zh_n_w_ax_k> zh) | (zh <any_Cx_zh_n_w_ax_k>)))) (([(<any_Cx_sh_zh_ax_r_w> sh)] | [(sh <any_Cx_sh_zh_ax_r_w>)]) (ax | ((<any_Cx_sh_zh_ax_r_w> sh) | (sh <any_Cx_sh_zh_ax_r_w>)))) (([(<any_Cx_y_sh_r_ax_ax> y)] | [(y <any_Cx_y_sh_r_ax_ax>)]) (r | ((<any_Cx_y_sh_r_ax_ax> y) | (y <any_Cx_y_sh_r_ax_ax>)))) (([(<any_Cx_y_y_ax_r> y)] | [(y <any_Cx_y_y_ax_r>)]) (ax | ((<any_Cx_y_y_ax_l_r> y) | (y <any_Cx_y_y_ax_l_r>)))) (([(<any_Cx_sh_y_l_ax> sh)] | [(sh <any_Cx_sh_y_l_ax>)]) (l | ((<any_Cx_sh_y_l_ax> sh) | (sh <any_Cx_sh_y_l_ax>)))) (([(<any_vowel_noSlide> r)] | [(r <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_r> r)] | [(r <any_Cx_sh_l_r>)]) sil))
Running scan for frate = 91
Considering guard m with value 2 for s ...
Considering guard w with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, m

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard zh with value 4 for w ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 3 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard y with value 2 for r ...
Considering guard z with value 2 for r ...
candidateGuards = map[y:true z:true]
Picking guard, y

Considering guard y with value 3.5999999999999996 for ax ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 91 public <squirrel> = (((sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil p (sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_m_p_t_s_k> m)] | [(m <any_Cx_m_p_t_s_k>)]) (s | z | ((<any_Cx_m_p_t_s_k> m) | (m <any_Cx_m_p_t_s_k>)))) (([(<any_Cx_n_m_k_w_s> n)] | [(n <any_Cx_n_m_k_w_s>)]) (k | ((<any_Cx_n_m_k_w> n) | (n <any_Cx_n_m_k_w>)))) (([(<any_Cx_zh_n_w_ax_k> zh)] | [(zh <any_Cx_zh_n_w_ax_k>)]) (w | ((<any_Cx_zh_n_w_ax_k> zh) | (zh <any_Cx_zh_n_w_ax_k>)))) (([(<any_Cx_sh_zh_ax_r_w> sh)] | [(sh <any_Cx_sh_zh_ax_r_w>)]) (ax | ((<any_Cx_sh_zh_ax_r_w> sh) | (sh <any_Cx_sh_zh_ax_r_w>)))) (([(<any_Cx_y_sh_r_ax_ax> y)] | [(y <any_Cx_y_sh_r_ax_ax>)]) (r | ((<any_Cx_y_sh_r_ax_ax> y) | (y <any_Cx_y_sh_r_ax_ax>)))) (([(<any_Cx_y_y_ax_r> y)] | [(y <any_Cx_y_y_ax_r>)]) (ax | ((<any_Cx_y_y_ax_l_r> y) | (y <any_Cx_y_y_ax_l_r>)))) (([(<any_Cx_sh_y_l_ax> sh)] | [(sh <any_Cx_sh_y_l_ax>)]) (l | ((<any_Cx_sh_y_l_ax> sh) | (sh <any_Cx_sh_y_l_ax>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_b> b)] | [(b <any_Cx_sh_l_b>)]) sil))
Running scan for frate = 80
Considering guard w with value 2 for s ...
Considering guard m with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, w

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard zh with value 4 for w ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 3 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard y with value 2 for r ...
Considering guard z with value 2 for r ...
candidateGuards = map[y:true z:true]
Picking guard, y

Considering guard y with value 3.5999999999999996 for ax ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 80 public <squirrel> = (((sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]) | (sil p (sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]))) (([(<any_Cx_w_p_th_s_k> w)] | [(w <any_Cx_w_p_th_s_k>)]) (s | z | ((<any_Cx_w_p_th_s_k> w) | (w <any_Cx_w_p_th_s_k>)))) (([(<any_Cx_n_w_k_w_s> n)] | [(n <any_Cx_n_w_k_w_s>)]) (k | ((<any_Cx_n_w_k_w> n) | (n <any_Cx_n_w_k_w>)))) (([(<any_Cx_zh_n_w_ax_k> zh)] | [(zh <any_Cx_zh_n_w_ax_k>)]) (w | ((<any_Cx_zh_n_w_ax_k> zh) | (zh <any_Cx_zh_n_w_ax_k>)))) (([(<any_Cx_sh_zh_ax_r_w> sh)] | [(sh <any_Cx_sh_zh_ax_r_w>)]) (ax | ((<any_Cx_sh_zh_ax_r_w> sh) | (sh <any_Cx_sh_zh_ax_r_w>)))) (([(<any_Cx_y_sh_r_ax_ax> y)] | [(y <any_Cx_y_sh_r_ax_ax>)]) (r | ((<any_Cx_y_sh_r_ax_ax> y) | (y <any_Cx_y_sh_r_ax_ax>)))) (([(<any_Cx_y_y_ax_r> y)] | [(y <any_Cx_y_y_ax_r>)]) (ax | ((<any_Cx_y_y_ax_l_r> y) | (y <any_Cx_y_y_ax_l_r>)))) (([(<any_Cx_sh_y_l_ax> sh)] | [(sh <any_Cx_sh_y_l_ax>)]) (l | ((<any_Cx_sh_y_l_ax> sh) | (sh <any_Cx_sh_y_l_ax>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_thr> thr)] | [(thr <any_Cx_sh_l_thr>)]) sil))
Running scan for frate = 72
Considering guard m with value 2 for s ...
Considering guard w with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, m

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard zh with value 4 for w ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 3 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard z with value 2 for r ...
Considering guard y with value 2 for r ...
candidateGuards = map[y:true z:true]
Picking guard, z

Running scan for frate = 125
Considering guard y with value 3.5999999999999996 for ax ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard m with value 2 for s ...
Considering guard w with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, m

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard m with value 4 for kw ...
Considering guard w with value 4 for kw ...
candidateGuards = map[m:true w:true]
Picking guard, m

Considering guard z with value 1.6 for ih ...
candidateGuards = map[z:true]
Picking guard, z


Considering guard s with value 4 for r ...
candidateGuards = map[s:true]
Picking guard, s

frate, target rule = 72 public <squirrel> = (((sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil p (sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_m_p_sh_s_k> m)] | [(m <any_Cx_m_p_sh_s_k>)]) (s | z | ((<any_Cx_m_p_sh_s_k> m) | (m <any_Cx_m_p_sh_s_k>)))) (([(<any_Cx_n_m_k_w_s> n)] | [(n <any_Cx_n_m_k_w_s>)]) (k | ((<any_Cx_n_m_k_w> n) | (n <any_Cx_n_m_k_w>)))) (([(<any_Cx_zh_n_w_ax_k> zh)] | [(zh <any_Cx_zh_n_w_ax_k>)]) (w | ((<any_Cx_zh_n_w_ax_k> zh) | (zh <any_Cx_zh_n_w_ax_k>)))) (([(<any_Cx_sh_zh_ax_r_w> sh)] | [(sh <any_Cx_sh_zh_ax_r_w>)]) (ax | ((<any_Cx_sh_zh_ax_r_w> sh) | (sh <any_Cx_sh_zh_ax_r_w>)))) (([(<any_Cx_z_sh_r_ax_ax> z)] | [(z <any_Cx_z_sh_r_ax_ax>)]) (r | ((<any_Cx_z_sh_r_ax_ax> z) | (z <any_Cx_z_sh_r_ax_ax>)))) (([(<any_Cx_y_z_ax_r> y)] | [(y <any_Cx_y_z_ax_r>)]) (ax | ((<any_Cx_y_z_ax_l_r> y) | (y <any_Cx_y_z_ax_l_r>)))) (([(<any_Cx_sh_y_l_ax> sh)] | [(sh <any_Cx_sh_y_l_ax>)]) (l | ((<any_Cx_sh_y_l_ax> sh) | (sh <any_Cx_sh_y_l_ax>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_f> f)] | [(f <any_Cx_sh_l_f>)]) sil))
Considering guard ch with value 3 for axl ...
Considering guard sh with value 3 for axl ...
candidateGuards = map[ch:true sh:true]
Picking guard, ch


Running scan for frate = 125
frate, target rule = 125 public <squirrel> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_m_p_ch_s_kw> m)] | [(m <any_Cx_m_p_ch_s_kw>)]) (s | z | ((<any_Cx_m_p_ch_s_kw> m) | (m <any_Cx_m_p_ch_s_kw>)))) (([(<any_Cx_m_m_kw_s> m)] | [(m <any_Cx_m_m_kw_s>)]) (kw | ((<any_Cx_m_m_kw> m) | (m <any_Cx_m_m_kw>)))) ((([(<any_Vx_z_m_ih_noSlide> z)] | [(z <any_Vx_z_m_ih_noSlide>)]) ([(<any_Cx_z_m_r_kw> z)] | [(z <any_Cx_z_m_r_kw>)])) (ih | ((<any_Vx_z_m_ih_noSlide> z) | (z <any_Vx_z_m_ih_noSlide>)))) (([(<any_Cx_s_z_r> s)] | [(s <any_Cx_s_z_r>)]) (r | ((<any_Cx_s_z_r_axl> s) | (s <any_Cx_s_z_r_axl>)))) (([(<any_Cx_ch_s_axl_r> ch)] | [(ch <any_Cx_ch_s_axl_r>)]) (axl | ((<any_Cx_ch_s_axl_r> ch) | (ch <any_Cx_ch_s_axl_r>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_ch_axl_n> n)] | [(n <any_Cx_ch_axl_n>)]) sil))
Running scan for frate = 105
Considering guard w with value 2 for s ...
Considering guard m with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, w

Considering guard m with value 2 for s ...
Considering guard w with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, m

Considering guard w with value 4 for kw ...
Considering guard m with value 4 for kw ...
candidateGuards = map[m:true w:true]
Picking guard, w

Considering guard m with value 7.199999999999999 for kw ...
candidateGuards = map[m:true]
Picking guard, m

Considering guard z with value 1.6 for ih ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard z with value 2 for ax ...
Considering guard zh with value 2 for ax ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard s with value 4 for r ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard y with value 3.5999999999999996 for r ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard ch with value 3 for axl ...
Considering guard sh with value 3 for axl ...
candidateGuards = map[ch:true sh:true]
Picking guard, ch

Considering guard sh with value 3 for axl ...
Considering guard ch with value 3 for axl ...
candidateGuards = map[ch:true sh:true]
Picking guard, sh



frate, target rule = 105 public <squirrel> = (((sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_w_p_z_s_kw> w)] | [(w <any_Cx_w_p_z_s_kw>)]) (s | z | ((<any_Cx_w_p_z_s_kw> w) | (w <any_Cx_w_p_z_s_kw>)))) (([(<any_Cx_w_w_kw_s> w)] | [(w <any_Cx_w_w_kw_s>)]) (kw | ((<any_Cx_w_w_kw> w) | (w <any_Cx_w_w_kw>)))) ((([(<any_Vx_z_w_ih_noSlide> z)] | [(z <any_Vx_z_w_ih_noSlide>)]) ([(<any_Cx_z_w_r_kw> z)] | [(z <any_Cx_z_w_r_kw>)])) (ih | ((<any_Vx_z_w_ih_noSlide> z) | (z <any_Vx_z_w_ih_noSlide>)))) (([(<any_Cx_s_z_r> s)] | [(s <any_Cx_s_z_r>)]) (r | ((<any_Cx_s_z_r_axl> s) | (s <any_Cx_s_z_r_axl>)))) (([(<any_Cx_ch_s_axl_r> ch)] | [(ch <any_Cx_ch_s_axl_r>)]) (axl | ((<any_Cx_ch_s_axl_r> ch) | (ch <any_Cx_ch_s_axl_r>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_ch_axl_hh> hh)] | [(hh <any_Cx_ch_axl_hh>)]) sil))
Running scan for frate = 91
frate, target rule = 125 public <squirrel> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_m_p_ch_s_kw> m)] | [(m <any_Cx_m_p_ch_s_kw>)]) (s | z | ((<any_Cx_m_p_ch_s_kw> m) | (m <any_Cx_m_p_ch_s_kw>)))) (([(<any_Cx_m_m_kw_ax_s> m)] | [(m <any_Cx_m_m_kw_ax_s>)]) (kw | ((<any_Cx_m_m_kw_ax> m) | (m <any_Cx_m_m_kw_ax>)))) (([(<any_Cx_z_m_ax_r_kw> z)] | [(z <any_Cx_z_m_ax_r_kw>)]) (ax | ((<any_Cx_z_m_ax_r_kw> z) | (z <any_Cx_z_m_ax_r_kw>)))) (([(<any_Cx_y_z_r_ax> y)] | [(y <any_Cx_y_z_r_ax>)]) (r | ((<any_Cx_y_z_r_axl_ax> y) | (y <any_Cx_y_z_r_axl_ax>)))) (([(<any_Cx_sh_y_axl_r> sh)] | [(sh <any_Cx_sh_y_axl_r>)]) (axl | ((<any_Cx_sh_y_axl_r> sh) | (sh <any_Cx_sh_y_axl_r>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_sh_axl_p> p)] | [(p <any_Cx_sh_axl_p>)]) sil))
Running scan for frate = 105
Considering guard m with value 2 for s ...
Considering guard w with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, m

Considering guard w with value 2 for s ...
Considering guard m with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, w

Considering guard m with value 7.199999999999999 for kw ...
candidateGuards = map[m:true]
Picking guard, m

Considering guard m with value 4 for kw ...
Considering guard w with value 4 for kw ...
candidateGuards = map[m:true w:true]
Picking guard, m

Considering guard zh with value 2 for ax ...
Considering guard z with value 2 for ax ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard z with value 1.6 for ih ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard y with value 3.5999999999999996 for r ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard s with value 4 for r ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard ch with value 3 for axl ...
Considering guard sh with value 3 for axl ...
candidateGuards = map[ch:true sh:true]
Picking guard, ch

Considering guard ch with value 3 for axl ...
Considering guard sh with value 3 for axl ...
candidateGuards = map[ch:true sh:true]
Picking guard, ch

Running scan for frate = 125

frate, target rule = 105 public <squirrel> = (((sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil p (sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_m_p_sh_s_kw> m)] | [(m <any_Cx_m_p_sh_s_kw>)]) (s | z | ((<any_Cx_m_p_sh_s_kw> m) | (m <any_Cx_m_p_sh_s_kw>)))) (([(<any_Cx_m_m_kw_ax_s> m)] | [(m <any_Cx_m_m_kw_ax_s>)]) (kw | ((<any_Cx_m_m_kw_ax> m) | (m <any_Cx_m_m_kw_ax>)))) (([(<any_Cx_zh_m_ax_r_kw> zh)] | [(zh <any_Cx_zh_m_ax_r_kw>)]) (ax | ((<any_Cx_zh_m_ax_r_kw> zh) | (zh <any_Cx_zh_m_ax_r_kw>)))) (([(<any_Cx_y_zh_r_ax> y)] | [(y <any_Cx_y_zh_r_ax>)]) (r | ((<any_Cx_y_zh_r_axl_ax> y) | (y <any_Cx_y_zh_r_axl_ax>)))) (([(<any_Cx_ch_y_axl_r> ch)] | [(ch <any_Cx_ch_y_axl_r>)]) (axl | ((<any_Cx_ch_y_axl_r> ch) | (ch <any_Cx_ch_y_axl_r>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_ch_axl_n> n)] | [(n <any_Cx_ch_axl_n>)]) sil))
Running scan for frate = 91
Considering guard w with value 2 for s ...
Considering guard m with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, w

Considering guard m with value 7.199999999999999 for kw ...
candidateGuards = map[m:true]
Picking guard, m

Considering guard z with value 2 for ax ...
Considering guard zh with value 2 for ax ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard y with value 3.5999999999999996 for r ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard ch with value 3 for axl ...
Considering guard sh with value 3 for axl ...
candidateGuards = map[ch:true sh:true]
Picking guard, ch


frate, target rule = 91 public <squirrel> = (((sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]) | (sil p (sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]))) (([(<any_Cx_w_p_th_s_kw> w)] | [(w <any_Cx_w_p_th_s_kw>)]) (s | z | ((<any_Cx_w_p_th_s_kw> w) | (w <any_Cx_w_p_th_s_kw>)))) (([(<any_Cx_m_w_kw_ax_s> m)] | [(m <any_Cx_m_w_kw_ax_s>)]) (kw | ((<any_Cx_m_w_kw_ax> m) | (m <any_Cx_m_w_kw_ax>)))) (([(<any_Cx_z_m_ax_r_kw> z)] | [(z <any_Cx_z_m_ax_r_kw>)]) (ax | ((<any_Cx_z_m_ax_r_kw> z) | (z <any_Cx_z_m_ax_r_kw>)))) (([(<any_Cx_y_z_r_ax> y)] | [(y <any_Cx_y_z_r_ax>)]) (r | ((<any_Cx_y_z_r_axl_ax> y) | (y <any_Cx_y_z_r_axl_ax>)))) (([(<any_Cx_ch_y_axl_r> ch)] | [(ch <any_Cx_ch_y_axl_r>)]) (axl | ((<any_Cx_ch_y_axl_r> ch) | (ch <any_Cx_ch_y_axl_r>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_ch_axl_ng> ng)] | [(ng <any_Cx_ch_axl_ng>)]) sil))
Running scan for frate = 80
Considering guard m with value 2 for s ...
Considering guard w with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, m

Considering guard m with value 7.199999999999999 for kw ...
candidateGuards = map[m:true]
Picking guard, m

Considering guard z with value 2 for ax ...
Considering guard zh with value 2 for ax ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard y with value 3.5999999999999996 for r ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 3 for axl ...
Considering guard ch with value 3 for axl ...
candidateGuards = map[ch:true sh:true]
Picking guard, sh


frate, target rule = 80 public <squirrel> = (((sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil p (sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_m_p_t_s_kw> m)] | [(m <any_Cx_m_p_t_s_kw>)]) (s | z | ((<any_Cx_m_p_t_s_kw> m) | (m <any_Cx_m_p_t_s_kw>)))) (([(<any_Cx_m_m_kw_ax_s> m)] | [(m <any_Cx_m_m_kw_ax_s>)]) (kw | ((<any_Cx_m_m_kw_ax> m) | (m <any_Cx_m_m_kw_ax>)))) (([(<any_Cx_z_m_ax_r_kw> z)] | [(z <any_Cx_z_m_ax_r_kw>)]) (ax | ((<any_Cx_z_m_ax_r_kw> z) | (z <any_Cx_z_m_ax_r_kw>)))) (([(<any_Cx_y_z_r_ax> y)] | [(y <any_Cx_y_z_r_ax>)]) (r | ((<any_Cx_y_z_r_axl_ax> y) | (y <any_Cx_y_z_r_axl_ax>)))) (([(<any_Cx_sh_y_axl_r> sh)] | [(sh <any_Cx_sh_y_axl_r>)]) (axl | ((<any_Cx_sh_y_axl_r> sh) | (sh <any_Cx_sh_y_axl_r>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_sh_axl_n> n)] | [(n <any_Cx_sh_axl_n>)]) sil))
Running scan for frate = 72
Considering guard m with value 2 for s ...
Considering guard w with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, m

Considering guard m with value 7.199999999999999 for kw ...
candidateGuards = map[m:true]
Picking guard, m

Considering guard zh with value 2 for ax ...
Considering guard z with value 2 for ax ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard y with value 3.5999999999999996 for r ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 3 for axl ...
Considering guard ch with value 3 for axl ...
candidateGuards = map[ch:true sh:true]
Picking guard, sh


frate, target rule = 72 public <squirrel> = (((sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil p (sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_m_p_t_s_kw> m)] | [(m <any_Cx_m_p_t_s_kw>)]) (s | z | ((<any_Cx_m_p_t_s_kw> m) | (m <any_Cx_m_p_t_s_kw>)))) (([(<any_Cx_m_m_kw_ax_s> m)] | [(m <any_Cx_m_m_kw_ax_s>)]) (kw | ((<any_Cx_m_m_kw_ax> m) | (m <any_Cx_m_m_kw_ax>)))) (([(<any_Cx_zh_m_ax_r_kw> zh)] | [(zh <any_Cx_zh_m_ax_r_kw>)]) (ax | ((<any_Cx_zh_m_ax_r_kw> zh) | (zh <any_Cx_zh_m_ax_r_kw>)))) (([(<any_Cx_y_zh_r_ax> y)] | [(y <any_Cx_y_zh_r_ax>)]) (r | ((<any_Cx_y_zh_r_axl_ax> y) | (y <any_Cx_y_zh_r_axl_ax>)))) (([(<any_Cx_sh_y_axl_r> sh)] | [(sh <any_Cx_sh_y_axl_r>)]) (axl | ((<any_Cx_sh_y_axl_r> sh) | (sh <any_Cx_sh_y_axl_r>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_sh_axl_ng> ng)] | [(ng <any_Cx_sh_axl_ng>)]) sil))
Running scan for frate = 125

frate, target rule = 91 public <squirrel> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_w_p_ch_s_kw> w)] | [(w <any_Cx_w_p_ch_s_kw>)]) (s | z | ((<any_Cx_w_p_ch_s_kw> w) | (w <any_Cx_w_p_ch_s_kw>)))) (([(<any_Cx_m_w_kw_s> m)] | [(m <any_Cx_m_w_kw_s>)]) (kw | ((<any_Cx_m_w_kw> m) | (m <any_Cx_m_w_kw>)))) ((([(<any_Vx_z_m_ih_noSlide> z)] | [(z <any_Vx_z_m_ih_noSlide>)]) ([(<any_Cx_z_m_r_kw> z)] | [(z <any_Cx_z_m_r_kw>)])) (ih | ((<any_Vx_z_m_ih_noSlide> z) | (z <any_Vx_z_m_ih_noSlide>)))) (([(<any_Cx_s_z_r> s)] | [(s <any_Cx_s_z_r>)]) (r | ((<any_Cx_s_z_r_axl> s) | (s <any_Cx_s_z_r_axl>)))) (([(<any_Cx_ch_s_axl_r> ch)] | [(ch <any_Cx_ch_s_axl_r>)]) (axl | ((<any_Cx_ch_s_axl_r> ch) | (ch <any_Cx_ch_s_axl_r>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_ch_axl_thr> thr)] | [(thr <any_Cx_ch_axl_thr>)]) sil))
Running scan for frate = 80
Considering guard m with value 2 for s ...
Considering guard w with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, m

Considering guard m with value 4 for kw ...
Considering guard w with value 4 for kw ...
candidateGuards = map[m:true w:true]
Picking guard, m

Considering guard z with value 1.6 for ih ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard s with value 4 for r ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard ch with value 3 for axl ...
Considering guard sh with value 3 for axl ...
candidateGuards = map[ch:true sh:true]
Picking guard, sh


frate, target rule = 80 public <squirrel> = (((sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil p (sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_m_p_t_s_kw> m)] | [(m <any_Cx_m_p_t_s_kw>)]) (s | z | ((<any_Cx_m_p_t_s_kw> m) | (m <any_Cx_m_p_t_s_kw>)))) (([(<any_Cx_m_m_kw_s> m)] | [(m <any_Cx_m_m_kw_s>)]) (kw | ((<any_Cx_m_m_kw> m) | (m <any_Cx_m_m_kw>)))) ((([(<any_Vx_z_m_ih_noSlide> z)] | [(z <any_Vx_z_m_ih_noSlide>)]) ([(<any_Cx_z_m_r_kw> z)] | [(z <any_Cx_z_m_r_kw>)])) (ih | ((<any_Vx_z_m_ih_noSlide> z) | (z <any_Vx_z_m_ih_noSlide>)))) (([(<any_Cx_s_z_r> s)] | [(s <any_Cx_s_z_r>)]) (r | ((<any_Cx_s_z_r_axl> s) | (s <any_Cx_s_z_r_axl>)))) (([(<any_Cx_sh_s_axl_r> sh)] | [(sh <any_Cx_sh_s_axl_r>)]) (axl | ((<any_Cx_sh_s_axl_r> sh) | (sh <any_Cx_sh_s_axl_r>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_sh_axl_thr> thr)] | [(thr <any_Cx_sh_axl_thr>)]) sil))
Running scan for frate = 72
Considering guard w with value 2 for s ...
Considering guard m with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, w

Considering guard m with value 4 for kw ...
Considering guard w with value 4 for kw ...
candidateGuards = map[m:true w:true]
Picking guard, m

Considering guard z with value 1.6 for ih ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard s with value 4 for r ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard sh with value 3 for axl ...
Considering guard ch with value 3 for axl ...
candidateGuards = map[ch:true sh:true]
Picking guard, sh


frate, target rule = 72 public <squirrel> = (((sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_w_p_z_s_kw> w)] | [(w <any_Cx_w_p_z_s_kw>)]) (s | z | ((<any_Cx_w_p_z_s_kw> w) | (w <any_Cx_w_p_z_s_kw>)))) (([(<any_Cx_m_w_kw_s> m)] | [(m <any_Cx_m_w_kw_s>)]) (kw | ((<any_Cx_m_w_kw> m) | (m <any_Cx_m_w_kw>)))) ((([(<any_Vx_z_m_ih_noSlide> z)] | [(z <any_Vx_z_m_ih_noSlide>)]) ([(<any_Cx_z_m_r_kw> z)] | [(z <any_Cx_z_m_r_kw>)])) (ih | ((<any_Vx_z_m_ih_noSlide> z) | (z <any_Vx_z_m_ih_noSlide>)))) (([(<any_Cx_s_z_r> s)] | [(s <any_Cx_s_z_r>)]) (r | ((<any_Cx_s_z_r_axl> s) | (s <any_Cx_s_z_r_axl>)))) (([(<any_Cx_sh_s_axl_r> sh)] | [(sh <any_Cx_sh_s_axl_r>)]) (axl | ((<any_Cx_sh_s_axl_r> sh) | (sh <any_Cx_sh_s_axl_r>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_sh_axl_f> f)] | [(f <any_Cx_sh_axl_f>)]) sil))
Running scan for frate = 125
Considering guard m with value 2 for s ...
Considering guard w with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, m

Considering guard m with value 7.199999999999999 for kw ...
candidateGuards = map[m:true]
Picking guard, m

Considering guard z with value 2 for ax ...
Considering guard zh with value 2 for ax ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard z with value 2 for r ...
Considering guard y with value 2 for r ...
candidateGuards = map[y:true z:true]
Picking guard, z

Considering guard y with value 3.5999999999999996 for ax ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


Considering guard w with value 2 for s ...
Considering guard m with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, w

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard zh with value 4 for w ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 3 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard s with value 4 for r ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard ch with value 3 for axl ...
Considering guard sh with value 3 for axl ...
candidateGuards = map[ch:true sh:true]
Picking guard, ch


frate, target rule = 125 public <squirrel> = (((sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil p (sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_w_p_t_s_k> w)] | [(w <any_Cx_w_p_t_s_k>)]) (s | z | ((<any_Cx_w_p_t_s_k> w) | (w <any_Cx_w_p_t_s_k>)))) (([(<any_Cx_n_w_k_w_s> n)] | [(n <any_Cx_n_w_k_w_s>)]) (k | ((<any_Cx_n_w_k_w> n) | (n <any_Cx_n_w_k_w>)))) (([(<any_Cx_zh_n_w_k> zh)] | [(zh <any_Cx_zh_n_w_k>)]) (w | ((<any_Cx_zh_n_w_k> zh) | (zh <any_Cx_zh_n_w_k>)))) ((([(<any_Vx_sh_zh_ih_noSlide> sh)] | [(sh <any_Vx_sh_zh_ih_noSlide>)]) ([(<any_Cx_sh_zh_r_w> sh)] | [(sh <any_Cx_sh_zh_r_w>)])) (ih | ((<any_Vx_sh_zh_ih_noSlide> sh) | (sh <any_Vx_sh_zh_ih_noSlide>)))) (([(<any_Cx_s_sh_r> s)] | [(s <any_Cx_s_sh_r>)]) (r | ((<any_Cx_s_sh_r_axl> s) | (s <any_Cx_s_sh_r_axl>)))) (([(<any_Cx_ch_s_axl_r> ch)] | [(ch <any_Cx_ch_s_axl_r>)]) (axl | ((<any_Cx_ch_s_axl_r> ch) | (ch <any_Cx_ch_s_axl_r>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_ch_axl_hh> hh)] | [(hh <any_Cx_ch_axl_hh>)]) sil))
Running scan for frate = 105
Considering guard w with value 2 for s ...
Considering guard m with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, m

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard zh with value 4 for w ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 3 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard s with value 4 for r ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard ch with value 3 for axl ...
Considering guard sh with value 3 for axl ...
candidateGuards = map[ch:true sh:true]
Picking guard, ch


frate, target rule = 105 public <squirrel> = (((sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil p (sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_m_p_sh_s_k> m)] | [(m <any_Cx_m_p_sh_s_k>)]) (s | z | ((<any_Cx_m_p_sh_s_k> m) | (m <any_Cx_m_p_sh_s_k>)))) (([(<any_Cx_n_m_k_w_s> n)] | [(n <any_Cx_n_m_k_w_s>)]) (k | ((<any_Cx_n_m_k_w> n) | (n <any_Cx_n_m_k_w>)))) (([(<any_Cx_zh_n_w_k> zh)] | [(zh <any_Cx_zh_n_w_k>)]) (w | ((<any_Cx_zh_n_w_k> zh) | (zh <any_Cx_zh_n_w_k>)))) ((([(<any_Vx_sh_zh_ih_noSlide> sh)] | [(sh <any_Vx_sh_zh_ih_noSlide>)]) ([(<any_Cx_sh_zh_r_w> sh)] | [(sh <any_Cx_sh_zh_r_w>)])) (ih | ((<any_Vx_sh_zh_ih_noSlide> sh) | (sh <any_Vx_sh_zh_ih_noSlide>)))) (([(<any_Cx_s_sh_r> s)] | [(s <any_Cx_s_sh_r>)]) (r | ((<any_Cx_s_sh_r_axl> s) | (s <any_Cx_s_sh_r_axl>)))) (([(<any_Cx_ch_s_axl_r> ch)] | [(ch <any_Cx_ch_s_axl_r>)]) (axl | ((<any_Cx_ch_s_axl_r> ch) | (ch <any_Cx_ch_s_axl_r>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_ch_axl_ng> ng)] | [(ng <any_Cx_ch_axl_ng>)]) sil))
Running scan for frate = 91
Considering guard m with value 2 for s ...
Considering guard w with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, w

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard zh with value 4 for w ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 3 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard s with value 4 for r ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard ch with value 3 for axl ...
Considering guard sh with value 3 for axl ...
candidateGuards = map[ch:true sh:true]
Picking guard, ch


frate, target rule = 91 public <squirrel> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_w_p_ch_s_k> w)] | [(w <any_Cx_w_p_ch_s_k>)]) (s | z | ((<any_Cx_w_p_ch_s_k> w) | (w <any_Cx_w_p_ch_s_k>)))) (([(<any_Cx_n_w_k_w_s> n)] | [(n <any_Cx_n_w_k_w_s>)]) (k | ((<any_Cx_n_w_k_w> n) | (n <any_Cx_n_w_k_w>)))) (([(<any_Cx_zh_n_w_k> zh)] | [(zh <any_Cx_zh_n_w_k>)]) (w | ((<any_Cx_zh_n_w_k> zh) | (zh <any_Cx_zh_n_w_k>)))) ((([(<any_Vx_sh_zh_ih_noSlide> sh)] | [(sh <any_Vx_sh_zh_ih_noSlide>)]) ([(<any_Cx_sh_zh_r_w> sh)] | [(sh <any_Cx_sh_zh_r_w>)])) (ih | ((<any_Vx_sh_zh_ih_noSlide> sh) | (sh <any_Vx_sh_zh_ih_noSlide>)))) (([(<any_Cx_s_sh_r> s)] | [(s <any_Cx_s_sh_r>)]) (r | ((<any_Cx_s_sh_r_axl> s) | (s <any_Cx_s_sh_r_axl>)))) (([(<any_Cx_ch_s_axl_r> ch)] | [(ch <any_Cx_ch_s_axl_r>)]) (axl | ((<any_Cx_ch_s_axl_r> ch) | (ch <any_Cx_ch_s_axl_r>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_ch_axl_hh> hh)] | [(hh <any_Cx_ch_axl_hh>)]) sil))
Running scan for frate = 80
Considering guard w with value 2 for s ...
Considering guard m with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, w

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard zh with value 4 for w ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 3 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard s with value 4 for r ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard sh with value 3 for axl ...
Considering guard ch with value 3 for axl ...
candidateGuards = map[ch:true sh:true]
Picking guard, sh


frate, target rule = 80 public <squirrel> = (((sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil p (sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_w_p_sh_s_k> w)] | [(w <any_Cx_w_p_sh_s_k>)]) (s | z | ((<any_Cx_w_p_sh_s_k> w) | (w <any_Cx_w_p_sh_s_k>)))) (([(<any_Cx_n_w_k_w_s> n)] | [(n <any_Cx_n_w_k_w_s>)]) (k | ((<any_Cx_n_w_k_w> n) | (n <any_Cx_n_w_k_w>)))) (([(<any_Cx_zh_n_w_k> zh)] | [(zh <any_Cx_zh_n_w_k>)]) (w | ((<any_Cx_zh_n_w_k> zh) | (zh <any_Cx_zh_n_w_k>)))) ((([(<any_Vx_sh_zh_ih_noSlide> sh)] | [(sh <any_Vx_sh_zh_ih_noSlide>)]) ([(<any_Cx_sh_zh_r_w> sh)] | [(sh <any_Cx_sh_zh_r_w>)])) (ih | ((<any_Vx_sh_zh_ih_noSlide> sh) | (sh <any_Vx_sh_zh_ih_noSlide>)))) (([(<any_Cx_s_sh_r> s)] | [(s <any_Cx_s_sh_r>)]) (r | ((<any_Cx_s_sh_r_axl> s) | (s <any_Cx_s_sh_r_axl>)))) (([(<any_Cx_sh_s_axl_r> sh)] | [(sh <any_Cx_sh_s_axl_r>)]) (axl | ((<any_Cx_sh_s_axl_r> sh) | (sh <any_Cx_sh_s_axl_r>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_sh_axl_ng> ng)] | [(ng <any_Cx_sh_axl_ng>)]) sil))
Running scan for frate = 72
Considering guard m with value 2 for s ...
Considering guard w with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, m

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard zh with value 4 for w ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 3 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard s with value 4 for r ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard ch with value 3 for axl ...
Considering guard sh with value 3 for axl ...
candidateGuards = map[ch:true sh:true]
Picking guard, ch


frate, target rule = 72 public <squirrel> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_m_p_ch_s_k> m)] | [(m <any_Cx_m_p_ch_s_k>)]) (s | z | ((<any_Cx_m_p_ch_s_k> m) | (m <any_Cx_m_p_ch_s_k>)))) (([(<any_Cx_n_m_k_w_s> n)] | [(n <any_Cx_n_m_k_w_s>)]) (k | ((<any_Cx_n_m_k_w> n) | (n <any_Cx_n_m_k_w>)))) (([(<any_Cx_zh_n_w_k> zh)] | [(zh <any_Cx_zh_n_w_k>)]) (w | ((<any_Cx_zh_n_w_k> zh) | (zh <any_Cx_zh_n_w_k>)))) ((([(<any_Vx_sh_zh_ih_noSlide> sh)] | [(sh <any_Vx_sh_zh_ih_noSlide>)]) ([(<any_Cx_sh_zh_r_w> sh)] | [(sh <any_Cx_sh_zh_r_w>)])) (ih | ((<any_Vx_sh_zh_ih_noSlide> sh) | (sh <any_Vx_sh_zh_ih_noSlide>)))) (([(<any_Cx_s_sh_r> s)] | [(s <any_Cx_s_sh_r>)]) (r | ((<any_Cx_s_sh_r_axl> s) | (s <any_Cx_s_sh_r_axl>)))) (([(<any_Cx_ch_s_axl_r> ch)] | [(ch <any_Cx_ch_s_axl_r>)]) (axl | ((<any_Cx_ch_s_axl_r> ch) | (ch <any_Cx_ch_s_axl_r>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_ch_axl_hh> hh)] | [(hh <any_Cx_ch_axl_hh>)]) sil))
Considering guard m with value 2 for s ...
Considering guard w with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, m

Considering guard w with value 4 for kw ...
Considering guard m with value 4 for kw ...
candidateGuards = map[m:true w:true]
Picking guard, w

Considering guard z with value 1.6 for ih ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard z with value 2 for r ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard y with value 3.5999999999999996 for ax ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 125 public <squirrel> = (((sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil p (sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_m_p_sh_s_kw> m)] | [(m <any_Cx_m_p_sh_s_kw>)]) (s | z | ((<any_Cx_m_p_sh_s_kw> m) | (m <any_Cx_m_p_sh_s_kw>)))) (([(<any_Cx_w_m_kw_s> w)] | [(w <any_Cx_w_m_kw_s>)]) (kw | ((<any_Cx_w_m_kw> w) | (w <any_Cx_w_m_kw>)))) ((([(<any_Vx_z_w_ih_noSlide> z)] | [(z <any_Vx_z_w_ih_noSlide>)]) ([(<any_Cx_z_w_r_kw> z)] | [(z <any_Cx_z_w_r_kw>)])) (ih | ((<any_Vx_z_w_ih_noSlide> z) | (z <any_Vx_z_w_ih_noSlide>)))) (([(<any_Cx_z_z_r_ax> z)] | [(z <any_Cx_z_z_r_ax>)]) (r | ((<any_Cx_z_z_r_ax> z) | (z <any_Cx_z_z_r_ax>)))) (([(<any_Cx_y_z_ax_r> y)] | [(y <any_Cx_y_z_ax_r>)]) (ax | ((<any_Cx_y_z_ax_l_r> y) | (y <any_Cx_y_z_ax_l_r>)))) (([(<any_Cx_sh_y_l_ax> sh)] | [(sh <any_Cx_sh_y_l_ax>)]) (l | ((<any_Cx_sh_y_l_ax> sh) | (sh <any_Cx_sh_y_l_ax>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_d> d)] | [(d <any_Cx_sh_l_d>)]) sil))
Running scan for frate = 105
Considering guard m with value 2 for s ...
Considering guard w with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, m

Considering guard m with value 4 for kw ...
Considering guard w with value 4 for kw ...
candidateGuards = map[m:true w:true]
Picking guard, w

Considering guard z with value 1.6 for ih ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard z with value 2 for r ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard y with value 3.5999999999999996 for ax ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 105 public <squirrel> = (((sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]) | (sil p (sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]))) (([(<any_Cx_m_p_th_s_kw> m)] | [(m <any_Cx_m_p_th_s_kw>)]) (s | z | ((<any_Cx_m_p_th_s_kw> m) | (m <any_Cx_m_p_th_s_kw>)))) (([(<any_Cx_w_m_kw_s> w)] | [(w <any_Cx_w_m_kw_s>)]) (kw | ((<any_Cx_w_m_kw> w) | (w <any_Cx_w_m_kw>)))) ((([(<any_Vx_z_w_ih_noSlide> z)] | [(z <any_Vx_z_w_ih_noSlide>)]) ([(<any_Cx_z_w_r_kw> z)] | [(z <any_Cx_z_w_r_kw>)])) (ih | ((<any_Vx_z_w_ih_noSlide> z) | (z <any_Vx_z_w_ih_noSlide>)))) (([(<any_Cx_z_z_r_ax> z)] | [(z <any_Cx_z_z_r_ax>)]) (r | ((<any_Cx_z_z_r_ax> z) | (z <any_Cx_z_z_r_ax>)))) (([(<any_Cx_y_z_ax_r> y)] | [(y <any_Cx_y_z_ax_r>)]) (ax | ((<any_Cx_y_z_ax_l_r> y) | (y <any_Cx_y_z_ax_l_r>)))) (([(<any_Cx_sh_y_l_ax> sh)] | [(sh <any_Cx_sh_y_l_ax>)]) (l | ((<any_Cx_sh_y_l_ax> sh) | (sh <any_Cx_sh_y_l_ax>)))) (([(<any_vowel_noSlide> r)] | [(r <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_r> r)] | [(r <any_Cx_sh_l_r>)]) sil))
Running scan for frate = 91
Considering guard m with value 2 for s ...
Considering guard w with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, m

Considering guard m with value 4 for kw ...
Considering guard w with value 4 for kw ...
candidateGuards = map[m:true w:true]
Picking guard, m

Considering guard z with value 1.6 for ih ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard z with value 2 for r ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard y with value 3.5999999999999996 for ax ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 91 public <squirrel> = (((sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil p (sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_m_p_sh_s_kw> m)] | [(m <any_Cx_m_p_sh_s_kw>)]) (s | z | ((<any_Cx_m_p_sh_s_kw> m) | (m <any_Cx_m_p_sh_s_kw>)))) (([(<any_Cx_m_m_kw_s> m)] | [(m <any_Cx_m_m_kw_s>)]) (kw | ((<any_Cx_m_m_kw> m) | (m <any_Cx_m_m_kw>)))) ((([(<any_Vx_z_m_ih_noSlide> z)] | [(z <any_Vx_z_m_ih_noSlide>)]) ([(<any_Cx_z_m_r_kw> z)] | [(z <any_Cx_z_m_r_kw>)])) (ih | ((<any_Vx_z_m_ih_noSlide> z) | (z <any_Vx_z_m_ih_noSlide>)))) (([(<any_Cx_z_z_r_ax> z)] | [(z <any_Cx_z_z_r_ax>)]) (r | ((<any_Cx_z_z_r_ax> z) | (z <any_Cx_z_z_r_ax>)))) (([(<any_Cx_y_z_ax_r> y)] | [(y <any_Cx_y_z_ax_r>)]) (ax | ((<any_Cx_y_z_ax_l_r> y) | (y <any_Cx_y_z_ax_l_r>)))) (([(<any_Cx_sh_y_l_ax> sh)] | [(sh <any_Cx_sh_y_l_ax>)]) (l | ((<any_Cx_sh_y_l_ax> sh) | (sh <any_Cx_sh_y_l_ax>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_thr> thr)] | [(thr <any_Cx_sh_l_thr>)]) sil))
Running scan for frate = 80
Considering guard m with value 2 for s ...
Considering guard w with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, m

Considering guard m with value 4 for kw ...
Considering guard w with value 4 for kw ...
candidateGuards = map[m:true w:true]
Picking guard, w

Considering guard z with value 1.6 for ih ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard z with value 2 for r ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard y with value 3.5999999999999996 for ax ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 80 public <squirrel> = (((sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil p (sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_m_p_sh_s_kw> m)] | [(m <any_Cx_m_p_sh_s_kw>)]) (s | z | ((<any_Cx_m_p_sh_s_kw> m) | (m <any_Cx_m_p_sh_s_kw>)))) (([(<any_Cx_w_m_kw_s> w)] | [(w <any_Cx_w_m_kw_s>)]) (kw | ((<any_Cx_w_m_kw> w) | (w <any_Cx_w_m_kw>)))) ((([(<any_Vx_z_w_ih_noSlide> z)] | [(z <any_Vx_z_w_ih_noSlide>)]) ([(<any_Cx_z_w_r_kw> z)] | [(z <any_Cx_z_w_r_kw>)])) (ih | ((<any_Vx_z_w_ih_noSlide> z) | (z <any_Vx_z_w_ih_noSlide>)))) (([(<any_Cx_z_z_r_ax> z)] | [(z <any_Cx_z_z_r_ax>)]) (r | ((<any_Cx_z_z_r_ax> z) | (z <any_Cx_z_z_r_ax>)))) (([(<any_Cx_y_z_ax_r> y)] | [(y <any_Cx_y_z_ax_r>)]) (ax | ((<any_Cx_y_z_ax_l_r> y) | (y <any_Cx_y_z_ax_l_r>)))) (([(<any_Cx_sh_y_l_ax> sh)] | [(sh <any_Cx_sh_y_l_ax>)]) (l | ((<any_Cx_sh_y_l_ax> sh) | (sh <any_Cx_sh_y_l_ax>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_thr> thr)] | [(thr <any_Cx_sh_l_thr>)]) sil))
Running scan for frate = 72
Considering guard w with value 2 for s ...
Considering guard m with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, m

Considering guard w with value 4 for kw ...
Considering guard m with value 4 for kw ...
candidateGuards = map[m:true w:true]
Picking guard, w

Considering guard w with value 2 for s ...
Considering guard m with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, m

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard zh with value 4 for w ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 3 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard z with value 2 for r ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard y with value 3.5999999999999996 for ax ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 125 public <squirrel> = (((sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil p (sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_m_p_sh_s_k> m)] | [(m <any_Cx_m_p_sh_s_k>)]) (s | z | ((<any_Cx_m_p_sh_s_k> m) | (m <any_Cx_m_p_sh_s_k>)))) (([(<any_Cx_n_m_k_w_s> n)] | [(n <any_Cx_n_m_k_w_s>)]) (k | ((<any_Cx_n_m_k_w> n) | (n <any_Cx_n_m_k_w>)))) (([(<any_Cx_zh_n_w_k> zh)] | [(zh <any_Cx_zh_n_w_k>)]) (w | ((<any_Cx_zh_n_w_k> zh) | (zh <any_Cx_zh_n_w_k>)))) ((([(<any_Vx_sh_zh_ih_noSlide> sh)] | [(sh <any_Vx_sh_zh_ih_noSlide>)]) ([(<any_Cx_sh_zh_r_w> sh)] | [(sh <any_Cx_sh_zh_r_w>)])) (ih | ((<any_Vx_sh_zh_ih_noSlide> sh) | (sh <any_Vx_sh_zh_ih_noSlide>)))) (([(<any_Cx_z_sh_r_ax> z)] | [(z <any_Cx_z_sh_r_ax>)]) (r | ((<any_Cx_z_sh_r_ax> z) | (z <any_Cx_z_sh_r_ax>)))) (([(<any_Cx_y_z_ax_r> y)] | [(y <any_Cx_y_z_ax_r>)]) (ax | ((<any_Cx_y_z_ax_l_r> y) | (y <any_Cx_y_z_ax_l_r>)))) (([(<any_Cx_sh_y_l_ax> sh)] | [(sh <any_Cx_sh_y_l_ax>)]) (l | ((<any_Cx_sh_y_l_ax> sh) | (sh <any_Cx_sh_y_l_ax>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_thr> thr)] | [(thr <any_Cx_sh_l_thr>)]) sil))
Running scan for frate = 105
Considering guard m with value 2 for s ...
Considering guard w with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, m

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard zh with value 4 for w ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 3 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard z with value 2 for r ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard y with value 3.5999999999999996 for ax ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 105 public <squirrel> = (((sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_m_p_z_s_k> m)] | [(m <any_Cx_m_p_z_s_k>)]) (s | z | ((<any_Cx_m_p_z_s_k> m) | (m <any_Cx_m_p_z_s_k>)))) (([(<any_Cx_n_m_k_w_s> n)] | [(n <any_Cx_n_m_k_w_s>)]) (k | ((<any_Cx_n_m_k_w> n) | (n <any_Cx_n_m_k_w>)))) (([(<any_Cx_zh_n_w_k> zh)] | [(zh <any_Cx_zh_n_w_k>)]) (w | ((<any_Cx_zh_n_w_k> zh) | (zh <any_Cx_zh_n_w_k>)))) ((([(<any_Vx_sh_zh_ih_noSlide> sh)] | [(sh <any_Vx_sh_zh_ih_noSlide>)]) ([(<any_Cx_sh_zh_r_w> sh)] | [(sh <any_Cx_sh_zh_r_w>)])) (ih | ((<any_Vx_sh_zh_ih_noSlide> sh) | (sh <any_Vx_sh_zh_ih_noSlide>)))) (([(<any_Cx_z_sh_r_ax> z)] | [(z <any_Cx_z_sh_r_ax>)]) (r | ((<any_Cx_z_sh_r_ax> z) | (z <any_Cx_z_sh_r_ax>)))) (([(<any_Cx_y_z_ax_r> y)] | [(y <any_Cx_y_z_ax_r>)]) (ax | ((<any_Cx_y_z_ax_l_r> y) | (y <any_Cx_y_z_ax_l_r>)))) (([(<any_Cx_sh_y_l_ax> sh)] | [(sh <any_Cx_sh_y_l_ax>)]) (l | ((<any_Cx_sh_y_l_ax> sh) | (sh <any_Cx_sh_y_l_ax>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_f> f)] | [(f <any_Cx_sh_l_f>)]) sil))
Running scan for frate = 91
frate, target rule = 125 public <squirrel> = (((sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]) | (sil p (sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]))) (([(<any_Cx_m_p_th_s_kw> m)] | [(m <any_Cx_m_p_th_s_kw>)]) (s | z | ((<any_Cx_m_p_th_s_kw> m) | (m <any_Cx_m_p_th_s_kw>)))) (([(<any_Cx_m_m_kw_ax_s> m)] | [(m <any_Cx_m_m_kw_ax_s>)]) (kw | ((<any_Cx_m_m_kw_ax> m) | (m <any_Cx_m_m_kw_ax>)))) (([(<any_Cx_z_m_ax_r_kw> z)] | [(z <any_Cx_z_m_ax_r_kw>)]) (ax | ((<any_Cx_z_m_ax_r_kw> z) | (z <any_Cx_z_m_ax_r_kw>)))) (([(<any_Cx_z_z_r_ax_ax> z)] | [(z <any_Cx_z_z_r_ax_ax>)]) (r | ((<any_Cx_z_z_r_ax_ax> z) | (z <any_Cx_z_z_r_ax_ax>)))) (([(<any_Cx_y_z_ax_r> y)] | [(y <any_Cx_y_z_ax_r>)]) (ax | ((<any_Cx_y_z_ax_l_r> y) | (y <any_Cx_y_z_ax_l_r>)))) (([(<any_Cx_sh_y_l_ax> sh)] | [(sh <any_Cx_sh_y_l_ax>)]) (l | ((<any_Cx_sh_y_l_ax> sh) | (sh <any_Cx_sh_y_l_ax>)))) (([(<any_vowel_noSlide> w)] | [(w <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_w> w)] | [(w <any_Cx_sh_l_w>)]) sil))
Running scan for frate = 105
Considering guard w with value 2 for s ...
Considering guard m with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, w

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard zh with value 4 for w ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 3 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard z with value 2 for r ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard y with value 3.5999999999999996 for ax ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 91 public <squirrel> = (((sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil p (sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_w_p_sh_s_k> w)] | [(w <any_Cx_w_p_sh_s_k>)]) (s | z | ((<any_Cx_w_p_sh_s_k> w) | (w <any_Cx_w_p_sh_s_k>)))) (([(<any_Cx_n_w_k_w_s> n)] | [(n <any_Cx_n_w_k_w_s>)]) (k | ((<any_Cx_n_w_k_w> n) | (n <any_Cx_n_w_k_w>)))) (([(<any_Cx_zh_n_w_k> zh)] | [(zh <any_Cx_zh_n_w_k>)]) (w | ((<any_Cx_zh_n_w_k> zh) | (zh <any_Cx_zh_n_w_k>)))) ((([(<any_Vx_sh_zh_ih_noSlide> sh)] | [(sh <any_Vx_sh_zh_ih_noSlide>)]) ([(<any_Cx_sh_zh_r_w> sh)] | [(sh <any_Cx_sh_zh_r_w>)])) (ih | ((<any_Vx_sh_zh_ih_noSlide> sh) | (sh <any_Vx_sh_zh_ih_noSlide>)))) (([(<any_Cx_z_sh_r_ax> z)] | [(z <any_Cx_z_sh_r_ax>)]) (r | ((<any_Cx_z_sh_r_ax> z) | (z <any_Cx_z_sh_r_ax>)))) (([(<any_Cx_y_z_ax_r> y)] | [(y <any_Cx_y_z_ax_r>)]) (ax | ((<any_Cx_y_z_ax_l_r> y) | (y <any_Cx_y_z_ax_l_r>)))) (([(<any_Cx_sh_y_l_ax> sh)] | [(sh <any_Cx_sh_y_l_ax>)]) (l | ((<any_Cx_sh_y_l_ax> sh) | (sh <any_Cx_sh_y_l_ax>)))) (([(<any_vowel_noSlide> w)] | [(w <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_w> w)] | [(w <any_Cx_sh_l_w>)]) sil))
Running scan for frate = 80
Considering guard m with value 2 for s ...
Considering guard w with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, m

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard zh with value 4 for w ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 3 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard z with value 2 for r ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard y with value 3.5999999999999996 for ax ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 80 public <squirrel> = (((sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_m_p_z_s_k> m)] | [(m <any_Cx_m_p_z_s_k>)]) (s | z | ((<any_Cx_m_p_z_s_k> m) | (m <any_Cx_m_p_z_s_k>)))) (([(<any_Cx_n_m_k_w_s> n)] | [(n <any_Cx_n_m_k_w_s>)]) (k | ((<any_Cx_n_m_k_w> n) | (n <any_Cx_n_m_k_w>)))) (([(<any_Cx_zh_n_w_k> zh)] | [(zh <any_Cx_zh_n_w_k>)]) (w | ((<any_Cx_zh_n_w_k> zh) | (zh <any_Cx_zh_n_w_k>)))) ((([(<any_Vx_sh_zh_ih_noSlide> sh)] | [(sh <any_Vx_sh_zh_ih_noSlide>)]) ([(<any_Cx_sh_zh_r_w> sh)] | [(sh <any_Cx_sh_zh_r_w>)])) (ih | ((<any_Vx_sh_zh_ih_noSlide> sh) | (sh <any_Vx_sh_zh_ih_noSlide>)))) (([(<any_Cx_z_sh_r_ax> z)] | [(z <any_Cx_z_sh_r_ax>)]) (r | ((<any_Cx_z_sh_r_ax> z) | (z <any_Cx_z_sh_r_ax>)))) (([(<any_Cx_y_z_ax_r> y)] | [(y <any_Cx_y_z_ax_r>)]) (ax | ((<any_Cx_y_z_ax_l_r> y) | (y <any_Cx_y_z_ax_l_r>)))) (([(<any_Cx_sh_y_l_ax> sh)] | [(sh <any_Cx_sh_y_l_ax>)]) (l | ((<any_Cx_sh_y_l_ax> sh) | (sh <any_Cx_sh_y_l_ax>)))) (([(<any_vowel_noSlide> w)] | [(w <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_w> w)] | [(w <any_Cx_sh_l_w>)]) sil))
Running scan for frate = 72
Considering guard m with value 2 for s ...
Considering guard w with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, m

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard zh with value 4 for w ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 3 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard z with value 2 for r ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard y with value 3.5999999999999996 for ax ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 72 public <squirrel> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_m_p_ch_s_k> m)] | [(m <any_Cx_m_p_ch_s_k>)]) (s | z | ((<any_Cx_m_p_ch_s_k> m) | (m <any_Cx_m_p_ch_s_k>)))) (([(<any_Cx_n_m_k_w_s> n)] | [(n <any_Cx_n_m_k_w_s>)]) (k | ((<any_Cx_n_m_k_w> n) | (n <any_Cx_n_m_k_w>)))) (([(<any_Cx_zh_n_w_k> zh)] | [(zh <any_Cx_zh_n_w_k>)]) (w | ((<any_Cx_zh_n_w_k> zh) | (zh <any_Cx_zh_n_w_k>)))) ((([(<any_Vx_sh_zh_ih_noSlide> sh)] | [(sh <any_Vx_sh_zh_ih_noSlide>)]) ([(<any_Cx_sh_zh_r_w> sh)] | [(sh <any_Cx_sh_zh_r_w>)])) (ih | ((<any_Vx_sh_zh_ih_noSlide> sh) | (sh <any_Vx_sh_zh_ih_noSlide>)))) (([(<any_Cx_z_sh_r_ax> z)] | [(z <any_Cx_z_sh_r_ax>)]) (r | ((<any_Cx_z_sh_r_ax> z) | (z <any_Cx_z_sh_r_ax>)))) (([(<any_Cx_y_z_ax_r> y)] | [(y <any_Cx_y_z_ax_r>)]) (ax | ((<any_Cx_y_z_ax_l_r> y) | (y <any_Cx_y_z_ax_l_r>)))) (([(<any_Cx_sh_y_l_ax> sh)] | [(sh <any_Cx_sh_y_l_ax>)]) (l | ((<any_Cx_sh_y_l_ax> sh) | (sh <any_Cx_sh_y_l_ax>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_f> f)] | [(f <any_Cx_sh_l_f>)]) sil))
Considering guard m with value 2 for s ...
Considering guard w with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, m

Considering guard m with value 7.199999999999999 for kw ...
candidateGuards = map[m:true]
Picking guard, m

Considering guard z with value 2 for ax ...
Considering guard zh with value 2 for ax ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard y with value 2 for r ...
Considering guard z with value 2 for r ...
candidateGuards = map[y:true z:true]
Picking guard, y

Considering guard y with value 3.5999999999999996 for ax ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 105 public <squirrel> = (((sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_m_p_z_s_kw> m)] | [(m <any_Cx_m_p_z_s_kw>)]) (s | z | ((<any_Cx_m_p_z_s_kw> m) | (m <any_Cx_m_p_z_s_kw>)))) (([(<any_Cx_m_m_kw_ax_s> m)] | [(m <any_Cx_m_m_kw_ax_s>)]) (kw | ((<any_Cx_m_m_kw_ax> m) | (m <any_Cx_m_m_kw_ax>)))) (([(<any_Cx_z_m_ax_r_kw> z)] | [(z <any_Cx_z_m_ax_r_kw>)]) (ax | ((<any_Cx_z_m_ax_r_kw> z) | (z <any_Cx_z_m_ax_r_kw>)))) (([(<any_Cx_y_z_r_ax_ax> y)] | [(y <any_Cx_y_z_r_ax_ax>)]) (r | ((<any_Cx_y_z_r_ax_ax> y) | (y <any_Cx_y_z_r_ax_ax>)))) (([(<any_Cx_y_y_ax_r> y)] | [(y <any_Cx_y_y_ax_r>)]) (ax | ((<any_Cx_y_y_ax_l_r> y) | (y <any_Cx_y_y_ax_l_r>)))) (([(<any_Cx_sh_y_l_ax> sh)] | [(sh <any_Cx_sh_y_l_ax>)]) (l | ((<any_Cx_sh_y_l_ax> sh) | (sh <any_Cx_sh_y_l_ax>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_b> b)] | [(b <any_Cx_sh_l_b>)]) sil))
Running scan for frate = 91
Considering guard m with value 2 for s ...
Considering guard w with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, m

Considering guard m with value 7.199999999999999 for kw ...
candidateGuards = map[m:true]
Picking guard, m

Considering guard zh with value 2 for ax ...
Considering guard z with value 2 for ax ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard z with value 2 for r ...
Considering guard y with value 2 for r ...
candidateGuards = map[y:true z:true]
Picking guard, z

Considering guard y with value 3.5999999999999996 for ax ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 91 public <squirrel> = (((sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil p (sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_m_p_t_s_kw> m)] | [(m <any_Cx_m_p_t_s_kw>)]) (s | z | ((<any_Cx_m_p_t_s_kw> m) | (m <any_Cx_m_p_t_s_kw>)))) (([(<any_Cx_m_m_kw_ax_s> m)] | [(m <any_Cx_m_m_kw_ax_s>)]) (kw | ((<any_Cx_m_m_kw_ax> m) | (m <any_Cx_m_m_kw_ax>)))) (([(<any_Cx_zh_m_ax_r_kw> zh)] | [(zh <any_Cx_zh_m_ax_r_kw>)]) (ax | ((<any_Cx_zh_m_ax_r_kw> zh) | (zh <any_Cx_zh_m_ax_r_kw>)))) (([(<any_Cx_z_zh_r_ax_ax> z)] | [(z <any_Cx_z_zh_r_ax_ax>)]) (r | ((<any_Cx_z_zh_r_ax_ax> z) | (z <any_Cx_z_zh_r_ax_ax>)))) (([(<any_Cx_y_z_ax_r> y)] | [(y <any_Cx_y_z_ax_r>)]) (ax | ((<any_Cx_y_z_ax_l_r> y) | (y <any_Cx_y_z_ax_l_r>)))) (([(<any_Cx_sh_y_l_ax> sh)] | [(sh <any_Cx_sh_y_l_ax>)]) (l | ((<any_Cx_sh_y_l_ax> sh) | (sh <any_Cx_sh_y_l_ax>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_b> b)] | [(b <any_Cx_sh_l_b>)]) sil))
Running scan for frate = 80
Considering guard m with value 2 for s ...
Considering guard w with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, m

Considering guard m with value 7.199999999999999 for kw ...
candidateGuards = map[m:true]
Picking guard, m

Considering guard zh with value 2 for ax ...
Considering guard z with value 2 for ax ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard y with value 2 for r ...
Considering guard z with value 2 for r ...
candidateGuards = map[y:true z:true]
Picking guard, y

Considering guard y with value 3.5999999999999996 for ax ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 80 public <squirrel> = (((sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]) | (sil p (sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]))) (([(<any_Cx_m_p_th_s_kw> m)] | [(m <any_Cx_m_p_th_s_kw>)]) (s | z | ((<any_Cx_m_p_th_s_kw> m) | (m <any_Cx_m_p_th_s_kw>)))) (([(<any_Cx_m_m_kw_ax_s> m)] | [(m <any_Cx_m_m_kw_ax_s>)]) (kw | ((<any_Cx_m_m_kw_ax> m) | (m <any_Cx_m_m_kw_ax>)))) (([(<any_Cx_zh_m_ax_r_kw> zh)] | [(zh <any_Cx_zh_m_ax_r_kw>)]) (ax | ((<any_Cx_zh_m_ax_r_kw> zh) | (zh <any_Cx_zh_m_ax_r_kw>)))) (([(<any_Cx_y_zh_r_ax_ax> y)] | [(y <any_Cx_y_zh_r_ax_ax>)]) (r | ((<any_Cx_y_zh_r_ax_ax> y) | (y <any_Cx_y_zh_r_ax_ax>)))) (([(<any_Cx_y_y_ax_r> y)] | [(y <any_Cx_y_y_ax_r>)]) (ax | ((<any_Cx_y_y_ax_l_r> y) | (y <any_Cx_y_y_ax_l_r>)))) (([(<any_Cx_sh_y_l_ax> sh)] | [(sh <any_Cx_sh_y_l_ax>)]) (l | ((<any_Cx_sh_y_l_ax> sh) | (sh <any_Cx_sh_y_l_ax>)))) (([(<any_vowel_noSlide> r)] | [(r <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_r> r)] | [(r <any_Cx_sh_l_r>)]) sil))
Running scan for frate = 72
Considering guard w with value 2 for s ...
Considering guard m with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, w

Considering guard m with value 7.199999999999999 for kw ...
candidateGuards = map[m:true]
Picking guard, m

Considering guard zh with value 2 for ax ...
Considering guard z with value 2 for ax ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard y with value 2 for r ...
Considering guard z with value 2 for r ...
candidateGuards = map[y:true z:true]
Picking guard, y

Considering guard y with value 3.5999999999999996 for ax ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 72 public <squirrel> = (((sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil p (sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_w_p_t_s_kw> w)] | [(w <any_Cx_w_p_t_s_kw>)]) (s | z | ((<any_Cx_w_p_t_s_kw> w) | (w <any_Cx_w_p_t_s_kw>)))) (([(<any_Cx_m_w_kw_ax_s> m)] | [(m <any_Cx_m_w_kw_ax_s>)]) (kw | ((<any_Cx_m_w_kw_ax> m) | (m <any_Cx_m_w_kw_ax>)))) (([(<any_Cx_zh_m_ax_r_kw> zh)] | [(zh <any_Cx_zh_m_ax_r_kw>)]) (ax | ((<any_Cx_zh_m_ax_r_kw> zh) | (zh <any_Cx_zh_m_ax_r_kw>)))) (([(<any_Cx_y_zh_r_ax_ax> y)] | [(y <any_Cx_y_zh_r_ax_ax>)]) (r | ((<any_Cx_y_zh_r_ax_ax> y) | (y <any_Cx_y_zh_r_ax_ax>)))) (([(<any_Cx_y_y_ax_r> y)] | [(y <any_Cx_y_y_ax_r>)]) (ax | ((<any_Cx_y_y_ax_l_r> y) | (y <any_Cx_y_y_ax_l_r>)))) (([(<any_Cx_sh_y_l_ax> sh)] | [(sh <any_Cx_sh_y_l_ax>)]) (l | ((<any_Cx_sh_y_l_ax> sh) | (sh <any_Cx_sh_y_l_ax>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_d> d)] | [(d <any_Cx_sh_l_d>)]) sil))
Considering guard z with value 1.6 for ih ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard z with value 2 for r ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard y with value 3.5999999999999996 for ax ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 72 public <squirrel> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_m_p_ch_s_kw> m)] | [(m <any_Cx_m_p_ch_s_kw>)]) (s | z | ((<any_Cx_m_p_ch_s_kw> m) | (m <any_Cx_m_p_ch_s_kw>)))) (([(<any_Cx_w_m_kw_s> w)] | [(w <any_Cx_w_m_kw_s>)]) (kw | ((<any_Cx_w_m_kw> w) | (w <any_Cx_w_m_kw>)))) ((([(<any_Vx_z_w_ih_noSlide> z)] | [(z <any_Vx_z_w_ih_noSlide>)]) ([(<any_Cx_z_w_r_kw> z)] | [(z <any_Cx_z_w_r_kw>)])) (ih | ((<any_Vx_z_w_ih_noSlide> z) | (z <any_Vx_z_w_ih_noSlide>)))) (([(<any_Cx_z_z_r_ax> z)] | [(z <any_Cx_z_z_r_ax>)]) (r | ((<any_Cx_z_z_r_ax> z) | (z <any_Cx_z_z_r_ax>)))) (([(<any_Cx_y_z_ax_r> y)] | [(y <any_Cx_y_z_ax_r>)]) (ax | ((<any_Cx_y_z_ax_l_r> y) | (y <any_Cx_y_z_ax_l_r>)))) (([(<any_Cx_sh_y_l_ax> sh)] | [(sh <any_Cx_sh_y_l_ax>)]) (l | ((<any_Cx_sh_y_l_ax> sh) | (sh <any_Cx_sh_y_l_ax>)))) (([(<any_vowel_noSlide> w)] | [(w <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_w> w)] | [(w <any_Cx_sh_l_w>)]) sil))

results =
{72 [{sil 0 12} {t 13 17} {ih 18 21} {z 22 29} {kw 30 41} {ax 42 46} {r 47 51} {axl 52 65} {sil 66 74}]}
{80 [{sil 0 14} {t 15 19} {ih 20 23} {z 24 33} {kw 34 45} {ax 46 50} {r 51 56} {axl 57 73} {sil 74 82}]}
{91 [{sil 0 16} {th 17 20} {ih 21 27} {s 28 41} {kw 42 53} {ax 54 58} {r 59 70} {axl 71 90} {sil 91 145}]}
{105 [{sil 0 22} {sh 23 25} {ih 26 31} {s 32 47} {kw 48 61} {ax 62 68} {r 69 84} {axl 85 104} {sil 105 164}]}
{125 [{sil 3 28} {ch 29 31} {ih 32 38} {s 39 58} {kw 59 74} {ax 75 85} {r 86 96} {axl 97 101} {uw 102 119} {p 120 122} {sil 123 197}]}

normalised results =
{72 [{sil 0 12} {t 18 24} {ih 25 29} {z 31 40} {kw 42 57} {ax 58 64} {r 65 71} {axl 72 90} {sil 92 103}]}
{80 [{sil 0 14} {t 19 24} {ih 25 29} {z 30 41} {kw 43 56} {ax 58 63} {r 64 70} {axl 71 91} {sil 93 103}]}
{91 [{sil 0 16} {th 19 22} {ih 23 30} {s 31 45} {kw 46 58} {ax 59 64} {r 65 77} {axl 78 99} {sil 100 159}]}
{105 [{sil 0 22} {sh 22 22} {ih 25 30} {s 30 45} {kw 46 58} {ax 59 65} {r 66 80} {axl 81 99} {sil 100 156}]}
{125 [{sil 3 28} {ch 23 23} {ih 26 30} {s 31 46} {kw 47 59} {ax 60 68} {r 69 77} {axl 78 81} {uw 82 95} {p 96 96} {sil 98 158}]}

ruleAligned = [{{ih 3} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{s 1} [{2 3} {3 3} {4 3}]} {{kw 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{ax 0} [{0 5} {1 5} {2 5} {3 5} {4 5}]} {{r 0} [{0 6} {1 6} {2 6} {3 6} {4 6}]} {{axl 0} [{0 7} {1 7} {2 7} {3 7} {4 7}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {t 18 18} {ih 25 29} {z 31 40} {kw 42 57} {ax 58 64} {r 65 71} {axl 72 90} {sil 92 92}]}
{80 [{sil 0 0} {t 19 19} {ih 25 29} {z 30 41} {kw 43 56} {ax 58 63} {r 64 70} {axl 71 91} {sil 93 93}]}
{91 [{sil 0 0} {th 19 19} {ih 23 30} {s 31 45} {kw 46 58} {ax 59 64} {r 65 77} {axl 78 99} {sil 100 100}]}
{105 [{sil 0 0} {sh 22 22} {ih 25 30} {s 30 45} {kw 46 58} {ax 59 65} {r 66 80} {axl 81 99} {sil 100 100}]}
{125 [{sil 3 3} {ch 23 23} {ih 26 30} {s 31 46} {kw 47 59} {ax 60 68} {r 69 77} {axl 78 81} {uw 82 95} {p 96 96} {sil 98 98}]}

timeAligned = [{{ih 25 30} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{s 31 45} [{2 3} {3 3} {4 3}]} {{kw 46 58} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{ax 59 64} [{0 5} {1 5} {2 5} {3 5} {4 5}]} {{r 65 77} [{0 6} {1 6} {2 6} {3 6} {4 6}]} {{axl 78 91} [{0 7} {1 7} {2 7} {4 7} {3 7}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 29
i, iTime, newITime, timeStartFrom = 2 1 2 45
i, iTime, newITime, timeStartFrom = 3 2 3 58
i, iTime, newITime, timeStartFrom = 4 3 4 63
i, iTime, newITime, timeStartFrom = 5 4 5 70
combinedVerdict    = [{ih 3} {s 1} {kw 0} {ax 0} {r 0} {axl 0}]
ruleAlignedVerdict = [{ih 3} {s 1} {kw 0} {ax 0} {r 0} {axl 0}]

score->
-1 for ih
+1 for s
+1 for kw
+1 for ax
+1 for r
+1 for axl
score<-: 4

results =
{72 [{sil 0 12} {eh 13 19} {z 20 24} {z 25 29} {kw 30 42} {ih 43 45} {r 46 51} {axl 52 65} {sil 66 74}]}
{80 [{sil 0 14} {t 15 19} {ih 20 23} {z 24 33} {kw 34 46} {ih 47 49} {r 50 56} {axl 57 73} {sil 74 82}]}
{91 [{sil 0 24} {z 25 38} {kw 39 53} {ih 54 56} {r 57 70} {axl 71 90} {sil 91 145}]}
{105 [{sil 0 19} {eh 20 29} {z 30 38} {s 39 47} {kw 48 61} {ih 62 65} {r 66 84} {axl 85 104} {sil 105 164}]}
{125 [{sil 3 28} {ch 29 31} {ih 32 38} {s 39 58} {kw 59 74} {ih 75 78} {r 79 82} {axl 83 85} {uh 86 111} {n 112 118} {sil 119 197}]}

normalised results =
{72 [{sil 0 12} {eh 18 26} {z 28 33} {z 35 40} {kw 42 58} {ih 60 60} {r 64 71} {axl 72 90} {sil 92 103}]}
{80 [{sil 0 14} {t 19 24} {ih 25 29} {z 30 41} {kw 43 58} {ih 59 59} {r 63 70} {axl 71 91} {sil 93 103}]}
{91 [{sil 0 24} {z 27 42} {kw 43 58} {ih 59 59} {r 63 77} {axl 78 99} {sil 100 159}]}
{105 [{sil 0 19} {eh 19 28} {z 29 36} {s 37 45} {kw 46 58} {ih 59 62} {r 63 80} {axl 81 99} {sil 100 156}]}
{125 [{sil 3 28} {ch 23 23} {ih 26 30} {s 31 46} {kw 47 59} {ih 60 62} {r 63 66} {axl 66 66} {uh 69 89} {n 90 94} {sil 95 158}]}

ruleAligned = [{{z 3} [{0 3} {1 3} {2 1}]} {{s 2} [{3 3} {4 3}]} {{kw 0} [{0 4} {1 4} {2 2} {3 4} {4 4}]} {{ih 2} [{3 5} {4 5}]} {{r 0} [{0 6} {1 6} {2 4} {3 6} {4 6}]} {{axl 0} [{0 7} {1 7} {2 5} {3 7}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {eh 18 26} {z 28 28} {z 35 40} {kw 42 58} {ih 60 60} {r 64 71} {axl 72 90} {sil 92 92}]}
{80 [{sil 0 0} {t 19 24} {ih 25 29} {z 30 41} {kw 43 58} {ih 59 59} {r 63 70} {axl 71 91} {sil 93 93}]}
{91 [{sil 0 0} {z 27 42} {kw 43 58} {ih 59 59} {r 63 77} {axl 78 99} {sil 100 100}]}
{105 [{sil 0 0} {eh 19 28} {z 29 29} {s 37 45} {kw 46 58} {ih 59 62} {r 63 80} {axl 81 99} {sil 100 100}]}
{125 [{sil 3 3} {ch 23 23} {ih 26 30} {s 31 46} {kw 47 59} {ih 60 62} {r 63 66} {axl 66 66} {uh 69 89} {n 90 94} {sil 95 95}]}

timeAligned = [{{z 35 40} [{0 3} {1 3} {2 1}]} {{kw 43 58} [{0 4} {1 4} {2 2} {3 4} {4 4}]} {{r 63 71} [{1 6} {2 4} {3 6} {4 6} {0 6}]} {{axl 78 91} [{0 7} {1 7} {2 5} {3 7}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 -1 40
i, iTime, newITime, timeStartFrom = 2 0 1 40
i, iTime, newITime, timeStartFrom = 3 1 -1 58
i, iTime, newITime, timeStartFrom = 4 1 2 58
i, iTime, newITime, timeStartFrom = 5 2 3 66
combinedVerdict    = [{z 3} {s 2} {kw 0} {ih 2} {r 0} {axl 0}]
ruleAlignedVerdict = [{z 3} {s 2} {kw 0} {ih 2} {r 0} {axl 0}]

score->
-1 for z
-1 for s
+1 for kw
-1 for ih
+1 for r
+1 for axl
score<-: 0

results =
{72 [{sil 0 12} {t 13 17} {ih 18 20} {z 21 29} {kw 30 41} {ax 42 46} {r 47 50} {ax 51 58} {l 59 65} {sil 66 74}]}
{80 [{sil 0 14} {eh 15 19} {th 20 22} {z 23 33} {kw 34 45} {ax 46 50} {r 51 56} {ax 57 64} {l 65 72} {sil 73 82}]}
{91 [{sil 0 16} {t 17 20} {ih 21 27} {s 28 41} {kw 42 53} {ax 54 58} {r 59 65} {ax 66 73} {l 74 88} {sil 89 145}]}
{105 [{sil 0 19} {eh 20 29} {z 30 38} {s 39 47} {kw 48 61} {ax 62 68} {r 69 76} {ax 77 85} {l 86 102} {sil 103 164}]}
{125 [{sil 3 28} {th 29 31} {ih 32 38} {s 39 58} {kw 59 74} {ax 75 85} {r 86 92} {ax 93 102} {l 103 112} {sil 113 197}]}

normalised results =
{72 [{sil 0 12} {t 18 24} {ih 25 25} {z 29 40} {kw 42 57} {ax 58 64} {r 65 69} {ax 71 81} {l 82 90} {sil 92 103}]}
{80 [{sil 0 14} {eh 19 24} {th 25 25} {z 29 41} {kw 43 56} {ax 58 63} {r 64 70} {ax 71 80} {l 81 90} {sil 91 103}]}
{91 [{sil 0 16} {t 19 22} {ih 23 30} {s 31 45} {kw 46 58} {ax 59 64} {r 65 71} {ax 73 80} {l 81 97} {sil 98 159}]}
{105 [{sil 0 19} {eh 19 28} {z 29 36} {s 37 45} {kw 46 58} {ax 59 65} {r 66 72} {ax 73 81} {l 82 97} {sil 98 156}]}
{125 [{sil 3 28} {th 23 23} {ih 26 30} {s 31 46} {kw 47 59} {ax 60 68} {r 69 74} {ax 74 82} {l 82 90} {sil 90 158}]}

ruleAligned = [{{s 1} [{2 3} {3 3} {4 3}]} {{kw 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{ax 0} [{0 5} {1 5} {2 5} {3 5} {4 5}]} {{r 0} [{0 6} {1 6} {2 6} {3 6} {4 6}]} {{ax 0} [{0 7} {1 7} {2 7} {3 7} {4 7}]} {{l 0} [{0 8} {1 8} {2 8} {3 8} {4 8}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {t 18 18} {ih 25 25} {z 29 40} {kw 42 57} {ax 58 64} {r 65 69} {ax 71 81} {l 82 90} {sil 92 92}]}
{80 [{sil 0 0} {eh 19 24} {th 25 25} {z 29 41} {kw 43 56} {ax 58 63} {r 64 70} {ax 71 80} {l 81 90} {sil 91 91}]}
{91 [{sil 0 0} {t 19 19} {ih 23 30} {s 31 45} {kw 46 58} {ax 59 64} {r 65 71} {ax 73 80} {l 81 97} {sil 98 98}]}
{105 [{sil 0 0} {eh 19 28} {z 29 36} {s 37 45} {kw 46 58} {ax 59 65} {r 66 72} {ax 73 81} {l 82 97} {sil 98 98}]}
{125 [{sil 3 3} {th 23 23} {ih 26 30} {s 31 46} {kw 47 59} {ax 60 68} {r 69 74} {ax 74 82} {l 82 90} {sil 90 90}]}

timeAligned = [{{z 29 36} [{0 3} {1 3} {3 2}]} {{s 37 45} [{2 3} {3 3} {4 3}]} {{kw 46 58} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{ax 59 64} [{0 5} {1 5} {2 5} {3 5} {4 5}]} {{r 65 71} [{0 6} {1 6} {2 6} {3 6} {4 6}]} {{ax 73 81} [{0 7} {1 7} {2 7} {3 7} {4 7}]} {{l 82 90} [{0 8} {1 8} {2 8} {3 8} {4 8}]}]

i, iTime, newITime, timeStartFrom = 0 0 1 0
i, iTime, newITime, timeStartFrom = 1 1 2 45
i, iTime, newITime, timeStartFrom = 2 2 3 58
i, iTime, newITime, timeStartFrom = 3 3 4 63
i, iTime, newITime, timeStartFrom = 4 4 5 69
i, iTime, newITime, timeStartFrom = 5 5 6 80
combinedVerdict    = [{z 3} {s 1} {kw 0} {ax 0} {r 0} {ax 0} {l 0}]
ruleAlignedVerdict = [{s 1} {kw 0} {ax 0} {r 0} {ax 0} {l 0}]

score->
-1 for z
+1 for s
+1 for kw
+1 for ax
+1 for r
+1 for ax
+1 for l
score<-: 5

results =
{72 [{sil 0 18} {z 19 29} {k 30 34} {w 35 41} {ih 42 45} {r 46 50} {ax 51 58} {l 59 65} {sil 66 74}]}
{80 [{sil 0 14} {eh 15 21} {z 22 33} {s 34 36} {k 37 39} {w 40 46} {ih 47 49} {r 50 56} {ax 57 64} {l 65 72} {sil 73 82}]}
{91 [{sil 0 19} {sh 20 22} {ih 23 27} {s 28 41} {k 42 44} {w 45 53} {ih 54 56} {r 57 65} {ax 66 73} {l 74 88} {sil 89 145}]}
{105 [{sil 0 19} {eh 20 29} {z 30 38} {s 39 48} {k 49 51} {w 52 61} {ih 62 65} {r 66 76} {ax 77 85} {l 86 102} {sil 103 164}]}
{125 [{sil 3 28} {sh 29 31} {ih 32 38} {s 39 59} {k 60 63} {w 64 74} {ih 75 78} {r 79 92} {ax 93 102} {l 103 112} {sil 113 197}]}

normalised results =
{72 [{sil 0 18} {z 26 40} {k 42 47} {w 49 57} {ih 58 63} {r 64 69} {ax 71 81} {l 82 90} {sil 92 103}]}
{80 [{sil 0 14} {eh 19 26} {z 28 41} {s 43 43} {k 46 46} {w 50 58} {ih 59 59} {r 63 70} {ax 71 80} {l 81 90} {sil 91 103}]}
{91 [{sil 0 19} {sh 22 22} {ih 25 30} {s 31 45} {k 46 46} {w 49 58} {ih 59 59} {r 63 71} {ax 73 80} {l 81 97} {sil 98 159}]}
{105 [{sil 0 19} {eh 19 28} {z 29 36} {s 37 46} {k 47 47} {w 50 58} {ih 59 62} {r 63 72} {ax 73 81} {l 82 97} {sil 98 156}]}
{125 [{sil 3 28} {sh 23 23} {ih 26 30} {s 31 47} {k 48 50} {w 51 59} {ih 60 62} {r 63 74} {ax 74 82} {l 82 90} {sil 90 158}]}

ruleAligned = [{{s 1} [{2 3} {3 3} {4 3}]} {{k 2} [{0 2} {4 4}]} {{w 0} [{0 3} {1 5} {2 5} {3 5} {4 5}]} {{ih 1} [{0 4} {3 6} {4 6}]} {{r 0} [{0 5} {1 7} {2 7} {3 7} {4 7}]} {{ax 0} [{0 6} {1 8} {2 8} {3 8} {4 8}]} {{l 0} [{0 7} {1 9} {2 9} {3 9} {4 9}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {z 26 40} {k 42 47} {w 49 57} {ih 58 63} {r 64 69} {ax 71 81} {l 82 90} {sil 92 92}]}
{80 [{sil 0 0} {eh 19 26} {z 28 41} {s 43 43} {k 46 46} {w 50 58} {ih 59 59} {r 63 70} {ax 71 80} {l 81 90} {sil 91 91}]}
{91 [{sil 0 0} {sh 22 22} {ih 25 30} {s 31 45} {k 46 46} {w 49 58} {ih 59 59} {r 63 71} {ax 73 80} {l 81 97} {sil 98 98}]}
{105 [{sil 0 0} {eh 19 28} {z 29 36} {s 37 46} {k 47 47} {w 50 58} {ih 59 62} {r 63 72} {ax 73 81} {l 82 97} {sil 98 98}]}
{125 [{sil 3 3} {sh 23 23} {ih 26 30} {s 31 47} {k 48 50} {w 51 59} {ih 60 62} {r 63 74} {ax 74 82} {l 82 90} {sil 90 90}]}

timeAligned = [{{z 29 36} [{0 1} {1 2} {3 2}]} {{s 37 45} [{2 3} {3 3} {4 3}]} {{w 50 58} [{0 3} {1 5} {2 5} {3 5} {4 5}]} {{ih 60 62} [{0 4} {3 6} {4 6}]} {{r 63 71} [{1 7} {2 7} {3 7} {4 7} {0 5}]} {{ax 73 81} [{0 6} {1 8} {2 8} {3 8} {4 8}]} {{l 82 90} [{0 7} {1 9} {2 9} {3 9} {4 9}]}]

i, iTime, newITime, timeStartFrom = 0 0 1 0
i, iTime, newITime, timeStartFrom = 1 1 -1 45
i, iTime, newITime, timeStartFrom = 2 1 2 45
i, iTime, newITime, timeStartFrom = 3 2 3 57
i, iTime, newITime, timeStartFrom = 4 3 4 62
i, iTime, newITime, timeStartFrom = 5 4 5 69
i, iTime, newITime, timeStartFrom = 6 5 6 80
combinedVerdict    = [{z 3} {s 1} {k 2} {w 0} {ih 1} {r 0} {ax 0} {l 0}]
ruleAlignedVerdict = [{s 1} {k 2} {w 0} {ih 1} {r 0} {ax 0} {l 0}]

score->
-1 for z
+1 for s
-1 for k
+1 for w
+1 for ih
+1 for r
+1 for ax
+1 for l
score<-: 4

results =
{72 [{sil 0 18} {z 19 29} {k 30 34} {w 35 40} {ax 41 46} {r 47 50} {ax 51 58} {l 59 65} {sil 66 74}]}
{80 [{sil 0 14} {eh 15 19} {th 20 22} {z 23 33} {k 34 38} {w 39 45} {ax 46 50} {r 51 56} {ax 57 64} {l 65 72} {sil 73 82}]}
{91 [{sil 0 16} {t 17 20} {ih 21 27} {s 28 41} {k 42 44} {w 45 51} {ax 52 58} {r 59 65} {ax 66 73} {l 74 88} {sil 89 145}]}
{105 [{sil 0 22} {sh 23 25} {ih 26 31} {s 32 48} {k 49 51} {w 52 59} {ax 60 68} {r 69 76} {ax 77 85} {l 86 102} {sil 103 164}]}
{125 [{sil 3 28} {ch 29 31} {ih 32 38} {s 39 59} {k 60 63} {w 64 71} {ax 72 85} {r 86 92} {ax 93 102} {l 103 112} {sil 113 197}]}

normalised results =
{72 [{sil 0 18} {z 26 40} {k 42 47} {w 49 56} {ax 57 64} {r 65 69} {ax 71 81} {l 82 90} {sil 92 103}]}
{80 [{sil 0 14} {eh 19 24} {th 25 25} {z 29 41} {k 43 48} {w 49 56} {ax 58 63} {r 64 70} {ax 71 80} {l 81 90} {sil 91 103}]}
{91 [{sil 0 16} {t 19 22} {ih 23 30} {s 31 45} {k 46 46} {w 49 56} {ax 57 64} {r 65 71} {ax 73 80} {l 81 97} {sil 98 159}]}
{105 [{sil 0 22} {sh 22 22} {ih 25 30} {s 30 46} {k 47 47} {w 50 56} {ax 57 65} {r 66 72} {ax 73 81} {l 82 97} {sil 98 156}]}
{125 [{sil 3 28} {ch 23 23} {ih 26 30} {s 31 47} {k 48 50} {w 51 57} {ax 58 68} {r 69 74} {ax 74 82} {l 82 90} {sil 90 158}]}

ruleAligned = [{{ih 3} [{2 2} {3 2} {4 2}]} {{s 1} [{2 3} {3 3} {4 3}]} {{k 1} [{0 2} {1 4} {4 4}]} {{w 0} [{0 3} {1 5} {2 5} {3 5} {4 5}]} {{ax 0} [{0 4} {1 6} {2 6} {3 6} {4 6}]} {{r 0} [{0 5} {1 7} {2 7} {3 7} {4 7}]} {{ax 0} [{0 6} {1 8} {2 8} {3 8} {4 8}]} {{l 0} [{0 7} {1 9} {2 9} {3 9} {4 9}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {z 26 40} {k 42 47} {w 49 56} {ax 57 64} {r 65 69} {ax 71 81} {l 82 90} {sil 92 92}]}
{80 [{sil 0 0} {eh 19 24} {th 25 25} {z 29 41} {k 43 48} {w 49 56} {ax 58 63} {r 64 70} {ax 71 80} {l 81 90} {sil 91 91}]}
{91 [{sil 0 0} {t 19 19} {ih 23 30} {s 31 45} {k 46 46} {w 49 56} {ax 57 64} {r 65 71} {ax 73 80} {l 81 97} {sil 98 98}]}
{105 [{sil 0 0} {sh 22 22} {ih 25 30} {s 30 46} {k 47 47} {w 50 56} {ax 57 65} {r 66 72} {ax 73 81} {l 82 97} {sil 98 98}]}
{125 [{sil 3 3} {ch 23 23} {ih 26 30} {s 31 47} {k 48 50} {w 51 57} {ax 58 68} {r 69 74} {ax 74 82} {l 82 90} {sil 90 90}]}

timeAligned = [{{ih 26 30} [{2 2} {3 2} {4 2}]} {{s 31 45} [{2 3} {3 3} {4 3}]} {{w 49 56} [{0 3} {1 5} {2 5} {3 5} {4 5}]} {{ax 57 64} [{0 4} {2 6} {3 6} {1 6} {4 6}]} {{r 65 71} [{0 5} {1 7} {2 7} {3 7} {4 7}]} {{ax 73 81} [{0 6} {1 8} {2 8} {3 8} {4 8}]} {{l 82 90} [{0 7} {1 9} {2 9} {3 9} {4 9}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 30
i, iTime, newITime, timeStartFrom = 2 1 -1 45
i, iTime, newITime, timeStartFrom = 3 1 2 45
i, iTime, newITime, timeStartFrom = 4 2 3 56
i, iTime, newITime, timeStartFrom = 5 3 4 63
i, iTime, newITime, timeStartFrom = 6 4 5 69
i, iTime, newITime, timeStartFrom = 7 5 6 80
combinedVerdict    = [{ih 3} {s 1} {k 2} {w 0} {ax 0} {r 0} {ax 0} {l 0}]
ruleAlignedVerdict = [{ih 3} {s 1} {k 1} {w 0} {ax 0} {r 0} {ax 0} {l 0}]

score->
-1 for ih
+1 for s
-1 for k
+1 for w
+1 for ax
+1 for r
+1 for ax
+1 for l
score<-: 4

results =
{72 [{sil 0 18} {z 19 29} {k 30 34} {w 35 41} {ih 42 45} {r 46 51} {axl 52 65} {sil 66 74}]}
{80 [{sil 0 20} {z 21 33} {k 34 38} {w 39 46} {ih 47 49} {r 50 56} {axl 57 73} {sil 74 82}]}
{91 [{sil 0 24} {z 25 37} {k 38 44} {w 45 53} {ih 54 56} {r 57 70} {axl 71 90} {sil 91 145}]}
{105 [{sil 0 22} {sh 23 25} {ih 26 31} {s 32 48} {k 49 51} {w 52 61} {ih 62 65} {r 66 84} {axl 85 104} {sil 105 164}]}
{125 [{sil 3 24} {t 25 29} {ih 30 38} {s 39 59} {k 60 63} {w 64 74} {ih 75 78} {r 79 101} {axl 102 115} {sil 116 197}]}

normalised results =
{72 [{sil 0 18} {z 26 40} {k 42 47} {w 49 57} {ih 58 63} {r 64 71} {axl 72 90} {sil 92 103}]}
{80 [{sil 0 20} {z 26 41} {k 43 48} {w 49 58} {ih 59 59} {r 63 70} {axl 71 91} {sil 93 103}]}
{91 [{sil 0 24} {z 27 41} {k 42 48} {w 49 58} {ih 59 59} {r 63 77} {axl 78 99} {sil 100 159}]}
{105 [{sil 0 22} {sh 22 22} {ih 25 30} {s 30 46} {k 47 47} {w 50 58} {ih 59 62} {r 63 80} {axl 81 99} {sil 100 156}]}
{125 [{sil 3 24} {t 20 23} {ih 24 30} {s 31 47} {k 48 50} {w 51 59} {ih 60 62} {r 63 81} {axl 82 92} {sil 93 158}]}

ruleAligned = [{{z 3} [{0 1} {1 1} {2 1}]} {{s 2} [{3 3} {4 3}]} {{k 0} [{0 2} {1 2} {2 2} {4 4}]} {{w 0} [{0 3} {1 3} {2 3} {3 5} {4 5}]} {{ih 1} [{0 4} {3 6} {4 6}]} {{r 0} [{0 5} {1 5} {2 5} {3 7} {4 7}]} {{axl 0} [{0 6} {1 6} {2 6} {3 8} {4 8}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {z 26 40} {k 42 47} {w 49 57} {ih 58 63} {r 64 71} {axl 72 90} {sil 92 92}]}
{80 [{sil 0 0} {z 26 41} {k 43 48} {w 49 58} {ih 59 59} {r 63 70} {axl 71 91} {sil 93 93}]}
{91 [{sil 0 0} {z 27 41} {k 42 48} {w 49 58} {ih 59 59} {r 63 77} {axl 78 99} {sil 100 100}]}
{105 [{sil 0 0} {sh 22 22} {ih 25 30} {s 30 46} {k 47 47} {w 50 58} {ih 59 62} {r 63 80} {axl 81 99} {sil 100 100}]}
{125 [{sil 3 3} {t 20 20} {ih 24 30} {s 31 47} {k 48 50} {w 51 59} {ih 60 62} {r 63 81} {axl 82 92} {sil 93 93}]}

timeAligned = [{{z 27 40} [{0 1} {1 1} {2 1}]} {{k 43 48} [{0 2} {1 2} {2 2} {4 4}]} {{w 49 58} [{0 3} {1 3} {2 3} {3 5} {4 5}]} {{ih 60 62} [{0 4} {3 6} {4 6}]} {{r 63 77} [{1 5} {2 5} {3 7} {4 7} {0 5}]} {{axl 78 92} [{0 6} {1 6} {2 6} {3 8} {4 8}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 -1 40
i, iTime, newITime, timeStartFrom = 2 0 1 40
i, iTime, newITime, timeStartFrom = 3 1 2 47
i, iTime, newITime, timeStartFrom = 4 2 3 57
i, iTime, newITime, timeStartFrom = 5 3 4 62
i, iTime, newITime, timeStartFrom = 6 4 5 70
combinedVerdict    = [{z 3} {s 2} {k 0} {w 0} {ih 1} {r 0} {axl 0}]
ruleAlignedVerdict = [{z 3} {s 2} {k 0} {w 0} {ih 1} {r 0} {axl 0}]

score->
-1 for z
-1 for s
+1 for k
+1 for w
+1 for ih
+1 for r
+1 for axl
score<-: 3

results =
{72 [{sil 0 18} {z 19 29} {k 30 34} {w 35 40} {ax 41 46} {r 47 51} {axl 52 65} {sil 66 74}]}
{80 [{sil 0 20} {z 21 33} {k 34 38} {w 39 45} {ax 46 50} {r 51 56} {axl 57 73} {sil 74 82}]}
{91 [{sil 0 16} {t 17 20} {ih 21 27} {s 28 41} {k 42 44} {w 45 51} {ax 52 58} {r 59 70} {axl 71 90} {sil 91 145}]}
{105 [{sil 0 22} {sh 23 25} {ih 26 31} {s 32 48} {k 49 51} {w 52 59} {ax 60 68} {r 69 84} {axl 85 104} {sil 105 164}]}
{125 [{sil 3 28} {ch 29 31} {ih 32 38} {s 39 59} {k 60 63} {w 64 71} {ax 72 85} {r 86 101} {axl 102 115} {sil 116 197}]}

normalised results =
{72 [{sil 0 18} {z 26 40} {k 42 47} {w 49 56} {ax 57 64} {r 65 71} {axl 72 90} {sil 92 103}]}
{80 [{sil 0 20} {z 26 41} {k 43 48} {w 49 56} {ax 58 63} {r 64 70} {axl 71 91} {sil 93 103}]}
{91 [{sil 0 16} {t 19 22} {ih 23 30} {s 31 45} {k 46 46} {w 49 56} {ax 57 64} {r 65 77} {axl 78 99} {sil 100 159}]}
{105 [{sil 0 22} {sh 22 22} {ih 25 30} {s 30 46} {k 47 47} {w 50 56} {ax 57 65} {r 66 80} {axl 81 99} {sil 100 156}]}
{125 [{sil 3 28} {ch 23 23} {ih 26 30} {s 31 47} {k 48 50} {w 51 57} {ax 58 68} {r 69 81} {axl 82 92} {sil 93 158}]}

ruleAligned = [{{ih 3} [{2 2} {3 2} {4 2}]} {{s 1} [{2 3} {3 3} {4 3}]} {{k 1} [{0 2} {1 2} {4 4}]} {{w 0} [{0 3} {1 3} {2 5} {3 5} {4 5}]} {{ax 0} [{0 4} {1 4} {2 6} {3 6} {4 6}]} {{r 0} [{0 5} {1 5} {2 7} {3 7} {4 7}]} {{axl 0} [{0 6} {1 6} {2 8} {3 8} {4 8}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {z 26 40} {k 42 47} {w 49 56} {ax 57 64} {r 65 71} {axl 72 90} {sil 92 92}]}
{80 [{sil 0 0} {z 26 41} {k 43 48} {w 49 56} {ax 58 63} {r 64 70} {axl 71 91} {sil 93 93}]}
{91 [{sil 0 0} {t 19 19} {ih 23 30} {s 31 45} {k 46 46} {w 49 56} {ax 57 64} {r 65 77} {axl 78 99} {sil 100 100}]}
{105 [{sil 0 0} {sh 22 22} {ih 25 30} {s 30 46} {k 47 47} {w 50 56} {ax 57 65} {r 66 80} {axl 81 99} {sil 100 100}]}
{125 [{sil 3 3} {ch 23 23} {ih 26 30} {s 31 47} {k 48 50} {w 51 57} {ax 58 68} {r 69 81} {axl 82 92} {sil 93 93}]}

timeAligned = [{{ih 26 30} [{2 2} {3 2} {4 2}]} {{s 31 45} [{2 3} {3 3} {4 3}]} {{w 49 56} [{0 3} {1 3} {2 5} {3 5} {4 5}]} {{ax 57 64} [{0 4} {2 6} {3 6} {1 4} {4 6}]} {{r 65 77} [{0 5} {1 5} {2 7} {3 7} {4 7}]} {{axl 78 92} [{0 6} {1 6} {2 8} {3 8} {4 8}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 30
i, iTime, newITime, timeStartFrom = 2 1 -1 45
i, iTime, newITime, timeStartFrom = 3 1 2 45
i, iTime, newITime, timeStartFrom = 4 2 3 56
i, iTime, newITime, timeStartFrom = 5 3 4 63
i, iTime, newITime, timeStartFrom = 6 4 5 70
combinedVerdict    = [{ih 3} {s 1} {k 2} {w 0} {ax 0} {r 0} {axl 0}]
ruleAlignedVerdict = [{ih 3} {s 1} {k 1} {w 0} {ax 0} {r 0} {axl 0}]

score->
-1 for ih
+1 for s
-1 for k
+1 for w
+1 for ax
+1 for r
+1 for axl
score<-: 3

results =
{72 [{sil 0 18} {z 19 29} {kw 30 42} {ih 43 45} {r 46 50} {ax 51 58} {l 59 65} {sil 66 74}]}
{80 [{sil 0 20} {z 21 33} {kw 34 46} {ih 47 49} {r 50 56} {ax 57 64} {l 65 72} {sil 73 82}]}
{91 [{sil 0 19} {sh 20 22} {ih 23 27} {s 28 41} {kw 42 53} {ih 54 56} {r 57 65} {ax 66 73} {l 74 88} {sil 89 145}]}
{105 [{sil 0 19} {th 20 23} {ih 24 31} {s 32 47} {kw 48 61} {ih 62 65} {r 66 76} {ax 77 85} {l 86 102} {sil 103 164}]}
{125 [{sil 3 28} {sh 29 31} {ih 32 38} {s 39 58} {kw 59 74} {ih 75 78} {r 79 92} {ax 93 102} {l 103 112} {sil 113 197}]}

normalised results =
{72 [{sil 0 18} {z 26 40} {kw 42 58} {ih 60 60} {r 64 69} {ax 71 81} {l 82 90} {sil 92 103}]}
{80 [{sil 0 20} {z 26 41} {kw 43 58} {ih 59 59} {r 63 70} {ax 71 80} {l 81 90} {sil 91 103}]}
{91 [{sil 0 19} {sh 22 22} {ih 25 30} {s 31 45} {kw 46 58} {ih 59 59} {r 63 71} {ax 73 80} {l 81 97} {sil 98 159}]}
{105 [{sil 0 19} {th 19 22} {ih 23 30} {s 30 45} {kw 46 58} {ih 59 62} {r 63 72} {ax 73 81} {l 82 97} {sil 98 156}]}
{125 [{sil 3 28} {sh 23 23} {ih 26 30} {s 31 46} {kw 47 59} {ih 60 62} {r 63 74} {ax 74 82} {l 82 90} {sil 90 158}]}

ruleAligned = [{{ih 3} [{2 2} {3 2} {4 2}]} {{s 1} [{2 3} {3 3} {4 3}]} {{kw 0} [{0 2} {1 2} {2 4} {3 4} {4 4}]} {{ih 2} [{3 5} {4 5}]} {{r 0} [{0 4} {1 4} {2 6} {3 6} {4 6}]} {{ax 0} [{0 5} {1 5} {2 7} {3 7} {4 7}]} {{l 0} [{0 6} {1 6} {2 8} {3 8} {4 8}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {z 26 40} {kw 42 58} {ih 60 60} {r 64 69} {ax 71 81} {l 82 90} {sil 92 92}]}
{80 [{sil 0 0} {z 26 41} {kw 43 58} {ih 59 59} {r 63 70} {ax 71 80} {l 81 90} {sil 91 91}]}
{91 [{sil 0 0} {sh 22 22} {ih 25 30} {s 31 45} {kw 46 58} {ih 59 59} {r 63 71} {ax 73 80} {l 81 97} {sil 98 98}]}
{105 [{sil 0 0} {th 19 19} {ih 23 30} {s 30 45} {kw 46 58} {ih 59 62} {r 63 72} {ax 73 81} {l 82 97} {sil 98 98}]}
{125 [{sil 3 3} {sh 23 23} {ih 26 30} {s 31 46} {kw 47 59} {ih 60 62} {r 63 74} {ax 74 82} {l 82 90} {sil 90 90}]}

timeAligned = [{{ih 26 30} [{2 2} {3 2} {4 2}]} {{s 31 45} [{2 3} {3 3} {4 3}]} {{kw 46 58} [{0 2} {1 2} {2 4} {3 4} {4 4}]} {{r 63 71} [{1 4} {2 6} {3 6} {4 6} {0 4}]} {{ax 73 81} [{0 5} {1 5} {2 7} {3 7} {4 7}]} {{l 82 90} [{0 6} {1 6} {2 8} {3 8} {4 8}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 30
i, iTime, newITime, timeStartFrom = 2 1 2 45
i, iTime, newITime, timeStartFrom = 3 2 -1 58
i, iTime, newITime, timeStartFrom = 4 2 3 58
i, iTime, newITime, timeStartFrom = 5 3 4 69
i, iTime, newITime, timeStartFrom = 6 4 5 80
combinedVerdict    = [{ih 3} {s 1} {kw 0} {ih 2} {r 0} {ax 0} {l 0}]
ruleAlignedVerdict = [{ih 3} {s 1} {kw 0} {ih 2} {r 0} {ax 0} {l 0}]

score->
-1 for ih
+1 for s
+1 for kw
-1 for ih
+1 for r
+1 for ax
+1 for l
score<-: 3
testPronounce z surprise s possible kw good ax good r good ax good l good
publish->
phonsToAlphas = [{[s] s} {[kw] qu} {[ax] i} {[r] rr} {[ax] e} {[l] l}]
getVerdict<-:new {s [s] 1}
getVerdict<-:new {qu [kw] 0}
getVerdict<-:new {i [ax] 0}
getVerdict<-:new {rr [r] 0}
getVerdict<-:new {e [ax] 0}
getVerdict<-:new {l [l] 0}
lettersVerdicts = [{z [z] 3} {s [s] 1} {qu [kw] 0} {i [ax] 0} {rr [r] 0} {e [ax] 0} {l [l] 0}]
publish<-
{
  "results": [
    {
      "letters": "z",
      "phonemes": "z",
      "verdict": "surprise"
    },
    {
      "letters": "s",
      "phonemes": "s",
      "verdict": "possible"
    },
    {
      "letters": "qu",
      "phonemes": "kw",
      "verdict": "good"
    },
    {
      "letters": "i",
      "phonemes": "ə",
      "verdict": "good"
    },
    {
      "letters": "rr",
      "phonemes": "ɹ",
      "verdict": "good"
    },
    {
      "letters": "e",
      "phonemes": "ə",
      "verdict": "good"
    },
    {
      "letters": "l",
      "phonemes": "l",
      "verdict": "good"
    }
  ],
  "err": null
}
