
 length of audio =  1.877



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.42000000000000004 0.88 1.3

 start3, duration3, end3 =  0.42000000000000004 0.82 1.24

 Initial start, duration, end =  0.32000000000000006 0.98 1.3

 Cut at: start, duration =  0.32000000000000006 1.43     guard_end =  1.75 

Running scan for frate = 125
Considering guard sh with value 0.8 for w ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.4 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.4 for dh ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 125 public <with> = (((sil [((d <any_Cx_w_d_p>) | (<any_Cx_w_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil p (sil [((d <any_Cx_w_d_p>) | (<any_Cx_w_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_sh_p_d_w> sh)] | [(sh <any_Cx_sh_p_d_w>)]) (w | v | ((<any_Cx_sh_p_d_w> sh) | (sh <any_Cx_sh_p_d_w>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_dh_w> sh)] | [(sh <any_Cx_sh_sh_dh_w>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_sh_sh_dh> sh)] | [(sh <any_Cx_sh_sh_dh>)]) (dh | ((<any_Cx_sh_sh_dh> sh) | (sh <any_Cx_sh_sh_dh>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_sh_dh_f> f)] | [(f <any_Cx_sh_dh_f>)]) sil))
Running scan for frate = 105
Considering guard sh with value 0.8 for w ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.4 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.4 for dh ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 105 public <with> = (((sil [((d <any_Cx_w_d_p>) | (<any_Cx_w_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil p (sil [((d <any_Cx_w_d_p>) | (<any_Cx_w_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_sh_p_d_w> sh)] | [(sh <any_Cx_sh_p_d_w>)]) (w | v | ((<any_Cx_sh_p_d_w> sh) | (sh <any_Cx_sh_p_d_w>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_dh_w> sh)] | [(sh <any_Cx_sh_sh_dh_w>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_sh_sh_dh> sh)] | [(sh <any_Cx_sh_sh_dh>)]) (dh | ((<any_Cx_sh_sh_dh> sh) | (sh <any_Cx_sh_sh_dh>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_sh_dh_m> m)] | [(m <any_Cx_sh_dh_m>)]) sil))
Running scan for frate = 91
Considering guard sh with value 0.8 for w ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.4 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.4 for dh ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 91 public <with> = (((sil [((z <any_Cx_w_z_p>) | (<any_Cx_w_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_w_z_p>) | (<any_Cx_w_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_w> sh)] | [(sh <any_Cx_sh_p_z_w>)]) (w | v | ((<any_Cx_sh_p_z_w> sh) | (sh <any_Cx_sh_p_z_w>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_dh_w> sh)] | [(sh <any_Cx_sh_sh_dh_w>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_sh_sh_dh> sh)] | [(sh <any_Cx_sh_sh_dh>)]) (dh | ((<any_Cx_sh_sh_dh> sh) | (sh <any_Cx_sh_sh_dh>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_sh_dh_thr> thr)] | [(thr <any_Cx_sh_dh_thr>)]) sil))
Running scan for frate = 80
Considering guard sh with value 0.8 for w ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.4 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.4 for dh ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 80 public <with> = (((sil [((n <any_Cx_w_n_p>) | (<any_Cx_w_n_p> n))] [((n <any_vowel_noSlide>) | (<any_vowel_noSlide> n))]) | (sil p (sil [((n <any_Cx_w_n_p>) | (<any_Cx_w_n_p> n))] [((n <any_vowel_noSlide>) | (<any_vowel_noSlide> n))]))) (([(<any_Cx_sh_p_n_w> sh)] | [(sh <any_Cx_sh_p_n_w>)]) (w | v | ((<any_Cx_sh_p_n_w> sh) | (sh <any_Cx_sh_p_n_w>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_dh_w> sh)] | [(sh <any_Cx_sh_sh_dh_w>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_sh_sh_dh> sh)] | [(sh <any_Cx_sh_sh_dh>)]) (dh | ((<any_Cx_sh_sh_dh> sh) | (sh <any_Cx_sh_sh_dh>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_sh_dh_n> n)] | [(n <any_Cx_sh_dh_n>)]) sil))
Running scan for frate = 72
Considering guard sh with value 0.8 for w ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.4 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.4 for dh ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 72 public <with> = (((sil [((n <any_Cx_w_n_p>) | (<any_Cx_w_n_p> n))] [((n <any_vowel_noSlide>) | (<any_vowel_noSlide> n))]) | (sil p (sil [((n <any_Cx_w_n_p>) | (<any_Cx_w_n_p> n))] [((n <any_vowel_noSlide>) | (<any_vowel_noSlide> n))]))) (([(<any_Cx_sh_p_n_w> sh)] | [(sh <any_Cx_sh_p_n_w>)]) (w | v | ((<any_Cx_sh_p_n_w> sh) | (sh <any_Cx_sh_p_n_w>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_dh_w> sh)] | [(sh <any_Cx_sh_sh_dh_w>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_sh_sh_dh> sh)] | [(sh <any_Cx_sh_sh_dh>)]) (dh | ((<any_Cx_sh_sh_dh> sh) | (sh <any_Cx_sh_sh_dh>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_sh_dh_f> f)] | [(f <any_Cx_sh_dh_f>)]) sil))

results =
{72 [{sil 0 10} {w 11 27} {ih 28 34} {sh 35 37} {v 38 58} {sil 59 72}]}
{80 [{sil 0 12} {w 13 30} {ih 31 38} {sh 39 41} {v 42 50} {n 51 55} {v 56 65} {sil 66 79}]}
{91 [{sil 0 14} {w 15 34} {ih 35 44} {sh 45 47} {v 48 75} {sil 76 124}]}
{105 [{sil 0 17} {w 18 40} {ih 41 59} {dh 60 63} {m 64 73} {v 74 92} {sil 93 145}]}
{125 [{sil 3 22} {w 23 49} {uw 50 95} {sh 96 98} {dh 99 105} {sil 106 174}]}

normalised results =
{72 [{sil 0 10} {w 15 38} {ih 39 47} {sh 49 49} {v 53 81} {sil 82 100}]}
{80 [{sil 0 12} {w 16 38} {ih 39 48} {sh 49 49} {v 53 63} {n 64 69} {v 70 81} {sil 83 99}]}
{91 [{sil 0 14} {w 16 37} {ih 38 48} {sh 49 49} {v 53 82} {sil 84 136}]}
{105 [{sil 0 17} {w 17 38} {ih 39 56} {dh 57 60} {m 61 70} {v 70 88} {sil 89 138}]}
{125 [{sil 3 22} {w 18 39} {uw 40 76} {sh 77 77} {dh 79 84} {sil 85 139}]}

ruleAligned = [{{w 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ih 0} [{0 2} {1 2} {2 2} {3 2}]} {{dh 2} [{3 3} {4 4}]} {{v 3} [{0 4} {1 4} {2 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {w 15 38} {ih 39 47} {sh 49 49} {v 53 81} {sil 82 82}]}
{80 [{sil 0 0} {w 16 38} {ih 39 48} {sh 49 49} {v 53 63} {n 64 69} {v 70 81} {sil 83 83}]}
{91 [{sil 0 0} {w 16 37} {ih 38 48} {sh 49 49} {v 53 82} {sil 84 84}]}
{105 [{sil 0 0} {w 17 38} {ih 39 56} {dh 57 60} {m 61 70} {v 70 88} {sil 89 89}]}
{125 [{sil 3 3} {w 18 39} {uw 40 76} {sh 77 77} {dh 79 84} {sil 85 85}]}

timeAligned = [{{w 16 38} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ih 39 48} [{0 2} {1 2} {2 2} {3 2}]} {{v 53 63} [{0 4} {1 4} {2 4}]} {{v 70 81} [{0 4} {1 6} {2 4} {3 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 37
i, iTime, newITime, timeStartFrom = 2 1 -1 47
i, iTime, newITime, timeStartFrom = 3 1 2 47
combinedVerdict    = [{w 0} {ih 0} {dh 2} {v 3} {v 3}]
ruleAlignedVerdict = [{w 0} {ih 0} {dh 2} {v 3}]

score->
+1 for w
+1 for ih
-1 for dh
-1 for v
score<-: 0
bestResult = {0 [{w 0} {ih 0} {dh 2} {v 3}] [w ih dh]}
testPronounce w good ih good dh missing v surprise
publish->
phonsToAlphas = [{[w] w} {[ih] i} {[dh] th}]
getVerdict<-:new {w [w] 0}
getVerdict<-:new {i [ih] 0}
getVerdict<-:new {th [dh] 2}
lettersVerdicts = [{w [w] 0} {i [ih] 0} {th [dh] 2} {v [v] 3}]
publish<-
Total: 197.031589ms
{
  "results": [
    {
      "letters": "w",
      "phonemes": "w",
      "verdict": "good"
    },
    {
      "letters": "i",
      "phonemes": "ɪ",
      "verdict": "good"
    },
    {
      "letters": "th",
      "phonemes": "ð",
      "verdict": "missing"
    },
    {
      "letters": "v",
      "phonemes": "v",
      "verdict": "surprise"
    }
  ],
  "err": null
}
