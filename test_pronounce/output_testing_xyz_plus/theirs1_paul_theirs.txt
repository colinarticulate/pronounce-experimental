
 length of audio =  1.741125



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.4 1.1 1.5

 start3, duration3, end3 =  0.42000000000000004 0.88 1.3

 Initial start, duration, end =  0.30000000000000004 1.2 1.5

 Cut at: start, duration =  0.30000000000000004 1.421125     guard_end =  1.721125 

Running scan for frate = 125
Considering guard zh with value 1 for dh ...
Considering guard ch with value 1 for dh ...
candidateGuards = map[ch:true zh:true]
Picking guard, zh

Considering guard ch with value 5 for ehr ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard oy with value 1 for z ...
candidateGuards = map[oy:true]
Picking guard, oy

frate, target rule = 125 public <theirs> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_dh_ehr> zh)] | [(zh <any_Cx_zh_p_z_dh_ehr>)]) (dh | t | ((<any_Cx_zh_p_z_dh_ehr> zh) | (zh <any_Cx_zh_p_z_dh_ehr>)))) (([(<any_Cx_ch_zh_ehr_dh> ch)] | [(ch <any_Cx_ch_zh_ehr_dh>)]) (ehr | ((<any_Cx_ch_zh_ehr_z> ch) | (ch <any_Cx_ch_zh_ehr_z>)))) (([(<any_Cx_oy_ch_z_ehr> oy)] | [(oy <any_Cx_oy_ch_z_ehr>)]) (z | ((<any_Cx_oy_ch_z_ehr> oy) | (oy <any_Cx_oy_ch_z_ehr>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_oy_z_v> v)] | [(v <any_Cx_oy_z_v>)]) sil))
Running scan for frate = 105
Considering guard zh with value 1 for dh ...
Considering guard ch with value 1 for dh ...
candidateGuards = map[ch:true zh:true]
Picking guard, zh

Considering guard ch with value 5 for ehr ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard oy with value 1 for z ...
candidateGuards = map[oy:true]
Picking guard, oy

frate, target rule = 105 public <theirs> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_dh_ehr> zh)] | [(zh <any_Cx_zh_p_z_dh_ehr>)]) (dh | t | ((<any_Cx_zh_p_z_dh_ehr> zh) | (zh <any_Cx_zh_p_z_dh_ehr>)))) (([(<any_Cx_ch_zh_ehr_dh> ch)] | [(ch <any_Cx_ch_zh_ehr_dh>)]) (ehr | ((<any_Cx_ch_zh_ehr_z> ch) | (ch <any_Cx_ch_zh_ehr_z>)))) (([(<any_Cx_oy_ch_z_ehr> oy)] | [(oy <any_Cx_oy_ch_z_ehr>)]) (z | ((<any_Cx_oy_ch_z_ehr> oy) | (oy <any_Cx_oy_ch_z_ehr>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_oy_z_thr> thr)] | [(thr <any_Cx_oy_z_thr>)]) sil))
Running scan for frate = 91
Considering guard ch with value 1 for dh ...
Considering guard zh with value 1 for dh ...
candidateGuards = map[ch:true zh:true]
Picking guard, zh

Considering guard ch with value 5 for ehr ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard oy with value 1 for z ...
candidateGuards = map[oy:true]
Picking guard, oy

frate, target rule = 91 public <theirs> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_dh_ehr> zh)] | [(zh <any_Cx_zh_p_z_dh_ehr>)]) (dh | t | ((<any_Cx_zh_p_z_dh_ehr> zh) | (zh <any_Cx_zh_p_z_dh_ehr>)))) (([(<any_Cx_ch_zh_ehr_dh> ch)] | [(ch <any_Cx_ch_zh_ehr_dh>)]) (ehr | ((<any_Cx_ch_zh_ehr_z> ch) | (ch <any_Cx_ch_zh_ehr_z>)))) (([(<any_Cx_oy_ch_z_ehr> oy)] | [(oy <any_Cx_oy_ch_z_ehr>)]) (z | ((<any_Cx_oy_ch_z_ehr> oy) | (oy <any_Cx_oy_ch_z_ehr>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_oy_z_b> b)] | [(b <any_Cx_oy_z_b>)]) sil))
Running scan for frate = 80
Considering guard zh with value 1 for dh ...
Considering guard ch with value 1 for dh ...
candidateGuards = map[ch:true zh:true]
Picking guard, zh

Considering guard ch with value 5 for ehr ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard oy with value 1 for z ...
candidateGuards = map[oy:true]
Picking guard, oy

frate, target rule = 80 public <theirs> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_dh_ehr> zh)] | [(zh <any_Cx_zh_p_z_dh_ehr>)]) (dh | t | ((<any_Cx_zh_p_z_dh_ehr> zh) | (zh <any_Cx_zh_p_z_dh_ehr>)))) (([(<any_Cx_ch_zh_ehr_dh> ch)] | [(ch <any_Cx_ch_zh_ehr_dh>)]) (ehr | ((<any_Cx_ch_zh_ehr_z> ch) | (ch <any_Cx_ch_zh_ehr_z>)))) (([(<any_Cx_oy_ch_z_ehr> oy)] | [(oy <any_Cx_oy_ch_z_ehr>)]) (z | ((<any_Cx_oy_ch_z_ehr> oy) | (oy <any_Cx_oy_ch_z_ehr>)))) (([(<any_vowel_noSlide> s)] | [(s <any_vowel_noSlide>)]) ([(<any_Cx_oy_z_s> s)] | [(s <any_Cx_oy_z_s>)]) sil))
Running scan for frate = 72
Considering guard zh with value 1 for dh ...
Considering guard ch with value 1 for dh ...
candidateGuards = map[ch:true zh:true]
Picking guard, zh

Considering guard ch with value 5 for ehr ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard oy with value 1 for z ...
candidateGuards = map[oy:true]
Picking guard, oy

frate, target rule = 72 public <theirs> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_dh_ehr> zh)] | [(zh <any_Cx_zh_p_z_dh_ehr>)]) (dh | t | ((<any_Cx_zh_p_z_dh_ehr> zh) | (zh <any_Cx_zh_p_z_dh_ehr>)))) (([(<any_Cx_ch_zh_ehr_dh> ch)] | [(ch <any_Cx_ch_zh_ehr_dh>)]) (ehr | ((<any_Cx_ch_zh_ehr_z> ch) | (ch <any_Cx_ch_zh_ehr_z>)))) (([(<any_Cx_oy_ch_z_ehr> oy)] | [(oy <any_Cx_oy_ch_z_ehr>)]) (z | ((<any_Cx_oy_ch_z_ehr> oy) | (oy <any_Cx_oy_ch_z_ehr>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_oy_z_thr> thr)] | [(thr <any_Cx_oy_z_thr>)]) sil))

results =
{72 [{sil 0 12} {dh 13 23} {ehr 24 49} {z 50 71} {sil 72 87}]}
{80 [{sil 0 13} {dh 14 26} {ehr 27 48} {oy 49 51} {m 52 59} {z 60 78} {sil 79 94}]}
{91 [{sil 0 16} {dh 17 33} {ehr 34 55} {oy 56 58} {m 59 68} {z 69 89} {sil 90 124}]}
{105 [{sil 0 19} {dh 20 37} {ehr 38 66} {m 67 77} {oy 78 80} {z 81 108} {sil 109 144}]}
{125 [{sil 3 26} {dh 27 45} {ehr 46 78} {oy 79 81} {m 82 96} {z 97 126} {sil 127 177}]}

normalised results =
{72 [{sil 0 12} {dh 18 32} {ehr 33 68} {z 69 99} {sil 100 121}]}
{80 [{sil 0 13} {dh 18 33} {ehr 34 60} {oy 61 61} {m 65 74} {z 75 98} {sil 99 118}]}
{91 [{sil 0 16} {dh 19 36} {ehr 37 60} {oy 62 62} {m 65 75} {z 76 98} {sil 99 136}]}
{105 [{sil 0 19} {dh 19 35} {ehr 36 63} {m 64 73} {oy 74 74} {z 77 103} {sil 104 137}]}
{125 [{sil 3 26} {dh 22 36} {ehr 37 62} {oy 63 63} {m 66 77} {z 78 101} {sil 102 142}]}

ruleAligned = [{{dh 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ehr 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{m 3} [{1 4} {2 4} {3 3} {4 4}]} {{z 0} [{0 3} {1 5} {2 5} {3 5} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {dh 18 32} {ehr 33 68} {z 69 99} {sil 100 100}]}
{80 [{sil 0 0} {dh 18 33} {ehr 34 60} {oy 61 61} {m 65 74} {z 75 98} {sil 99 99}]}
{91 [{sil 0 0} {dh 19 36} {ehr 37 60} {oy 62 62} {m 65 75} {z 76 98} {sil 99 99}]}
{105 [{sil 0 0} {dh 19 35} {ehr 36 63} {m 64 73} {oy 74 74} {z 77 103} {sil 104 104}]}
{125 [{sil 3 3} {dh 22 36} {ehr 37 62} {oy 63 63} {m 66 77} {z 78 101} {sil 102 102}]}

timeAligned = [{{dh 19 35} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ehr 36 62} [{0 2} {1 2} {3 2} {2 2} {4 2}]} {{m 65 74} [{1 4} {2 4} {3 3} {4 4}]} {{z 76 99} [{0 3} {1 5} {2 5} {3 5} {4 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 32
i, iTime, newITime, timeStartFrom = 2 1 2 60
i, iTime, newITime, timeStartFrom = 3 2 3 73
combinedVerdict    = [{dh 0} {ehr 0} {m 3} {z 0}]
ruleAlignedVerdict = [{dh 0} {ehr 0} {m 3} {z 0}]

score->
+1 for dh
+1 for ehr
-1 for m
+1 for z
score<-: 2
testPronounce dh good ehr good m surprise z good
publish->
phonsToAlphas = [{[dh] th} {[ehr] eir} {[z] s}]
getVerdict<-:new {th [dh] 0}
getVerdict<-:new {eir [ehr] 0}
getVerdict<-:new {s [z] 0}
lettersVerdicts = [{th [dh] 0} {eir [ehr] 0} {m [m] 3} {s [z] 0}]
publish<-
Total: 198.111251ms
{
  "results": [
    {
      "letters": "th",
      "phonemes": "ð",
      "verdict": "good"
    },
    {
      "letters": "eir",
      "phonemes": "ɛː",
      "verdict": "good"
    },
    {
      "letters": "m",
      "phonemes": "m",
      "verdict": "surprise"
    },
    {
      "letters": "s",
      "phonemes": "z",
      "verdict": "good"
    }
  ],
  "err": null
}
