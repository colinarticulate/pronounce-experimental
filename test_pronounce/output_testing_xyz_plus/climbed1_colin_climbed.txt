
 length of audio =  1.500563



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.5800000000000001 0.74 1.32

 start3, duration3, end3 =  0.5800000000000001 0.58 1.1600000000000001

 Initial start, duration, end =  0.4800000000000001 0.84 1.32

 Cut at: start, duration =  0.4800000000000001 1.000563     guard_end =  1.480563 

Running scan for frate = 125
Considering guard n with value 3 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard y with value 7.199999999999999 for l ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh


Running scan for frate = 125
Considering guard zh with value 1 for kl ...
Considering guard z with value 1 for kl ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard zh with value 2.4000000000000004 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 125 public <climbed> = (((sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_kl> zh)] | [(zh <any_Cx_zh_p_z_kl>)]) (kl | ((<any_Cx_zh_p_z_kl> zh) | (zh <any_Cx_zh_p_z_kl>)))) ((([(<any_Vx_zh_zh_ay_noSlide> zh)] | [(zh <any_Vx_zh_zh_ay_noSlide>)]) ([(<any_Cx_zh_zh_m_kl> zh)] | [(zh <any_Cx_zh_zh_m_kl>)])) (ay | ((<any_Vx_zh_zh_ay_noSlide> zh) | (zh <any_Vx_zh_zh_ay_noSlide>)))) (([(<any_Cx_sh_zh_m> sh)] | [(sh <any_Cx_sh_zh_m>)]) (m | ((<any_Cx_sh_zh_m_d> sh) | (sh <any_Cx_sh_zh_m_d>)))) (([(<any_Cx_sh_sh_d_m> sh)] | [(sh <any_Cx_sh_sh_d_m>)]) (d | ((<any_Cx_sh_sh_d_m> sh) | (sh <any_Cx_sh_sh_d_m>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_b> b)] | [(b <any_Cx_sh_d_b>)]) sil))
Running scan for frate = 105
Considering guard z with value 1 for kl ...
Considering guard zh with value 1 for kl ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard zh with value 2.4000000000000004 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 105 public <climbed> = (((sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_z_p_z_kl> z)] | [(z <any_Cx_z_p_z_kl>)]) (kl | ((<any_Cx_z_p_z_kl> z) | (z <any_Cx_z_p_z_kl>)))) ((([(<any_Vx_zh_z_ay_noSlide> zh)] | [(zh <any_Vx_zh_z_ay_noSlide>)]) ([(<any_Cx_zh_z_m_kl> zh)] | [(zh <any_Cx_zh_z_m_kl>)])) (ay | ((<any_Vx_zh_z_ay_noSlide> zh) | (zh <any_Vx_zh_z_ay_noSlide>)))) (([(<any_Cx_sh_zh_m> sh)] | [(sh <any_Cx_sh_zh_m>)]) (m | ((<any_Cx_sh_zh_m_d> sh) | (sh <any_Cx_sh_zh_m_d>)))) (([(<any_Cx_sh_sh_d_m> sh)] | [(sh <any_Cx_sh_sh_d_m>)]) (d | ((<any_Cx_sh_sh_d_m> sh) | (sh <any_Cx_sh_sh_d_m>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_g> g)] | [(g <any_Cx_sh_d_g>)]) sil))
Running scan for frate = 91
Considering guard z with value 1 for kl ...
Considering guard zh with value 1 for kl ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard zh with value 2.4000000000000004 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 91 public <climbed> = (((sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_z_p_z_kl> z)] | [(z <any_Cx_z_p_z_kl>)]) (kl | ((<any_Cx_z_p_z_kl> z) | (z <any_Cx_z_p_z_kl>)))) ((([(<any_Vx_zh_z_ay_noSlide> zh)] | [(zh <any_Vx_zh_z_ay_noSlide>)]) ([(<any_Cx_zh_z_m_kl> zh)] | [(zh <any_Cx_zh_z_m_kl>)])) (ay | ((<any_Vx_zh_z_ay_noSlide> zh) | (zh <any_Vx_zh_z_ay_noSlide>)))) (([(<any_Cx_sh_zh_m> sh)] | [(sh <any_Cx_sh_zh_m>)]) (m | ((<any_Cx_sh_zh_m_d> sh) | (sh <any_Cx_sh_zh_m_d>)))) (([(<any_Cx_sh_sh_d_m> sh)] | [(sh <any_Cx_sh_sh_d_m>)]) (d | ((<any_Cx_sh_sh_d_m> sh) | (sh <any_Cx_sh_sh_d_m>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_b> b)] | [(b <any_Cx_sh_d_b>)]) sil))
Running scan for frate = 80
Considering guard zh with value 1 for kl ...
Considering guard z with value 1 for kl ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard zh with value 2.4000000000000004 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 80 public <climbed> = (((sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_kl> zh)] | [(zh <any_Cx_zh_p_z_kl>)]) (kl | ((<any_Cx_zh_p_z_kl> zh) | (zh <any_Cx_zh_p_z_kl>)))) ((([(<any_Vx_zh_zh_ay_noSlide> zh)] | [(zh <any_Vx_zh_zh_ay_noSlide>)]) ([(<any_Cx_zh_zh_m_kl> zh)] | [(zh <any_Cx_zh_zh_m_kl>)])) (ay | ((<any_Vx_zh_zh_ay_noSlide> zh) | (zh <any_Vx_zh_zh_ay_noSlide>)))) (([(<any_Cx_sh_zh_m> sh)] | [(sh <any_Cx_sh_zh_m>)]) (m | ((<any_Cx_sh_zh_m_d> sh) | (sh <any_Cx_sh_zh_m_d>)))) (([(<any_Cx_sh_sh_d_m> sh)] | [(sh <any_Cx_sh_sh_d_m>)]) (d | ((<any_Cx_sh_sh_d_m> sh) | (sh <any_Cx_sh_sh_d_m>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_g> g)] | [(g <any_Cx_sh_d_g>)]) sil))
Running scan for frate = 72
Considering guard zh with value 1 for kl ...
Considering guard z with value 1 for kl ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard zh with value 2.4000000000000004 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 72 public <climbed> = (((sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_kl> zh)] | [(zh <any_Cx_zh_p_z_kl>)]) (kl | ((<any_Cx_zh_p_z_kl> zh) | (zh <any_Cx_zh_p_z_kl>)))) ((([(<any_Vx_zh_zh_ay_noSlide> zh)] | [(zh <any_Vx_zh_zh_ay_noSlide>)]) ([(<any_Cx_zh_zh_m_kl> zh)] | [(zh <any_Cx_zh_zh_m_kl>)])) (ay | ((<any_Vx_zh_zh_ay_noSlide> zh) | (zh <any_Vx_zh_zh_ay_noSlide>)))) (([(<any_Cx_sh_zh_m> sh)] | [(sh <any_Cx_sh_zh_m>)]) (m | ((<any_Cx_sh_zh_m_d> sh) | (sh <any_Cx_sh_zh_m_d>)))) (([(<any_Cx_sh_sh_d_m> sh)] | [(sh <any_Cx_sh_sh_d_m>)]) (d | ((<any_Cx_sh_sh_d_m> sh) | (sh <any_Cx_sh_sh_d_m>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_b> b)] | [(b <any_Cx_sh_d_b>)]) sil))
frate, target rule = 125 public <climbed> = (((sil [((p <any_Cx_k_p_b>) | (<any_Cx_k_p_b> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]) | (sil b (sil [((p <any_Cx_k_p_b>) | (<any_Cx_k_p_b> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]))) (([(<any_Cx_n_b_p_k_l> n)] | [(n <any_Cx_n_b_p_k_l>)]) (k | ((<any_Cx_n_b_p_k_l> n) | (n <any_Cx_n_b_p_k_l>)))) (([(<any_Cx_y_n_l_k> y)] | [(y <any_Cx_y_n_l_k>)]) (l | ((<any_Cx_y_n_l> y) | (y <any_Cx_y_n_l>)))) ((([(<any_Vx_sh_y_ay_noSlide> sh)] | [(sh <any_Vx_sh_y_ay_noSlide>)]) ([(<any_Cx_sh_y_m_l> sh)] | [(sh <any_Cx_sh_y_m_l>)])) (ay | ((<any_Vx_sh_y_ay_noSlide> sh) | (sh <any_Vx_sh_y_ay_noSlide>)))) (([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)]) (m | ((<any_Cx_sh_sh_m_d> sh) | (sh <any_Cx_sh_sh_m_d>)))) (([(<any_Cx_sh_sh_d_m> sh)] | [(sh <any_Cx_sh_sh_d_m>)]) (d | ((<any_Cx_sh_sh_d_m> sh) | (sh <any_Cx_sh_sh_d_m>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_thr> thr)] | [(thr <any_Cx_sh_d_thr>)]) sil))
Running scan for frate = 105
Considering guard n with value 3 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard y with value 7.199999999999999 for l ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 105 public <climbed> = (((sil [((g <any_Cx_k_g_b>) | (<any_Cx_k_g_b> g))] [((g <any_vowel_noSlide>) | (<any_vowel_noSlide> g))]) | (sil b (sil [((g <any_Cx_k_g_b>) | (<any_Cx_k_g_b> g))] [((g <any_vowel_noSlide>) | (<any_vowel_noSlide> g))]))) (([(<any_Cx_n_b_g_k_l> n)] | [(n <any_Cx_n_b_g_k_l>)]) (k | ((<any_Cx_n_b_g_k_l> n) | (n <any_Cx_n_b_g_k_l>)))) (([(<any_Cx_y_n_l_k> y)] | [(y <any_Cx_y_n_l_k>)]) (l | ((<any_Cx_y_n_l> y) | (y <any_Cx_y_n_l>)))) ((([(<any_Vx_sh_y_ay_noSlide> sh)] | [(sh <any_Vx_sh_y_ay_noSlide>)]) ([(<any_Cx_sh_y_m_l> sh)] | [(sh <any_Cx_sh_y_m_l>)])) (ay | ((<any_Vx_sh_y_ay_noSlide> sh) | (sh <any_Vx_sh_y_ay_noSlide>)))) (([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)]) (m | ((<any_Cx_sh_sh_m_d> sh) | (sh <any_Cx_sh_sh_m_d>)))) (([(<any_Cx_sh_sh_d_m> sh)] | [(sh <any_Cx_sh_sh_d_m>)]) (d | ((<any_Cx_sh_sh_d_m> sh) | (sh <any_Cx_sh_sh_d_m>)))) (([(<any_vowel_noSlide> dh)] | [(dh <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_dh> dh)] | [(dh <any_Cx_sh_d_dh>)]) sil))
Running scan for frate = 91
Considering guard n with value 3 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard y with value 7.199999999999999 for l ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 91 public <climbed> = (((sil [((g <any_Cx_k_g_b>) | (<any_Cx_k_g_b> g))] [((g <any_vowel_noSlide>) | (<any_vowel_noSlide> g))]) | (sil b (sil [((g <any_Cx_k_g_b>) | (<any_Cx_k_g_b> g))] [((g <any_vowel_noSlide>) | (<any_vowel_noSlide> g))]))) (([(<any_Cx_n_b_g_k_l> n)] | [(n <any_Cx_n_b_g_k_l>)]) (k | ((<any_Cx_n_b_g_k_l> n) | (n <any_Cx_n_b_g_k_l>)))) (([(<any_Cx_y_n_l_k> y)] | [(y <any_Cx_y_n_l_k>)]) (l | ((<any_Cx_y_n_l> y) | (y <any_Cx_y_n_l>)))) ((([(<any_Vx_sh_y_ay_noSlide> sh)] | [(sh <any_Vx_sh_y_ay_noSlide>)]) ([(<any_Cx_sh_y_m_l> sh)] | [(sh <any_Cx_sh_y_m_l>)])) (ay | ((<any_Vx_sh_y_ay_noSlide> sh) | (sh <any_Vx_sh_y_ay_noSlide>)))) (([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)]) (m | ((<any_Cx_sh_sh_m_d> sh) | (sh <any_Cx_sh_sh_m_d>)))) (([(<any_Cx_sh_sh_d_m> sh)] | [(sh <any_Cx_sh_sh_d_m>)]) (d | ((<any_Cx_sh_sh_d_m> sh) | (sh <any_Cx_sh_sh_d_m>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_b> b)] | [(b <any_Cx_sh_d_b>)]) sil))
Running scan for frate = 80
Considering guard n with value 3 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard y with value 7.199999999999999 for l ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 80 public <climbed> = (((sil [((ch <any_Cx_k_ch_b>) | (<any_Cx_k_ch_b> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil b (sil [((ch <any_Cx_k_ch_b>) | (<any_Cx_k_ch_b> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_n_b_ch_k_l> n)] | [(n <any_Cx_n_b_ch_k_l>)]) (k | ((<any_Cx_n_b_ch_k_l> n) | (n <any_Cx_n_b_ch_k_l>)))) (([(<any_Cx_y_n_l_k> y)] | [(y <any_Cx_y_n_l_k>)]) (l | ((<any_Cx_y_n_l> y) | (y <any_Cx_y_n_l>)))) ((([(<any_Vx_sh_y_ay_noSlide> sh)] | [(sh <any_Vx_sh_y_ay_noSlide>)]) ([(<any_Cx_sh_y_m_l> sh)] | [(sh <any_Cx_sh_y_m_l>)])) (ay | ((<any_Vx_sh_y_ay_noSlide> sh) | (sh <any_Vx_sh_y_ay_noSlide>)))) (([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)]) (m | ((<any_Cx_sh_sh_m_d> sh) | (sh <any_Cx_sh_sh_m_d>)))) (([(<any_Cx_sh_sh_d_m> sh)] | [(sh <any_Cx_sh_sh_d_m>)]) (d | ((<any_Cx_sh_sh_d_m> sh) | (sh <any_Cx_sh_sh_d_m>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_thr> thr)] | [(thr <any_Cx_sh_d_thr>)]) sil))
Running scan for frate = 72
Considering guard n with value 3 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard y with value 7.199999999999999 for l ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 72 public <climbed> = (((sil [((p <any_Cx_k_p_b>) | (<any_Cx_k_p_b> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]) | (sil b (sil [((p <any_Cx_k_p_b>) | (<any_Cx_k_p_b> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]))) (([(<any_Cx_n_b_p_k_l> n)] | [(n <any_Cx_n_b_p_k_l>)]) (k | ((<any_Cx_n_b_p_k_l> n) | (n <any_Cx_n_b_p_k_l>)))) (([(<any_Cx_y_n_l_k> y)] | [(y <any_Cx_y_n_l_k>)]) (l | ((<any_Cx_y_n_l> y) | (y <any_Cx_y_n_l>)))) ((([(<any_Vx_sh_y_ay_noSlide> sh)] | [(sh <any_Vx_sh_y_ay_noSlide>)]) ([(<any_Cx_sh_y_m_l> sh)] | [(sh <any_Cx_sh_y_m_l>)])) (ay | ((<any_Vx_sh_y_ay_noSlide> sh) | (sh <any_Vx_sh_y_ay_noSlide>)))) (([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)]) (m | ((<any_Cx_sh_sh_m_d> sh) | (sh <any_Cx_sh_sh_m_d>)))) (([(<any_Cx_sh_sh_d_m> sh)] | [(sh <any_Cx_sh_sh_d_m>)]) (d | ((<any_Cx_sh_sh_d_m> sh) | (sh <any_Cx_sh_sh_d_m>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_g> g)] | [(g <any_Cx_sh_d_g>)]) sil))

results =
{72 [{sil 0 12} {kl 13 18} {ay 19 33} {m 34 37} {d 38 44} {sil 45 66}]}
{80 [{sil 0 12} {kl 13 21} {ay 22 37} {m 38 41} {d 42 49} {sil 50 71}]}
{91 [{sil 0 17} {kl 18 22} {ay 23 42} {m 43 47} {d 48 64} {sil 65 89}]}
{105 [{sil 0 20} {kl 21 25} {ay 26 50} {m 51 55} {d 56 74} {sil 75 104}]}
{125 [{sil 3 25} {kl 26 31} {ay 32 57} {m 58 67} {d 68 75} {v 76 89} {b 90 92} {sil 93 125}]}

normalised results =
{72 [{sil 0 12} {kl 18 25} {ay 26 46} {m 47 51} {d 53 61} {sil 63 92}]}
{80 [{sil 0 12} {kl 16 26} {ay 28 46} {m 48 51} {d 53 61} {sil 63 89}]}
{91 [{sil 0 17} {kl 20 24} {ay 25 46} {m 47 52} {d 53 70} {sil 71 98}]}
{105 [{sil 0 20} {kl 20 24} {ay 25 48} {m 49 52} {d 53 70} {sil 71 99}]}
{125 [{sil 3 25} {kl 21 25} {ay 26 46} {m 46 54} {d 54 60} {v 61 71} {b 72 72} {sil 74 100}]}

ruleAligned = [{{kl 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ay 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{m 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{d 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {kl 18 25} {ay 26 46} {m 47 51} {d 53 61} {sil 63 63}]}
{80 [{sil 0 0} {kl 16 26} {ay 28 46} {m 48 51} {d 53 61} {sil 63 63}]}
{91 [{sil 0 0} {kl 20 24} {ay 25 46} {m 47 52} {d 53 70} {sil 71 71}]}
{105 [{sil 0 0} {kl 20 24} {ay 25 48} {m 49 52} {d 53 70} {sil 71 71}]}
{125 [{sil 3 3} {kl 21 25} {ay 26 46} {m 46 54} {d 54 60} {v 61 71} {b 72 72} {sil 74 74}]}

timeAligned = [{{kl 20 25} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ay 26 46} [{0 2} {2 2} {3 2} {4 2} {1 2}]} {{m 47 52} [{0 3} {2 3} {4 3} {1 3} {3 3}]} {{d 53 61} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 24
i, iTime, newITime, timeStartFrom = 2 1 2 46
i, iTime, newITime, timeStartFrom = 3 2 3 51
combinedVerdict    = [{kl 0} {ay 0} {m 0} {d 0}]
ruleAlignedVerdict = [{kl 0} {ay 0} {m 0} {d 0}]

score->
+1 for kl
+1 for ay
+1 for m
+1 for d
score<-: 9

results =
{72 [{sil 0 9} {k 10 16} {l 17 19} {ay 20 33} {m 34 37} {d 38 44} {sil 45 66}]}
{80 [{sil 0 12} {k 13 18} {l 19 21} {ay 22 37} {m 38 41} {d 42 49} {sil 50 71}]}
{91 [{sil 0 16} {k 17 21} {l 22 24} {ay 25 42} {m 43 47} {d 48 64} {sil 65 89}]}
{105 [{sil 0 19} {k 20 24} {l 25 27} {ay 28 50} {m 51 55} {d 56 62} {dh 63 68} {v 69 74} {sil 75 104}]}
{125 [{sil 3 24} {k 25 30} {l 31 34} {ay 35 57} {m 58 67} {d 68 90} {sil 91 125}]}

normalised results =
{72 [{sil 0 9} {k 14 22} {l 24 24} {ay 28 46} {m 47 51} {d 53 61} {sil 63 92}]}
{80 [{sil 0 12} {k 16 23} {l 24 24} {ay 28 46} {m 48 51} {d 53 61} {sil 63 89}]}
{91 [{sil 0 16} {k 19 23} {l 24 24} {ay 27 46} {m 47 52} {d 53 70} {sil 71 98}]}
{105 [{sil 0 19} {k 19 23} {l 24 24} {ay 27 48} {m 49 52} {d 53 59} {dh 60 65} {v 66 70} {sil 71 99}]}
{125 [{sil 3 24} {k 20 24} {l 25 27} {ay 28 46} {m 46 54} {d 54 72} {sil 73 100}]}

ruleAligned = [{{k 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{l 2} []} {{ay 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{m 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{d 0} [{0 5} {1 5} {2 5} {3 5} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {k 14 22} {l 24 24} {ay 28 46} {m 47 51} {d 53 61} {sil 63 63}]}
{80 [{sil 0 0} {k 16 23} {l 24 24} {ay 28 46} {m 48 51} {d 53 61} {sil 63 63}]}
{91 [{sil 0 0} {k 19 23} {l 24 24} {ay 27 46} {m 47 52} {d 53 70} {sil 71 71}]}
{105 [{sil 0 0} {k 19 23} {l 24 24} {ay 27 48} {m 49 52} {d 53 59} {dh 60 65} {v 66 70} {sil 71 71}]}
{125 [{sil 3 3} {k 20 24} {l 25 25} {ay 28 46} {m 46 54} {d 54 72} {sil 73 73}]}

timeAligned = [{{k 19 23} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ay 28 46} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{m 47 52} [{0 4} {2 4} {4 4} {1 4} {3 4}]} {{d 53 61} [{0 5} {1 5} {2 5} {3 5} {4 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 -1 22
i, iTime, newITime, timeStartFrom = 2 0 1 22
i, iTime, newITime, timeStartFrom = 3 1 2 46
i, iTime, newITime, timeStartFrom = 4 2 3 51
combinedVerdict    = [{k 0} {l 2} {ay 0} {m 0} {d 0}]
ruleAlignedVerdict = [{k 0} {l 2} {ay 0} {m 0} {d 0}]

score->
+1 for k
-1 for l
+1 for ay
+1 for m
+1 for d
score<-: 3
testPronounce kl good ay good m good d good
publish->
phonsToAlphas = [{[kl] cl} {[ay] i} {[m] mbe} {[d] d}]
getVerdict<-:new {cl [kl] 0}
getVerdict<-:new {i [ay] 0}
getVerdict<-:new {mbe [m] 0}
getVerdict<-:new {d [d] 0}
lettersVerdicts = [{cl [kl] 0} {i [ay] 0} {mbe [m] 0} {d [d] 0}]
publish<-
{
  "results": [
    {
      "letters": "cl",
      "phonemes": "kl",
      "verdict": "good"
    },
    {
      "letters": "i",
      "phonemes": "ɑɪ",
      "verdict": "good"
    },
    {
      "letters": "mbe",
      "phonemes": "m",
      "verdict": "good"
    },
    {
      "letters": "d",
      "phonemes": "d",
      "verdict": "good"
    }
  ],
  "err": null
}
