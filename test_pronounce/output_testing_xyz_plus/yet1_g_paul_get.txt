
 length of audio =  2.042937



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.9600000000000001 1.08 2.04

 start3, duration3, end3 =  1.0799999999999998 0.52 1.5999999999999999

 Initial start, duration, end =  0.8600000000000001 1.18 2.04

 Cut at: start, duration =  0.8600000000000001 1.1629369999999997     guard_end =  2.0229369999999998 

Running scan for frate = 125
Considering guard oy with value 1 for g ...
Considering guard sh with value 1 for g ...
Considering guard zh with value 1 for g ...
Considering guard s with value 1 for g ...
Considering guard ch with value 1 for g ...
candidateGuards = map[ch:true oy:true s:true sh:true zh:true]
Picking guard, sh

Considering guard oy with value 2 for eh ...
Considering guard zh with value 2 for eh ...
candidateGuards = map[oy:true zh:true]
Picking guard, oy

Considering guard zh with value 1 for t ...
Considering guard oy with value 1 for t ...
candidateGuards = map[oy:true zh:true]
Picking guard, oy


frate, target rule = 125 public <get> = (((sil [((v <any_Cx_g_v_p>) | (<any_Cx_g_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]) | (sil p (sil [((v <any_Cx_g_v_p>) | (<any_Cx_g_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]))) (([(<any_Cx_sh_p_v_g> sh)] | [(sh <any_Cx_sh_p_v_g>)]) (g | ((<any_Cx_sh_p_v_g> sh) | (sh <any_Cx_sh_p_v_g>)))) ((([(<any_Vx_oy_sh_eh_noSlide> oy)] | [(oy <any_Vx_oy_sh_eh_noSlide>)]) ([(<any_Cx_oy_sh_t_g> oy)] | [(oy <any_Cx_oy_sh_t_g>)])) (eh | ((<any_Vx_oy_sh_eh_noSlide> oy) | (oy <any_Vx_oy_sh_eh_noSlide>)))) (([(<any_Cx_oy_oy_t> oy)] | [(oy <any_Cx_oy_oy_t>)]) (t | ((<any_Cx_oy_oy_t> oy) | (oy <any_Cx_oy_oy_t>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_oy_t_thr> thr)] | [(thr <any_Cx_oy_t_thr>)]) sil))
Running scan for frate = 105
Considering guard oy with value 1 for g ...
Considering guard s with value 1 for g ...
Considering guard sh with value 1 for g ...
Considering guard ch with value 1 for g ...
Considering guard zh with value 1 for g ...
candidateGuards = map[ch:true oy:true s:true sh:true zh:true]
Picking guard, sh

Considering guard oy with value 2 for eh ...
Considering guard zh with value 2 for eh ...
candidateGuards = map[oy:true zh:true]
Picking guard, oy

Considering guard oy with value 1 for t ...
Considering guard zh with value 1 for t ...
candidateGuards = map[oy:true zh:true]
Picking guard, zh


frate, target rule = 105 public <get> = (((sil [((ch <any_Cx_g_ch_p>) | (<any_Cx_g_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_g_ch_p>) | (<any_Cx_g_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_sh_p_ch_g> sh)] | [(sh <any_Cx_sh_p_ch_g>)]) (g | ((<any_Cx_sh_p_ch_g> sh) | (sh <any_Cx_sh_p_ch_g>)))) ((([(<any_Vx_oy_sh_eh_noSlide> oy)] | [(oy <any_Vx_oy_sh_eh_noSlide>)]) ([(<any_Cx_oy_sh_t_g> oy)] | [(oy <any_Cx_oy_sh_t_g>)])) (eh | ((<any_Vx_oy_sh_eh_noSlide> oy) | (oy <any_Vx_oy_sh_eh_noSlide>)))) (([(<any_Cx_zh_oy_t> zh)] | [(zh <any_Cx_zh_oy_t>)]) (t | ((<any_Cx_zh_oy_t> zh) | (zh <any_Cx_zh_oy_t>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_thr> thr)] | [(thr <any_Cx_zh_t_thr>)]) sil))
Running scan for frate = 91
Considering guard ch with value 1 for g ...
Considering guard sh with value 1 for g ...
Considering guard zh with value 1 for g ...
Considering guard s with value 1 for g ...
Considering guard oy with value 1 for g ...
candidateGuards = map[ch:true oy:true s:true sh:true zh:true]
Picking guard, ch

Considering guard oy with value 2 for eh ...
Considering guard zh with value 2 for eh ...
candidateGuards = map[oy:true zh:true]
Picking guard, oy

Considering guard zh with value 1 for t ...
Considering guard oy with value 1 for t ...
candidateGuards = map[oy:true zh:true]
Picking guard, oy


frate, target rule = 91 public <get> = (((sil [((k <any_Cx_g_k_p>) | (<any_Cx_g_k_p> k))] [((k <any_vowel_noSlide>) | (<any_vowel_noSlide> k))]) | (sil p (sil [((k <any_Cx_g_k_p>) | (<any_Cx_g_k_p> k))] [((k <any_vowel_noSlide>) | (<any_vowel_noSlide> k))]))) (([(<any_Cx_ch_p_k_g> ch)] | [(ch <any_Cx_ch_p_k_g>)]) (g | ((<any_Cx_ch_p_k_g> ch) | (ch <any_Cx_ch_p_k_g>)))) ((([(<any_Vx_oy_ch_eh_noSlide> oy)] | [(oy <any_Vx_oy_ch_eh_noSlide>)]) ([(<any_Cx_oy_ch_t_g> oy)] | [(oy <any_Cx_oy_ch_t_g>)])) (eh | ((<any_Vx_oy_ch_eh_noSlide> oy) | (oy <any_Vx_oy_ch_eh_noSlide>)))) (([(<any_Cx_oy_oy_t> oy)] | [(oy <any_Cx_oy_oy_t>)]) (t | ((<any_Cx_oy_oy_t> oy) | (oy <any_Cx_oy_oy_t>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_oy_t_d> d)] | [(d <any_Cx_oy_t_d>)]) sil))
Running scan for frate = 80
Considering guard sh with value 1 for g ...
Considering guard s with value 1 for g ...
Considering guard ch with value 1 for g ...
Considering guard oy with value 1 for g ...
Considering guard zh with value 1 for g ...
candidateGuards = map[ch:true oy:true s:true sh:true zh:true]
Picking guard, sh

Considering guard zh with value 2 for eh ...
Considering guard oy with value 2 for eh ...
candidateGuards = map[oy:true zh:true]
Picking guard, zh

Considering guard oy with value 1 for t ...
Considering guard zh with value 1 for t ...
candidateGuards = map[oy:true zh:true]
Picking guard, oy


frate, target rule = 80 public <get> = (((sil [((jh <any_Cx_g_jh_p>) | (<any_Cx_g_jh_p> jh))] [((jh <any_vowel_noSlide>) | (<any_vowel_noSlide> jh))]) | (sil p (sil [((jh <any_Cx_g_jh_p>) | (<any_Cx_g_jh_p> jh))] [((jh <any_vowel_noSlide>) | (<any_vowel_noSlide> jh))]))) (([(<any_Cx_sh_p_jh_g> sh)] | [(sh <any_Cx_sh_p_jh_g>)]) (g | ((<any_Cx_sh_p_jh_g> sh) | (sh <any_Cx_sh_p_jh_g>)))) ((([(<any_Vx_zh_sh_eh_noSlide> zh)] | [(zh <any_Vx_zh_sh_eh_noSlide>)]) ([(<any_Cx_zh_sh_t_g> zh)] | [(zh <any_Cx_zh_sh_t_g>)])) (eh | ((<any_Vx_zh_sh_eh_noSlide> zh) | (zh <any_Vx_zh_sh_eh_noSlide>)))) (([(<any_Cx_oy_zh_t> oy)] | [(oy <any_Cx_oy_zh_t>)]) (t | ((<any_Cx_oy_zh_t> oy) | (oy <any_Cx_oy_zh_t>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_oy_t_thr> thr)] | [(thr <any_Cx_oy_t_thr>)]) sil))
Running scan for frate = 72
Considering guard sh with value 1 for g ...
Considering guard zh with value 1 for g ...
Considering guard ch with value 1 for g ...
Considering guard oy with value 1 for g ...
Considering guard s with value 1 for g ...
candidateGuards = map[ch:true oy:true s:true sh:true zh:true]
Picking guard, s

Considering guard zh with value 2 for eh ...
Considering guard oy with value 2 for eh ...
candidateGuards = map[oy:true zh:true]
Picking guard, zh

Considering guard oy with value 1 for t ...
Considering guard zh with value 1 for t ...
candidateGuards = map[oy:true zh:true]
Picking guard, oy


frate, target rule = 72 public <get> = (((sil [((v <any_Cx_g_v_p>) | (<any_Cx_g_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]) | (sil p (sil [((v <any_Cx_g_v_p>) | (<any_Cx_g_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]))) (([(<any_Cx_s_p_v_g> s)] | [(s <any_Cx_s_p_v_g>)]) (g | ((<any_Cx_s_p_v_g> s) | (s <any_Cx_s_p_v_g>)))) ((([(<any_Vx_zh_s_eh_noSlide> zh)] | [(zh <any_Vx_zh_s_eh_noSlide>)]) ([(<any_Cx_zh_s_t_g> zh)] | [(zh <any_Cx_zh_s_t_g>)])) (eh | ((<any_Vx_zh_s_eh_noSlide> zh) | (zh <any_Vx_zh_s_eh_noSlide>)))) (([(<any_Cx_oy_zh_t> oy)] | [(oy <any_Cx_oy_zh_t>)]) (t | ((<any_Cx_oy_zh_t> oy) | (oy <any_Cx_oy_zh_t>)))) (([(<any_vowel_noSlide> k)] | [(k <any_vowel_noSlide>)]) ([(<any_Cx_oy_t_k> k)] | [(k <any_Cx_oy_t_k>)]) sil))

results =
{72 [{sil 0 15} {v 16 20} {y 21 27} {g 28 33} {eh 34 51} {t 52 68} {sil 69 82}]}
{80 [{sil 0 18} {jh 19 21} {y 22 31} {g 32 37} {eh 38 57} {t 58 76} {sil 77 87}]}
{91 [{sil 0 25} {k 26 28} {y 29 40} {g 41 43} {eh 44 65} {t 66 87} {sil 88 104}]}
{105 [{sil 0 23} {g 24 28} {oy 29 31} {y 32 50} {eh 51 76} {t 77 98} {sil 99 117}]}
{125 [{sil 3 28} {v 29 39} {y 40 54} {g 55 60} {eh 61 92} {t 93 117} {sil 118 141}]}

normalised results =
{72 [{sil 0 15} {v 22 28} {y 29 38} {g 39 46} {eh 47 71} {t 72 94} {sil 96 114}]}
{80 [{sil 0 18} {jh 24 24} {y 28 39} {g 40 46} {eh 48 71} {t 73 95} {sil 96 109}]}
{91 [{sil 0 25} {k 29 29} {y 32 44} {g 45 45} {eh 48 71} {t 73 96} {sil 97 114}]}
{105 [{sil 0 23} {g 23 27} {oy 28 28} {y 30 48} {eh 49 72} {t 73 93} {sil 94 111}]}
{125 [{sil 3 28} {v 23 31} {y 32 43} {g 44 48} {eh 49 74} {t 74 94} {sil 94 113}]}

ruleAligned = [{{y 3} [{0 2} {1 2} {2 2} {4 2}]} {{g 0} [{0 3} {1 3} {3 1} {4 3}]} {{eh 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{t 0} [{0 5} {1 5} {2 5} {3 5} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {v 22 22} {y 29 38} {g 39 46} {eh 47 71} {t 72 94} {sil 96 96}]}
{80 [{sil 0 0} {jh 24 24} {y 28 39} {g 40 46} {eh 48 71} {t 73 95} {sil 96 96}]}
{91 [{sil 0 0} {k 29 29} {y 32 44} {g 45 45} {eh 48 71} {t 73 96} {sil 97 97}]}
{105 [{sil 0 0} {g 23 27} {oy 28 28} {y 30 48} {eh 49 72} {t 73 93} {sil 94 94}]}
{125 [{sil 3 3} {v 23 31} {y 32 43} {g 44 48} {eh 49 74} {t 74 94} {sil 94 94}]}

timeAligned = [{{y 30 43} [{0 2} {1 2} {3 3} {2 2} {4 2}]} {{g 44 46} [{0 3} {1 3} {4 3}]} {{eh 48 71} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{t 73 94} [{0 5} {1 5} {2 5} {3 5} {4 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 38
i, iTime, newITime, timeStartFrom = 2 1 2 46
i, iTime, newITime, timeStartFrom = 3 2 3 71
combinedVerdict    = [{y 3} {g 0} {eh 0} {t 0}]
ruleAlignedVerdict = [{y 3} {g 0} {eh 0} {t 0}]

score->
-1 for y
+1 for g
+1 for eh
+1 for t
score<-: 2
testPronounce y surprise g good eh good t good
publish->
phonsToAlphas = [{[g] g} {[eh] e} {[t] t}]
getVerdict<-:new {g [g] 0}
getVerdict<-:new {e [eh] 0}
getVerdict<-:new {t [t] 0}
lettersVerdicts = [{y [y] 3} {g [g] 0} {e [eh] 0} {t [t] 0}]
publish<-
{
  "results": [
    {
      "letters": "y",
      "phonemes": "j",
      "verdict": "surprise"
    },
    {
      "letters": "g",
      "phonemes": "g",
      "verdict": "good"
    },
    {
      "letters": "e",
      "phonemes": "É",
      "verdict": "good"
    },
    {
      "letters": "t",
      "phonemes": "t",
      "verdict": "good"
    }
  ],
  "err": null
}
