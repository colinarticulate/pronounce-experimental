
 length of audio =  2.389



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.68 0.62 1.3

 start3, duration3, end3 =  0.72 0.4 1.12

 Initial start, duration, end =  0.5800000000000001 0.72 1.3

 Cut at: start, duration =  0.5800000000000001 1.17     guard_end =  1.75 

Running scan for frate = 125
Considering guard zh with value 1 for th ...
Considering guard jh with value 1 for th ...
candidateGuards = map[jh:true zh:true]
Picking guard, jh

Considering guard zh with value 2 for ao ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 125 public <thought> = (((sil [((s <any_Cx_th_s_p>) | (<any_Cx_th_s_p> s))] [((s <any_vowel_noSlide>) | (<any_vowel_noSlide> s))]) | (sil p (sil [((s <any_Cx_th_s_p>) | (<any_Cx_th_s_p> s))] [((s <any_vowel_noSlide>) | (<any_vowel_noSlide> s))]))) (([(<any_Cx_jh_p_s_th> jh)] | [(jh <any_Cx_jh_p_s_th>)]) (th | t | d | s | ((<any_Cx_jh_p_s_th> jh) | (jh <any_Cx_jh_p_s_th>)))) ((([(<any_Vx_zh_jh_ao_noSlide> zh)] | [(zh <any_Vx_zh_jh_ao_noSlide>)]) ([(<any_Cx_zh_jh_t_th> zh)] | [(zh <any_Cx_zh_jh_t_th>)])) (ao | ((<any_Vx_zh_jh_ao_noSlide> zh) | (zh <any_Vx_zh_jh_ao_noSlide>)))) (([(<any_Cx_zh_zh_t> zh)] | [(zh <any_Cx_zh_zh_t>)]) (t | ((<any_Cx_zh_zh_t> zh) | (zh <any_Cx_zh_zh_t>)))) (([(<any_vowel_noSlide> k)] | [(k <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_k> k)] | [(k <any_Cx_zh_t_k>)]) sil))
Running scan for frate = 105
Considering guard jh with value 1 for th ...
Considering guard zh with value 1 for th ...
candidateGuards = map[jh:true zh:true]
Picking guard, jh

Considering guard zh with value 2 for ao ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 105 public <thought> = (((sil [((t <any_Cx_th_t_p>) | (<any_Cx_th_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil p (sil [((t <any_Cx_th_t_p>) | (<any_Cx_th_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_jh_p_t_th> jh)] | [(jh <any_Cx_jh_p_t_th>)]) (th | t | d | s | ((<any_Cx_jh_p_t_th> jh) | (jh <any_Cx_jh_p_t_th>)))) ((([(<any_Vx_zh_jh_ao_noSlide> zh)] | [(zh <any_Vx_zh_jh_ao_noSlide>)]) ([(<any_Cx_zh_jh_t_th> zh)] | [(zh <any_Cx_zh_jh_t_th>)])) (ao | ((<any_Vx_zh_jh_ao_noSlide> zh) | (zh <any_Vx_zh_jh_ao_noSlide>)))) (([(<any_Cx_zh_zh_t> zh)] | [(zh <any_Cx_zh_zh_t>)]) (t | ((<any_Cx_zh_zh_t> zh) | (zh <any_Cx_zh_zh_t>)))) (([(<any_vowel_noSlide> ch)] | [(ch <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_ch> ch)] | [(ch <any_Cx_zh_t_ch>)]) sil))
Running scan for frate = 91
Considering guard jh with value 1 for th ...
Considering guard zh with value 1 for th ...
candidateGuards = map[jh:true zh:true]
Picking guard, jh

Considering guard zh with value 2 for ao ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 91 public <thought> = (((sil [((dh <any_Cx_th_dh_p>) | (<any_Cx_th_dh_p> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]) | (sil p (sil [((dh <any_Cx_th_dh_p>) | (<any_Cx_th_dh_p> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]))) (([(<any_Cx_jh_p_dh_th> jh)] | [(jh <any_Cx_jh_p_dh_th>)]) (th | t | d | s | ((<any_Cx_jh_p_dh_th> jh) | (jh <any_Cx_jh_p_dh_th>)))) ((([(<any_Vx_zh_jh_ao_noSlide> zh)] | [(zh <any_Vx_zh_jh_ao_noSlide>)]) ([(<any_Cx_zh_jh_t_th> zh)] | [(zh <any_Cx_zh_jh_t_th>)])) (ao | ((<any_Vx_zh_jh_ao_noSlide> zh) | (zh <any_Vx_zh_jh_ao_noSlide>)))) (([(<any_Cx_zh_zh_t> zh)] | [(zh <any_Cx_zh_zh_t>)]) (t | ((<any_Cx_zh_zh_t> zh) | (zh <any_Cx_zh_zh_t>)))) (([(<any_vowel_noSlide> ch)] | [(ch <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_ch> ch)] | [(ch <any_Cx_zh_t_ch>)]) sil))
Running scan for frate = 80
Considering guard zh with value 1 for th ...
Considering guard jh with value 1 for th ...
candidateGuards = map[jh:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for ao ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 80 public <thought> = (((sil [((s <any_Cx_th_s_p>) | (<any_Cx_th_s_p> s))] [((s <any_vowel_noSlide>) | (<any_vowel_noSlide> s))]) | (sil p (sil [((s <any_Cx_th_s_p>) | (<any_Cx_th_s_p> s))] [((s <any_vowel_noSlide>) | (<any_vowel_noSlide> s))]))) (([(<any_Cx_zh_p_s_th> zh)] | [(zh <any_Cx_zh_p_s_th>)]) (th | t | d | s | ((<any_Cx_zh_p_s_th> zh) | (zh <any_Cx_zh_p_s_th>)))) ((([(<any_Vx_zh_zh_ao_noSlide> zh)] | [(zh <any_Vx_zh_zh_ao_noSlide>)]) ([(<any_Cx_zh_zh_t_th> zh)] | [(zh <any_Cx_zh_zh_t_th>)])) (ao | ((<any_Vx_zh_zh_ao_noSlide> zh) | (zh <any_Vx_zh_zh_ao_noSlide>)))) (([(<any_Cx_zh_zh_t> zh)] | [(zh <any_Cx_zh_zh_t>)]) (t | ((<any_Cx_zh_zh_t> zh) | (zh <any_Cx_zh_zh_t>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_p> p)] | [(p <any_Cx_zh_t_p>)]) sil))
Running scan for frate = 72
Considering guard zh with value 1 for th ...
Considering guard jh with value 1 for th ...
candidateGuards = map[jh:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for ao ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 72 public <thought> = (((sil [((z <any_Cx_th_z_p>) | (<any_Cx_th_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_th_z_p>) | (<any_Cx_th_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_th> zh)] | [(zh <any_Cx_zh_p_z_th>)]) (th | t | d | s | ((<any_Cx_zh_p_z_th> zh) | (zh <any_Cx_zh_p_z_th>)))) ((([(<any_Vx_zh_zh_ao_noSlide> zh)] | [(zh <any_Vx_zh_zh_ao_noSlide>)]) ([(<any_Cx_zh_zh_t_th> zh)] | [(zh <any_Cx_zh_zh_t_th>)])) (ao | ((<any_Vx_zh_zh_ao_noSlide> zh) | (zh <any_Vx_zh_zh_ao_noSlide>)))) (([(<any_Cx_zh_zh_t> zh)] | [(zh <any_Cx_zh_zh_t>)]) (t | ((<any_Cx_zh_zh_t> zh) | (zh <any_Cx_zh_zh_t>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_d> d)] | [(d <any_Cx_zh_t_d>)]) sil))

results =
{72 [{sil 0 3} {th 4 15} {ao 16 30} {t 31 50} {sil 51 73}]}
{80 [{sil 0 3} {th 4 17} {ao 18 34} {t 35 53} {sil 54 79}]}
{91 [{sil 0 3} {th 4 19} {ao 20 38} {t 39 66} {sil 67 101}]}
{105 [{sil 0 4} {th 5 21} {ao 22 45} {t 46 73} {sil 74 122}]}
{125 [{sil 3 7} {th 8 27} {ao 28 64} {t 65 83} {k 84 92} {b 93 97} {sil 98 146}]}

normalised results =
{72 [{sil 0 3} {th 6 21} {ao 22 42} {t 43 69} {sil 71 101}]}
{80 [{sil 0 3} {th 5 21} {ao 23 43} {t 44 66} {sil 68 99}]}
{91 [{sil 0 3} {th 4 21} {ao 22 42} {t 43 73} {sil 74 111}]}
{105 [{sil 0 4} {th 5 20} {ao 21 43} {t 44 70} {sil 70 116}]}
{125 [{sil 3 7} {th 6 22} {ao 22 51} {t 52 66} {k 67 74} {b 74 78} {sil 78 117}]}

ruleAligned = [{{th 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ao 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{t 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {th 6 21} {ao 22 42} {t 43 69} {sil 71 71}]}
{80 [{sil 0 0} {th 5 21} {ao 23 43} {t 44 66} {sil 68 68}]}
{91 [{sil 0 0} {th 4 21} {ao 22 42} {t 43 73} {sil 74 74}]}
{105 [{sil 0 0} {th 5 20} {ao 21 43} {t 44 70} {sil 70 70}]}
{125 [{sil 3 3} {th 6 22} {ao 22 51} {t 52 66} {k 67 74} {b 74 78} {sil 78 78}]}

timeAligned = [{{th 5 21} [{1 1} {2 1} {3 1} {0 1} {4 1}]} {{ao 22 43} [{0 2} {2 2} {3 2} {4 2} {1 2}]} {{t 44 69} [{0 3} {1 3} {2 3} {3 3} {4 3}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 20
i, iTime, newITime, timeStartFrom = 2 1 2 42
combinedVerdict    = [{th 0} {ao 0} {t 0}]
ruleAlignedVerdict = [{th 0} {ao 0} {t 0}]

score->
+1 for th
+1 for ao
+1 for t
score<-: 8
testPronounce th good ao good t good
publish->
phonsToAlphas = [{[th] th} {[ao] ou} {[t] ght}]
getVerdict<-:new {th [th] 0}
getVerdict<-:new {ou [ao] 0}
getVerdict<-:new {ght [t] 0}
lettersVerdicts = [{th [th] 0} {ou [ao] 0} {ght [t] 0}]
publish<-
Total: 215.068565ms
{
  "results": [
    {
      "letters": "th",
      "phonemes": "θ",
      "verdict": "good"
    },
    {
      "letters": "ou",
      "phonemes": "ɔ",
      "verdict": "good"
    },
    {
      "letters": "ght",
      "phonemes": "t",
      "verdict": "good"
    }
  ],
  "err": null
}
