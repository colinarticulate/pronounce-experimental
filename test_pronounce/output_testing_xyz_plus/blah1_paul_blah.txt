
 length of audio =  1.60075



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.5 0.78 1.28

 start3, duration3, end3 =  0.64 0.56 1.2000000000000002

 Initial start, duration, end =  0.4 0.88 1.28

 Cut at: start, duration =  0.4 1.1807499999999997     guard_end =  1.5807499999999997 

Running scan for frate = 125
Running scan for frate = 125
Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard jh with value 1 for bl ...
Considering guard zh with value 1 for bl ...
Considering guard sh with value 1 for bl ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, zh

Considering guard sh with value 1 for aa ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for aa ...
Considering guard zh with value 1 for aa ...
Considering guard jh with value 1 for aa ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, sh

frate, target rule = 125 public <blah> = (((sil [((hh <any_Cx_b_hh_hh>) | (<any_Cx_b_hh_hh> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil hh (sil [((hh <any_Cx_b_hh_hh>) | (<any_Cx_b_hh_hh> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_sh_hh_hh_b_l> sh)] | [(sh <any_Cx_sh_hh_hh_b_l>)]) (b | ((<any_Cx_sh_hh_hh_b_l> sh) | (sh <any_Cx_sh_hh_hh_b_l>)))) (([(<any_Cx_sh_sh_l_b> sh)] | [(sh <any_Cx_sh_sh_l_b>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_sh_sh_aa_noSlide> sh)] | [(sh <any_Vx_sh_sh_aa_noSlide>)]) ([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)])) (aa | ((<any_Vx_sh_sh_aa_noSlide> sh) | (sh <any_Vx_sh_sh_aa_noSlide>)))) (([(<any_Cx_sh_aa_n> n)] | [(n <any_Cx_sh_aa_n>)]) ([(<any_Vx_sh_aa_n> n)] | [(n <any_Vx_sh_aa_n>)]) sil))
frate, target rule = 125 public <blah> = (((sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_bl> zh)] | [(zh <any_Cx_zh_p_z_bl>)]) (bl | ((<any_Cx_zh_p_z_bl> zh) | (zh <any_Cx_zh_p_z_bl>)))) ((([(<any_Vx_sh_zh_aa_noSlide> sh)] | [(sh <any_Vx_sh_zh_aa_noSlide>)]) ([(<any_Cx_sh_zh_bl> sh)] | [(sh <any_Cx_sh_zh_bl>)])) (aa | ((<any_Vx_sh_zh_aa_noSlide> sh) | (sh <any_Vx_sh_zh_aa_noSlide>)))) (([(<any_Cx_sh_aa_f> f)] | [(f <any_Cx_sh_aa_f>)]) ([(<any_Vx_sh_aa_f> f)] | [(f <any_Vx_sh_aa_f>)]) sil))
Running scan for frate = 105
Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 105
Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for aa ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard jh with value 1 for bl ...
Considering guard sh with value 1 for bl ...
Considering guard zh with value 1 for bl ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, sh

frate, target rule = 105 public <blah> = (((sil [((hh <any_Cx_b_hh_hh>) | (<any_Cx_b_hh_hh> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil hh (sil [((hh <any_Cx_b_hh_hh>) | (<any_Cx_b_hh_hh> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_sh_hh_hh_b_l> sh)] | [(sh <any_Cx_sh_hh_hh_b_l>)]) (b | ((<any_Cx_sh_hh_hh_b_l> sh) | (sh <any_Cx_sh_hh_hh_b_l>)))) (([(<any_Cx_sh_sh_l_b> sh)] | [(sh <any_Cx_sh_sh_l_b>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_sh_sh_aa_noSlide> sh)] | [(sh <any_Vx_sh_sh_aa_noSlide>)]) ([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)])) (aa | ((<any_Vx_sh_sh_aa_noSlide> sh) | (sh <any_Vx_sh_sh_aa_noSlide>)))) (([(<any_Cx_sh_aa_p> p)] | [(p <any_Cx_sh_aa_p>)]) ([(<any_Vx_sh_aa_p> p)] | [(p <any_Vx_sh_aa_p>)]) sil))
Considering guard zh with value 1 for aa ...
Considering guard sh with value 1 for aa ...
Considering guard jh with value 1 for aa ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, jh

Running scan for frate = 91
frate, target rule = 105 public <blah> = (((sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_bl> sh)] | [(sh <any_Cx_sh_p_z_bl>)]) (bl | ((<any_Cx_sh_p_z_bl> sh) | (sh <any_Cx_sh_p_z_bl>)))) ((([(<any_Vx_jh_sh_aa_noSlide> jh)] | [(jh <any_Vx_jh_sh_aa_noSlide>)]) ([(<any_Cx_jh_sh_bl> jh)] | [(jh <any_Cx_jh_sh_bl>)])) (aa | ((<any_Vx_jh_sh_aa_noSlide> jh) | (jh <any_Vx_jh_sh_aa_noSlide>)))) (([(<any_Cx_jh_aa_n> n)] | [(n <any_Cx_jh_aa_n>)]) ([(<any_Vx_jh_aa_n> n)] | [(n <any_Vx_jh_aa_n>)]) sil))
Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 91
Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for bl ...
Considering guard zh with value 1 for bl ...
Considering guard jh with value 1 for bl ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, zh

Considering guard sh with value 1 for aa ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard jh with value 1 for aa ...
Considering guard sh with value 1 for aa ...
Considering guard zh with value 1 for aa ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, jh

frate, target rule = 91 public <blah> = (((sil [((dh <any_Cx_b_dh_hh>) | (<any_Cx_b_dh_hh> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]) | (sil hh (sil [((dh <any_Cx_b_dh_hh>) | (<any_Cx_b_dh_hh> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]))) (([(<any_Cx_sh_hh_dh_b_l> sh)] | [(sh <any_Cx_sh_hh_dh_b_l>)]) (b | ((<any_Cx_sh_hh_dh_b_l> sh) | (sh <any_Cx_sh_hh_dh_b_l>)))) (([(<any_Cx_sh_sh_l_b> sh)] | [(sh <any_Cx_sh_sh_l_b>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_sh_sh_aa_noSlide> sh)] | [(sh <any_Vx_sh_sh_aa_noSlide>)]) ([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)])) (aa | ((<any_Vx_sh_sh_aa_noSlide> sh) | (sh <any_Vx_sh_sh_aa_noSlide>)))) (([(<any_Cx_sh_aa_m> m)] | [(m <any_Cx_sh_aa_m>)]) ([(<any_Vx_sh_aa_m> m)] | [(m <any_Vx_sh_aa_m>)]) sil))
frate, target rule = 91 public <blah> = (((sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_bl> zh)] | [(zh <any_Cx_zh_p_z_bl>)]) (bl | ((<any_Cx_zh_p_z_bl> zh) | (zh <any_Cx_zh_p_z_bl>)))) ((([(<any_Vx_jh_zh_aa_noSlide> jh)] | [(jh <any_Vx_jh_zh_aa_noSlide>)]) ([(<any_Cx_jh_zh_bl> jh)] | [(jh <any_Cx_jh_zh_bl>)])) (aa | ((<any_Vx_jh_zh_aa_noSlide> jh) | (jh <any_Vx_jh_zh_aa_noSlide>)))) (([(<any_Cx_jh_aa_thr> thr)] | [(thr <any_Cx_jh_aa_thr>)]) ([(<any_Vx_jh_aa_thr> thr)] | [(thr <any_Vx_jh_aa_thr>)]) sil))
Running scan for frate = 80
Running scan for frate = 80
Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for bl ...
Considering guard zh with value 1 for bl ...
Considering guard jh with value 1 for bl ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, sh

Considering guard sh with value 1 for aa ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 80 public <blah> = (((sil [((d <any_Cx_b_d_hh>) | (<any_Cx_b_d_hh> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil hh (sil [((d <any_Cx_b_d_hh>) | (<any_Cx_b_d_hh> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_sh_hh_d_b_l> sh)] | [(sh <any_Cx_sh_hh_d_b_l>)]) (b | ((<any_Cx_sh_hh_d_b_l> sh) | (sh <any_Cx_sh_hh_d_b_l>)))) (([(<any_Cx_sh_sh_l_b> sh)] | [(sh <any_Cx_sh_sh_l_b>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_sh_sh_aa_noSlide> sh)] | [(sh <any_Vx_sh_sh_aa_noSlide>)]) ([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)])) (aa | ((<any_Vx_sh_sh_aa_noSlide> sh) | (sh <any_Vx_sh_sh_aa_noSlide>)))) (([(<any_Cx_sh_aa_hh> hh)] | [(hh <any_Cx_sh_aa_hh>)]) ([(<any_Vx_sh_aa_hh> hh)] | [(hh <any_Vx_sh_aa_hh>)]) sil))
Considering guard zh with value 1 for aa ...
Considering guard jh with value 1 for aa ...
Considering guard sh with value 1 for aa ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, zh

Running scan for frate = 72
frate, target rule = 80 public <blah> = (((sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_bl> sh)] | [(sh <any_Cx_sh_p_z_bl>)]) (bl | ((<any_Cx_sh_p_z_bl> sh) | (sh <any_Cx_sh_p_z_bl>)))) ((([(<any_Vx_zh_sh_aa_noSlide> zh)] | [(zh <any_Vx_zh_sh_aa_noSlide>)]) ([(<any_Cx_zh_sh_bl> zh)] | [(zh <any_Cx_zh_sh_bl>)])) (aa | ((<any_Vx_zh_sh_aa_noSlide> zh) | (zh <any_Vx_zh_sh_aa_noSlide>)))) (([(<any_Cx_zh_aa_p> p)] | [(p <any_Cx_zh_aa_p>)]) ([(<any_Vx_zh_aa_p> p)] | [(p <any_Vx_zh_aa_p>)]) sil))
Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for aa ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 72
frate, target rule = 72 public <blah> = (((sil [((d <any_Cx_b_d_hh>) | (<any_Cx_b_d_hh> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil hh (sil [((d <any_Cx_b_d_hh>) | (<any_Cx_b_d_hh> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_sh_hh_d_b_l> sh)] | [(sh <any_Cx_sh_hh_d_b_l>)]) (b | ((<any_Cx_sh_hh_d_b_l> sh) | (sh <any_Cx_sh_hh_d_b_l>)))) (([(<any_Cx_sh_sh_l_b> sh)] | [(sh <any_Cx_sh_sh_l_b>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_sh_sh_aa_noSlide> sh)] | [(sh <any_Vx_sh_sh_aa_noSlide>)]) ([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)])) (aa | ((<any_Vx_sh_sh_aa_noSlide> sh) | (sh <any_Vx_sh_sh_aa_noSlide>)))) (([(<any_Cx_sh_aa_hh> hh)] | [(hh <any_Cx_sh_aa_hh>)]) ([(<any_Vx_sh_aa_hh> hh)] | [(hh <any_Vx_sh_aa_hh>)]) sil))
Considering guard sh with value 1 for bl ...
Considering guard jh with value 1 for bl ...
Considering guard zh with value 1 for bl ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, sh

Considering guard jh with value 1 for aa ...
Considering guard zh with value 1 for aa ...
Considering guard sh with value 1 for aa ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, jh

frate, target rule = 72 public <blah> = (((sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_bl> sh)] | [(sh <any_Cx_sh_p_z_bl>)]) (bl | ((<any_Cx_sh_p_z_bl> sh) | (sh <any_Cx_sh_p_z_bl>)))) ((([(<any_Vx_jh_sh_aa_noSlide> jh)] | [(jh <any_Vx_jh_sh_aa_noSlide>)]) ([(<any_Cx_jh_sh_bl> jh)] | [(jh <any_Cx_jh_sh_bl>)])) (aa | ((<any_Vx_jh_sh_aa_noSlide> jh) | (jh <any_Vx_jh_sh_aa_noSlide>)))) (([(<any_Cx_jh_aa_hh> hh)] | [(hh <any_Cx_jh_aa_hh>)]) ([(<any_Vx_jh_aa_hh> hh)] | [(hh <any_Vx_jh_aa_hh>)]) sil))

results =
{72 [{sil 0 19} {bl 20 30} {aa 31 56} {sil 57 67}]}
{80 [{sil 0 22} {bl 23 34} {aa 35 62} {sil 63 72}]}
{91 [{sil 0 26} {bl 27 39} {aa 40 72} {sil 73 102}]}
{105 [{sil 0 32} {bl 33 45} {aa 46 82} {sil 83 123}]}
{125 [{sil 3 38} {bl 39 54} {aa 55 100} {sil 101 147}]}

normalised results =
{72 [{sil 0 19} {bl 28 42} {aa 43 78} {sil 79 93}]}
{80 [{sil 0 22} {bl 29 43} {aa 44 78} {sil 79 90}]}
{91 [{sil 0 26} {bl 30 43} {aa 44 79} {sil 80 112}]}
{105 [{sil 0 32} {bl 31 43} {aa 44 78} {sil 79 117}]}
{125 [{sil 3 38} {bl 31 43} {aa 44 80} {sil 81 118}]}

ruleAligned = [{{bl 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{aa 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {bl 28 42} {aa 43 78} {sil 79 79}]}
{80 [{sil 0 0} {bl 29 43} {aa 44 78} {sil 79 79}]}
{91 [{sil 0 0} {bl 30 43} {aa 44 79} {sil 80 80}]}
{105 [{sil 0 0} {bl 31 43} {aa 44 78} {sil 79 79}]}
{125 [{sil 3 3} {bl 31 43} {aa 44 80} {sil 81 81}]}

timeAligned = [{{bl 30 43} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{aa 44 78} [{0 2} {1 2} {2 2} {3 2} {4 2}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 42
combinedVerdict    = [{bl 0} {aa 0}]
ruleAlignedVerdict = [{bl 0} {aa 0}]

score->
+1 for bl
+1 for aa
score<-: 7

results =
{72 [{sil 0 19} {b 20 25} {l 26 31} {aa 32 56} {sil 57 67}]}
{80 [{sil 0 22} {b 23 27} {l 28 35} {aa 36 62} {sil 63 72}]}
{91 [{sil 0 26} {b 27 31} {l 32 39} {aa 40 72} {sil 73 102}]}
{105 [{sil 0 31} {b 32 36} {l 37 46} {aa 47 82} {sil 83 123}]}
{125 [{sil 3 38} {b 39 44} {l 45 56} {aa 57 100} {sil 101 147}]}

normalised results =
{72 [{sil 0 19} {b 28 35} {l 36 43} {aa 44 78} {sil 79 93}]}
{80 [{sil 0 22} {b 29 34} {l 35 44} {aa 45 78} {sil 79 90}]}
{91 [{sil 0 26} {b 30 34} {l 35 43} {aa 44 79} {sil 80 112}]}
{105 [{sil 0 31} {b 30 34} {l 35 44} {aa 45 78} {sil 79 117}]}
{125 [{sil 3 38} {b 31 35} {l 36 45} {aa 46 80} {sil 81 118}]}

ruleAligned = [{{b 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{l 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{aa 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {b 28 35} {l 36 43} {aa 44 78} {sil 79 79}]}
{80 [{sil 0 0} {b 29 34} {l 35 44} {aa 45 78} {sil 79 79}]}
{91 [{sil 0 0} {b 30 34} {l 35 43} {aa 44 79} {sil 80 80}]}
{105 [{sil 0 0} {b 30 34} {l 35 44} {aa 45 78} {sil 79 79}]}
{125 [{sil 3 3} {b 31 35} {l 36 45} {aa 46 80} {sil 81 81}]}

timeAligned = [{{b 30 34} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{l 35 44} [{1 2} {2 2} {3 2} {0 2} {4 2}]} {{aa 45 78} [{0 3} {1 3} {2 3} {3 3} {4 3}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 34
i, iTime, newITime, timeStartFrom = 2 1 2 43
combinedVerdict    = [{b 0} {l 0} {aa 0}]
ruleAlignedVerdict = [{b 0} {l 0} {aa 0}]

score->
+1 for b
+1 for l
+1 for aa
score<-: 8
testPronounce b good l good aa good
publish->
phonsToAlphas = [{[b] b} {[l] l} {[aa] ah}]
getVerdict<-:new {b [b] 0}
getVerdict<-:new {l [l] 0}
getVerdict<-:new {ah [aa] 0}
lettersVerdicts = [{b [b] 0} {l [l] 0} {ah [aa] 0}]
publish<-
Total: 284.062879ms
{
  "results": [
    {
      "letters": "b",
      "phonemes": "b",
      "verdict": "good"
    },
    {
      "letters": "l",
      "phonemes": "l",
      "verdict": "good"
    },
    {
      "letters": "ah",
      "phonemes": "ɑ",
      "verdict": "good"
    }
  ],
  "err": null
}
