
 length of audio =  2.01975



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.06 1.9400000000000002 2

 start3, duration3, end3 =  0.42000000000000004 0.52 0.9400000000000001

 Initial start, duration, end =  0 2 2

 Cut at: start, duration =  0 1.9997500000000001     guard_end =  1.9997500000000001 

Running scan for frate = 125
Considering guard z with value 1 for r ...
Considering guard y with value 1 for r ...
candidateGuards = map[y:true z:true]
Picking guard, z

Considering guard y with value 2 for ah ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3.2 for sh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 1.6 for axr ...
candidateGuards = map[y:true]
Picking guard, y

frate, target rule = 125 public <russia> = (((sil [((hh <any_Cx_r_hh_p>) | (<any_Cx_r_hh_p> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil p (sil [((hh <any_Cx_r_hh_p>) | (<any_Cx_r_hh_p> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_z_p_hh_r> z)] | [(z <any_Cx_z_p_hh_r>)]) (r | l | w | ((<any_Cx_z_p_hh_r> z) | (z <any_Cx_z_p_hh_r>)))) ((([(<any_Vx_y_z_ah_noSlide> y)] | [(y <any_Vx_y_z_ah_noSlide>)]) ([(<any_Cx_y_z_sh_r> y)] | [(y <any_Cx_y_z_sh_r>)])) (ah | ((<any_Vx_y_z_ah_noSlide> y) | (y <any_Vx_y_z_ah_noSlide>)))) (([(<any_Cx_y_y_sh> y)] | [(y <any_Cx_y_y_sh>)]) (sh | ((<any_Cx_y_y_sh_axr> y) | (y <any_Cx_y_y_sh_axr>)))) (([(<any_Cx_y_y_axr_sh> y)] | [(y <any_Cx_y_y_axr_sh>)]) (axr | ((<any_Cx_y_y_axr_sh> y) | (y <any_Cx_y_y_axr_sh>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_y_axr_hh> hh)] | [(hh <any_Cx_y_axr_hh>)]) sil))
Running scan for frate = 105
Considering guard y with value 1 for r ...
Considering guard z with value 1 for r ...
candidateGuards = map[y:true z:true]
Picking guard, y

Considering guard y with value 2 for ah ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3.2 for sh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 1.6 for axr ...
candidateGuards = map[y:true]
Picking guard, y

frate, target rule = 105 public <russia> = (((sil [((m <any_Cx_r_m_p>) | (<any_Cx_r_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]) | (sil p (sil [((m <any_Cx_r_m_p>) | (<any_Cx_r_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]))) (([(<any_Cx_y_p_m_r> y)] | [(y <any_Cx_y_p_m_r>)]) (r | l | w | ((<any_Cx_y_p_m_r> y) | (y <any_Cx_y_p_m_r>)))) ((([(<any_Vx_y_y_ah_noSlide> y)] | [(y <any_Vx_y_y_ah_noSlide>)]) ([(<any_Cx_y_y_sh_r> y)] | [(y <any_Cx_y_y_sh_r>)])) (ah | ((<any_Vx_y_y_ah_noSlide> y) | (y <any_Vx_y_y_ah_noSlide>)))) (([(<any_Cx_y_y_sh> y)] | [(y <any_Cx_y_y_sh>)]) (sh | ((<any_Cx_y_y_sh_axr> y) | (y <any_Cx_y_y_sh_axr>)))) (([(<any_Cx_y_y_axr_sh> y)] | [(y <any_Cx_y_y_axr_sh>)]) (axr | ((<any_Cx_y_y_axr_sh> y) | (y <any_Cx_y_y_axr_sh>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_y_axr_f> f)] | [(f <any_Cx_y_axr_f>)]) sil))
Running scan for frate = 91
Considering guard y with value 1 for r ...
Considering guard z with value 1 for r ...
candidateGuards = map[y:true z:true]
Picking guard, y

Considering guard y with value 2 for ah ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3.2 for sh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 1.6 for axr ...
candidateGuards = map[y:true]
Picking guard, y

frate, target rule = 91 public <russia> = (((sil [((hh <any_Cx_r_hh_p>) | (<any_Cx_r_hh_p> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil p (sil [((hh <any_Cx_r_hh_p>) | (<any_Cx_r_hh_p> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_y_p_hh_r> y)] | [(y <any_Cx_y_p_hh_r>)]) (r | l | w | ((<any_Cx_y_p_hh_r> y) | (y <any_Cx_y_p_hh_r>)))) ((([(<any_Vx_y_y_ah_noSlide> y)] | [(y <any_Vx_y_y_ah_noSlide>)]) ([(<any_Cx_y_y_sh_r> y)] | [(y <any_Cx_y_y_sh_r>)])) (ah | ((<any_Vx_y_y_ah_noSlide> y) | (y <any_Vx_y_y_ah_noSlide>)))) (([(<any_Cx_y_y_sh> y)] | [(y <any_Cx_y_y_sh>)]) (sh | ((<any_Cx_y_y_sh_axr> y) | (y <any_Cx_y_y_sh_axr>)))) (([(<any_Cx_y_y_axr_sh> y)] | [(y <any_Cx_y_y_axr_sh>)]) (axr | ((<any_Cx_y_y_axr_sh> y) | (y <any_Cx_y_y_axr_sh>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_y_axr_hh> hh)] | [(hh <any_Cx_y_axr_hh>)]) sil))
Running scan for frate = 80
Considering guard y with value 1 for r ...
Considering guard z with value 1 for r ...
candidateGuards = map[y:true z:true]
Picking guard, y

Considering guard y with value 2 for ah ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3.2 for sh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 1.6 for axr ...
candidateGuards = map[y:true]
Picking guard, y

frate, target rule = 80 public <russia> = (((sil [((n <any_Cx_r_n_p>) | (<any_Cx_r_n_p> n))] [((n <any_vowel_noSlide>) | (<any_vowel_noSlide> n))]) | (sil p (sil [((n <any_Cx_r_n_p>) | (<any_Cx_r_n_p> n))] [((n <any_vowel_noSlide>) | (<any_vowel_noSlide> n))]))) (([(<any_Cx_y_p_n_r> y)] | [(y <any_Cx_y_p_n_r>)]) (r | l | w | ((<any_Cx_y_p_n_r> y) | (y <any_Cx_y_p_n_r>)))) ((([(<any_Vx_y_y_ah_noSlide> y)] | [(y <any_Vx_y_y_ah_noSlide>)]) ([(<any_Cx_y_y_sh_r> y)] | [(y <any_Cx_y_y_sh_r>)])) (ah | ((<any_Vx_y_y_ah_noSlide> y) | (y <any_Vx_y_y_ah_noSlide>)))) (([(<any_Cx_y_y_sh> y)] | [(y <any_Cx_y_y_sh>)]) (sh | ((<any_Cx_y_y_sh_axr> y) | (y <any_Cx_y_y_sh_axr>)))) (([(<any_Cx_y_y_axr_sh> y)] | [(y <any_Cx_y_y_axr_sh>)]) (axr | ((<any_Cx_y_y_axr_sh> y) | (y <any_Cx_y_y_axr_sh>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_y_axr_m> m)] | [(m <any_Cx_y_axr_m>)]) sil))
Running scan for frate = 72
Considering guard y with value 1 for r ...
Considering guard z with value 1 for r ...
candidateGuards = map[y:true z:true]
Picking guard, y

Considering guard y with value 2 for ah ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3.2 for sh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 1.6 for axr ...
candidateGuards = map[y:true]
Picking guard, y

frate, target rule = 72 public <russia> = (((sil [((m <any_Cx_r_m_p>) | (<any_Cx_r_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]) | (sil p (sil [((m <any_Cx_r_m_p>) | (<any_Cx_r_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]))) (([(<any_Cx_y_p_m_r> y)] | [(y <any_Cx_y_p_m_r>)]) (r | l | w | ((<any_Cx_y_p_m_r> y) | (y <any_Cx_y_p_m_r>)))) ((([(<any_Vx_y_y_ah_noSlide> y)] | [(y <any_Vx_y_y_ah_noSlide>)]) ([(<any_Cx_y_y_sh_r> y)] | [(y <any_Cx_y_y_sh_r>)])) (ah | ((<any_Vx_y_y_ah_noSlide> y) | (y <any_Vx_y_y_ah_noSlide>)))) (([(<any_Cx_y_y_sh> y)] | [(y <any_Cx_y_y_sh>)]) (sh | ((<any_Cx_y_y_sh_axr> y) | (y <any_Cx_y_y_sh_axr>)))) (([(<any_Cx_y_y_axr_sh> y)] | [(y <any_Cx_y_y_axr_sh>)]) (axr | ((<any_Cx_y_y_axr_sh> y) | (y <any_Cx_y_y_axr_sh>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_y_axr_hh> hh)] | [(hh <any_Cx_y_axr_hh>)]) sil))

results =
{72 [{sil 0 34} {r 35 49} {ah 50 58} {sh 59 72} {axr 73 90} {sil 91 99}]}
{80 [{sil 0 38} {r 39 55} {ah 56 65} {sh 66 80} {axr 81 99} {sil 100 108}]}
{91 [{sil 0 22} {p 23 25} {sil 26 44} {r 45 62} {ah 63 72} {ch 73 88} {y 89 93} {axr 94 177} {sil 178 180}]}
{105 [{sil 0 52} {r 53 72} {ah 73 86} {ch 87 103} {y 104 107} {axr 108 201} {sil 202 209}]}
{125 [{sil 3 30} {p 31 34} {sil 35 65} {r 66 86} {ah 87 104} {ch 105 123} {y 124 127} {axr 128 239} {sil 240 245}]}

normalised results =
{72 [{sil 0 34} {r 49 68} {ah 69 81} {sh 82 100} {axr 101 125} {sil 126 138}]}
{80 [{sil 0 38} {r 49 69} {ah 70 81} {sh 83 100} {axr 101 124} {sil 125 135}]}
{91 [{sil 0 22} {p 25 25} {sil 29 48} {r 49 68} {ah 69 79} {ch 80 97} {y 98 102} {axr 103 195} {sil 196 196}]}
{105 [{sil 0 52} {r 50 69} {ah 70 82} {ch 83 98} {y 99 102} {axr 103 191} {sil 192 199}]}
{125 [{sil 3 30} {p 25 27} {sil 28 52} {r 53 69} {ah 70 83} {ch 84 98} {y 99 102} {axr 102 191} {sil 192 196}]}

ruleAligned = [{{r 0} [{0 1} {1 1} {2 3} {3 1} {4 3}]} {{ah 0} [{0 2} {1 2} {2 4} {3 2} {4 4}]} {{sh 2} [{0 3} {1 3}]} {{ch 3} [{2 5} {3 3} {4 5}]} {{axr 0} [{0 4} {1 4} {2 7} {3 5} {4 7}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {r 49 68} {ah 69 81} {sh 82 100} {axr 101 125} {sil 126 126}]}
{80 [{sil 0 0} {r 49 69} {ah 70 81} {sh 83 100} {axr 101 124} {sil 125 125}]}
{91 [{sil 0 0} {p 25 25} {sil 29 29} {r 49 68} {ah 69 79} {ch 80 97} {y 98 98} {axr 103 195} {sil 196 196}]}
{105 [{sil 0 0} {r 50 69} {ah 70 82} {ch 83 98} {y 99 99} {axr 103 191} {sil 192 192}]}
{125 [{sil 3 3} {p 25 25} {sil 28 28} {r 53 69} {ah 70 83} {ch 84 98} {y 99 99} {axr 102 191} {sil 192 192}]}

timeAligned = [{{r 49 69} [{0 1} {1 1} {2 3} {3 1} {4 3}]} {{ah 70 81} [{0 2} {1 2} {2 4} {3 2} {4 4}]} {{ch 84 97} [{2 5} {3 3} {4 5}]} {{axr 102 191} [{0 4} {1 4} {4 7} {2 7} {3 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 68
i, iTime, newITime, timeStartFrom = 2 1 -1 79
i, iTime, newITime, timeStartFrom = 3 1 2 79
i, iTime, newITime, timeStartFrom = 4 2 3 97
combinedVerdict    = [{r 0} {ah 0} {sh 2} {ch 3} {axr 0}]
ruleAlignedVerdict = [{r 0} {ah 0} {sh 2} {ch 3} {axr 0}]

score->
+1 for r
+1 for ah
-1 for sh
-1 for ch
+1 for axr
score<-: 1
bestResult = {1 [{r 0} {ah 0} {sh 2} {ch 3} {axr 0}] [r ah sh axr]}
testPronounce r good ah good sh missing ch surprise axr good
publish->
phonsToAlphas = [{[r] r} {[ah] u} {[sh] ssi} {[axr] a}]
getVerdict<-:new {r [r] 0}
getVerdict<-:new {u [ah] 0}
getVerdict<-:new {ssi [sh] 2}
getVerdict<-:new {a [axr] 0}
lettersVerdicts = [{r [r] 0} {u [ah] 0} {ssi [sh] 2} {ch [ch] 3} {a [axr] 0}]
publish<-
Total: 217.312727ms
{
  "results": [
    {
      "letters": "r",
      "phonemes": "ɹ",
      "verdict": "good"
    },
    {
      "letters": "u",
      "phonemes": "ʌ",
      "verdict": "good"
    },
    {
      "letters": "ssi",
      "phonemes": "ʃ",
      "verdict": "missing"
    },
    {
      "letters": "ch",
      "phonemes": "ʧ",
      "verdict": "surprise"
    },
    {
      "letters": "a",
      "phonemes": "əɹ",
      "verdict": "good"
    }
  ],
  "err": null
}
