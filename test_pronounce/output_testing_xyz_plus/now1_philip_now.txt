
 length of audio =  1.855625



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.52 0.88 1.4

 start3, duration3, end3 =  0.68 0.66 1.34

 Initial start, duration, end =  0.42000000000000004 0.9799999999999999 1.4

 Cut at: start, duration =  0.42000000000000004 1.43     guard_end =  1.85 

Running scan for frate = 125
Considering guard zh with value 0.8 for n ...
Considering guard sh with value 0.8 for n ...
candidateGuards = map[sh:true zh:true]
Picking guard, zh

Considering guard sh with value 0.8 for aw ...
Considering guard zh with value 0.8 for aw ...
candidateGuards = map[sh:true zh:true]
Picking guard, sh


frate, target rule = 125 public <now> = (((sil [((z <any_Cx_n_z_p>) | (<any_Cx_n_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_n_z_p>) | (<any_Cx_n_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_n> zh)] | [(zh <any_Cx_zh_p_z_n>)]) (n | ((<any_Cx_zh_p_z_n> zh) | (zh <any_Cx_zh_p_z_n>)))) ((([(<any_Vx_sh_zh_aw_noSlide> sh)] | [(sh <any_Vx_sh_zh_aw_noSlide>)]) ([(<any_Cx_sh_zh_n> sh)] | [(sh <any_Cx_sh_zh_n>)])) (aw | ((<any_Vx_sh_zh_aw_noSlide> sh) | (sh <any_Vx_sh_zh_aw_noSlide>)))) (([(<any_Cx_sh_aw_m> m)] | [(m <any_Cx_sh_aw_m>)]) ([(<any_Vx_sh_aw_m> m)] | [(m <any_Vx_sh_aw_m>)]) sil))
Running scan for frate = 105
Considering guard zh with value 0.8 for n ...
Considering guard sh with value 0.8 for n ...
candidateGuards = map[sh:true zh:true]
Picking guard, zh

Considering guard sh with value 0.8 for aw ...
Considering guard zh with value 0.8 for aw ...
candidateGuards = map[sh:true zh:true]
Picking guard, sh


frate, target rule = 105 public <now> = (((sil [((z <any_Cx_n_z_p>) | (<any_Cx_n_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_n_z_p>) | (<any_Cx_n_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_n> zh)] | [(zh <any_Cx_zh_p_z_n>)]) (n | ((<any_Cx_zh_p_z_n> zh) | (zh <any_Cx_zh_p_z_n>)))) ((([(<any_Vx_sh_zh_aw_noSlide> sh)] | [(sh <any_Vx_sh_zh_aw_noSlide>)]) ([(<any_Cx_sh_zh_n> sh)] | [(sh <any_Cx_sh_zh_n>)])) (aw | ((<any_Vx_sh_zh_aw_noSlide> sh) | (sh <any_Vx_sh_zh_aw_noSlide>)))) (([(<any_Cx_sh_aw_ng> ng)] | [(ng <any_Cx_sh_aw_ng>)]) ([(<any_Vx_sh_aw_ng> ng)] | [(ng <any_Vx_sh_aw_ng>)]) sil))
Running scan for frate = 91
Considering guard zh with value 0.8 for n ...
Considering guard sh with value 0.8 for n ...
candidateGuards = map[sh:true zh:true]
Picking guard, zh

Considering guard zh with value 0.8 for aw ...
Considering guard sh with value 0.8 for aw ...
candidateGuards = map[sh:true zh:true]
Picking guard, zh


frate, target rule = 91 public <now> = (((sil [((z <any_Cx_n_z_p>) | (<any_Cx_n_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_n_z_p>) | (<any_Cx_n_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_n> zh)] | [(zh <any_Cx_zh_p_z_n>)]) (n | ((<any_Cx_zh_p_z_n> zh) | (zh <any_Cx_zh_p_z_n>)))) ((([(<any_Vx_zh_zh_aw_noSlide> zh)] | [(zh <any_Vx_zh_zh_aw_noSlide>)]) ([(<any_Cx_zh_zh_n> zh)] | [(zh <any_Cx_zh_zh_n>)])) (aw | ((<any_Vx_zh_zh_aw_noSlide> zh) | (zh <any_Vx_zh_zh_aw_noSlide>)))) (([(<any_Cx_zh_aw_ng> ng)] | [(ng <any_Cx_zh_aw_ng>)]) ([(<any_Vx_zh_aw_ng> ng)] | [(ng <any_Vx_zh_aw_ng>)]) sil))
Running scan for frate = 80
Considering guard sh with value 0.8 for n ...
Considering guard zh with value 0.8 for n ...
candidateGuards = map[sh:true zh:true]
Picking guard, sh

Considering guard sh with value 0.8 for aw ...
Considering guard zh with value 0.8 for aw ...
candidateGuards = map[sh:true zh:true]
Picking guard, sh


frate, target rule = 80 public <now> = (((sil [((z <any_Cx_n_z_p>) | (<any_Cx_n_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_n_z_p>) | (<any_Cx_n_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_n> sh)] | [(sh <any_Cx_sh_p_z_n>)]) (n | ((<any_Cx_sh_p_z_n> sh) | (sh <any_Cx_sh_p_z_n>)))) ((([(<any_Vx_sh_sh_aw_noSlide> sh)] | [(sh <any_Vx_sh_sh_aw_noSlide>)]) ([(<any_Cx_sh_sh_n> sh)] | [(sh <any_Cx_sh_sh_n>)])) (aw | ((<any_Vx_sh_sh_aw_noSlide> sh) | (sh <any_Vx_sh_sh_aw_noSlide>)))) (([(<any_Cx_sh_aw_p> p)] | [(p <any_Cx_sh_aw_p>)]) ([(<any_Vx_sh_aw_p> p)] | [(p <any_Vx_sh_aw_p>)]) sil))
Running scan for frate = 72
Considering guard zh with value 0.8 for n ...
Considering guard sh with value 0.8 for n ...
candidateGuards = map[sh:true zh:true]
Picking guard, zh

Considering guard zh with value 0.8 for aw ...
Considering guard sh with value 0.8 for aw ...
candidateGuards = map[sh:true zh:true]
Picking guard, zh


frate, target rule = 72 public <now> = (((sil [((z <any_Cx_n_z_p>) | (<any_Cx_n_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_n_z_p>) | (<any_Cx_n_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_n> zh)] | [(zh <any_Cx_zh_p_z_n>)]) (n | ((<any_Cx_zh_p_z_n> zh) | (zh <any_Cx_zh_p_z_n>)))) ((([(<any_Vx_zh_zh_aw_noSlide> zh)] | [(zh <any_Vx_zh_zh_aw_noSlide>)]) ([(<any_Cx_zh_zh_n> zh)] | [(zh <any_Cx_zh_zh_n>)])) (aw | ((<any_Vx_zh_zh_aw_noSlide> zh) | (zh <any_Vx_zh_zh_aw_noSlide>)))) (([(<any_Cx_zh_aw_f> f)] | [(f <any_Cx_zh_aw_f>)]) ([(<any_Vx_zh_aw_f> f)] | [(f <any_Vx_zh_aw_f>)]) sil))

results =
{72 [{sil 0 11} {n 12 25} {aw 26 57} {sil 58 82}]}
{80 [{sil 0 12} {n 13 28} {aw 29 63} {sil 64 90}]}
{91 [{sil 0 15} {n 16 32} {aw 33 72} {sil 73 124}]}
{105 [{sil 0 18} {n 19 37} {aw 38 83} {sil 84 145}]}
{125 [{sil 3 23} {n 24 45} {aw 46 107} {sil 108 174}]}

normalised results =
{72 [{sil 0 11} {n 17 35} {aw 36 79} {sil 81 114}]}
{80 [{sil 0 12} {n 16 35} {aw 36 79} {sil 80 113}]}
{91 [{sil 0 15} {n 18 35} {aw 36 79} {sil 80 136}]}
{105 [{sil 0 18} {n 18 35} {aw 36 79} {sil 80 138}]}
{125 [{sil 3 23} {n 19 36} {aw 37 86} {sil 86 139}]}

ruleAligned = [{{n 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{aw 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {n 17 35} {aw 36 79} {sil 81 81}]}
{80 [{sil 0 0} {n 16 35} {aw 36 79} {sil 80 80}]}
{91 [{sil 0 0} {n 18 35} {aw 36 79} {sil 80 80}]}
{105 [{sil 0 0} {n 18 35} {aw 36 79} {sil 80 80}]}
{125 [{sil 3 3} {n 19 36} {aw 37 86} {sil 86 86}]}

timeAligned = [{{n 18 35} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{aw 36 79} [{0 2} {1 2} {2 2} {3 2} {4 2}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 35
combinedVerdict    = [{n 0} {aw 0}]
ruleAlignedVerdict = [{n 0} {aw 0}]

score->
+1 for n
+1 for aw
score<-: 7
testPronounce n good aw good
publish->
phonsToAlphas = [{[n] n} {[aw] ow}]
getVerdict<-:new {n [n] 0}
getVerdict<-:new {ow [aw] 0}
lettersVerdicts = [{n [n] 0} {ow [aw] 0}]
publish<-
{
  "results": [
    {
      "letters": "n",
      "phonemes": "n",
      "verdict": "good"
    },
    {
      "letters": "ow",
      "phonemes": "ɑʊ",
      "verdict": "good"
    }
  ],
  "err": null
}
