
 length of audio =  1.877



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.5800000000000001 0.72 1.3

 start3, duration3, end3 =  0.5800000000000001 0.66 1.2400000000000002

 Initial start, duration, end =  0.4800000000000001 0.82 1.3

 Cut at: start, duration =  0.4800000000000001 1.27     guard_end =  1.75 

Running scan for frate = 125
Running scan for frate = 125
Running scan for frate = 125
Running scan for frate = 125
Considering guard s with value 1 for b ...
Considering guard jh with value 1 for b ...
Considering guard sh with value 1 for b ...
candidateGuards = map[jh:true s:true sh:true]
Picking guard, s

Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ihl ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard s with value 1 for ng ...
Considering guard sh with value 1 for ng ...
Considering guard z with value 1 for ng ...
Considering guard jh with value 1 for ng ...
candidateGuards = map[jh:true s:true sh:true z:true]
Picking guard, sh

Considering guard sh with value 2 for ihl ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for ing ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 125 public <billing> = (((sil [((l <any_Cx_b_l_hh>) | (<any_Cx_b_l_hh> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]) | (sil hh (sil [((l <any_Cx_b_l_hh>) | (<any_Cx_b_l_hh> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]))) (([(<any_Cx_sh_hh_l_b_ihl> sh)] | [(sh <any_Cx_sh_hh_l_b_ihl>)]) (b | ((<any_Cx_sh_hh_l_b_ihl> sh) | (sh <any_Cx_sh_hh_l_b_ihl>)))) (([(<any_Cx_sh_sh_ihl_b> sh)] | [(sh <any_Cx_sh_sh_ihl_b>)]) (ihl | ((<any_Cx_sh_sh_ihl_ing> sh) | (sh <any_Cx_sh_sh_ihl_ing>)))) (([(<any_Cx_sh_sh_ing_ihl> sh)] | [(sh <any_Cx_sh_sh_ing_ihl>)]) (ing | ((<any_Cx_sh_sh_ing_ihl> sh) | (sh <any_Cx_sh_sh_ing_ihl>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_sh_ing_n> n)] | [(n <any_Cx_sh_ing_n>)]) sil))
Considering guard jh with value 1 for b ...
Considering guard s with value 1 for b ...
Considering guard sh with value 1 for b ...
candidateGuards = map[jh:true s:true sh:true]
Picking guard, jh

Considering guard jh with value 1 for ng ...
Considering guard sh with value 1 for ng ...
Considering guard z with value 1 for ng ...
Considering guard s with value 1 for ng ...
candidateGuards = map[jh:true s:true sh:true z:true]
Picking guard, s

Running scan for frate = 105
Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 125 public <billing> = (((sil [((sh <any_Cx_b_sh_hh>) | (<any_Cx_b_sh_hh> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil hh (sil [((sh <any_Cx_b_sh_hh>) | (<any_Cx_b_sh_hh> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_sh_hh_sh_b_ihl> sh)] | [(sh <any_Cx_sh_hh_sh_b_ihl>)]) (b | ((<any_Cx_sh_hh_sh_b_ihl> sh) | (sh <any_Cx_sh_hh_sh_b_ihl>)))) (([(<any_Cx_sh_sh_ihl_b> sh)] | [(sh <any_Cx_sh_sh_ihl_b>)]) (ihl | ((<any_Cx_sh_sh_ihl> sh) | (sh <any_Cx_sh_sh_ihl>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_ng_ihl> sh)] | [(sh <any_Cx_sh_sh_ng_ihl>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_sh_sh_ng> sh)] | [(sh <any_Cx_sh_sh_ng>)]) (ng | ((<any_Cx_sh_sh_ng> sh) | (sh <any_Cx_sh_sh_ng>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_sh_ng_hh> hh)] | [(hh <any_Cx_sh_ng_hh>)]) sil))
Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ihl ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for ing ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 105
Considering guard sh with value 1 for ing ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 125 public <billing> = (((sil [((dh <any_Cx_b_dh_hh>) | (<any_Cx_b_dh_hh> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]) | (sil hh (sil [((dh <any_Cx_b_dh_hh>) | (<any_Cx_b_dh_hh> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]))) (([(<any_Cx_s_hh_dh_b> s)] | [(s <any_Cx_s_hh_dh_b>)]) (b | ((<any_Cx_s_hh_dh_b> s) | (s <any_Cx_s_hh_dh_b>)))) ((([(<any_Vx_sh_s_ih_noSlide> sh)] | [(sh <any_Vx_sh_s_ih_noSlide>)]) ([(<any_Cx_sh_s_l_b> sh)] | [(sh <any_Cx_sh_s_l_b>)])) (ih | ((<any_Vx_sh_s_ih_noSlide> sh) | (sh <any_Vx_sh_s_ih_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_ng_l> sh)] | [(sh <any_Cx_sh_sh_ng_l>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_s_sh_ng> s)] | [(s <any_Cx_s_sh_ng>)]) (ng | ((<any_Cx_s_sh_ng> s) | (s <any_Cx_s_sh_ng>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_s_ng_ng> ng)] | [(ng <any_Cx_s_ng_ng>)]) sil))
Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 125 public <billing> = (((sil [((f <any_Cx_b_f_hh>) | (<any_Cx_b_f_hh> f))] [((f <any_vowel_noSlide>) | (<any_vowel_noSlide> f))]) | (sil hh (sil [((f <any_Cx_b_f_hh>) | (<any_Cx_b_f_hh> f))] [((f <any_vowel_noSlide>) | (<any_vowel_noSlide> f))]))) (([(<any_Cx_jh_hh_f_b> jh)] | [(jh <any_Cx_jh_hh_f_b>)]) (b | ((<any_Cx_jh_hh_f_b> jh) | (jh <any_Cx_jh_hh_f_b>)))) ((([(<any_Vx_sh_jh_ih_noSlide> sh)] | [(sh <any_Vx_sh_jh_ih_noSlide>)]) ([(<any_Cx_sh_jh_l_b> sh)] | [(sh <any_Cx_sh_jh_l_b>)])) (ih | ((<any_Vx_sh_jh_ih_noSlide> sh) | (sh <any_Vx_sh_jh_ih_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l_ing> sh) | (sh <any_Cx_sh_sh_l_ing>)))) (([(<any_Cx_sh_sh_ing_l> sh)] | [(sh <any_Cx_sh_sh_ing_l>)]) (ing | ((<any_Cx_sh_sh_ing_l> sh) | (sh <any_Cx_sh_sh_ing_l>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_sh_ing_n> n)] | [(n <any_Cx_sh_ing_n>)]) sil))
frate, target rule = 105 public <billing> = (((sil [((dh <any_Cx_b_dh_hh>) | (<any_Cx_b_dh_hh> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]) | (sil hh (sil [((dh <any_Cx_b_dh_hh>) | (<any_Cx_b_dh_hh> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]))) (([(<any_Cx_sh_hh_dh_b_ihl> sh)] | [(sh <any_Cx_sh_hh_dh_b_ihl>)]) (b | ((<any_Cx_sh_hh_dh_b_ihl> sh) | (sh <any_Cx_sh_hh_dh_b_ihl>)))) (([(<any_Cx_sh_sh_ihl_b> sh)] | [(sh <any_Cx_sh_sh_ihl_b>)]) (ihl | ((<any_Cx_sh_sh_ihl_ing> sh) | (sh <any_Cx_sh_sh_ihl_ing>)))) (([(<any_Cx_sh_sh_ing_ihl> sh)] | [(sh <any_Cx_sh_sh_ing_ihl>)]) (ing | ((<any_Cx_sh_sh_ing_ihl> sh) | (sh <any_Cx_sh_sh_ing_ihl>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_sh_ing_m> m)] | [(m <any_Cx_sh_ing_m>)]) sil))
Considering guard sh with value 2 for ihl ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 91
Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 105
Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for ng ...
Considering guard z with value 1 for ng ...
Considering guard s with value 1 for ng ...
Considering guard jh with value 1 for ng ...
candidateGuards = map[jh:true s:true sh:true z:true]
Picking guard, sh

Considering guard sh with value 2 for ihl ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for ing ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 105 public <billing> = (((sil [((l <any_Cx_b_l_hh>) | (<any_Cx_b_l_hh> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]) | (sil hh (sil [((l <any_Cx_b_l_hh>) | (<any_Cx_b_l_hh> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]))) (([(<any_Cx_sh_hh_l_b_ihl> sh)] | [(sh <any_Cx_sh_hh_l_b_ihl>)]) (b | ((<any_Cx_sh_hh_l_b_ihl> sh) | (sh <any_Cx_sh_hh_l_b_ihl>)))) (([(<any_Cx_sh_sh_ihl_b> sh)] | [(sh <any_Cx_sh_sh_ihl_b>)]) (ihl | ((<any_Cx_sh_sh_ihl> sh) | (sh <any_Cx_sh_sh_ihl>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_ng_ihl> sh)] | [(sh <any_Cx_sh_sh_ng_ihl>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_sh_sh_ng> sh)] | [(sh <any_Cx_sh_sh_ng>)]) (ng | ((<any_Cx_sh_sh_ng> sh) | (sh <any_Cx_sh_sh_ng>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_sh_ng_hh> hh)] | [(hh <any_Cx_sh_ng_hh>)]) sil))
Running scan for frate = 105
frate, target rule = 91 public <billing> = (((sil [((f <any_Cx_b_f_hh>) | (<any_Cx_b_f_hh> f))] [((f <any_vowel_noSlide>) | (<any_vowel_noSlide> f))]) | (sil hh (sil [((f <any_Cx_b_f_hh>) | (<any_Cx_b_f_hh> f))] [((f <any_vowel_noSlide>) | (<any_vowel_noSlide> f))]))) (([(<any_Cx_sh_hh_f_b_ihl> sh)] | [(sh <any_Cx_sh_hh_f_b_ihl>)]) (b | ((<any_Cx_sh_hh_f_b_ihl> sh) | (sh <any_Cx_sh_hh_f_b_ihl>)))) (([(<any_Cx_sh_sh_ihl_b> sh)] | [(sh <any_Cx_sh_sh_ihl_b>)]) (ihl | ((<any_Cx_sh_sh_ihl_ing> sh) | (sh <any_Cx_sh_sh_ihl_ing>)))) (([(<any_Cx_sh_sh_ing_ihl> sh)] | [(sh <any_Cx_sh_sh_ing_ihl>)]) (ing | ((<any_Cx_sh_sh_ing_ihl> sh) | (sh <any_Cx_sh_sh_ing_ihl>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_sh_ing_f> f)] | [(f <any_Cx_sh_ing_f>)]) sil))
Running scan for frate = 91
Considering guard sh with value 1 for b ...
Considering guard s with value 1 for b ...
Considering guard jh with value 1 for b ...
candidateGuards = map[jh:true s:true sh:true]
Picking guard, sh

Running scan for frate = 80
Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ihl ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ihl ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for ing ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard jh with value 1 for ng ...
Considering guard z with value 1 for ng ...
Considering guard sh with value 1 for ng ...
Considering guard s with value 1 for ng ...
candidateGuards = map[jh:true s:true sh:true z:true]
Picking guard, jh

Considering guard s with value 1 for b ...
Considering guard jh with value 1 for b ...
Considering guard sh with value 1 for b ...
candidateGuards = map[jh:true s:true sh:true]
Picking guard, s

Considering guard sh with value 1 for ing ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 80 public <billing> = (((sil [((p <any_Cx_b_p_hh>) | (<any_Cx_b_p_hh> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]) | (sil hh (sil [((p <any_Cx_b_p_hh>) | (<any_Cx_b_p_hh> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]))) (([(<any_Cx_sh_hh_p_b_ihl> sh)] | [(sh <any_Cx_sh_hh_p_b_ihl>)]) (b | ((<any_Cx_sh_hh_p_b_ihl> sh) | (sh <any_Cx_sh_hh_p_b_ihl>)))) (([(<any_Cx_sh_sh_ihl_b> sh)] | [(sh <any_Cx_sh_sh_ihl_b>)]) (ihl | ((<any_Cx_sh_sh_ihl_ing> sh) | (sh <any_Cx_sh_sh_ihl_ing>)))) (([(<any_Cx_sh_sh_ing_ihl> sh)] | [(sh <any_Cx_sh_sh_ing_ihl>)]) (ing | ((<any_Cx_sh_sh_ing_ihl> sh) | (sh <any_Cx_sh_sh_ing_ihl>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_sh_ing_f> f)] | [(f <any_Cx_sh_ing_f>)]) sil))
Running scan for frate = 72
frate, target rule = 91 public <billing> = (((sil [((f <any_Cx_b_f_hh>) | (<any_Cx_b_f_hh> f))] [((f <any_vowel_noSlide>) | (<any_vowel_noSlide> f))]) | (sil hh (sil [((f <any_Cx_b_f_hh>) | (<any_Cx_b_f_hh> f))] [((f <any_vowel_noSlide>) | (<any_vowel_noSlide> f))]))) (([(<any_Cx_sh_hh_f_b_ihl> sh)] | [(sh <any_Cx_sh_hh_f_b_ihl>)]) (b | ((<any_Cx_sh_hh_f_b_ihl> sh) | (sh <any_Cx_sh_hh_f_b_ihl>)))) (([(<any_Cx_sh_sh_ihl_b> sh)] | [(sh <any_Cx_sh_sh_ihl_b>)]) (ihl | ((<any_Cx_sh_sh_ihl> sh) | (sh <any_Cx_sh_sh_ihl>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_ng_ihl> sh)] | [(sh <any_Cx_sh_sh_ng_ihl>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_jh_sh_ng> jh)] | [(jh <any_Cx_jh_sh_ng>)]) (ng | ((<any_Cx_jh_sh_ng> jh) | (jh <any_Cx_jh_sh_ng>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_jh_ng_m> m)] | [(m <any_Cx_jh_ng_m>)]) sil))
frate, target rule = 105 public <billing> = (((sil [((v <any_Cx_b_v_hh>) | (<any_Cx_b_v_hh> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]) | (sil hh (sil [((v <any_Cx_b_v_hh>) | (<any_Cx_b_v_hh> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]))) (([(<any_Cx_sh_hh_v_b> sh)] | [(sh <any_Cx_sh_hh_v_b>)]) (b | ((<any_Cx_sh_hh_v_b> sh) | (sh <any_Cx_sh_hh_v_b>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_l_b> sh)] | [(sh <any_Cx_sh_sh_l_b>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l_ing> sh) | (sh <any_Cx_sh_sh_l_ing>)))) (([(<any_Cx_sh_sh_ing_l> sh)] | [(sh <any_Cx_sh_sh_ing_l>)]) (ing | ((<any_Cx_sh_sh_ing_l> sh) | (sh <any_Cx_sh_sh_ing_l>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_sh_ing_f> f)] | [(f <any_Cx_sh_ing_f>)]) sil))
Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 80
Considering guard sh with value 2 for ihl ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 91
Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for ing ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 72 public <billing> = (((sil [((v <any_Cx_b_v_hh>) | (<any_Cx_b_v_hh> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]) | (sil hh (sil [((v <any_Cx_b_v_hh>) | (<any_Cx_b_v_hh> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]))) (([(<any_Cx_sh_hh_v_b_ihl> sh)] | [(sh <any_Cx_sh_hh_v_b_ihl>)]) (b | ((<any_Cx_sh_hh_v_b_ihl> sh) | (sh <any_Cx_sh_hh_v_b_ihl>)))) (([(<any_Cx_sh_sh_ihl_b> sh)] | [(sh <any_Cx_sh_sh_ihl_b>)]) (ihl | ((<any_Cx_sh_sh_ihl_ing> sh) | (sh <any_Cx_sh_sh_ihl_ing>)))) (([(<any_Cx_sh_sh_ing_ihl> sh)] | [(sh <any_Cx_sh_sh_ing_ihl>)]) (ing | ((<any_Cx_sh_sh_ing_ihl> sh) | (sh <any_Cx_sh_sh_ing_ihl>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_sh_ing_p> p)] | [(p <any_Cx_sh_ing_p>)]) sil))
Considering guard z with value 1 for ng ...
Considering guard jh with value 1 for ng ...
Considering guard s with value 1 for ng ...
Considering guard sh with value 1 for ng ...
candidateGuards = map[jh:true s:true sh:true z:true]
Picking guard, z

Considering guard sh with value 2 for ihl ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard jh with value 1 for b ...
Considering guard s with value 1 for b ...
Considering guard sh with value 1 for b ...
candidateGuards = map[jh:true s:true sh:true]
Picking guard, jh

Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 105 public <billing> = (((sil [((hh <any_Cx_b_hh_hh>) | (<any_Cx_b_hh_hh> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil hh (sil [((hh <any_Cx_b_hh_hh>) | (<any_Cx_b_hh_hh> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_s_hh_hh_b> s)] | [(s <any_Cx_s_hh_hh_b>)]) (b | ((<any_Cx_s_hh_hh_b> s) | (s <any_Cx_s_hh_hh_b>)))) ((([(<any_Vx_sh_s_ih_noSlide> sh)] | [(sh <any_Vx_sh_s_ih_noSlide>)]) ([(<any_Cx_sh_s_l_b> sh)] | [(sh <any_Cx_sh_s_l_b>)])) (ih | ((<any_Vx_sh_s_ih_noSlide> sh) | (sh <any_Vx_sh_s_ih_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_ng_l> sh)] | [(sh <any_Cx_sh_sh_ng_l>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_z_sh_ng> z)] | [(z <any_Cx_z_sh_ng>)]) (ng | ((<any_Cx_z_sh_ng> z) | (z <any_Cx_z_sh_ng>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_z_ng_ng> ng)] | [(ng <any_Cx_z_ng_ng>)]) sil))
Considering guard jh with value 1 for ng ...
Considering guard s with value 1 for ng ...
Considering guard sh with value 1 for ng ...
Considering guard z with value 1 for ng ...
candidateGuards = map[jh:true s:true sh:true z:true]
Picking guard, jh

Running scan for frate = 91
Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard s with value 1 for b ...
Considering guard sh with value 1 for b ...
Considering guard jh with value 1 for b ...
candidateGuards = map[jh:true s:true sh:true]
Picking guard, s

frate, target rule = 80 public <billing> = (((sil [((sh <any_Cx_b_sh_hh>) | (<any_Cx_b_sh_hh> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil hh (sil [((sh <any_Cx_b_sh_hh>) | (<any_Cx_b_sh_hh> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_sh_hh_sh_b_ihl> sh)] | [(sh <any_Cx_sh_hh_sh_b_ihl>)]) (b | ((<any_Cx_sh_hh_sh_b_ihl> sh) | (sh <any_Cx_sh_hh_sh_b_ihl>)))) (([(<any_Cx_sh_sh_ihl_b> sh)] | [(sh <any_Cx_sh_sh_ihl_b>)]) (ihl | ((<any_Cx_sh_sh_ihl> sh) | (sh <any_Cx_sh_sh_ihl>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_ng_ihl> sh)] | [(sh <any_Cx_sh_sh_ng_ihl>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_jh_sh_ng> jh)] | [(jh <any_Cx_jh_sh_ng>)]) (ng | ((<any_Cx_jh_sh_ng> jh) | (jh <any_Cx_jh_sh_ng>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_jh_ng_p> p)] | [(p <any_Cx_jh_ng_p>)]) sil))
Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for ing ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 72
Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 91 public <billing> = (((sil [((v <any_Cx_b_v_hh>) | (<any_Cx_b_v_hh> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]) | (sil hh (sil [((v <any_Cx_b_v_hh>) | (<any_Cx_b_v_hh> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]))) (([(<any_Cx_jh_hh_v_b> jh)] | [(jh <any_Cx_jh_hh_v_b>)]) (b | ((<any_Cx_jh_hh_v_b> jh) | (jh <any_Cx_jh_hh_v_b>)))) ((([(<any_Vx_sh_jh_ih_noSlide> sh)] | [(sh <any_Vx_sh_jh_ih_noSlide>)]) ([(<any_Cx_sh_jh_l_b> sh)] | [(sh <any_Cx_sh_jh_l_b>)])) (ih | ((<any_Vx_sh_jh_ih_noSlide> sh) | (sh <any_Vx_sh_jh_ih_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l_ing> sh) | (sh <any_Cx_sh_sh_l_ing>)))) (([(<any_Cx_sh_sh_ing_l> sh)] | [(sh <any_Cx_sh_sh_ing_l>)]) (ing | ((<any_Cx_sh_sh_ing_l> sh) | (sh <any_Cx_sh_sh_ing_l>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_sh_ing_m> m)] | [(m <any_Cx_sh_ing_m>)]) sil))
Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ihl ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 80
Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard s with value 1 for b ...
Considering guard sh with value 1 for b ...
Considering guard jh with value 1 for b ...
candidateGuards = map[jh:true s:true sh:true]
Picking guard, s

Considering guard z with value 1 for ng ...
Considering guard jh with value 1 for ng ...
Considering guard s with value 1 for ng ...
Considering guard sh with value 1 for ng ...
candidateGuards = map[jh:true s:true sh:true z:true]
Picking guard, z

Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard s with value 1 for ng ...
Considering guard jh with value 1 for ng ...
Considering guard z with value 1 for ng ...
Considering guard sh with value 1 for ng ...
candidateGuards = map[jh:true s:true sh:true z:true]
Picking guard, s

frate, target rule = 91 public <billing> = (((sil [((p <any_Cx_b_p_hh>) | (<any_Cx_b_p_hh> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]) | (sil hh (sil [((p <any_Cx_b_p_hh>) | (<any_Cx_b_p_hh> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]))) (([(<any_Cx_s_hh_p_b> s)] | [(s <any_Cx_s_hh_p_b>)]) (b | ((<any_Cx_s_hh_p_b> s) | (s <any_Cx_s_hh_p_b>)))) ((([(<any_Vx_sh_s_ih_noSlide> sh)] | [(sh <any_Vx_sh_s_ih_noSlide>)]) ([(<any_Cx_sh_s_l_b> sh)] | [(sh <any_Cx_sh_s_l_b>)])) (ih | ((<any_Vx_sh_s_ih_noSlide> sh) | (sh <any_Vx_sh_s_ih_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_ng_l> sh)] | [(sh <any_Cx_sh_sh_ng_l>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_z_sh_ng> z)] | [(z <any_Cx_z_sh_ng>)]) (ng | ((<any_Cx_z_sh_ng> z) | (z <any_Cx_z_sh_ng>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_z_ng_f> f)] | [(f <any_Cx_z_ng_f>)]) sil))
Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for ing ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 72 public <billing> = (((sil [((f <any_Cx_b_f_hh>) | (<any_Cx_b_f_hh> f))] [((f <any_vowel_noSlide>) | (<any_vowel_noSlide> f))]) | (sil hh (sil [((f <any_Cx_b_f_hh>) | (<any_Cx_b_f_hh> f))] [((f <any_vowel_noSlide>) | (<any_vowel_noSlide> f))]))) (([(<any_Cx_sh_hh_f_b_ihl> sh)] | [(sh <any_Cx_sh_hh_f_b_ihl>)]) (b | ((<any_Cx_sh_hh_f_b_ihl> sh) | (sh <any_Cx_sh_hh_f_b_ihl>)))) (([(<any_Cx_sh_sh_ihl_b> sh)] | [(sh <any_Cx_sh_sh_ihl_b>)]) (ihl | ((<any_Cx_sh_sh_ihl> sh) | (sh <any_Cx_sh_sh_ihl>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_ng_ihl> sh)] | [(sh <any_Cx_sh_sh_ng_ihl>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_s_sh_ng> s)] | [(s <any_Cx_s_sh_ng>)]) (ng | ((<any_Cx_s_sh_ng> s) | (s <any_Cx_s_sh_ng>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_s_ng_f> f)] | [(f <any_Cx_s_ng_f>)]) sil))
Running scan for frate = 80
frate, target rule = 80 public <billing> = (((sil [((d <any_Cx_b_d_hh>) | (<any_Cx_b_d_hh> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil hh (sil [((d <any_Cx_b_d_hh>) | (<any_Cx_b_d_hh> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_s_hh_d_b> s)] | [(s <any_Cx_s_hh_d_b>)]) (b | ((<any_Cx_s_hh_d_b> s) | (s <any_Cx_s_hh_d_b>)))) ((([(<any_Vx_sh_s_ih_noSlide> sh)] | [(sh <any_Vx_sh_s_ih_noSlide>)]) ([(<any_Cx_sh_s_l_b> sh)] | [(sh <any_Cx_sh_s_l_b>)])) (ih | ((<any_Vx_sh_s_ih_noSlide> sh) | (sh <any_Vx_sh_s_ih_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l_ing> sh) | (sh <any_Cx_sh_sh_l_ing>)))) (([(<any_Cx_sh_sh_ing_l> sh)] | [(sh <any_Cx_sh_sh_ing_l>)]) (ing | ((<any_Cx_sh_sh_ing_l> sh) | (sh <any_Cx_sh_sh_ing_l>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_sh_ing_hh> hh)] | [(hh <any_Cx_sh_ing_hh>)]) sil))
Considering guard jh with value 1 for b ...
Considering guard sh with value 1 for b ...
Considering guard s with value 1 for b ...
candidateGuards = map[jh:true s:true sh:true]
Picking guard, jh

Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 72
Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for ng ...
Considering guard jh with value 1 for ng ...
Considering guard z with value 1 for ng ...
Considering guard s with value 1 for ng ...
candidateGuards = map[jh:true s:true sh:true z:true]
Picking guard, sh

Considering guard jh with value 1 for b ...
Considering guard s with value 1 for b ...
Considering guard sh with value 1 for b ...
candidateGuards = map[jh:true s:true sh:true]
Picking guard, sh

frate, target rule = 80 public <billing> = (((sil [((f <any_Cx_b_f_hh>) | (<any_Cx_b_f_hh> f))] [((f <any_vowel_noSlide>) | (<any_vowel_noSlide> f))]) | (sil hh (sil [((f <any_Cx_b_f_hh>) | (<any_Cx_b_f_hh> f))] [((f <any_vowel_noSlide>) | (<any_vowel_noSlide> f))]))) (([(<any_Cx_jh_hh_f_b> jh)] | [(jh <any_Cx_jh_hh_f_b>)]) (b | ((<any_Cx_jh_hh_f_b> jh) | (jh <any_Cx_jh_hh_f_b>)))) ((([(<any_Vx_sh_jh_ih_noSlide> sh)] | [(sh <any_Vx_sh_jh_ih_noSlide>)]) ([(<any_Cx_sh_jh_l_b> sh)] | [(sh <any_Cx_sh_jh_l_b>)])) (ih | ((<any_Vx_sh_jh_ih_noSlide> sh) | (sh <any_Vx_sh_jh_ih_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_ng_l> sh)] | [(sh <any_Cx_sh_sh_ng_l>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_sh_sh_ng> sh)] | [(sh <any_Cx_sh_sh_ng>)]) (ng | ((<any_Cx_sh_sh_ng> sh) | (sh <any_Cx_sh_sh_ng>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_sh_ng_f> f)] | [(f <any_Cx_sh_ng_f>)]) sil))
Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 72
Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard s with value 1 for b ...
Considering guard sh with value 1 for b ...
Considering guard jh with value 1 for b ...
candidateGuards = map[jh:true s:true sh:true]
Picking guard, s

Considering guard sh with value 1 for ing ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 72 public <billing> = (((sil [((p <any_Cx_b_p_hh>) | (<any_Cx_b_p_hh> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]) | (sil hh (sil [((p <any_Cx_b_p_hh>) | (<any_Cx_b_p_hh> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]))) (([(<any_Cx_sh_hh_p_b> sh)] | [(sh <any_Cx_sh_hh_p_b>)]) (b | ((<any_Cx_sh_hh_p_b> sh) | (sh <any_Cx_sh_hh_p_b>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_l_b> sh)] | [(sh <any_Cx_sh_sh_l_b>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l_ing> sh) | (sh <any_Cx_sh_sh_l_ing>)))) (([(<any_Cx_sh_sh_ing_l> sh)] | [(sh <any_Cx_sh_sh_ing_l>)]) (ing | ((<any_Cx_sh_sh_ing_l> sh) | (sh <any_Cx_sh_sh_ing_l>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_sh_ing_ng> ng)] | [(ng <any_Cx_sh_ing_ng>)]) sil))
Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard z with value 1 for ng ...
Considering guard s with value 1 for ng ...
Considering guard jh with value 1 for ng ...
Considering guard sh with value 1 for ng ...
candidateGuards = map[jh:true s:true sh:true z:true]
Picking guard, sh

frate, target rule = 72 public <billing> = (((sil [((f <any_Cx_b_f_hh>) | (<any_Cx_b_f_hh> f))] [((f <any_vowel_noSlide>) | (<any_vowel_noSlide> f))]) | (sil hh (sil [((f <any_Cx_b_f_hh>) | (<any_Cx_b_f_hh> f))] [((f <any_vowel_noSlide>) | (<any_vowel_noSlide> f))]))) (([(<any_Cx_s_hh_f_b> s)] | [(s <any_Cx_s_hh_f_b>)]) (b | ((<any_Cx_s_hh_f_b> s) | (s <any_Cx_s_hh_f_b>)))) ((([(<any_Vx_sh_s_ih_noSlide> sh)] | [(sh <any_Vx_sh_s_ih_noSlide>)]) ([(<any_Cx_sh_s_l_b> sh)] | [(sh <any_Cx_sh_s_l_b>)])) (ih | ((<any_Vx_sh_s_ih_noSlide> sh) | (sh <any_Vx_sh_s_ih_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_ng_l> sh)] | [(sh <any_Cx_sh_sh_ng_l>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_sh_sh_ng> sh)] | [(sh <any_Cx_sh_sh_ng>)]) (ng | ((<any_Cx_sh_sh_ng> sh) | (sh <any_Cx_sh_sh_ng>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_sh_ng_f> f)] | [(f <any_Cx_sh_ng_f>)]) sil))

results =
{72 [{sil 0 11} {b 12 16} {ihl 17 28} {ing 29 48} {sil 49 58}]}
{80 [{sil 0 12} {b 13 17} {ihl 18 31} {ing 32 53} {sil 54 61}]}
{91 [{sil 0 14} {b 15 20} {ihl 21 34} {ing 35 60} {sil 61 110}]}
{105 [{sil 0 17} {b 18 23} {ihl 24 40} {ing 41 70} {sil 71 132}]}
{125 [{sil 3 22} {b 23 28} {ihl 29 48} {ing 49 51} {iy 52 64} {n 65 85} {sil 86 154}]}

normalised results =
{72 [{sil 0 11} {b 17 22} {ihl 24 39} {ing 40 67} {sil 68 81}]}
{80 [{sil 0 12} {b 16 21} {ihl 23 39} {ing 40 66} {sil 68 76}]}
{91 [{sil 0 14} {b 16 22} {ihl 23 37} {ing 38 66} {sil 67 121}]}
{105 [{sil 0 17} {b 17 22} {ihl 23 38} {ing 39 67} {sil 68 126}]}
{125 [{sil 3 22} {b 18 22} {ihl 23 38} {ing 39 39} {iy 42 51} {n 52 68} {sil 69 123}]}

ruleAligned = [{{b 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ihl 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{ing 0} [{0 3} {1 3} {2 3} {3 3}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {b 17 22} {ihl 24 39} {ing 40 67} {sil 68 68}]}
{80 [{sil 0 0} {b 16 21} {ihl 23 39} {ing 40 66} {sil 68 68}]}
{91 [{sil 0 0} {b 16 22} {ihl 23 37} {ing 38 66} {sil 67 67}]}
{105 [{sil 0 0} {b 17 22} {ihl 23 38} {ing 39 67} {sil 68 68}]}
{125 [{sil 3 3} {b 18 22} {ihl 23 38} {ing 39 39} {iy 42 51} {n 52 68} {sil 69 69}]}

timeAligned = [{{b 17 22} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ihl 23 38} [{1 2} {2 2} {3 2} {4 2} {0 2}]} {{ing 40 66} [{0 3} {1 3} {2 3} {3 3}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 21
i, iTime, newITime, timeStartFrom = 2 1 2 37
combinedVerdict    = [{b 0} {ihl 0} {ing 0}]
ruleAlignedVerdict = [{b 0} {ihl 0} {ing 0}]

score->
+1 for b
+1 for ihl
+1 for ing
score<-: 8

results =
{72 [{sil 0 11} {b 12 15} {ih 16 20} {l 21 28} {ih 29 34} {ng 35 48} {sil 49 58}]}
{80 [{sil 0 12} {b 13 17} {ih 18 23} {l 24 31} {ih 32 38} {ng 39 53} {sil 54 61}]}
{91 [{sil 0 14} {b 15 19} {ih 20 27} {l 28 35} {ih 36 43} {ng 44 60} {sil 61 110}]}
{105 [{sil 0 17} {b 18 22} {ih 23 31} {l 32 41} {ih 42 50} {ng 51 70} {sil 71 132}]}
{125 [{sil 3 22} {b 23 27} {ih 28 38} {l 39 50} {ih 51 61} {ng 62 83} {sil 84 154}]}

normalised results =
{72 [{sil 0 11} {b 17 21} {ih 22 28} {l 29 39} {ih 40 47} {ng 49 67} {sil 68 81}]}
{80 [{sil 0 12} {b 16 21} {ih 23 29} {l 30 39} {ih 40 48} {ng 49 66} {sil 68 76}]}
{91 [{sil 0 14} {b 16 21} {ih 22 30} {l 31 38} {ih 40 47} {ng 48 66} {sil 67 121}]}
{105 [{sil 0 17} {b 17 21} {ih 22 30} {l 30 39} {ih 40 48} {ng 49 67} {sil 68 126}]}
{125 [{sil 3 22} {b 18 22} {ih 22 30} {l 31 40} {ih 41 49} {ng 50 66} {sil 67 123}]}

ruleAligned = [{{b 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ih 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{l 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{ih 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{ng 0} [{0 5} {1 5} {2 5} {3 5} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {b 17 21} {ih 22 28} {l 29 39} {ih 40 47} {ng 49 67} {sil 68 68}]}
{80 [{sil 0 0} {b 16 21} {ih 23 29} {l 30 39} {ih 40 48} {ng 49 66} {sil 68 68}]}
{91 [{sil 0 0} {b 16 21} {ih 22 30} {l 31 38} {ih 40 47} {ng 48 66} {sil 67 67}]}
{105 [{sil 0 0} {b 17 21} {ih 22 30} {l 30 39} {ih 40 48} {ng 49 67} {sil 68 68}]}
{125 [{sil 3 3} {b 18 22} {ih 22 30} {l 31 40} {ih 41 49} {ng 50 66} {sil 67 67}]}

timeAligned = [{{b 17 21} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ih 22 30} [{0 2} {2 2} {3 2} {4 2} {1 2}]} {{l 30 39} [{0 3} {1 3} {3 3} {2 3} {4 3}]} {{ih 40 48} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{ng 49 66} [{0 5} {1 5} {2 5} {3 5} {4 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 21
i, iTime, newITime, timeStartFrom = 2 1 2 28
i, iTime, newITime, timeStartFrom = 3 2 3 38
i, iTime, newITime, timeStartFrom = 4 3 4 47
combinedVerdict    = [{b 0} {ih 0} {l 0} {ih 0} {ng 0}]
ruleAlignedVerdict = [{b 0} {ih 0} {l 0} {ih 0} {ng 0}]

score->
+1 for b
+1 for ih
+1 for l
+1 for ih
+1 for ng
score<-: 10

results =
{72 [{sil 0 11} {b 12 15} {ih 16 20} {l 21 28} {ing 29 48} {sil 49 58}]}
{80 [{sil 0 12} {b 13 17} {ih 18 23} {l 24 32} {ing 33 53} {sil 54 61}]}
{91 [{sil 0 14} {b 15 19} {ih 20 27} {l 28 35} {ing 36 60} {sil 61 110}]}
{105 [{sil 0 17} {b 18 22} {ih 23 31} {l 32 41} {ing 42 70} {sil 71 132}]}
{125 [{sil 3 22} {b 23 27} {ih 28 38} {l 39 49} {ing 50 52} {iy 53 64} {n 65 85} {sil 86 154}]}

normalised results =
{72 [{sil 0 11} {b 17 21} {ih 22 28} {l 29 39} {ing 40 67} {sil 68 81}]}
{80 [{sil 0 12} {b 16 21} {ih 23 29} {l 30 40} {ing 41 66} {sil 68 76}]}
{91 [{sil 0 14} {b 16 21} {ih 22 30} {l 31 38} {ing 40 66} {sil 67 121}]}
{105 [{sil 0 17} {b 17 21} {ih 22 30} {l 30 39} {ing 40 67} {sil 68 126}]}
{125 [{sil 3 22} {b 18 22} {ih 22 30} {l 31 39} {ing 40 40} {iy 42 51} {n 52 68} {sil 69 123}]}

ruleAligned = [{{b 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ih 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{l 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{ing 0} [{0 4} {1 4} {2 4} {3 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {b 17 21} {ih 22 28} {l 29 39} {ing 40 67} {sil 68 68}]}
{80 [{sil 0 0} {b 16 21} {ih 23 29} {l 30 40} {ing 41 66} {sil 68 68}]}
{91 [{sil 0 0} {b 16 21} {ih 22 30} {l 31 38} {ing 40 66} {sil 67 67}]}
{105 [{sil 0 0} {b 17 21} {ih 22 30} {l 30 39} {ing 40 67} {sil 68 68}]}
{125 [{sil 3 3} {b 18 22} {ih 22 30} {l 31 39} {ing 40 40} {iy 42 51} {n 52 68} {sil 69 69}]}

timeAligned = [{{b 17 21} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ih 22 30} [{0 2} {2 2} {3 2} {4 2} {1 2}]} {{l 30 39} [{0 3} {1 3} {3 3} {2 3} {4 3}]} {{ing 40 66} [{0 4} {2 4} {3 4} {1 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 21
i, iTime, newITime, timeStartFrom = 2 1 2 28
i, iTime, newITime, timeStartFrom = 3 2 3 38
combinedVerdict    = [{b 0} {ih 0} {l 0} {ing 0}]
ruleAlignedVerdict = [{b 0} {ih 0} {l 0} {ing 0}]

score->
+1 for b
+1 for ih
+1 for l
+1 for ing
score<-: 9

results =
{72 [{sil 0 11} {b 12 16} {ihl 17 28} {ih 29 34} {ng 35 48} {sil 49 58}]}
{80 [{sil 0 12} {b 13 17} {ihl 18 31} {ih 32 38} {ng 39 53} {sil 54 61}]}
{91 [{sil 0 14} {b 15 20} {ihl 21 34} {ih 35 43} {ng 44 60} {sil 61 110}]}
{105 [{sil 0 17} {b 18 23} {ihl 24 40} {ih 41 50} {ng 51 70} {sil 71 132}]}
{125 [{sil 3 22} {b 23 28} {ihl 29 49} {ih 50 61} {ng 62 83} {sil 84 154}]}

normalised results =
{72 [{sil 0 11} {b 17 22} {ihl 24 39} {ih 40 47} {ng 49 67} {sil 68 81}]}
{80 [{sil 0 12} {b 16 21} {ihl 23 39} {ih 40 48} {ng 49 66} {sil 68 76}]}
{91 [{sil 0 14} {b 16 22} {ihl 23 37} {ih 38 47} {ng 48 66} {sil 67 121}]}
{105 [{sil 0 17} {b 17 22} {ihl 23 38} {ih 39 48} {ng 49 67} {sil 68 126}]}
{125 [{sil 3 22} {b 18 22} {ihl 23 39} {ih 40 49} {ng 50 66} {sil 67 123}]}

ruleAligned = [{{b 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ihl 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{ih 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{ng 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {b 17 22} {ihl 24 39} {ih 40 47} {ng 49 67} {sil 68 68}]}
{80 [{sil 0 0} {b 16 21} {ihl 23 39} {ih 40 48} {ng 49 66} {sil 68 68}]}
{91 [{sil 0 0} {b 16 22} {ihl 23 37} {ih 38 47} {ng 48 66} {sil 67 67}]}
{105 [{sil 0 0} {b 17 22} {ihl 23 38} {ih 39 48} {ng 49 67} {sil 68 68}]}
{125 [{sil 3 3} {b 18 22} {ihl 23 39} {ih 40 49} {ng 50 66} {sil 67 67}]}

timeAligned = [{{b 17 22} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ihl 23 39} [{1 2} {2 2} {3 2} {4 2} {0 2}]} {{ih 40 48} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{ng 49 66} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 21
i, iTime, newITime, timeStartFrom = 2 1 2 37
i, iTime, newITime, timeStartFrom = 3 2 3 47
combinedVerdict    = [{b 0} {ihl 0} {ih 0} {ng 0}]
ruleAlignedVerdict = [{b 0} {ihl 0} {ih 0} {ng 0}]

score->
+1 for b
+1 for ihl
+1 for ih
+1 for ng
score<-: 9
testPronounce b good ih good l good ih good ng good
publish->
phonsToAlphas = [{[b] b} {[ih] i} {[l] ll} {[ih] i} {[ng] ng}]
getVerdict<-:new {b [b] 0}
getVerdict<-:new {i [ih] 0}
getVerdict<-:new {ll [l] 0}
getVerdict<-:new {i [ih] 0}
getVerdict<-:new {ng [ng] 0}
lettersVerdicts = [{b [b] 0} {i [ih] 0} {ll [l] 0} {i [ih] 0} {ng [ng] 0}]
publish<-
Total: 408.055882ms
{
  "results": [
    {
      "letters": "b",
      "phonemes": "b",
      "verdict": "good"
    },
    {
      "letters": "i",
      "phonemes": "ɪ",
      "verdict": "good"
    },
    {
      "letters": "ll",
      "phonemes": "l",
      "verdict": "good"
    },
    {
      "letters": "i",
      "phonemes": "ɪ",
      "verdict": "good"
    },
    {
      "letters": "ng",
      "phonemes": "ŋ",
      "verdict": "good"
    }
  ],
  "err": null
}
