
 length of audio =  2.026312



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.68 1.1400000000000001 1.8200000000000003

 start3, duration3, end3 =  1.22 0.54 1.76

 Initial start, duration, end =  0.5800000000000001 1.2400000000000002 1.8200000000000003

 Cut at: start, duration =  0.5800000000000001 1.4263119999999998     guard_end =  2.006312 

Running scan for frate = 125
Considering guard ch with value 2.4 for l ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 4.8 for ow ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 2.4000000000000004 for n ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 125 public <lonely> = (((sil [((m <any_Cx_l_m_p>) | (<any_Cx_l_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]) | (sil p (sil [((m <any_Cx_l_m_p>) | (<any_Cx_l_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]))) (([(<any_Cx_ch_p_m_l> ch)] | [(ch <any_Cx_ch_p_m_l>)]) (l | ((<any_Cx_ch_p_m_l> ch) | (ch <any_Cx_ch_p_m_l>)))) ((([(<any_Vx_ch_ch_ow_noSlide> ch)] | [(ch <any_Vx_ch_ch_ow_noSlide>)]) ([(<any_Cx_ch_ch_n_l> ch)] | [(ch <any_Cx_ch_ch_n_l>)])) (ow | ((<any_Vx_ch_ch_ow_noSlide> ch) | (ch <any_Vx_ch_ch_ow_noSlide>)))) (([(<any_Cx_ch_ch_n_l> ch)] | [(ch <any_Cx_ch_ch_n_l>)]) (n | ((<any_Cx_ch_ch_n_l> ch) | (ch <any_Cx_ch_ch_n_l>)))) (([(<any_Cx_sh_ch_l_n> sh)] | [(sh <any_Cx_sh_ch_l_n>)]) (l | ((<any_Cx_sh_ch_l_n> sh) | (sh <any_Cx_sh_ch_l_n>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_iy_hh> hh)] | [(hh <any_Cx_sh_iy_hh>)]) ([(<any_Vx_sh_iy_hh> hh)] | [(hh <any_Vx_sh_iy_hh>)]) sil))
Running scan for frate = 105
Considering guard ch with value 2.4 for l ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 4.8 for ow ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 2.4000000000000004 for n ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 105 public <lonely> = (((sil [((w <any_Cx_l_w_p>) | (<any_Cx_l_w_p> w))] [((w <any_vowel_noSlide>) | (<any_vowel_noSlide> w))]) | (sil p (sil [((w <any_Cx_l_w_p>) | (<any_Cx_l_w_p> w))] [((w <any_vowel_noSlide>) | (<any_vowel_noSlide> w))]))) (([(<any_Cx_ch_p_w_l> ch)] | [(ch <any_Cx_ch_p_w_l>)]) (l | ((<any_Cx_ch_p_w_l> ch) | (ch <any_Cx_ch_p_w_l>)))) ((([(<any_Vx_ch_ch_ow_noSlide> ch)] | [(ch <any_Vx_ch_ch_ow_noSlide>)]) ([(<any_Cx_ch_ch_n_l> ch)] | [(ch <any_Cx_ch_ch_n_l>)])) (ow | ((<any_Vx_ch_ch_ow_noSlide> ch) | (ch <any_Vx_ch_ch_ow_noSlide>)))) (([(<any_Cx_ch_ch_n_l> ch)] | [(ch <any_Cx_ch_ch_n_l>)]) (n | ((<any_Cx_ch_ch_n_l> ch) | (ch <any_Cx_ch_ch_n_l>)))) (([(<any_Cx_sh_ch_l_n> sh)] | [(sh <any_Cx_sh_ch_l_n>)]) (l | ((<any_Cx_sh_ch_l_n> sh) | (sh <any_Cx_sh_ch_l_n>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_iy_f> f)] | [(f <any_Cx_sh_iy_f>)]) ([(<any_Vx_sh_iy_f> f)] | [(f <any_Vx_sh_iy_f>)]) sil))
Running scan for frate = 91
Considering guard ch with value 2.4 for l ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 4.8 for ow ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 2.4000000000000004 for n ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 91 public <lonely> = (((sil [((m <any_Cx_l_m_p>) | (<any_Cx_l_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]) | (sil p (sil [((m <any_Cx_l_m_p>) | (<any_Cx_l_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]))) (([(<any_Cx_ch_p_m_l> ch)] | [(ch <any_Cx_ch_p_m_l>)]) (l | ((<any_Cx_ch_p_m_l> ch) | (ch <any_Cx_ch_p_m_l>)))) ((([(<any_Vx_ch_ch_ow_noSlide> ch)] | [(ch <any_Vx_ch_ch_ow_noSlide>)]) ([(<any_Cx_ch_ch_n_l> ch)] | [(ch <any_Cx_ch_ch_n_l>)])) (ow | ((<any_Vx_ch_ch_ow_noSlide> ch) | (ch <any_Vx_ch_ch_ow_noSlide>)))) (([(<any_Cx_ch_ch_n_l> ch)] | [(ch <any_Cx_ch_ch_n_l>)]) (n | ((<any_Cx_ch_ch_n_l> ch) | (ch <any_Cx_ch_ch_n_l>)))) (([(<any_Cx_sh_ch_l_n> sh)] | [(sh <any_Cx_sh_ch_l_n>)]) (l | ((<any_Cx_sh_ch_l_n> sh) | (sh <any_Cx_sh_ch_l_n>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_iy_hh> hh)] | [(hh <any_Cx_sh_iy_hh>)]) ([(<any_Vx_sh_iy_hh> hh)] | [(hh <any_Vx_sh_iy_hh>)]) sil))
Running scan for frate = 80
Considering guard ch with value 2.4 for l ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 4.8 for ow ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 2.4000000000000004 for n ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 80 public <lonely> = (((sil [((r <any_Cx_l_r_p>) | (<any_Cx_l_r_p> r))] [((r <any_vowel_noSlide>) | (<any_vowel_noSlide> r))]) | (sil p (sil [((r <any_Cx_l_r_p>) | (<any_Cx_l_r_p> r))] [((r <any_vowel_noSlide>) | (<any_vowel_noSlide> r))]))) (([(<any_Cx_ch_p_r_l> ch)] | [(ch <any_Cx_ch_p_r_l>)]) (l | ((<any_Cx_ch_p_r_l> ch) | (ch <any_Cx_ch_p_r_l>)))) ((([(<any_Vx_ch_ch_ow_noSlide> ch)] | [(ch <any_Vx_ch_ch_ow_noSlide>)]) ([(<any_Cx_ch_ch_n_l> ch)] | [(ch <any_Cx_ch_ch_n_l>)])) (ow | ((<any_Vx_ch_ch_ow_noSlide> ch) | (ch <any_Vx_ch_ch_ow_noSlide>)))) (([(<any_Cx_ch_ch_n_l> ch)] | [(ch <any_Cx_ch_ch_n_l>)]) (n | ((<any_Cx_ch_ch_n_l> ch) | (ch <any_Cx_ch_ch_n_l>)))) (([(<any_Cx_sh_ch_l_n> sh)] | [(sh <any_Cx_sh_ch_l_n>)]) (l | ((<any_Cx_sh_ch_l_n> sh) | (sh <any_Cx_sh_ch_l_n>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_iy_n> n)] | [(n <any_Cx_sh_iy_n>)]) ([(<any_Vx_sh_iy_n> n)] | [(n <any_Vx_sh_iy_n>)]) sil))
Running scan for frate = 72
Considering guard ch with value 2.4 for l ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 4.8 for ow ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 2.4000000000000004 for n ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 72 public <lonely> = (((sil [((z <any_Cx_l_z_p>) | (<any_Cx_l_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_l_z_p>) | (<any_Cx_l_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ch_p_z_l> ch)] | [(ch <any_Cx_ch_p_z_l>)]) (l | ((<any_Cx_ch_p_z_l> ch) | (ch <any_Cx_ch_p_z_l>)))) ((([(<any_Vx_ch_ch_ow_noSlide> ch)] | [(ch <any_Vx_ch_ch_ow_noSlide>)]) ([(<any_Cx_ch_ch_n_l> ch)] | [(ch <any_Cx_ch_ch_n_l>)])) (ow | ((<any_Vx_ch_ch_ow_noSlide> ch) | (ch <any_Vx_ch_ch_ow_noSlide>)))) (([(<any_Cx_ch_ch_n_l> ch)] | [(ch <any_Cx_ch_ch_n_l>)]) (n | ((<any_Cx_ch_ch_n_l> ch) | (ch <any_Cx_ch_ch_n_l>)))) (([(<any_Cx_sh_ch_l_n> sh)] | [(sh <any_Cx_sh_ch_l_n>)]) (l | ((<any_Cx_sh_ch_l_n> sh) | (sh <any_Cx_sh_ch_l_n>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_iy_n> n)] | [(n <any_Cx_sh_iy_n>)]) ([(<any_Vx_sh_iy_n> n)] | [(n <any_Vx_sh_iy_n>)]) sil))

results =
{72 [{sil 0 11} {m 12 26} {ch 27 32} {ow 33 35} {n 36 51} {l 52 59} {iy 60 77} {sil 78 85}]}
{80 [{sil 0 13} {l 14 29} {ow 30 39} {n 40 57} {l 58 65} {iy 66 85} {sil 86 92}]}
{91 [{sil 0 15} {l 16 34} {ow 35 45} {n 46 65} {l 66 75} {iy 76 96} {sil 97 124}]}
{105 [{sil 0 18} {l 19 39} {ow 40 52} {n 53 75} {l 76 87} {iy 88 114} {sil 115 145}]}
{125 [{sil 3 23} {l 24 46} {ow 47 63} {n 64 90} {l 91 105} {iy 106 129} {sil 130 174}]}

normalised results =
{72 [{sil 0 11} {m 17 36} {ch 38 44} {ow 46 46} {n 50 71} {l 72 82} {iy 83 107} {sil 108 118}]}
{80 [{sil 0 13} {l 18 36} {ow 38 49} {n 50 71} {l 73 81} {iy 83 106} {sil 108 115}]}
{91 [{sil 0 15} {l 18 37} {ow 38 49} {n 51 71} {l 73 82} {iy 84 105} {sil 107 136}]}
{105 [{sil 0 18} {l 18 37} {ow 38 50} {n 50 71} {l 72 83} {iy 84 109} {sil 110 138}]}
{125 [{sil 3 23} {l 19 37} {ow 38 50} {n 51 72} {l 73 84} {iy 85 103} {sil 104 139}]}

ruleAligned = [{{l 0} [{1 1} {2 1} {3 1} {4 1}]} {{ow 0} [{1 2} {2 2} {3 2} {4 2}]} {{n 0} [{0 4} {1 3} {2 3} {3 3} {4 3}]} {{l 0} [{0 5} {1 4} {2 4} {3 4} {4 4}]} {{iy 0} [{0 6} {1 5} {2 5} {3 5} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {m 17 36} {ch 38 44} {ow 46 46} {n 50 71} {l 72 82} {iy 83 107} {sil 108 108}]}
{80 [{sil 0 0} {l 18 36} {ow 38 49} {n 50 71} {l 73 81} {iy 83 106} {sil 108 108}]}
{91 [{sil 0 0} {l 18 37} {ow 38 49} {n 51 71} {l 73 82} {iy 84 105} {sil 107 107}]}
{105 [{sil 0 0} {l 18 37} {ow 38 50} {n 50 71} {l 72 83} {iy 84 109} {sil 110 110}]}
{125 [{sil 3 3} {l 19 37} {ow 38 50} {n 51 72} {l 73 84} {iy 85 103} {sil 104 104}]}

timeAligned = [{{l 18 37} [{1 1} {2 1} {3 1} {4 1}]} {{ow 38 49} [{1 2} {2 2} {3 2} {4 2}]} {{n 50 71} [{0 4} {1 3} {3 3} {2 3} {4 3}]} {{l 73 82} [{0 5} {1 4} {2 4} {3 4} {4 4}]} {{iy 84 106} [{0 6} {1 5} {2 5} {3 5} {4 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 36
i, iTime, newITime, timeStartFrom = 2 1 2 49
i, iTime, newITime, timeStartFrom = 3 2 3 71
i, iTime, newITime, timeStartFrom = 4 3 4 81
combinedVerdict    = [{l 0} {ow 0} {n 0} {l 0} {iy 0}]
ruleAlignedVerdict = [{l 0} {ow 0} {n 0} {l 0} {iy 0}]

score->
+1 for l
+1 for ow
+1 for n
+1 for l
+1 for iy
score<-: 10
testPronounce l good ow good n good l good iy good
publish->
phonsToAlphas = [{[l] l} {[ow] o} {[n] ne} {[l] l} {[iy] y}]
getVerdict<-:new {l [l] 0}
getVerdict<-:new {o [ow] 0}
getVerdict<-:new {ne [n] 0}
getVerdict<-:new {l [l] 0}
getVerdict<-:new {y [iy] 0}
lettersVerdicts = [{l [l] 0} {o [ow] 0} {ne [n] 0} {l [l] 0} {y [iy] 0}]
publish<-
{
  "results": [
    {
      "letters": "l",
      "phonemes": "l",
      "verdict": "good"
    },
    {
      "letters": "o",
      "phonemes": "oʊ",
      "verdict": "good"
    },
    {
      "letters": "ne",
      "phonemes": "n",
      "verdict": "good"
    },
    {
      "letters": "l",
      "phonemes": "l",
      "verdict": "good"
    },
    {
      "letters": "y",
      "phonemes": "iː",
      "verdict": "good"
    }
  ],
  "err": null
}
