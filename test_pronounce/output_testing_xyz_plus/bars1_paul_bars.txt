
 length of audio =  1.787562



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.4600000000000001 1.32 1.7800000000000002

 start3, duration3, end3 =  0.62 0.6799999999999999 1.2999999999999998

 Initial start, duration, end =  0.3600000000000001 1.4200000000000002 1.7800000000000002

 Cut at: start, duration =  0.3600000000000001 1.407562     guard_end =  1.767562 

Running scan for frate = 125
Considering guard jh with value 1 for b ...
Considering guard zh with value 1 for b ...
Considering guard sh with value 1 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, jh

Considering guard ch with value 5 for aa ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ng with value 1 for z ...
candidateGuards = map[ng:true]
Picking guard, ng


frate, target rule = 125 public <bars> = (((sil [((l <any_Cx_b_l_hh>) | (<any_Cx_b_l_hh> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]) | (sil hh (sil [((l <any_Cx_b_l_hh>) | (<any_Cx_b_l_hh> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]))) (([(<any_Cx_jh_hh_l_b> jh)] | [(jh <any_Cx_jh_hh_l_b>)]) (b | ((<any_Cx_jh_hh_l_b> jh) | (jh <any_Cx_jh_hh_l_b>)))) ((([(<any_Vx_ch_jh_aa_noSlide> ch)] | [(ch <any_Vx_ch_jh_aa_noSlide>)]) ([(<any_Cx_ch_jh_z_b> ch)] | [(ch <any_Cx_ch_jh_z_b>)])) (aa | ((<any_Vx_ch_jh_aa_noSlide> ch) | (ch <any_Vx_ch_jh_aa_noSlide>)))) (([(<any_Cx_ng_ch_z> ng)] | [(ng <any_Cx_ng_ch_z>)]) (z | ((<any_Cx_ng_ch_z> ng) | (ng <any_Cx_ng_ch_z>)))) (([(<any_vowel_noSlide> s)] | [(s <any_vowel_noSlide>)]) ([(<any_Cx_ng_z_s> s)] | [(s <any_Cx_ng_z_s>)]) sil))
Running scan for frate = 105
Considering guard zh with value 1 for b ...
Considering guard sh with value 1 for b ...
Considering guard jh with value 1 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, zh

Considering guard ch with value 5 for aa ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ng with value 1 for z ...
candidateGuards = map[ng:true]
Picking guard, ng


frate, target rule = 105 public <bars> = (((sil [((d <any_Cx_b_d_hh>) | (<any_Cx_b_d_hh> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil hh (sil [((d <any_Cx_b_d_hh>) | (<any_Cx_b_d_hh> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_zh_hh_d_b> zh)] | [(zh <any_Cx_zh_hh_d_b>)]) (b | ((<any_Cx_zh_hh_d_b> zh) | (zh <any_Cx_zh_hh_d_b>)))) ((([(<any_Vx_ch_zh_aa_noSlide> ch)] | [(ch <any_Vx_ch_zh_aa_noSlide>)]) ([(<any_Cx_ch_zh_z_b> ch)] | [(ch <any_Cx_ch_zh_z_b>)])) (aa | ((<any_Vx_ch_zh_aa_noSlide> ch) | (ch <any_Vx_ch_zh_aa_noSlide>)))) (([(<any_Cx_ng_ch_z> ng)] | [(ng <any_Cx_ng_ch_z>)]) (z | ((<any_Cx_ng_ch_z> ng) | (ng <any_Cx_ng_ch_z>)))) (([(<any_vowel_noSlide> s)] | [(s <any_vowel_noSlide>)]) ([(<any_Cx_ng_z_s> s)] | [(s <any_Cx_ng_z_s>)]) sil))
Running scan for frate = 91
Considering guard jh with value 1 for b ...
Considering guard zh with value 1 for b ...
Considering guard sh with value 1 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, jh

Considering guard ch with value 5 for aa ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ng with value 1 for z ...
candidateGuards = map[ng:true]
Picking guard, ng


frate, target rule = 91 public <bars> = (((sil [((dh <any_Cx_b_dh_hh>) | (<any_Cx_b_dh_hh> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]) | (sil hh (sil [((dh <any_Cx_b_dh_hh>) | (<any_Cx_b_dh_hh> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]))) (([(<any_Cx_jh_hh_dh_b> jh)] | [(jh <any_Cx_jh_hh_dh_b>)]) (b | ((<any_Cx_jh_hh_dh_b> jh) | (jh <any_Cx_jh_hh_dh_b>)))) ((([(<any_Vx_ch_jh_aa_noSlide> ch)] | [(ch <any_Vx_ch_jh_aa_noSlide>)]) ([(<any_Cx_ch_jh_z_b> ch)] | [(ch <any_Cx_ch_jh_z_b>)])) (aa | ((<any_Vx_ch_jh_aa_noSlide> ch) | (ch <any_Vx_ch_jh_aa_noSlide>)))) (([(<any_Cx_ng_ch_z> ng)] | [(ng <any_Cx_ng_ch_z>)]) (z | ((<any_Cx_ng_ch_z> ng) | (ng <any_Cx_ng_ch_z>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_ng_z_thr> thr)] | [(thr <any_Cx_ng_z_thr>)]) sil))
Running scan for frate = 80
Considering guard zh with value 1 for b ...
Considering guard sh with value 1 for b ...
Considering guard jh with value 1 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, sh

Considering guard ch with value 5 for aa ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ng with value 1 for z ...
candidateGuards = map[ng:true]
Picking guard, ng


frate, target rule = 80 public <bars> = (((sil [((dh <any_Cx_b_dh_hh>) | (<any_Cx_b_dh_hh> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]) | (sil hh (sil [((dh <any_Cx_b_dh_hh>) | (<any_Cx_b_dh_hh> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]))) (([(<any_Cx_sh_hh_dh_b> sh)] | [(sh <any_Cx_sh_hh_dh_b>)]) (b | ((<any_Cx_sh_hh_dh_b> sh) | (sh <any_Cx_sh_hh_dh_b>)))) ((([(<any_Vx_ch_sh_aa_noSlide> ch)] | [(ch <any_Vx_ch_sh_aa_noSlide>)]) ([(<any_Cx_ch_sh_z_b> ch)] | [(ch <any_Cx_ch_sh_z_b>)])) (aa | ((<any_Vx_ch_sh_aa_noSlide> ch) | (ch <any_Vx_ch_sh_aa_noSlide>)))) (([(<any_Cx_ng_ch_z> ng)] | [(ng <any_Cx_ng_ch_z>)]) (z | ((<any_Cx_ng_ch_z> ng) | (ng <any_Cx_ng_ch_z>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_ng_z_b> b)] | [(b <any_Cx_ng_z_b>)]) sil))
Running scan for frate = 72
Considering guard zh with value 1 for b ...
Considering guard sh with value 1 for b ...
Considering guard jh with value 1 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, zh

Considering guard ch with value 5 for aa ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ng with value 1 for z ...
candidateGuards = map[ng:true]
Picking guard, ng


frate, target rule = 72 public <bars> = (((sil [((sh <any_Cx_b_sh_hh>) | (<any_Cx_b_sh_hh> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil hh (sil [((sh <any_Cx_b_sh_hh>) | (<any_Cx_b_sh_hh> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_zh_hh_sh_b> zh)] | [(zh <any_Cx_zh_hh_sh_b>)]) (b | ((<any_Cx_zh_hh_sh_b> zh) | (zh <any_Cx_zh_hh_sh_b>)))) ((([(<any_Vx_ch_zh_aa_noSlide> ch)] | [(ch <any_Vx_ch_zh_aa_noSlide>)]) ([(<any_Cx_ch_zh_z_b> ch)] | [(ch <any_Cx_ch_zh_z_b>)])) (aa | ((<any_Vx_ch_zh_aa_noSlide> ch) | (ch <any_Vx_ch_zh_aa_noSlide>)))) (([(<any_Cx_ng_ch_z> ng)] | [(ng <any_Cx_ng_ch_z>)]) (z | ((<any_Cx_ng_ch_z> ng) | (ng <any_Cx_ng_ch_z>)))) (([(<any_vowel_noSlide> s)] | [(s <any_vowel_noSlide>)]) ([(<any_Cx_ng_z_s> s)] | [(s <any_Cx_ng_z_s>)]) sil))

results =
{72 [{sil 0 21} {b 22 27} {aa 28 54} {z 55 72} {sil 73 87}]}
{80 [{sil 0 24} {b 25 31} {aa 32 61} {z 62 80} {sil 81 94}]}
{91 [{sil 0 29} {b 30 35} {aa 36 69} {z 70 91} {sil 92 122}]}
{105 [{sil 0 33} {b 34 40} {aa 41 81} {z 82 106} {sil 107 143}]}
{125 [{sil 3 43} {b 44 49} {aa 50 97} {z 98 127} {sil 128 175}]}

normalised results =
{72 [{sil 0 21} {b 31 38} {aa 39 75} {z 76 100} {sil 101 121}]}
{80 [{sil 0 24} {b 31 39} {aa 40 76} {z 78 100} {sil 101 118}]}
{91 [{sil 0 29} {b 33 38} {aa 40 76} {z 77 100} {sil 101 134}]}
{105 [{sil 0 33} {b 32 38} {aa 39 77} {z 78 101} {sil 102 136}]}
{125 [{sil 3 43} {b 35 39} {aa 40 78} {z 78 102} {sil 102 140}]}

ruleAligned = [{{b 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{aa 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{z 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {b 31 38} {aa 39 75} {z 76 100} {sil 101 101}]}
{80 [{sil 0 0} {b 31 39} {aa 40 76} {z 78 100} {sil 101 101}]}
{91 [{sil 0 0} {b 33 38} {aa 40 76} {z 77 100} {sil 101 101}]}
{105 [{sil 0 0} {b 32 38} {aa 39 77} {z 78 101} {sil 102 102}]}
{125 [{sil 3 3} {b 35 39} {aa 40 78} {z 78 102} {sil 102 102}]}

timeAligned = [{{b 32 38} [{0 1} {1 1} {3 1} {2 1} {4 1}]} {{aa 40 76} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{z 78 100} [{0 3} {1 3} {2 3} {3 3} {4 3}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 38
i, iTime, newITime, timeStartFrom = 2 1 2 75
combinedVerdict    = [{b 0} {aa 0} {z 0}]
ruleAlignedVerdict = [{b 0} {aa 0} {z 0}]

score->
+1 for b
+1 for aa
+1 for z
score<-: 8
testPronounce b good aa good z good
publish->
phonsToAlphas = [{[b] b} {[aa] ar} {[z] s}]
getVerdict<-:new {b [b] 0}
getVerdict<-:new {ar [aa] 0}
getVerdict<-:new {s [z] 0}
lettersVerdicts = [{b [b] 0} {ar [aa] 0} {s [z] 0}]
publish<-
{
  "results": [
    {
      "letters": "b",
      "phonemes": "b",
      "verdict": "good"
    },
    {
      "letters": "ar",
      "phonemes": "É‘",
      "verdict": "good"
    },
    {
      "letters": "s",
      "phonemes": "z",
      "verdict": "good"
    }
  ],
  "err": null
}
