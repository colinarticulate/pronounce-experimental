
 length of audio =  2.111562



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.62 0.7 1.3199999999999998

 start3, duration3, end3 =  0.62 0.52 1.1400000000000001

 Initial start, duration, end =  0.52 0.7999999999999998 1.3199999999999998

 Cut at: start, duration =  0.52 1.2499999999999998     guard_end =  1.7699999999999998 

Running scan for frate = 125
Considering guard l with value 3.3999999999999995 for s ...
candidateGuards = map[l:true]
Picking guard, l

Considering guard l with value 6.799999999999999 for ih ...
candidateGuards = map[l:true]
Picking guard, l

Considering guard r with value 3 for t ...
candidateGuards = map[r:true]
Picking guard, r


frate, target rule = 125 public <sit> = (((sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil p (sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_l_p_t_s> l)] | [(l <any_Cx_l_p_t_s>)]) (s | z | ((<any_Cx_l_p_t_s> l) | (l <any_Cx_l_p_t_s>)))) ((([(<any_Vx_l_l_ih_noSlide> l)] | [(l <any_Vx_l_l_ih_noSlide>)]) ([(<any_Cx_l_l_t_s> l)] | [(l <any_Cx_l_l_t_s>)])) (ih | ((<any_Vx_l_l_ih_noSlide> l) | (l <any_Vx_l_l_ih_noSlide>)))) (([(<any_Cx_r_l_t> r)] | [(r <any_Cx_r_l_t>)]) (t | ((<any_Cx_r_l_t> r) | (r <any_Cx_r_l_t>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_r_t_thr> thr)] | [(thr <any_Cx_r_t_thr>)]) sil))
Running scan for frate = 105
Considering guard l with value 3.3999999999999995 for s ...
candidateGuards = map[l:true]
Picking guard, l

Considering guard l with value 6.799999999999999 for ih ...
candidateGuards = map[l:true]
Picking guard, l

Considering guard r with value 3 for t ...
candidateGuards = map[r:true]
Picking guard, r


frate, target rule = 105 public <sit> = (((sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil p (sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_l_p_sh_s> l)] | [(l <any_Cx_l_p_sh_s>)]) (s | z | ((<any_Cx_l_p_sh_s> l) | (l <any_Cx_l_p_sh_s>)))) ((([(<any_Vx_l_l_ih_noSlide> l)] | [(l <any_Vx_l_l_ih_noSlide>)]) ([(<any_Cx_l_l_t_s> l)] | [(l <any_Cx_l_l_t_s>)])) (ih | ((<any_Vx_l_l_ih_noSlide> l) | (l <any_Vx_l_l_ih_noSlide>)))) (([(<any_Cx_r_l_t> r)] | [(r <any_Cx_r_l_t>)]) (t | ((<any_Cx_r_l_t> r) | (r <any_Cx_r_l_t>)))) (([(<any_vowel_noSlide> ch)] | [(ch <any_vowel_noSlide>)]) ([(<any_Cx_r_t_ch> ch)] | [(ch <any_Cx_r_t_ch>)]) sil))
Running scan for frate = 91
Considering guard l with value 3.3999999999999995 for s ...
candidateGuards = map[l:true]
Picking guard, l

Considering guard l with value 6.799999999999999 for ih ...
candidateGuards = map[l:true]
Picking guard, l

Considering guard r with value 3 for t ...
candidateGuards = map[r:true]
Picking guard, r


frate, target rule = 91 public <sit> = (((sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil p (sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_l_p_t_s> l)] | [(l <any_Cx_l_p_t_s>)]) (s | z | ((<any_Cx_l_p_t_s> l) | (l <any_Cx_l_p_t_s>)))) ((([(<any_Vx_l_l_ih_noSlide> l)] | [(l <any_Vx_l_l_ih_noSlide>)]) ([(<any_Cx_l_l_t_s> l)] | [(l <any_Cx_l_l_t_s>)])) (ih | ((<any_Vx_l_l_ih_noSlide> l) | (l <any_Vx_l_l_ih_noSlide>)))) (([(<any_Cx_r_l_t> r)] | [(r <any_Cx_r_l_t>)]) (t | ((<any_Cx_r_l_t> r) | (r <any_Cx_r_l_t>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_r_t_g> g)] | [(g <any_Cx_r_t_g>)]) sil))
Running scan for frate = 80
Considering guard l with value 3.3999999999999995 for s ...
candidateGuards = map[l:true]
Picking guard, l

Considering guard l with value 6.799999999999999 for ih ...
candidateGuards = map[l:true]
Picking guard, l

Considering guard r with value 3 for t ...
candidateGuards = map[r:true]
Picking guard, r


frate, target rule = 80 public <sit> = (((sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil p (sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_l_p_t_s> l)] | [(l <any_Cx_l_p_t_s>)]) (s | z | ((<any_Cx_l_p_t_s> l) | (l <any_Cx_l_p_t_s>)))) ((([(<any_Vx_l_l_ih_noSlide> l)] | [(l <any_Vx_l_l_ih_noSlide>)]) ([(<any_Cx_l_l_t_s> l)] | [(l <any_Cx_l_l_t_s>)])) (ih | ((<any_Vx_l_l_ih_noSlide> l) | (l <any_Vx_l_l_ih_noSlide>)))) (([(<any_Cx_r_l_t> r)] | [(r <any_Cx_r_l_t>)]) (t | ((<any_Cx_r_l_t> r) | (r <any_Cx_r_l_t>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_r_t_thr> thr)] | [(thr <any_Cx_r_t_thr>)]) sil))
Running scan for frate = 72
Considering guard l with value 3.3999999999999995 for s ...
candidateGuards = map[l:true]
Picking guard, l

Considering guard l with value 6.799999999999999 for ih ...
candidateGuards = map[l:true]
Picking guard, l

Considering guard r with value 3 for t ...
candidateGuards = map[r:true]
Picking guard, r


frate, target rule = 72 public <sit> = (((sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil p (sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_l_p_t_s> l)] | [(l <any_Cx_l_p_t_s>)]) (s | z | ((<any_Cx_l_p_t_s> l) | (l <any_Cx_l_p_t_s>)))) ((([(<any_Vx_l_l_ih_noSlide> l)] | [(l <any_Vx_l_l_ih_noSlide>)]) ([(<any_Cx_l_l_t_s> l)] | [(l <any_Cx_l_l_t_s>)])) (ih | ((<any_Vx_l_l_ih_noSlide> l) | (l <any_Vx_l_l_ih_noSlide>)))) (([(<any_Cx_r_l_t> r)] | [(r <any_Cx_r_l_t>)]) (t | ((<any_Cx_r_l_t> r) | (r <any_Cx_r_l_t>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_r_t_g> g)] | [(g <any_Cx_r_t_g>)]) sil))

results =
{72 [{sil 0 13} {z 14 21} {l 22 24} {iy 25 34} {t 35 50} {sil 51 64}]}
{80 [{sil 0 15} {z 16 23} {l 24 26} {iy 27 38} {t 39 55} {sil 56 69}]}
{91 [{sil 0 17} {z 18 27} {l 28 30} {iy 31 44} {t 45 72} {sil 73 108}]}
{105 [{sil 0 20} {z 21 32} {l 33 35} {iy 36 54} {t 55 83} {sil 84 130}]}
{125 [{sil 3 25} {z 26 39} {l 40 44} {iy 45 65} {t 66 101} {sil 102 156}]}

normalised results =
{72 [{sil 0 13} {z 19 29} {l 31 31} {iy 35 47} {t 49 69} {sil 71 89}]}
{80 [{sil 0 15} {z 20 29} {l 30 30} {iy 34 48} {t 49 69} {sil 70 86}]}
{91 [{sil 0 17} {z 20 30} {l 31 31} {iy 34 48} {t 49 79} {sil 80 119}]}
{105 [{sil 0 20} {z 20 30} {l 31 31} {iy 34 51} {t 52 79} {sil 80 124}]}
{125 [{sil 3 25} {z 21 31} {l 32 35} {iy 36 52} {t 53 81} {sil 82 125}]}

ruleAligned = [{{s 2} []} {{z 3} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ih 2} []} {{iy 3} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{t 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {z 19 29} {l 31 31} {iy 35 47} {t 49 69} {sil 71 71}]}
{80 [{sil 0 0} {z 20 29} {l 30 30} {iy 34 48} {t 49 69} {sil 70 70}]}
{91 [{sil 0 0} {z 20 30} {l 31 31} {iy 34 48} {t 49 79} {sil 80 80}]}
{105 [{sil 0 0} {z 20 30} {l 31 31} {iy 34 51} {t 52 79} {sil 80 80}]}
{125 [{sil 3 3} {z 21 31} {l 32 32} {iy 36 52} {t 53 81} {sil 82 82}]}

timeAligned = [{{z 20 30} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{iy 34 48} [{1 3} {2 3} {3 3} {0 3} {4 3}]} {{t 49 79} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 -1 0
i, iTime, newITime, timeStartFrom = 1 0 0 0
i, iTime, newITime, timeStartFrom = 2 0 -1 29
i, iTime, newITime, timeStartFrom = 3 0 1 29
i, iTime, newITime, timeStartFrom = 4 1 2 47
combinedVerdict    = [{s 2} {z 3} {ih 2} {iy 3} {t 0}]
ruleAlignedVerdict = [{s 2} {z 3} {ih 2} {iy 3} {t 0}]

score->
-1 for s
-1 for z
-1 for ih
-1 for iy
+1 for t
score<-: -3
bestResult = {-3 [{s 2} {z 3} {ih 2} {iy 3} {t 0}] [s ih t]}
testPronounce s missing z surprise ih missing iy surprise t good
publish->
phonsToAlphas = [{[s] s} {[ih] i} {[t] t}]
getVerdict<-:new {s [s] 2}
getVerdict<-:new {i [ih] 2}
getVerdict<-:new {t [t] 0}
lettersVerdicts = [{s [s] 2} {z [z] 3} {i [ih] 2} {iy [iy] 3} {t [t] 0}]
publish<-
{
  "results": [
    {
      "letters": "s",
      "phonemes": "s",
      "verdict": "missing"
    },
    {
      "letters": "z",
      "phonemes": "z",
      "verdict": "surprise"
    },
    {
      "letters": "i",
      "phonemes": "ɪ",
      "verdict": "missing"
    },
    {
      "letters": "iy",
      "phonemes": "iː",
      "verdict": "surprise"
    },
    {
      "letters": "t",
      "phonemes": "t",
      "verdict": "good"
    }
  ],
  "err": null
}
