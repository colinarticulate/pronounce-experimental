
 length of audio =  2.111562



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.26 1.1600000000000001 1.4200000000000002

 start3, duration3, end3 =  0.28 0.7 0.98

 Initial start, duration, end =  0.16 1.2600000000000002 1.4200000000000002

 Cut at: start, duration =  0.16 1.7100000000000002     guard_end =  1.87 

Running scan for frate = 125
Running scan for frate = 125
Running scan for frate = 125
Running scan for frate = 125
Considering guard z with value 1 for ae ...
Considering guard ng with value 1 for ae ...
Considering guard y with value 1 for ae ...
candidateGuards = map[ng:true y:true z:true]
Picking guard, z

Considering guard y with value 1 for ae ...
Considering guard z with value 1 for ae ...
Considering guard ng with value 1 for ae ...
candidateGuards = map[ng:true y:true z:true]
Picking guard, y

Considering guard z with value 1 for ax ...
Considering guard y with value 1 for ax ...
candidateGuards = map[y:true z:true]
Picking guard, y

Considering guard ng with value 2 for r ...
Considering guard y with value 2 for r ...
candidateGuards = map[ng:true y:true]
Picking guard, ng

Considering guard ng with value 2 for r ...
Considering guard y with value 2 for r ...
candidateGuards = map[ng:true y:true]
Picking guard, ng

Considering guard y with value 2 for r ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 1 for ax ...
Considering guard z with value 1 for ax ...
candidateGuards = map[y:true z:true]
Picking guard, y

Considering guard ng with value 4 for eh ...
Considering guard y with value 4 for eh ...
candidateGuards = map[ng:true y:true]
Picking guard, ng

Considering guard y with value 3 for eh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3 for eh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 2 for r ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard oy with value 2 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard w with value 2 for st ...
Considering guard ng with value 2 for st ...
candidateGuards = map[ng:true w:true]
Picking guard, w

Considering guard w with value 2 for st ...
Considering guard ng with value 2 for st ...
candidateGuards = map[ng:true w:true]
Picking guard, w

Considering guard ng with value 4 for eh ...
Considering guard y with value 4 for eh ...
candidateGuards = map[ng:true y:true]
Picking guard, ng

Considering guard oy with value 1 for t ...
Considering guard aa with value 1 for t ...
candidateGuards = map[aa:true oy:true]
Picking guard, oy

frate, target rule = 125 public <arrest> = (((sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_y_p_z_ax_r> y)] | [(y <any_Cx_y_p_z_ax_r>)]) (ax | ((<any_Cx_y_p_z_ax_r> y) | (y <any_Cx_y_p_z_ax_r>)))) (([(<any_Cx_y_y_r_ax> y)] | [(y <any_Cx_y_y_r_ax>)]) (r | ((<any_Cx_y_y_r> y) | (y <any_Cx_y_y_r>)))) ((([(<any_Vx_y_y_eh_noSlide> y)] | [(y <any_Vx_y_y_eh_noSlide>)]) ([(<any_Cx_y_y_st_r> y)] | [(y <any_Cx_y_y_st_r>)])) (eh | ((<any_Vx_y_y_eh_noSlide> y) | (y <any_Vx_y_y_eh_noSlide>)))) (([(<any_Cx_w_y_st> w)] | [(w <any_Cx_w_y_st>)]) (st | ((<any_Cx_w_y_st> w) | (w <any_Cx_w_y_st>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_w_st_thr> thr)] | [(thr <any_Cx_w_st_thr>)]) sil))
frate, target rule = 125 public <arrest> = (((sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]) | (sil p (sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]))) ((([(<any_Vx_z_p_z_ae_noSlide> z)] | [(z <any_Vx_z_p_z_ae_noSlide>)]) ([(<any_Cx_z_p_z_r> z)] | [(z <any_Cx_z_p_z_r>)])) (ae | ((<any_Vx_z_p_z_ae_noSlide> z) | (z <any_Vx_z_p_z_ae_noSlide>)))) (([(<any_Cx_ng_z_r> ng)] | [(ng <any_Cx_ng_z_r>)]) (r | ((<any_Cx_ng_z_r> ng) | (ng <any_Cx_ng_z_r>)))) ((([(<any_Vx_y_ng_eh_noSlide> y)] | [(y <any_Vx_y_ng_eh_noSlide>)]) ([(<any_Cx_y_ng_st_r> y)] | [(y <any_Cx_y_ng_st_r>)])) (eh | ((<any_Vx_y_ng_eh_noSlide> y) | (y <any_Vx_y_ng_eh_noSlide>)))) (([(<any_Cx_w_y_st> w)] | [(w <any_Cx_w_y_st>)]) (st | ((<any_Cx_w_y_st> w) | (w <any_Cx_w_y_st>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_w_st_ng> ng)] | [(ng <any_Cx_w_st_ng>)]) sil))
Considering guard oy with value 2 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

frate, target rule = 125 public <arrest> = (((sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]) | (sil p (sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]))) ((([(<any_Vx_y_p_z_ae_noSlide> y)] | [(y <any_Vx_y_p_z_ae_noSlide>)]) ([(<any_Cx_y_p_z_r> y)] | [(y <any_Cx_y_p_z_r>)])) (ae | ((<any_Vx_y_p_z_ae_noSlide> y) | (y <any_Vx_y_p_z_ae_noSlide>)))) (([(<any_Cx_ng_y_r> ng)] | [(ng <any_Cx_ng_y_r>)]) (r | ((<any_Cx_ng_y_r> ng) | (ng <any_Cx_ng_y_r>)))) ((([(<any_Vx_ng_ng_eh_noSlide> ng)] | [(ng <any_Vx_ng_ng_eh_noSlide>)]) ([(<any_Cx_ng_ng_s_r> ng)] | [(ng <any_Cx_ng_ng_s_r>)])) (eh | ((<any_Vx_ng_ng_eh_noSlide> ng) | (ng <any_Vx_ng_ng_eh_noSlide>)))) (([(<any_Cx_oy_ng_s> oy)] | [(oy <any_Cx_oy_ng_s>)]) (s | ((<any_Cx_oy_ng_s_t> oy) | (oy <any_Cx_oy_ng_s_t>)))) (([(<any_Cx_oy_oy_t_s> oy)] | [(oy <any_Cx_oy_oy_t_s>)]) (t | ((<any_Cx_oy_oy_t_s> oy) | (oy <any_Cx_oy_oy_t_s>)))) (([(<any_vowel_noSlide> ch)] | [(ch <any_vowel_noSlide>)]) ([(<any_Cx_oy_t_ch> ch)] | [(ch <any_Cx_oy_t_ch>)]) sil))
Running scan for frate = 105
Considering guard oy with value 1 for t ...
Considering guard aa with value 1 for t ...
candidateGuards = map[aa:true oy:true]
Picking guard, oy

Considering guard z with value 1 for ax ...
Considering guard y with value 1 for ax ...
candidateGuards = map[y:true z:true]
Picking guard, z

Running scan for frate = 105
Considering guard y with value 2 for r ...
candidateGuards = map[y:true]
Picking guard, y

frate, target rule = 125 public <arrest> = (((sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_y_p_z_ax_r> y)] | [(y <any_Cx_y_p_z_ax_r>)]) (ax | ((<any_Cx_y_p_z_ax_r> y) | (y <any_Cx_y_p_z_ax_r>)))) (([(<any_Cx_y_y_r_ax> y)] | [(y <any_Cx_y_y_r_ax>)]) (r | ((<any_Cx_y_y_r> y) | (y <any_Cx_y_y_r>)))) ((([(<any_Vx_ng_y_eh_noSlide> ng)] | [(ng <any_Vx_ng_y_eh_noSlide>)]) ([(<any_Cx_ng_y_s_r> ng)] | [(ng <any_Cx_ng_y_s_r>)])) (eh | ((<any_Vx_ng_y_eh_noSlide> ng) | (ng <any_Vx_ng_y_eh_noSlide>)))) (([(<any_Cx_oy_ng_s> oy)] | [(oy <any_Cx_oy_ng_s>)]) (s | ((<any_Cx_oy_ng_s_t> oy) | (oy <any_Cx_oy_ng_s_t>)))) (([(<any_Cx_oy_oy_t_s> oy)] | [(oy <any_Cx_oy_oy_t_s>)]) (t | ((<any_Cx_oy_oy_t_s> oy) | (oy <any_Cx_oy_oy_t_s>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_oy_t_thr> thr)] | [(thr <any_Cx_oy_t_thr>)]) sil))
Running scan for frate = 105
Considering guard ng with value 1 for ae ...
Considering guard z with value 1 for ae ...
Considering guard y with value 1 for ae ...
candidateGuards = map[ng:true y:true z:true]
Picking guard, ng

Considering guard y with value 3 for eh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard z with value 1 for ae ...
Considering guard y with value 1 for ae ...
Considering guard ng with value 1 for ae ...
candidateGuards = map[ng:true y:true z:true]
Picking guard, z

Considering guard w with value 2 for st ...
Considering guard ng with value 2 for st ...
candidateGuards = map[ng:true w:true]
Picking guard, w

Considering guard y with value 2 for r ...
Considering guard ng with value 2 for r ...
candidateGuards = map[ng:true y:true]
Picking guard, ng

Considering guard y with value 3 for eh ...
candidateGuards = map[y:true]
Picking guard, y

frate, target rule = 105 public <arrest> = (((sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_z_p_z_ax_r> z)] | [(z <any_Cx_z_p_z_ax_r>)]) (ax | ((<any_Cx_z_p_z_ax_r> z) | (z <any_Cx_z_p_z_ax_r>)))) (([(<any_Cx_y_z_r_ax> y)] | [(y <any_Cx_y_z_r_ax>)]) (r | ((<any_Cx_y_z_r> y) | (y <any_Cx_y_z_r>)))) ((([(<any_Vx_y_y_eh_noSlide> y)] | [(y <any_Vx_y_y_eh_noSlide>)]) ([(<any_Cx_y_y_st_r> y)] | [(y <any_Cx_y_y_st_r>)])) (eh | ((<any_Vx_y_y_eh_noSlide> y) | (y <any_Vx_y_y_eh_noSlide>)))) (([(<any_Cx_w_y_st> w)] | [(w <any_Cx_w_y_st>)]) (st | ((<any_Cx_w_y_st> w) | (w <any_Cx_w_y_st>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_w_st_p> p)] | [(p <any_Cx_w_st_p>)]) sil))
Considering guard y with value 2 for r ...
Considering guard ng with value 2 for r ...
candidateGuards = map[ng:true y:true]
Picking guard, y

Considering guard ng with value 2 for st ...
Considering guard w with value 2 for st ...
candidateGuards = map[ng:true w:true]
Picking guard, ng

Running scan for frate = 91
Considering guard ng with value 4 for eh ...
Considering guard y with value 4 for eh ...
candidateGuards = map[ng:true y:true]
Picking guard, ng

Considering guard z with value 1 for ax ...
Considering guard y with value 1 for ax ...
candidateGuards = map[y:true z:true]
Picking guard, z

frate, target rule = 105 public <arrest> = (((sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]) | (sil p (sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]))) ((([(<any_Vx_ng_p_z_ae_noSlide> ng)] | [(ng <any_Vx_ng_p_z_ae_noSlide>)]) ([(<any_Cx_ng_p_z_r> ng)] | [(ng <any_Cx_ng_p_z_r>)])) (ae | ((<any_Vx_ng_p_z_ae_noSlide> ng) | (ng <any_Vx_ng_p_z_ae_noSlide>)))) (([(<any_Cx_ng_ng_r> ng)] | [(ng <any_Cx_ng_ng_r>)]) (r | ((<any_Cx_ng_ng_r> ng) | (ng <any_Cx_ng_ng_r>)))) ((([(<any_Vx_y_ng_eh_noSlide> y)] | [(y <any_Vx_y_ng_eh_noSlide>)]) ([(<any_Cx_y_ng_st_r> y)] | [(y <any_Cx_y_ng_st_r>)])) (eh | ((<any_Vx_y_ng_eh_noSlide> y) | (y <any_Vx_y_ng_eh_noSlide>)))) (([(<any_Cx_ng_y_st> ng)] | [(ng <any_Cx_ng_y_st>)]) (st | ((<any_Cx_ng_y_st> ng) | (ng <any_Cx_ng_y_st>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_ng_st_ng> ng)] | [(ng <any_Cx_ng_st_ng>)]) sil))
Considering guard y with value 2 for r ...
candidateGuards = map[y:true]
Picking guard, y

Running scan for frate = 91
Considering guard oy with value 2 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard aa with value 1 for t ...
Considering guard oy with value 1 for t ...
candidateGuards = map[aa:true oy:true]
Picking guard, aa

Running scan for frate = 105
Considering guard y with value 1 for ae ...
Considering guard ng with value 1 for ae ...
Considering guard z with value 1 for ae ...
candidateGuards = map[ng:true y:true z:true]
Picking guard, y

frate, target rule = 105 public <arrest> = (((sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]) | (sil p (sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]))) ((([(<any_Vx_z_p_z_ae_noSlide> z)] | [(z <any_Vx_z_p_z_ae_noSlide>)]) ([(<any_Cx_z_p_z_r> z)] | [(z <any_Cx_z_p_z_r>)])) (ae | ((<any_Vx_z_p_z_ae_noSlide> z) | (z <any_Vx_z_p_z_ae_noSlide>)))) (([(<any_Cx_y_z_r> y)] | [(y <any_Cx_y_z_r>)]) (r | ((<any_Cx_y_z_r> y) | (y <any_Cx_y_z_r>)))) ((([(<any_Vx_ng_y_eh_noSlide> ng)] | [(ng <any_Vx_ng_y_eh_noSlide>)]) ([(<any_Cx_ng_y_s_r> ng)] | [(ng <any_Cx_ng_y_s_r>)])) (eh | ((<any_Vx_ng_y_eh_noSlide> ng) | (ng <any_Vx_ng_y_eh_noSlide>)))) (([(<any_Cx_oy_ng_s> oy)] | [(oy <any_Cx_oy_ng_s>)]) (s | ((<any_Cx_oy_ng_s_t> oy) | (oy <any_Cx_oy_ng_s_t>)))) (([(<any_Cx_aa_oy_t_s> aa)] | [(aa <any_Cx_aa_oy_t_s>)]) (t | ((<any_Cx_aa_oy_t_s> aa) | (aa <any_Cx_aa_oy_t_s>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_aa_t_p> p)] | [(p <any_Cx_aa_t_p>)]) sil))
Considering guard y with value 1 for ax ...
Considering guard z with value 1 for ax ...
candidateGuards = map[y:true z:true]
Picking guard, y

Considering guard y with value 2 for r ...
Considering guard ng with value 2 for r ...
candidateGuards = map[ng:true y:true]
Picking guard, ng

Considering guard y with value 2 for r ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3 for eh ...
candidateGuards = map[y:true]
Picking guard, y

Running scan for frate = 91
Considering guard w with value 2 for st ...
Considering guard ng with value 2 for st ...
candidateGuards = map[ng:true w:true]
Picking guard, w

Considering guard y with value 4 for eh ...
Considering guard ng with value 4 for eh ...
candidateGuards = map[ng:true y:true]
Picking guard, y

Considering guard y with value 1 for ae ...
Considering guard ng with value 1 for ae ...
Considering guard z with value 1 for ae ...
candidateGuards = map[ng:true y:true z:true]
Picking guard, y

Considering guard oy with value 2 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard y with value 2 for r ...
Considering guard ng with value 2 for r ...
candidateGuards = map[ng:true y:true]
Picking guard, y

frate, target rule = 91 public <arrest> = (((sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]) | (sil p (sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]))) ((([(<any_Vx_y_p_z_ae_noSlide> y)] | [(y <any_Vx_y_p_z_ae_noSlide>)]) ([(<any_Cx_y_p_z_r> y)] | [(y <any_Cx_y_p_z_r>)])) (ae | ((<any_Vx_y_p_z_ae_noSlide> y) | (y <any_Vx_y_p_z_ae_noSlide>)))) (([(<any_Cx_ng_y_r> ng)] | [(ng <any_Cx_ng_y_r>)]) (r | ((<any_Cx_ng_y_r> ng) | (ng <any_Cx_ng_y_r>)))) ((([(<any_Vx_y_ng_eh_noSlide> y)] | [(y <any_Vx_y_ng_eh_noSlide>)]) ([(<any_Cx_y_ng_st_r> y)] | [(y <any_Cx_y_ng_st_r>)])) (eh | ((<any_Vx_y_ng_eh_noSlide> y) | (y <any_Vx_y_ng_eh_noSlide>)))) (([(<any_Cx_w_y_st> w)] | [(w <any_Cx_w_y_st>)]) (st | ((<any_Cx_w_y_st> w) | (w <any_Cx_w_y_st>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_w_st_f> f)] | [(f <any_Cx_w_st_f>)]) sil))
Considering guard y with value 4 for eh ...
Considering guard ng with value 4 for eh ...
candidateGuards = map[ng:true y:true]
Picking guard, y

Considering guard aa with value 1 for t ...
Considering guard oy with value 1 for t ...
candidateGuards = map[aa:true oy:true]
Picking guard, aa

Considering guard oy with value 2 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Running scan for frate = 80
Considering guard y with value 3 for eh ...
candidateGuards = map[y:true]
Picking guard, y

frate, target rule = 105 public <arrest> = (((sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_y_p_z_ax_r> y)] | [(y <any_Cx_y_p_z_ax_r>)]) (ax | ((<any_Cx_y_p_z_ax_r> y) | (y <any_Cx_y_p_z_ax_r>)))) (([(<any_Cx_y_y_r_ax> y)] | [(y <any_Cx_y_y_r_ax>)]) (r | ((<any_Cx_y_y_r> y) | (y <any_Cx_y_y_r>)))) ((([(<any_Vx_y_y_eh_noSlide> y)] | [(y <any_Vx_y_y_eh_noSlide>)]) ([(<any_Cx_y_y_s_r> y)] | [(y <any_Cx_y_y_s_r>)])) (eh | ((<any_Vx_y_y_eh_noSlide> y) | (y <any_Vx_y_y_eh_noSlide>)))) (([(<any_Cx_oy_y_s> oy)] | [(oy <any_Cx_oy_y_s>)]) (s | ((<any_Cx_oy_y_s_t> oy) | (oy <any_Cx_oy_y_s_t>)))) (([(<any_Cx_aa_oy_t_s> aa)] | [(aa <any_Cx_aa_oy_t_s>)]) (t | ((<any_Cx_aa_oy_t_s> aa) | (aa <any_Cx_aa_oy_t_s>)))) (([(<any_vowel_noSlide> ch)] | [(ch <any_vowel_noSlide>)]) ([(<any_Cx_aa_t_ch> ch)] | [(ch <any_Cx_aa_t_ch>)]) sil))
Considering guard ng with value 1 for ae ...
Considering guard z with value 1 for ae ...
Considering guard y with value 1 for ae ...
candidateGuards = map[ng:true y:true z:true]
Picking guard, ng

Running scan for frate = 91
Considering guard y with value 2 for r ...
Considering guard ng with value 2 for r ...
candidateGuards = map[ng:true y:true]
Picking guard, y

Considering guard y with value 3 for eh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 1 for ax ...
Considering guard z with value 1 for ax ...
candidateGuards = map[y:true z:true]
Picking guard, y

Considering guard oy with value 1 for t ...
Considering guard aa with value 1 for t ...
candidateGuards = map[aa:true oy:true]
Picking guard, oy

Considering guard ng with value 2 for st ...
Considering guard w with value 2 for st ...
candidateGuards = map[ng:true w:true]
Picking guard, ng

Considering guard y with value 2 for r ...
candidateGuards = map[y:true]
Picking guard, y

frate, target rule = 91 public <arrest> = (((sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]) | (sil p (sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]))) ((([(<any_Vx_y_p_z_ae_noSlide> y)] | [(y <any_Vx_y_p_z_ae_noSlide>)]) ([(<any_Cx_y_p_z_r> y)] | [(y <any_Cx_y_p_z_r>)])) (ae | ((<any_Vx_y_p_z_ae_noSlide> y) | (y <any_Vx_y_p_z_ae_noSlide>)))) (([(<any_Cx_y_y_r> y)] | [(y <any_Cx_y_y_r>)]) (r | ((<any_Cx_y_y_r> y) | (y <any_Cx_y_y_r>)))) ((([(<any_Vx_y_y_eh_noSlide> y)] | [(y <any_Vx_y_y_eh_noSlide>)]) ([(<any_Cx_y_y_s_r> y)] | [(y <any_Cx_y_y_s_r>)])) (eh | ((<any_Vx_y_y_eh_noSlide> y) | (y <any_Vx_y_y_eh_noSlide>)))) (([(<any_Cx_oy_y_s> oy)] | [(oy <any_Cx_oy_y_s>)]) (s | ((<any_Cx_oy_y_s_t> oy) | (oy <any_Cx_oy_y_s_t>)))) (([(<any_Cx_oy_oy_t_s> oy)] | [(oy <any_Cx_oy_oy_t_s>)]) (t | ((<any_Cx_oy_oy_t_s> oy) | (oy <any_Cx_oy_oy_t_s>)))) (([(<any_vowel_noSlide> k)] | [(k <any_vowel_noSlide>)]) ([(<any_Cx_oy_t_k> k)] | [(k <any_Cx_oy_t_k>)]) sil))
Considering guard y with value 4 for eh ...
Considering guard ng with value 4 for eh ...
candidateGuards = map[ng:true y:true]
Picking guard, y

frate, target rule = 80 public <arrest> = (((sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]) | (sil p (sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]))) ((([(<any_Vx_ng_p_z_ae_noSlide> ng)] | [(ng <any_Vx_ng_p_z_ae_noSlide>)]) ([(<any_Cx_ng_p_z_r> ng)] | [(ng <any_Cx_ng_p_z_r>)])) (ae | ((<any_Vx_ng_p_z_ae_noSlide> ng) | (ng <any_Vx_ng_p_z_ae_noSlide>)))) (([(<any_Cx_y_ng_r> y)] | [(y <any_Cx_y_ng_r>)]) (r | ((<any_Cx_y_ng_r> y) | (y <any_Cx_y_ng_r>)))) ((([(<any_Vx_y_y_eh_noSlide> y)] | [(y <any_Vx_y_y_eh_noSlide>)]) ([(<any_Cx_y_y_st_r> y)] | [(y <any_Cx_y_y_st_r>)])) (eh | ((<any_Vx_y_y_eh_noSlide> y) | (y <any_Vx_y_y_eh_noSlide>)))) (([(<any_Cx_ng_y_st> ng)] | [(ng <any_Cx_ng_y_st>)]) (st | ((<any_Cx_ng_y_st> ng) | (ng <any_Cx_ng_y_st>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_ng_st_f> f)] | [(f <any_Cx_ng_st_f>)]) sil))
Considering guard oy with value 2 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard aa with value 1 for t ...
Considering guard oy with value 1 for t ...
candidateGuards = map[aa:true oy:true]
Picking guard, aa

Running scan for frate = 72
Running scan for frate = 80
frate, target rule = 91 public <arrest> = (((sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_y_p_z_ax_r> y)] | [(y <any_Cx_y_p_z_ax_r>)]) (ax | ((<any_Cx_y_p_z_ax_r> y) | (y <any_Cx_y_p_z_ax_r>)))) (([(<any_Cx_y_y_r_ax> y)] | [(y <any_Cx_y_y_r_ax>)]) (r | ((<any_Cx_y_y_r> y) | (y <any_Cx_y_y_r>)))) ((([(<any_Vx_y_y_eh_noSlide> y)] | [(y <any_Vx_y_y_eh_noSlide>)]) ([(<any_Cx_y_y_s_r> y)] | [(y <any_Cx_y_y_s_r>)])) (eh | ((<any_Vx_y_y_eh_noSlide> y) | (y <any_Vx_y_y_eh_noSlide>)))) (([(<any_Cx_oy_y_s> oy)] | [(oy <any_Cx_oy_y_s>)]) (s | ((<any_Cx_oy_y_s_t> oy) | (oy <any_Cx_oy_y_s_t>)))) (([(<any_Cx_aa_oy_t_s> aa)] | [(aa <any_Cx_aa_oy_t_s>)]) (t | ((<any_Cx_aa_oy_t_s> aa) | (aa <any_Cx_aa_oy_t_s>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_aa_t_d> d)] | [(d <any_Cx_aa_t_d>)]) sil))
Considering guard ng with value 1 for ae ...
Considering guard z with value 1 for ae ...
Considering guard y with value 1 for ae ...
candidateGuards = map[ng:true y:true z:true]
Picking guard, ng

Running scan for frate = 80
Considering guard ng with value 1 for ae ...
Considering guard z with value 1 for ae ...
Considering guard y with value 1 for ae ...
candidateGuards = map[ng:true y:true z:true]
Picking guard, ng

Considering guard z with value 1 for ax ...
Considering guard y with value 1 for ax ...
candidateGuards = map[y:true z:true]
Picking guard, z

Considering guard y with value 2 for r ...
Considering guard ng with value 2 for r ...
candidateGuards = map[ng:true y:true]
Picking guard, y

Considering guard ng with value 2 for r ...
Considering guard y with value 2 for r ...
candidateGuards = map[ng:true y:true]
Picking guard, ng

Considering guard y with value 2 for r ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3 for eh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 4 for eh ...
Considering guard ng with value 4 for eh ...
candidateGuards = map[ng:true y:true]
Picking guard, y

Considering guard ng with value 2 for st ...
Considering guard w with value 2 for st ...
candidateGuards = map[ng:true w:true]
Picking guard, ng

Considering guard y with value 4 for eh ...
Considering guard ng with value 4 for eh ...
candidateGuards = map[ng:true y:true]
Picking guard, y

Considering guard oy with value 2 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard oy with value 2 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard aa with value 1 for t ...
Considering guard oy with value 1 for t ...
candidateGuards = map[aa:true oy:true]
Picking guard, aa

frate, target rule = 72 public <arrest> = (((sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]) | (sil p (sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]))) ((([(<any_Vx_ng_p_z_ae_noSlide> ng)] | [(ng <any_Vx_ng_p_z_ae_noSlide>)]) ([(<any_Cx_ng_p_z_r> ng)] | [(ng <any_Cx_ng_p_z_r>)])) (ae | ((<any_Vx_ng_p_z_ae_noSlide> ng) | (ng <any_Vx_ng_p_z_ae_noSlide>)))) (([(<any_Cx_ng_ng_r> ng)] | [(ng <any_Cx_ng_ng_r>)]) (r | ((<any_Cx_ng_ng_r> ng) | (ng <any_Cx_ng_ng_r>)))) ((([(<any_Vx_y_ng_eh_noSlide> y)] | [(y <any_Vx_y_ng_eh_noSlide>)]) ([(<any_Cx_y_ng_st_r> y)] | [(y <any_Cx_y_ng_st_r>)])) (eh | ((<any_Vx_y_ng_eh_noSlide> y) | (y <any_Vx_y_ng_eh_noSlide>)))) (([(<any_Cx_ng_y_st> ng)] | [(ng <any_Cx_ng_y_st>)]) (st | ((<any_Cx_ng_y_st> ng) | (ng <any_Cx_ng_y_st>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_ng_st_p> p)] | [(p <any_Cx_ng_st_p>)]) sil))
Considering guard aa with value 1 for t ...
Considering guard oy with value 1 for t ...
candidateGuards = map[aa:true oy:true]
Picking guard, aa

frate, target rule = 80 public <arrest> = (((sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]) | (sil p (sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]))) ((([(<any_Vx_ng_p_z_ae_noSlide> ng)] | [(ng <any_Vx_ng_p_z_ae_noSlide>)]) ([(<any_Cx_ng_p_z_r> ng)] | [(ng <any_Cx_ng_p_z_r>)])) (ae | ((<any_Vx_ng_p_z_ae_noSlide> ng) | (ng <any_Vx_ng_p_z_ae_noSlide>)))) (([(<any_Cx_y_ng_r> y)] | [(y <any_Cx_y_ng_r>)]) (r | ((<any_Cx_y_ng_r> y) | (y <any_Cx_y_ng_r>)))) ((([(<any_Vx_y_y_eh_noSlide> y)] | [(y <any_Vx_y_y_eh_noSlide>)]) ([(<any_Cx_y_y_s_r> y)] | [(y <any_Cx_y_y_s_r>)])) (eh | ((<any_Vx_y_y_eh_noSlide> y) | (y <any_Vx_y_y_eh_noSlide>)))) (([(<any_Cx_oy_y_s> oy)] | [(oy <any_Cx_oy_y_s>)]) (s | ((<any_Cx_oy_y_s_t> oy) | (oy <any_Cx_oy_y_s_t>)))) (([(<any_Cx_aa_oy_t_s> aa)] | [(aa <any_Cx_aa_oy_t_s>)]) (t | ((<any_Cx_aa_oy_t_s> aa) | (aa <any_Cx_aa_oy_t_s>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_aa_t_thr> thr)] | [(thr <any_Cx_aa_t_thr>)]) sil))
frate, target rule = 80 public <arrest> = (((sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_z_p_z_ax_r> z)] | [(z <any_Cx_z_p_z_ax_r>)]) (ax | ((<any_Cx_z_p_z_ax_r> z) | (z <any_Cx_z_p_z_ax_r>)))) (([(<any_Cx_y_z_r_ax> y)] | [(y <any_Cx_y_z_r_ax>)]) (r | ((<any_Cx_y_z_r> y) | (y <any_Cx_y_z_r>)))) ((([(<any_Vx_y_y_eh_noSlide> y)] | [(y <any_Vx_y_y_eh_noSlide>)]) ([(<any_Cx_y_y_s_r> y)] | [(y <any_Cx_y_y_s_r>)])) (eh | ((<any_Vx_y_y_eh_noSlide> y) | (y <any_Vx_y_y_eh_noSlide>)))) (([(<any_Cx_oy_y_s> oy)] | [(oy <any_Cx_oy_y_s>)]) (s | ((<any_Cx_oy_y_s_t> oy) | (oy <any_Cx_oy_y_s_t>)))) (([(<any_Cx_aa_oy_t_s> aa)] | [(aa <any_Cx_aa_oy_t_s>)]) (t | ((<any_Cx_aa_oy_t_s> aa) | (aa <any_Cx_aa_oy_t_s>)))) (([(<any_vowel_noSlide> k)] | [(k <any_vowel_noSlide>)]) ([(<any_Cx_aa_t_k> k)] | [(k <any_Cx_aa_t_k>)]) sil))
Running scan for frate = 72
Considering guard z with value 1 for ae ...
Considering guard ng with value 1 for ae ...
Considering guard y with value 1 for ae ...
candidateGuards = map[ng:true y:true z:true]
Picking guard, z

Running scan for frate = 72
Considering guard y with value 2 for r ...
Considering guard ng with value 2 for r ...
candidateGuards = map[ng:true y:true]
Picking guard, y

Considering guard z with value 1 for ax ...
Considering guard y with value 1 for ax ...
candidateGuards = map[y:true z:true]
Picking guard, z

Considering guard ng with value 4 for eh ...
Considering guard y with value 4 for eh ...
candidateGuards = map[ng:true y:true]
Picking guard, ng

Considering guard ng with value 2 for st ...
Considering guard w with value 2 for st ...
candidateGuards = map[ng:true w:true]
Picking guard, ng

Considering guard y with value 2 for r ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard oy with value 2 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard y with value 4 for eh ...
Considering guard ng with value 4 for eh ...
candidateGuards = map[ng:true y:true]
Picking guard, y

frate, target rule = 91 public <arrest> = (((sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_z_p_z_ax_r> z)] | [(z <any_Cx_z_p_z_ax_r>)]) (ax | ((<any_Cx_z_p_z_ax_r> z) | (z <any_Cx_z_p_z_ax_r>)))) (([(<any_Cx_y_z_r_ax> y)] | [(y <any_Cx_y_z_r_ax>)]) (r | ((<any_Cx_y_z_r> y) | (y <any_Cx_y_z_r>)))) ((([(<any_Vx_y_y_eh_noSlide> y)] | [(y <any_Vx_y_y_eh_noSlide>)]) ([(<any_Cx_y_y_st_r> y)] | [(y <any_Cx_y_y_st_r>)])) (eh | ((<any_Vx_y_y_eh_noSlide> y) | (y <any_Vx_y_y_eh_noSlide>)))) (([(<any_Cx_ng_y_st> ng)] | [(ng <any_Cx_ng_y_st>)]) (st | ((<any_Cx_ng_y_st> ng) | (ng <any_Cx_ng_y_st>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_ng_st_hh> hh)] | [(hh <any_Cx_ng_st_hh>)]) sil))
Considering guard oy with value 2 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard aa with value 1 for t ...
Considering guard oy with value 1 for t ...
candidateGuards = map[aa:true oy:true]
Picking guard, aa

Considering guard oy with value 1 for t ...
Considering guard aa with value 1 for t ...
candidateGuards = map[aa:true oy:true]
Picking guard, oy

frate, target rule = 72 public <arrest> = (((sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]) | (sil p (sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]))) ((([(<any_Vx_z_p_z_ae_noSlide> z)] | [(z <any_Vx_z_p_z_ae_noSlide>)]) ([(<any_Cx_z_p_z_r> z)] | [(z <any_Cx_z_p_z_r>)])) (ae | ((<any_Vx_z_p_z_ae_noSlide> z) | (z <any_Vx_z_p_z_ae_noSlide>)))) (([(<any_Cx_y_z_r> y)] | [(y <any_Cx_y_z_r>)]) (r | ((<any_Cx_y_z_r> y) | (y <any_Cx_y_z_r>)))) ((([(<any_Vx_ng_y_eh_noSlide> ng)] | [(ng <any_Vx_ng_y_eh_noSlide>)]) ([(<any_Cx_ng_y_s_r> ng)] | [(ng <any_Cx_ng_y_s_r>)])) (eh | ((<any_Vx_ng_y_eh_noSlide> ng) | (ng <any_Vx_ng_y_eh_noSlide>)))) (([(<any_Cx_oy_ng_s> oy)] | [(oy <any_Cx_oy_ng_s>)]) (s | ((<any_Cx_oy_ng_s_t> oy) | (oy <any_Cx_oy_ng_s_t>)))) (([(<any_Cx_aa_oy_t_s> aa)] | [(aa <any_Cx_aa_oy_t_s>)]) (t | ((<any_Cx_aa_oy_t_s> aa) | (aa <any_Cx_aa_oy_t_s>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_aa_t_p> p)] | [(p <any_Cx_aa_t_p>)]) sil))
Running scan for frate = 80
frate, target rule = 72 public <arrest> = (((sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_z_p_z_ax_r> z)] | [(z <any_Cx_z_p_z_ax_r>)]) (ax | ((<any_Cx_z_p_z_ax_r> z) | (z <any_Cx_z_p_z_ax_r>)))) (([(<any_Cx_y_z_r_ax> y)] | [(y <any_Cx_y_z_r_ax>)]) (r | ((<any_Cx_y_z_r> y) | (y <any_Cx_y_z_r>)))) ((([(<any_Vx_y_y_eh_noSlide> y)] | [(y <any_Vx_y_y_eh_noSlide>)]) ([(<any_Cx_y_y_s_r> y)] | [(y <any_Cx_y_y_s_r>)])) (eh | ((<any_Vx_y_y_eh_noSlide> y) | (y <any_Vx_y_y_eh_noSlide>)))) (([(<any_Cx_oy_y_s> oy)] | [(oy <any_Cx_oy_y_s>)]) (s | ((<any_Cx_oy_y_s_t> oy) | (oy <any_Cx_oy_y_s_t>)))) (([(<any_Cx_oy_oy_t_s> oy)] | [(oy <any_Cx_oy_oy_t_s>)]) (t | ((<any_Cx_oy_oy_t_s> oy) | (oy <any_Cx_oy_oy_t_s>)))) (([(<any_vowel_noSlide> ch)] | [(ch <any_vowel_noSlide>)]) ([(<any_Cx_oy_t_ch> ch)] | [(ch <any_Cx_oy_t_ch>)]) sil))
Considering guard z with value 1 for ax ...
Considering guard y with value 1 for ax ...
candidateGuards = map[y:true z:true]
Picking guard, z

Considering guard y with value 2 for r ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3 for eh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard ng with value 2 for st ...
Considering guard w with value 2 for st ...
candidateGuards = map[ng:true w:true]
Picking guard, ng

frate, target rule = 80 public <arrest> = (((sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_z_p_z_ax_r> z)] | [(z <any_Cx_z_p_z_ax_r>)]) (ax | ((<any_Cx_z_p_z_ax_r> z) | (z <any_Cx_z_p_z_ax_r>)))) (([(<any_Cx_y_z_r_ax> y)] | [(y <any_Cx_y_z_r_ax>)]) (r | ((<any_Cx_y_z_r> y) | (y <any_Cx_y_z_r>)))) ((([(<any_Vx_y_y_eh_noSlide> y)] | [(y <any_Vx_y_y_eh_noSlide>)]) ([(<any_Cx_y_y_st_r> y)] | [(y <any_Cx_y_y_st_r>)])) (eh | ((<any_Vx_y_y_eh_noSlide> y) | (y <any_Vx_y_y_eh_noSlide>)))) (([(<any_Cx_ng_y_st> ng)] | [(ng <any_Cx_ng_y_st>)]) (st | ((<any_Cx_ng_y_st> ng) | (ng <any_Cx_ng_y_st>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_ng_st_f> f)] | [(f <any_Cx_ng_st_f>)]) sil))
Running scan for frate = 72
Considering guard y with value 1 for ax ...
Considering guard z with value 1 for ax ...
candidateGuards = map[y:true z:true]
Picking guard, y

Considering guard y with value 2 for r ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3 for eh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard w with value 2 for st ...
Considering guard ng with value 2 for st ...
candidateGuards = map[ng:true w:true]
Picking guard, w

frate, target rule = 72 public <arrest> = (((sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_y_p_z_ax_r> y)] | [(y <any_Cx_y_p_z_ax_r>)]) (ax | ((<any_Cx_y_p_z_ax_r> y) | (y <any_Cx_y_p_z_ax_r>)))) (([(<any_Cx_y_y_r_ax> y)] | [(y <any_Cx_y_y_r_ax>)]) (r | ((<any_Cx_y_y_r> y) | (y <any_Cx_y_y_r>)))) ((([(<any_Vx_y_y_eh_noSlide> y)] | [(y <any_Vx_y_y_eh_noSlide>)]) ([(<any_Cx_y_y_st_r> y)] | [(y <any_Cx_y_y_st_r>)])) (eh | ((<any_Vx_y_y_eh_noSlide> y) | (y <any_Vx_y_y_eh_noSlide>)))) (([(<any_Cx_w_y_st> w)] | [(w <any_Cx_w_y_st>)]) (st | ((<any_Cx_w_y_st> w) | (w <any_Cx_w_y_st>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_w_st_n> n)] | [(n <any_Cx_w_st_n>)]) sil))

results =
{72 [{sil 0 13} {ax 14 25} {r 26 40} {eh 41 50} {st 51 86} {sil 87 101}]}
{80 [{sil 0 14} {ax 15 28} {r 29 44} {eh 45 56} {st 57 74} {z 75 95} {f 96 98} {sil 99 110}]}
{91 [{sil 0 17} {ax 18 31} {r 32 50} {eh 51 65} {st 66 110} {sil 111 150}]}
{105 [{sil 0 14} {z 15 17} {ae 18 33} {ax 34 36} {r 37 58} {eh 59 76} {st 77 97} {z 98 127} {p 128 130} {sil 131 178}]}
{125 [{sil 3 19} {z 20 22} {ae 23 41} {ax 42 44} {r 45 70} {eh 71 90} {st 91 111} {thr 112 116} {z 117 149} {sil 150 209}]}

normalised results =
{72 [{sil 0 13} {ax 19 35} {r 36 56} {eh 57 69} {st 71 119} {sil 121 140}]}
{80 [{sil 0 14} {ax 19 35} {r 36 55} {eh 56 70} {st 71 93} {z 94 119} {f 120 120} {sil 124 138}]}
{91 [{sil 0 17} {ax 20 34} {r 35 55} {eh 56 71} {st 73 121} {sil 122 165}]}
{105 [{sil 0 14} {z 14 14} {ae 17 31} {ax 32 32} {r 35 55} {eh 56 72} {st 73 92} {z 93 121} {p 122 122} {sil 125 170}]}
{125 [{sil 3 19} {z 16 16} {ae 18 33} {ax 34 34} {r 36 56} {eh 57 72} {st 73 89} {thr 90 93} {z 94 119} {sil 120 167}]}

ruleAligned = [{{ax 1} [{0 1} {1 1} {2 1}]} {{r 0} [{0 2} {1 2} {2 2} {3 4} {4 4}]} {{eh 0} [{0 3} {1 3} {2 3} {3 5} {4 5}]} {{st 0} [{0 4} {1 4} {2 4} {3 6} {4 6}]} {{z 3} [{1 5} {3 7} {4 8}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {ax 19 35} {r 36 56} {eh 57 69} {st 71 119} {sil 121 121}]}
{80 [{sil 0 0} {ax 19 35} {r 36 55} {eh 56 70} {st 71 93} {z 94 119} {f 120 120} {sil 124 124}]}
{91 [{sil 0 0} {ax 20 34} {r 35 55} {eh 56 71} {st 73 121} {sil 122 122}]}
{105 [{sil 0 0} {z 14 14} {ae 17 31} {ax 32 32} {r 35 55} {eh 56 72} {st 73 92} {z 93 121} {p 122 122} {sil 125 125}]}
{125 [{sil 3 3} {z 16 16} {ae 18 33} {ax 34 34} {r 36 56} {eh 57 72} {st 73 89} {thr 90 90} {z 94 119} {sil 120 120}]}

timeAligned = [{{ax 20 34} [{0 1} {1 1} {2 1}]} {{r 36 55} [{0 2} {1 2} {2 2} {3 4} {4 4}]} {{eh 56 71} [{1 3} {2 3} {3 5} {0 3} {4 5}]} {{st 73 93} [{0 4} {1 4} {2 4} {3 6} {4 6}]} {{z 94 119} [{1 5} {3 7} {4 8}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 34
i, iTime, newITime, timeStartFrom = 2 1 2 55
i, iTime, newITime, timeStartFrom = 3 2 3 69
i, iTime, newITime, timeStartFrom = 4 3 4 89
combinedVerdict    = [{ax 1} {r 0} {eh 0} {st 0} {z 3}]
ruleAlignedVerdict = [{ax 1} {r 0} {eh 0} {st 0} {z 3}]

score->
+1 for ax
+1 for r
+1 for eh
+1 for st
-1 for z
score<-: 3

results =
{72 [{sil 0 13} {ax 14 25} {r 26 40} {eh 41 50} {s 51 83} {t 84 86} {sil 87 101}]}
{80 [{sil 0 14} {ax 15 28} {r 29 44} {eh 45 56} {s 57 95} {t 96 98} {sil 99 110}]}
{91 [{sil 0 17} {ax 18 31} {r 32 50} {eh 51 65} {s 66 108} {t 109 111} {sil 112 150}]}
{105 [{sil 0 14} {z 15 17} {ae 18 33} {ax 34 36} {r 37 58} {eh 59 75} {s 76 127} {t 128 130} {sil 131 178}]}
{125 [{sil 3 19} {z 20 22} {ae 23 41} {ax 42 44} {r 45 70} {eh 71 90} {s 91 149} {t 150 153} {sil 154 209}]}

normalised results =
{72 [{sil 0 13} {ax 19 35} {r 36 56} {eh 57 69} {s 71 115} {t 117 117} {sil 121 140}]}
{80 [{sil 0 14} {ax 19 35} {r 36 55} {eh 56 70} {s 71 119} {t 120 120} {sil 124 138}]}
{91 [{sil 0 17} {ax 20 34} {r 35 55} {eh 56 71} {s 73 119} {t 120 120} {sil 123 165}]}
{105 [{sil 0 14} {z 14 14} {ae 17 31} {ax 32 32} {r 35 55} {eh 56 71} {s 72 121} {t 122 122} {sil 125 170}]}
{125 [{sil 3 19} {z 16 16} {ae 18 33} {ax 34 34} {r 36 56} {eh 57 72} {s 73 119} {t 120 122} {sil 123 167}]}

ruleAligned = [{{ax 1} [{0 1} {1 1} {2 1}]} {{r 0} [{0 2} {1 2} {2 2} {3 4} {4 4}]} {{eh 0} [{0 3} {1 3} {2 3} {3 5} {4 5}]} {{s 0} [{0 4} {1 4} {2 4} {3 6} {4 6}]} {{t 2} [{4 7}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {ax 19 35} {r 36 56} {eh 57 69} {s 71 115} {t 117 117} {sil 121 121}]}
{80 [{sil 0 0} {ax 19 35} {r 36 55} {eh 56 70} {s 71 119} {t 120 120} {sil 124 124}]}
{91 [{sil 0 0} {ax 20 34} {r 35 55} {eh 56 71} {s 73 119} {t 120 120} {sil 123 123}]}
{105 [{sil 0 0} {z 14 14} {ae 17 31} {ax 32 32} {r 35 55} {eh 56 71} {s 72 121} {t 122 122} {sil 125 125}]}
{125 [{sil 3 3} {z 16 16} {ae 18 33} {ax 34 34} {r 36 56} {eh 57 72} {s 73 119} {t 120 122} {sil 123 123}]}

timeAligned = [{{ax 20 34} [{0 1} {1 1} {2 1}]} {{r 36 55} [{0 2} {1 2} {2 2} {3 4} {4 4}]} {{eh 56 71} [{1 3} {2 3} {3 5} {0 3} {4 5}]} {{s 72 119} [{0 4} {1 4} {3 6} {2 4} {4 6}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 34
i, iTime, newITime, timeStartFrom = 2 1 2 55
i, iTime, newITime, timeStartFrom = 3 2 3 69
i, iTime, newITime, timeStartFrom = 4 3 -1 115
combinedVerdict    = [{ax 1} {r 0} {eh 0} {s 0} {t 2}]
ruleAlignedVerdict = [{ax 1} {r 0} {eh 0} {s 0} {t 2}]

score->
+1 for ax
+1 for r
+1 for eh
+1 for s
-1 for t
score<-: 3

results =
{72 [{sil 0 11} {ae 12 25} {r 26 40} {eh 41 50} {st 51 86} {sil 87 101}]}
{80 [{sil 0 13} {ae 14 28} {r 29 44} {eh 45 56} {st 57 74} {z 75 95} {f 96 98} {sil 99 110}]}
{91 [{sil 0 15} {ae 16 32} {r 33 50} {eh 51 65} {st 66 84} {z 85 108} {f 109 111} {sil 112 150}]}
{105 [{sil 0 18} {ae 19 37} {r 38 58} {eh 59 76} {st 77 97} {z 98 130} {ng 131 133} {sil 134 178}]}
{125 [{sil 3 23} {ae 24 44} {r 45 70} {eh 71 90} {st 91 111} {z 112 147} {ng 148 150} {sil 151 209}]}

normalised results =
{72 [{sil 0 11} {ae 17 35} {r 36 56} {eh 57 69} {st 71 119} {sil 121 140}]}
{80 [{sil 0 13} {ae 18 35} {r 36 55} {eh 56 70} {st 71 93} {z 94 119} {f 120 120} {sil 124 138}]}
{91 [{sil 0 15} {ae 18 35} {r 36 55} {eh 56 71} {st 73 92} {z 93 119} {f 120 120} {sil 123 165}]}
{105 [{sil 0 18} {ae 18 35} {r 36 55} {eh 56 72} {st 73 92} {z 93 124} {ng 125 125} {sil 128 170}]}
{125 [{sil 3 23} {ae 19 35} {r 36 56} {eh 57 72} {st 73 89} {z 90 118} {ng 118 118} {sil 121 167}]}

ruleAligned = [{{ae 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{r 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{eh 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{st 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{z 3} [{1 5} {2 5} {3 5} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {ae 17 35} {r 36 56} {eh 57 69} {st 71 119} {sil 121 121}]}
{80 [{sil 0 0} {ae 18 35} {r 36 55} {eh 56 70} {st 71 93} {z 94 119} {f 120 120} {sil 124 124}]}
{91 [{sil 0 0} {ae 18 35} {r 36 55} {eh 56 71} {st 73 92} {z 93 119} {f 120 120} {sil 123 123}]}
{105 [{sil 0 0} {ae 18 35} {r 36 55} {eh 56 72} {st 73 92} {z 93 124} {ng 125 125} {sil 128 128}]}
{125 [{sil 3 3} {ae 19 35} {r 36 56} {eh 57 72} {st 73 89} {z 90 118} {ng 118 118} {sil 121 121}]}

timeAligned = [{{ae 18 35} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{r 36 55} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{eh 56 71} [{1 3} {2 3} {3 3} {0 3} {4 3}]} {{st 73 92} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{z 93 119} [{2 5} {3 5} {4 5} {1 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 35
i, iTime, newITime, timeStartFrom = 2 1 2 55
i, iTime, newITime, timeStartFrom = 3 2 3 69
i, iTime, newITime, timeStartFrom = 4 3 4 89
combinedVerdict    = [{ae 0} {r 0} {eh 0} {st 0} {z 3}]
ruleAlignedVerdict = [{ae 0} {r 0} {eh 0} {st 0} {z 3}]

score->
+1 for ae
+1 for r
+1 for eh
+1 for st
-1 for z
score<-: 3

results =
{72 [{sil 0 11} {ae 12 25} {r 26 40} {eh 41 50} {s 51 83} {t 84 86} {sil 87 101}]}
{80 [{sil 0 13} {ae 14 28} {r 29 44} {eh 45 56} {s 57 95} {t 96 98} {sil 99 110}]}
{91 [{sil 0 15} {ae 16 32} {r 33 50} {eh 51 65} {s 66 108} {t 109 111} {sil 112 150}]}
{105 [{sil 0 18} {ae 19 37} {r 38 58} {eh 59 75} {s 76 127} {t 128 130} {sil 131 178}]}
{125 [{sil 3 23} {ae 24 44} {r 45 70} {eh 71 90} {s 91 149} {t 150 153} {sil 154 209}]}

normalised results =
{72 [{sil 0 11} {ae 17 35} {r 36 56} {eh 57 69} {s 71 115} {t 117 117} {sil 121 140}]}
{80 [{sil 0 13} {ae 18 35} {r 36 55} {eh 56 70} {s 71 119} {t 120 120} {sil 124 138}]}
{91 [{sil 0 15} {ae 18 35} {r 36 55} {eh 56 71} {s 73 119} {t 120 120} {sil 123 165}]}
{105 [{sil 0 18} {ae 18 35} {r 36 55} {eh 56 71} {s 72 121} {t 122 122} {sil 125 170}]}
{125 [{sil 3 23} {ae 19 35} {r 36 56} {eh 57 72} {s 73 119} {t 120 122} {sil 123 167}]}

ruleAligned = [{{ae 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{r 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{eh 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{s 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{t 2} [{4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {ae 17 35} {r 36 56} {eh 57 69} {s 71 115} {t 117 117} {sil 121 121}]}
{80 [{sil 0 0} {ae 18 35} {r 36 55} {eh 56 70} {s 71 119} {t 120 120} {sil 124 124}]}
{91 [{sil 0 0} {ae 18 35} {r 36 55} {eh 56 71} {s 73 119} {t 120 120} {sil 123 123}]}
{105 [{sil 0 0} {ae 18 35} {r 36 55} {eh 56 71} {s 72 121} {t 122 122} {sil 125 125}]}
{125 [{sil 3 3} {ae 19 35} {r 36 56} {eh 57 72} {s 73 119} {t 120 122} {sil 123 123}]}

timeAligned = [{{ae 18 35} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{r 36 55} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{eh 56 71} [{1 3} {2 3} {3 3} {0 3} {4 3}]} {{s 72 119} [{0 4} {1 4} {3 4} {2 4} {4 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 35
i, iTime, newITime, timeStartFrom = 2 1 2 55
i, iTime, newITime, timeStartFrom = 3 2 3 69
i, iTime, newITime, timeStartFrom = 4 3 -1 115
combinedVerdict    = [{ae 0} {r 0} {eh 0} {s 0} {t 2}]
ruleAlignedVerdict = [{ae 0} {r 0} {eh 0} {s 0} {t 2}]

score->
+1 for ae
+1 for r
+1 for eh
+1 for s
-1 for t
score<-: 3
testPronounce ax possible r good eh good st good z surprise
publish->
Total: 966.089205ms
{
  "results": [],
  "err": "Phoneme translation failure, translating phoneme st in word, arrest"
}
