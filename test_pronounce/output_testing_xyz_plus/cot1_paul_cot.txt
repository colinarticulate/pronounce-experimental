
 length of audio =  1.902625



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.52 0.6 1.12

 start3, duration3, end3 =  0.52 0.48 1

 Initial start, duration, end =  0.42000000000000004 0.7000000000000001 1.12

 Cut at: start, duration =  0.42000000000000004 1.1500000000000001     guard_end =  1.5700000000000003 

Running scan for frate = 125
Considering guard z with value 1 for k ...
Considering guard zh with value 1 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard zh with value 2 for oh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for t ...
candidateGuards = map[zh:true]
Picking guard, zh


frate, target rule = 125 public <cot> = (((sil [((d <any_Cx_k_d_b>) | (<any_Cx_k_d_b> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil b (sil [((d <any_Cx_k_d_b>) | (<any_Cx_k_d_b> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_z_b_d_k_oh> z)] | [(z <any_Cx_z_b_d_k_oh>)]) (k | ((<any_Cx_z_b_d_k_oh> z) | (z <any_Cx_z_b_d_k_oh>)))) (([(<any_Cx_zh_z_oh_k> zh)] | [(zh <any_Cx_zh_z_oh_k>)]) (oh | ((<any_Cx_zh_z_oh_t> zh) | (zh <any_Cx_zh_z_oh_t>)))) (([(<any_Cx_zh_zh_t_oh> zh)] | [(zh <any_Cx_zh_zh_t_oh>)]) (t | ((<any_Cx_zh_zh_t_oh> zh) | (zh <any_Cx_zh_zh_t_oh>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_g> g)] | [(g <any_Cx_zh_t_g>)]) sil))
Running scan for frate = 105
Considering guard z with value 1 for k ...
Considering guard zh with value 1 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard zh with value 2 for oh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for t ...
candidateGuards = map[zh:true]
Picking guard, zh


frate, target rule = 105 public <cot> = (((sil [((p <any_Cx_k_p_b>) | (<any_Cx_k_p_b> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]) | (sil b (sil [((p <any_Cx_k_p_b>) | (<any_Cx_k_p_b> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]))) (([(<any_Cx_z_b_p_k_oh> z)] | [(z <any_Cx_z_b_p_k_oh>)]) (k | ((<any_Cx_z_b_p_k_oh> z) | (z <any_Cx_z_b_p_k_oh>)))) (([(<any_Cx_zh_z_oh_k> zh)] | [(zh <any_Cx_zh_z_oh_k>)]) (oh | ((<any_Cx_zh_z_oh_t> zh) | (zh <any_Cx_zh_z_oh_t>)))) (([(<any_Cx_zh_zh_t_oh> zh)] | [(zh <any_Cx_zh_zh_t_oh>)]) (t | ((<any_Cx_zh_zh_t_oh> zh) | (zh <any_Cx_zh_zh_t_oh>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_p> p)] | [(p <any_Cx_zh_t_p>)]) sil))
Running scan for frate = 91
Considering guard zh with value 1 for k ...
Considering guard z with value 1 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for oh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for t ...
candidateGuards = map[zh:true]
Picking guard, zh


frate, target rule = 91 public <cot> = (((sil [((t <any_Cx_k_t_b>) | (<any_Cx_k_t_b> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil b (sil [((t <any_Cx_k_t_b>) | (<any_Cx_k_t_b> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_zh_b_t_k_oh> zh)] | [(zh <any_Cx_zh_b_t_k_oh>)]) (k | ((<any_Cx_zh_b_t_k_oh> zh) | (zh <any_Cx_zh_b_t_k_oh>)))) (([(<any_Cx_zh_zh_oh_k> zh)] | [(zh <any_Cx_zh_zh_oh_k>)]) (oh | ((<any_Cx_zh_zh_oh_t> zh) | (zh <any_Cx_zh_zh_oh_t>)))) (([(<any_Cx_zh_zh_t_oh> zh)] | [(zh <any_Cx_zh_zh_t_oh>)]) (t | ((<any_Cx_zh_zh_t_oh> zh) | (zh <any_Cx_zh_zh_t_oh>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_d> d)] | [(d <any_Cx_zh_t_d>)]) sil))
Running scan for frate = 80
Considering guard zh with value 1 for k ...
Considering guard z with value 1 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for oh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for t ...
candidateGuards = map[zh:true]
Picking guard, zh


frate, target rule = 80 public <cot> = (((sil [((p <any_Cx_k_p_b>) | (<any_Cx_k_p_b> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]) | (sil b (sil [((p <any_Cx_k_p_b>) | (<any_Cx_k_p_b> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]))) (([(<any_Cx_zh_b_p_k_oh> zh)] | [(zh <any_Cx_zh_b_p_k_oh>)]) (k | ((<any_Cx_zh_b_p_k_oh> zh) | (zh <any_Cx_zh_b_p_k_oh>)))) (([(<any_Cx_zh_zh_oh_k> zh)] | [(zh <any_Cx_zh_zh_oh_k>)]) (oh | ((<any_Cx_zh_zh_oh_t> zh) | (zh <any_Cx_zh_zh_oh_t>)))) (([(<any_Cx_zh_zh_t_oh> zh)] | [(zh <any_Cx_zh_zh_t_oh>)]) (t | ((<any_Cx_zh_zh_t_oh> zh) | (zh <any_Cx_zh_zh_t_oh>)))) (([(<any_vowel_noSlide> ch)] | [(ch <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_ch> ch)] | [(ch <any_Cx_zh_t_ch>)]) sil))
Running scan for frate = 72
Considering guard z with value 1 for k ...
Considering guard zh with value 1 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for oh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for t ...
candidateGuards = map[zh:true]
Picking guard, zh


frate, target rule = 72 public <cot> = (((sil [((ch <any_Cx_k_ch_b>) | (<any_Cx_k_ch_b> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil b (sil [((ch <any_Cx_k_ch_b>) | (<any_Cx_k_ch_b> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_zh_b_ch_k_oh> zh)] | [(zh <any_Cx_zh_b_ch_k_oh>)]) (k | ((<any_Cx_zh_b_ch_k_oh> zh) | (zh <any_Cx_zh_b_ch_k_oh>)))) (([(<any_Cx_zh_zh_oh_k> zh)] | [(zh <any_Cx_zh_zh_oh_k>)]) (oh | ((<any_Cx_zh_zh_oh_t> zh) | (zh <any_Cx_zh_zh_oh_t>)))) (([(<any_Cx_zh_zh_t_oh> zh)] | [(zh <any_Cx_zh_zh_t_oh>)]) (t | ((<any_Cx_zh_zh_t_oh> zh) | (zh <any_Cx_zh_zh_t_oh>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_d> d)] | [(d <any_Cx_zh_t_d>)]) sil))

results =
{72 [{sil 0 10} {k 11 18} {oh 19 35} {t 36 48} {sil 49 62}]}
{80 [{sil 0 11} {k 12 21} {oh 22 39} {t 40 53} {sil 54 67}]}
{91 [{sil 0 13} {k 14 23} {oh 24 46} {t 47 61} {sil 62 103}]}
{105 [{sil 0 16} {k 17 27} {oh 28 54} {t 55 69} {sil 70 115}]}
{125 [{sil 3 22} {k 23 34} {oh 35 65} {t 66 87} {sil 88 139}]}

normalised results =
{72 [{sil 0 10} {k 15 25} {oh 26 49} {t 50 67} {sil 68 86}]}
{80 [{sil 0 11} {k 15 26} {oh 28 49} {t 50 66} {sil 68 84}]}
{91 [{sil 0 13} {k 15 25} {oh 26 51} {t 52 67} {sil 68 113}]}
{105 [{sil 0 16} {k 16 26} {oh 27 51} {t 52 66} {sil 67 110}]}
{125 [{sil 3 22} {k 18 27} {oh 28 52} {t 53 70} {sil 70 111}]}

ruleAligned = [{{k 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{oh 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{t 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {k 15 25} {oh 26 49} {t 50 67} {sil 68 68}]}
{80 [{sil 0 0} {k 15 26} {oh 28 49} {t 50 66} {sil 68 68}]}
{91 [{sil 0 0} {k 15 25} {oh 26 51} {t 52 67} {sil 68 68}]}
{105 [{sil 0 0} {k 16 26} {oh 27 51} {t 52 66} {sil 67 67}]}
{125 [{sil 3 3} {k 18 27} {oh 28 52} {t 53 70} {sil 70 70}]}

timeAligned = [{{k 15 26} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{oh 27 51} [{0 2} {2 2} {3 2} {1 2} {4 2}]} {{t 52 67} [{0 3} {1 3} {2 3} {3 3} {4 3}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 25
i, iTime, newITime, timeStartFrom = 2 1 2 49
combinedVerdict    = [{k 0} {oh 0} {t 0}]
ruleAlignedVerdict = [{k 0} {oh 0} {t 0}]

score->
+1 for k
+1 for oh
+1 for t
score<-: 8
testPronounce k good oh good t good
publish->
phonsToAlphas = [{[k] c} {[oh] o} {[t] t}]
getVerdict<-:new {c [k] 0}
getVerdict<-:new {o [oh] 0}
getVerdict<-:new {t [t] 0}
lettersVerdicts = [{c [k] 0} {o [oh] 0} {t [t] 0}]
publish<-
{
  "results": [
    {
      "letters": "c",
      "phonemes": "k",
      "verdict": "good"
    },
    {
      "letters": "o",
      "phonemes": "É’",
      "verdict": "good"
    },
    {
      "letters": "t",
      "phonemes": "t",
      "verdict": "good"
    }
  ],
  "err": null
}
