
 length of audio =  2.778563



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  1.18 0.88 2.06

 start3, duration3, end3 =  1.3599999999999999 0.6 1.96

 Initial start, duration, end =  1.0799999999999998 0.9800000000000002 2.06

 Cut at: start, duration =  1.0799999999999998 1.4300000000000002     guard_end =  2.51 

Running scan for frate = 125
Considering guard w with value 2 for s ...
Considering guard m with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, w

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard z with value 5 for uw ...
Considering guard zh with value 5 for uw ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 125 public <school> = (((sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil p (sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_w_p_sh_s_k> w)] | [(w <any_Cx_w_p_sh_s_k>)]) (s | z | ((<any_Cx_w_p_sh_s_k> w) | (w <any_Cx_w_p_sh_s_k>)))) (([(<any_Cx_n_w_k_s> n)] | [(n <any_Cx_n_w_k_s>)]) (k | ((<any_Cx_n_w_k> n) | (n <any_Cx_n_w_k>)))) ((([(<any_Vx_z_n_uw_noSlide> z)] | [(z <any_Vx_z_n_uw_noSlide>)]) ([(<any_Cx_z_n_l_k> z)] | [(z <any_Cx_z_n_l_k>)])) (uw | ((<any_Vx_z_n_uw_noSlide> z) | (z <any_Vx_z_n_uw_noSlide>)))) (([(<any_Cx_sh_z_l> sh)] | [(sh <any_Cx_sh_z_l>)]) (l | ((<any_Cx_sh_z_l> sh) | (sh <any_Cx_sh_z_l>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_b> b)] | [(b <any_Cx_sh_l_b>)]) sil))
Running scan for frate = 105
Considering guard w with value 2 for s ...
Considering guard m with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, w

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard z with value 5 for uw ...
Considering guard zh with value 5 for uw ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 105 public <school> = (((sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil p (sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_w_p_t_s_k> w)] | [(w <any_Cx_w_p_t_s_k>)]) (s | z | ((<any_Cx_w_p_t_s_k> w) | (w <any_Cx_w_p_t_s_k>)))) (([(<any_Cx_n_w_k_s> n)] | [(n <any_Cx_n_w_k_s>)]) (k | ((<any_Cx_n_w_k> n) | (n <any_Cx_n_w_k>)))) ((([(<any_Vx_zh_n_uw_noSlide> zh)] | [(zh <any_Vx_zh_n_uw_noSlide>)]) ([(<any_Cx_zh_n_l_k> zh)] | [(zh <any_Cx_zh_n_l_k>)])) (uw | ((<any_Vx_zh_n_uw_noSlide> zh) | (zh <any_Vx_zh_n_uw_noSlide>)))) (([(<any_Cx_sh_zh_l> sh)] | [(sh <any_Cx_sh_zh_l>)]) (l | ((<any_Cx_sh_zh_l> sh) | (sh <any_Cx_sh_zh_l>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_d> d)] | [(d <any_Cx_sh_l_d>)]) sil))
Running scan for frate = 91
Considering guard m with value 2 for s ...
Considering guard w with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, m

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard z with value 5 for uw ...
Considering guard zh with value 5 for uw ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 91 public <school> = (((sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]) | (sil p (sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]))) (([(<any_Cx_m_p_th_s_k> m)] | [(m <any_Cx_m_p_th_s_k>)]) (s | z | ((<any_Cx_m_p_th_s_k> m) | (m <any_Cx_m_p_th_s_k>)))) (([(<any_Cx_n_m_k_s> n)] | [(n <any_Cx_n_m_k_s>)]) (k | ((<any_Cx_n_m_k> n) | (n <any_Cx_n_m_k>)))) ((([(<any_Vx_z_n_uw_noSlide> z)] | [(z <any_Vx_z_n_uw_noSlide>)]) ([(<any_Cx_z_n_l_k> z)] | [(z <any_Cx_z_n_l_k>)])) (uw | ((<any_Vx_z_n_uw_noSlide> z) | (z <any_Vx_z_n_uw_noSlide>)))) (([(<any_Cx_sh_z_l> sh)] | [(sh <any_Cx_sh_z_l>)]) (l | ((<any_Cx_sh_z_l> sh) | (sh <any_Cx_sh_z_l>)))) (([(<any_vowel_noSlide> w)] | [(w <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_w> w)] | [(w <any_Cx_sh_l_w>)]) sil))
Running scan for frate = 80
Considering guard m with value 2 for s ...
Considering guard w with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, m

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard zh with value 5 for uw ...
Considering guard z with value 5 for uw ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 80 public <school> = (((sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_m_p_z_s_k> m)] | [(m <any_Cx_m_p_z_s_k>)]) (s | z | ((<any_Cx_m_p_z_s_k> m) | (m <any_Cx_m_p_z_s_k>)))) (([(<any_Cx_n_m_k_s> n)] | [(n <any_Cx_n_m_k_s>)]) (k | ((<any_Cx_n_m_k> n) | (n <any_Cx_n_m_k>)))) ((([(<any_Vx_zh_n_uw_noSlide> zh)] | [(zh <any_Vx_zh_n_uw_noSlide>)]) ([(<any_Cx_zh_n_l_k> zh)] | [(zh <any_Cx_zh_n_l_k>)])) (uw | ((<any_Vx_zh_n_uw_noSlide> zh) | (zh <any_Vx_zh_n_uw_noSlide>)))) (([(<any_Cx_sh_zh_l> sh)] | [(sh <any_Cx_sh_zh_l>)]) (l | ((<any_Cx_sh_zh_l> sh) | (sh <any_Cx_sh_zh_l>)))) (([(<any_vowel_noSlide> r)] | [(r <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_r> r)] | [(r <any_Cx_sh_l_r>)]) sil))
Running scan for frate = 72
Considering guard w with value 2 for s ...
Considering guard m with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, w

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard z with value 5 for uw ...
Considering guard zh with value 5 for uw ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 72 public <school> = (((sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]) | (sil p (sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]))) (([(<any_Cx_w_p_th_s_k> w)] | [(w <any_Cx_w_p_th_s_k>)]) (s | z | ((<any_Cx_w_p_th_s_k> w) | (w <any_Cx_w_p_th_s_k>)))) (([(<any_Cx_n_w_k_s> n)] | [(n <any_Cx_n_w_k_s>)]) (k | ((<any_Cx_n_w_k> n) | (n <any_Cx_n_w_k>)))) ((([(<any_Vx_z_n_uw_noSlide> z)] | [(z <any_Vx_z_n_uw_noSlide>)]) ([(<any_Cx_z_n_l_k> z)] | [(z <any_Cx_z_n_l_k>)])) (uw | ((<any_Vx_z_n_uw_noSlide> z) | (z <any_Vx_z_n_uw_noSlide>)))) (([(<any_Cx_sh_z_l> sh)] | [(sh <any_Cx_sh_z_l>)]) (l | ((<any_Cx_sh_z_l> sh) | (sh <any_Cx_sh_z_l>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_b> b)] | [(b <any_Cx_sh_l_b>)]) sil))
Running scan for frate = 125
Considering guard m with value 2 for s ...
Considering guard w with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, m

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard n with value 3 for uwl ...
candidateGuards = map[n:true]
Picking guard, n


frate, target rule = 125 public <school> = (((sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]) | (sil p (sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]))) (([(<any_Cx_m_p_th_s_k> m)] | [(m <any_Cx_m_p_th_s_k>)]) (s | z | ((<any_Cx_m_p_th_s_k> m) | (m <any_Cx_m_p_th_s_k>)))) (([(<any_Cx_n_m_k_s> n)] | [(n <any_Cx_n_m_k_s>)]) (k | ((<any_Cx_n_m_k_uwl> n) | (n <any_Cx_n_m_k_uwl>)))) (([(<any_Cx_n_n_uwl_k> n)] | [(n <any_Cx_n_n_uwl_k>)]) (uwl | ((<any_Cx_n_n_uwl_k> n) | (n <any_Cx_n_n_uwl_k>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_n_uwl_m> m)] | [(m <any_Cx_n_uwl_m>)]) sil))
Running scan for frate = 105
Considering guard m with value 2 for s ...
Considering guard w with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, m

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard n with value 3 for uwl ...
candidateGuards = map[n:true]
Picking guard, n


frate, target rule = 105 public <school> = (((sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil p (sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_m_p_sh_s_k> m)] | [(m <any_Cx_m_p_sh_s_k>)]) (s | z | ((<any_Cx_m_p_sh_s_k> m) | (m <any_Cx_m_p_sh_s_k>)))) (([(<any_Cx_n_m_k_s> n)] | [(n <any_Cx_n_m_k_s>)]) (k | ((<any_Cx_n_m_k_uwl> n) | (n <any_Cx_n_m_k_uwl>)))) (([(<any_Cx_n_n_uwl_k> n)] | [(n <any_Cx_n_n_uwl_k>)]) (uwl | ((<any_Cx_n_n_uwl_k> n) | (n <any_Cx_n_n_uwl_k>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_n_uwl_p> p)] | [(p <any_Cx_n_uwl_p>)]) sil))
Running scan for frate = 91
Considering guard m with value 2 for s ...
Considering guard w with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, m

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard n with value 3 for uwl ...
candidateGuards = map[n:true]
Picking guard, n


frate, target rule = 91 public <school> = (((sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]) | (sil p (sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]))) (([(<any_Cx_m_p_th_s_k> m)] | [(m <any_Cx_m_p_th_s_k>)]) (s | z | ((<any_Cx_m_p_th_s_k> m) | (m <any_Cx_m_p_th_s_k>)))) (([(<any_Cx_n_m_k_s> n)] | [(n <any_Cx_n_m_k_s>)]) (k | ((<any_Cx_n_m_k_uwl> n) | (n <any_Cx_n_m_k_uwl>)))) (([(<any_Cx_n_n_uwl_k> n)] | [(n <any_Cx_n_n_uwl_k>)]) (uwl | ((<any_Cx_n_n_uwl_k> n) | (n <any_Cx_n_n_uwl_k>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_n_uwl_n> n)] | [(n <any_Cx_n_uwl_n>)]) sil))
Running scan for frate = 80
Considering guard m with value 2 for s ...
Considering guard w with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, m

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard n with value 3 for uwl ...
candidateGuards = map[n:true]
Picking guard, n


frate, target rule = 80 public <school> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_m_p_ch_s_k> m)] | [(m <any_Cx_m_p_ch_s_k>)]) (s | z | ((<any_Cx_m_p_ch_s_k> m) | (m <any_Cx_m_p_ch_s_k>)))) (([(<any_Cx_n_m_k_s> n)] | [(n <any_Cx_n_m_k_s>)]) (k | ((<any_Cx_n_m_k_uwl> n) | (n <any_Cx_n_m_k_uwl>)))) (([(<any_Cx_n_n_uwl_k> n)] | [(n <any_Cx_n_n_uwl_k>)]) (uwl | ((<any_Cx_n_n_uwl_k> n) | (n <any_Cx_n_n_uwl_k>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_n_uwl_hh> hh)] | [(hh <any_Cx_n_uwl_hh>)]) sil))
Running scan for frate = 72
Considering guard w with value 2 for s ...
Considering guard m with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, w

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard n with value 3 for uwl ...
candidateGuards = map[n:true]
Picking guard, n


frate, target rule = 72 public <school> = (((sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil p (sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_w_p_t_s_k> w)] | [(w <any_Cx_w_p_t_s_k>)]) (s | z | ((<any_Cx_w_p_t_s_k> w) | (w <any_Cx_w_p_t_s_k>)))) (([(<any_Cx_n_w_k_s> n)] | [(n <any_Cx_n_w_k_s>)]) (k | ((<any_Cx_n_w_k_uwl> n) | (n <any_Cx_n_w_k_uwl>)))) (([(<any_Cx_n_n_uwl_k> n)] | [(n <any_Cx_n_n_uwl_k>)]) (uwl | ((<any_Cx_n_n_uwl_k> n) | (n <any_Cx_n_n_uwl_k>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_n_uwl_f> f)] | [(f <any_Cx_n_uwl_f>)]) sil))

results =
{72 [{sil 0 7} {s 8 24} {k 25 28} {uw 29 31} {l 32 54} {sil 55 72}]}
{80 [{sil 0 8} {s 9 27} {k 28 31} {uw 32 34} {l 35 60} {sil 61 79}]}
{91 [{sil 0 9} {s 10 31} {k 32 35} {uw 36 63} {l 64 76} {sil 77 124}]}
{105 [{sil 0 11} {s 12 36} {k 37 40} {uw 41 74} {l 75 78} {d 79 81} {aa 82 88} {sil 89 145}]}
{125 [{sil 3 15} {s 16 44} {k 45 48} {uw 49 86} {l 87 90} {b 91 93} {uw 94 106} {sil 107 174}]}

normalised results =
{72 [{sil 0 7} {s 11 33} {k 35 39} {uw 40 40} {l 44 75} {sil 76 100}]}
{80 [{sil 0 8} {s 11 34} {k 35 39} {uw 40 40} {l 44 75} {sil 76 99}]}
{91 [{sil 0 9} {s 11 34} {k 35 38} {uw 40 69} {l 70 84} {sil 85 136}]}
{105 [{sil 0 11} {s 11 34} {k 35 38} {uw 39 70} {l 71 74} {d 75 75} {aa 78 84} {sil 85 138}]}
{125 [{sil 3 15} {s 13 35} {k 36 38} {uw 39 69} {l 70 72} {b 73 73} {uw 75 85} {sil 86 139}]}

ruleAligned = [{{s 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{k 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{uw 1} [{2 3} {3 3} {4 3}]} {{l 0} [{0 4} {1 4} {2 4} {3 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {s 11 33} {k 35 39} {uw 40 40} {l 44 75} {sil 76 76}]}
{80 [{sil 0 0} {s 11 34} {k 35 39} {uw 40 40} {l 44 75} {sil 76 76}]}
{91 [{sil 0 0} {s 11 34} {k 35 38} {uw 40 69} {l 70 84} {sil 85 85}]}
{105 [{sil 0 0} {s 11 34} {k 35 38} {uw 39 70} {l 71 74} {d 75 75} {aa 78 84} {sil 85 85}]}
{125 [{sil 3 3} {s 13 35} {k 36 38} {uw 39 69} {l 70 70} {b 73 73} {uw 75 85} {sil 86 86}]}

timeAligned = [{{s 11 34} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{k 35 38} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{uw 40 69} [{2 3} {3 3} {4 3}]} {{l 70 75} [{0 4} {1 4} {2 4} {3 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 33
i, iTime, newITime, timeStartFrom = 2 1 2 38
i, iTime, newITime, timeStartFrom = 3 2 3 69
combinedVerdict    = [{s 0} {k 0} {uw 1} {l 2}]
ruleAlignedVerdict = [{s 0} {k 0} {uw 1} {l 0}]

score->
+1 for s
+1 for k
+1 for uw
-1 for l
score<-: 2

results =
{72 [{sil 0 7} {s 8 24} {k 25 28} {l 29 46} {n 47 54} {sil 55 72}]}
{80 [{sil 0 8} {s 9 27} {k 28 31} {l 32 51} {n 52 60} {sil 61 79}]}
{91 [{sil 0 9} {s 10 31} {k 32 35} {uwl 36 59} {iy 60 69} {n 70 79} {sil 80 124}]}
{105 [{sil 0 11} {s 12 36} {k 37 40} {uwl 41 53} {uw 54 86} {p 87 90} {sil 91 145}]}
{125 [{sil 3 15} {s 16 44} {k 45 48} {uwl 49 65} {uw 66 104} {m 105 110} {sil 111 174}]}

normalised results =
{72 [{sil 0 7} {s 11 33} {k 35 39} {l 40 64} {n 65 75} {sil 76 100}]}
{80 [{sil 0 8} {s 11 34} {k 35 39} {l 40 64} {n 65 75} {sil 76 99}]}
{91 [{sil 0 9} {s 11 34} {k 35 38} {uwl 40 65} {iy 66 76} {n 77 87} {sil 88 136}]}
{105 [{sil 0 11} {s 11 34} {k 35 38} {uwl 39 50} {uw 51 82} {p 83 86} {sil 87 138}]}
{125 [{sil 3 15} {s 13 35} {k 36 38} {uwl 39 52} {uw 53 83} {m 84 88} {sil 89 139}]}

ruleAligned = [{{s 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{k 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{uwl 1} [{2 3} {3 3} {4 3}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {s 11 33} {k 35 39} {l 40 64} {n 65 75} {sil 76 76}]}
{80 [{sil 0 0} {s 11 34} {k 35 39} {l 40 64} {n 65 75} {sil 76 76}]}
{91 [{sil 0 0} {s 11 34} {k 35 38} {uwl 40 65} {iy 66 76} {n 77 87} {sil 88 88}]}
{105 [{sil 0 0} {s 11 34} {k 35 38} {uwl 39 50} {uw 51 82} {p 83 83} {sil 87 87}]}
{125 [{sil 3 3} {s 13 35} {k 36 38} {uwl 39 52} {uw 53 83} {m 84 88} {sil 89 89}]}

timeAligned = [{{s 11 34} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{k 35 38} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{uwl 40 50} [{2 3} {3 3} {4 3}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 33
i, iTime, newITime, timeStartFrom = 2 1 2 38
combinedVerdict    = [{s 0} {k 0} {uwl 1}]
ruleAlignedVerdict = [{s 0} {k 0} {uwl 1}]

score->
+1 for s
+1 for k
+1 for uwl
score<-: 8
testPronounce s good k good uwl possible
publish->
phonsToAlphas = [{[s] s} {[k] ch} {[uwl] ool}]
getVerdict<-:new {s [s] 0}
getVerdict<-:new {ch [k] 0}
getVerdict<-:new {ool [uwl] 1}
lettersVerdicts = [{s [s] 0} {ch [k] 0} {ool [uwl] 1}]
publish<-
{
  "results": [
    {
      "letters": "s",
      "phonemes": "s",
      "verdict": "good"
    },
    {
      "letters": "ch",
      "phonemes": "k",
      "verdict": "good"
    },
    {
      "letters": "ool",
      "phonemes": "uwl",
      "verdict": "possible"
    }
  ],
  "err": null
}
