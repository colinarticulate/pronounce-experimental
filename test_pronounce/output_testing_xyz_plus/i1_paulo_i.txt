
 length of audio =  2.359062



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  1.2999999999999998 0.66 1.96

 start3, duration3, end3 =  1.2999999999999998 0.6 1.9

 Initial start, duration, end =  1.1999999999999997 0.7600000000000002 1.96

 Cut at: start, duration =  1.1999999999999997 1.1390620000000005     guard_end =  2.339062 

Running scan for frate = 125
Considering guard zh with value 0.4 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 125 public <i> = (((sil [((z <any_Vx_ay_z_p_noSlide>) | (<any_Vx_ay_z_p_noSlide> z))] [((z <any_Cx_ay_z_p>) | (<any_Cx_ay_z_p> z))]) | (sil p (sil [((z <any_Vx_ay_z_p_noSlide>) | (<any_Vx_ay_z_p_noSlide> z))] [((z <any_Cx_ay_z_p>) | (<any_Cx_ay_z_p> z))]))) ((([(<any_Vx_zh_p_z_ay_noSlide> zh)] | [(zh <any_Vx_zh_p_z_ay_noSlide>)]) ([(<any_Cx_zh_p_z> zh)] | [(zh <any_Cx_zh_p_z>)])) (ay | ((<any_Vx_zh_p_z_ay_noSlide> zh) | (zh <any_Vx_zh_p_z_ay_noSlide>)))) (([(<any_Cx_zh_ay_thr> thr)] | [(thr <any_Cx_zh_ay_thr>)]) ([(<any_Vx_zh_ay_thr> thr)] | [(thr <any_Vx_zh_ay_thr>)]) sil))
Running scan for frate = 105
Considering guard zh with value 0.4 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 105 public <i> = (((sil [((z <any_Vx_ay_z_p_noSlide>) | (<any_Vx_ay_z_p_noSlide> z))] [((z <any_Cx_ay_z_p>) | (<any_Cx_ay_z_p> z))]) | (sil p (sil [((z <any_Vx_ay_z_p_noSlide>) | (<any_Vx_ay_z_p_noSlide> z))] [((z <any_Cx_ay_z_p>) | (<any_Cx_ay_z_p> z))]))) ((([(<any_Vx_zh_p_z_ay_noSlide> zh)] | [(zh <any_Vx_zh_p_z_ay_noSlide>)]) ([(<any_Cx_zh_p_z> zh)] | [(zh <any_Cx_zh_p_z>)])) (ay | ((<any_Vx_zh_p_z_ay_noSlide> zh) | (zh <any_Vx_zh_p_z_ay_noSlide>)))) (([(<any_Cx_zh_ay_m> m)] | [(m <any_Cx_zh_ay_m>)]) ([(<any_Vx_zh_ay_m> m)] | [(m <any_Vx_zh_ay_m>)]) sil))
Running scan for frate = 91
Considering guard zh with value 0.4 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 91 public <i> = (((sil [((z <any_Vx_ay_z_p_noSlide>) | (<any_Vx_ay_z_p_noSlide> z))] [((z <any_Cx_ay_z_p>) | (<any_Cx_ay_z_p> z))]) | (sil p (sil [((z <any_Vx_ay_z_p_noSlide>) | (<any_Vx_ay_z_p_noSlide> z))] [((z <any_Cx_ay_z_p>) | (<any_Cx_ay_z_p> z))]))) ((([(<any_Vx_zh_p_z_ay_noSlide> zh)] | [(zh <any_Vx_zh_p_z_ay_noSlide>)]) ([(<any_Cx_zh_p_z> zh)] | [(zh <any_Cx_zh_p_z>)])) (ay | ((<any_Vx_zh_p_z_ay_noSlide> zh) | (zh <any_Vx_zh_p_z_ay_noSlide>)))) (([(<any_Cx_zh_ay_p> p)] | [(p <any_Cx_zh_ay_p>)]) ([(<any_Vx_zh_ay_p> p)] | [(p <any_Vx_zh_ay_p>)]) sil))
Running scan for frate = 80
Considering guard zh with value 0.4 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 80 public <i> = (((sil [((z <any_Vx_ay_z_p_noSlide>) | (<any_Vx_ay_z_p_noSlide> z))] [((z <any_Cx_ay_z_p>) | (<any_Cx_ay_z_p> z))]) | (sil p (sil [((z <any_Vx_ay_z_p_noSlide>) | (<any_Vx_ay_z_p_noSlide> z))] [((z <any_Cx_ay_z_p>) | (<any_Cx_ay_z_p> z))]))) ((([(<any_Vx_zh_p_z_ay_noSlide> zh)] | [(zh <any_Vx_zh_p_z_ay_noSlide>)]) ([(<any_Cx_zh_p_z> zh)] | [(zh <any_Cx_zh_p_z>)])) (ay | ((<any_Vx_zh_p_z_ay_noSlide> zh) | (zh <any_Vx_zh_p_z_ay_noSlide>)))) (([(<any_Cx_zh_ay_m> m)] | [(m <any_Cx_zh_ay_m>)]) ([(<any_Vx_zh_ay_m> m)] | [(m <any_Vx_zh_ay_m>)]) sil))
Running scan for frate = 72
Considering guard zh with value 0.4 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 72 public <i> = (((sil [((z <any_Vx_ay_z_p_noSlide>) | (<any_Vx_ay_z_p_noSlide> z))] [((z <any_Cx_ay_z_p>) | (<any_Cx_ay_z_p> z))]) | (sil p (sil [((z <any_Vx_ay_z_p_noSlide>) | (<any_Vx_ay_z_p_noSlide> z))] [((z <any_Cx_ay_z_p>) | (<any_Cx_ay_z_p> z))]))) ((([(<any_Vx_zh_p_z_ay_noSlide> zh)] | [(zh <any_Vx_zh_p_z_ay_noSlide>)]) ([(<any_Cx_zh_p_z> zh)] | [(zh <any_Cx_zh_p_z>)])) (ay | ((<any_Vx_zh_p_z_ay_noSlide> zh) | (zh <any_Vx_zh_p_z_ay_noSlide>)))) (([(<any_Cx_zh_ay_thr> thr)] | [(thr <any_Cx_zh_ay_thr>)]) ([(<any_Vx_zh_ay_thr> thr)] | [(thr <any_Vx_zh_ay_thr>)]) sil))

results =
{72 [{sil 0 12} {ay 13 44} {sil 45 58}]}
{80 [{sil 0 14} {ay 15 49} {sil 50 62}]}
{91 [{sil 0 17} {ay 18 58} {sil 59 102}]}
{105 [{sil 0 20} {ay 21 68} {sil 69 118}]}
{125 [{sil 3 26} {ay 27 84} {sil 85 142}]}

normalised results =
{72 [{sil 0 12} {ay 18 61} {sil 63 81}]}
{80 [{sil 0 14} {ay 19 61} {sil 63 78}]}
{91 [{sil 0 17} {ay 20 64} {sil 65 112}]}
{105 [{sil 0 20} {ay 20 65} {sil 66 112}]}
{125 [{sil 3 26} {ay 22 67} {sil 68 114}]}

ruleAligned = [{{ay 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {ay 18 61} {sil 63 63}]}
{80 [{sil 0 0} {ay 19 61} {sil 63 63}]}
{91 [{sil 0 0} {ay 20 64} {sil 65 65}]}
{105 [{sil 0 0} {ay 20 65} {sil 66 66}]}
{125 [{sil 3 3} {ay 22 67} {sil 68 68}]}

timeAligned = [{{ay 20 64} [{0 1} {1 1} {2 1} {3 1} {4 1}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
combinedVerdict    = [{ay 0}]
ruleAlignedVerdict = [{ay 0}]

score->
+1 for ay
score<-: 6
testPronounce ay good
publish->
phonsToAlphas = [{[ay] i}]
getVerdict<-:new {i [ay] 0}
lettersVerdicts = [{i [ay] 0}]
publish<-
Total: 184.849906ms
{
  "results": [
    {
      "letters": "i",
      "phonemes": "ɑɪ",
      "verdict": "good"
    }
  ],
  "err": null
}
