
 length of audio =  1.902625



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.5800000000000001 0.72 1.3

 start3, duration3, end3 =  0.5800000000000001 0.58 1.1600000000000001

 Initial start, duration, end =  0.4800000000000001 0.82 1.3

 Cut at: start, duration =  0.4800000000000001 1.27     guard_end =  1.75 

Running scan for frate = 125
Considering guard y with value 3 for ow ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3 for t ...
candidateGuards = map[y:true]
Picking guard, y


frate, target rule = 125 public <oat> = (((sil [((b <any_Vx_ow_b_p_noSlide>) | (<any_Vx_ow_b_p_noSlide> b))] [((b <any_Cx_ow_b_p>) | (<any_Cx_ow_b_p> b))]) | (sil p (sil [((b <any_Vx_ow_b_p_noSlide>) | (<any_Vx_ow_b_p_noSlide> b))] [((b <any_Cx_ow_b_p>) | (<any_Cx_ow_b_p> b))]))) ((([(<any_Vx_y_p_b_ow_noSlide> y)] | [(y <any_Vx_y_p_b_ow_noSlide>)]) ([(<any_Cx_y_p_b_t> y)] | [(y <any_Cx_y_p_b_t>)])) (ow | ((<any_Vx_y_p_b_ow_noSlide> y) | (y <any_Vx_y_p_b_ow_noSlide>)))) (([(<any_Cx_y_y_t> y)] | [(y <any_Cx_y_y_t>)]) (t | ((<any_Cx_y_y_t> y) | (y <any_Cx_y_y_t>)))) (([(<any_vowel_noSlide> k)] | [(k <any_vowel_noSlide>)]) ([(<any_Cx_y_t_k> k)] | [(k <any_Cx_y_t_k>)]) sil))
Running scan for frate = 105
Considering guard y with value 3 for ow ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3 for t ...
candidateGuards = map[y:true]
Picking guard, y


frate, target rule = 105 public <oat> = (((sil [((b <any_Vx_ow_b_p_noSlide>) | (<any_Vx_ow_b_p_noSlide> b))] [((b <any_Cx_ow_b_p>) | (<any_Cx_ow_b_p> b))]) | (sil p (sil [((b <any_Vx_ow_b_p_noSlide>) | (<any_Vx_ow_b_p_noSlide> b))] [((b <any_Cx_ow_b_p>) | (<any_Cx_ow_b_p> b))]))) ((([(<any_Vx_y_p_b_ow_noSlide> y)] | [(y <any_Vx_y_p_b_ow_noSlide>)]) ([(<any_Cx_y_p_b_t> y)] | [(y <any_Cx_y_p_b_t>)])) (ow | ((<any_Vx_y_p_b_ow_noSlide> y) | (y <any_Vx_y_p_b_ow_noSlide>)))) (([(<any_Cx_y_y_t> y)] | [(y <any_Cx_y_y_t>)]) (t | ((<any_Cx_y_y_t> y) | (y <any_Cx_y_y_t>)))) (([(<any_vowel_noSlide> ch)] | [(ch <any_vowel_noSlide>)]) ([(<any_Cx_y_t_ch> ch)] | [(ch <any_Cx_y_t_ch>)]) sil))
Running scan for frate = 91
Considering guard y with value 3 for ow ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3 for t ...
candidateGuards = map[y:true]
Picking guard, y


frate, target rule = 91 public <oat> = (((sil [((b <any_Vx_ow_b_p_noSlide>) | (<any_Vx_ow_b_p_noSlide> b))] [((b <any_Cx_ow_b_p>) | (<any_Cx_ow_b_p> b))]) | (sil p (sil [((b <any_Vx_ow_b_p_noSlide>) | (<any_Vx_ow_b_p_noSlide> b))] [((b <any_Cx_ow_b_p>) | (<any_Cx_ow_b_p> b))]))) ((([(<any_Vx_y_p_b_ow_noSlide> y)] | [(y <any_Vx_y_p_b_ow_noSlide>)]) ([(<any_Cx_y_p_b_t> y)] | [(y <any_Cx_y_p_b_t>)])) (ow | ((<any_Vx_y_p_b_ow_noSlide> y) | (y <any_Vx_y_p_b_ow_noSlide>)))) (([(<any_Cx_y_y_t> y)] | [(y <any_Cx_y_y_t>)]) (t | ((<any_Cx_y_y_t> y) | (y <any_Cx_y_y_t>)))) (([(<any_vowel_noSlide> k)] | [(k <any_vowel_noSlide>)]) ([(<any_Cx_y_t_k> k)] | [(k <any_Cx_y_t_k>)]) sil))
Running scan for frate = 80
Considering guard y with value 3 for ow ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3 for t ...
candidateGuards = map[y:true]
Picking guard, y


frate, target rule = 80 public <oat> = (((sil [((hh <any_Vx_ow_hh_p_noSlide>) | (<any_Vx_ow_hh_p_noSlide> hh))] [((hh <any_Cx_ow_hh_p>) | (<any_Cx_ow_hh_p> hh))]) | (sil p (sil [((hh <any_Vx_ow_hh_p_noSlide>) | (<any_Vx_ow_hh_p_noSlide> hh))] [((hh <any_Cx_ow_hh_p>) | (<any_Cx_ow_hh_p> hh))]))) ((([(<any_Vx_y_p_hh_ow_noSlide> y)] | [(y <any_Vx_y_p_hh_ow_noSlide>)]) ([(<any_Cx_y_p_hh_t> y)] | [(y <any_Cx_y_p_hh_t>)])) (ow | ((<any_Vx_y_p_hh_ow_noSlide> y) | (y <any_Vx_y_p_hh_ow_noSlide>)))) (([(<any_Cx_y_y_t> y)] | [(y <any_Cx_y_y_t>)]) (t | ((<any_Cx_y_y_t> y) | (y <any_Cx_y_y_t>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_y_t_d> d)] | [(d <any_Cx_y_t_d>)]) sil))
Running scan for frate = 72
Considering guard y with value 3 for ow ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3 for t ...
candidateGuards = map[y:true]
Picking guard, y


frate, target rule = 72 public <oat> = (((sil [((b <any_Vx_ow_b_p_noSlide>) | (<any_Vx_ow_b_p_noSlide> b))] [((b <any_Cx_ow_b_p>) | (<any_Cx_ow_b_p> b))]) | (sil p (sil [((b <any_Vx_ow_b_p_noSlide>) | (<any_Vx_ow_b_p_noSlide> b))] [((b <any_Cx_ow_b_p>) | (<any_Cx_ow_b_p> b))]))) ((([(<any_Vx_y_p_b_ow_noSlide> y)] | [(y <any_Vx_y_p_b_ow_noSlide>)]) ([(<any_Cx_y_p_b_t> y)] | [(y <any_Cx_y_p_b_t>)])) (ow | ((<any_Vx_y_p_b_ow_noSlide> y) | (y <any_Vx_y_p_b_ow_noSlide>)))) (([(<any_Cx_y_y_t> y)] | [(y <any_Cx_y_y_t>)]) (t | ((<any_Cx_y_y_t> y) | (y <any_Cx_y_y_t>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_y_t_g> g)] | [(g <any_Cx_y_t_g>)]) sil))

results =
{72 [{sil 0 12} {ow 13 32} {t 33 53} {sil 54 64}]}
{80 [{sil 0 14} {ow 15 36} {t 37 59} {sil 60 69}]}
{91 [{sil 0 16} {ow 17 43} {t 44 70} {sil 71 110}]}
{105 [{sil 0 18} {ow 19 50} {t 51 78} {sil 79 132}]}
{125 [{sil 3 23} {ow 24 61} {t 62 96} {sil 97 154}]}

normalised results =
{72 [{sil 0 12} {ow 18 44} {t 46 74} {sil 75 89}]}
{80 [{sil 0 14} {ow 19 45} {t 46 74} {sil 75 86}]}
{91 [{sil 0 16} {ow 19 47} {t 48 77} {sil 78 121}]}
{105 [{sil 0 18} {ow 18 48} {t 49 74} {sil 75 126}]}
{125 [{sil 3 23} {ow 19 49} {t 50 77} {sil 78 123}]}

ruleAligned = [{{ow 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{t 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {ow 18 44} {t 46 74} {sil 75 75}]}
{80 [{sil 0 0} {ow 19 45} {t 46 74} {sil 75 75}]}
{91 [{sil 0 0} {ow 19 47} {t 48 77} {sil 78 78}]}
{105 [{sil 0 0} {ow 18 48} {t 49 74} {sil 75 75}]}
{125 [{sil 3 3} {ow 19 49} {t 50 77} {sil 78 78}]}

timeAligned = [{{ow 19 47} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{t 48 74} [{0 2} {1 2} {2 2} {3 2} {4 2}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 44
combinedVerdict    = [{ow 0} {t 0}]
ruleAlignedVerdict = [{ow 0} {t 0}]

score->
+1 for ow
+1 for t
score<-: 7
testPronounce ow good t good
publish->
phonsToAlphas = [{[ow] oa} {[t] t}]
getVerdict<-:new {oa [ow] 0}
getVerdict<-:new {t [t] 0}
lettersVerdicts = [{oa [ow] 0} {t [t] 0}]
publish<-
{
  "results": [
    {
      "letters": "oa",
      "phonemes": "oÊŠ",
      "verdict": "good"
    },
    {
      "letters": "t",
      "phonemes": "t",
      "verdict": "good"
    }
  ],
  "err": null
}
