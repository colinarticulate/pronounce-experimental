
 length of audio =  2.042937



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.9600000000000001 1.08 2.04

 start3, duration3, end3 =  1.0799999999999998 0.52 1.5999999999999999

 Initial start, duration, end =  0.8600000000000001 1.18 2.04

 Cut at: start, duration =  0.8600000000000001 1.1629369999999997     guard_end =  2.0229369999999998 

Running scan for frate = 125
Considering guard sh with value 1 for b ...
Considering guard zh with value 1 for b ...
Considering guard jh with value 1 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, sh

Considering guard zh with value 2 for ae ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ao with value 1 for t ...
Considering guard zh with value 1 for t ...
candidateGuards = map[ao:true zh:true]
Picking guard, ao

frate, target rule = 125 public <bat> = (((sil [((dh <any_Cx_b_dh_hh>) | (<any_Cx_b_dh_hh> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]) | (sil hh (sil [((dh <any_Cx_b_dh_hh>) | (<any_Cx_b_dh_hh> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]))) (([(<any_Cx_sh_hh_dh_b> sh)] | [(sh <any_Cx_sh_hh_dh_b>)]) (b | ((<any_Cx_sh_hh_dh_b> sh) | (sh <any_Cx_sh_hh_dh_b>)))) ((([(<any_Vx_zh_sh_ae_noSlide> zh)] | [(zh <any_Vx_zh_sh_ae_noSlide>)]) ([(<any_Cx_zh_sh_t_b> zh)] | [(zh <any_Cx_zh_sh_t_b>)])) (ae | ((<any_Vx_zh_sh_ae_noSlide> zh) | (zh <any_Vx_zh_sh_ae_noSlide>)))) (([(<any_Cx_ao_zh_t> ao)] | [(ao <any_Cx_ao_zh_t>)]) (t | ((<any_Cx_ao_zh_t> ao) | (ao <any_Cx_ao_zh_t>)))) (([(<any_vowel_noSlide> k)] | [(k <any_vowel_noSlide>)]) ([(<any_Cx_ao_t_k> k)] | [(k <any_Cx_ao_t_k>)]) sil))
Running scan for frate = 105
Considering guard sh with value 1 for b ...
Considering guard jh with value 1 for b ...
Considering guard zh with value 1 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, jh

Considering guard zh with value 2 for ae ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for t ...
Considering guard ao with value 1 for t ...
candidateGuards = map[ao:true zh:true]
Picking guard, zh

frate, target rule = 105 public <bat> = (((sil [((f <any_Cx_b_f_hh>) | (<any_Cx_b_f_hh> f))] [((f <any_vowel_noSlide>) | (<any_vowel_noSlide> f))]) | (sil hh (sil [((f <any_Cx_b_f_hh>) | (<any_Cx_b_f_hh> f))] [((f <any_vowel_noSlide>) | (<any_vowel_noSlide> f))]))) (([(<any_Cx_jh_hh_f_b> jh)] | [(jh <any_Cx_jh_hh_f_b>)]) (b | ((<any_Cx_jh_hh_f_b> jh) | (jh <any_Cx_jh_hh_f_b>)))) ((([(<any_Vx_zh_jh_ae_noSlide> zh)] | [(zh <any_Vx_zh_jh_ae_noSlide>)]) ([(<any_Cx_zh_jh_t_b> zh)] | [(zh <any_Cx_zh_jh_t_b>)])) (ae | ((<any_Vx_zh_jh_ae_noSlide> zh) | (zh <any_Vx_zh_jh_ae_noSlide>)))) (([(<any_Cx_zh_zh_t> zh)] | [(zh <any_Cx_zh_zh_t>)]) (t | ((<any_Cx_zh_zh_t> zh) | (zh <any_Cx_zh_zh_t>)))) (([(<any_vowel_noSlide> ch)] | [(ch <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_ch> ch)] | [(ch <any_Cx_zh_t_ch>)]) sil))
Running scan for frate = 91
Considering guard jh with value 1 for b ...
Considering guard zh with value 1 for b ...
Considering guard sh with value 1 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, jh

Considering guard zh with value 2 for ae ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for t ...
Considering guard ao with value 1 for t ...
candidateGuards = map[ao:true zh:true]
Picking guard, zh

frate, target rule = 91 public <bat> = (((sil [((dh <any_Cx_b_dh_hh>) | (<any_Cx_b_dh_hh> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]) | (sil hh (sil [((dh <any_Cx_b_dh_hh>) | (<any_Cx_b_dh_hh> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]))) (([(<any_Cx_jh_hh_dh_b> jh)] | [(jh <any_Cx_jh_hh_dh_b>)]) (b | ((<any_Cx_jh_hh_dh_b> jh) | (jh <any_Cx_jh_hh_dh_b>)))) ((([(<any_Vx_zh_jh_ae_noSlide> zh)] | [(zh <any_Vx_zh_jh_ae_noSlide>)]) ([(<any_Cx_zh_jh_t_b> zh)] | [(zh <any_Cx_zh_jh_t_b>)])) (ae | ((<any_Vx_zh_jh_ae_noSlide> zh) | (zh <any_Vx_zh_jh_ae_noSlide>)))) (([(<any_Cx_zh_zh_t> zh)] | [(zh <any_Cx_zh_zh_t>)]) (t | ((<any_Cx_zh_zh_t> zh) | (zh <any_Cx_zh_zh_t>)))) (([(<any_vowel_noSlide> k)] | [(k <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_k> k)] | [(k <any_Cx_zh_t_k>)]) sil))
Running scan for frate = 80
Considering guard zh with value 1 for b ...
Considering guard jh with value 1 for b ...
Considering guard sh with value 1 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for ae ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for t ...
Considering guard ao with value 1 for t ...
candidateGuards = map[ao:true zh:true]
Picking guard, ao

frate, target rule = 80 public <bat> = (((sil [((dh <any_Cx_b_dh_hh>) | (<any_Cx_b_dh_hh> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]) | (sil hh (sil [((dh <any_Cx_b_dh_hh>) | (<any_Cx_b_dh_hh> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]))) (([(<any_Cx_zh_hh_dh_b> zh)] | [(zh <any_Cx_zh_hh_dh_b>)]) (b | ((<any_Cx_zh_hh_dh_b> zh) | (zh <any_Cx_zh_hh_dh_b>)))) ((([(<any_Vx_zh_zh_ae_noSlide> zh)] | [(zh <any_Vx_zh_zh_ae_noSlide>)]) ([(<any_Cx_zh_zh_t_b> zh)] | [(zh <any_Cx_zh_zh_t_b>)])) (ae | ((<any_Vx_zh_zh_ae_noSlide> zh) | (zh <any_Vx_zh_zh_ae_noSlide>)))) (([(<any_Cx_ao_zh_t> ao)] | [(ao <any_Cx_ao_zh_t>)]) (t | ((<any_Cx_ao_zh_t> ao) | (ao <any_Cx_ao_zh_t>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_ao_t_p> p)] | [(p <any_Cx_ao_t_p>)]) sil))
Running scan for frate = 72
Considering guard zh with value 1 for b ...
Considering guard jh with value 1 for b ...
Considering guard sh with value 1 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for ae ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ao with value 1 for t ...
Considering guard zh with value 1 for t ...
candidateGuards = map[ao:true zh:true]
Picking guard, zh

frate, target rule = 72 public <bat> = (((sil [((d <any_Cx_b_d_hh>) | (<any_Cx_b_d_hh> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil hh (sil [((d <any_Cx_b_d_hh>) | (<any_Cx_b_d_hh> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_zh_hh_d_b> zh)] | [(zh <any_Cx_zh_hh_d_b>)]) (b | ((<any_Cx_zh_hh_d_b> zh) | (zh <any_Cx_zh_hh_d_b>)))) ((([(<any_Vx_zh_zh_ae_noSlide> zh)] | [(zh <any_Vx_zh_zh_ae_noSlide>)]) ([(<any_Cx_zh_zh_t_b> zh)] | [(zh <any_Cx_zh_zh_t_b>)])) (ae | ((<any_Vx_zh_zh_ae_noSlide> zh) | (zh <any_Vx_zh_zh_ae_noSlide>)))) (([(<any_Cx_zh_zh_t> zh)] | [(zh <any_Cx_zh_zh_t>)]) (t | ((<any_Cx_zh_zh_t> zh) | (zh <any_Cx_zh_zh_t>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_thr> thr)] | [(thr <any_Cx_zh_t_thr>)]) sil))

results =
{72 [{sil 0 13} {b 14 16} {zh 17 19} {y 20 34} {ae 35 51} {t 52 68} {sil 69 82}]}
{80 [{sil 0 16} {b 17 19} {zh 20 22} {y 23 38} {ae 39 57} {t 58 76} {sil 77 87}]}
{91 [{sil 0 20} {b 21 23} {zh 24 26} {y 27 44} {ae 45 64} {t 65 87} {sil 88 104}]}
{105 [{sil 0 23} {b 24 29} {zh 30 32} {y 33 50} {eh 51 74} {zh 75 77} {t 78 98} {sil 99 117}]}
{125 [{sil 3 28} {b 29 36} {zh 37 39} {y 40 60} {eh 61 89} {zh 90 92} {t 93 117} {sil 118 141}]}

normalised results =
{72 [{sil 0 13} {b 19 19} {zh 24 24} {y 28 47} {ae 49 71} {t 72 94} {sil 96 114}]}
{80 [{sil 0 16} {b 21 21} {zh 25 25} {y 29 48} {ae 49 71} {t 73 95} {sil 96 109}]}
{91 [{sil 0 20} {b 23 23} {zh 26 26} {y 30 48} {ae 49 70} {t 71 96} {sil 97 114}]}
{105 [{sil 0 23} {b 23 28} {zh 29 29} {y 31 48} {eh 49 70} {zh 71 71} {t 74 93} {sil 94 111}]}
{125 [{sil 3 28} {b 23 29} {zh 30 30} {y 32 48} {eh 49 71} {zh 72 72} {t 74 94} {sil 94 113}]}

ruleAligned = [{{b 2} [{3 1} {4 1}]} {{y 3} [{0 3} {1 3} {2 3} {4 3}]} {{ae 1} [{0 4} {1 4} {2 4}]} {{t 0} [{0 5} {1 5} {2 5} {3 6} {4 6}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {b 19 19} {zh 24 24} {y 28 47} {ae 49 71} {t 72 94} {sil 96 96}]}
{80 [{sil 0 0} {b 21 21} {zh 25 25} {y 29 48} {ae 49 71} {t 73 95} {sil 96 96}]}
{91 [{sil 0 0} {b 23 23} {zh 26 26} {y 30 48} {ae 49 70} {t 71 96} {sil 97 97}]}
{105 [{sil 0 0} {b 23 28} {zh 29 29} {y 31 48} {eh 49 70} {zh 71 71} {t 74 93} {sil 94 94}]}
{125 [{sil 3 3} {b 23 29} {zh 30 30} {y 32 48} {eh 49 71} {zh 72 72} {t 74 94} {sil 94 94}]}

timeAligned = [{{y 30 48} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{ae 49 70} [{0 4} {1 4} {2 4}]} {{t 73 94} [{0 5} {1 5} {2 5} {3 6} {4 6}]}]

i, iTime, newITime, timeStartFrom = 0 0 -1 0
i, iTime, newITime, timeStartFrom = 1 0 0 0
i, iTime, newITime, timeStartFrom = 2 0 1 47
i, iTime, newITime, timeStartFrom = 3 1 2 70
combinedVerdict    = [{b 2} {y 3} {ae 1} {t 0}]
ruleAlignedVerdict = [{b 2} {y 3} {ae 1} {t 0}]

score->
-1 for b
-1 for y
+1 for ae
+1 for t
score<-: 0
bestResult = {0 [{b 2} {y 3} {ae 1} {t 0}] [b ae t]}
testPronounce b missing y surprise ae possible t good
publish->
phonsToAlphas = [{[b] b} {[ae] a} {[t] t}]
getVerdict<-:new {b [b] 2}
getVerdict<-:new {a [ae] 1}
getVerdict<-:new {t [t] 0}
lettersVerdicts = [{b [b] 2} {y [y] 3} {a [ae] 1} {t [t] 0}]
publish<-
Total: 307.702932ms
{
  "results": [
    {
      "letters": "b",
      "phonemes": "b",
      "verdict": "missing"
    },
    {
      "letters": "y",
      "phonemes": "j",
      "verdict": "surprise"
    },
    {
      "letters": "a",
      "phonemes": "Ã¦",
      "verdict": "possible"
    },
    {
      "letters": "t",
      "phonemes": "t",
      "verdict": "good"
    }
  ],
  "err": null
}
