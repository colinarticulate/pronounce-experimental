
 length of audio =  2.089375



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.9 0.58 1.48

 start3, duration3, end3 =  0.9 0.48 1.38

 Initial start, duration, end =  0.8 0.6799999999999999 1.48

 Cut at: start, duration =  0.8 1.13     guard_end =  1.93 

Running scan for frate = 125
Considering guard jh with value 1 for p ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard jh with value 2 for ey ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard jh with value 2 for th ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard ng with value 2 for oh ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 1.7999999999999998 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 125 public <pathos> = (((sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil d (sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_jh_d_hh_p> jh)] | [(jh <any_Cx_jh_d_hh_p>)]) (p | ((<any_Cx_jh_d_hh_p> jh) | (jh <any_Cx_jh_d_hh_p>)))) ((([(<any_Vx_jh_jh_ey_noSlide> jh)] | [(jh <any_Vx_jh_jh_ey_noSlide>)]) ([(<any_Cx_jh_jh_th_p> jh)] | [(jh <any_Cx_jh_jh_th_p>)])) (ey | ((<any_Vx_jh_jh_ey_noSlide> jh) | (jh <any_Vx_jh_jh_ey_noSlide>)))) (([(<any_Cx_jh_jh_th_oh> jh)] | [(jh <any_Cx_jh_jh_th_oh>)]) (th | ((<any_Cx_jh_jh_th_oh> jh) | (jh <any_Cx_jh_jh_th_oh>)))) (([(<any_Cx_ng_jh_oh_th> ng)] | [(ng <any_Cx_ng_jh_oh_th>)]) (oh | ((<any_Cx_ng_jh_oh_s_th> ng) | (ng <any_Cx_ng_jh_oh_s_th>)))) (([(<any_Cx_ng_ng_s_oh> ng)] | [(ng <any_Cx_ng_ng_s_oh>)]) (s | ((<any_Cx_ng_ng_s_oh> ng) | (ng <any_Cx_ng_ng_s_oh>)))) (([(<any_vowel_noSlide> t)] | [(t <any_vowel_noSlide>)]) ([(<any_Cx_ng_s_t> t)] | [(t <any_Cx_ng_s_t>)]) sil))
Running scan for frate = 105
Considering guard jh with value 1 for p ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard jh with value 2 for ey ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard jh with value 2 for th ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard ng with value 2 for oh ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 1.7999999999999998 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 105 public <pathos> = (((sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil d (sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_jh_d_hh_p> jh)] | [(jh <any_Cx_jh_d_hh_p>)]) (p | ((<any_Cx_jh_d_hh_p> jh) | (jh <any_Cx_jh_d_hh_p>)))) ((([(<any_Vx_jh_jh_ey_noSlide> jh)] | [(jh <any_Vx_jh_jh_ey_noSlide>)]) ([(<any_Cx_jh_jh_th_p> jh)] | [(jh <any_Cx_jh_jh_th_p>)])) (ey | ((<any_Vx_jh_jh_ey_noSlide> jh) | (jh <any_Vx_jh_jh_ey_noSlide>)))) (([(<any_Cx_jh_jh_th_oh> jh)] | [(jh <any_Cx_jh_jh_th_oh>)]) (th | ((<any_Cx_jh_jh_th_oh> jh) | (jh <any_Cx_jh_jh_th_oh>)))) (([(<any_Cx_ng_jh_oh_th> ng)] | [(ng <any_Cx_ng_jh_oh_th>)]) (oh | ((<any_Cx_ng_jh_oh_s_th> ng) | (ng <any_Cx_ng_jh_oh_s_th>)))) (([(<any_Cx_ng_ng_s_oh> ng)] | [(ng <any_Cx_ng_ng_s_oh>)]) (s | ((<any_Cx_ng_ng_s_oh> ng) | (ng <any_Cx_ng_ng_s_oh>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_ng_s_f> f)] | [(f <any_Cx_ng_s_f>)]) sil))
Running scan for frate = 91
Considering guard jh with value 1 for p ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard jh with value 2 for ey ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard jh with value 2 for th ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard ng with value 2 for oh ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 1.7999999999999998 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 91 public <pathos> = (((sil [((b <any_Cx_p_b_d>) | (<any_Cx_p_b_d> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]) | (sil d (sil [((b <any_Cx_p_b_d>) | (<any_Cx_p_b_d> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]))) (([(<any_Cx_jh_d_b_p> jh)] | [(jh <any_Cx_jh_d_b_p>)]) (p | ((<any_Cx_jh_d_b_p> jh) | (jh <any_Cx_jh_d_b_p>)))) ((([(<any_Vx_jh_jh_ey_noSlide> jh)] | [(jh <any_Vx_jh_jh_ey_noSlide>)]) ([(<any_Cx_jh_jh_th_p> jh)] | [(jh <any_Cx_jh_jh_th_p>)])) (ey | ((<any_Vx_jh_jh_ey_noSlide> jh) | (jh <any_Vx_jh_jh_ey_noSlide>)))) (([(<any_Cx_jh_jh_th_oh> jh)] | [(jh <any_Cx_jh_jh_th_oh>)]) (th | ((<any_Cx_jh_jh_th_oh> jh) | (jh <any_Cx_jh_jh_th_oh>)))) (([(<any_Cx_ng_jh_oh_th> ng)] | [(ng <any_Cx_ng_jh_oh_th>)]) (oh | ((<any_Cx_ng_jh_oh_s_th> ng) | (ng <any_Cx_ng_jh_oh_s_th>)))) (([(<any_Cx_ng_ng_s_oh> ng)] | [(ng <any_Cx_ng_ng_s_oh>)]) (s | ((<any_Cx_ng_ng_s_oh> ng) | (ng <any_Cx_ng_ng_s_oh>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_ng_s_hh> hh)] | [(hh <any_Cx_ng_s_hh>)]) sil))
Running scan for frate = 80
Considering guard jh with value 1 for p ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard jh with value 2 for ey ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard jh with value 2 for th ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard ng with value 2 for oh ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 1.7999999999999998 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 80 public <pathos> = (((sil [((b <any_Cx_p_b_d>) | (<any_Cx_p_b_d> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]) | (sil d (sil [((b <any_Cx_p_b_d>) | (<any_Cx_p_b_d> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]))) (([(<any_Cx_jh_d_b_p> jh)] | [(jh <any_Cx_jh_d_b_p>)]) (p | ((<any_Cx_jh_d_b_p> jh) | (jh <any_Cx_jh_d_b_p>)))) ((([(<any_Vx_jh_jh_ey_noSlide> jh)] | [(jh <any_Vx_jh_jh_ey_noSlide>)]) ([(<any_Cx_jh_jh_th_p> jh)] | [(jh <any_Cx_jh_jh_th_p>)])) (ey | ((<any_Vx_jh_jh_ey_noSlide> jh) | (jh <any_Vx_jh_jh_ey_noSlide>)))) (([(<any_Cx_jh_jh_th_oh> jh)] | [(jh <any_Cx_jh_jh_th_oh>)]) (th | ((<any_Cx_jh_jh_th_oh> jh) | (jh <any_Cx_jh_jh_th_oh>)))) (([(<any_Cx_ng_jh_oh_th> ng)] | [(ng <any_Cx_ng_jh_oh_th>)]) (oh | ((<any_Cx_ng_jh_oh_s_th> ng) | (ng <any_Cx_ng_jh_oh_s_th>)))) (([(<any_Cx_ng_ng_s_oh> ng)] | [(ng <any_Cx_ng_ng_s_oh>)]) (s | ((<any_Cx_ng_ng_s_oh> ng) | (ng <any_Cx_ng_ng_s_oh>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_ng_s_hh> hh)] | [(hh <any_Cx_ng_s_hh>)]) sil))
Running scan for frate = 72
Considering guard jh with value 1 for p ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard jh with value 2 for ey ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard jh with value 2 for th ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard ng with value 2 for oh ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 1.7999999999999998 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 72 public <pathos> = (((sil [((b <any_Cx_p_b_d>) | (<any_Cx_p_b_d> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]) | (sil d (sil [((b <any_Cx_p_b_d>) | (<any_Cx_p_b_d> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]))) (([(<any_Cx_jh_d_b_p> jh)] | [(jh <any_Cx_jh_d_b_p>)]) (p | ((<any_Cx_jh_d_b_p> jh) | (jh <any_Cx_jh_d_b_p>)))) ((([(<any_Vx_jh_jh_ey_noSlide> jh)] | [(jh <any_Vx_jh_jh_ey_noSlide>)]) ([(<any_Cx_jh_jh_th_p> jh)] | [(jh <any_Cx_jh_jh_th_p>)])) (ey | ((<any_Vx_jh_jh_ey_noSlide> jh) | (jh <any_Vx_jh_jh_ey_noSlide>)))) (([(<any_Cx_jh_jh_th_oh> jh)] | [(jh <any_Cx_jh_jh_th_oh>)]) (th | ((<any_Cx_jh_jh_th_oh> jh) | (jh <any_Cx_jh_jh_th_oh>)))) (([(<any_Cx_ng_jh_oh_th> ng)] | [(ng <any_Cx_ng_jh_oh_th>)]) (oh | ((<any_Cx_ng_jh_oh_s_th> ng) | (ng <any_Cx_ng_jh_oh_s_th>)))) (([(<any_Cx_ng_ng_s_oh> ng)] | [(ng <any_Cx_ng_ng_s_oh>)]) (s | ((<any_Cx_ng_ng_s_oh> ng) | (ng <any_Cx_ng_ng_s_oh>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_ng_s_thr> thr)] | [(thr <any_Cx_ng_s_thr>)]) sil))

results =
{72 [{sil 0 9} {p 10 14} {ey 15 24} {th 25 30} {oh 31 36} {s 37 57} {sil 58 69}]}
{80 [{sil 0 12} {p 13 15} {ey 16 27} {th 28 34} {oh 35 40} {s 41 63} {sil 64 75}]}
{91 [{sil 0 14} {p 15 17} {ey 18 32} {th 33 37} {oh 38 46} {s 47 71} {sil 72 101}]}
{105 [{sil 0 17} {p 18 20} {ey 21 37} {th 38 41} {oh 42 54} {s 55 82} {sil 83 117}]}
{125 [{sil 3 22} {p 23 26} {ey 27 46} {th 47 51} {oh 52 65} {s 66 99} {sil 100 141}]}

normalised results =
{72 [{sil 0 9} {p 14 19} {ey 21 33} {th 35 42} {oh 43 50} {s 51 79} {sil 81 96}]}
{80 [{sil 0 12} {p 16 16} {ey 20 34} {th 35 43} {oh 44 50} {s 51 79} {sil 80 94}]}
{91 [{sil 0 14} {p 16 16} {ey 20 35} {th 36 41} {oh 42 51} {s 52 78} {sil 79 111}]}
{105 [{sil 0 17} {p 17 17} {ey 20 35} {th 36 39} {oh 40 51} {s 52 78} {sil 79 111}]}
{125 [{sil 3 22} {p 18 21} {ey 22 37} {th 38 41} {oh 42 52} {s 53 79} {sil 80 113}]}

ruleAligned = [{{p 2} [{0 1} {4 1}]} {{ey 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{th 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{oh 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{s 0} [{0 5} {1 5} {2 5} {3 5} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {p 14 19} {ey 21 33} {th 35 42} {oh 43 50} {s 51 79} {sil 81 81}]}
{80 [{sil 0 0} {p 16 16} {ey 20 34} {th 35 43} {oh 44 50} {s 51 79} {sil 80 80}]}
{91 [{sil 0 0} {p 16 16} {ey 20 35} {th 36 41} {oh 42 51} {s 52 78} {sil 79 79}]}
{105 [{sil 0 0} {p 17 17} {ey 20 35} {th 36 39} {oh 40 51} {s 52 78} {sil 79 79}]}
{125 [{sil 3 3} {p 18 21} {ey 22 37} {th 38 41} {oh 42 52} {s 53 79} {sil 80 80}]}

timeAligned = [{{ey 20 35} [{1 2} {2 2} {3 2} {0 2} {4 2}]} {{th 36 41} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{oh 42 51} [{2 4} {3 4} {4 4} {0 4} {1 4}]} {{s 52 79} [{0 5} {1 5} {2 5} {3 5} {4 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 -1 0
i, iTime, newITime, timeStartFrom = 1 0 0 0
i, iTime, newITime, timeStartFrom = 2 0 1 33
i, iTime, newITime, timeStartFrom = 3 1 2 39
i, iTime, newITime, timeStartFrom = 4 2 3 50
combinedVerdict    = [{p 2} {ey 0} {th 0} {oh 0} {s 0}]
ruleAlignedVerdict = [{p 2} {ey 0} {th 0} {oh 0} {s 0}]

score->
-1 for p
+1 for ey
+1 for th
+1 for oh
+1 for s
score<-: 3
bestResult = {3 [{p 2} {ey 0} {th 0} {oh 0} {s 0}] [p ey th oh s]}
testPronounce p missing ey good th good oh good s good
publish->
phonsToAlphas = [{[p] p} {[ey] a} {[th] th} {[oh] o} {[s] s}]
getVerdict<-:new {p [p] 2}
getVerdict<-:new {a [ey] 0}
getVerdict<-:new {th [th] 0}
getVerdict<-:new {o [oh] 0}
getVerdict<-:new {s [s] 0}
lettersVerdicts = [{p [p] 2} {a [ey] 0} {th [th] 0} {o [oh] 0} {s [s] 0}]
publish<-
Total: 303.863259ms
{
  "results": [
    {
      "letters": "p",
      "phonemes": "p",
      "verdict": "missing"
    },
    {
      "letters": "a",
      "phonemes": "eɪ",
      "verdict": "good"
    },
    {
      "letters": "th",
      "phonemes": "θ",
      "verdict": "good"
    },
    {
      "letters": "o",
      "phonemes": "ɒ",
      "verdict": "good"
    },
    {
      "letters": "s",
      "phonemes": "s",
      "verdict": "good"
    }
  ],
  "err": null
}
