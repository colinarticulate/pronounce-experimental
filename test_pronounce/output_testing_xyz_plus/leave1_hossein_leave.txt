
 length of audio =  2.730313



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0 2.8200000000000003 2.8200000000000003

 start3, duration3, end3 =  1.18 1.54 2.7199999999999998

 Initial start, duration, end =  0 2.8200000000000003 2.8200000000000003

 Cut at: start, duration =  0 2.710313     guard_end =  2.710313 

Running scan for frate = 125
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 4.2 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 3 for v ...
candidateGuards = map[ch:true]
Picking guard, ch

frate, target rule = 125 public <leave> = (((sil [((v <any_Cx_l_v_p>) | (<any_Cx_l_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]) | (sil p (sil [((v <any_Cx_l_v_p>) | (<any_Cx_l_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]))) (([(<any_Cx_sh_p_v_l> sh)] | [(sh <any_Cx_sh_p_v_l>)]) (l | ((<any_Cx_sh_p_v_l> sh) | (sh <any_Cx_sh_p_v_l>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_v_l> sh)] | [(sh <any_Cx_sh_sh_v_l>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_ch_sh_v> ch)] | [(ch <any_Cx_ch_sh_v>)]) (v | ((<any_Cx_ch_sh_v> ch) | (ch <any_Cx_ch_sh_v>)))) (([(<any_vowel_noSlide> r)] | [(r <any_vowel_noSlide>)]) ([(<any_Cx_ch_v_r> r)] | [(r <any_Cx_ch_v_r>)]) sil))
Running scan for frate = 105
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 4.2 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 3 for v ...
candidateGuards = map[ch:true]
Picking guard, ch

frate, target rule = 105 public <leave> = (((sil [((v <any_Cx_l_v_p>) | (<any_Cx_l_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]) | (sil p (sil [((v <any_Cx_l_v_p>) | (<any_Cx_l_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]))) (([(<any_Cx_sh_p_v_l> sh)] | [(sh <any_Cx_sh_p_v_l>)]) (l | ((<any_Cx_sh_p_v_l> sh) | (sh <any_Cx_sh_p_v_l>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_v_l> sh)] | [(sh <any_Cx_sh_sh_v_l>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_ch_sh_v> ch)] | [(ch <any_Cx_ch_sh_v>)]) (v | ((<any_Cx_ch_sh_v> ch) | (ch <any_Cx_ch_sh_v>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_ch_v_d> d)] | [(d <any_Cx_ch_v_d>)]) sil))
Running scan for frate = 91
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 4.2 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 3 for v ...
candidateGuards = map[ch:true]
Picking guard, ch

frate, target rule = 91 public <leave> = (((sil [((w <any_Cx_l_w_p>) | (<any_Cx_l_w_p> w))] [((w <any_vowel_noSlide>) | (<any_vowel_noSlide> w))]) | (sil p (sil [((w <any_Cx_l_w_p>) | (<any_Cx_l_w_p> w))] [((w <any_vowel_noSlide>) | (<any_vowel_noSlide> w))]))) (([(<any_Cx_sh_p_w_l> sh)] | [(sh <any_Cx_sh_p_w_l>)]) (l | ((<any_Cx_sh_p_w_l> sh) | (sh <any_Cx_sh_p_w_l>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_v_l> sh)] | [(sh <any_Cx_sh_sh_v_l>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_ch_sh_v> ch)] | [(ch <any_Cx_ch_sh_v>)]) (v | ((<any_Cx_ch_sh_v> ch) | (ch <any_Cx_ch_sh_v>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_ch_v_thr> thr)] | [(thr <any_Cx_ch_v_thr>)]) sil))
Running scan for frate = 80
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 4.2 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 3 for v ...
candidateGuards = map[ch:true]
Picking guard, ch

frate, target rule = 80 public <leave> = (((sil [((m <any_Cx_l_m_p>) | (<any_Cx_l_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]) | (sil p (sil [((m <any_Cx_l_m_p>) | (<any_Cx_l_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]))) (([(<any_Cx_sh_p_m_l> sh)] | [(sh <any_Cx_sh_p_m_l>)]) (l | ((<any_Cx_sh_p_m_l> sh) | (sh <any_Cx_sh_p_m_l>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_v_l> sh)] | [(sh <any_Cx_sh_sh_v_l>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_ch_sh_v> ch)] | [(ch <any_Cx_ch_sh_v>)]) (v | ((<any_Cx_ch_sh_v> ch) | (ch <any_Cx_ch_sh_v>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_ch_v_d> d)] | [(d <any_Cx_ch_v_d>)]) sil))
Running scan for frate = 72
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 4.2 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 3 for v ...
candidateGuards = map[ch:true]
Picking guard, ch

frate, target rule = 72 public <leave> = (((sil [((v <any_Cx_l_v_p>) | (<any_Cx_l_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]) | (sil p (sil [((v <any_Cx_l_v_p>) | (<any_Cx_l_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]))) (([(<any_Cx_sh_p_v_l> sh)] | [(sh <any_Cx_sh_p_v_l>)]) (l | ((<any_Cx_sh_p_v_l> sh) | (sh <any_Cx_sh_p_v_l>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_v_l> sh)] | [(sh <any_Cx_sh_sh_v_l>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_ch_sh_v> ch)] | [(ch <any_Cx_ch_sh_v>)]) (v | ((<any_Cx_ch_sh_v> ch) | (ch <any_Cx_ch_sh_v>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_ch_v_m> m)] | [(m <any_Cx_ch_v_m>)]) sil))

results =
{72 [{sil 0 63} {l 64 71} {iy 72 88} {v 89 102} {sil 103 107}]}
{80 [{sil 0 70} {l 71 79} {iy 80 98} {v 99 112} {sil 113 117}]}
{91 [{sil 0 78} {l 79 89} {iy 90 114} {v 115 128} {sil 129 241}]}
{105 [{sil 0 92} {l 93 103} {iy 104 134} {v 135 148} {sil 149 284}]}
{125 [{sil 3 110} {l 111 123} {iy 124 161} {v 162 176} {sil 177 338}]}

normalised results =
{72 [{sil 0 63} {l 89 99} {iy 100 122} {v 124 142} {sil 143 149}]}
{80 [{sil 0 70} {l 89 99} {iy 100 123} {v 124 140} {sil 141 146}]}
{91 [{sil 0 78} {l 87 98} {iy 99 125} {v 126 141} {sil 142 265}]}
{105 [{sil 0 92} {l 89 98} {iy 99 128} {v 129 141} {sil 142 270}]}
{125 [{sil 3 110} {l 89 98} {iy 99 129} {v 130 141} {sil 142 270}]}

ruleAligned = [{{l 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{iy 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{v 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {l 89 99} {iy 100 122} {v 124 142} {sil 143 143}]}
{80 [{sil 0 0} {l 89 99} {iy 100 123} {v 124 140} {sil 141 141}]}
{91 [{sil 0 0} {l 87 98} {iy 99 125} {v 126 141} {sil 142 142}]}
{105 [{sil 0 0} {l 89 98} {iy 99 128} {v 129 141} {sil 142 142}]}
{125 [{sil 3 3} {l 89 98} {iy 99 129} {v 130 141} {sil 142 142}]}

timeAligned = [{{l 89 98} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{iy 99 125} [{2 2} {3 2} {4 2} {0 2} {1 2}]} {{v 126 141} [{0 3} {1 3} {2 3} {3 3} {4 3}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 98
i, iTime, newITime, timeStartFrom = 2 1 2 122
combinedVerdict    = [{l 0} {iy 0} {v 0}]
ruleAlignedVerdict = [{l 0} {iy 0} {v 0}]

score->
+1 for l
+1 for iy
+1 for v
score<-: 8
testPronounce l good iy good v good
publish->
phonsToAlphas = [{[l] l} {[iy] ea} {[v] ve}]
getVerdict<-:new {l [l] 0}
getVerdict<-:new {ea [iy] 0}
getVerdict<-:new {ve [v] 0}
lettersVerdicts = [{l [l] 0} {ea [iy] 0} {ve [v] 0}]
publish<-
Total: 372.004487ms
{
  "results": [
    {
      "letters": "l",
      "phonemes": "l",
      "verdict": "good"
    },
    {
      "letters": "ea",
      "phonemes": "iː",
      "verdict": "good"
    },
    {
      "letters": "ve",
      "phonemes": "v",
      "verdict": "good"
    }
  ],
  "err": null
}
