
 length of audio =  1.902562



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.66 0.86 1.52

 start3, duration3, end3 =  0.88 0.44000000000000006 1.32

 Initial start, duration, end =  0.56 0.96 1.52

 Cut at: start, duration =  0.56 1.322562     guard_end =  1.882562 

Running scan for frate = 125
Considering guard ng with value 1.8 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 4 for ae ...
Considering guard ao with value 4 for ae ...
candidateGuards = map[ao:true ng:true]
Picking guard, ng

Considering guard zh with value 1 for t ...
Considering guard ao with value 1 for t ...
candidateGuards = map[ao:true zh:true]
Picking guard, zh

frate, target rule = 125 public <sat> = (((sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]) | (sil p (sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]))) (([(<any_Cx_ng_p_th_s> ng)] | [(ng <any_Cx_ng_p_th_s>)]) (s | z | ((<any_Cx_ng_p_th_s> ng) | (ng <any_Cx_ng_p_th_s>)))) ((([(<any_Vx_ng_ng_ae_noSlide> ng)] | [(ng <any_Vx_ng_ng_ae_noSlide>)]) ([(<any_Cx_ng_ng_t_s> ng)] | [(ng <any_Cx_ng_ng_t_s>)])) (ae | ((<any_Vx_ng_ng_ae_noSlide> ng) | (ng <any_Vx_ng_ng_ae_noSlide>)))) (([(<any_Cx_zh_ng_t> zh)] | [(zh <any_Cx_zh_ng_t>)]) (t | ((<any_Cx_zh_ng_t> zh) | (zh <any_Cx_zh_ng_t>)))) (([(<any_vowel_noSlide> k)] | [(k <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_k> k)] | [(k <any_Cx_zh_t_k>)]) sil))
Running scan for frate = 105
Considering guard ng with value 1.8 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 4 for ae ...
Considering guard ao with value 4 for ae ...
candidateGuards = map[ao:true ng:true]
Picking guard, ng

Considering guard zh with value 1 for t ...
Considering guard ao with value 1 for t ...
candidateGuards = map[ao:true zh:true]
Picking guard, zh

frate, target rule = 105 public <sat> = (((sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]) | (sil p (sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]))) (([(<any_Cx_ng_p_th_s> ng)] | [(ng <any_Cx_ng_p_th_s>)]) (s | z | ((<any_Cx_ng_p_th_s> ng) | (ng <any_Cx_ng_p_th_s>)))) ((([(<any_Vx_ng_ng_ae_noSlide> ng)] | [(ng <any_Vx_ng_ng_ae_noSlide>)]) ([(<any_Cx_ng_ng_t_s> ng)] | [(ng <any_Cx_ng_ng_t_s>)])) (ae | ((<any_Vx_ng_ng_ae_noSlide> ng) | (ng <any_Vx_ng_ng_ae_noSlide>)))) (([(<any_Cx_zh_ng_t> zh)] | [(zh <any_Cx_zh_ng_t>)]) (t | ((<any_Cx_zh_ng_t> zh) | (zh <any_Cx_zh_ng_t>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_g> g)] | [(g <any_Cx_zh_t_g>)]) sil))
Running scan for frate = 91
Considering guard ng with value 1.8 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ao with value 4 for ae ...
Considering guard ng with value 4 for ae ...
candidateGuards = map[ao:true ng:true]
Picking guard, ao

Considering guard ao with value 1 for t ...
Considering guard zh with value 1 for t ...
candidateGuards = map[ao:true zh:true]
Picking guard, ao

frate, target rule = 91 public <sat> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_ng_p_ch_s> ng)] | [(ng <any_Cx_ng_p_ch_s>)]) (s | z | ((<any_Cx_ng_p_ch_s> ng) | (ng <any_Cx_ng_p_ch_s>)))) ((([(<any_Vx_ao_ng_ae_noSlide> ao)] | [(ao <any_Vx_ao_ng_ae_noSlide>)]) ([(<any_Cx_ao_ng_t_s> ao)] | [(ao <any_Cx_ao_ng_t_s>)])) (ae | ((<any_Vx_ao_ng_ae_noSlide> ao) | (ao <any_Vx_ao_ng_ae_noSlide>)))) (([(<any_Cx_ao_ao_t> ao)] | [(ao <any_Cx_ao_ao_t>)]) (t | ((<any_Cx_ao_ao_t> ao) | (ao <any_Cx_ao_ao_t>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_ao_t_p> p)] | [(p <any_Cx_ao_t_p>)]) sil))
Running scan for frate = 80
Considering guard ng with value 1.8 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ao with value 4 for ae ...
Considering guard ng with value 4 for ae ...
candidateGuards = map[ao:true ng:true]
Picking guard, ao

Considering guard ao with value 1 for t ...
Considering guard zh with value 1 for t ...
candidateGuards = map[ao:true zh:true]
Picking guard, ao

frate, target rule = 80 public <sat> = (((sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ng_p_z_s> ng)] | [(ng <any_Cx_ng_p_z_s>)]) (s | z | ((<any_Cx_ng_p_z_s> ng) | (ng <any_Cx_ng_p_z_s>)))) ((([(<any_Vx_ao_ng_ae_noSlide> ao)] | [(ao <any_Vx_ao_ng_ae_noSlide>)]) ([(<any_Cx_ao_ng_t_s> ao)] | [(ao <any_Cx_ao_ng_t_s>)])) (ae | ((<any_Vx_ao_ng_ae_noSlide> ao) | (ao <any_Vx_ao_ng_ae_noSlide>)))) (([(<any_Cx_ao_ao_t> ao)] | [(ao <any_Cx_ao_ao_t>)]) (t | ((<any_Cx_ao_ao_t> ao) | (ao <any_Cx_ao_ao_t>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_ao_t_d> d)] | [(d <any_Cx_ao_t_d>)]) sil))
Running scan for frate = 72
Considering guard ng with value 1.8 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 4 for ae ...
Considering guard ao with value 4 for ae ...
candidateGuards = map[ao:true ng:true]
Picking guard, ng

Considering guard ao with value 1 for t ...
Considering guard zh with value 1 for t ...
candidateGuards = map[ao:true zh:true]
Picking guard, ao

frate, target rule = 72 public <sat> = (((sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ng_p_z_s> ng)] | [(ng <any_Cx_ng_p_z_s>)]) (s | z | ((<any_Cx_ng_p_z_s> ng) | (ng <any_Cx_ng_p_z_s>)))) ((([(<any_Vx_ng_ng_ae_noSlide> ng)] | [(ng <any_Vx_ng_ng_ae_noSlide>)]) ([(<any_Cx_ng_ng_t_s> ng)] | [(ng <any_Cx_ng_ng_t_s>)])) (ae | ((<any_Vx_ng_ng_ae_noSlide> ng) | (ng <any_Vx_ng_ng_ae_noSlide>)))) (([(<any_Cx_ao_ng_t> ao)] | [(ao <any_Cx_ao_ng_t>)]) (t | ((<any_Cx_ao_ng_t> ao) | (ao <any_Cx_ao_ng_t>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_ao_t_p> p)] | [(p <any_Cx_ao_t_p>)]) sil))

results =
{72 [{sil 0 7} {s 8 29} {ih 30 43} {ng 44 46} {t 47 65} {sil 66 78}]}
{80 [{sil 0 9} {s 10 32} {ih 33 48} {ao 49 51} {t 52 72} {sil 73 85}]}
{91 [{sil 0 10} {s 11 37} {ih 38 56} {ao 57 59} {t 60 82} {sil 83 115}]}
{105 [{sil 0 12} {s 13 43} {ih 44 66} {ng 67 69} {t 70 96} {sil 97 138}]}
{125 [{sil 3 16} {s 17 53} {ih 54 81} {ng 82 84} {t 85 114} {sil 115 161}]}

normalised results =
{72 [{sil 0 7} {s 11 40} {ih 42 60} {ng 61 61} {t 65 90} {sil 92 108}]}
{80 [{sil 0 9} {s 13 40} {ih 41 60} {ao 61 61} {t 65 90} {sil 91 106}]}
{91 [{sil 0 10} {s 12 41} {ih 42 62} {ao 63 63} {t 66 90} {sil 91 126}]}
{105 [{sil 0 12} {s 12 41} {ih 42 63} {ng 64 64} {t 67 91} {sil 92 131}]}
{125 [{sil 3 16} {s 14 42} {ih 43 65} {ng 66 66} {t 68 91} {sil 92 129}]}

ruleAligned = [{{s 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ae 2} []} {{ih 3} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{t 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {s 11 40} {ih 42 60} {ng 61 61} {t 65 90} {sil 92 92}]}
{80 [{sil 0 0} {s 13 40} {ih 41 60} {ao 61 61} {t 65 90} {sil 91 91}]}
{91 [{sil 0 0} {s 12 41} {ih 42 62} {ao 63 63} {t 66 90} {sil 91 91}]}
{105 [{sil 0 0} {s 12 41} {ih 42 63} {ng 64 64} {t 67 91} {sil 92 92}]}
{125 [{sil 3 3} {s 14 42} {ih 43 65} {ng 66 66} {t 68 91} {sil 92 92}]}

timeAligned = [{{s 12 41} [{0 1} {2 1} {3 1} {1 1} {4 1}]} {{ih 42 62} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{t 66 90} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 -1 40
i, iTime, newITime, timeStartFrom = 2 0 1 40
i, iTime, newITime, timeStartFrom = 3 1 2 60
combinedVerdict    = [{s 0} {ae 2} {ih 3} {t 0}]
ruleAlignedVerdict = [{s 0} {ae 2} {ih 3} {t 0}]

score->
+1 for s
-1 for ae
-1 for ih
+1 for t
score<-: 0
bestResult = {0 [{s 0} {ae 2} {ih 3} {t 0}] [s ae t]}
testPronounce s good ae missing ih surprise t good
publish->
phonsToAlphas = [{[s] s} {[ae] a} {[t] t}]
getVerdict<-:new {s [s] 0}
getVerdict<-:new {a [ae] 2}
getVerdict<-:new {t [t] 0}
lettersVerdicts = [{s [s] 0} {a [ae] 2} {ih [ih] 3} {t [t] 0}]
publish<-
Total: 195.65906ms
{
  "results": [
    {
      "letters": "s",
      "phonemes": "s",
      "verdict": "good"
    },
    {
      "letters": "a",
      "phonemes": "æ",
      "verdict": "missing"
    },
    {
      "letters": "ih",
      "phonemes": "ɪ",
      "verdict": "surprise"
    },
    {
      "letters": "t",
      "phonemes": "t",
      "verdict": "good"
    }
  ],
  "err": null
}
