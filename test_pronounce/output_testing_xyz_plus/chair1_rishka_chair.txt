
 length of audio =  2.298375



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.64 1 1.6400000000000001

 start3, duration3, end3 =  0.8 0.72 1.52

 Initial start, duration, end =  0.54 1.1 1.6400000000000001

 Cut at: start, duration =  0.54 1.55     guard_end =  2.09 

Running scan for frate = 125
Considering guard y with value 1 for ch ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 1 for ehr ...
candidateGuards = map[y:true]
Picking guard, y


frate, target rule = 125 public <chair> = (((sil [((z <any_Cx_ch_z_p>) | (<any_Cx_ch_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_ch_z_p>) | (<any_Cx_ch_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_y_p_z_ch> y)] | [(y <any_Cx_y_p_z_ch>)]) (ch | ((<any_Cx_y_p_z_ch_ehr> y) | (y <any_Cx_y_p_z_ch_ehr>)))) (([(<any_Cx_y_y_ehr_ch> y)] | [(y <any_Cx_y_y_ehr_ch>)]) (ehr | ((<any_Cx_y_y_ehr> y) | (y <any_Cx_y_y_ehr>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_y_ehr_f> f)] | [(f <any_Cx_y_ehr_f>)]) sil))
Running scan for frate = 105
Considering guard y with value 1 for ch ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 1 for ehr ...
candidateGuards = map[y:true]
Picking guard, y


frate, target rule = 105 public <chair> = (((sil [((z <any_Cx_ch_z_p>) | (<any_Cx_ch_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_ch_z_p>) | (<any_Cx_ch_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_y_p_z_ch> y)] | [(y <any_Cx_y_p_z_ch>)]) (ch | ((<any_Cx_y_p_z_ch_ehr> y) | (y <any_Cx_y_p_z_ch_ehr>)))) (([(<any_Cx_y_y_ehr_ch> y)] | [(y <any_Cx_y_y_ehr_ch>)]) (ehr | ((<any_Cx_y_y_ehr> y) | (y <any_Cx_y_y_ehr>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_y_ehr_ng> ng)] | [(ng <any_Cx_y_ehr_ng>)]) sil))
Running scan for frate = 91
Considering guard y with value 1 for ch ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 1 for ehr ...
candidateGuards = map[y:true]
Picking guard, y


frate, target rule = 91 public <chair> = (((sil [((z <any_Cx_ch_z_p>) | (<any_Cx_ch_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_ch_z_p>) | (<any_Cx_ch_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_y_p_z_ch> y)] | [(y <any_Cx_y_p_z_ch>)]) (ch | ((<any_Cx_y_p_z_ch_ehr> y) | (y <any_Cx_y_p_z_ch_ehr>)))) (([(<any_Cx_y_y_ehr_ch> y)] | [(y <any_Cx_y_y_ehr_ch>)]) (ehr | ((<any_Cx_y_y_ehr> y) | (y <any_Cx_y_y_ehr>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_y_ehr_n> n)] | [(n <any_Cx_y_ehr_n>)]) sil))
Running scan for frate = 80
Considering guard y with value 1 for ch ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 1 for ehr ...
candidateGuards = map[y:true]
Picking guard, y


frate, target rule = 80 public <chair> = (((sil [((z <any_Cx_ch_z_p>) | (<any_Cx_ch_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_ch_z_p>) | (<any_Cx_ch_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_y_p_z_ch> y)] | [(y <any_Cx_y_p_z_ch>)]) (ch | ((<any_Cx_y_p_z_ch_ehr> y) | (y <any_Cx_y_p_z_ch_ehr>)))) (([(<any_Cx_y_y_ehr_ch> y)] | [(y <any_Cx_y_y_ehr_ch>)]) (ehr | ((<any_Cx_y_y_ehr> y) | (y <any_Cx_y_y_ehr>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_y_ehr_hh> hh)] | [(hh <any_Cx_y_ehr_hh>)]) sil))
Running scan for frate = 72
Considering guard y with value 1 for ch ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 1 for ehr ...
candidateGuards = map[y:true]
Picking guard, y


frate, target rule = 72 public <chair> = (((sil [((z <any_Cx_ch_z_p>) | (<any_Cx_ch_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_ch_z_p>) | (<any_Cx_ch_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_y_p_z_ch> y)] | [(y <any_Cx_y_p_z_ch>)]) (ch | ((<any_Cx_y_p_z_ch_ehr> y) | (y <any_Cx_y_p_z_ch_ehr>)))) (([(<any_Cx_y_y_ehr_ch> y)] | [(y <any_Cx_y_y_ehr_ch>)]) (ehr | ((<any_Cx_y_y_ehr> y) | (y <any_Cx_y_y_ehr>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_y_ehr_hh> hh)] | [(hh <any_Cx_y_ehr_hh>)]) sil))

results =
{72 [{sil 0 6} {d 7 15} {z 16 23} {y 24 27} {hh 28 56} {ehr 57 62} {sil 63 73}]}
{80 [{sil 0 9} {d 10 17} {z 18 26} {y 27 30} {hh 31 62} {ehr 63 69} {sil 70 79}]}
{91 [{sil 0 16} {ch 17 20} {z 21 30} {y 31 35} {ae 36 76} {n 77 89} {sil 90 139}]}
{105 [{sil 0 18} {d 19 22} {z 23 35} {y 36 41} {hh 42 83} {ehr 84 90} {ng 91 93} {l 94 107} {sil 108 158}]}
{125 [{sil 3 24} {ch 25 28} {z 29 43} {y 44 49} {ae 50 112} {f 113 115} {sil 116 189}]}

normalised results =
{72 [{sil 0 6} {d 10 21} {z 22 32} {y 33 38} {hh 39 78} {ehr 79 86} {sil 88 101}]}
{80 [{sil 0 9} {d 13 21} {z 23 33} {y 34 38} {hh 39 78} {ehr 79 86} {sil 88 99}]}
{91 [{sil 0 16} {ch 19 22} {z 23 33} {y 34 38} {ae 40 84} {n 85 98} {sil 99 153}]}
{105 [{sil 0 18} {d 18 21} {z 22 33} {y 34 39} {hh 40 79} {ehr 80 86} {ng 87 87} {l 90 102} {sil 103 150}]}
{125 [{sil 3 24} {ch 20 22} {z 23 34} {y 35 39} {ae 40 90} {f 90 90} {sil 93 151}]}

ruleAligned = [{{z 3} [{0 2} {1 2} {3 2}]} {{ch 2} [{2 1} {4 1}]} {{hh 3} [{0 4} {1 4} {3 4}]} {{ehr 1} [{0 5} {1 5} {3 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {d 10 21} {z 22 32} {y 33 38} {hh 39 78} {ehr 79 86} {sil 88 88}]}
{80 [{sil 0 0} {d 13 21} {z 23 33} {y 34 34} {hh 39 78} {ehr 79 86} {sil 88 88}]}
{91 [{sil 0 0} {ch 19 22} {z 23 33} {y 34 34} {ae 40 40} {n 85 98} {sil 99 99}]}
{105 [{sil 0 0} {d 18 18} {z 22 33} {y 34 39} {hh 40 79} {ehr 80 86} {ng 87 87} {l 90 102} {sil 103 103}]}
{125 [{sil 3 3} {ch 20 22} {z 23 34} {y 35 35} {ae 40 40} {f 90 90} {sil 93 93}]}

timeAligned = [{{z 23 33} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{hh 40 78} [{0 4} {1 4} {3 4}]} {{ehr 80 86} [{0 5} {1 5} {3 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 -1 32
i, iTime, newITime, timeStartFrom = 2 0 1 32
i, iTime, newITime, timeStartFrom = 3 1 2 78
combinedVerdict    = [{z 3} {ch 2} {hh 3} {ehr 1}]
ruleAlignedVerdict = [{z 3} {ch 2} {hh 3} {ehr 1}]

score->
-1 for z
-1 for ch
-1 for hh
+1 for ehr
score<-: -2
bestResult = {-2 [{z 3} {ch 2} {hh 3} {ehr 1}] [ch ehr]}
testPronounce z surprise ch missing hh surprise ehr possible
publish->
phonsToAlphas = [{[ch] ch} {[ehr] air}]
getVerdict<-:new {ch [ch] 2}
getVerdict<-:new {air [ehr] 1}
lettersVerdicts = [{z [z] 3} {ch [ch] 2} {hh [hh] 3} {air [ehr] 1}]
publish<-
{
  "results": [
    {
      "letters": "z",
      "phonemes": "z",
      "verdict": "surprise"
    },
    {
      "letters": "ch",
      "phonemes": "ʧ",
      "verdict": "missing"
    },
    {
      "letters": "hh",
      "phonemes": "h",
      "verdict": "surprise"
    },
    {
      "letters": "air",
      "phonemes": "ɛː",
      "verdict": "possible"
    }
  ],
  "err": null
}
