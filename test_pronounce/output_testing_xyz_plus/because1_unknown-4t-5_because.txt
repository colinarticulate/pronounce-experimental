
 length of audio =  1.908



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.64 1.2200000000000002 1.8600000000000003

 start3, duration3, end3 =  0.86 0.88 1.74

 Initial start, duration, end =  0.54 1.3200000000000003 1.8600000000000003

 Cut at: start, duration =  0.54 1.3479999999999999     guard_end =  1.888 

Running scan for frate = 125
Running scan for frate = 125
Considering guard hh with value 1 for b ...
Considering guard sh with value 1 for b ...
candidateGuards = map[hh:true sh:true]
Picking guard, hh

Considering guard sh with value 7.800000000000001 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard s with value 1 for b ...
Considering guard jh with value 1 for b ...
Considering guard sh with value 1 for b ...
candidateGuards = map[jh:true s:true sh:true]
Picking guard, sh

Considering guard z with value 6.4 for k ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard y with value 5.199999999999999 for oh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard z with value 1.6 for k ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard ng with value 1 for z ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard y with value 5.199999999999999 for oh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard ng with value 1 for z ...
candidateGuards = map[ng:true]
Picking guard, ng


frate, target rule = 125 public <because> = (((sil [((l <any_Cx_b_l_hh>) | (<any_Cx_b_l_hh> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]) | (sil hh (sil [((l <any_Cx_b_l_hh>) | (<any_Cx_b_l_hh> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]))) (([(<any_Cx_hh_hh_l_b> hh)] | [(hh <any_Cx_hh_hh_l_b>)]) (b | ((<any_Cx_hh_hh_l_b> hh) | (hh <any_Cx_hh_hh_l_b>)))) ((([(<any_Vx_sh_hh_iy_noSlide> sh)] | [(sh <any_Vx_sh_hh_iy_noSlide>)]) ([(<any_Cx_sh_hh_k_b> sh)] | [(sh <any_Cx_sh_hh_k_b>)])) (iy | ((<any_Vx_sh_hh_iy_noSlide> sh) | (sh <any_Vx_sh_hh_iy_noSlide>)))) (([(<any_Cx_z_sh_k_oh> z)] | [(z <any_Cx_z_sh_k_oh>)]) (k | ((<any_Cx_z_sh_k_oh> z) | (z <any_Cx_z_sh_k_oh>)))) (([(<any_Cx_y_z_oh_k> y)] | [(y <any_Cx_y_z_oh_k>)]) (oh | ((<any_Cx_y_z_oh_z_k> y) | (y <any_Cx_y_z_oh_z_k>)))) (([(<any_Cx_ng_y_z_oh> ng)] | [(ng <any_Cx_ng_y_z_oh>)]) (z | ((<any_Cx_ng_y_z_oh> ng) | (ng <any_Cx_ng_y_z_oh>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_ng_z_b> b)] | [(b <any_Cx_ng_z_b>)]) sil))
Running scan for frate = 105
Considering guard sh with value 1 for b ...
Considering guard hh with value 1 for b ...
candidateGuards = map[hh:true sh:true]
Picking guard, sh


Considering guard sh with value 7.800000000000001 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 125 public <because> = (((sil [((d <any_Cx_b_d_hh>) | (<any_Cx_b_d_hh> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil hh (sil [((d <any_Cx_b_d_hh>) | (<any_Cx_b_d_hh> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_sh_hh_d_b> sh)] | [(sh <any_Cx_sh_hh_d_b>)]) (b | ((<any_Cx_sh_hh_d_b> sh) | (sh <any_Cx_sh_hh_d_b>)))) ((([(<any_Vx_r_sh_ih_noSlide> r)] | [(r <any_Vx_r_sh_ih_noSlide>)]) ([(<any_Cx_r_sh_k_b> r)] | [(r <any_Cx_r_sh_k_b>)])) (ih | ((<any_Vx_r_sh_ih_noSlide> r) | (r <any_Vx_r_sh_ih_noSlide>)))) (([(<any_Cx_z_r_k_oh> z)] | [(z <any_Cx_z_r_k_oh>)]) (k | ((<any_Cx_z_r_k_oh> z) | (z <any_Cx_z_r_k_oh>)))) (([(<any_Cx_y_z_oh_k> y)] | [(y <any_Cx_y_z_oh_k>)]) (oh | ((<any_Cx_y_z_oh_z_k> y) | (y <any_Cx_y_z_oh_z_k>)))) (([(<any_Cx_ng_y_z_oh> ng)] | [(ng <any_Cx_ng_y_z_oh>)]) (z | ((<any_Cx_ng_y_z_oh> ng) | (ng <any_Cx_ng_y_z_oh>)))) (([(<any_vowel_noSlide> s)] | [(s <any_vowel_noSlide>)]) ([(<any_Cx_ng_z_s> s)] | [(s <any_Cx_ng_z_s>)]) sil))
Running scan for frate = 105
Considering guard z with value 6.4 for k ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard s with value 1 for b ...
Considering guard sh with value 1 for b ...
Considering guard jh with value 1 for b ...
candidateGuards = map[jh:true s:true sh:true]
Picking guard, jh

Considering guard y with value 5.199999999999999 for oh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard ng with value 1 for z ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard z with value 1.6 for k ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard y with value 5.199999999999999 for oh ...
candidateGuards = map[y:true]
Picking guard, y


Considering guard ng with value 1 for z ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 105 public <because> = (((sil [((dh <any_Cx_b_dh_hh>) | (<any_Cx_b_dh_hh> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]) | (sil hh (sil [((dh <any_Cx_b_dh_hh>) | (<any_Cx_b_dh_hh> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]))) (([(<any_Cx_sh_hh_dh_b> sh)] | [(sh <any_Cx_sh_hh_dh_b>)]) (b | ((<any_Cx_sh_hh_dh_b> sh) | (sh <any_Cx_sh_hh_dh_b>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_k_b> sh)] | [(sh <any_Cx_sh_sh_k_b>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_z_sh_k_oh> z)] | [(z <any_Cx_z_sh_k_oh>)]) (k | ((<any_Cx_z_sh_k_oh> z) | (z <any_Cx_z_sh_k_oh>)))) (([(<any_Cx_y_z_oh_k> y)] | [(y <any_Cx_y_z_oh_k>)]) (oh | ((<any_Cx_y_z_oh_z_k> y) | (y <any_Cx_y_z_oh_z_k>)))) (([(<any_Cx_ng_y_z_oh> ng)] | [(ng <any_Cx_ng_y_z_oh>)]) (z | ((<any_Cx_ng_y_z_oh> ng) | (ng <any_Cx_ng_y_z_oh>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_ng_z_b> b)] | [(b <any_Cx_ng_z_b>)]) sil))
Running scan for frate = 91
Considering guard hh with value 1 for b ...
Considering guard sh with value 1 for b ...
candidateGuards = map[hh:true sh:true]
Picking guard, hh

Considering guard sh with value 7.800000000000001 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 105 public <because> = (((sil [((hh <any_Cx_b_hh_hh>) | (<any_Cx_b_hh_hh> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil hh (sil [((hh <any_Cx_b_hh_hh>) | (<any_Cx_b_hh_hh> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_jh_hh_hh_b> jh)] | [(jh <any_Cx_jh_hh_hh_b>)]) (b | ((<any_Cx_jh_hh_hh_b> jh) | (jh <any_Cx_jh_hh_hh_b>)))) ((([(<any_Vx_r_jh_ih_noSlide> r)] | [(r <any_Vx_r_jh_ih_noSlide>)]) ([(<any_Cx_r_jh_k_b> r)] | [(r <any_Cx_r_jh_k_b>)])) (ih | ((<any_Vx_r_jh_ih_noSlide> r) | (r <any_Vx_r_jh_ih_noSlide>)))) (([(<any_Cx_z_r_k_oh> z)] | [(z <any_Cx_z_r_k_oh>)]) (k | ((<any_Cx_z_r_k_oh> z) | (z <any_Cx_z_r_k_oh>)))) (([(<any_Cx_y_z_oh_k> y)] | [(y <any_Cx_y_z_oh_k>)]) (oh | ((<any_Cx_y_z_oh_z_k> y) | (y <any_Cx_y_z_oh_z_k>)))) (([(<any_Cx_ng_y_z_oh> ng)] | [(ng <any_Cx_ng_y_z_oh>)]) (z | ((<any_Cx_ng_y_z_oh> ng) | (ng <any_Cx_ng_y_z_oh>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_ng_z_v> v)] | [(v <any_Cx_ng_z_v>)]) sil))
Considering guard z with value 6.4 for k ...
candidateGuards = map[z:true]
Picking guard, z

Running scan for frate = 91
Considering guard y with value 5.199999999999999 for oh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard s with value 1 for b ...
Considering guard sh with value 1 for b ...
Considering guard jh with value 1 for b ...
candidateGuards = map[jh:true s:true sh:true]
Picking guard, s

Considering guard ng with value 1 for z ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard z with value 1.6 for k ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard y with value 5.199999999999999 for oh ...
candidateGuards = map[y:true]
Picking guard, y


Considering guard ng with value 1 for z ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 91 public <because> = (((sil [((f <any_Cx_b_f_hh>) | (<any_Cx_b_f_hh> f))] [((f <any_vowel_noSlide>) | (<any_vowel_noSlide> f))]) | (sil hh (sil [((f <any_Cx_b_f_hh>) | (<any_Cx_b_f_hh> f))] [((f <any_vowel_noSlide>) | (<any_vowel_noSlide> f))]))) (([(<any_Cx_hh_hh_f_b> hh)] | [(hh <any_Cx_hh_hh_f_b>)]) (b | ((<any_Cx_hh_hh_f_b> hh) | (hh <any_Cx_hh_hh_f_b>)))) ((([(<any_Vx_sh_hh_iy_noSlide> sh)] | [(sh <any_Vx_sh_hh_iy_noSlide>)]) ([(<any_Cx_sh_hh_k_b> sh)] | [(sh <any_Cx_sh_hh_k_b>)])) (iy | ((<any_Vx_sh_hh_iy_noSlide> sh) | (sh <any_Vx_sh_hh_iy_noSlide>)))) (([(<any_Cx_z_sh_k_oh> z)] | [(z <any_Cx_z_sh_k_oh>)]) (k | ((<any_Cx_z_sh_k_oh> z) | (z <any_Cx_z_sh_k_oh>)))) (([(<any_Cx_y_z_oh_k> y)] | [(y <any_Cx_y_z_oh_k>)]) (oh | ((<any_Cx_y_z_oh_z_k> y) | (y <any_Cx_y_z_oh_z_k>)))) (([(<any_Cx_ng_y_z_oh> ng)] | [(ng <any_Cx_ng_y_z_oh>)]) (z | ((<any_Cx_ng_y_z_oh> ng) | (ng <any_Cx_ng_y_z_oh>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_ng_z_v> v)] | [(v <any_Cx_ng_z_v>)]) sil))
Running scan for frate = 80
Considering guard sh with value 1 for b ...
Considering guard hh with value 1 for b ...
candidateGuards = map[hh:true sh:true]
Picking guard, hh

Considering guard sh with value 7.800000000000001 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh


Considering guard z with value 6.4 for k ...
candidateGuards = map[z:true]
Picking guard, z

frate, target rule = 91 public <because> = (((sil [((v <any_Cx_b_v_hh>) | (<any_Cx_b_v_hh> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]) | (sil hh (sil [((v <any_Cx_b_v_hh>) | (<any_Cx_b_v_hh> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]))) (([(<any_Cx_s_hh_v_b> s)] | [(s <any_Cx_s_hh_v_b>)]) (b | ((<any_Cx_s_hh_v_b> s) | (s <any_Cx_s_hh_v_b>)))) ((([(<any_Vx_r_s_ih_noSlide> r)] | [(r <any_Vx_r_s_ih_noSlide>)]) ([(<any_Cx_r_s_k_b> r)] | [(r <any_Cx_r_s_k_b>)])) (ih | ((<any_Vx_r_s_ih_noSlide> r) | (r <any_Vx_r_s_ih_noSlide>)))) (([(<any_Cx_z_r_k_oh> z)] | [(z <any_Cx_z_r_k_oh>)]) (k | ((<any_Cx_z_r_k_oh> z) | (z <any_Cx_z_r_k_oh>)))) (([(<any_Cx_y_z_oh_k> y)] | [(y <any_Cx_y_z_oh_k>)]) (oh | ((<any_Cx_y_z_oh_z_k> y) | (y <any_Cx_y_z_oh_z_k>)))) (([(<any_Cx_ng_y_z_oh> ng)] | [(ng <any_Cx_ng_y_z_oh>)]) (z | ((<any_Cx_ng_y_z_oh> ng) | (ng <any_Cx_ng_y_z_oh>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_ng_z_v> v)] | [(v <any_Cx_ng_z_v>)]) sil))
Running scan for frate = 80
Considering guard y with value 5.199999999999999 for oh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard jh with value 1 for b ...
Considering guard s with value 1 for b ...
Considering guard sh with value 1 for b ...
candidateGuards = map[jh:true s:true sh:true]
Picking guard, jh

Considering guard ng with value 1 for z ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard z with value 1.6 for k ...
candidateGuards = map[z:true]
Picking guard, z


Considering guard y with value 5.199999999999999 for oh ...
candidateGuards = map[y:true]
Picking guard, y

frate, target rule = 80 public <because> = (((sil [((hh <any_Cx_b_hh_hh>) | (<any_Cx_b_hh_hh> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil hh (sil [((hh <any_Cx_b_hh_hh>) | (<any_Cx_b_hh_hh> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_hh_hh_hh_b> hh)] | [(hh <any_Cx_hh_hh_hh_b>)]) (b | ((<any_Cx_hh_hh_hh_b> hh) | (hh <any_Cx_hh_hh_hh_b>)))) ((([(<any_Vx_sh_hh_iy_noSlide> sh)] | [(sh <any_Vx_sh_hh_iy_noSlide>)]) ([(<any_Cx_sh_hh_k_b> sh)] | [(sh <any_Cx_sh_hh_k_b>)])) (iy | ((<any_Vx_sh_hh_iy_noSlide> sh) | (sh <any_Vx_sh_hh_iy_noSlide>)))) (([(<any_Cx_z_sh_k_oh> z)] | [(z <any_Cx_z_sh_k_oh>)]) (k | ((<any_Cx_z_sh_k_oh> z) | (z <any_Cx_z_sh_k_oh>)))) (([(<any_Cx_y_z_oh_k> y)] | [(y <any_Cx_y_z_oh_k>)]) (oh | ((<any_Cx_y_z_oh_z_k> y) | (y <any_Cx_y_z_oh_z_k>)))) (([(<any_Cx_ng_y_z_oh> ng)] | [(ng <any_Cx_ng_y_z_oh>)]) (z | ((<any_Cx_ng_y_z_oh> ng) | (ng <any_Cx_ng_y_z_oh>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_ng_z_v> v)] | [(v <any_Cx_ng_z_v>)]) sil))
Running scan for frate = 72
Considering guard ng with value 1 for z ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard sh with value 1 for b ...
Considering guard hh with value 1 for b ...
candidateGuards = map[hh:true sh:true]
Picking guard, sh

Considering guard sh with value 7.800000000000001 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh


Considering guard z with value 6.4 for k ...
candidateGuards = map[z:true]
Picking guard, z

frate, target rule = 80 public <because> = (((sil [((p <any_Cx_b_p_hh>) | (<any_Cx_b_p_hh> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]) | (sil hh (sil [((p <any_Cx_b_p_hh>) | (<any_Cx_b_p_hh> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]))) (([(<any_Cx_jh_hh_p_b> jh)] | [(jh <any_Cx_jh_hh_p_b>)]) (b | ((<any_Cx_jh_hh_p_b> jh) | (jh <any_Cx_jh_hh_p_b>)))) ((([(<any_Vx_r_jh_ih_noSlide> r)] | [(r <any_Vx_r_jh_ih_noSlide>)]) ([(<any_Cx_r_jh_k_b> r)] | [(r <any_Cx_r_jh_k_b>)])) (ih | ((<any_Vx_r_jh_ih_noSlide> r) | (r <any_Vx_r_jh_ih_noSlide>)))) (([(<any_Cx_z_r_k_oh> z)] | [(z <any_Cx_z_r_k_oh>)]) (k | ((<any_Cx_z_r_k_oh> z) | (z <any_Cx_z_r_k_oh>)))) (([(<any_Cx_y_z_oh_k> y)] | [(y <any_Cx_y_z_oh_k>)]) (oh | ((<any_Cx_y_z_oh_z_k> y) | (y <any_Cx_y_z_oh_z_k>)))) (([(<any_Cx_ng_y_z_oh> ng)] | [(ng <any_Cx_ng_y_z_oh>)]) (z | ((<any_Cx_ng_y_z_oh> ng) | (ng <any_Cx_ng_y_z_oh>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_ng_z_b> b)] | [(b <any_Cx_ng_z_b>)]) sil))
Running scan for frate = 72
Considering guard y with value 5.199999999999999 for oh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 1 for b ...
Considering guard s with value 1 for b ...
Considering guard jh with value 1 for b ...
candidateGuards = map[jh:true s:true sh:true]
Picking guard, sh

Considering guard ng with value 1 for z ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard z with value 1.6 for k ...
candidateGuards = map[z:true]
Picking guard, z


Considering guard y with value 5.199999999999999 for oh ...
candidateGuards = map[y:true]
Picking guard, y

frate, target rule = 72 public <because> = (((sil [((l <any_Cx_b_l_hh>) | (<any_Cx_b_l_hh> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]) | (sil hh (sil [((l <any_Cx_b_l_hh>) | (<any_Cx_b_l_hh> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]))) (([(<any_Cx_sh_hh_l_b> sh)] | [(sh <any_Cx_sh_hh_l_b>)]) (b | ((<any_Cx_sh_hh_l_b> sh) | (sh <any_Cx_sh_hh_l_b>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_k_b> sh)] | [(sh <any_Cx_sh_sh_k_b>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_z_sh_k_oh> z)] | [(z <any_Cx_z_sh_k_oh>)]) (k | ((<any_Cx_z_sh_k_oh> z) | (z <any_Cx_z_sh_k_oh>)))) (([(<any_Cx_y_z_oh_k> y)] | [(y <any_Cx_y_z_oh_k>)]) (oh | ((<any_Cx_y_z_oh_z_k> y) | (y <any_Cx_y_z_oh_z_k>)))) (([(<any_Cx_ng_y_z_oh> ng)] | [(ng <any_Cx_ng_y_z_oh>)]) (z | ((<any_Cx_ng_y_z_oh> ng) | (ng <any_Cx_ng_y_z_oh>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_ng_z_thr> thr)] | [(thr <any_Cx_ng_z_thr>)]) sil))
Considering guard ng with value 1 for z ...
candidateGuards = map[ng:true]
Picking guard, ng


frate, target rule = 72 public <because> = (((sil [((l <any_Cx_b_l_hh>) | (<any_Cx_b_l_hh> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]) | (sil hh (sil [((l <any_Cx_b_l_hh>) | (<any_Cx_b_l_hh> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]))) (([(<any_Cx_sh_hh_l_b> sh)] | [(sh <any_Cx_sh_hh_l_b>)]) (b | ((<any_Cx_sh_hh_l_b> sh) | (sh <any_Cx_sh_hh_l_b>)))) ((([(<any_Vx_r_sh_ih_noSlide> r)] | [(r <any_Vx_r_sh_ih_noSlide>)]) ([(<any_Cx_r_sh_k_b> r)] | [(r <any_Cx_r_sh_k_b>)])) (ih | ((<any_Vx_r_sh_ih_noSlide> r) | (r <any_Vx_r_sh_ih_noSlide>)))) (([(<any_Cx_z_r_k_oh> z)] | [(z <any_Cx_z_r_k_oh>)]) (k | ((<any_Cx_z_r_k_oh> z) | (z <any_Cx_z_r_k_oh>)))) (([(<any_Cx_y_z_oh_k> y)] | [(y <any_Cx_y_z_oh_k>)]) (oh | ((<any_Cx_y_z_oh_z_k> y) | (y <any_Cx_y_z_oh_z_k>)))) (([(<any_Cx_ng_y_z_oh> ng)] | [(ng <any_Cx_ng_y_z_oh>)]) (z | ((<any_Cx_ng_y_z_oh> ng) | (ng <any_Cx_ng_y_z_oh>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_ng_z_thr> thr)] | [(thr <any_Cx_ng_z_thr>)]) sil))

results =
{72 [{sil 0 13} {b 14 16} {iy 17 21} {k 22 31} {oh 32 55} {g 56 61} {ng 62 64} {ng 65 67} {g 68 78} {sil 79 95}]}
{80 [{sil 0 14} {b 15 18} {iy 19 23} {k 24 34} {oh 35 61} {g 62 68} {ng 69 71} {ng 72 74} {g 75 87} {sil 88 102}]}
{91 [{sil 0 16} {b 17 20} {iy 21 26} {k 27 38} {oh 39 69} {g 70 76} {ng 77 84} {g 85 99} {v 100 107} {sil 108 117}]}
{105 [{sil 0 19} {b 20 23} {iy 24 32} {k 33 45} {oh 46 82} {g 83 88} {ng 89 101} {b 102 108} {ae 109 122} {sil 123 136}]}
{125 [{sil 3 24} {b 25 28} {iy 29 41} {k 42 54} {oh 55 101} {l 102 113} {ng 114 120} {b 121 130} {ae 131 147} {sil 148 168}]}

normalised results =
{72 [{sil 0 13} {b 19 19} {iy 24 29} {k 31 43} {oh 44 76} {g 78 85} {ng 86 86} {ng 90 90} {g 94 108} {sil 110 132}]}
{80 [{sil 0 14} {b 19 23} {iy 24 29} {k 30 43} {oh 44 76} {g 78 85} {ng 86 86} {ng 90 90} {g 94 109} {sil 110 128}]}
{91 [{sil 0 16} {b 19 22} {iy 23 29} {k 30 42} {oh 43 76} {g 77 84} {ng 85 92} {g 93 109} {v 110 118} {sil 119 129}]}
{105 [{sil 0 19} {b 19 22} {iy 23 30} {k 31 43} {oh 44 78} {g 79 84} {ng 85 96} {b 97 103} {ae 104 116} {sil 117 130}]}
{125 [{sil 3 24} {b 20 22} {iy 23 33} {k 34 43} {oh 44 81} {l 82 90} {ng 91 96} {b 97 104} {ae 105 118} {sil 118 134}]}

ruleAligned = [{{b 0} [{1 1} {2 1} {3 1} {4 1}]} {{iy 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{k 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{oh 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{z 2} []} {{g 3} [{0 8} {1 8} {2 5} {3 5}]} {{ng 3} [{2 6} {3 6} {4 6}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {b 19 19} {iy 24 29} {k 31 43} {oh 44 76} {g 78 85} {ng 86 86} {ng 90 90} {g 94 108} {sil 110 110}]}
{80 [{sil 0 0} {b 19 23} {iy 24 29} {k 30 43} {oh 44 76} {g 78 85} {ng 86 86} {ng 90 90} {g 94 109} {sil 110 110}]}
{91 [{sil 0 0} {b 19 22} {iy 23 29} {k 30 42} {oh 43 76} {g 77 84} {ng 85 92} {g 93 109} {v 110 118} {sil 119 119}]}
{105 [{sil 0 0} {b 19 22} {iy 23 30} {k 31 43} {oh 44 78} {g 79 84} {ng 85 96} {b 97 103} {ae 104 116} {sil 117 117}]}
{125 [{sil 3 3} {b 20 22} {iy 23 33} {k 34 43} {oh 44 81} {l 82 90} {ng 91 96} {b 97 104} {ae 105 118} {sil 118 118}]}

timeAligned = [{{b 19 22} [{1 1} {2 1} {3 1} {4 1}]} {{iy 23 29} [{2 2} {3 2} {4 2} {0 2} {1 2}]} {{k 31 43} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{oh 44 76} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{g 78 84} [{0 5} {1 5} {2 5} {3 5}]} {{ng 91 92} [{2 6} {3 6} {4 6}]} {{g 94 108} [{0 8} {1 8} {2 7}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 22
i, iTime, newITime, timeStartFrom = 2 1 2 29
i, iTime, newITime, timeStartFrom = 3 2 3 42
i, iTime, newITime, timeStartFrom = 4 3 -1 76
i, iTime, newITime, timeStartFrom = 5 3 4 76
i, iTime, newITime, timeStartFrom = 6 3 5 76
combinedVerdict    = [{b 0} {iy 0} {k 0} {oh 0} {z 2} {g 3} {ng 3} {g 3}]
ruleAlignedVerdict = [{b 0} {iy 0} {k 0} {oh 0} {z 2} {g 3} {ng 3}]

score->
+1 for b
+1 for iy
+1 for k
+1 for oh
-1 for z
-1 for g
-1 for ng
-1 for g
score<-: 0

results =
{72 [{sil 0 11} {b 12 15} {ih 16 21} {k 22 31} {oh 32 55} {g 56 61} {ng 62 64} {ng 65 67} {g 68 78} {sil 79 95}]}
{80 [{sil 0 14} {b 15 17} {ih 18 24} {k 25 34} {oh 35 61} {g 62 68} {ng 69 71} {ng 72 74} {g 75 87} {sil 88 102}]}
{91 [{sil 0 16} {b 17 20} {ih 21 28} {k 29 38} {oh 39 69} {g 70 76} {ng 77 84} {g 85 99} {v 100 107} {sil 108 117}]}
{105 [{sil 0 19} {b 20 23} {ih 24 33} {k 34 45} {oh 46 87} {ng 88 98} {l 99 107} {ae 108 120} {v 121 123} {sil 124 136}]}
{125 [{sil 3 24} {b 25 29} {ih 30 41} {k 42 54} {oh 55 105} {ng 106 117} {g 118 145} {sil 146 168}]}

normalised results =
{72 [{sil 0 11} {b 17 21} {ih 22 29} {k 31 43} {oh 44 76} {g 78 85} {ng 86 86} {ng 90 90} {g 94 108} {sil 110 132}]}
{80 [{sil 0 14} {b 19 19} {ih 23 30} {k 31 43} {oh 44 76} {g 78 85} {ng 86 86} {ng 90 90} {g 94 109} {sil 110 128}]}
{91 [{sil 0 16} {b 19 22} {ih 23 31} {k 32 42} {oh 43 76} {g 77 84} {ng 85 92} {g 93 109} {v 110 118} {sil 119 129}]}
{105 [{sil 0 19} {b 19 22} {ih 23 31} {k 32 43} {oh 44 83} {ng 84 93} {l 94 102} {ae 103 114} {v 115 115} {sil 118 130}]}
{125 [{sil 3 24} {b 20 23} {ih 24 33} {k 34 43} {oh 44 84} {ng 85 94} {g 94 116} {sil 117 134}]}

ruleAligned = [{{b 0} [{0 1} {2 1} {3 1} {4 1}]} {{ih 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{k 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{oh 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{z 2} []} {{ng 3} [{2 6} {3 5} {4 5}]} {{g 3} [{0 8} {1 8} {2 5} {4 6}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {b 17 21} {ih 22 29} {k 31 43} {oh 44 76} {g 78 85} {ng 86 86} {ng 90 90} {g 94 108} {sil 110 110}]}
{80 [{sil 0 0} {b 19 19} {ih 23 30} {k 31 43} {oh 44 76} {g 78 85} {ng 86 86} {ng 90 90} {g 94 109} {sil 110 110}]}
{91 [{sil 0 0} {b 19 22} {ih 23 31} {k 32 42} {oh 43 76} {g 77 84} {ng 85 92} {g 93 109} {v 110 118} {sil 119 119}]}
{105 [{sil 0 0} {b 19 22} {ih 23 31} {k 32 43} {oh 44 83} {ng 84 93} {l 94 102} {ae 103 114} {v 115 115} {sil 118 118}]}
{125 [{sil 3 3} {b 20 23} {ih 24 33} {k 34 43} {oh 44 84} {ng 85 94} {g 94 116} {sil 117 117}]}

timeAligned = [{{b 19 22} [{0 1} {2 1} {3 1} {4 1}]} {{ih 23 31} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{k 32 43} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{oh 44 76} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{g 78 84} [{0 5} {1 5} {2 5}]} {{ng 85 92} [{2 6} {3 5} {4 5}]} {{g 94 109} [{0 8} {1 8} {2 7} {4 6}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 21
i, iTime, newITime, timeStartFrom = 2 1 2 29
i, iTime, newITime, timeStartFrom = 3 2 3 42
i, iTime, newITime, timeStartFrom = 4 3 -1 76
i, iTime, newITime, timeStartFrom = 5 3 5 76
i, iTime, newITime, timeStartFrom = 6 5 6 92
combinedVerdict    = [{b 0} {ih 0} {k 0} {oh 0} {z 2} {g 3} {ng 3} {g 3}]
ruleAlignedVerdict = [{b 0} {ih 0} {k 0} {oh 0} {z 2} {ng 3} {g 3}]

score->
+1 for b
+1 for ih
+1 for k
+1 for oh
-1 for z
-1 for g
-1 for ng
-1 for g
score<-: 0
bestResult = {0 [{b 0} {iy 0} {k 0} {oh 0} {z 2} {g 3} {ng 3} {g 3}] [b iy k oh z]}
testPronounce b good iy good k good oh good z missing g surprise ng surprise g surprise
publish->
phonsToAlphas = [{[b] b} {[iy] e} {[k] c} {[oh] au} {[z] se}]
getVerdict<-:new {b [b] 0}
getVerdict<-:new {e [iy] 0}
getVerdict<-:new {c [k] 0}
getVerdict<-:new {au [oh] 0}
getVerdict<-:new {se [z] 2}
lettersVerdicts = [{b [b] 0} {e [iy] 0} {c [k] 0} {au [oh] 0} {se [z] 2} {g [g] 3} {ng [ng] 3} {g [g] 3}]
publish<-
{
  "results": [
    {
      "letters": "b",
      "phonemes": "b",
      "verdict": "good"
    },
    {
      "letters": "e",
      "phonemes": "iː",
      "verdict": "good"
    },
    {
      "letters": "c",
      "phonemes": "k",
      "verdict": "good"
    },
    {
      "letters": "au",
      "phonemes": "ɒ",
      "verdict": "good"
    },
    {
      "letters": "se",
      "phonemes": "z",
      "verdict": "missing"
    },
    {
      "letters": "g",
      "phonemes": "g",
      "verdict": "surprise"
    },
    {
      "letters": "ng",
      "phonemes": "ŋ",
      "verdict": "surprise"
    },
    {
      "letters": "g",
      "phonemes": "g",
      "verdict": "surprise"
    }
  ],
  "err": null
}
