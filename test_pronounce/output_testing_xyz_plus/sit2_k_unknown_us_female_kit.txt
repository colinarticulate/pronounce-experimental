
 length of audio =  1.199125



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.38 0.56 0.9400000000000001

 start3, duration3, end3 =  0.52 0.28 0.8

 Initial start, duration, end =  0.28 0.66 0.9400000000000001

 Cut at: start, duration =  0.28 0.899125     guard_end =  1.179125 

Running scan for frate = 125
Considering guard z with value 0.8 for k ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 3 for t ...
candidateGuards = map[r:true]
Picking guard, r

frate, target rule = 125 public <kit> = (((sil [((d <any_Cx_k_d_b>) | (<any_Cx_k_d_b> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil b (sil [((d <any_Cx_k_d_b>) | (<any_Cx_k_d_b> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_z_b_d_k> z)] | [(z <any_Cx_z_b_d_k>)]) (k | d | ((<any_Cx_z_b_d_k> z) | (z <any_Cx_z_b_d_k>)))) ((([(<any_Vx_r_z_ih_noSlide> r)] | [(r <any_Vx_r_z_ih_noSlide>)]) ([(<any_Cx_r_z_t_k> r)] | [(r <any_Cx_r_z_t_k>)])) (ih | ((<any_Vx_r_z_ih_noSlide> r) | (r <any_Vx_r_z_ih_noSlide>)))) (([(<any_Cx_r_r_t> r)] | [(r <any_Cx_r_r_t>)]) (t | ((<any_Cx_r_r_t> r) | (r <any_Cx_r_r_t>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_r_t_p> p)] | [(p <any_Cx_r_t_p>)]) sil))
Running scan for frate = 105
Considering guard z with value 0.8 for k ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 3 for t ...
candidateGuards = map[r:true]
Picking guard, r

frate, target rule = 105 public <kit> = (((sil [((t <any_Cx_k_t_b>) | (<any_Cx_k_t_b> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil b (sil [((t <any_Cx_k_t_b>) | (<any_Cx_k_t_b> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_z_b_t_k> z)] | [(z <any_Cx_z_b_t_k>)]) (k | d | ((<any_Cx_z_b_t_k> z) | (z <any_Cx_z_b_t_k>)))) ((([(<any_Vx_r_z_ih_noSlide> r)] | [(r <any_Vx_r_z_ih_noSlide>)]) ([(<any_Cx_r_z_t_k> r)] | [(r <any_Cx_r_z_t_k>)])) (ih | ((<any_Vx_r_z_ih_noSlide> r) | (r <any_Vx_r_z_ih_noSlide>)))) (([(<any_Cx_r_r_t> r)] | [(r <any_Cx_r_r_t>)]) (t | ((<any_Cx_r_r_t> r) | (r <any_Cx_r_r_t>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_r_t_thr> thr)] | [(thr <any_Cx_r_t_thr>)]) sil))
Running scan for frate = 91
Considering guard z with value 0.8 for k ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 3 for t ...
candidateGuards = map[r:true]
Picking guard, r

frate, target rule = 91 public <kit> = (((sil [((ch <any_Cx_k_ch_b>) | (<any_Cx_k_ch_b> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil b (sil [((ch <any_Cx_k_ch_b>) | (<any_Cx_k_ch_b> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_z_b_ch_k> z)] | [(z <any_Cx_z_b_ch_k>)]) (k | d | ((<any_Cx_z_b_ch_k> z) | (z <any_Cx_z_b_ch_k>)))) ((([(<any_Vx_r_z_ih_noSlide> r)] | [(r <any_Vx_r_z_ih_noSlide>)]) ([(<any_Cx_r_z_t_k> r)] | [(r <any_Cx_r_z_t_k>)])) (ih | ((<any_Vx_r_z_ih_noSlide> r) | (r <any_Vx_r_z_ih_noSlide>)))) (([(<any_Cx_r_r_t> r)] | [(r <any_Cx_r_r_t>)]) (t | ((<any_Cx_r_r_t> r) | (r <any_Cx_r_r_t>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_r_t_d> d)] | [(d <any_Cx_r_t_d>)]) sil))
Running scan for frate = 80
Considering guard z with value 0.8 for k ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 3 for t ...
candidateGuards = map[r:true]
Picking guard, r

frate, target rule = 80 public <kit> = (((sil [((p <any_Cx_k_p_b>) | (<any_Cx_k_p_b> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]) | (sil b (sil [((p <any_Cx_k_p_b>) | (<any_Cx_k_p_b> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]))) (([(<any_Cx_z_b_p_k> z)] | [(z <any_Cx_z_b_p_k>)]) (k | d | ((<any_Cx_z_b_p_k> z) | (z <any_Cx_z_b_p_k>)))) ((([(<any_Vx_r_z_ih_noSlide> r)] | [(r <any_Vx_r_z_ih_noSlide>)]) ([(<any_Cx_r_z_t_k> r)] | [(r <any_Cx_r_z_t_k>)])) (ih | ((<any_Vx_r_z_ih_noSlide> r) | (r <any_Vx_r_z_ih_noSlide>)))) (([(<any_Cx_r_r_t> r)] | [(r <any_Cx_r_r_t>)]) (t | ((<any_Cx_r_r_t> r) | (r <any_Cx_r_r_t>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_r_t_g> g)] | [(g <any_Cx_r_t_g>)]) sil))
Running scan for frate = 72
Considering guard z with value 0.8 for k ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 3 for t ...
candidateGuards = map[r:true]
Picking guard, r

frate, target rule = 72 public <kit> = (((sil [((ch <any_Cx_k_ch_b>) | (<any_Cx_k_ch_b> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil b (sil [((ch <any_Cx_k_ch_b>) | (<any_Cx_k_ch_b> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_z_b_ch_k> z)] | [(z <any_Cx_z_b_ch_k>)]) (k | d | ((<any_Cx_z_b_ch_k> z) | (z <any_Cx_z_b_ch_k>)))) ((([(<any_Vx_r_z_ih_noSlide> r)] | [(r <any_Vx_r_z_ih_noSlide>)]) ([(<any_Cx_r_z_t_k> r)] | [(r <any_Cx_r_z_t_k>)])) (ih | ((<any_Vx_r_z_ih_noSlide> r) | (r <any_Vx_r_z_ih_noSlide>)))) (([(<any_Cx_r_r_t> r)] | [(r <any_Cx_r_r_t>)]) (t | ((<any_Cx_r_r_t> r) | (r <any_Cx_r_r_t>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_r_t_d> d)] | [(d <any_Cx_r_t_d>)]) sil))

results =
{72 [{sil 0 11} {z 12 20} {v 21 23} {ih 24 34} {t 35 50} {sil 51 59}]}
{80 [{sil 0 10} {g 11 13} {z 14 25} {ih 26 38} {t 39 55} {sil 56 65}]}
{91 [{sil 0 12} {g 13 15} {z 16 29} {ih 30 44} {t 45 63} {sil 64 80}]}
{105 [{sil 0 15} {g 16 18} {z 19 34} {ih 35 52} {t 53 72} {sil 73 89}]}
{125 [{sil 3 21} {z 22 40} {hh 41 46} {ih 47 63} {t 64 84} {sil 85 112}]}

normalised results =
{72 [{sil 0 11} {z 17 28} {v 29 29} {ih 33 47} {t 49 69} {sil 71 82}]}
{80 [{sil 0 10} {g 14 14} {z 18 31} {ih 33 48} {t 49 69} {sil 70 81}]}
{91 [{sil 0 12} {g 14 14} {z 18 32} {ih 33 48} {t 49 69} {sil 70 88}]}
{105 [{sil 0 15} {g 15 15} {z 18 32} {ih 33 50} {t 50 69} {sil 70 85}]}
{125 [{sil 3 21} {z 18 32} {hh 33 37} {ih 38 50} {t 51 67} {sil 68 90}]}

ruleAligned = [{{k 2} []} {{z 3} [{0 1} {1 2} {2 2} {3 2} {4 1}]} {{ih 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{t 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {z 17 28} {v 29 29} {ih 33 47} {t 49 69} {sil 71 71}]}
{80 [{sil 0 0} {g 14 14} {z 18 31} {ih 33 48} {t 49 69} {sil 70 70}]}
{91 [{sil 0 0} {g 14 14} {z 18 32} {ih 33 48} {t 49 69} {sil 70 70}]}
{105 [{sil 0 0} {g 15 15} {z 18 32} {ih 33 50} {t 50 69} {sil 70 70}]}
{125 [{sil 3 3} {z 18 32} {hh 33 37} {ih 38 50} {t 51 67} {sil 68 68}]}

timeAligned = [{{z 18 32} [{0 1} {1 2} {2 2} {3 2} {4 1}]} {{ih 33 48} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{t 49 69} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 -1 0
i, iTime, newITime, timeStartFrom = 1 0 0 0
i, iTime, newITime, timeStartFrom = 2 0 1 28
i, iTime, newITime, timeStartFrom = 3 1 2 47
combinedVerdict    = [{k 2} {z 3} {ih 0} {t 0}]
ruleAlignedVerdict = [{k 2} {z 3} {ih 0} {t 0}]

score->
-1 for k
-1 for z
+1 for ih
+1 for t
score<-: 0
bestResult = {0 [{k 2} {z 3} {ih 0} {t 0}] [k ih t]}
testPronounce k missing z surprise ih good t good
publish->
phonsToAlphas = [{[k] k} {[ih] i} {[t] t}]
getVerdict<-:new {k [k] 2}
getVerdict<-:new {i [ih] 0}
getVerdict<-:new {t [t] 0}
lettersVerdicts = [{k [k] 2} {z [z] 3} {i [ih] 0} {t [t] 0}]
publish<-
Total: 201.345941ms
{
  "results": [
    {
      "letters": "k",
      "phonemes": "k",
      "verdict": "missing"
    },
    {
      "letters": "z",
      "phonemes": "z",
      "verdict": "surprise"
    },
    {
      "letters": "i",
      "phonemes": "Éª",
      "verdict": "good"
    },
    {
      "letters": "t",
      "phonemes": "t",
      "verdict": "good"
    }
  ],
  "err": null
}
