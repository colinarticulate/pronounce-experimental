
 length of audio =  2.474312



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.5 0.9199999999999999 1.42

 start3, duration3, end3 =  0.52 0.48 1

 Initial start, duration, end =  0.4 1.02 1.42

 Cut at: start, duration =  0.4 1.47     guard_end =  1.87 

Running scan for frate = 125
Considering guard z with value 1 for r ...
Considering guard y with value 1 for r ...
candidateGuards = map[y:true z:true]
Picking guard, z

Considering guard y with value 2 for ah ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3.2 for sh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 1.6 for axr ...
candidateGuards = map[y:true]
Picking guard, y

frate, target rule = 125 public <russia> = (((sil [((hh <any_Cx_r_hh_p>) | (<any_Cx_r_hh_p> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil p (sil [((hh <any_Cx_r_hh_p>) | (<any_Cx_r_hh_p> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_z_p_hh_r> z)] | [(z <any_Cx_z_p_hh_r>)]) (r | l | w | ((<any_Cx_z_p_hh_r> z) | (z <any_Cx_z_p_hh_r>)))) ((([(<any_Vx_y_z_ah_noSlide> y)] | [(y <any_Vx_y_z_ah_noSlide>)]) ([(<any_Cx_y_z_sh_r> y)] | [(y <any_Cx_y_z_sh_r>)])) (ah | ((<any_Vx_y_z_ah_noSlide> y) | (y <any_Vx_y_z_ah_noSlide>)))) (([(<any_Cx_y_y_sh> y)] | [(y <any_Cx_y_y_sh>)]) (sh | ((<any_Cx_y_y_sh_axr> y) | (y <any_Cx_y_y_sh_axr>)))) (([(<any_Cx_y_y_axr_sh> y)] | [(y <any_Cx_y_y_axr_sh>)]) (axr | ((<any_Cx_y_y_axr_sh> y) | (y <any_Cx_y_y_axr_sh>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_y_axr_m> m)] | [(m <any_Cx_y_axr_m>)]) sil))
Running scan for frate = 105
Considering guard y with value 1 for r ...
Considering guard z with value 1 for r ...
candidateGuards = map[y:true z:true]
Picking guard, y

Considering guard y with value 2 for ah ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3.2 for sh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 1.6 for axr ...
candidateGuards = map[y:true]
Picking guard, y

frate, target rule = 105 public <russia> = (((sil [((m <any_Cx_r_m_p>) | (<any_Cx_r_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]) | (sil p (sil [((m <any_Cx_r_m_p>) | (<any_Cx_r_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]))) (([(<any_Cx_y_p_m_r> y)] | [(y <any_Cx_y_p_m_r>)]) (r | l | w | ((<any_Cx_y_p_m_r> y) | (y <any_Cx_y_p_m_r>)))) ((([(<any_Vx_y_y_ah_noSlide> y)] | [(y <any_Vx_y_y_ah_noSlide>)]) ([(<any_Cx_y_y_sh_r> y)] | [(y <any_Cx_y_y_sh_r>)])) (ah | ((<any_Vx_y_y_ah_noSlide> y) | (y <any_Vx_y_y_ah_noSlide>)))) (([(<any_Cx_y_y_sh> y)] | [(y <any_Cx_y_y_sh>)]) (sh | ((<any_Cx_y_y_sh_axr> y) | (y <any_Cx_y_y_sh_axr>)))) (([(<any_Cx_y_y_axr_sh> y)] | [(y <any_Cx_y_y_axr_sh>)]) (axr | ((<any_Cx_y_y_axr_sh> y) | (y <any_Cx_y_y_axr_sh>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_y_axr_n> n)] | [(n <any_Cx_y_axr_n>)]) sil))
Running scan for frate = 91
Considering guard y with value 1 for r ...
Considering guard z with value 1 for r ...
candidateGuards = map[y:true z:true]
Picking guard, y

Considering guard y with value 2 for ah ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3.2 for sh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 1.6 for axr ...
candidateGuards = map[y:true]
Picking guard, y

frate, target rule = 91 public <russia> = (((sil [((hh <any_Cx_r_hh_p>) | (<any_Cx_r_hh_p> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil p (sil [((hh <any_Cx_r_hh_p>) | (<any_Cx_r_hh_p> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_y_p_hh_r> y)] | [(y <any_Cx_y_p_hh_r>)]) (r | l | w | ((<any_Cx_y_p_hh_r> y) | (y <any_Cx_y_p_hh_r>)))) ((([(<any_Vx_y_y_ah_noSlide> y)] | [(y <any_Vx_y_y_ah_noSlide>)]) ([(<any_Cx_y_y_sh_r> y)] | [(y <any_Cx_y_y_sh_r>)])) (ah | ((<any_Vx_y_y_ah_noSlide> y) | (y <any_Vx_y_y_ah_noSlide>)))) (([(<any_Cx_y_y_sh> y)] | [(y <any_Cx_y_y_sh>)]) (sh | ((<any_Cx_y_y_sh_axr> y) | (y <any_Cx_y_y_sh_axr>)))) (([(<any_Cx_y_y_axr_sh> y)] | [(y <any_Cx_y_y_axr_sh>)]) (axr | ((<any_Cx_y_y_axr_sh> y) | (y <any_Cx_y_y_axr_sh>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_y_axr_m> m)] | [(m <any_Cx_y_axr_m>)]) sil))
Running scan for frate = 80
Considering guard y with value 1 for r ...
Considering guard z with value 1 for r ...
candidateGuards = map[y:true z:true]
Picking guard, y

Considering guard y with value 2 for ah ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3.2 for sh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 1.6 for axr ...
candidateGuards = map[y:true]
Picking guard, y

frate, target rule = 80 public <russia> = (((sil [((hh <any_Cx_r_hh_p>) | (<any_Cx_r_hh_p> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil p (sil [((hh <any_Cx_r_hh_p>) | (<any_Cx_r_hh_p> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_y_p_hh_r> y)] | [(y <any_Cx_y_p_hh_r>)]) (r | l | w | ((<any_Cx_y_p_hh_r> y) | (y <any_Cx_y_p_hh_r>)))) ((([(<any_Vx_y_y_ah_noSlide> y)] | [(y <any_Vx_y_y_ah_noSlide>)]) ([(<any_Cx_y_y_sh_r> y)] | [(y <any_Cx_y_y_sh_r>)])) (ah | ((<any_Vx_y_y_ah_noSlide> y) | (y <any_Vx_y_y_ah_noSlide>)))) (([(<any_Cx_y_y_sh> y)] | [(y <any_Cx_y_y_sh>)]) (sh | ((<any_Cx_y_y_sh_axr> y) | (y <any_Cx_y_y_sh_axr>)))) (([(<any_Cx_y_y_axr_sh> y)] | [(y <any_Cx_y_y_axr_sh>)]) (axr | ((<any_Cx_y_y_axr_sh> y) | (y <any_Cx_y_y_axr_sh>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_y_axr_n> n)] | [(n <any_Cx_y_axr_n>)]) sil))
Running scan for frate = 72
Considering guard y with value 1 for r ...
Considering guard z with value 1 for r ...
candidateGuards = map[y:true z:true]
Picking guard, y

Considering guard y with value 2 for ah ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3.2 for sh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 1.6 for axr ...
candidateGuards = map[y:true]
Picking guard, y

frate, target rule = 72 public <russia> = (((sil [((m <any_Cx_r_m_p>) | (<any_Cx_r_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]) | (sil p (sil [((m <any_Cx_r_m_p>) | (<any_Cx_r_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]))) (([(<any_Cx_y_p_m_r> y)] | [(y <any_Cx_y_p_m_r>)]) (r | l | w | ((<any_Cx_y_p_m_r> y) | (y <any_Cx_y_p_m_r>)))) ((([(<any_Vx_y_y_ah_noSlide> y)] | [(y <any_Vx_y_y_ah_noSlide>)]) ([(<any_Cx_y_y_sh_r> y)] | [(y <any_Cx_y_y_sh_r>)])) (ah | ((<any_Vx_y_y_ah_noSlide> y) | (y <any_Vx_y_y_ah_noSlide>)))) (([(<any_Cx_y_y_sh> y)] | [(y <any_Cx_y_y_sh>)]) (sh | ((<any_Cx_y_y_sh_axr> y) | (y <any_Cx_y_y_sh_axr>)))) (([(<any_Cx_y_y_axr_sh> y)] | [(y <any_Cx_y_y_axr_sh>)]) (axr | ((<any_Cx_y_y_axr_sh> y) | (y <any_Cx_y_y_axr_sh>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_y_axr_m> m)] | [(m <any_Cx_y_axr_m>)]) sil))

results =
{72 [{sil 0 11} {w 12 25} {ah 26 33} {sh 34 47} {axr 48 63} {sil 64 73}]}
{80 [{sil 0 12} {w 13 27} {ah 28 36} {sh 37 52} {axr 53 68} {sil 69 78}]}
{91 [{sil 0 15} {w 16 31} {ah 32 42} {sh 43 60} {axr 61 84} {sil 85 132}]}
{105 [{sil 0 18} {w 19 36} {ah 37 48} {sh 49 69} {axr 70 96} {sil 97 153}]}
{125 [{sil 3 23} {w 24 45} {ah 46 58} {sh 59 82} {axr 83 114} {sil 115 183}]}

normalised results =
{72 [{sil 0 11} {w 17 35} {ah 36 46} {sh 47 65} {axr 67 88} {sil 89 101}]}
{80 [{sil 0 12} {w 16 34} {ah 35 45} {sh 46 65} {axr 66 85} {sil 86 98}]}
{91 [{sil 0 15} {w 18 34} {ah 35 46} {sh 47 66} {axr 67 92} {sil 93 145}]}
{105 [{sil 0 18} {w 18 34} {ah 35 46} {sh 47 66} {axr 67 91} {sil 92 146}]}
{125 [{sil 3 23} {w 19 36} {ah 37 46} {sh 47 66} {axr 66 91} {sil 92 146}]}

ruleAligned = [{{r 2} []} {{w 3} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ah 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{sh 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{axr 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {w 17 35} {ah 36 46} {sh 47 65} {axr 67 88} {sil 89 89}]}
{80 [{sil 0 0} {w 16 34} {ah 35 45} {sh 46 65} {axr 66 85} {sil 86 86}]}
{91 [{sil 0 0} {w 18 34} {ah 35 46} {sh 47 66} {axr 67 92} {sil 93 93}]}
{105 [{sil 0 0} {w 18 34} {ah 35 46} {sh 47 66} {axr 67 91} {sil 92 92}]}
{125 [{sil 3 3} {w 19 36} {ah 37 46} {sh 47 66} {axr 66 91} {sil 92 92}]}

timeAligned = [{{w 18 34} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ah 35 46} [{1 2} {2 2} {3 2} {0 2} {4 2}]} {{sh 47 66} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{axr 67 91} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 -1 0
i, iTime, newITime, timeStartFrom = 1 0 0 0
i, iTime, newITime, timeStartFrom = 2 0 1 34
i, iTime, newITime, timeStartFrom = 3 1 2 45
i, iTime, newITime, timeStartFrom = 4 2 3 65
combinedVerdict    = [{r 2} {w 3} {ah 0} {sh 0} {axr 0}]
ruleAlignedVerdict = [{r 2} {w 3} {ah 0} {sh 0} {axr 0}]

score->
-1 for r
-1 for w
+1 for ah
+1 for sh
+1 for axr
score<-: 1
bestResult = {1 [{r 2} {w 3} {ah 0} {sh 0} {axr 0}] [r ah sh axr]}
testPronounce r missing w surprise ah good sh good axr good
publish->
phonsToAlphas = [{[r] r} {[ah] u} {[sh] ssi} {[axr] a}]
getVerdict<-:new {r [r] 2}
getVerdict<-:new {u [ah] 0}
getVerdict<-:new {ssi [sh] 0}
getVerdict<-:new {a [axr] 0}
lettersVerdicts = [{r [r] 2} {w [w] 3} {u [ah] 0} {ssi [sh] 0} {a [axr] 0}]
publish<-
Total: 255.153096ms
{
  "results": [
    {
      "letters": "r",
      "phonemes": "ɹ",
      "verdict": "missing"
    },
    {
      "letters": "w",
      "phonemes": "w",
      "verdict": "surprise"
    },
    {
      "letters": "u",
      "phonemes": "ʌ",
      "verdict": "good"
    },
    {
      "letters": "ssi",
      "phonemes": "ʃ",
      "verdict": "good"
    },
    {
      "letters": "a",
      "phonemes": "əɹ",
      "verdict": "good"
    }
  ],
  "err": null
}
