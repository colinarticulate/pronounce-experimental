
 length of audio =  1.170187



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.44000000000000006 0.52 0.9600000000000001

 start3, duration3, end3 =  0.44000000000000006 0.44000000000000006 0.8800000000000001

 Initial start, duration, end =  0.3400000000000001 0.62 0.9600000000000001

 Cut at: start, duration =  0.3400000000000001 0.810187     guard_end =  1.150187 

Running scan for frate = 125
Running scan for frate = 125
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 125
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard y with value 7.199999999999999 for ae ...
candidateGuards = map[y:true]
Picking guard, y

Running scan for frate = 125
Considering guard y with value 7.199999999999999 for ae ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard ao with value 4 for s ...
Considering guard ng with value 4 for s ...
candidateGuards = map[ao:true ng:true]
Picking guard, ao

Considering guard ng with value 1.8 for st ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard oy with value 1 for t ...
Considering guard aa with value 1 for t ...
candidateGuards = map[aa:true oy:true]
Picking guard, oy

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 125 public <last> = (((sil [((z <any_Cx_l_z_p>) | (<any_Cx_l_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_l_z_p>) | (<any_Cx_l_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_l> sh)] | [(sh <any_Cx_sh_p_z_l>)]) (l | ((<any_Cx_sh_p_z_l> sh) | (sh <any_Cx_sh_p_z_l>)))) ((([(<any_Vx_y_sh_ae_noSlide> y)] | [(y <any_Vx_y_sh_ae_noSlide>)]) ([(<any_Cx_y_sh_st_l> y)] | [(y <any_Cx_y_sh_st_l>)])) (ae | ((<any_Vx_y_sh_ae_noSlide> y) | (y <any_Vx_y_sh_ae_noSlide>)))) (([(<any_Cx_ng_y_st> ng)] | [(ng <any_Cx_ng_y_st>)]) (st | ((<any_Cx_ng_y_st> ng) | (ng <any_Cx_ng_y_st>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_ng_st_hh> hh)] | [(hh <any_Cx_ng_st_hh>)]) sil))
Considering guard y with value 7.199999999999999 for aa ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 7.199999999999999 for aa ...
candidateGuards = map[y:true]
Picking guard, y

frate, target rule = 125 public <last> = (((sil [((m <any_Cx_l_m_p>) | (<any_Cx_l_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]) | (sil p (sil [((m <any_Cx_l_m_p>) | (<any_Cx_l_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]))) (([(<any_Cx_sh_p_m_l> sh)] | [(sh <any_Cx_sh_p_m_l>)]) (l | ((<any_Cx_sh_p_m_l> sh) | (sh <any_Cx_sh_p_m_l>)))) ((([(<any_Vx_y_sh_ae_noSlide> y)] | [(y <any_Vx_y_sh_ae_noSlide>)]) ([(<any_Cx_y_sh_s_l> y)] | [(y <any_Cx_y_sh_s_l>)])) (ae | ((<any_Vx_y_sh_ae_noSlide> y) | (y <any_Vx_y_sh_ae_noSlide>)))) (([(<any_Cx_ao_y_s> ao)] | [(ao <any_Cx_ao_y_s>)]) (s | ((<any_Cx_ao_y_s_t> ao) | (ao <any_Cx_ao_y_s_t>)))) (([(<any_Cx_oy_ao_t_s> oy)] | [(oy <any_Cx_oy_ao_t_s>)]) (t | ((<any_Cx_oy_ao_t_s> oy) | (oy <any_Cx_oy_ao_t_s>)))) (([(<any_vowel_noSlide> k)] | [(k <any_vowel_noSlide>)]) ([(<any_Cx_oy_t_k> k)] | [(k <any_Cx_oy_t_k>)]) sil))
Considering guard ng with value 1.7999999999999998 for st ...
candidateGuards = map[ng:true]
Picking guard, ng

Running scan for frate = 105
Considering guard ng with value 4 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 105
frate, target rule = 125 public <last> = (((sil [((z <any_Cx_l_z_p>) | (<any_Cx_l_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_l_z_p>) | (<any_Cx_l_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_l> sh)] | [(sh <any_Cx_sh_p_z_l>)]) (l | ((<any_Cx_sh_p_z_l> sh) | (sh <any_Cx_sh_p_z_l>)))) ((([(<any_Vx_y_sh_aa_noSlide> y)] | [(y <any_Vx_y_sh_aa_noSlide>)]) ([(<any_Cx_y_sh_st_l> y)] | [(y <any_Cx_y_sh_st_l>)])) (aa | ((<any_Vx_y_sh_aa_noSlide> y) | (y <any_Vx_y_sh_aa_noSlide>)))) (([(<any_Cx_ng_y_st> ng)] | [(ng <any_Cx_ng_y_st>)]) (st | ((<any_Cx_ng_y_st> ng) | (ng <any_Cx_ng_y_st>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_ng_st_ng> ng)] | [(ng <any_Cx_ng_st_ng>)]) sil))
Considering guard oy with value 1 for t ...
Considering guard aa with value 1 for t ...
candidateGuards = map[aa:true oy:true]
Picking guard, oy

Considering guard y with value 7.199999999999999 for ae ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ng with value 1.8 for st ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 125 public <last> = (((sil [((m <any_Cx_l_m_p>) | (<any_Cx_l_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]) | (sil p (sil [((m <any_Cx_l_m_p>) | (<any_Cx_l_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]))) (([(<any_Cx_sh_p_m_l> sh)] | [(sh <any_Cx_sh_p_m_l>)]) (l | ((<any_Cx_sh_p_m_l> sh) | (sh <any_Cx_sh_p_m_l>)))) ((([(<any_Vx_y_sh_aa_noSlide> y)] | [(y <any_Vx_y_sh_aa_noSlide>)]) ([(<any_Cx_y_sh_s_l> y)] | [(y <any_Cx_y_sh_s_l>)])) (aa | ((<any_Vx_y_sh_aa_noSlide> y) | (y <any_Vx_y_sh_aa_noSlide>)))) (([(<any_Cx_ng_y_s> ng)] | [(ng <any_Cx_ng_y_s>)]) (s | ((<any_Cx_ng_y_s_t> ng) | (ng <any_Cx_ng_y_s_t>)))) (([(<any_Cx_oy_ng_t_s> oy)] | [(oy <any_Cx_oy_ng_t_s>)]) (t | ((<any_Cx_oy_ng_t_s> oy) | (oy <any_Cx_oy_ng_t_s>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_oy_t_d> d)] | [(d <any_Cx_oy_t_d>)]) sil))
Running scan for frate = 105
Considering guard y with value 7.199999999999999 for ae ...
candidateGuards = map[y:true]
Picking guard, y

frate, target rule = 105 public <last> = (((sil [((w <any_Cx_l_w_p>) | (<any_Cx_l_w_p> w))] [((w <any_vowel_noSlide>) | (<any_vowel_noSlide> w))]) | (sil p (sil [((w <any_Cx_l_w_p>) | (<any_Cx_l_w_p> w))] [((w <any_vowel_noSlide>) | (<any_vowel_noSlide> w))]))) (([(<any_Cx_sh_p_w_l> sh)] | [(sh <any_Cx_sh_p_w_l>)]) (l | ((<any_Cx_sh_p_w_l> sh) | (sh <any_Cx_sh_p_w_l>)))) ((([(<any_Vx_y_sh_ae_noSlide> y)] | [(y <any_Vx_y_sh_ae_noSlide>)]) ([(<any_Cx_y_sh_st_l> y)] | [(y <any_Cx_y_sh_st_l>)])) (ae | ((<any_Vx_y_sh_ae_noSlide> y) | (y <any_Vx_y_sh_ae_noSlide>)))) (([(<any_Cx_ng_y_st> ng)] | [(ng <any_Cx_ng_y_st>)]) (st | ((<any_Cx_ng_y_st> ng) | (ng <any_Cx_ng_y_st>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_ng_st_n> n)] | [(n <any_Cx_ng_st_n>)]) sil))
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 105
Considering guard ao with value 4 for s ...
Considering guard ng with value 4 for s ...
candidateGuards = map[ao:true ng:true]
Picking guard, ao

Running scan for frate = 91
Considering guard y with value 7.199999999999999 for aa ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard aa with value 1 for t ...
Considering guard oy with value 1 for t ...
candidateGuards = map[aa:true oy:true]
Picking guard, oy

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard y with value 7.199999999999999 for ae ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 7.199999999999999 for aa ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard ng with value 1.8 for st ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 91 public <last> = (((sil [((m <any_Cx_l_m_p>) | (<any_Cx_l_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]) | (sil p (sil [((m <any_Cx_l_m_p>) | (<any_Cx_l_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]))) (([(<any_Cx_sh_p_m_l> sh)] | [(sh <any_Cx_sh_p_m_l>)]) (l | ((<any_Cx_sh_p_m_l> sh) | (sh <any_Cx_sh_p_m_l>)))) ((([(<any_Vx_y_sh_ae_noSlide> y)] | [(y <any_Vx_y_sh_ae_noSlide>)]) ([(<any_Cx_y_sh_st_l> y)] | [(y <any_Cx_y_sh_st_l>)])) (ae | ((<any_Vx_y_sh_ae_noSlide> y) | (y <any_Vx_y_sh_ae_noSlide>)))) (([(<any_Cx_ng_y_st> ng)] | [(ng <any_Cx_ng_y_st>)]) (st | ((<any_Cx_ng_y_st> ng) | (ng <any_Cx_ng_y_st>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_ng_st_hh> hh)] | [(hh <any_Cx_ng_st_hh>)]) sil))
Considering guard ng with value 4 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 105 public <last> = (((sil [((m <any_Cx_l_m_p>) | (<any_Cx_l_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]) | (sil p (sil [((m <any_Cx_l_m_p>) | (<any_Cx_l_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]))) (([(<any_Cx_sh_p_m_l> sh)] | [(sh <any_Cx_sh_p_m_l>)]) (l | ((<any_Cx_sh_p_m_l> sh) | (sh <any_Cx_sh_p_m_l>)))) ((([(<any_Vx_y_sh_ae_noSlide> y)] | [(y <any_Vx_y_sh_ae_noSlide>)]) ([(<any_Cx_y_sh_s_l> y)] | [(y <any_Cx_y_sh_s_l>)])) (ae | ((<any_Vx_y_sh_ae_noSlide> y) | (y <any_Vx_y_sh_ae_noSlide>)))) (([(<any_Cx_ao_y_s> ao)] | [(ao <any_Cx_ao_y_s>)]) (s | ((<any_Cx_ao_y_s_t> ao) | (ao <any_Cx_ao_y_s_t>)))) (([(<any_Cx_oy_ao_t_s> oy)] | [(oy <any_Cx_oy_ao_t_s>)]) (t | ((<any_Cx_oy_ao_t_s> oy) | (oy <any_Cx_oy_ao_t_s>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_oy_t_g> g)] | [(g <any_Cx_oy_t_g>)]) sil))
Considering guard ng with value 1.7999999999999998 for st ...
candidateGuards = map[ng:true]
Picking guard, ng

Running scan for frate = 80
Considering guard aa with value 1 for t ...
Considering guard oy with value 1 for t ...
candidateGuards = map[aa:true oy:true]
Picking guard, aa

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 91
Considering guard y with value 7.199999999999999 for ae ...
candidateGuards = map[y:true]
Picking guard, y

frate, target rule = 105 public <last> = (((sil [((v <any_Cx_l_v_p>) | (<any_Cx_l_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]) | (sil p (sil [((v <any_Cx_l_v_p>) | (<any_Cx_l_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]))) (([(<any_Cx_sh_p_v_l> sh)] | [(sh <any_Cx_sh_p_v_l>)]) (l | ((<any_Cx_sh_p_v_l> sh) | (sh <any_Cx_sh_p_v_l>)))) ((([(<any_Vx_y_sh_aa_noSlide> y)] | [(y <any_Vx_y_sh_aa_noSlide>)]) ([(<any_Cx_y_sh_s_l> y)] | [(y <any_Cx_y_sh_s_l>)])) (aa | ((<any_Vx_y_sh_aa_noSlide> y) | (y <any_Vx_y_sh_aa_noSlide>)))) (([(<any_Cx_ng_y_s> ng)] | [(ng <any_Cx_ng_y_s>)]) (s | ((<any_Cx_ng_y_s_t> ng) | (ng <any_Cx_ng_y_s_t>)))) (([(<any_Cx_aa_ng_t_s> aa)] | [(aa <any_Cx_aa_ng_t_s>)]) (t | ((<any_Cx_aa_ng_t_s> aa) | (aa <any_Cx_aa_ng_t_s>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_aa_t_p> p)] | [(p <any_Cx_aa_t_p>)]) sil))
Considering guard ng with value 1.8 for st ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 80 public <last> = (((sil [((m <any_Cx_l_m_p>) | (<any_Cx_l_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]) | (sil p (sil [((m <any_Cx_l_m_p>) | (<any_Cx_l_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]))) (([(<any_Cx_sh_p_m_l> sh)] | [(sh <any_Cx_sh_p_m_l>)]) (l | ((<any_Cx_sh_p_m_l> sh) | (sh <any_Cx_sh_p_m_l>)))) ((([(<any_Vx_y_sh_ae_noSlide> y)] | [(y <any_Vx_y_sh_ae_noSlide>)]) ([(<any_Cx_y_sh_st_l> y)] | [(y <any_Cx_y_sh_st_l>)])) (ae | ((<any_Vx_y_sh_ae_noSlide> y) | (y <any_Vx_y_sh_ae_noSlide>)))) (([(<any_Cx_ng_y_st> ng)] | [(ng <any_Cx_ng_y_st>)]) (st | ((<any_Cx_ng_y_st> ng) | (ng <any_Cx_ng_y_st>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_ng_st_ng> ng)] | [(ng <any_Cx_ng_st_ng>)]) sil))
Considering guard y with value 7.199999999999999 for ae ...
candidateGuards = map[y:true]
Picking guard, y

Running scan for frate = 91
Running scan for frate = 72
frate, target rule = 105 public <last> = (((sil [((w <any_Cx_l_w_p>) | (<any_Cx_l_w_p> w))] [((w <any_vowel_noSlide>) | (<any_vowel_noSlide> w))]) | (sil p (sil [((w <any_Cx_l_w_p>) | (<any_Cx_l_w_p> w))] [((w <any_vowel_noSlide>) | (<any_vowel_noSlide> w))]))) (([(<any_Cx_sh_p_w_l> sh)] | [(sh <any_Cx_sh_p_w_l>)]) (l | ((<any_Cx_sh_p_w_l> sh) | (sh <any_Cx_sh_p_w_l>)))) ((([(<any_Vx_y_sh_aa_noSlide> y)] | [(y <any_Vx_y_sh_aa_noSlide>)]) ([(<any_Cx_y_sh_st_l> y)] | [(y <any_Cx_y_sh_st_l>)])) (aa | ((<any_Vx_y_sh_aa_noSlide> y) | (y <any_Vx_y_sh_aa_noSlide>)))) (([(<any_Cx_ng_y_st> ng)] | [(ng <any_Cx_ng_y_st>)]) (st | ((<any_Cx_ng_y_st> ng) | (ng <any_Cx_ng_y_st>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_ng_st_thr> thr)] | [(thr <any_Cx_ng_st_thr>)]) sil))
Considering guard ng with value 4 for s ...
Considering guard ao with value 4 for s ...
candidateGuards = map[ao:true ng:true]
Picking guard, ng

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 91
Considering guard y with value 7.199999999999999 for ae ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard y with value 7.199999999999999 for aa ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard ng with value 1.8 for st ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard y with value 7.199999999999999 for aa ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard ng with value 4 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 1.7999999999999998 for st ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 72 public <last> = (((sil [((z <any_Cx_l_z_p>) | (<any_Cx_l_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_l_z_p>) | (<any_Cx_l_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_l> sh)] | [(sh <any_Cx_sh_p_z_l>)]) (l | ((<any_Cx_sh_p_z_l> sh) | (sh <any_Cx_sh_p_z_l>)))) ((([(<any_Vx_y_sh_ae_noSlide> y)] | [(y <any_Vx_y_sh_ae_noSlide>)]) ([(<any_Cx_y_sh_st_l> y)] | [(y <any_Cx_y_sh_st_l>)])) (ae | ((<any_Vx_y_sh_ae_noSlide> y) | (y <any_Vx_y_sh_ae_noSlide>)))) (([(<any_Cx_ng_y_st> ng)] | [(ng <any_Cx_ng_y_st>)]) (st | ((<any_Cx_ng_y_st> ng) | (ng <any_Cx_ng_y_st>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_ng_st_hh> hh)] | [(hh <any_Cx_ng_st_hh>)]) sil))
frate, target rule = 91 public <last> = (((sil [((v <any_Cx_l_v_p>) | (<any_Cx_l_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]) | (sil p (sil [((v <any_Cx_l_v_p>) | (<any_Cx_l_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]))) (([(<any_Cx_sh_p_v_l> sh)] | [(sh <any_Cx_sh_p_v_l>)]) (l | ((<any_Cx_sh_p_v_l> sh) | (sh <any_Cx_sh_p_v_l>)))) ((([(<any_Vx_y_sh_aa_noSlide> y)] | [(y <any_Vx_y_sh_aa_noSlide>)]) ([(<any_Cx_y_sh_st_l> y)] | [(y <any_Cx_y_sh_st_l>)])) (aa | ((<any_Vx_y_sh_aa_noSlide> y) | (y <any_Vx_y_sh_aa_noSlide>)))) (([(<any_Cx_ng_y_st> ng)] | [(ng <any_Cx_ng_y_st>)]) (st | ((<any_Cx_ng_y_st> ng) | (ng <any_Cx_ng_y_st>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_ng_st_f> f)] | [(f <any_Cx_ng_st_f>)]) sil))
Considering guard aa with value 1 for t ...
Considering guard oy with value 1 for t ...
candidateGuards = map[aa:true oy:true]
Picking guard, aa

Considering guard oy with value 1 for t ...
Considering guard aa with value 1 for t ...
candidateGuards = map[aa:true oy:true]
Picking guard, oy

Running scan for frate = 80
frate, target rule = 91 public <last> = (((sil [((r <any_Cx_l_r_p>) | (<any_Cx_l_r_p> r))] [((r <any_vowel_noSlide>) | (<any_vowel_noSlide> r))]) | (sil p (sil [((r <any_Cx_l_r_p>) | (<any_Cx_l_r_p> r))] [((r <any_vowel_noSlide>) | (<any_vowel_noSlide> r))]))) (([(<any_Cx_sh_p_r_l> sh)] | [(sh <any_Cx_sh_p_r_l>)]) (l | ((<any_Cx_sh_p_r_l> sh) | (sh <any_Cx_sh_p_r_l>)))) ((([(<any_Vx_y_sh_ae_noSlide> y)] | [(y <any_Vx_y_sh_ae_noSlide>)]) ([(<any_Cx_y_sh_s_l> y)] | [(y <any_Cx_y_sh_s_l>)])) (ae | ((<any_Vx_y_sh_ae_noSlide> y) | (y <any_Vx_y_sh_ae_noSlide>)))) (([(<any_Cx_ng_y_s> ng)] | [(ng <any_Cx_ng_y_s>)]) (s | ((<any_Cx_ng_y_s_t> ng) | (ng <any_Cx_ng_y_s_t>)))) (([(<any_Cx_oy_ng_t_s> oy)] | [(oy <any_Cx_oy_ng_t_s>)]) (t | ((<any_Cx_oy_ng_t_s> oy) | (oy <any_Cx_oy_ng_t_s>)))) (([(<any_vowel_noSlide> ch)] | [(ch <any_vowel_noSlide>)]) ([(<any_Cx_oy_t_ch> ch)] | [(ch <any_Cx_oy_t_ch>)]) sil))
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 91 public <last> = (((sil [((z <any_Cx_l_z_p>) | (<any_Cx_l_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_l_z_p>) | (<any_Cx_l_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_l> sh)] | [(sh <any_Cx_sh_p_z_l>)]) (l | ((<any_Cx_sh_p_z_l> sh) | (sh <any_Cx_sh_p_z_l>)))) ((([(<any_Vx_y_sh_aa_noSlide> y)] | [(y <any_Vx_y_sh_aa_noSlide>)]) ([(<any_Cx_y_sh_s_l> y)] | [(y <any_Cx_y_sh_s_l>)])) (aa | ((<any_Vx_y_sh_aa_noSlide> y) | (y <any_Vx_y_sh_aa_noSlide>)))) (([(<any_Cx_ng_y_s> ng)] | [(ng <any_Cx_ng_y_s>)]) (s | ((<any_Cx_ng_y_s_t> ng) | (ng <any_Cx_ng_y_s_t>)))) (([(<any_Cx_aa_ng_t_s> aa)] | [(aa <any_Cx_aa_ng_t_s>)]) (t | ((<any_Cx_aa_ng_t_s> aa) | (aa <any_Cx_aa_ng_t_s>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_aa_t_g> g)] | [(g <any_Cx_aa_t_g>)]) sil))
Considering guard y with value 7.199999999999999 for aa ...
candidateGuards = map[y:true]
Picking guard, y

Running scan for frate = 80
Considering guard ng with value 1.7999999999999998 for st ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 80
frate, target rule = 80 public <last> = (((sil [((m <any_Cx_l_m_p>) | (<any_Cx_l_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]) | (sil p (sil [((m <any_Cx_l_m_p>) | (<any_Cx_l_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]))) (([(<any_Cx_sh_p_m_l> sh)] | [(sh <any_Cx_sh_p_m_l>)]) (l | ((<any_Cx_sh_p_m_l> sh) | (sh <any_Cx_sh_p_m_l>)))) ((([(<any_Vx_y_sh_aa_noSlide> y)] | [(y <any_Vx_y_sh_aa_noSlide>)]) ([(<any_Cx_y_sh_st_l> y)] | [(y <any_Cx_y_sh_st_l>)])) (aa | ((<any_Vx_y_sh_aa_noSlide> y) | (y <any_Vx_y_sh_aa_noSlide>)))) (([(<any_Cx_ng_y_st> ng)] | [(ng <any_Cx_ng_y_st>)]) (st | ((<any_Cx_ng_y_st> ng) | (ng <any_Cx_ng_y_st>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_ng_st_m> m)] | [(m <any_Cx_ng_st_m>)]) sil))
Running scan for frate = 72
Considering guard y with value 7.199999999999999 for ae ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ao with value 4 for s ...
Considering guard ng with value 4 for s ...
candidateGuards = map[ao:true ng:true]
Picking guard, ng

Considering guard y with value 7.199999999999999 for aa ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 7.199999999999999 for aa ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard ng with value 1.7999999999999998 for st ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard oy with value 1 for t ...
Considering guard aa with value 1 for t ...
candidateGuards = map[aa:true oy:true]
Picking guard, oy

frate, target rule = 72 public <last> = (((sil [((v <any_Cx_l_v_p>) | (<any_Cx_l_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]) | (sil p (sil [((v <any_Cx_l_v_p>) | (<any_Cx_l_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]))) (([(<any_Cx_sh_p_v_l> sh)] | [(sh <any_Cx_sh_p_v_l>)]) (l | ((<any_Cx_sh_p_v_l> sh) | (sh <any_Cx_sh_p_v_l>)))) ((([(<any_Vx_y_sh_aa_noSlide> y)] | [(y <any_Vx_y_sh_aa_noSlide>)]) ([(<any_Cx_y_sh_st_l> y)] | [(y <any_Cx_y_sh_st_l>)])) (aa | ((<any_Vx_y_sh_aa_noSlide> y) | (y <any_Vx_y_sh_aa_noSlide>)))) (([(<any_Cx_ng_y_st> ng)] | [(ng <any_Cx_ng_y_st>)]) (st | ((<any_Cx_ng_y_st> ng) | (ng <any_Cx_ng_y_st>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_ng_st_p> p)] | [(p <any_Cx_ng_st_p>)]) sil))
frate, target rule = 80 public <last> = (((sil [((w <any_Cx_l_w_p>) | (<any_Cx_l_w_p> w))] [((w <any_vowel_noSlide>) | (<any_vowel_noSlide> w))]) | (sil p (sil [((w <any_Cx_l_w_p>) | (<any_Cx_l_w_p> w))] [((w <any_vowel_noSlide>) | (<any_vowel_noSlide> w))]))) (([(<any_Cx_sh_p_w_l> sh)] | [(sh <any_Cx_sh_p_w_l>)]) (l | ((<any_Cx_sh_p_w_l> sh) | (sh <any_Cx_sh_p_w_l>)))) ((([(<any_Vx_y_sh_ae_noSlide> y)] | [(y <any_Vx_y_sh_ae_noSlide>)]) ([(<any_Cx_y_sh_s_l> y)] | [(y <any_Cx_y_sh_s_l>)])) (ae | ((<any_Vx_y_sh_ae_noSlide> y) | (y <any_Vx_y_sh_ae_noSlide>)))) (([(<any_Cx_ng_y_s> ng)] | [(ng <any_Cx_ng_y_s>)]) (s | ((<any_Cx_ng_y_s_t> ng) | (ng <any_Cx_ng_y_s_t>)))) (([(<any_Cx_oy_ng_t_s> oy)] | [(oy <any_Cx_oy_ng_t_s>)]) (t | ((<any_Cx_oy_ng_t_s> oy) | (oy <any_Cx_oy_ng_t_s>)))) (([(<any_vowel_noSlide> ch)] | [(ch <any_vowel_noSlide>)]) ([(<any_Cx_oy_t_ch> ch)] | [(ch <any_Cx_oy_t_ch>)]) sil))
Considering guard ng with value 4 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

Running scan for frate = 72
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard oy with value 1 for t ...
Considering guard aa with value 1 for t ...
candidateGuards = map[aa:true oy:true]
Picking guard, oy

Considering guard y with value 7.199999999999999 for ae ...
candidateGuards = map[y:true]
Picking guard, y

frate, target rule = 80 public <last> = (((sil [((w <any_Cx_l_w_p>) | (<any_Cx_l_w_p> w))] [((w <any_vowel_noSlide>) | (<any_vowel_noSlide> w))]) | (sil p (sil [((w <any_Cx_l_w_p>) | (<any_Cx_l_w_p> w))] [((w <any_vowel_noSlide>) | (<any_vowel_noSlide> w))]))) (([(<any_Cx_sh_p_w_l> sh)] | [(sh <any_Cx_sh_p_w_l>)]) (l | ((<any_Cx_sh_p_w_l> sh) | (sh <any_Cx_sh_p_w_l>)))) ((([(<any_Vx_y_sh_aa_noSlide> y)] | [(y <any_Vx_y_sh_aa_noSlide>)]) ([(<any_Cx_y_sh_s_l> y)] | [(y <any_Cx_y_sh_s_l>)])) (aa | ((<any_Vx_y_sh_aa_noSlide> y) | (y <any_Vx_y_sh_aa_noSlide>)))) (([(<any_Cx_ng_y_s> ng)] | [(ng <any_Cx_ng_y_s>)]) (s | ((<any_Cx_ng_y_s_t> ng) | (ng <any_Cx_ng_y_s_t>)))) (([(<any_Cx_oy_ng_t_s> oy)] | [(oy <any_Cx_oy_ng_t_s>)]) (t | ((<any_Cx_oy_ng_t_s> oy) | (oy <any_Cx_oy_ng_t_s>)))) (([(<any_vowel_noSlide> k)] | [(k <any_vowel_noSlide>)]) ([(<any_Cx_oy_t_k> k)] | [(k <any_Cx_oy_t_k>)]) sil))
Considering guard ng with value 4 for s ...
Considering guard ao with value 4 for s ...
candidateGuards = map[ao:true ng:true]
Picking guard, ng

Running scan for frate = 72
Considering guard aa with value 1 for t ...
Considering guard oy with value 1 for t ...
candidateGuards = map[aa:true oy:true]
Picking guard, aa

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 72 public <last> = (((sil [((r <any_Cx_l_r_p>) | (<any_Cx_l_r_p> r))] [((r <any_vowel_noSlide>) | (<any_vowel_noSlide> r))]) | (sil p (sil [((r <any_Cx_l_r_p>) | (<any_Cx_l_r_p> r))] [((r <any_vowel_noSlide>) | (<any_vowel_noSlide> r))]))) (([(<any_Cx_sh_p_r_l> sh)] | [(sh <any_Cx_sh_p_r_l>)]) (l | ((<any_Cx_sh_p_r_l> sh) | (sh <any_Cx_sh_p_r_l>)))) ((([(<any_Vx_y_sh_ae_noSlide> y)] | [(y <any_Vx_y_sh_ae_noSlide>)]) ([(<any_Cx_y_sh_s_l> y)] | [(y <any_Cx_y_sh_s_l>)])) (ae | ((<any_Vx_y_sh_ae_noSlide> y) | (y <any_Vx_y_sh_ae_noSlide>)))) (([(<any_Cx_ng_y_s> ng)] | [(ng <any_Cx_ng_y_s>)]) (s | ((<any_Cx_ng_y_s_t> ng) | (ng <any_Cx_ng_y_s_t>)))) (([(<any_Cx_aa_ng_t_s> aa)] | [(aa <any_Cx_aa_ng_t_s>)]) (t | ((<any_Cx_aa_ng_t_s> aa) | (aa <any_Cx_aa_ng_t_s>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_aa_t_thr> thr)] | [(thr <any_Cx_aa_t_thr>)]) sil))
Considering guard y with value 7.199999999999999 for aa ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard ng with value 4 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard oy with value 1 for t ...
Considering guard aa with value 1 for t ...
candidateGuards = map[aa:true oy:true]
Picking guard, oy

frate, target rule = 72 public <last> = (((sil [((z <any_Cx_l_z_p>) | (<any_Cx_l_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_l_z_p>) | (<any_Cx_l_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_l> sh)] | [(sh <any_Cx_sh_p_z_l>)]) (l | ((<any_Cx_sh_p_z_l> sh) | (sh <any_Cx_sh_p_z_l>)))) ((([(<any_Vx_y_sh_aa_noSlide> y)] | [(y <any_Vx_y_sh_aa_noSlide>)]) ([(<any_Cx_y_sh_s_l> y)] | [(y <any_Cx_y_sh_s_l>)])) (aa | ((<any_Vx_y_sh_aa_noSlide> y) | (y <any_Vx_y_sh_aa_noSlide>)))) (([(<any_Cx_ng_y_s> ng)] | [(ng <any_Cx_ng_y_s>)]) (s | ((<any_Cx_ng_y_s_t> ng) | (ng <any_Cx_ng_y_s_t>)))) (([(<any_Cx_oy_ng_t_s> oy)] | [(oy <any_Cx_oy_ng_t_s>)]) (t | ((<any_Cx_oy_ng_t_s> oy) | (oy <any_Cx_oy_ng_t_s>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_oy_t_g> g)] | [(g <any_Cx_oy_t_g>)]) sil))

results =
{72 [{sil 0 10} {l 11 19} {ae 20 29} {st 30 42} {sil 43 53}]}
{80 [{sil 0 14} {l 15 21} {ae 22 33} {st 34 46} {sil 47 59}]}
{91 [{sil 0 16} {l 17 24} {ae 25 38} {st 39 52} {sil 53 68}]}
{105 [{sil 0 19} {l 20 28} {ae 29 44} {st 45 59} {sil 60 80}]}
{125 [{sil 3 24} {l 25 34} {ae 35 53} {st 54 68} {sil 69 97}]}

normalised results =
{72 [{sil 0 10} {l 15 26} {ae 28 40} {st 42 58} {sil 60 74}]}
{80 [{sil 0 14} {l 19 26} {ae 28 41} {st 43 58} {sil 59 74}]}
{91 [{sil 0 16} {l 19 26} {ae 27 42} {st 43 57} {sil 58 75}]}
{105 [{sil 0 19} {l 19 27} {ae 28 42} {st 43 56} {sil 57 76}]}
{125 [{sil 3 24} {l 20 27} {ae 28 42} {st 43 54} {sil 55 78}]}

ruleAligned = [{{l 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ae 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{st 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {l 15 26} {ae 28 40} {st 42 58} {sil 60 60}]}
{80 [{sil 0 0} {l 19 26} {ae 28 41} {st 43 58} {sil 59 59}]}
{91 [{sil 0 0} {l 19 26} {ae 27 42} {st 43 57} {sil 58 58}]}
{105 [{sil 0 0} {l 19 27} {ae 28 42} {st 43 56} {sil 57 57}]}
{125 [{sil 3 3} {l 20 27} {ae 28 42} {st 43 54} {sil 55 55}]}

timeAligned = [{{l 19 26} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ae 28 42} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{st 43 57} [{0 3} {1 3} {2 3} {3 3} {4 3}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 26
i, iTime, newITime, timeStartFrom = 2 1 2 40
combinedVerdict    = [{l 0} {ae 0} {st 0}]
ruleAlignedVerdict = [{l 0} {ae 0} {st 0}]

score->
+1 for l
+1 for ae
+1 for st
score<-: 8

results =
{72 [{sil 0 10} {l 11 18} {aa 19 29} {s 30 39} {t 40 42} {sil 43 53}]}
{80 [{sil 0 14} {l 15 20} {aa 21 33} {s 34 43} {t 44 46} {sil 47 59}]}
{91 [{sil 0 16} {l 17 23} {aa 24 37} {s 38 46} {t 47 52} {sil 53 68}]}
{105 [{sil 0 19} {l 20 27} {aa 28 43} {s 44 52} {t 53 61} {sil 62 80}]}
{125 [{sil 3 24} {l 25 34} {aa 35 53} {s 54 64} {t 65 71} {sil 72 97}]}

normalised results =
{72 [{sil 0 10} {l 15 25} {aa 26 40} {s 42 54} {t 56 56} {sil 60 74}]}
{80 [{sil 0 14} {l 19 25} {aa 26 41} {s 43 54} {t 55 55} {sil 59 74}]}
{91 [{sil 0 16} {l 19 25} {aa 26 41} {s 42 51} {t 52 57} {sil 58 75}]}
{105 [{sil 0 19} {l 19 26} {aa 27 41} {s 42 50} {t 50 58} {sil 59 76}]}
{125 [{sil 3 24} {l 20 27} {aa 28 42} {s 43 51} {t 52 57} {sil 58 78}]}

ruleAligned = [{{l 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{aa 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{s 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{t 1} [{2 4} {3 4} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {l 15 25} {aa 26 40} {s 42 54} {t 56 56} {sil 60 60}]}
{80 [{sil 0 0} {l 19 25} {aa 26 41} {s 43 54} {t 55 55} {sil 59 59}]}
{91 [{sil 0 0} {l 19 25} {aa 26 41} {s 42 51} {t 52 57} {sil 58 58}]}
{105 [{sil 0 0} {l 19 26} {aa 27 41} {s 42 50} {t 50 58} {sil 59 59}]}
{125 [{sil 3 3} {l 20 27} {aa 28 42} {s 43 51} {t 52 57} {sil 58 58}]}

timeAligned = [{{l 19 25} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{aa 26 41} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{s 42 51} [{0 3} {2 3} {3 3} {1 3} {4 3}]} {{t 52 57} [{2 4} {3 4} {4 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 25
i, iTime, newITime, timeStartFrom = 2 1 2 40
i, iTime, newITime, timeStartFrom = 3 2 3 50
combinedVerdict    = [{l 0} {aa 0} {s 0} {t 1}]
ruleAlignedVerdict = [{l 0} {aa 0} {s 0} {t 1}]

score->
+1 for l
+1 for aa
+1 for s
+1 for t
score<-: 9

results =
{72 [{sil 0 10} {l 11 19} {ae 20 30} {s 31 39} {t 40 42} {sil 43 53}]}
{80 [{sil 0 14} {l 15 21} {ae 22 33} {s 34 43} {t 44 46} {sil 47 59}]}
{91 [{sil 0 16} {l 17 24} {ae 25 37} {s 38 46} {t 47 52} {sil 53 68}]}
{105 [{sil 0 19} {l 20 28} {ae 29 44} {s 45 52} {t 53 61} {sil 62 80}]}
{125 [{sil 3 24} {l 25 34} {ae 35 53} {s 54 64} {t 65 71} {sil 72 97}]}

normalised results =
{72 [{sil 0 10} {l 15 26} {ae 28 42} {s 43 54} {t 56 56} {sil 60 74}]}
{80 [{sil 0 14} {l 19 26} {ae 28 41} {s 43 54} {t 55 55} {sil 59 74}]}
{91 [{sil 0 16} {l 19 26} {ae 27 41} {s 42 51} {t 52 57} {sil 58 75}]}
{105 [{sil 0 19} {l 19 27} {ae 28 42} {s 43 50} {t 50 58} {sil 59 76}]}
{125 [{sil 3 24} {l 20 27} {ae 28 42} {s 43 51} {t 52 57} {sil 58 78}]}

ruleAligned = [{{l 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ae 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{s 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{t 1} [{2 4} {3 4} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {l 15 26} {ae 28 42} {s 43 54} {t 56 56} {sil 60 60}]}
{80 [{sil 0 0} {l 19 26} {ae 28 41} {s 43 54} {t 55 55} {sil 59 59}]}
{91 [{sil 0 0} {l 19 26} {ae 27 41} {s 42 51} {t 52 57} {sil 58 58}]}
{105 [{sil 0 0} {l 19 27} {ae 28 42} {s 43 50} {t 50 58} {sil 59 59}]}
{125 [{sil 3 3} {l 20 27} {ae 28 42} {s 43 51} {t 52 57} {sil 58 58}]}

timeAligned = [{{l 19 26} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ae 28 42} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{s 43 51} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{t 52 57} [{2 4} {3 4} {4 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 26
i, iTime, newITime, timeStartFrom = 2 1 2 41
i, iTime, newITime, timeStartFrom = 3 2 3 50
combinedVerdict    = [{l 0} {ae 0} {s 0} {t 1}]
ruleAlignedVerdict = [{l 0} {ae 0} {s 0} {t 1}]

score->
+1 for l
+1 for ae
+1 for s
+1 for t
score<-: 9

results =
{72 [{sil 0 10} {l 11 18} {aa 19 29} {st 30 42} {sil 43 53}]}
{80 [{sil 0 14} {l 15 20} {aa 21 33} {st 34 46} {sil 47 59}]}
{91 [{sil 0 16} {l 17 23} {aa 24 37} {st 38 52} {sil 53 68}]}
{105 [{sil 0 19} {l 20 27} {aa 28 44} {st 45 59} {sil 60 80}]}
{125 [{sil 3 24} {l 25 34} {aa 35 53} {st 54 68} {sil 69 97}]}

normalised results =
{72 [{sil 0 10} {l 15 25} {aa 26 40} {st 42 58} {sil 60 74}]}
{80 [{sil 0 14} {l 19 25} {aa 26 41} {st 43 58} {sil 59 74}]}
{91 [{sil 0 16} {l 19 25} {aa 26 41} {st 42 57} {sil 58 75}]}
{105 [{sil 0 19} {l 19 26} {aa 27 42} {st 43 56} {sil 57 76}]}
{125 [{sil 3 24} {l 20 27} {aa 28 42} {st 43 54} {sil 55 78}]}

ruleAligned = [{{l 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{aa 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{st 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {l 15 25} {aa 26 40} {st 42 58} {sil 60 60}]}
{80 [{sil 0 0} {l 19 25} {aa 26 41} {st 43 58} {sil 59 59}]}
{91 [{sil 0 0} {l 19 25} {aa 26 41} {st 42 57} {sil 58 58}]}
{105 [{sil 0 0} {l 19 26} {aa 27 42} {st 43 56} {sil 57 57}]}
{125 [{sil 3 3} {l 20 27} {aa 28 42} {st 43 54} {sil 55 55}]}

timeAligned = [{{l 19 25} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{aa 26 41} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{st 43 57} [{0 3} {1 3} {2 3} {3 3} {4 3}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 25
i, iTime, newITime, timeStartFrom = 2 1 2 40
combinedVerdict    = [{l 0} {aa 0} {st 0}]
ruleAlignedVerdict = [{l 0} {aa 0} {st 0}]

score->
+1 for l
+1 for aa
+1 for st
score<-: 8
testPronounce l good aa good s good t possible
publish->
phonsToAlphas = [{[l] l} {[aa] a} {[s] s} {[t] t}]
getVerdict<-:new {l [l] 0}
getVerdict<-:new {a [aa] 0}
getVerdict<-:new {s [s] 0}
getVerdict<-:new {t [t] 1}
lettersVerdicts = [{l [l] 0} {a [aa] 0} {s [s] 0} {t [t] 1}]
publish<-
Total: 382.96345ms
{
  "results": [
    {
      "letters": "l",
      "phonemes": "l",
      "verdict": "good"
    },
    {
      "letters": "a",
      "phonemes": "ɑ",
      "verdict": "good"
    },
    {
      "letters": "s",
      "phonemes": "s",
      "verdict": "good"
    },
    {
      "letters": "t",
      "phonemes": "t",
      "verdict": "possible"
    }
  ],
  "err": null
}
