
 length of audio =  2.506312



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.9800000000000001 0.9 1.8800000000000001

 start3, duration3, end3 =  1.0399999999999998 0.6 1.6399999999999997

 Initial start, duration, end =  0.8800000000000001 1 1.8800000000000001

 Cut at: start, duration =  0.8800000000000001 1.45     guard_end =  2.33 

Running scan for frate = 125
Considering guard y with value 1 for ch ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 2 for er ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 1 for ch ...
candidateGuards = map[y:true]
Picking guard, y


frate, target rule = 125 public <church> = (((sil [((z <any_Cx_ch_z_p>) | (<any_Cx_ch_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_ch_z_p>) | (<any_Cx_ch_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_y_p_z_ch> y)] | [(y <any_Cx_y_p_z_ch>)]) (ch | ((<any_Cx_y_p_z_ch> y) | (y <any_Cx_y_p_z_ch>)))) ((([(<any_Vx_y_y_er_noSlide> y)] | [(y <any_Vx_y_y_er_noSlide>)]) ([(<any_Cx_y_y_ch_ch> y)] | [(y <any_Cx_y_y_ch_ch>)])) (er | ((<any_Vx_y_y_er_noSlide> y) | (y <any_Vx_y_y_er_noSlide>)))) (([(<any_Cx_y_y_ch> y)] | [(y <any_Cx_y_y_ch>)]) (ch | ((<any_Cx_y_y_ch> y) | (y <any_Cx_y_y_ch>)))) (([(<any_vowel_noSlide> ch)] | [(ch <any_vowel_noSlide>)]) ([(<any_Cx_y_ch_ch> ch)] | [(ch <any_Cx_y_ch_ch>)]) sil))
Running scan for frate = 105
Considering guard y with value 1 for ch ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 2 for er ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 1 for ch ...
candidateGuards = map[y:true]
Picking guard, y


frate, target rule = 105 public <church> = (((sil [((z <any_Cx_ch_z_p>) | (<any_Cx_ch_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_ch_z_p>) | (<any_Cx_ch_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_y_p_z_ch> y)] | [(y <any_Cx_y_p_z_ch>)]) (ch | ((<any_Cx_y_p_z_ch> y) | (y <any_Cx_y_p_z_ch>)))) ((([(<any_Vx_y_y_er_noSlide> y)] | [(y <any_Vx_y_y_er_noSlide>)]) ([(<any_Cx_y_y_ch_ch> y)] | [(y <any_Cx_y_y_ch_ch>)])) (er | ((<any_Vx_y_y_er_noSlide> y) | (y <any_Vx_y_y_er_noSlide>)))) (([(<any_Cx_y_y_ch> y)] | [(y <any_Cx_y_y_ch>)]) (ch | ((<any_Cx_y_y_ch> y) | (y <any_Cx_y_y_ch>)))) (([(<any_vowel_noSlide> sh)] | [(sh <any_vowel_noSlide>)]) ([(<any_Cx_y_ch_sh> sh)] | [(sh <any_Cx_y_ch_sh>)]) sil))
Running scan for frate = 91
Considering guard y with value 1 for ch ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 2 for er ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 1 for ch ...
candidateGuards = map[y:true]
Picking guard, y


frate, target rule = 91 public <church> = (((sil [((z <any_Cx_ch_z_p>) | (<any_Cx_ch_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_ch_z_p>) | (<any_Cx_ch_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_y_p_z_ch> y)] | [(y <any_Cx_y_p_z_ch>)]) (ch | ((<any_Cx_y_p_z_ch> y) | (y <any_Cx_y_p_z_ch>)))) ((([(<any_Vx_y_y_er_noSlide> y)] | [(y <any_Vx_y_y_er_noSlide>)]) ([(<any_Cx_y_y_ch_ch> y)] | [(y <any_Cx_y_y_ch_ch>)])) (er | ((<any_Vx_y_y_er_noSlide> y) | (y <any_Vx_y_y_er_noSlide>)))) (([(<any_Cx_y_y_ch> y)] | [(y <any_Cx_y_y_ch>)]) (ch | ((<any_Cx_y_y_ch> y) | (y <any_Cx_y_y_ch>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_y_ch_p> p)] | [(p <any_Cx_y_ch_p>)]) sil))
Running scan for frate = 80
Considering guard y with value 1 for ch ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 2 for er ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 1 for ch ...
candidateGuards = map[y:true]
Picking guard, y


frate, target rule = 80 public <church> = (((sil [((z <any_Cx_ch_z_p>) | (<any_Cx_ch_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_ch_z_p>) | (<any_Cx_ch_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_y_p_z_ch> y)] | [(y <any_Cx_y_p_z_ch>)]) (ch | ((<any_Cx_y_p_z_ch> y) | (y <any_Cx_y_p_z_ch>)))) ((([(<any_Vx_y_y_er_noSlide> y)] | [(y <any_Vx_y_y_er_noSlide>)]) ([(<any_Cx_y_y_ch_ch> y)] | [(y <any_Cx_y_y_ch_ch>)])) (er | ((<any_Vx_y_y_er_noSlide> y) | (y <any_Vx_y_y_er_noSlide>)))) (([(<any_Cx_y_y_ch> y)] | [(y <any_Cx_y_y_ch>)]) (ch | ((<any_Cx_y_y_ch> y) | (y <any_Cx_y_y_ch>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_y_ch_g> g)] | [(g <any_Cx_y_ch_g>)]) sil))
Running scan for frate = 72
Considering guard y with value 1 for ch ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 2 for er ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 1 for ch ...
candidateGuards = map[y:true]
Picking guard, y


frate, target rule = 72 public <church> = (((sil [((z <any_Cx_ch_z_p>) | (<any_Cx_ch_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_ch_z_p>) | (<any_Cx_ch_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_y_p_z_ch> y)] | [(y <any_Cx_y_p_z_ch>)]) (ch | ((<any_Cx_y_p_z_ch> y) | (y <any_Cx_y_p_z_ch>)))) ((([(<any_Vx_y_y_er_noSlide> y)] | [(y <any_Vx_y_y_er_noSlide>)]) ([(<any_Cx_y_y_ch_ch> y)] | [(y <any_Cx_y_y_ch_ch>)])) (er | ((<any_Vx_y_y_er_noSlide> y) | (y <any_Vx_y_y_er_noSlide>)))) (([(<any_Cx_y_y_ch> y)] | [(y <any_Cx_y_y_ch>)]) (ch | ((<any_Cx_y_y_ch> y) | (y <any_Cx_y_y_ch>)))) (([(<any_vowel_noSlide> ch)] | [(ch <any_vowel_noSlide>)]) ([(<any_Cx_y_ch_ch> ch)] | [(ch <any_Cx_y_ch_ch>)]) sil))

results =
{72 [{sil 0 10} {ch 11 24} {er 25 48} {ch 49 67} {sil 68 82}]}
{80 [{sil 0 12} {ch 13 27} {er 28 54} {ch 55 66} {sil 67 89}]}
{91 [{sil 0 12} {ch 13 31} {er 32 62} {ch 63 85} {sil 86 130}]}
{105 [{sil 0 15} {ch 16 35} {er 36 73} {ch 74 85} {sh 86 95} {iy 96 103} {sil 104 151}]}
{125 [{sil 3 22} {ch 23 43} {er 44 88} {ch 89 118} {sil 119 181}]}

normalised results =
{72 [{sil 0 10} {ch 15 33} {er 35 67} {ch 68 93} {sil 94 114}]}
{80 [{sil 0 12} {ch 16 34} {er 35 68} {ch 69 83} {sil 84 111}]}
{91 [{sil 0 12} {ch 14 34} {er 35 68} {ch 69 93} {sil 95 143}]}
{105 [{sil 0 15} {ch 15 33} {er 34 70} {ch 70 81} {sh 82 90} {iy 91 98} {sil 99 144}]}
{125 [{sil 3 22} {ch 18 34} {er 35 70} {ch 71 94} {sil 95 145}]}

ruleAligned = [{{ch 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{er 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{ch 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {ch 15 33} {er 35 67} {ch 68 93} {sil 94 94}]}
{80 [{sil 0 0} {ch 16 34} {er 35 68} {ch 69 83} {sil 84 84}]}
{91 [{sil 0 0} {ch 14 34} {er 35 68} {ch 69 93} {sil 95 95}]}
{105 [{sil 0 0} {ch 15 33} {er 34 70} {ch 70 81} {sh 82 90} {iy 91 98} {sil 99 99}]}
{125 [{sil 3 3} {ch 18 34} {er 35 70} {ch 71 94} {sil 95 95}]}

timeAligned = [{{ch 15 34} [{0 1} {2 1} {3 1} {1 1} {4 1}]} {{er 35 68} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{ch 69 93} [{0 3} {1 3} {2 3} {3 3} {4 3}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 33
i, iTime, newITime, timeStartFrom = 2 1 2 67
combinedVerdict    = [{ch 0} {er 0} {ch 0}]
ruleAlignedVerdict = [{ch 0} {er 0} {ch 0}]

score->
+1 for ch
+1 for er
+1 for ch
score<-: 8
testPronounce ch good er good ch good
publish->
phonsToAlphas = [{[ch] ch} {[er] ur} {[ch] ch}]
getVerdict<-:new {ch [ch] 0}
getVerdict<-:new {ur [er] 0}
getVerdict<-:new {ch [ch] 0}
lettersVerdicts = [{ch [ch] 0} {ur [er] 0} {ch [ch] 0}]
publish<-
{
  "results": [
    {
      "letters": "ch",
      "phonemes": "ʧ",
      "verdict": "good"
    },
    {
      "letters": "ur",
      "phonemes": "ɜɹ",
      "verdict": "good"
    },
    {
      "letters": "ch",
      "phonemes": "ʧ",
      "verdict": "good"
    }
  ],
  "err": null
}
