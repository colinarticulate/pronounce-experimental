
 length of audio =  1.237



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.4600000000000001 0.58 1.04

 start3, duration3, end3 =  0.48 0.42000000000000004 0.9

 Initial start, duration, end =  0.3600000000000001 0.6799999999999999 1.04

 Cut at: start, duration =  0.3600000000000001 0.857     guard_end =  1.217 

Running scan for frate = 125
Running scan for frate = 125
Running scan for frate = 125
Running scan for frate = 125
Considering guard jh with value 1 for p ...
Considering guard zh with value 1 for p ...
Considering guard ng with value 1 for p ...
candidateGuards = map[jh:true ng:true zh:true]
Picking guard, jh

Considering guard zh with value 1 for p ...
Considering guard ng with value 1 for p ...
Considering guard jh with value 1 for p ...
candidateGuards = map[jh:true ng:true zh:true]
Picking guard, zh

Considering guard zh with value 1 for p ...
Considering guard jh with value 1 for p ...
Considering guard ng with value 1 for p ...
candidateGuards = map[jh:true ng:true zh:true]
Picking guard, zh

Considering guard ng with value 2 for ae ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 2 for aa ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 2 for ae ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard zh with value 1 for p ...
Considering guard jh with value 1 for p ...
Considering guard ng with value 1 for p ...
candidateGuards = map[jh:true ng:true zh:true]
Picking guard, zh

Considering guard ng with value 1.8 for st ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 1.7999999999999998 for st ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 4 for s ...
Considering guard ao with value 4 for s ...
candidateGuards = map[ao:true ng:true]
Picking guard, ng

Considering guard ng with value 2 for aa ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 125 public <past> = (((sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil d (sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_zh_d_hh_p> zh)] | [(zh <any_Cx_zh_d_hh_p>)]) (p | ((<any_Cx_zh_d_hh_p> zh) | (zh <any_Cx_zh_d_hh_p>)))) ((([(<any_Vx_ng_zh_aa_noSlide> ng)] | [(ng <any_Vx_ng_zh_aa_noSlide>)]) ([(<any_Cx_ng_zh_st_p> ng)] | [(ng <any_Cx_ng_zh_st_p>)])) (aa | ((<any_Vx_ng_zh_aa_noSlide> ng) | (ng <any_Vx_ng_zh_aa_noSlide>)))) (([(<any_Cx_ng_ng_st> ng)] | [(ng <any_Cx_ng_ng_st>)]) (st | ((<any_Cx_ng_ng_st> ng) | (ng <any_Cx_ng_ng_st>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_ng_st_n> n)] | [(n <any_Cx_ng_st_n>)]) sil))
frate, target rule = 125 public <past> = (((sil [((sh <any_Cx_p_sh_d>) | (<any_Cx_p_sh_d> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil d (sil [((sh <any_Cx_p_sh_d>) | (<any_Cx_p_sh_d> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_zh_d_sh_p> zh)] | [(zh <any_Cx_zh_d_sh_p>)]) (p | ((<any_Cx_zh_d_sh_p> zh) | (zh <any_Cx_zh_d_sh_p>)))) ((([(<any_Vx_ng_zh_ae_noSlide> ng)] | [(ng <any_Vx_ng_zh_ae_noSlide>)]) ([(<any_Cx_ng_zh_st_p> ng)] | [(ng <any_Cx_ng_zh_st_p>)])) (ae | ((<any_Vx_ng_zh_ae_noSlide> ng) | (ng <any_Vx_ng_zh_ae_noSlide>)))) (([(<any_Cx_ng_ng_st> ng)] | [(ng <any_Cx_ng_ng_st>)]) (st | ((<any_Cx_ng_ng_st> ng) | (ng <any_Cx_ng_ng_st>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_ng_st_n> n)] | [(n <any_Cx_ng_st_n>)]) sil))
Considering guard ng with value 4 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

Running scan for frate = 105
Running scan for frate = 105
Considering guard aa with value 1 for t ...
Considering guard oy with value 1 for t ...
candidateGuards = map[aa:true oy:true]
Picking guard, aa

Considering guard oy with value 1 for t ...
Considering guard aa with value 1 for t ...
candidateGuards = map[aa:true oy:true]
Picking guard, oy

Considering guard jh with value 1 for p ...
Considering guard zh with value 1 for p ...
Considering guard ng with value 1 for p ...
candidateGuards = map[jh:true ng:true zh:true]
Picking guard, jh

Considering guard ng with value 1 for p ...
Considering guard zh with value 1 for p ...
Considering guard jh with value 1 for p ...
candidateGuards = map[jh:true ng:true zh:true]
Picking guard, jh

Considering guard ng with value 2 for ae ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 125 public <past> = (((sil [((sh <any_Cx_p_sh_d>) | (<any_Cx_p_sh_d> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil d (sil [((sh <any_Cx_p_sh_d>) | (<any_Cx_p_sh_d> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_jh_d_sh_p> jh)] | [(jh <any_Cx_jh_d_sh_p>)]) (p | ((<any_Cx_jh_d_sh_p> jh) | (jh <any_Cx_jh_d_sh_p>)))) ((([(<any_Vx_ng_jh_ae_noSlide> ng)] | [(ng <any_Vx_ng_jh_ae_noSlide>)]) ([(<any_Cx_ng_jh_s_p> ng)] | [(ng <any_Cx_ng_jh_s_p>)])) (ae | ((<any_Vx_ng_jh_ae_noSlide> ng) | (ng <any_Vx_ng_jh_ae_noSlide>)))) (([(<any_Cx_ng_ng_s> ng)] | [(ng <any_Cx_ng_ng_s>)]) (s | ((<any_Cx_ng_ng_s_t> ng) | (ng <any_Cx_ng_ng_s_t>)))) (([(<any_Cx_aa_ng_t_s> aa)] | [(aa <any_Cx_aa_ng_t_s>)]) (t | ((<any_Cx_aa_ng_t_s> aa) | (aa <any_Cx_aa_ng_t_s>)))) (([(<any_vowel_noSlide> k)] | [(k <any_vowel_noSlide>)]) ([(<any_Cx_aa_t_k> k)] | [(k <any_Cx_aa_t_k>)]) sil))
Considering guard ng with value 1.8 for st ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 125 public <past> = (((sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil d (sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_zh_d_hh_p> zh)] | [(zh <any_Cx_zh_d_hh_p>)]) (p | ((<any_Cx_zh_d_hh_p> zh) | (zh <any_Cx_zh_d_hh_p>)))) ((([(<any_Vx_ng_zh_aa_noSlide> ng)] | [(ng <any_Vx_ng_zh_aa_noSlide>)]) ([(<any_Cx_ng_zh_s_p> ng)] | [(ng <any_Cx_ng_zh_s_p>)])) (aa | ((<any_Vx_ng_zh_aa_noSlide> ng) | (ng <any_Vx_ng_zh_aa_noSlide>)))) (([(<any_Cx_ng_ng_s> ng)] | [(ng <any_Cx_ng_ng_s>)]) (s | ((<any_Cx_ng_ng_s_t> ng) | (ng <any_Cx_ng_ng_s_t>)))) (([(<any_Cx_oy_ng_t_s> oy)] | [(oy <any_Cx_oy_ng_t_s>)]) (t | ((<any_Cx_oy_ng_t_s> oy) | (oy <any_Cx_oy_ng_t_s>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_oy_t_d> d)] | [(d <any_Cx_oy_t_d>)]) sil))
frate, target rule = 105 public <past> = (((sil [((b <any_Cx_p_b_d>) | (<any_Cx_p_b_d> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]) | (sil d (sil [((b <any_Cx_p_b_d>) | (<any_Cx_p_b_d> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]))) (([(<any_Cx_jh_d_b_p> jh)] | [(jh <any_Cx_jh_d_b_p>)]) (p | ((<any_Cx_jh_d_b_p> jh) | (jh <any_Cx_jh_d_b_p>)))) ((([(<any_Vx_ng_jh_ae_noSlide> ng)] | [(ng <any_Vx_ng_jh_ae_noSlide>)]) ([(<any_Cx_ng_jh_st_p> ng)] | [(ng <any_Cx_ng_jh_st_p>)])) (ae | ((<any_Vx_ng_jh_ae_noSlide> ng) | (ng <any_Vx_ng_jh_ae_noSlide>)))) (([(<any_Cx_ng_ng_st> ng)] | [(ng <any_Cx_ng_ng_st>)]) (st | ((<any_Cx_ng_ng_st> ng) | (ng <any_Cx_ng_ng_st>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_ng_st_f> f)] | [(f <any_Cx_ng_st_f>)]) sil))
Considering guard ng with value 2 for aa ...
candidateGuards = map[ng:true]
Picking guard, ng

Running scan for frate = 105
Running scan for frate = 105
Running scan for frate = 91
Considering guard zh with value 1 for p ...
Considering guard jh with value 1 for p ...
Considering guard ng with value 1 for p ...
candidateGuards = map[jh:true ng:true zh:true]
Picking guard, ng

Considering guard jh with value 1 for p ...
Considering guard zh with value 1 for p ...
Considering guard ng with value 1 for p ...
candidateGuards = map[jh:true ng:true zh:true]
Picking guard, jh

Considering guard jh with value 1 for p ...
Considering guard ng with value 1 for p ...
Considering guard zh with value 1 for p ...
candidateGuards = map[jh:true ng:true zh:true]
Picking guard, jh

Considering guard ng with value 1.7999999999999998 for st ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 2 for ae ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 2 for aa ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 105 public <past> = (((sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil d (sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_jh_d_hh_p> jh)] | [(jh <any_Cx_jh_d_hh_p>)]) (p | ((<any_Cx_jh_d_hh_p> jh) | (jh <any_Cx_jh_d_hh_p>)))) ((([(<any_Vx_ng_jh_aa_noSlide> ng)] | [(ng <any_Vx_ng_jh_aa_noSlide>)]) ([(<any_Cx_ng_jh_st_p> ng)] | [(ng <any_Cx_ng_jh_st_p>)])) (aa | ((<any_Vx_ng_jh_aa_noSlide> ng) | (ng <any_Vx_ng_jh_aa_noSlide>)))) (([(<any_Cx_ng_ng_st> ng)] | [(ng <any_Cx_ng_ng_st>)]) (st | ((<any_Cx_ng_ng_st> ng) | (ng <any_Cx_ng_ng_st>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_ng_st_f> f)] | [(f <any_Cx_ng_st_f>)]) sil))
Considering guard ng with value 4 for s ...
Considering guard ao with value 4 for s ...
candidateGuards = map[ao:true ng:true]
Picking guard, ng

Considering guard ng with value 4 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 2 for ae ...
candidateGuards = map[ng:true]
Picking guard, ng

Running scan for frate = 91
Considering guard aa with value 1 for t ...
Considering guard oy with value 1 for t ...
candidateGuards = map[aa:true oy:true]
Picking guard, aa

Considering guard aa with value 1 for t ...
Considering guard oy with value 1 for t ...
candidateGuards = map[aa:true oy:true]
Picking guard, aa

Considering guard zh with value 1 for p ...
Considering guard jh with value 1 for p ...
Considering guard ng with value 1 for p ...
candidateGuards = map[jh:true ng:true zh:true]
Picking guard, zh

frate, target rule = 105 public <past> = (((sil [((b <any_Cx_p_b_d>) | (<any_Cx_p_b_d> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]) | (sil d (sil [((b <any_Cx_p_b_d>) | (<any_Cx_p_b_d> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]))) (([(<any_Cx_ng_d_b_p> ng)] | [(ng <any_Cx_ng_d_b_p>)]) (p | ((<any_Cx_ng_d_b_p> ng) | (ng <any_Cx_ng_d_b_p>)))) ((([(<any_Vx_ng_ng_ae_noSlide> ng)] | [(ng <any_Vx_ng_ng_ae_noSlide>)]) ([(<any_Cx_ng_ng_s_p> ng)] | [(ng <any_Cx_ng_ng_s_p>)])) (ae | ((<any_Vx_ng_ng_ae_noSlide> ng) | (ng <any_Vx_ng_ng_ae_noSlide>)))) (([(<any_Cx_ng_ng_s> ng)] | [(ng <any_Cx_ng_ng_s>)]) (s | ((<any_Cx_ng_ng_s_t> ng) | (ng <any_Cx_ng_ng_s_t>)))) (([(<any_Cx_aa_ng_t_s> aa)] | [(aa <any_Cx_aa_ng_t_s>)]) (t | ((<any_Cx_aa_ng_t_s> aa) | (aa <any_Cx_aa_ng_t_s>)))) (([(<any_vowel_noSlide> ch)] | [(ch <any_vowel_noSlide>)]) ([(<any_Cx_aa_t_ch> ch)] | [(ch <any_Cx_aa_t_ch>)]) sil))
Considering guard ng with value 2 for aa ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 105 public <past> = (((sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil d (sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_jh_d_hh_p> jh)] | [(jh <any_Cx_jh_d_hh_p>)]) (p | ((<any_Cx_jh_d_hh_p> jh) | (jh <any_Cx_jh_d_hh_p>)))) ((([(<any_Vx_ng_jh_aa_noSlide> ng)] | [(ng <any_Vx_ng_jh_aa_noSlide>)]) ([(<any_Cx_ng_jh_s_p> ng)] | [(ng <any_Cx_ng_jh_s_p>)])) (aa | ((<any_Vx_ng_jh_aa_noSlide> ng) | (ng <any_Vx_ng_jh_aa_noSlide>)))) (([(<any_Cx_ng_ng_s> ng)] | [(ng <any_Cx_ng_ng_s>)]) (s | ((<any_Cx_ng_ng_s_t> ng) | (ng <any_Cx_ng_ng_s_t>)))) (([(<any_Cx_aa_ng_t_s> aa)] | [(aa <any_Cx_aa_ng_t_s>)]) (t | ((<any_Cx_aa_ng_t_s> aa) | (aa <any_Cx_aa_ng_t_s>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_aa_t_g> g)] | [(g <any_Cx_aa_t_g>)]) sil))
Considering guard ng with value 1.7999999999999998 for st ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 1.8 for st ...
candidateGuards = map[ng:true]
Picking guard, ng

Running scan for frate = 91
Running scan for frate = 91
frate, target rule = 91 public <past> = (((sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil d (sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_zh_d_hh_p> zh)] | [(zh <any_Cx_zh_d_hh_p>)]) (p | ((<any_Cx_zh_d_hh_p> zh) | (zh <any_Cx_zh_d_hh_p>)))) ((([(<any_Vx_ng_zh_aa_noSlide> ng)] | [(ng <any_Vx_ng_zh_aa_noSlide>)]) ([(<any_Cx_ng_zh_st_p> ng)] | [(ng <any_Cx_ng_zh_st_p>)])) (aa | ((<any_Vx_ng_zh_aa_noSlide> ng) | (ng <any_Vx_ng_zh_aa_noSlide>)))) (([(<any_Cx_ng_ng_st> ng)] | [(ng <any_Cx_ng_ng_st>)]) (st | ((<any_Cx_ng_ng_st> ng) | (ng <any_Cx_ng_ng_st>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_ng_st_f> f)] | [(f <any_Cx_ng_st_f>)]) sil))
Considering guard ng with value 1 for p ...
Considering guard zh with value 1 for p ...
Considering guard jh with value 1 for p ...
candidateGuards = map[jh:true ng:true zh:true]
Picking guard, ng

frate, target rule = 91 public <past> = (((sil [((sh <any_Cx_p_sh_d>) | (<any_Cx_p_sh_d> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil d (sil [((sh <any_Cx_p_sh_d>) | (<any_Cx_p_sh_d> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_jh_d_sh_p> jh)] | [(jh <any_Cx_jh_d_sh_p>)]) (p | ((<any_Cx_jh_d_sh_p> jh) | (jh <any_Cx_jh_d_sh_p>)))) ((([(<any_Vx_ng_jh_ae_noSlide> ng)] | [(ng <any_Vx_ng_jh_ae_noSlide>)]) ([(<any_Cx_ng_jh_st_p> ng)] | [(ng <any_Cx_ng_jh_st_p>)])) (ae | ((<any_Vx_ng_jh_ae_noSlide> ng) | (ng <any_Vx_ng_jh_ae_noSlide>)))) (([(<any_Cx_ng_ng_st> ng)] | [(ng <any_Cx_ng_ng_st>)]) (st | ((<any_Cx_ng_ng_st> ng) | (ng <any_Cx_ng_ng_st>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_ng_st_n> n)] | [(n <any_Cx_ng_st_n>)]) sil))
Considering guard ng with value 2 for ae ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard zh with value 1 for p ...
Considering guard ng with value 1 for p ...
Considering guard jh with value 1 for p ...
candidateGuards = map[jh:true ng:true zh:true]
Picking guard, zh

Running scan for frate = 80
Considering guard ao with value 4 for s ...
Considering guard ng with value 4 for s ...
candidateGuards = map[ao:true ng:true]
Picking guard, ao

Considering guard jh with value 1 for p ...
Considering guard zh with value 1 for p ...
Considering guard ng with value 1 for p ...
candidateGuards = map[jh:true ng:true zh:true]
Picking guard, jh

Considering guard aa with value 1 for t ...
Considering guard oy with value 1 for t ...
candidateGuards = map[aa:true oy:true]
Picking guard, aa

Considering guard ng with value 2 for aa ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 2 for ae ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 91 public <past> = (((sil [((sh <any_Cx_p_sh_d>) | (<any_Cx_p_sh_d> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil d (sil [((sh <any_Cx_p_sh_d>) | (<any_Cx_p_sh_d> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_ng_d_sh_p> ng)] | [(ng <any_Cx_ng_d_sh_p>)]) (p | ((<any_Cx_ng_d_sh_p> ng) | (ng <any_Cx_ng_d_sh_p>)))) ((([(<any_Vx_ng_ng_ae_noSlide> ng)] | [(ng <any_Vx_ng_ng_ae_noSlide>)]) ([(<any_Cx_ng_ng_s_p> ng)] | [(ng <any_Cx_ng_ng_s_p>)])) (ae | ((<any_Vx_ng_ng_ae_noSlide> ng) | (ng <any_Vx_ng_ng_ae_noSlide>)))) (([(<any_Cx_ao_ng_s> ao)] | [(ao <any_Cx_ao_ng_s>)]) (s | ((<any_Cx_ao_ng_s_t> ao) | (ao <any_Cx_ao_ng_s_t>)))) (([(<any_Cx_aa_ao_t_s> aa)] | [(aa <any_Cx_aa_ao_t_s>)]) (t | ((<any_Cx_aa_ao_t_s> aa) | (aa <any_Cx_aa_ao_t_s>)))) (([(<any_vowel_noSlide> ch)] | [(ch <any_vowel_noSlide>)]) ([(<any_Cx_aa_t_ch> ch)] | [(ch <any_Cx_aa_t_ch>)]) sil))
Considering guard ng with value 1.8 for st ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 4 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

Running scan for frate = 80
Considering guard oy with value 1 for t ...
Considering guard aa with value 1 for t ...
candidateGuards = map[aa:true oy:true]
Picking guard, oy

frate, target rule = 80 public <past> = (((sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil d (sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_jh_d_hh_p> jh)] | [(jh <any_Cx_jh_d_hh_p>)]) (p | ((<any_Cx_jh_d_hh_p> jh) | (jh <any_Cx_jh_d_hh_p>)))) ((([(<any_Vx_ng_jh_ae_noSlide> ng)] | [(ng <any_Vx_ng_jh_ae_noSlide>)]) ([(<any_Cx_ng_jh_st_p> ng)] | [(ng <any_Cx_ng_jh_st_p>)])) (ae | ((<any_Vx_ng_jh_ae_noSlide> ng) | (ng <any_Vx_ng_jh_ae_noSlide>)))) (([(<any_Cx_ng_ng_st> ng)] | [(ng <any_Cx_ng_ng_st>)]) (st | ((<any_Cx_ng_ng_st> ng) | (ng <any_Cx_ng_ng_st>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_ng_st_thr> thr)] | [(thr <any_Cx_ng_st_thr>)]) sil))
Considering guard jh with value 1 for p ...
Considering guard zh with value 1 for p ...
Considering guard ng with value 1 for p ...
candidateGuards = map[jh:true ng:true zh:true]
Picking guard, jh

Running scan for frate = 72
Running scan for frate = 80
Considering guard ng with value 2 for aa ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 91 public <past> = (((sil [((b <any_Cx_p_b_d>) | (<any_Cx_p_b_d> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]) | (sil d (sil [((b <any_Cx_p_b_d>) | (<any_Cx_p_b_d> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]))) (([(<any_Cx_zh_d_b_p> zh)] | [(zh <any_Cx_zh_d_b_p>)]) (p | ((<any_Cx_zh_d_b_p> zh) | (zh <any_Cx_zh_d_b_p>)))) ((([(<any_Vx_ng_zh_aa_noSlide> ng)] | [(ng <any_Vx_ng_zh_aa_noSlide>)]) ([(<any_Cx_ng_zh_s_p> ng)] | [(ng <any_Cx_ng_zh_s_p>)])) (aa | ((<any_Vx_ng_zh_aa_noSlide> ng) | (ng <any_Vx_ng_zh_aa_noSlide>)))) (([(<any_Cx_ng_ng_s> ng)] | [(ng <any_Cx_ng_ng_s>)]) (s | ((<any_Cx_ng_ng_s_t> ng) | (ng <any_Cx_ng_ng_s_t>)))) (([(<any_Cx_oy_ng_t_s> oy)] | [(oy <any_Cx_oy_ng_t_s>)]) (t | ((<any_Cx_oy_ng_t_s> oy) | (oy <any_Cx_oy_ng_t_s>)))) (([(<any_vowel_noSlide> ch)] | [(ch <any_vowel_noSlide>)]) ([(<any_Cx_oy_t_ch> ch)] | [(ch <any_Cx_oy_t_ch>)]) sil))
Considering guard jh with value 1 for p ...
Considering guard ng with value 1 for p ...
Considering guard zh with value 1 for p ...
candidateGuards = map[jh:true ng:true zh:true]
Picking guard, zh

Considering guard ng with value 1.7999999999999998 for st ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 2 for ae ...
candidateGuards = map[ng:true]
Picking guard, ng

Running scan for frate = 80
Considering guard jh with value 1 for p ...
Considering guard zh with value 1 for p ...
Considering guard ng with value 1 for p ...
candidateGuards = map[jh:true ng:true zh:true]
Picking guard, zh

frate, target rule = 80 public <past> = (((sil [((sh <any_Cx_p_sh_d>) | (<any_Cx_p_sh_d> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil d (sil [((sh <any_Cx_p_sh_d>) | (<any_Cx_p_sh_d> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_jh_d_sh_p> jh)] | [(jh <any_Cx_jh_d_sh_p>)]) (p | ((<any_Cx_jh_d_sh_p> jh) | (jh <any_Cx_jh_d_sh_p>)))) ((([(<any_Vx_ng_jh_aa_noSlide> ng)] | [(ng <any_Vx_ng_jh_aa_noSlide>)]) ([(<any_Cx_ng_jh_st_p> ng)] | [(ng <any_Cx_ng_jh_st_p>)])) (aa | ((<any_Vx_ng_jh_aa_noSlide> ng) | (ng <any_Vx_ng_jh_aa_noSlide>)))) (([(<any_Cx_ng_ng_st> ng)] | [(ng <any_Cx_ng_ng_st>)]) (st | ((<any_Cx_ng_ng_st> ng) | (ng <any_Cx_ng_ng_st>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_ng_st_p> p)] | [(p <any_Cx_ng_st_p>)]) sil))
Considering guard ng with value 1.8 for st ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 2 for ae ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard jh with value 1 for p ...
Considering guard zh with value 1 for p ...
Considering guard ng with value 1 for p ...
candidateGuards = map[jh:true ng:true zh:true]
Picking guard, jh

Running scan for frate = 72
frate, target rule = 72 public <past> = (((sil [((b <any_Cx_p_b_d>) | (<any_Cx_p_b_d> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]) | (sil d (sil [((b <any_Cx_p_b_d>) | (<any_Cx_p_b_d> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]))) (([(<any_Cx_zh_d_b_p> zh)] | [(zh <any_Cx_zh_d_b_p>)]) (p | ((<any_Cx_zh_d_b_p> zh) | (zh <any_Cx_zh_d_b_p>)))) ((([(<any_Vx_ng_zh_ae_noSlide> ng)] | [(ng <any_Vx_ng_zh_ae_noSlide>)]) ([(<any_Cx_ng_zh_st_p> ng)] | [(ng <any_Cx_ng_zh_st_p>)])) (ae | ((<any_Vx_ng_zh_ae_noSlide> ng) | (ng <any_Vx_ng_zh_ae_noSlide>)))) (([(<any_Cx_ng_ng_st> ng)] | [(ng <any_Cx_ng_ng_st>)]) (st | ((<any_Cx_ng_ng_st> ng) | (ng <any_Cx_ng_ng_st>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_ng_st_hh> hh)] | [(hh <any_Cx_ng_st_hh>)]) sil))
Considering guard ng with value 2 for aa ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard zh with value 1 for p ...
Considering guard ng with value 1 for p ...
Considering guard jh with value 1 for p ...
candidateGuards = map[jh:true ng:true zh:true]
Picking guard, zh

Considering guard ng with value 4 for s ...
Considering guard ao with value 4 for s ...
candidateGuards = map[ao:true ng:true]
Picking guard, ng

Considering guard ng with value 4 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 2 for aa ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard oy with value 1 for t ...
Considering guard aa with value 1 for t ...
candidateGuards = map[aa:true oy:true]
Picking guard, oy

Considering guard ng with value 1.7999999999999998 for st ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 80 public <past> = (((sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil d (sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_zh_d_hh_p> zh)] | [(zh <any_Cx_zh_d_hh_p>)]) (p | ((<any_Cx_zh_d_hh_p> zh) | (zh <any_Cx_zh_d_hh_p>)))) ((([(<any_Vx_ng_zh_ae_noSlide> ng)] | [(ng <any_Vx_ng_zh_ae_noSlide>)]) ([(<any_Cx_ng_zh_s_p> ng)] | [(ng <any_Cx_ng_zh_s_p>)])) (ae | ((<any_Vx_ng_zh_ae_noSlide> ng) | (ng <any_Vx_ng_zh_ae_noSlide>)))) (([(<any_Cx_ng_ng_s> ng)] | [(ng <any_Cx_ng_ng_s>)]) (s | ((<any_Cx_ng_ng_s_t> ng) | (ng <any_Cx_ng_ng_s_t>)))) (([(<any_Cx_oy_ng_t_s> oy)] | [(oy <any_Cx_oy_ng_t_s>)]) (t | ((<any_Cx_oy_ng_t_s> oy) | (oy <any_Cx_oy_ng_t_s>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_oy_t_d> d)] | [(d <any_Cx_oy_t_d>)]) sil))
Considering guard aa with value 1 for t ...
Considering guard oy with value 1 for t ...
candidateGuards = map[aa:true oy:true]
Picking guard, aa

frate, target rule = 72 public <past> = (((sil [((b <any_Cx_p_b_d>) | (<any_Cx_p_b_d> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]) | (sil d (sil [((b <any_Cx_p_b_d>) | (<any_Cx_p_b_d> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]))) (([(<any_Cx_zh_d_b_p> zh)] | [(zh <any_Cx_zh_d_b_p>)]) (p | ((<any_Cx_zh_d_b_p> zh) | (zh <any_Cx_zh_d_b_p>)))) ((([(<any_Vx_ng_zh_aa_noSlide> ng)] | [(ng <any_Vx_ng_zh_aa_noSlide>)]) ([(<any_Cx_ng_zh_st_p> ng)] | [(ng <any_Cx_ng_zh_st_p>)])) (aa | ((<any_Vx_ng_zh_aa_noSlide> ng) | (ng <any_Vx_ng_zh_aa_noSlide>)))) (([(<any_Cx_ng_ng_st> ng)] | [(ng <any_Cx_ng_ng_st>)]) (st | ((<any_Cx_ng_ng_st> ng) | (ng <any_Cx_ng_ng_st>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_ng_st_ng> ng)] | [(ng <any_Cx_ng_st_ng>)]) sil))
frate, target rule = 80 public <past> = (((sil [((sh <any_Cx_p_sh_d>) | (<any_Cx_p_sh_d> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil d (sil [((sh <any_Cx_p_sh_d>) | (<any_Cx_p_sh_d> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_jh_d_sh_p> jh)] | [(jh <any_Cx_jh_d_sh_p>)]) (p | ((<any_Cx_jh_d_sh_p> jh) | (jh <any_Cx_jh_d_sh_p>)))) ((([(<any_Vx_ng_jh_aa_noSlide> ng)] | [(ng <any_Vx_ng_jh_aa_noSlide>)]) ([(<any_Cx_ng_jh_s_p> ng)] | [(ng <any_Cx_ng_jh_s_p>)])) (aa | ((<any_Vx_ng_jh_aa_noSlide> ng) | (ng <any_Vx_ng_jh_aa_noSlide>)))) (([(<any_Cx_ng_ng_s> ng)] | [(ng <any_Cx_ng_ng_s>)]) (s | ((<any_Cx_ng_ng_s_t> ng) | (ng <any_Cx_ng_ng_s_t>)))) (([(<any_Cx_aa_ng_t_s> aa)] | [(aa <any_Cx_aa_ng_t_s>)]) (t | ((<any_Cx_aa_ng_t_s> aa) | (aa <any_Cx_aa_ng_t_s>)))) (([(<any_vowel_noSlide> k)] | [(k <any_vowel_noSlide>)]) ([(<any_Cx_aa_t_k> k)] | [(k <any_Cx_aa_t_k>)]) sil))
Running scan for frate = 72
Considering guard ng with value 1 for p ...
Considering guard zh with value 1 for p ...
Considering guard jh with value 1 for p ...
candidateGuards = map[jh:true ng:true zh:true]
Picking guard, ng

Running scan for frate = 72
Considering guard zh with value 1 for p ...
Considering guard ng with value 1 for p ...
Considering guard jh with value 1 for p ...
candidateGuards = map[jh:true ng:true zh:true]
Picking guard, ng

Considering guard ng with value 2 for ae ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 2 for aa ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ao with value 4 for s ...
Considering guard ng with value 4 for s ...
candidateGuards = map[ao:true ng:true]
Picking guard, ao

Considering guard ng with value 4 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard aa with value 1 for t ...
Considering guard oy with value 1 for t ...
candidateGuards = map[aa:true oy:true]
Picking guard, aa

Considering guard aa with value 1 for t ...
Considering guard oy with value 1 for t ...
candidateGuards = map[aa:true oy:true]
Picking guard, aa

frate, target rule = 72 public <past> = (((sil [((b <any_Cx_p_b_d>) | (<any_Cx_p_b_d> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]) | (sil d (sil [((b <any_Cx_p_b_d>) | (<any_Cx_p_b_d> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]))) (([(<any_Cx_ng_d_b_p> ng)] | [(ng <any_Cx_ng_d_b_p>)]) (p | ((<any_Cx_ng_d_b_p> ng) | (ng <any_Cx_ng_d_b_p>)))) ((([(<any_Vx_ng_ng_ae_noSlide> ng)] | [(ng <any_Vx_ng_ng_ae_noSlide>)]) ([(<any_Cx_ng_ng_s_p> ng)] | [(ng <any_Cx_ng_ng_s_p>)])) (ae | ((<any_Vx_ng_ng_ae_noSlide> ng) | (ng <any_Vx_ng_ng_ae_noSlide>)))) (([(<any_Cx_ao_ng_s> ao)] | [(ao <any_Cx_ao_ng_s>)]) (s | ((<any_Cx_ao_ng_s_t> ao) | (ao <any_Cx_ao_ng_s_t>)))) (([(<any_Cx_aa_ao_t_s> aa)] | [(aa <any_Cx_aa_ao_t_s>)]) (t | ((<any_Cx_aa_ao_t_s> aa) | (aa <any_Cx_aa_ao_t_s>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_aa_t_thr> thr)] | [(thr <any_Cx_aa_t_thr>)]) sil))
frate, target rule = 72 public <past> = (((sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil d (sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_ng_d_hh_p> ng)] | [(ng <any_Cx_ng_d_hh_p>)]) (p | ((<any_Cx_ng_d_hh_p> ng) | (ng <any_Cx_ng_d_hh_p>)))) ((([(<any_Vx_ng_ng_aa_noSlide> ng)] | [(ng <any_Vx_ng_ng_aa_noSlide>)]) ([(<any_Cx_ng_ng_s_p> ng)] | [(ng <any_Cx_ng_ng_s_p>)])) (aa | ((<any_Vx_ng_ng_aa_noSlide> ng) | (ng <any_Vx_ng_ng_aa_noSlide>)))) (([(<any_Cx_ng_ng_s> ng)] | [(ng <any_Cx_ng_ng_s>)]) (s | ((<any_Cx_ng_ng_s_t> ng) | (ng <any_Cx_ng_ng_s_t>)))) (([(<any_Cx_aa_ng_t_s> aa)] | [(aa <any_Cx_aa_ng_t_s>)]) (t | ((<any_Cx_aa_ng_t_s> aa) | (aa <any_Cx_aa_ng_t_s>)))) (([(<any_vowel_noSlide> ch)] | [(ch <any_vowel_noSlide>)]) ([(<any_Cx_aa_t_ch> ch)] | [(ch <any_Cx_aa_t_ch>)]) sil))

results =
{72 [{sil 0 9} {p 10 15} {ae 16 30} {st 31 47} {sil 48 60}]}
{80 [{sil 0 10} {p 11 17} {ae 18 34} {st 35 52} {sil 53 63}]}
{91 [{sil 0 12} {p 13 22} {ae 23 39} {st 40 60} {sil 61 76}]}
{105 [{sil 0 14} {p 15 25} {ae 26 46} {st 47 69} {sil 70 89}]}
{125 [{sil 3 19} {p 20 28} {ae 29 55} {st 56 83} {sil 84 107}]}

normalised results =
{72 [{sil 0 9} {p 14 21} {ae 22 42} {st 43 65} {sil 67 83}]}
{80 [{sil 0 10} {p 14 21} {ae 23 43} {st 44 65} {sil 66 79}]}
{91 [{sil 0 12} {p 14 24} {ae 25 43} {st 44 66} {sil 67 84}]}
{105 [{sil 0 14} {p 14 24} {ae 25 44} {st 45 66} {sil 67 85}]}
{125 [{sil 3 19} {p 16 22} {ae 23 44} {st 45 66} {sil 67 86}]}

ruleAligned = [{{p 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ae 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{st 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {p 14 21} {ae 22 42} {st 43 65} {sil 67 67}]}
{80 [{sil 0 0} {p 14 21} {ae 23 43} {st 44 65} {sil 66 66}]}
{91 [{sil 0 0} {p 14 24} {ae 25 43} {st 44 66} {sil 67 67}]}
{105 [{sil 0 0} {p 14 24} {ae 25 44} {st 45 66} {sil 67 67}]}
{125 [{sil 3 3} {p 16 22} {ae 23 44} {st 45 66} {sil 67 67}]}

timeAligned = [{{p 14 22} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ae 23 43} [{0 2} {1 2} {4 2} {2 2} {3 2}]} {{st 44 66} [{0 3} {1 3} {2 3} {3 3} {4 3}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 21
i, iTime, newITime, timeStartFrom = 2 1 2 42
combinedVerdict    = [{p 0} {ae 0} {st 0}]
ruleAlignedVerdict = [{p 0} {ae 0} {st 0}]

score->
+1 for p
+1 for ae
+1 for st
score<-: 8

results =
{72 [{sil 0 9} {p 10 15} {ae 16 31} {s 32 39} {t 40 50} {sil 51 60}]}
{80 [{sil 0 10} {p 11 17} {ae 18 34} {s 35 43} {t 44 52} {sil 53 63}]}
{91 [{sil 0 12} {p 13 22} {ae 23 39} {s 40 50} {t 51 64} {sil 65 76}]}
{105 [{sil 0 14} {p 15 25} {ae 26 46} {s 47 58} {t 59 72} {sil 73 89}]}
{125 [{sil 3 19} {p 20 28} {ae 29 55} {s 56 71} {t 72 86} {sil 87 107}]}

normalised results =
{72 [{sil 0 9} {p 14 21} {ae 22 43} {s 44 54} {t 56 69} {sil 71 83}]}
{80 [{sil 0 10} {p 14 21} {ae 23 43} {s 44 54} {t 55 65} {sil 66 79}]}
{91 [{sil 0 12} {p 14 24} {ae 25 43} {s 44 55} {t 56 70} {sil 71 84}]}
{105 [{sil 0 14} {p 14 24} {ae 25 44} {s 45 55} {t 56 69} {sil 70 85}]}
{125 [{sil 3 19} {p 16 22} {ae 23 44} {s 45 57} {t 58 69} {sil 70 86}]}

ruleAligned = [{{p 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ae 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{s 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{t 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {p 14 21} {ae 22 43} {s 44 54} {t 56 69} {sil 71 71}]}
{80 [{sil 0 0} {p 14 21} {ae 23 43} {s 44 54} {t 55 65} {sil 66 66}]}
{91 [{sil 0 0} {p 14 24} {ae 25 43} {s 44 55} {t 56 70} {sil 71 71}]}
{105 [{sil 0 0} {p 14 24} {ae 25 44} {s 45 55} {t 56 69} {sil 70 70}]}
{125 [{sil 3 3} {p 16 22} {ae 23 44} {s 45 57} {t 58 69} {sil 70 70}]}

timeAligned = [{{p 14 22} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ae 23 43} [{0 2} {1 2} {4 2} {2 2} {3 2}]} {{s 44 55} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{t 56 69} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 21
i, iTime, newITime, timeStartFrom = 2 1 2 43
i, iTime, newITime, timeStartFrom = 3 2 3 54
combinedVerdict    = [{p 0} {ae 0} {s 0} {t 0}]
ruleAlignedVerdict = [{p 0} {ae 0} {s 0} {t 0}]

score->
+1 for p
+1 for ae
+1 for s
+1 for t
score<-: 9

results =
{72 [{sil 0 9} {p 10 17} {aa 18 30} {st 31 47} {sil 48 60}]}
{80 [{sil 0 10} {p 11 19} {aa 20 33} {st 34 52} {sil 53 63}]}
{91 [{sil 0 12} {p 13 22} {aa 23 38} {st 39 60} {sil 61 76}]}
{105 [{sil 0 14} {p 15 25} {aa 26 44} {st 45 69} {sil 70 89}]}
{125 [{sil 3 19} {p 20 28} {ae 29 51} {ng 52 54} {st 55 83} {sil 84 107}]}

normalised results =
{72 [{sil 0 9} {p 14 24} {aa 25 42} {st 43 65} {sil 67 83}]}
{80 [{sil 0 10} {p 14 24} {aa 25 41} {st 43 65} {sil 66 79}]}
{91 [{sil 0 12} {p 14 24} {aa 25 42} {st 43 66} {sil 67 84}]}
{105 [{sil 0 14} {p 14 24} {aa 25 42} {st 43 66} {sil 67 85}]}
{125 [{sil 3 19} {p 16 22} {ae 23 41} {ng 42 42} {st 44 66} {sil 67 86}]}

ruleAligned = [{{p 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{aa 0} [{0 2} {1 2} {2 2} {3 2}]} {{st 0} [{0 3} {1 3} {2 3} {3 3} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {p 14 24} {aa 25 42} {st 43 65} {sil 67 67}]}
{80 [{sil 0 0} {p 14 24} {aa 25 41} {st 43 65} {sil 66 66}]}
{91 [{sil 0 0} {p 14 24} {aa 25 42} {st 43 66} {sil 67 67}]}
{105 [{sil 0 0} {p 14 24} {aa 25 42} {st 43 66} {sil 67 67}]}
{125 [{sil 3 3} {p 16 22} {ae 23 41} {ng 42 42} {st 44 66} {sil 67 67}]}

timeAligned = [{{p 14 24} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{aa 25 42} [{0 2} {1 2} {2 2} {3 2}]} {{st 43 66} [{0 3} {1 3} {2 3} {3 3} {4 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 22
i, iTime, newITime, timeStartFrom = 2 1 2 41
combinedVerdict    = [{p 0} {aa 0} {st 0}]
ruleAlignedVerdict = [{p 0} {aa 0} {st 0}]

score->
+1 for p
+1 for aa
+1 for st
score<-: 8

results =
{72 [{sil 0 9} {p 10 17} {aa 18 30} {s 31 39} {t 40 50} {sil 51 60}]}
{80 [{sil 0 10} {p 11 19} {aa 20 33} {s 34 43} {t 44 52} {sil 53 63}]}
{91 [{sil 0 12} {p 13 22} {aa 23 39} {s 40 50} {t 51 64} {sil 65 76}]}
{105 [{sil 0 14} {p 15 25} {aa 26 45} {s 46 58} {t 59 72} {sil 73 89}]}
{125 [{sil 3 19} {p 20 28} {ae 29 51} {ng 52 54} {s 55 71} {t 72 86} {sil 87 107}]}

normalised results =
{72 [{sil 0 9} {p 14 24} {aa 25 42} {s 43 54} {t 56 69} {sil 71 83}]}
{80 [{sil 0 10} {p 14 24} {aa 25 41} {s 43 54} {t 55 65} {sil 66 79}]}
{91 [{sil 0 12} {p 14 24} {aa 25 43} {s 44 55} {t 56 70} {sil 71 84}]}
{105 [{sil 0 14} {p 14 24} {aa 25 43} {s 44 55} {t 56 69} {sil 70 85}]}
{125 [{sil 3 19} {p 16 22} {ae 23 41} {ng 42 42} {s 44 57} {t 58 69} {sil 70 86}]}

ruleAligned = [{{p 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{aa 0} [{0 2} {1 2} {2 2} {3 2}]} {{s 0} [{0 3} {1 3} {2 3} {3 3} {4 4}]} {{t 0} [{0 4} {1 4} {2 4} {3 4} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {p 14 24} {aa 25 42} {s 43 54} {t 56 69} {sil 71 71}]}
{80 [{sil 0 0} {p 14 24} {aa 25 41} {s 43 54} {t 55 65} {sil 66 66}]}
{91 [{sil 0 0} {p 14 24} {aa 25 43} {s 44 55} {t 56 70} {sil 71 71}]}
{105 [{sil 0 0} {p 14 24} {aa 25 43} {s 44 55} {t 56 69} {sil 70 70}]}
{125 [{sil 3 3} {p 16 22} {ae 23 41} {ng 42 42} {s 44 57} {t 58 69} {sil 70 70}]}

timeAligned = [{{p 14 24} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{aa 25 42} [{0 2} {1 2} {2 2} {3 2}]} {{s 44 55} [{0 3} {1 3} {2 3} {3 3} {4 4}]} {{t 56 69} [{0 4} {1 4} {2 4} {3 4} {4 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 22
i, iTime, newITime, timeStartFrom = 2 1 2 41
i, iTime, newITime, timeStartFrom = 3 2 3 54
combinedVerdict    = [{p 0} {aa 0} {s 0} {t 0}]
ruleAlignedVerdict = [{p 0} {aa 0} {s 0} {t 0}]

score->
+1 for p
+1 for aa
+1 for s
+1 for t
score<-: 9
testPronounce p good ae good s good t good
publish->
phonsToAlphas = [{[p] p} {[ae] a} {[s] s} {[t] t}]
getVerdict<-:new {p [p] 0}
getVerdict<-:new {a [ae] 0}
getVerdict<-:new {s [s] 0}
getVerdict<-:new {t [t] 0}
lettersVerdicts = [{p [p] 0} {a [ae] 0} {s [s] 0} {t [t] 0}]
publish<-
Total: 433.38372ms
{
  "results": [
    {
      "letters": "p",
      "phonemes": "p",
      "verdict": "good"
    },
    {
      "letters": "a",
      "phonemes": "æ",
      "verdict": "good"
    },
    {
      "letters": "s",
      "phonemes": "s",
      "verdict": "good"
    },
    {
      "letters": "t",
      "phonemes": "t",
      "verdict": "good"
    }
  ],
  "err": null
}
