
 length of audio =  2.282313



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.76 0.94 1.7

 start3, duration3, end3 =  0.86 0.76 1.62

 Initial start, duration, end =  0.66 1.04 1.7

 Cut at: start, duration =  0.66 1.49     guard_end =  2.15 

Running scan for frate = 125
Considering guard sh with value 1.6 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ey ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 125 public <lay> = (((sil [((r <any_Cx_l_r_p>) | (<any_Cx_l_r_p> r))] [((r <any_vowel_noSlide>) | (<any_vowel_noSlide> r))]) | (sil p (sil [((r <any_Cx_l_r_p>) | (<any_Cx_l_r_p> r))] [((r <any_vowel_noSlide>) | (<any_vowel_noSlide> r))]))) (([(<any_Cx_sh_p_r_l> sh)] | [(sh <any_Cx_sh_p_r_l>)]) (l | ((<any_Cx_sh_p_r_l> sh) | (sh <any_Cx_sh_p_r_l>)))) ((([(<any_Vx_sh_sh_ey_noSlide> sh)] | [(sh <any_Vx_sh_sh_ey_noSlide>)]) ([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)])) (ey | ((<any_Vx_sh_sh_ey_noSlide> sh) | (sh <any_Vx_sh_sh_ey_noSlide>)))) (([(<any_Cx_sh_ey_n> n)] | [(n <any_Cx_sh_ey_n>)]) ([(<any_Vx_sh_ey_n> n)] | [(n <any_Vx_sh_ey_n>)]) sil))
Running scan for frate = 105
Considering guard sh with value 1.6 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ey ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 105 public <lay> = (((sil [((m <any_Cx_l_m_p>) | (<any_Cx_l_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]) | (sil p (sil [((m <any_Cx_l_m_p>) | (<any_Cx_l_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]))) (([(<any_Cx_sh_p_m_l> sh)] | [(sh <any_Cx_sh_p_m_l>)]) (l | ((<any_Cx_sh_p_m_l> sh) | (sh <any_Cx_sh_p_m_l>)))) ((([(<any_Vx_sh_sh_ey_noSlide> sh)] | [(sh <any_Vx_sh_sh_ey_noSlide>)]) ([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)])) (ey | ((<any_Vx_sh_sh_ey_noSlide> sh) | (sh <any_Vx_sh_sh_ey_noSlide>)))) (([(<any_Cx_sh_ey_w> w)] | [(w <any_Cx_sh_ey_w>)]) ([(<any_Vx_sh_ey_w> w)] | [(w <any_Vx_sh_ey_w>)]) sil))
Running scan for frate = 91
Considering guard sh with value 1.6 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ey ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 91 public <lay> = (((sil [((w <any_Cx_l_w_p>) | (<any_Cx_l_w_p> w))] [((w <any_vowel_noSlide>) | (<any_vowel_noSlide> w))]) | (sil p (sil [((w <any_Cx_l_w_p>) | (<any_Cx_l_w_p> w))] [((w <any_vowel_noSlide>) | (<any_vowel_noSlide> w))]))) (([(<any_Cx_sh_p_w_l> sh)] | [(sh <any_Cx_sh_p_w_l>)]) (l | ((<any_Cx_sh_p_w_l> sh) | (sh <any_Cx_sh_p_w_l>)))) ((([(<any_Vx_sh_sh_ey_noSlide> sh)] | [(sh <any_Vx_sh_sh_ey_noSlide>)]) ([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)])) (ey | ((<any_Vx_sh_sh_ey_noSlide> sh) | (sh <any_Vx_sh_sh_ey_noSlide>)))) (([(<any_Cx_sh_ey_r> r)] | [(r <any_Cx_sh_ey_r>)]) ([(<any_Vx_sh_ey_r> r)] | [(r <any_Vx_sh_ey_r>)]) sil))
Running scan for frate = 80
Considering guard sh with value 1.6 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ey ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 80 public <lay> = (((sil [((r <any_Cx_l_r_p>) | (<any_Cx_l_r_p> r))] [((r <any_vowel_noSlide>) | (<any_vowel_noSlide> r))]) | (sil p (sil [((r <any_Cx_l_r_p>) | (<any_Cx_l_r_p> r))] [((r <any_vowel_noSlide>) | (<any_vowel_noSlide> r))]))) (([(<any_Cx_sh_p_r_l> sh)] | [(sh <any_Cx_sh_p_r_l>)]) (l | ((<any_Cx_sh_p_r_l> sh) | (sh <any_Cx_sh_p_r_l>)))) ((([(<any_Vx_sh_sh_ey_noSlide> sh)] | [(sh <any_Vx_sh_sh_ey_noSlide>)]) ([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)])) (ey | ((<any_Vx_sh_sh_ey_noSlide> sh) | (sh <any_Vx_sh_sh_ey_noSlide>)))) (([(<any_Cx_sh_ey_n> n)] | [(n <any_Cx_sh_ey_n>)]) ([(<any_Vx_sh_ey_n> n)] | [(n <any_Vx_sh_ey_n>)]) sil))
Running scan for frate = 72
Considering guard sh with value 1.6 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ey ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 72 public <lay> = (((sil [((m <any_Cx_l_m_p>) | (<any_Cx_l_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]) | (sil p (sil [((m <any_Cx_l_m_p>) | (<any_Cx_l_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]))) (([(<any_Cx_sh_p_m_l> sh)] | [(sh <any_Cx_sh_p_m_l>)]) (l | ((<any_Cx_sh_p_m_l> sh) | (sh <any_Cx_sh_p_m_l>)))) ((([(<any_Vx_sh_sh_ey_noSlide> sh)] | [(sh <any_Vx_sh_sh_ey_noSlide>)]) ([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)])) (ey | ((<any_Vx_sh_sh_ey_noSlide> sh) | (sh <any_Vx_sh_sh_ey_noSlide>)))) (([(<any_Cx_sh_ey_r> r)] | [(r <any_Cx_sh_ey_r>)]) ([(<any_Vx_sh_ey_r> r)] | [(r <any_Vx_sh_ey_r>)]) sil))

results =
{72 [{sil 0 18} {l 19 30} {ey 31 54} {sil 55 63}]}
{80 [{sil 0 20} {l 21 32} {ey 33 35} {ow 36 52} {n 53 65} {sil 66 68}]}
{91 [{sil 0 11} {g 12 18} {sh 19 23} {l 24 39} {ey 40 46} {r 47 53} {iy 54 77} {sil 78 130}]}
{105 [{sil 0 14} {g 15 30} {m 31 35} {l 36 43} {eh 44 64} {sh 65 67} {iy 68 90} {sh 91 93} {sil 94 151}]}
{125 [{sil 3 19} {g 20 26} {sh 27 33} {sh 34 39} {uw 40 49} {er 50 80} {n 81 107} {sil 108 182}]}

normalised results =
{72 [{sil 0 18} {l 26 42} {ey 43 75} {sil 76 88}]}
{80 [{sil 0 20} {l 26 40} {ey 41 41} {ow 45 65} {n 66 81} {sil 83 83}]}
{91 [{sil 0 11} {g 13 20} {sh 21 25} {l 26 43} {ey 44 51} {r 52 58} {iy 59 85} {sil 86 143}]}
{105 [{sil 0 14} {g 14 29} {m 30 33} {l 34 41} {eh 42 61} {sh 62 62} {iy 65 86} {sh 87 87} {sil 90 144}]}
{125 [{sil 3 19} {g 16 21} {sh 22 26} {sh 27 31} {uw 32 39} {er 40 64} {n 65 86} {sil 86 146}]}

ruleAligned = [{{l 0} [{0 1} {1 1} {2 3} {3 3}]} {{ey 2} [{0 2} {2 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {l 26 42} {ey 43 75} {sil 76 76}]}
{80 [{sil 0 0} {l 26 40} {ey 41 41} {ow 45 65} {n 66 81} {sil 83 83}]}
{91 [{sil 0 0} {g 13 20} {sh 21 21} {l 26 43} {ey 44 51} {r 52 52} {iy 59 85} {sil 86 86}]}
{105 [{sil 0 0} {g 14 29} {m 30 30} {l 34 41} {eh 42 61} {sh 62 62} {iy 65 86} {sh 87 87} {sil 90 90}]}
{125 [{sil 3 3} {g 16 21} {sh 22 22} {sh 27 27} {uw 32 39} {er 40 64} {n 65 86} {sil 86 86}]}

timeAligned = [{{g 16 20} [{2 1} {3 1} {4 1}]} {{l 26 41} [{0 1} {1 1} {2 3} {3 3}]}]

i, iTime, newITime, timeStartFrom = 0 0 1 0
i, iTime, newITime, timeStartFrom = 1 1 -1 40
combinedVerdict    = [{g 3} {l 0} {ey 2}]
ruleAlignedVerdict = [{l 0} {ey 2}]

score->
-1 for g
+1 for l
-1 for ey
score<-: -1
bestResult = {-1 [{g 3} {l 0} {ey 2}] [l ey]}
testPronounce g surprise l good ey missing
publish->
phonsToAlphas = [{[l] l} {[ey] ay}]
getVerdict<-:new {l [l] 0}
getVerdict<-:new {ay [ey] 2}
lettersVerdicts = [{g [g] 3} {l [l] 0} {ay [ey] 2}]
publish<-
{
  "results": [
    {
      "letters": "g",
      "phonemes": "g",
      "verdict": "surprise"
    },
    {
      "letters": "l",
      "phonemes": "l",
      "verdict": "good"
    },
    {
      "letters": "ay",
      "phonemes": "eÉª",
      "verdict": "missing"
    }
  ],
  "err": null
}
