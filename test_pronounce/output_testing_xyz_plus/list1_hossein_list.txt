
 length of audio =  2.517



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  1.24 0.48 1.72

 start3, duration3, end3 =  1.26 0.33999999999999997 1.6

 Initial start, duration, end =  1.14 0.5800000000000001 1.72

 Cut at: start, duration =  1.14 1.03     guard_end =  2.17 

Running scan for frate = 125
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard d with value 8 for ih ...
candidateGuards = map[d:true]
Picking guard, d

Considering guard l with value 6.799999999999999 for s ...
candidateGuards = map[l:true]
Picking guard, l

Considering guard aa with value 1 for t ...
candidateGuards = map[aa:true]
Picking guard, aa


frate, target rule = 125 public <list> = (((sil [((z <any_Cx_l_z_p>) | (<any_Cx_l_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_l_z_p>) | (<any_Cx_l_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_l> sh)] | [(sh <any_Cx_sh_p_z_l>)]) (l | ((<any_Cx_sh_p_z_l> sh) | (sh <any_Cx_sh_p_z_l>)))) ((([(<any_Vx_d_sh_ih_noSlide> d)] | [(d <any_Vx_d_sh_ih_noSlide>)]) ([(<any_Cx_d_sh_s_l> d)] | [(d <any_Cx_d_sh_s_l>)])) (ih | ((<any_Vx_d_sh_ih_noSlide> d) | (d <any_Vx_d_sh_ih_noSlide>)))) (([(<any_Cx_l_d_s> l)] | [(l <any_Cx_l_d_s>)]) (s | ((<any_Cx_l_d_s_t> l) | (l <any_Cx_l_d_s_t>)))) (([(<any_Cx_aa_l_t_s> aa)] | [(aa <any_Cx_aa_l_t_s>)]) (t | ((<any_Cx_aa_l_t_s> aa) | (aa <any_Cx_aa_l_t_s>)))) (([(<any_vowel_noSlide> ch)] | [(ch <any_vowel_noSlide>)]) ([(<any_Cx_aa_t_ch> ch)] | [(ch <any_Cx_aa_t_ch>)]) sil))
Running scan for frate = 105
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard d with value 8 for ih ...
candidateGuards = map[d:true]
Picking guard, d

Considering guard l with value 6.799999999999999 for s ...
candidateGuards = map[l:true]
Picking guard, l

Considering guard aa with value 1 for t ...
candidateGuards = map[aa:true]
Picking guard, aa


frate, target rule = 105 public <list> = (((sil [((w <any_Cx_l_w_p>) | (<any_Cx_l_w_p> w))] [((w <any_vowel_noSlide>) | (<any_vowel_noSlide> w))]) | (sil p (sil [((w <any_Cx_l_w_p>) | (<any_Cx_l_w_p> w))] [((w <any_vowel_noSlide>) | (<any_vowel_noSlide> w))]))) (([(<any_Cx_sh_p_w_l> sh)] | [(sh <any_Cx_sh_p_w_l>)]) (l | ((<any_Cx_sh_p_w_l> sh) | (sh <any_Cx_sh_p_w_l>)))) ((([(<any_Vx_d_sh_ih_noSlide> d)] | [(d <any_Vx_d_sh_ih_noSlide>)]) ([(<any_Cx_d_sh_s_l> d)] | [(d <any_Cx_d_sh_s_l>)])) (ih | ((<any_Vx_d_sh_ih_noSlide> d) | (d <any_Vx_d_sh_ih_noSlide>)))) (([(<any_Cx_l_d_s> l)] | [(l <any_Cx_l_d_s>)]) (s | ((<any_Cx_l_d_s_t> l) | (l <any_Cx_l_d_s_t>)))) (([(<any_Cx_aa_l_t_s> aa)] | [(aa <any_Cx_aa_l_t_s>)]) (t | ((<any_Cx_aa_l_t_s> aa) | (aa <any_Cx_aa_l_t_s>)))) (([(<any_vowel_noSlide> k)] | [(k <any_vowel_noSlide>)]) ([(<any_Cx_aa_t_k> k)] | [(k <any_Cx_aa_t_k>)]) sil))
Running scan for frate = 91
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard d with value 8 for ih ...
candidateGuards = map[d:true]
Picking guard, d

Considering guard l with value 6.799999999999999 for s ...
candidateGuards = map[l:true]
Picking guard, l

Considering guard aa with value 1 for t ...
candidateGuards = map[aa:true]
Picking guard, aa


frate, target rule = 91 public <list> = (((sil [((m <any_Cx_l_m_p>) | (<any_Cx_l_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]) | (sil p (sil [((m <any_Cx_l_m_p>) | (<any_Cx_l_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]))) (([(<any_Cx_sh_p_m_l> sh)] | [(sh <any_Cx_sh_p_m_l>)]) (l | ((<any_Cx_sh_p_m_l> sh) | (sh <any_Cx_sh_p_m_l>)))) ((([(<any_Vx_d_sh_ih_noSlide> d)] | [(d <any_Vx_d_sh_ih_noSlide>)]) ([(<any_Cx_d_sh_s_l> d)] | [(d <any_Cx_d_sh_s_l>)])) (ih | ((<any_Vx_d_sh_ih_noSlide> d) | (d <any_Vx_d_sh_ih_noSlide>)))) (([(<any_Cx_l_d_s> l)] | [(l <any_Cx_l_d_s>)]) (s | ((<any_Cx_l_d_s_t> l) | (l <any_Cx_l_d_s_t>)))) (([(<any_Cx_aa_l_t_s> aa)] | [(aa <any_Cx_aa_l_t_s>)]) (t | ((<any_Cx_aa_l_t_s> aa) | (aa <any_Cx_aa_l_t_s>)))) (([(<any_vowel_noSlide> k)] | [(k <any_vowel_noSlide>)]) ([(<any_Cx_aa_t_k> k)] | [(k <any_Cx_aa_t_k>)]) sil))
Running scan for frate = 80
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard d with value 8 for ih ...
candidateGuards = map[d:true]
Picking guard, d

Considering guard l with value 6.799999999999999 for s ...
candidateGuards = map[l:true]
Picking guard, l

Considering guard aa with value 1 for t ...
candidateGuards = map[aa:true]
Picking guard, aa


frate, target rule = 80 public <list> = (((sil [((r <any_Cx_l_r_p>) | (<any_Cx_l_r_p> r))] [((r <any_vowel_noSlide>) | (<any_vowel_noSlide> r))]) | (sil p (sil [((r <any_Cx_l_r_p>) | (<any_Cx_l_r_p> r))] [((r <any_vowel_noSlide>) | (<any_vowel_noSlide> r))]))) (([(<any_Cx_sh_p_r_l> sh)] | [(sh <any_Cx_sh_p_r_l>)]) (l | ((<any_Cx_sh_p_r_l> sh) | (sh <any_Cx_sh_p_r_l>)))) ((([(<any_Vx_d_sh_ih_noSlide> d)] | [(d <any_Vx_d_sh_ih_noSlide>)]) ([(<any_Cx_d_sh_s_l> d)] | [(d <any_Cx_d_sh_s_l>)])) (ih | ((<any_Vx_d_sh_ih_noSlide> d) | (d <any_Vx_d_sh_ih_noSlide>)))) (([(<any_Cx_l_d_s> l)] | [(l <any_Cx_l_d_s>)]) (s | ((<any_Cx_l_d_s_t> l) | (l <any_Cx_l_d_s_t>)))) (([(<any_Cx_aa_l_t_s> aa)] | [(aa <any_Cx_aa_l_t_s>)]) (t | ((<any_Cx_aa_l_t_s> aa) | (aa <any_Cx_aa_l_t_s>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_aa_t_d> d)] | [(d <any_Cx_aa_t_d>)]) sil))
Running scan for frate = 72
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard d with value 8 for ih ...
candidateGuards = map[d:true]
Picking guard, d

Considering guard l with value 6.799999999999999 for s ...
candidateGuards = map[l:true]
Picking guard, l

Considering guard aa with value 1 for t ...
candidateGuards = map[aa:true]
Picking guard, aa


frate, target rule = 72 public <list> = (((sil [((w <any_Cx_l_w_p>) | (<any_Cx_l_w_p> w))] [((w <any_vowel_noSlide>) | (<any_vowel_noSlide> w))]) | (sil p (sil [((w <any_Cx_l_w_p>) | (<any_Cx_l_w_p> w))] [((w <any_vowel_noSlide>) | (<any_vowel_noSlide> w))]))) (([(<any_Cx_sh_p_w_l> sh)] | [(sh <any_Cx_sh_p_w_l>)]) (l | ((<any_Cx_sh_p_w_l> sh) | (sh <any_Cx_sh_p_w_l>)))) ((([(<any_Vx_d_sh_ih_noSlide> d)] | [(d <any_Vx_d_sh_ih_noSlide>)]) ([(<any_Cx_d_sh_s_l> d)] | [(d <any_Cx_d_sh_s_l>)])) (ih | ((<any_Vx_d_sh_ih_noSlide> d) | (d <any_Vx_d_sh_ih_noSlide>)))) (([(<any_Cx_l_d_s> l)] | [(l <any_Cx_l_d_s>)]) (s | ((<any_Cx_l_d_s_t> l) | (l <any_Cx_l_d_s_t>)))) (([(<any_Cx_aa_l_t_s> aa)] | [(aa <any_Cx_aa_l_t_s>)]) (t | ((<any_Cx_aa_l_t_s> aa) | (aa <any_Cx_aa_l_t_s>)))) (([(<any_vowel_noSlide> k)] | [(k <any_vowel_noSlide>)]) ([(<any_Cx_aa_t_k> k)] | [(k <any_Cx_aa_t_k>)]) sil))
Running scan for frate = 125
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard y with value 12 for ih ...
Considering guard ng with value 12 for ih ...
Considering guard n with value 12 for ih ...
candidateGuards = map[n:true ng:true y:true]
Picking guard, y

Considering guard l with value 3.3999999999999995 for st ...
candidateGuards = map[l:true]
Picking guard, l


frate, target rule = 125 public <list> = (((sil [((v <any_Cx_l_v_p>) | (<any_Cx_l_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]) | (sil p (sil [((v <any_Cx_l_v_p>) | (<any_Cx_l_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]))) (([(<any_Cx_sh_p_v_l> sh)] | [(sh <any_Cx_sh_p_v_l>)]) (l | ((<any_Cx_sh_p_v_l> sh) | (sh <any_Cx_sh_p_v_l>)))) ((([(<any_Vx_y_sh_ih_noSlide> y)] | [(y <any_Vx_y_sh_ih_noSlide>)]) ([(<any_Cx_y_sh_st_l> y)] | [(y <any_Cx_y_sh_st_l>)])) (ih | ((<any_Vx_y_sh_ih_noSlide> y) | (y <any_Vx_y_sh_ih_noSlide>)))) (([(<any_Cx_l_y_st> l)] | [(l <any_Cx_l_y_st>)]) (st | ((<any_Cx_l_y_st> l) | (l <any_Cx_l_y_st>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_l_st_ng> ng)] | [(ng <any_Cx_l_st_ng>)]) sil))
Running scan for frate = 105
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard n with value 12 for ih ...
Considering guard ng with value 12 for ih ...
Considering guard y with value 12 for ih ...
candidateGuards = map[n:true ng:true y:true]
Picking guard, n

Considering guard l with value 3.3999999999999995 for st ...
candidateGuards = map[l:true]
Picking guard, l


frate, target rule = 105 public <list> = (((sil [((r <any_Cx_l_r_p>) | (<any_Cx_l_r_p> r))] [((r <any_vowel_noSlide>) | (<any_vowel_noSlide> r))]) | (sil p (sil [((r <any_Cx_l_r_p>) | (<any_Cx_l_r_p> r))] [((r <any_vowel_noSlide>) | (<any_vowel_noSlide> r))]))) (([(<any_Cx_sh_p_r_l> sh)] | [(sh <any_Cx_sh_p_r_l>)]) (l | ((<any_Cx_sh_p_r_l> sh) | (sh <any_Cx_sh_p_r_l>)))) ((([(<any_Vx_n_sh_ih_noSlide> n)] | [(n <any_Vx_n_sh_ih_noSlide>)]) ([(<any_Cx_n_sh_st_l> n)] | [(n <any_Cx_n_sh_st_l>)])) (ih | ((<any_Vx_n_sh_ih_noSlide> n) | (n <any_Vx_n_sh_ih_noSlide>)))) (([(<any_Cx_l_n_st> l)] | [(l <any_Cx_l_n_st>)]) (st | ((<any_Cx_l_n_st> l) | (l <any_Cx_l_n_st>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_l_st_p> p)] | [(p <any_Cx_l_st_p>)]) sil))
Running scan for frate = 91
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard n with value 12 for ih ...
Considering guard y with value 12 for ih ...
Considering guard ng with value 12 for ih ...
candidateGuards = map[n:true ng:true y:true]
Picking guard, y

Considering guard l with value 3.3999999999999995 for st ...
candidateGuards = map[l:true]
Picking guard, l


frate, target rule = 91 public <list> = (((sil [((v <any_Cx_l_v_p>) | (<any_Cx_l_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]) | (sil p (sil [((v <any_Cx_l_v_p>) | (<any_Cx_l_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]))) (([(<any_Cx_sh_p_v_l> sh)] | [(sh <any_Cx_sh_p_v_l>)]) (l | ((<any_Cx_sh_p_v_l> sh) | (sh <any_Cx_sh_p_v_l>)))) ((([(<any_Vx_y_sh_ih_noSlide> y)] | [(y <any_Vx_y_sh_ih_noSlide>)]) ([(<any_Cx_y_sh_st_l> y)] | [(y <any_Cx_y_sh_st_l>)])) (ih | ((<any_Vx_y_sh_ih_noSlide> y) | (y <any_Vx_y_sh_ih_noSlide>)))) (([(<any_Cx_l_y_st> l)] | [(l <any_Cx_l_y_st>)]) (st | ((<any_Cx_l_y_st> l) | (l <any_Cx_l_y_st>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_l_st_n> n)] | [(n <any_Cx_l_st_n>)]) sil))
Running scan for frate = 80
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ng with value 12 for ih ...
Considering guard n with value 12 for ih ...
Considering guard y with value 12 for ih ...
candidateGuards = map[n:true ng:true y:true]
Picking guard, y

Considering guard l with value 3.3999999999999995 for st ...
candidateGuards = map[l:true]
Picking guard, l


frate, target rule = 80 public <list> = (((sil [((z <any_Cx_l_z_p>) | (<any_Cx_l_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_l_z_p>) | (<any_Cx_l_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_l> sh)] | [(sh <any_Cx_sh_p_z_l>)]) (l | ((<any_Cx_sh_p_z_l> sh) | (sh <any_Cx_sh_p_z_l>)))) ((([(<any_Vx_y_sh_ih_noSlide> y)] | [(y <any_Vx_y_sh_ih_noSlide>)]) ([(<any_Cx_y_sh_st_l> y)] | [(y <any_Cx_y_sh_st_l>)])) (ih | ((<any_Vx_y_sh_ih_noSlide> y) | (y <any_Vx_y_sh_ih_noSlide>)))) (([(<any_Cx_l_y_st> l)] | [(l <any_Cx_l_y_st>)]) (st | ((<any_Cx_l_y_st> l) | (l <any_Cx_l_y_st>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_l_st_p> p)] | [(p <any_Cx_l_st_p>)]) sil))
Running scan for frate = 72
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard n with value 12 for ih ...
Considering guard y with value 12 for ih ...
Considering guard ng with value 12 for ih ...
candidateGuards = map[n:true ng:true y:true]
Picking guard, n

Considering guard l with value 3.3999999999999995 for st ...
candidateGuards = map[l:true]
Picking guard, l


frate, target rule = 72 public <list> = (((sil [((r <any_Cx_l_r_p>) | (<any_Cx_l_r_p> r))] [((r <any_vowel_noSlide>) | (<any_vowel_noSlide> r))]) | (sil p (sil [((r <any_Cx_l_r_p>) | (<any_Cx_l_r_p> r))] [((r <any_vowel_noSlide>) | (<any_vowel_noSlide> r))]))) (([(<any_Cx_sh_p_r_l> sh)] | [(sh <any_Cx_sh_p_r_l>)]) (l | ((<any_Cx_sh_p_r_l> sh) | (sh <any_Cx_sh_p_r_l>)))) ((([(<any_Vx_n_sh_ih_noSlide> n)] | [(n <any_Vx_n_sh_ih_noSlide>)]) ([(<any_Cx_n_sh_st_l> n)] | [(n <any_Cx_n_sh_st_l>)])) (ih | ((<any_Vx_n_sh_ih_noSlide> n) | (n <any_Vx_n_sh_ih_noSlide>)))) (([(<any_Cx_l_n_st> l)] | [(l <any_Cx_l_n_st>)]) (st | ((<any_Cx_l_n_st> l) | (l <any_Cx_l_n_st>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_l_st_hh> hh)] | [(hh <any_Cx_l_st_hh>)]) sil))

results =
{72 [{sil 0 11} {l 12 17} {ih 18 22} {st 23 42} {sil 43 50}]}
{80 [{sil 0 13} {l 14 19} {ih 20 25} {st 26 47} {sil 48 53}]}
{91 [{sil 0 15} {l 16 22} {ih 23 28} {st 29 53} {sil 54 88}]}
{105 [{sil 0 19} {l 20 26} {ih 27 33} {st 34 61} {sil 62 103}]}
{125 [{sil 3 24} {l 25 32} {ih 33 41} {st 42 74} {sil 75 128}]}

normalised results =
{72 [{sil 0 11} {l 17 24} {ih 25 31} {st 32 58} {sil 60 69}]}
{80 [{sil 0 13} {l 18 24} {ih 25 31} {st 33 59} {sil 60 66}]}
{91 [{sil 0 15} {l 18 24} {ih 25 31} {st 32 58} {sil 59 97}]}
{105 [{sil 0 19} {l 19 25} {ih 26 31} {st 32 58} {sil 59 98}]}
{125 [{sil 3 24} {l 20 26} {ih 26 33} {st 34 59} {sil 60 102}]}

ruleAligned = [{{l 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ih 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{st 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {l 17 24} {ih 25 31} {st 32 58} {sil 60 60}]}
{80 [{sil 0 0} {l 18 24} {ih 25 31} {st 33 59} {sil 60 60}]}
{91 [{sil 0 0} {l 18 24} {ih 25 31} {st 32 58} {sil 59 59}]}
{105 [{sil 0 0} {l 19 25} {ih 26 31} {st 32 58} {sil 59 59}]}
{125 [{sil 3 3} {l 20 26} {ih 26 33} {st 34 59} {sil 60 60}]}

timeAligned = [{{l 18 24} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ih 25 31} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{st 32 58} [{0 3} {2 3} {3 3} {1 3} {4 3}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 24
i, iTime, newITime, timeStartFrom = 2 1 2 31
combinedVerdict    = [{l 0} {ih 0} {st 0}]
ruleAlignedVerdict = [{l 0} {ih 0} {st 0}]

score->
+1 for l
+1 for ih
+1 for st
score<-: 8

results =
{72 [{sil 0 11} {l 12 17} {ih 18 22} {s 23 35} {t 36 43} {sil 44 50}]}
{80 [{sil 0 13} {l 14 19} {ih 20 25} {s 26 40} {t 41 47} {sil 48 53}]}
{91 [{sil 0 15} {l 16 22} {ih 23 28} {s 29 45} {t 46 54} {sil 55 88}]}
{105 [{sil 0 19} {l 20 26} {ih 27 33} {s 34 54} {t 55 63} {sil 64 103}]}
{125 [{sil 3 24} {l 25 32} {ih 33 40} {s 41 65} {t 66 75} {sil 76 128}]}

normalised results =
{72 [{sil 0 11} {l 17 24} {ih 25 31} {s 32 49} {t 50 60} {sil 61 69}]}
{80 [{sil 0 13} {l 18 24} {ih 25 31} {s 33 50} {t 51 59} {sil 60 66}]}
{91 [{sil 0 15} {l 18 24} {ih 25 31} {s 32 49} {t 51 59} {sil 60 97}]}
{105 [{sil 0 19} {l 19 25} {ih 26 31} {s 32 51} {t 52 60} {sil 61 98}]}
{125 [{sil 3 24} {l 20 26} {ih 26 32} {s 33 52} {t 53 60} {sil 61 102}]}

ruleAligned = [{{l 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ih 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{s 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{t 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {l 17 24} {ih 25 31} {s 32 49} {t 50 60} {sil 61 61}]}
{80 [{sil 0 0} {l 18 24} {ih 25 31} {s 33 50} {t 51 59} {sil 60 60}]}
{91 [{sil 0 0} {l 18 24} {ih 25 31} {s 32 49} {t 51 59} {sil 60 60}]}
{105 [{sil 0 0} {l 19 25} {ih 26 31} {s 32 51} {t 52 60} {sil 61 61}]}
{125 [{sil 3 3} {l 20 26} {ih 26 32} {s 33 52} {t 53 60} {sil 61 61}]}

timeAligned = [{{l 18 24} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ih 25 31} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{s 32 50} [{0 3} {2 3} {3 3} {1 3} {4 3}]} {{t 51 60} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 24
i, iTime, newITime, timeStartFrom = 2 1 2 31
i, iTime, newITime, timeStartFrom = 3 2 3 49
combinedVerdict    = [{l 0} {ih 0} {s 0} {t 0}]
ruleAlignedVerdict = [{l 0} {ih 0} {s 0} {t 0}]

score->
+1 for l
+1 for ih
+1 for s
+1 for t
score<-: 9
testPronounce l good ih good s good t good
publish->
phonsToAlphas = [{[l] l} {[ih] i} {[s] s} {[t] t}]
getVerdict<-:new {l [l] 0}
getVerdict<-:new {i [ih] 0}
getVerdict<-:new {s [s] 0}
getVerdict<-:new {t [t] 0}
lettersVerdicts = [{l [l] 0} {i [ih] 0} {s [s] 0} {t [t] 0}]
publish<-
{
  "results": [
    {
      "letters": "l",
      "phonemes": "l",
      "verdict": "good"
    },
    {
      "letters": "i",
      "phonemes": "ɪ",
      "verdict": "good"
    },
    {
      "letters": "s",
      "phonemes": "s",
      "verdict": "good"
    },
    {
      "letters": "t",
      "phonemes": "t",
      "verdict": "good"
    }
  ],
  "err": null
}
