
 length of audio =  8.405



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0 2.7800000000000002 2.7800000000000002

 start3, duration3, end3 =  1.16 0.98 2.1399999999999997

 Initial start, duration, end =  0 2.7800000000000002 2.7800000000000002

 Cut at: start, duration =  0 3.2300000000000004     guard_end =  3.2300000000000004 

Running scan for frate = 125
Considering guard sh with value 1.6 for ah ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard s with value 3.5999999999999996 for r ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard y with value 3.5999999999999996 for eh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for axr ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 125 public <umbrella> = (((sil [((hh <any_Vx_ah_hh_p_noSlide>) | (<any_Vx_ah_hh_p_noSlide> hh))] [((hh <any_Cx_ah_hh_p>) | (<any_Cx_ah_hh_p> hh))]) | (sil p (sil [((hh <any_Vx_ah_hh_p_noSlide>) | (<any_Vx_ah_hh_p_noSlide> hh))] [((hh <any_Cx_ah_hh_p>) | (<any_Cx_ah_hh_p> hh))]))) ((([(<any_Vx_sh_p_hh_ah_noSlide> sh)] | [(sh <any_Vx_sh_p_hh_ah_noSlide>)]) ([(<any_Cx_sh_p_hh_m> sh)] | [(sh <any_Cx_sh_p_hh_m>)])) (ah | ((<any_Vx_sh_p_hh_ah_noSlide> sh) | (sh <any_Vx_sh_p_hh_ah_noSlide>)))) (([(<any_Cx_sh_sh_m_b> sh)] | [(sh <any_Cx_sh_sh_m_b>)]) (m | ((<any_Cx_sh_sh_m_b> sh) | (sh <any_Cx_sh_sh_m_b>)))) (([(<any_Cx_sh_sh_b_r_m> sh)] | [(sh <any_Cx_sh_sh_b_r_m>)]) (b | ((<any_Cx_sh_sh_b_r_m> sh) | (sh <any_Cx_sh_sh_b_r_m>)))) (([(<any_Cx_s_sh_r_b> s)] | [(s <any_Cx_s_sh_r_b>)]) (r | ((<any_Cx_s_sh_r_b> s) | (s <any_Cx_s_sh_r_b>)))) ((([(<any_Vx_y_s_eh_noSlide> y)] | [(y <any_Vx_y_s_eh_noSlide>)]) ([(<any_Cx_y_s_l_r> y)] | [(y <any_Cx_y_s_l_r>)])) (eh | ((<any_Vx_y_s_eh_noSlide> y) | (y <any_Vx_y_s_eh_noSlide>)))) (([(<any_Cx_sh_y_l> sh)] | [(sh <any_Cx_sh_y_l>)]) (l | ((<any_Cx_sh_y_l_axr> sh) | (sh <any_Cx_sh_y_l_axr>)))) (([(<any_Cx_sh_sh_axr_l> sh)] | [(sh <any_Cx_sh_sh_axr_l>)]) (axr | ((<any_Cx_sh_sh_axr_l> sh) | (sh <any_Cx_sh_sh_axr_l>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_sh_axr_f> f)] | [(f <any_Cx_sh_axr_f>)]) sil))
Running scan for frate = 105
Considering guard sh with value 1.6 for ah ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard s with value 3.5999999999999996 for r ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard y with value 3.5999999999999996 for eh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for axr ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 105 public <umbrella> = (((sil [((b <any_Vx_ah_b_p_noSlide>) | (<any_Vx_ah_b_p_noSlide> b))] [((b <any_Cx_ah_b_p>) | (<any_Cx_ah_b_p> b))]) | (sil p (sil [((b <any_Vx_ah_b_p_noSlide>) | (<any_Vx_ah_b_p_noSlide> b))] [((b <any_Cx_ah_b_p>) | (<any_Cx_ah_b_p> b))]))) ((([(<any_Vx_sh_p_b_ah_noSlide> sh)] | [(sh <any_Vx_sh_p_b_ah_noSlide>)]) ([(<any_Cx_sh_p_b_m> sh)] | [(sh <any_Cx_sh_p_b_m>)])) (ah | ((<any_Vx_sh_p_b_ah_noSlide> sh) | (sh <any_Vx_sh_p_b_ah_noSlide>)))) (([(<any_Cx_sh_sh_m_b> sh)] | [(sh <any_Cx_sh_sh_m_b>)]) (m | ((<any_Cx_sh_sh_m_b> sh) | (sh <any_Cx_sh_sh_m_b>)))) (([(<any_Cx_sh_sh_b_r_m> sh)] | [(sh <any_Cx_sh_sh_b_r_m>)]) (b | ((<any_Cx_sh_sh_b_r_m> sh) | (sh <any_Cx_sh_sh_b_r_m>)))) (([(<any_Cx_s_sh_r_b> s)] | [(s <any_Cx_s_sh_r_b>)]) (r | ((<any_Cx_s_sh_r_b> s) | (s <any_Cx_s_sh_r_b>)))) ((([(<any_Vx_y_s_eh_noSlide> y)] | [(y <any_Vx_y_s_eh_noSlide>)]) ([(<any_Cx_y_s_l_r> y)] | [(y <any_Cx_y_s_l_r>)])) (eh | ((<any_Vx_y_s_eh_noSlide> y) | (y <any_Vx_y_s_eh_noSlide>)))) (([(<any_Cx_sh_y_l> sh)] | [(sh <any_Cx_sh_y_l>)]) (l | ((<any_Cx_sh_y_l_axr> sh) | (sh <any_Cx_sh_y_l_axr>)))) (([(<any_Cx_sh_sh_axr_l> sh)] | [(sh <any_Cx_sh_sh_axr_l>)]) (axr | ((<any_Cx_sh_sh_axr_l> sh) | (sh <any_Cx_sh_sh_axr_l>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_sh_axr_thr> thr)] | [(thr <any_Cx_sh_axr_thr>)]) sil))
Running scan for frate = 91
Considering guard sh with value 1.6 for ah ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard s with value 3.5999999999999996 for r ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard y with value 3.5999999999999996 for eh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for axr ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 91 public <umbrella> = (((sil [((hh <any_Vx_ah_hh_p_noSlide>) | (<any_Vx_ah_hh_p_noSlide> hh))] [((hh <any_Cx_ah_hh_p>) | (<any_Cx_ah_hh_p> hh))]) | (sil p (sil [((hh <any_Vx_ah_hh_p_noSlide>) | (<any_Vx_ah_hh_p_noSlide> hh))] [((hh <any_Cx_ah_hh_p>) | (<any_Cx_ah_hh_p> hh))]))) ((([(<any_Vx_sh_p_hh_ah_noSlide> sh)] | [(sh <any_Vx_sh_p_hh_ah_noSlide>)]) ([(<any_Cx_sh_p_hh_m> sh)] | [(sh <any_Cx_sh_p_hh_m>)])) (ah | ((<any_Vx_sh_p_hh_ah_noSlide> sh) | (sh <any_Vx_sh_p_hh_ah_noSlide>)))) (([(<any_Cx_sh_sh_m_b> sh)] | [(sh <any_Cx_sh_sh_m_b>)]) (m | ((<any_Cx_sh_sh_m_b> sh) | (sh <any_Cx_sh_sh_m_b>)))) (([(<any_Cx_sh_sh_b_r_m> sh)] | [(sh <any_Cx_sh_sh_b_r_m>)]) (b | ((<any_Cx_sh_sh_b_r_m> sh) | (sh <any_Cx_sh_sh_b_r_m>)))) (([(<any_Cx_s_sh_r_b> s)] | [(s <any_Cx_s_sh_r_b>)]) (r | ((<any_Cx_s_sh_r_b> s) | (s <any_Cx_s_sh_r_b>)))) ((([(<any_Vx_y_s_eh_noSlide> y)] | [(y <any_Vx_y_s_eh_noSlide>)]) ([(<any_Cx_y_s_l_r> y)] | [(y <any_Cx_y_s_l_r>)])) (eh | ((<any_Vx_y_s_eh_noSlide> y) | (y <any_Vx_y_s_eh_noSlide>)))) (([(<any_Cx_sh_y_l> sh)] | [(sh <any_Cx_sh_y_l>)]) (l | ((<any_Cx_sh_y_l_axr> sh) | (sh <any_Cx_sh_y_l_axr>)))) (([(<any_Cx_sh_sh_axr_l> sh)] | [(sh <any_Cx_sh_sh_axr_l>)]) (axr | ((<any_Cx_sh_sh_axr_l> sh) | (sh <any_Cx_sh_sh_axr_l>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_sh_axr_thr> thr)] | [(thr <any_Cx_sh_axr_thr>)]) sil))
Running scan for frate = 80
Considering guard sh with value 1.6 for ah ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard s with value 3.5999999999999996 for r ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard y with value 3.5999999999999996 for eh ...
candidateGuards = map[y:true]
Picking guard, y

Running scan for frate = 125
Considering guard sh with value 1.6 for ah ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 4 for r ...
Considering guard s with value 4 for r ...
candidateGuards = map[s:true zh:true]
Picking guard, s

Considering guard sh with value 1 for axr ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 4 for ehl ...
Considering guard y with value 4 for ehl ...
candidateGuards = map[y:true zh:true]
Picking guard, zh

Considering guard sh with value 1 for axr ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 80 public <umbrella> = (((sil [((r <any_Vx_ah_r_p_noSlide>) | (<any_Vx_ah_r_p_noSlide> r))] [((r <any_Cx_ah_r_p>) | (<any_Cx_ah_r_p> r))]) | (sil p (sil [((r <any_Vx_ah_r_p_noSlide>) | (<any_Vx_ah_r_p_noSlide> r))] [((r <any_Cx_ah_r_p>) | (<any_Cx_ah_r_p> r))]))) ((([(<any_Vx_sh_p_r_ah_noSlide> sh)] | [(sh <any_Vx_sh_p_r_ah_noSlide>)]) ([(<any_Cx_sh_p_r_m> sh)] | [(sh <any_Cx_sh_p_r_m>)])) (ah | ((<any_Vx_sh_p_r_ah_noSlide> sh) | (sh <any_Vx_sh_p_r_ah_noSlide>)))) (([(<any_Cx_sh_sh_m_b> sh)] | [(sh <any_Cx_sh_sh_m_b>)]) (m | ((<any_Cx_sh_sh_m_b> sh) | (sh <any_Cx_sh_sh_m_b>)))) (([(<any_Cx_sh_sh_b_r_m> sh)] | [(sh <any_Cx_sh_sh_b_r_m>)]) (b | ((<any_Cx_sh_sh_b_r_m> sh) | (sh <any_Cx_sh_sh_b_r_m>)))) (([(<any_Cx_s_sh_r_b> s)] | [(s <any_Cx_s_sh_r_b>)]) (r | ((<any_Cx_s_sh_r_b> s) | (s <any_Cx_s_sh_r_b>)))) ((([(<any_Vx_y_s_eh_noSlide> y)] | [(y <any_Vx_y_s_eh_noSlide>)]) ([(<any_Cx_y_s_l_r> y)] | [(y <any_Cx_y_s_l_r>)])) (eh | ((<any_Vx_y_s_eh_noSlide> y) | (y <any_Vx_y_s_eh_noSlide>)))) (([(<any_Cx_sh_y_l> sh)] | [(sh <any_Cx_sh_y_l>)]) (l | ((<any_Cx_sh_y_l_axr> sh) | (sh <any_Cx_sh_y_l_axr>)))) (([(<any_Cx_sh_sh_axr_l> sh)] | [(sh <any_Cx_sh_sh_axr_l>)]) (axr | ((<any_Cx_sh_sh_axr_l> sh) | (sh <any_Cx_sh_sh_axr_l>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_sh_axr_p> p)] | [(p <any_Cx_sh_axr_p>)]) sil))
Running scan for frate = 72

Considering guard sh with value 1.6 for ah ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 125 public <umbrella> = (((sil [((r <any_Vx_ah_r_p_noSlide>) | (<any_Vx_ah_r_p_noSlide> r))] [((r <any_Cx_ah_r_p>) | (<any_Cx_ah_r_p> r))]) | (sil p (sil [((r <any_Vx_ah_r_p_noSlide>) | (<any_Vx_ah_r_p_noSlide> r))] [((r <any_Cx_ah_r_p>) | (<any_Cx_ah_r_p> r))]))) ((([(<any_Vx_sh_p_r_ah_noSlide> sh)] | [(sh <any_Vx_sh_p_r_ah_noSlide>)]) ([(<any_Cx_sh_p_r_m> sh)] | [(sh <any_Cx_sh_p_r_m>)])) (ah | ((<any_Vx_sh_p_r_ah_noSlide> sh) | (sh <any_Vx_sh_p_r_ah_noSlide>)))) (([(<any_Cx_sh_sh_m_b> sh)] | [(sh <any_Cx_sh_sh_m_b>)]) (m | ((<any_Cx_sh_sh_m_b> sh) | (sh <any_Cx_sh_sh_m_b>)))) (([(<any_Cx_sh_sh_b_r_m> sh)] | [(sh <any_Cx_sh_sh_b_r_m>)]) (b | ((<any_Cx_sh_sh_b_r_m> sh) | (sh <any_Cx_sh_sh_b_r_m>)))) (([(<any_Cx_s_sh_r_ehl_b> s)] | [(s <any_Cx_s_sh_r_ehl_b>)]) (r | ((<any_Cx_s_sh_r_ehl_b> s) | (s <any_Cx_s_sh_r_ehl_b>)))) (([(<any_Cx_zh_s_ehl_r> zh)] | [(zh <any_Cx_zh_s_ehl_r>)]) (ehl | ((<any_Cx_zh_s_ehl_axr_r> zh) | (zh <any_Cx_zh_s_ehl_axr_r>)))) (([(<any_Cx_sh_zh_axr_ehl> sh)] | [(sh <any_Cx_sh_zh_axr_ehl>)]) (axr | ((<any_Cx_sh_zh_axr_ehl> sh) | (sh <any_Cx_sh_zh_axr_ehl>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_sh_axr_thr> thr)] | [(thr <any_Cx_sh_axr_thr>)]) sil))
Running scan for frate = 105
Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ah ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard s with value 3.5999999999999996 for r ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard sh with value 3.2 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard y with value 3.5999999999999996 for eh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard zh with value 4 for r ...
Considering guard s with value 4 for r ...
candidateGuards = map[s:true zh:true]
Picking guard, zh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 4 for ehl ...
Considering guard y with value 4 for ehl ...
candidateGuards = map[y:true zh:true]
Picking guard, zh

Considering guard sh with value 1 for axr ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for axr ...
candidateGuards = map[sh:true]
Picking guard, sh



frate, target rule = 105 public <umbrella> = (((sil [((r <any_Vx_ah_r_p_noSlide>) | (<any_Vx_ah_r_p_noSlide> r))] [((r <any_Cx_ah_r_p>) | (<any_Cx_ah_r_p> r))]) | (sil p (sil [((r <any_Vx_ah_r_p_noSlide>) | (<any_Vx_ah_r_p_noSlide> r))] [((r <any_Cx_ah_r_p>) | (<any_Cx_ah_r_p> r))]))) ((([(<any_Vx_sh_p_r_ah_noSlide> sh)] | [(sh <any_Vx_sh_p_r_ah_noSlide>)]) ([(<any_Cx_sh_p_r_m> sh)] | [(sh <any_Cx_sh_p_r_m>)])) (ah | ((<any_Vx_sh_p_r_ah_noSlide> sh) | (sh <any_Vx_sh_p_r_ah_noSlide>)))) (([(<any_Cx_sh_sh_m_b> sh)] | [(sh <any_Cx_sh_sh_m_b>)]) (m | ((<any_Cx_sh_sh_m_b> sh) | (sh <any_Cx_sh_sh_m_b>)))) (([(<any_Cx_sh_sh_b_r_m> sh)] | [(sh <any_Cx_sh_sh_b_r_m>)]) (b | ((<any_Cx_sh_sh_b_r_m> sh) | (sh <any_Cx_sh_sh_b_r_m>)))) (([(<any_Cx_zh_sh_r_ehl_b> zh)] | [(zh <any_Cx_zh_sh_r_ehl_b>)]) (r | ((<any_Cx_zh_sh_r_ehl_b> zh) | (zh <any_Cx_zh_sh_r_ehl_b>)))) (([(<any_Cx_zh_zh_ehl_r> zh)] | [(zh <any_Cx_zh_zh_ehl_r>)]) (ehl | ((<any_Cx_zh_zh_ehl_axr_r> zh) | (zh <any_Cx_zh_zh_ehl_axr_r>)))) (([(<any_Cx_sh_zh_axr_ehl> sh)] | [(sh <any_Cx_sh_zh_axr_ehl>)]) (axr | ((<any_Cx_sh_zh_axr_ehl> sh) | (sh <any_Cx_sh_zh_axr_ehl>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_sh_axr_ng> ng)] | [(ng <any_Cx_sh_axr_ng>)]) sil))
Running scan for frate = 91
Considering guard sh with value 1.6 for ah ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 4 for r ...
Considering guard s with value 4 for r ...
candidateGuards = map[s:true zh:true]
Picking guard, zh

frate, target rule = 72 public <umbrella> = (((sil [((l <any_Vx_ah_l_p_noSlide>) | (<any_Vx_ah_l_p_noSlide> l))] [((l <any_Cx_ah_l_p>) | (<any_Cx_ah_l_p> l))]) | (sil p (sil [((l <any_Vx_ah_l_p_noSlide>) | (<any_Vx_ah_l_p_noSlide> l))] [((l <any_Cx_ah_l_p>) | (<any_Cx_ah_l_p> l))]))) ((([(<any_Vx_sh_p_l_ah_noSlide> sh)] | [(sh <any_Vx_sh_p_l_ah_noSlide>)]) ([(<any_Cx_sh_p_l_m> sh)] | [(sh <any_Cx_sh_p_l_m>)])) (ah | ((<any_Vx_sh_p_l_ah_noSlide> sh) | (sh <any_Vx_sh_p_l_ah_noSlide>)))) (([(<any_Cx_sh_sh_m_b> sh)] | [(sh <any_Cx_sh_sh_m_b>)]) (m | ((<any_Cx_sh_sh_m_b> sh) | (sh <any_Cx_sh_sh_m_b>)))) (([(<any_Cx_sh_sh_b_r_m> sh)] | [(sh <any_Cx_sh_sh_b_r_m>)]) (b | ((<any_Cx_sh_sh_b_r_m> sh) | (sh <any_Cx_sh_sh_b_r_m>)))) (([(<any_Cx_s_sh_r_b> s)] | [(s <any_Cx_s_sh_r_b>)]) (r | ((<any_Cx_s_sh_r_b> s) | (s <any_Cx_s_sh_r_b>)))) ((([(<any_Vx_y_s_eh_noSlide> y)] | [(y <any_Vx_y_s_eh_noSlide>)]) ([(<any_Cx_y_s_l_r> y)] | [(y <any_Cx_y_s_l_r>)])) (eh | ((<any_Vx_y_s_eh_noSlide> y) | (y <any_Vx_y_s_eh_noSlide>)))) (([(<any_Cx_sh_y_l> sh)] | [(sh <any_Cx_sh_y_l>)]) (l | ((<any_Cx_sh_y_l_axr> sh) | (sh <any_Cx_sh_y_l_axr>)))) (([(<any_Cx_sh_sh_axr_l> sh)] | [(sh <any_Cx_sh_sh_axr_l>)]) (axr | ((<any_Cx_sh_sh_axr_l> sh) | (sh <any_Cx_sh_sh_axr_l>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_sh_axr_f> f)] | [(f <any_Cx_sh_axr_f>)]) sil))
Considering guard y with value 4 for ehl ...
Considering guard zh with value 4 for ehl ...
candidateGuards = map[y:true zh:true]
Picking guard, y

Considering guard sh with value 1 for axr ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 91 public <umbrella> = (((sil [((b <any_Vx_ah_b_p_noSlide>) | (<any_Vx_ah_b_p_noSlide> b))] [((b <any_Cx_ah_b_p>) | (<any_Cx_ah_b_p> b))]) | (sil p (sil [((b <any_Vx_ah_b_p_noSlide>) | (<any_Vx_ah_b_p_noSlide> b))] [((b <any_Cx_ah_b_p>) | (<any_Cx_ah_b_p> b))]))) ((([(<any_Vx_sh_p_b_ah_noSlide> sh)] | [(sh <any_Vx_sh_p_b_ah_noSlide>)]) ([(<any_Cx_sh_p_b_m> sh)] | [(sh <any_Cx_sh_p_b_m>)])) (ah | ((<any_Vx_sh_p_b_ah_noSlide> sh) | (sh <any_Vx_sh_p_b_ah_noSlide>)))) (([(<any_Cx_sh_sh_m_b> sh)] | [(sh <any_Cx_sh_sh_m_b>)]) (m | ((<any_Cx_sh_sh_m_b> sh) | (sh <any_Cx_sh_sh_m_b>)))) (([(<any_Cx_sh_sh_b_r_m> sh)] | [(sh <any_Cx_sh_sh_b_r_m>)]) (b | ((<any_Cx_sh_sh_b_r_m> sh) | (sh <any_Cx_sh_sh_b_r_m>)))) (([(<any_Cx_zh_sh_r_ehl_b> zh)] | [(zh <any_Cx_zh_sh_r_ehl_b>)]) (r | ((<any_Cx_zh_sh_r_ehl_b> zh) | (zh <any_Cx_zh_sh_r_ehl_b>)))) (([(<any_Cx_y_zh_ehl_r> y)] | [(y <any_Cx_y_zh_ehl_r>)]) (ehl | ((<any_Cx_y_zh_ehl_axr_r> y) | (y <any_Cx_y_zh_ehl_axr_r>)))) (([(<any_Cx_sh_y_axr_ehl> sh)] | [(sh <any_Cx_sh_y_axr_ehl>)]) (axr | ((<any_Cx_sh_y_axr_ehl> sh) | (sh <any_Cx_sh_y_axr_ehl>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_sh_axr_hh> hh)] | [(hh <any_Cx_sh_axr_hh>)]) sil))
Running scan for frate = 80
Considering guard sh with value 1.6 for ah ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard s with value 4 for r ...
Considering guard zh with value 4 for r ...
candidateGuards = map[s:true zh:true]
Picking guard, s

Considering guard zh with value 4 for ehl ...
Considering guard y with value 4 for ehl ...
candidateGuards = map[y:true zh:true]
Picking guard, zh

Considering guard sh with value 1 for axr ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 80 public <umbrella> = (((sil [((hh <any_Vx_ah_hh_p_noSlide>) | (<any_Vx_ah_hh_p_noSlide> hh))] [((hh <any_Cx_ah_hh_p>) | (<any_Cx_ah_hh_p> hh))]) | (sil p (sil [((hh <any_Vx_ah_hh_p_noSlide>) | (<any_Vx_ah_hh_p_noSlide> hh))] [((hh <any_Cx_ah_hh_p>) | (<any_Cx_ah_hh_p> hh))]))) ((([(<any_Vx_sh_p_hh_ah_noSlide> sh)] | [(sh <any_Vx_sh_p_hh_ah_noSlide>)]) ([(<any_Cx_sh_p_hh_m> sh)] | [(sh <any_Cx_sh_p_hh_m>)])) (ah | ((<any_Vx_sh_p_hh_ah_noSlide> sh) | (sh <any_Vx_sh_p_hh_ah_noSlide>)))) (([(<any_Cx_sh_sh_m_b> sh)] | [(sh <any_Cx_sh_sh_m_b>)]) (m | ((<any_Cx_sh_sh_m_b> sh) | (sh <any_Cx_sh_sh_m_b>)))) (([(<any_Cx_sh_sh_b_r_m> sh)] | [(sh <any_Cx_sh_sh_b_r_m>)]) (b | ((<any_Cx_sh_sh_b_r_m> sh) | (sh <any_Cx_sh_sh_b_r_m>)))) (([(<any_Cx_s_sh_r_ehl_b> s)] | [(s <any_Cx_s_sh_r_ehl_b>)]) (r | ((<any_Cx_s_sh_r_ehl_b> s) | (s <any_Cx_s_sh_r_ehl_b>)))) (([(<any_Cx_zh_s_ehl_r> zh)] | [(zh <any_Cx_zh_s_ehl_r>)]) (ehl | ((<any_Cx_zh_s_ehl_axr_r> zh) | (zh <any_Cx_zh_s_ehl_axr_r>)))) (([(<any_Cx_sh_zh_axr_ehl> sh)] | [(sh <any_Cx_sh_zh_axr_ehl>)]) (axr | ((<any_Cx_sh_zh_axr_ehl> sh) | (sh <any_Cx_sh_zh_axr_ehl>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_sh_axr_n> n)] | [(n <any_Cx_sh_axr_n>)]) sil))
Running scan for frate = 72
Considering guard sh with value 1.6 for ah ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard s with value 4 for r ...
Considering guard zh with value 4 for r ...
candidateGuards = map[s:true zh:true]
Picking guard, zh

Considering guard zh with value 4 for ehl ...
Considering guard y with value 4 for ehl ...
candidateGuards = map[y:true zh:true]
Picking guard, y

Considering guard sh with value 1 for axr ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 72 public <umbrella> = (((sil [((l <any_Vx_ah_l_p_noSlide>) | (<any_Vx_ah_l_p_noSlide> l))] [((l <any_Cx_ah_l_p>) | (<any_Cx_ah_l_p> l))]) | (sil p (sil [((l <any_Vx_ah_l_p_noSlide>) | (<any_Vx_ah_l_p_noSlide> l))] [((l <any_Cx_ah_l_p>) | (<any_Cx_ah_l_p> l))]))) ((([(<any_Vx_sh_p_l_ah_noSlide> sh)] | [(sh <any_Vx_sh_p_l_ah_noSlide>)]) ([(<any_Cx_sh_p_l_m> sh)] | [(sh <any_Cx_sh_p_l_m>)])) (ah | ((<any_Vx_sh_p_l_ah_noSlide> sh) | (sh <any_Vx_sh_p_l_ah_noSlide>)))) (([(<any_Cx_sh_sh_m_b> sh)] | [(sh <any_Cx_sh_sh_m_b>)]) (m | ((<any_Cx_sh_sh_m_b> sh) | (sh <any_Cx_sh_sh_m_b>)))) (([(<any_Cx_sh_sh_b_r_m> sh)] | [(sh <any_Cx_sh_sh_b_r_m>)]) (b | ((<any_Cx_sh_sh_b_r_m> sh) | (sh <any_Cx_sh_sh_b_r_m>)))) (([(<any_Cx_zh_sh_r_ehl_b> zh)] | [(zh <any_Cx_zh_sh_r_ehl_b>)]) (r | ((<any_Cx_zh_sh_r_ehl_b> zh) | (zh <any_Cx_zh_sh_r_ehl_b>)))) (([(<any_Cx_y_zh_ehl_r> y)] | [(y <any_Cx_y_zh_ehl_r>)]) (ehl | ((<any_Cx_y_zh_ehl_axr_r> y) | (y <any_Cx_y_zh_ehl_axr_r>)))) (([(<any_Cx_sh_y_axr_ehl> sh)] | [(sh <any_Cx_sh_y_axr_ehl>)]) (axr | ((<any_Cx_sh_y_axr_ehl> sh) | (sh <any_Cx_sh_y_axr_ehl>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_sh_axr_hh> hh)] | [(hh <any_Cx_sh_axr_hh>)]) sil))

results =
{72 [{sil 167 169} {ah 170 172} {m 173 175} {b 176 178} {r 179 181} {ehl 182 184} {axr 185 188} {sil 189 196}]}
{80 [{sil 185 187} {ah 188 190} {m 191 193} {b 194 196} {r 197 199} {ehl 200 202} {axr 203 205} {sil 206 216}]}
{91 [{sil 0 3} {p 4 6} {sil 7 113} {ah 114 122} {m 123 132} {b 133 140} {r 141 153} {y 154 156} {l 157 170} {axr 171 289} {sil 290 292}]}
{105 [{sil 0 4} {p 5 7} {sil 8 131} {ah 132 141} {m 142 156} {b 157 162} {r 163 179} {zh 180 182} {l 183 197} {axr 198 236} {sil 237 334}]}
{125 [{sil 3 156} {ah 157 169} {m 170 187} {b 188 192} {r 193 211} {ehl 212 227} {axr 228 286} {sil 287 399}]}

normalised results =
{72 [{sil 167 169} {ah 236 236} {m 240 240} {b 244 244} {r 249 249} {ehl 253 253} {axr 257 261} {sil 263 272}]}
{80 [{sil 185 187} {ah 235 235} {m 239 239} {b 243 243} {r 246 246} {ehl 250 250} {axr 254 254} {sil 258 270}]}
{91 [{sil 0 3} {p 4 4} {sil 8 124} {ah 125 134} {m 135 145} {b 146 154} {r 155 168} {y 169 169} {l 173 187} {axr 188 318} {sil 319 319}]}
{105 [{sil 0 4} {p 5 5} {sil 8 125} {ah 126 134} {m 135 149} {b 150 154} {r 155 170} {zh 171 171} {l 174 188} {axr 189 225} {sil 226 318}]}
{125 [{sil 3 156} {ah 126 135} {m 136 150} {b 150 154} {r 154 169} {ehl 170 182} {axr 182 229} {sil 230 319}]}

ruleAligned = [{{ah 1} [{2 3} {3 3} {4 1}]} {{m 1} [{2 4} {3 4} {4 2}]} {{b 1} [{2 5} {3 5} {4 3}]} {{r 1} [{2 6} {3 6} {4 4}]} {{ehl 2} [{4 5}]} {{axr 0} [{0 6} {2 9} {3 9} {4 6}]}]

results (after rule-alignment) =
{72 [{sil 167 167} {ah 236 236} {m 240 240} {b 244 244} {r 249 249} {ehl 253 253} {axr 257 261} {sil 263 263}]}
{80 [{sil 185 185} {ah 235 235} {m 239 239} {b 243 243} {r 246 246} {ehl 250 250} {axr 254 254} {sil 258 258}]}
{91 [{sil 0 0} {p 4 4} {sil 8 8} {ah 125 134} {m 135 145} {b 146 154} {r 155 168} {y 169 169} {l 173 187} {axr 188 318} {sil 319 319}]}
{105 [{sil 0 0} {p 5 5} {sil 8 8} {ah 126 134} {m 135 149} {b 150 154} {r 155 170} {zh 171 171} {l 174 188} {axr 189 225} {sil 226 226}]}
{125 [{sil 3 3} {ah 126 135} {m 136 150} {b 150 154} {r 154 169} {ehl 170 182} {axr 182 229} {sil 230 230}]}

timeAligned = [{{ah 126 134} [{2 3} {3 3} {4 1}]} {{m 136 145} [{2 4} {3 4} {4 2}]} {{b 150 154} [{2 5} {3 5} {4 3}]} {{r 155 168} [{2 6} {3 6} {4 4}]} {{axr 189 225} [{2 9} {3 9} {4 6}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 134
i, iTime, newITime, timeStartFrom = 2 1 2 145
i, iTime, newITime, timeStartFrom = 3 2 3 154
i, iTime, newITime, timeStartFrom = 4 3 -1 168
i, iTime, newITime, timeStartFrom = 5 3 4 168
combinedVerdict    = [{ah 1} {m 1} {b 1} {r 1} {ehl 2} {axr 0}]
ruleAlignedVerdict = [{ah 1} {m 1} {b 1} {r 1} {ehl 2} {axr 0}]

score->
+1 for ah
+1 for m
+1 for b
+1 for r
-1 for ehl
+1 for axr
score<-: 4

results =
{72 [{sil 167 169} {ah 170 172} {m 173 175} {b 176 178} {r 179 181} {eh 182 184} {l 185 187} {axr 188 192} {sil 193 196}]}
{80 [{sil 185 187} {ah 188 190} {m 191 193} {b 194 196} {r 197 199} {eh 200 202} {l 203 205} {axr 206 210} {sil 211 216}]}
{91 [{sil 0 3} {p 4 6} {sil 7 113} {ah 114 122} {m 123 132} {b 133 140} {r 141 153} {eh 154 158} {l 159 170} {axr 171 289} {sil 290 292}]}
{105 [{sil 0 4} {p 5 7} {sil 8 131} {ah 132 141} {m 142 156} {b 157 162} {r 163 177} {eh 178 183} {l 184 197} {axr 198 236} {sil 237 334}]}
{125 [{sil 3 156} {ah 157 169} {m 170 187} {b 188 192} {r 193 212} {eh 213 219} {l 220 232} {axr 233 290} {f 291 293} {d 294 317} {sil 318 399}]}

normalised results =
{72 [{sil 167 169} {ah 236 236} {m 240 240} {b 244 244} {r 249 249} {eh 253 253} {l 257 257} {axr 261 267} {sil 268 272}]}
{80 [{sil 185 187} {ah 235 235} {m 239 239} {b 243 243} {r 246 246} {eh 250 250} {l 254 254} {axr 258 263} {sil 264 270}]}
{91 [{sil 0 3} {p 4 4} {sil 8 124} {ah 125 134} {m 135 145} {b 146 154} {r 155 168} {eh 169 174} {l 175 187} {axr 188 318} {sil 319 319}]}
{105 [{sil 0 4} {p 5 5} {sil 8 125} {ah 126 134} {m 135 149} {b 150 154} {r 155 169} {eh 170 174} {l 175 188} {axr 189 225} {sil 226 318}]}
{125 [{sil 3 156} {ah 126 135} {m 136 150} {b 150 154} {r 154 170} {eh 170 175} {l 176 186} {axr 186 232} {f 233 233} {d 235 254} {sil 254 319}]}

ruleAligned = [{{ah 1} [{2 3} {3 3} {4 1}]} {{m 1} [{2 4} {3 4} {4 2}]} {{b 1} [{2 5} {3 5} {4 3}]} {{r 1} [{2 6} {3 6} {4 4}]} {{eh 1} [{2 7} {3 7} {4 5}]} {{l 1} [{2 8} {3 8} {4 6}]} {{axr 0} [{0 7} {1 7} {2 9} {3 9} {4 7}]}]

results (after rule-alignment) =
{72 [{sil 167 167} {ah 236 236} {m 240 240} {b 244 244} {r 249 249} {eh 253 253} {l 257 257} {axr 261 267} {sil 268 268}]}
{80 [{sil 185 185} {ah 235 235} {m 239 239} {b 243 243} {r 246 246} {eh 250 250} {l 254 254} {axr 258 263} {sil 264 264}]}
{91 [{sil 0 0} {p 4 4} {sil 8 8} {ah 125 134} {m 135 145} {b 146 154} {r 155 168} {eh 169 174} {l 175 187} {axr 188 318} {sil 319 319}]}
{105 [{sil 0 0} {p 5 5} {sil 8 8} {ah 126 134} {m 135 149} {b 150 154} {r 155 169} {eh 170 174} {l 175 188} {axr 189 225} {sil 226 226}]}
{125 [{sil 3 3} {ah 126 135} {m 136 150} {b 150 154} {r 154 170} {eh 170 175} {l 176 186} {axr 186 232} {f 233 233} {d 235 254} {sil 254 254}]}

timeAligned = [{{ah 126 134} [{2 3} {3 3} {4 1}]} {{m 136 145} [{2 4} {3 4} {4 2}]} {{b 150 154} [{2 5} {3 5} {4 3}]} {{r 155 168} [{2 6} {3 6} {4 4}]} {{eh 170 174} [{2 7} {3 7} {4 5}]} {{l 176 186} [{2 8} {3 8} {4 6}]} {{axr 189 225} [{2 9} {3 9} {4 7}]} {{axr 261 263} [{0 7} {1 7} {2 9}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 134
i, iTime, newITime, timeStartFrom = 2 1 2 145
i, iTime, newITime, timeStartFrom = 3 2 3 154
i, iTime, newITime, timeStartFrom = 4 3 4 168
i, iTime, newITime, timeStartFrom = 5 4 5 174
i, iTime, newITime, timeStartFrom = 6 5 6 186
combinedVerdict    = [{ah 1} {m 1} {b 1} {r 1} {eh 1} {l 1} {axr 0} {axr 3}]
ruleAlignedVerdict = [{ah 1} {m 1} {b 1} {r 1} {eh 1} {l 1} {axr 0}]

score->
+1 for ah
+1 for m
+1 for b
+1 for r
+1 for eh
+1 for l
+1 for axr
score<-: 12
testPronounce ah possible m possible b possible r possible eh possible l possible axr good
publish->
phonsToAlphas = [{[ah] u} {[m] m} {[b] b} {[r] r} {[eh] e} {[l] ll} {[axr] a}]
getVerdict<-:new {u [ah] 1}
getVerdict<-:new {m [m] 1}
getVerdict<-:new {b [b] 1}
getVerdict<-:new {r [r] 1}
getVerdict<-:new {e [eh] 1}
getVerdict<-:new {ll [l] 1}
getVerdict<-:new {a [axr] 0}
lettersVerdicts = [{u [ah] 1} {m [m] 1} {b [b] 1} {r [r] 1} {e [eh] 1} {ll [l] 1} {a [axr] 0}]
publish<-
{
  "results": [
    {
      "letters": "u",
      "phonemes": "ʌ",
      "verdict": "possible"
    },
    {
      "letters": "m",
      "phonemes": "m",
      "verdict": "possible"
    },
    {
      "letters": "b",
      "phonemes": "b",
      "verdict": "possible"
    },
    {
      "letters": "r",
      "phonemes": "ɹ",
      "verdict": "possible"
    },
    {
      "letters": "e",
      "phonemes": "ɛ",
      "verdict": "possible"
    },
    {
      "letters": "ll",
      "phonemes": "l",
      "verdict": "possible"
    },
    {
      "letters": "a",
      "phonemes": "əɹ",
      "verdict": "good"
    }
  ],
  "err": null
}
