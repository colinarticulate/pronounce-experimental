
 length of audio =  2.413438



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.76 0.74 1.5

 start3, duration3, end3 =  0.78 0.33999999999999997 1.12

 Initial start, duration, end =  0.66 0.84 1.5

 Cut at: start, duration =  0.66 1.29     guard_end =  1.9500000000000002 

Running scan for frate = 125
Considering guard zh with value 1 for oh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 125 public <otter> = (((sil [((z <any_Cx_oh_z_p>) | (<any_Cx_oh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_oh_z_p>) | (<any_Cx_oh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_oh_t> zh)] | [(zh <any_Cx_zh_p_z_oh_t>)]) (oh | ((<any_Cx_zh_p_z_oh_t> zh) | (zh <any_Cx_zh_p_z_oh_t>)))) (([(<any_Cx_zh_zh_t_oh> zh)] | [(zh <any_Cx_zh_zh_t_oh>)]) (t | ((<any_Cx_zh_zh_t_axr> zh) | (zh <any_Cx_zh_zh_t_axr>)))) (([(<any_Cx_zh_zh_axr_t> zh)] | [(zh <any_Cx_zh_zh_axr_t>)]) (axr | ((<any_Cx_zh_zh_axr_t> zh) | (zh <any_Cx_zh_zh_axr_t>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_ng> ng)] | [(ng <any_Cx_zh_axr_ng>)]) sil))
Running scan for frate = 105
Considering guard zh with value 1 for oh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 105 public <otter> = (((sil [((z <any_Cx_oh_z_p>) | (<any_Cx_oh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_oh_z_p>) | (<any_Cx_oh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_oh_t> zh)] | [(zh <any_Cx_zh_p_z_oh_t>)]) (oh | ((<any_Cx_zh_p_z_oh_t> zh) | (zh <any_Cx_zh_p_z_oh_t>)))) (([(<any_Cx_zh_zh_t_oh> zh)] | [(zh <any_Cx_zh_zh_t_oh>)]) (t | ((<any_Cx_zh_zh_t_axr> zh) | (zh <any_Cx_zh_zh_t_axr>)))) (([(<any_Cx_zh_zh_axr_t> zh)] | [(zh <any_Cx_zh_zh_axr_t>)]) (axr | ((<any_Cx_zh_zh_axr_t> zh) | (zh <any_Cx_zh_zh_axr_t>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_ng> ng)] | [(ng <any_Cx_zh_axr_ng>)]) sil))
Running scan for frate = 91
Considering guard zh with value 1 for oh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 91 public <otter> = (((sil [((z <any_Cx_oh_z_p>) | (<any_Cx_oh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_oh_z_p>) | (<any_Cx_oh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_oh_t> zh)] | [(zh <any_Cx_zh_p_z_oh_t>)]) (oh | ((<any_Cx_zh_p_z_oh_t> zh) | (zh <any_Cx_zh_p_z_oh_t>)))) (([(<any_Cx_zh_zh_t_oh> zh)] | [(zh <any_Cx_zh_zh_t_oh>)]) (t | ((<any_Cx_zh_zh_t_axr> zh) | (zh <any_Cx_zh_zh_t_axr>)))) (([(<any_Cx_zh_zh_axr_t> zh)] | [(zh <any_Cx_zh_zh_axr_t>)]) (axr | ((<any_Cx_zh_zh_axr_t> zh) | (zh <any_Cx_zh_zh_axr_t>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_p> p)] | [(p <any_Cx_zh_axr_p>)]) sil))
Running scan for frate = 80
Considering guard zh with value 1 for oh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 80 public <otter> = (((sil [((z <any_Cx_oh_z_p>) | (<any_Cx_oh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_oh_z_p>) | (<any_Cx_oh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_oh_t> zh)] | [(zh <any_Cx_zh_p_z_oh_t>)]) (oh | ((<any_Cx_zh_p_z_oh_t> zh) | (zh <any_Cx_zh_p_z_oh_t>)))) (([(<any_Cx_zh_zh_t_oh> zh)] | [(zh <any_Cx_zh_zh_t_oh>)]) (t | ((<any_Cx_zh_zh_t_axr> zh) | (zh <any_Cx_zh_zh_t_axr>)))) (([(<any_Cx_zh_zh_axr_t> zh)] | [(zh <any_Cx_zh_zh_axr_t>)]) (axr | ((<any_Cx_zh_zh_axr_t> zh) | (zh <any_Cx_zh_zh_axr_t>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_thr> thr)] | [(thr <any_Cx_zh_axr_thr>)]) sil))
Running scan for frate = 72
Considering guard zh with value 1 for oh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 72 public <otter> = (((sil [((z <any_Cx_oh_z_p>) | (<any_Cx_oh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_oh_z_p>) | (<any_Cx_oh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_oh_t> zh)] | [(zh <any_Cx_zh_p_z_oh_t>)]) (oh | ((<any_Cx_zh_p_z_oh_t> zh) | (zh <any_Cx_zh_p_z_oh_t>)))) (([(<any_Cx_zh_zh_t_oh> zh)] | [(zh <any_Cx_zh_zh_t_oh>)]) (t | ((<any_Cx_zh_zh_t_axr> zh) | (zh <any_Cx_zh_zh_t_axr>)))) (([(<any_Cx_zh_zh_axr_t> zh)] | [(zh <any_Cx_zh_zh_axr_t>)]) (axr | ((<any_Cx_zh_zh_axr_t> zh) | (zh <any_Cx_zh_zh_axr_t>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_m> m)] | [(m <any_Cx_zh_axr_m>)]) sil))

results =
{72 [{sil 0 13} {oh 14 28} {t 29 36} {axr 37 58} {sil 59 66}]}
{80 [{sil 0 15} {oh 16 31} {t 32 40} {axr 41 64} {sil 65 71}]}
{91 [{sil 0 17} {oh 18 35} {t 36 45} {axr 46 104} {sil 105 116}]}
{105 [{sil 0 20} {oh 21 41} {t 42 53} {axr 54 122} {sil 123 130}]}
{125 [{sil 3 25} {oh 26 50} {t 51 65} {axr 66 106} {sil 107 161}]}

normalised results =
{72 [{sil 0 13} {oh 19 39} {t 40 50} {axr 51 81} {sil 82 92}]}
{80 [{sil 0 15} {oh 20 39} {t 40 50} {axr 51 80} {sil 81 89}]}
{91 [{sil 0 17} {oh 20 38} {t 40 49} {axr 51 114} {sil 115 127}]}
{105 [{sil 0 20} {oh 20 39} {t 40 50} {axr 51 116} {sil 117 124}]}
{125 [{sil 3 25} {oh 21 40} {t 41 52} {axr 53 85} {sil 86 129}]}

ruleAligned = [{{oh 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{t 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{axr 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {oh 19 39} {t 40 50} {axr 51 81} {sil 82 82}]}
{80 [{sil 0 0} {oh 20 39} {t 40 50} {axr 51 80} {sil 81 81}]}
{91 [{sil 0 0} {oh 20 38} {t 40 49} {axr 51 114} {sil 115 115}]}
{105 [{sil 0 0} {oh 20 39} {t 40 50} {axr 51 116} {sil 117 117}]}
{125 [{sil 3 3} {oh 21 40} {t 41 52} {axr 53 85} {sil 86 86}]}

timeAligned = [{{oh 20 39} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{t 40 50} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{axr 51 85} [{0 3} {1 3} {2 3} {3 3} {4 3}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 38
i, iTime, newITime, timeStartFrom = 2 1 2 49
combinedVerdict    = [{oh 0} {t 0} {axr 0}]
ruleAlignedVerdict = [{oh 0} {t 0} {axr 0}]

score->
+1 for oh
+1 for t
+1 for axr
score<-: 8
testPronounce oh good t good axr good
publish->
phonsToAlphas = [{[oh] o} {[t] tt} {[axr] er}]
getVerdict<-:new {o [oh] 0}
getVerdict<-:new {tt [t] 0}
getVerdict<-:new {er [axr] 0}
lettersVerdicts = [{o [oh] 0} {tt [t] 0} {er [axr] 0}]
publish<-
Total: 232.563133ms
{
  "results": [
    {
      "letters": "o",
      "phonemes": "ɒ",
      "verdict": "good"
    },
    {
      "letters": "tt",
      "phonemes": "t",
      "verdict": "good"
    },
    {
      "letters": "er",
      "phonemes": "əɹ",
      "verdict": "good"
    }
  ],
  "err": null
}
