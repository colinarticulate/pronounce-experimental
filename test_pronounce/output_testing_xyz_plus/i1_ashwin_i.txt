
 length of audio =  1.493



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.38 0.7 1.08

 start3, duration3, end3 =  0.68 0.36 1.04

 Initial start, duration, end =  0.28 0.8 1.08

 Cut at: start, duration =  0.28 1.193     guard_end =  1.473 

Running scan for frate = 125
Considering guard zh with value 0.4 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 125 public <i> = (((sil [((z <any_Vx_ay_z_p_noSlide>) | (<any_Vx_ay_z_p_noSlide> z))] [((z <any_Cx_ay_z_p>) | (<any_Cx_ay_z_p> z))]) | (sil p (sil [((z <any_Vx_ay_z_p_noSlide>) | (<any_Vx_ay_z_p_noSlide> z))] [((z <any_Cx_ay_z_p>) | (<any_Cx_ay_z_p> z))]))) ((([(<any_Vx_zh_p_z_ay_noSlide> zh)] | [(zh <any_Vx_zh_p_z_ay_noSlide>)]) ([(<any_Cx_zh_p_z> zh)] | [(zh <any_Cx_zh_p_z>)])) (ay | ((<any_Vx_zh_p_z_ay_noSlide> zh) | (zh <any_Vx_zh_p_z_ay_noSlide>)))) (([(<any_Cx_zh_ay_hh> hh)] | [(hh <any_Cx_zh_ay_hh>)]) ([(<any_Vx_zh_ay_hh> hh)] | [(hh <any_Vx_zh_ay_hh>)]) sil))
Running scan for frate = 105
Considering guard zh with value 0.4 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 105 public <i> = (((sil [((z <any_Vx_ay_z_p_noSlide>) | (<any_Vx_ay_z_p_noSlide> z))] [((z <any_Cx_ay_z_p>) | (<any_Cx_ay_z_p> z))]) | (sil p (sil [((z <any_Vx_ay_z_p_noSlide>) | (<any_Vx_ay_z_p_noSlide> z))] [((z <any_Cx_ay_z_p>) | (<any_Cx_ay_z_p> z))]))) ((([(<any_Vx_zh_p_z_ay_noSlide> zh)] | [(zh <any_Vx_zh_p_z_ay_noSlide>)]) ([(<any_Cx_zh_p_z> zh)] | [(zh <any_Cx_zh_p_z>)])) (ay | ((<any_Vx_zh_p_z_ay_noSlide> zh) | (zh <any_Vx_zh_p_z_ay_noSlide>)))) (([(<any_Cx_zh_ay_m> m)] | [(m <any_Cx_zh_ay_m>)]) ([(<any_Vx_zh_ay_m> m)] | [(m <any_Vx_zh_ay_m>)]) sil))
Running scan for frate = 91
Considering guard zh with value 0.4 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 91 public <i> = (((sil [((z <any_Vx_ay_z_p_noSlide>) | (<any_Vx_ay_z_p_noSlide> z))] [((z <any_Cx_ay_z_p>) | (<any_Cx_ay_z_p> z))]) | (sil p (sil [((z <any_Vx_ay_z_p_noSlide>) | (<any_Vx_ay_z_p_noSlide> z))] [((z <any_Cx_ay_z_p>) | (<any_Cx_ay_z_p> z))]))) ((([(<any_Vx_zh_p_z_ay_noSlide> zh)] | [(zh <any_Vx_zh_p_z_ay_noSlide>)]) ([(<any_Cx_zh_p_z> zh)] | [(zh <any_Cx_zh_p_z>)])) (ay | ((<any_Vx_zh_p_z_ay_noSlide> zh) | (zh <any_Vx_zh_p_z_ay_noSlide>)))) (([(<any_Cx_zh_ay_n> n)] | [(n <any_Cx_zh_ay_n>)]) ([(<any_Vx_zh_ay_n> n)] | [(n <any_Vx_zh_ay_n>)]) sil))
Running scan for frate = 80
Considering guard zh with value 0.4 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 80 public <i> = (((sil [((z <any_Vx_ay_z_p_noSlide>) | (<any_Vx_ay_z_p_noSlide> z))] [((z <any_Cx_ay_z_p>) | (<any_Cx_ay_z_p> z))]) | (sil p (sil [((z <any_Vx_ay_z_p_noSlide>) | (<any_Vx_ay_z_p_noSlide> z))] [((z <any_Cx_ay_z_p>) | (<any_Cx_ay_z_p> z))]))) ((([(<any_Vx_zh_p_z_ay_noSlide> zh)] | [(zh <any_Vx_zh_p_z_ay_noSlide>)]) ([(<any_Cx_zh_p_z> zh)] | [(zh <any_Cx_zh_p_z>)])) (ay | ((<any_Vx_zh_p_z_ay_noSlide> zh) | (zh <any_Vx_zh_p_z_ay_noSlide>)))) (([(<any_Cx_zh_ay_f> f)] | [(f <any_Cx_zh_ay_f>)]) ([(<any_Vx_zh_ay_f> f)] | [(f <any_Vx_zh_ay_f>)]) sil))
Running scan for frate = 72
Considering guard zh with value 0.4 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 72 public <i> = (((sil [((z <any_Vx_ay_z_p_noSlide>) | (<any_Vx_ay_z_p_noSlide> z))] [((z <any_Cx_ay_z_p>) | (<any_Cx_ay_z_p> z))]) | (sil p (sil [((z <any_Vx_ay_z_p_noSlide>) | (<any_Vx_ay_z_p_noSlide> z))] [((z <any_Cx_ay_z_p>) | (<any_Cx_ay_z_p> z))]))) ((([(<any_Vx_zh_p_z_ay_noSlide> zh)] | [(zh <any_Vx_zh_p_z_ay_noSlide>)]) ([(<any_Cx_zh_p_z> zh)] | [(zh <any_Cx_zh_p_z>)])) (ay | ((<any_Vx_zh_p_z_ay_noSlide> zh) | (zh <any_Vx_zh_p_z_ay_noSlide>)))) (([(<any_Cx_zh_ay_p> p)] | [(p <any_Cx_zh_ay_p>)]) ([(<any_Vx_zh_ay_p> p)] | [(p <any_Vx_zh_ay_p>)]) sil))

results =
{72 [{sil 0 24} {ay 25 50} {sil 51 60}]}
{80 [{sil 0 27} {ay 28 52} {sil 53 64}]}
{91 [{sil 0 31} {ay 32 65} {sil 66 103}]}
{105 [{sil 0 36} {ay 37 75} {sil 76 124}]}
{125 [{sil 3 44} {ay 45 91} {sil 92 149}]}

normalised results =
{72 [{sil 0 24} {ay 35 69} {sil 71 83}]}
{80 [{sil 0 27} {ay 35 65} {sil 66 80}]}
{91 [{sil 0 31} {ay 35 71} {sil 73 113}]}
{105 [{sil 0 36} {ay 35 71} {sil 72 118}]}
{125 [{sil 3 44} {ay 36 73} {sil 74 119}]}

ruleAligned = [{{ay 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {ay 35 69} {sil 71 71}]}
{80 [{sil 0 0} {ay 35 65} {sil 66 66}]}
{91 [{sil 0 0} {ay 35 71} {sil 73 73}]}
{105 [{sil 0 0} {ay 35 71} {sil 72 72}]}
{125 [{sil 3 3} {ay 36 73} {sil 74 74}]}

timeAligned = [{{ay 35 71} [{0 1} {1 1} {2 1} {3 1} {4 1}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
combinedVerdict    = [{ay 0}]
ruleAlignedVerdict = [{ay 0}]

score->
+1 for ay
score<-: 6
testPronounce ay good
publish->
phonsToAlphas = [{[ay] i}]
getVerdict<-:new {i [ay] 0}
lettersVerdicts = [{i [ay] 0}]
publish<-
Total: 229.013542ms
{
  "results": [
    {
      "letters": "i",
      "phonemes": "ɑɪ",
      "verdict": "good"
    }
  ],
  "err": null
}
