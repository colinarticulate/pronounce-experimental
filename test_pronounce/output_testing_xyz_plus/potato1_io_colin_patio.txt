
 length of audio =  1.694813



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.56 0.9 1.46

 start3, duration3, end3 =  0.5800000000000001 0.78 1.36

 Initial start, duration, end =  0.4600000000000001 0.9999999999999999 1.46

 Cut at: start, duration =  0.4600000000000001 1.214813     guard_end =  1.6748129999999999 

Running scan for frate = 125
Considering guard jh with value 1 for p ...
Considering guard ng with value 1 for p ...
Considering guard zh with value 1 for p ...
candidateGuards = map[jh:true ng:true zh:true]
Picking guard, jh

Considering guard zh with value 2 for ae ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ao with value 2 for t ...
candidateGuards = map[ao:true]
Picking guard, ao

Considering guard sh with value 10.8 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard s with value 2.8 for ow ...
candidateGuards = map[s:true]
Picking guard, s


frate, target rule = 125 public <patio> = (((sil [((sh <any_Cx_p_sh_d>) | (<any_Cx_p_sh_d> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil d (sil [((sh <any_Cx_p_sh_d>) | (<any_Cx_p_sh_d> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_jh_d_sh_p> jh)] | [(jh <any_Cx_jh_d_sh_p>)]) (p | ((<any_Cx_jh_d_sh_p> jh) | (jh <any_Cx_jh_d_sh_p>)))) ((([(<any_Vx_zh_jh_ae_noSlide> zh)] | [(zh <any_Vx_zh_jh_ae_noSlide>)]) ([(<any_Cx_zh_jh_t_p> zh)] | [(zh <any_Cx_zh_jh_t_p>)])) (ae | ((<any_Vx_zh_jh_ae_noSlide> zh) | (zh <any_Vx_zh_jh_ae_noSlide>)))) (([(<any_Cx_ao_zh_t> ao)] | [(ao <any_Cx_ao_zh_t>)]) (t | ((<any_Cx_ao_zh_t> ao) | (ao <any_Cx_ao_zh_t>)))) ((([(<any_Vx_sh_ao_iy_ow_noSlide> sh)] | [(sh <any_Vx_sh_ao_iy_ow_noSlide>)]) ([(<any_Cx_sh_ao_t> sh)] | [(sh <any_Cx_sh_ao_t>)])) (iy | ((<any_Vx_sh_ao_iy_ow_noSlide> sh) | (sh <any_Vx_sh_ao_iy_ow_noSlide>)))) ((([(<any_Vx_s_sh_ow_iy_noSlide> s)] | [(s <any_Vx_s_sh_ow_iy_noSlide>)]) ([(<any_Cx_s_sh> s)] | [(s <any_Cx_s_sh>)])) (ow | ((<any_Vx_s_sh_ow_iy_noSlide> s) | (s <any_Vx_s_sh_ow_iy_noSlide>)))) (([(<any_Cx_s_ow_p> p)] | [(p <any_Cx_s_ow_p>)]) ([(<any_Vx_s_ow_p> p)] | [(p <any_Vx_s_ow_p>)]) sil))
Running scan for frate = 105
Considering guard ng with value 1 for p ...
Considering guard jh with value 1 for p ...
Considering guard zh with value 1 for p ...
candidateGuards = map[jh:true ng:true zh:true]
Picking guard, jh

Considering guard zh with value 2 for ae ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ao with value 2 for t ...
candidateGuards = map[ao:true]
Picking guard, ao

Considering guard sh with value 10.8 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard s with value 2.8 for ow ...
candidateGuards = map[s:true]
Picking guard, s


frate, target rule = 105 public <patio> = (((sil [((b <any_Cx_p_b_d>) | (<any_Cx_p_b_d> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]) | (sil d (sil [((b <any_Cx_p_b_d>) | (<any_Cx_p_b_d> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]))) (([(<any_Cx_jh_d_b_p> jh)] | [(jh <any_Cx_jh_d_b_p>)]) (p | ((<any_Cx_jh_d_b_p> jh) | (jh <any_Cx_jh_d_b_p>)))) ((([(<any_Vx_zh_jh_ae_noSlide> zh)] | [(zh <any_Vx_zh_jh_ae_noSlide>)]) ([(<any_Cx_zh_jh_t_p> zh)] | [(zh <any_Cx_zh_jh_t_p>)])) (ae | ((<any_Vx_zh_jh_ae_noSlide> zh) | (zh <any_Vx_zh_jh_ae_noSlide>)))) (([(<any_Cx_ao_zh_t> ao)] | [(ao <any_Cx_ao_zh_t>)]) (t | ((<any_Cx_ao_zh_t> ao) | (ao <any_Cx_ao_zh_t>)))) ((([(<any_Vx_sh_ao_iy_ow_noSlide> sh)] | [(sh <any_Vx_sh_ao_iy_ow_noSlide>)]) ([(<any_Cx_sh_ao_t> sh)] | [(sh <any_Cx_sh_ao_t>)])) (iy | ((<any_Vx_sh_ao_iy_ow_noSlide> sh) | (sh <any_Vx_sh_ao_iy_ow_noSlide>)))) ((([(<any_Vx_s_sh_ow_iy_noSlide> s)] | [(s <any_Vx_s_sh_ow_iy_noSlide>)]) ([(<any_Cx_s_sh> s)] | [(s <any_Cx_s_sh>)])) (ow | ((<any_Vx_s_sh_ow_iy_noSlide> s) | (s <any_Vx_s_sh_ow_iy_noSlide>)))) (([(<any_Cx_s_ow_p> p)] | [(p <any_Cx_s_ow_p>)]) ([(<any_Vx_s_ow_p> p)] | [(p <any_Vx_s_ow_p>)]) sil))
Running scan for frate = 91
Considering guard jh with value 1 for p ...
Considering guard ng with value 1 for p ...
Considering guard zh with value 1 for p ...
candidateGuards = map[jh:true ng:true zh:true]
Picking guard, jh

Considering guard zh with value 2 for ae ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ao with value 2 for t ...
candidateGuards = map[ao:true]
Picking guard, ao

Considering guard sh with value 10.8 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard s with value 2.8 for ow ...
candidateGuards = map[s:true]
Picking guard, s


frate, target rule = 91 public <patio> = (((sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil d (sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_jh_d_hh_p> jh)] | [(jh <any_Cx_jh_d_hh_p>)]) (p | ((<any_Cx_jh_d_hh_p> jh) | (jh <any_Cx_jh_d_hh_p>)))) ((([(<any_Vx_zh_jh_ae_noSlide> zh)] | [(zh <any_Vx_zh_jh_ae_noSlide>)]) ([(<any_Cx_zh_jh_t_p> zh)] | [(zh <any_Cx_zh_jh_t_p>)])) (ae | ((<any_Vx_zh_jh_ae_noSlide> zh) | (zh <any_Vx_zh_jh_ae_noSlide>)))) (([(<any_Cx_ao_zh_t> ao)] | [(ao <any_Cx_ao_zh_t>)]) (t | ((<any_Cx_ao_zh_t> ao) | (ao <any_Cx_ao_zh_t>)))) ((([(<any_Vx_sh_ao_iy_ow_noSlide> sh)] | [(sh <any_Vx_sh_ao_iy_ow_noSlide>)]) ([(<any_Cx_sh_ao_t> sh)] | [(sh <any_Cx_sh_ao_t>)])) (iy | ((<any_Vx_sh_ao_iy_ow_noSlide> sh) | (sh <any_Vx_sh_ao_iy_ow_noSlide>)))) ((([(<any_Vx_s_sh_ow_iy_noSlide> s)] | [(s <any_Vx_s_sh_ow_iy_noSlide>)]) ([(<any_Cx_s_sh> s)] | [(s <any_Cx_s_sh>)])) (ow | ((<any_Vx_s_sh_ow_iy_noSlide> s) | (s <any_Vx_s_sh_ow_iy_noSlide>)))) (([(<any_Cx_s_ow_thr> thr)] | [(thr <any_Cx_s_ow_thr>)]) ([(<any_Vx_s_ow_thr> thr)] | [(thr <any_Vx_s_ow_thr>)]) sil))
Running scan for frate = 80
Considering guard zh with value 1 for p ...
Considering guard ng with value 1 for p ...
Considering guard jh with value 1 for p ...
candidateGuards = map[jh:true ng:true zh:true]
Picking guard, jh

Considering guard zh with value 2 for ae ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ao with value 2 for t ...
candidateGuards = map[ao:true]
Picking guard, ao

Considering guard sh with value 10.8 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard s with value 2.8 for ow ...
candidateGuards = map[s:true]
Picking guard, s


frate, target rule = 80 public <patio> = (((sil [((b <any_Cx_p_b_d>) | (<any_Cx_p_b_d> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]) | (sil d (sil [((b <any_Cx_p_b_d>) | (<any_Cx_p_b_d> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]))) (([(<any_Cx_jh_d_b_p> jh)] | [(jh <any_Cx_jh_d_b_p>)]) (p | ((<any_Cx_jh_d_b_p> jh) | (jh <any_Cx_jh_d_b_p>)))) ((([(<any_Vx_zh_jh_ae_noSlide> zh)] | [(zh <any_Vx_zh_jh_ae_noSlide>)]) ([(<any_Cx_zh_jh_t_p> zh)] | [(zh <any_Cx_zh_jh_t_p>)])) (ae | ((<any_Vx_zh_jh_ae_noSlide> zh) | (zh <any_Vx_zh_jh_ae_noSlide>)))) (([(<any_Cx_ao_zh_t> ao)] | [(ao <any_Cx_ao_zh_t>)]) (t | ((<any_Cx_ao_zh_t> ao) | (ao <any_Cx_ao_zh_t>)))) ((([(<any_Vx_sh_ao_iy_ow_noSlide> sh)] | [(sh <any_Vx_sh_ao_iy_ow_noSlide>)]) ([(<any_Cx_sh_ao_t> sh)] | [(sh <any_Cx_sh_ao_t>)])) (iy | ((<any_Vx_sh_ao_iy_ow_noSlide> sh) | (sh <any_Vx_sh_ao_iy_ow_noSlide>)))) ((([(<any_Vx_s_sh_ow_iy_noSlide> s)] | [(s <any_Vx_s_sh_ow_iy_noSlide>)]) ([(<any_Cx_s_sh> s)] | [(s <any_Cx_s_sh>)])) (ow | ((<any_Vx_s_sh_ow_iy_noSlide> s) | (s <any_Vx_s_sh_ow_iy_noSlide>)))) (([(<any_Cx_s_ow_p> p)] | [(p <any_Cx_s_ow_p>)]) ([(<any_Vx_s_ow_p> p)] | [(p <any_Vx_s_ow_p>)]) sil))
Running scan for frate = 72
Considering guard jh with value 1 for p ...
Considering guard zh with value 1 for p ...
Considering guard ng with value 1 for p ...
candidateGuards = map[jh:true ng:true zh:true]
Picking guard, jh

Considering guard zh with value 2 for ae ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ao with value 2 for t ...
candidateGuards = map[ao:true]
Picking guard, ao

Considering guard sh with value 10.8 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard s with value 2.8 for ow ...
candidateGuards = map[s:true]
Picking guard, s


frate, target rule = 72 public <patio> = (((sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil d (sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_jh_d_hh_p> jh)] | [(jh <any_Cx_jh_d_hh_p>)]) (p | ((<any_Cx_jh_d_hh_p> jh) | (jh <any_Cx_jh_d_hh_p>)))) ((([(<any_Vx_zh_jh_ae_noSlide> zh)] | [(zh <any_Vx_zh_jh_ae_noSlide>)]) ([(<any_Cx_zh_jh_t_p> zh)] | [(zh <any_Cx_zh_jh_t_p>)])) (ae | ((<any_Vx_zh_jh_ae_noSlide> zh) | (zh <any_Vx_zh_jh_ae_noSlide>)))) (([(<any_Cx_ao_zh_t> ao)] | [(ao <any_Cx_ao_zh_t>)]) (t | ((<any_Cx_ao_zh_t> ao) | (ao <any_Cx_ao_zh_t>)))) ((([(<any_Vx_sh_ao_iy_ow_noSlide> sh)] | [(sh <any_Vx_sh_ao_iy_ow_noSlide>)]) ([(<any_Cx_sh_ao_t> sh)] | [(sh <any_Cx_sh_ao_t>)])) (iy | ((<any_Vx_sh_ao_iy_ow_noSlide> sh) | (sh <any_Vx_sh_ao_iy_ow_noSlide>)))) ((([(<any_Vx_s_sh_ow_iy_noSlide> s)] | [(s <any_Vx_s_sh_ow_iy_noSlide>)]) ([(<any_Cx_s_sh> s)] | [(s <any_Cx_s_sh>)])) (ow | ((<any_Vx_s_sh_ow_iy_noSlide> s) | (s <any_Vx_s_sh_ow_iy_noSlide>)))) (([(<any_Cx_s_ow_n> n)] | [(n <any_Cx_s_ow_n>)]) ([(<any_Vx_s_ow_n> n)] | [(n <any_Vx_s_ow_n>)]) sil))

results =
{72 [{sil 0 11} {p 12 16} {ae 17 20} {t 21 25} {eh 26 37} {sh 38 41} {ow 42 56} {sil 57 71}]}
{80 [{sil 0 13} {p 14 18} {ae 19 22} {v 23 29} {ao 30 32} {iy 33 40} {s 41 43} {dh 44 48} {ow 49 62} {sil 63 76}]}
{91 [{sil 0 15} {p 16 20} {ae 21 25} {t 26 32} {eh 33 47} {sh 48 50} {ow 51 76} {sil 77 109}]}
{105 [{sil 0 18} {p 19 24} {ae 25 30} {t 31 37} {eh 38 49} {sh 50 52} {s 53 58} {dh 59 63} {ow 64 88} {sil 89 122}]}
{125 [{sil 3 23} {p 24 30} {ae 31 36} {t 37 45} {eh 46 60} {sh 61 63} {s 64 69} {dh 70 77} {ow 78 104} {sil 105 147}]}

normalised results =
{72 [{sil 0 11} {p 17 22} {ae 24 28} {t 29 35} {eh 36 51} {sh 53 57} {ow 58 78} {sil 79 99}]}
{80 [{sil 0 13} {p 18 23} {ae 24 28} {v 29 36} {ao 38 38} {iy 41 50} {s 51 51} {dh 55 60} {ow 61 78} {sil 79 95}]}
{91 [{sil 0 15} {p 18 22} {ae 23 27} {t 29 35} {eh 36 52} {sh 53 53} {ow 56 84} {sil 85 120}]}
{105 [{sil 0 18} {p 18 23} {ae 24 29} {t 30 35} {eh 36 47} {sh 48 48} {s 50 55} {dh 56 60} {ow 61 84} {sil 85 116}]}
{125 [{sil 3 23} {p 19 24} {ae 25 29} {t 30 36} {eh 37 48} {sh 49 49} {s 51 55} {dh 56 62} {ow 62 83} {sil 84 118}]}

ruleAligned = [{{p 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ae 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{t 0} [{0 3} {2 3} {3 3} {4 3}]} {{iy 2} [{1 5}]} {{eh 3} [{0 4} {2 4} {3 4} {4 4}]} {{dh 3} [{1 7} {3 7} {4 7}]} {{ow 0} [{0 6} {1 8} {2 6} {3 8} {4 8}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {p 17 22} {ae 24 28} {t 29 35} {eh 36 51} {sh 53 53} {ow 58 78} {sil 79 79}]}
{80 [{sil 0 0} {p 18 23} {ae 24 28} {v 29 36} {ao 38 38} {iy 41 50} {s 51 51} {dh 55 60} {ow 61 78} {sil 79 79}]}
{91 [{sil 0 0} {p 18 22} {ae 23 27} {t 29 35} {eh 36 52} {sh 53 53} {ow 56 84} {sil 85 85}]}
{105 [{sil 0 0} {p 18 23} {ae 24 29} {t 30 35} {eh 36 47} {sh 48 48} {s 50 50} {dh 56 60} {ow 61 84} {sil 85 85}]}
{125 [{sil 3 3} {p 19 24} {ae 25 29} {t 30 36} {eh 37 48} {sh 49 49} {s 51 51} {dh 56 62} {ow 62 83} {sil 84 84}]}

timeAligned = [{{p 18 23} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ae 24 28} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{t 30 35} [{0 3} {2 3} {3 3} {4 3}]} {{eh 36 48} [{0 4} {2 4} {3 4} {4 4}]} {{dh 56 60} [{1 7} {3 7} {4 7}]} {{ow 61 83} [{0 6} {1 8} {2 6} {3 8} {4 8}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 22
i, iTime, newITime, timeStartFrom = 2 1 2 27
i, iTime, newITime, timeStartFrom = 3 2 -1 35
i, iTime, newITime, timeStartFrom = 4 2 3 35
i, iTime, newITime, timeStartFrom = 5 3 4 47
i, iTime, newITime, timeStartFrom = 6 4 5 60
combinedVerdict    = [{p 0} {ae 0} {t 0} {iy 2} {eh 3} {dh 3} {ow 0}]
ruleAlignedVerdict = [{p 0} {ae 0} {t 0} {iy 2} {eh 3} {dh 3} {ow 0}]

score->
+1 for p
+1 for ae
+1 for t
-1 for iy
-1 for eh
-1 for dh
+1 for ow
score<-: 1
bestResult = {1 [{p 0} {ae 0} {t 0} {iy 2} {eh 3} {dh 3} {ow 0}] [p ae t iy ow]}
testPronounce p good ae good t good iy missing eh surprise dh surprise ow good
publish->
phonsToAlphas = [{[p] p} {[ae] a} {[t] t} {[iy] i} {[ow] o}]
getVerdict<-:new {p [p] 0}
getVerdict<-:new {a [ae] 0}
getVerdict<-:new {t [t] 0}
getVerdict<-:new {i [iy] 2}
getVerdict<-:new {o [ow] 0}
lettersVerdicts = [{p [p] 0} {a [ae] 0} {t [t] 0} {i [iy] 2} {eh [eh] 3} {dh [dh] 3} {o [ow] 0}]
publish<-
{
  "results": [
    {
      "letters": "p",
      "phonemes": "p",
      "verdict": "good"
    },
    {
      "letters": "a",
      "phonemes": "æ",
      "verdict": "good"
    },
    {
      "letters": "t",
      "phonemes": "t",
      "verdict": "good"
    },
    {
      "letters": "i",
      "phonemes": "iː",
      "verdict": "missing"
    },
    {
      "letters": "eh",
      "phonemes": "ɛ",
      "verdict": "surprise"
    },
    {
      "letters": "dh",
      "phonemes": "ð",
      "verdict": "surprise"
    },
    {
      "letters": "o",
      "phonemes": "oʊ",
      "verdict": "good"
    }
  ],
  "err": null
}
