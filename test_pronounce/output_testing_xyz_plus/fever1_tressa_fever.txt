
 length of audio =  1.983625



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.8 0.6 1.4

 start3, duration3, end3 =  0.9800000000000001 0.38 1.36

 Initial start, duration, end =  0.7000000000000001 0.6999999999999998 1.4

 Cut at: start, duration =  0.7000000000000001 1.15     guard_end =  1.85 

Running scan for frate = 125
Considering guard ch with value 4.2 for f ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 8.4 for iy ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 6 for v ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 125 public <fever> = (((sil [((dh <any_Cx_f_dh_p>) | (<any_Cx_f_dh_p> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]) | (sil p (sil [((dh <any_Cx_f_dh_p>) | (<any_Cx_f_dh_p> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]))) (([(<any_Cx_ch_p_dh_f> ch)] | [(ch <any_Cx_ch_p_dh_f>)]) (f | s | p | ((<any_Cx_ch_p_dh_f> ch) | (ch <any_Cx_ch_p_dh_f>)))) ((([(<any_Vx_ch_ch_iy_noSlide> ch)] | [(ch <any_Vx_ch_ch_iy_noSlide>)]) ([(<any_Cx_ch_ch_v_f> ch)] | [(ch <any_Cx_ch_ch_v_f>)])) (iy | ((<any_Vx_ch_ch_iy_noSlide> ch) | (ch <any_Vx_ch_ch_iy_noSlide>)))) (([(<any_Cx_ch_ch_v> ch)] | [(ch <any_Cx_ch_ch_v>)]) (v | ((<any_Cx_ch_ch_v_axr> ch) | (ch <any_Cx_ch_ch_v_axr>)))) (([(<any_Cx_zh_ch_axr_v> zh)] | [(zh <any_Cx_zh_ch_axr_v>)]) (axr | ((<any_Cx_zh_ch_axr_v> zh) | (zh <any_Cx_zh_ch_axr_v>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_m> m)] | [(m <any_Cx_zh_axr_m>)]) sil))
Running scan for frate = 105
Considering guard ch with value 4.2 for f ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 8.4 for iy ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 6 for v ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 105 public <fever> = (((sil [((z <any_Cx_f_z_p>) | (<any_Cx_f_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_f_z_p>) | (<any_Cx_f_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ch_p_z_f> ch)] | [(ch <any_Cx_ch_p_z_f>)]) (f | s | p | ((<any_Cx_ch_p_z_f> ch) | (ch <any_Cx_ch_p_z_f>)))) ((([(<any_Vx_ch_ch_iy_noSlide> ch)] | [(ch <any_Vx_ch_ch_iy_noSlide>)]) ([(<any_Cx_ch_ch_v_f> ch)] | [(ch <any_Cx_ch_ch_v_f>)])) (iy | ((<any_Vx_ch_ch_iy_noSlide> ch) | (ch <any_Vx_ch_ch_iy_noSlide>)))) (([(<any_Cx_ch_ch_v> ch)] | [(ch <any_Cx_ch_ch_v>)]) (v | ((<any_Cx_ch_ch_v_axr> ch) | (ch <any_Cx_ch_ch_v_axr>)))) (([(<any_Cx_zh_ch_axr_v> zh)] | [(zh <any_Cx_zh_ch_axr_v>)]) (axr | ((<any_Cx_zh_ch_axr_v> zh) | (zh <any_Cx_zh_ch_axr_v>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_n> n)] | [(n <any_Cx_zh_axr_n>)]) sil))
Running scan for frate = 91
Considering guard ch with value 4.2 for f ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 8.4 for iy ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 6 for v ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 91 public <fever> = (((sil [((s <any_Cx_f_s_p>) | (<any_Cx_f_s_p> s))] [((s <any_vowel_noSlide>) | (<any_vowel_noSlide> s))]) | (sil p (sil [((s <any_Cx_f_s_p>) | (<any_Cx_f_s_p> s))] [((s <any_vowel_noSlide>) | (<any_vowel_noSlide> s))]))) (([(<any_Cx_ch_p_s_f> ch)] | [(ch <any_Cx_ch_p_s_f>)]) (f | s | p | ((<any_Cx_ch_p_s_f> ch) | (ch <any_Cx_ch_p_s_f>)))) ((([(<any_Vx_ch_ch_iy_noSlide> ch)] | [(ch <any_Vx_ch_ch_iy_noSlide>)]) ([(<any_Cx_ch_ch_v_f> ch)] | [(ch <any_Cx_ch_ch_v_f>)])) (iy | ((<any_Vx_ch_ch_iy_noSlide> ch) | (ch <any_Vx_ch_ch_iy_noSlide>)))) (([(<any_Cx_ch_ch_v> ch)] | [(ch <any_Cx_ch_ch_v>)]) (v | ((<any_Cx_ch_ch_v_axr> ch) | (ch <any_Cx_ch_ch_v_axr>)))) (([(<any_Cx_zh_ch_axr_v> zh)] | [(zh <any_Cx_zh_ch_axr_v>)]) (axr | ((<any_Cx_zh_ch_axr_v> zh) | (zh <any_Cx_zh_ch_axr_v>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_m> m)] | [(m <any_Cx_zh_axr_m>)]) sil))
Running scan for frate = 80
Considering guard ch with value 4.2 for f ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 8.4 for iy ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 6 for v ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 80 public <fever> = (((sil [((z <any_Cx_f_z_p>) | (<any_Cx_f_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_f_z_p>) | (<any_Cx_f_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ch_p_z_f> ch)] | [(ch <any_Cx_ch_p_z_f>)]) (f | s | p | ((<any_Cx_ch_p_z_f> ch) | (ch <any_Cx_ch_p_z_f>)))) ((([(<any_Vx_ch_ch_iy_noSlide> ch)] | [(ch <any_Vx_ch_ch_iy_noSlide>)]) ([(<any_Cx_ch_ch_v_f> ch)] | [(ch <any_Cx_ch_ch_v_f>)])) (iy | ((<any_Vx_ch_ch_iy_noSlide> ch) | (ch <any_Vx_ch_ch_iy_noSlide>)))) (([(<any_Cx_ch_ch_v> ch)] | [(ch <any_Cx_ch_ch_v>)]) (v | ((<any_Cx_ch_ch_v_axr> ch) | (ch <any_Cx_ch_ch_v_axr>)))) (([(<any_Cx_zh_ch_axr_v> zh)] | [(zh <any_Cx_zh_ch_axr_v>)]) (axr | ((<any_Cx_zh_ch_axr_v> zh) | (zh <any_Cx_zh_ch_axr_v>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_n> n)] | [(n <any_Cx_zh_axr_n>)]) sil))
Running scan for frate = 72
Considering guard ch with value 4.2 for f ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 8.4 for iy ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 6 for v ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 72 public <fever> = (((sil [((dh <any_Cx_f_dh_p>) | (<any_Cx_f_dh_p> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]) | (sil p (sil [((dh <any_Cx_f_dh_p>) | (<any_Cx_f_dh_p> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]))) (([(<any_Cx_ch_p_dh_f> ch)] | [(ch <any_Cx_ch_p_dh_f>)]) (f | s | p | ((<any_Cx_ch_p_dh_f> ch) | (ch <any_Cx_ch_p_dh_f>)))) ((([(<any_Vx_ch_ch_iy_noSlide> ch)] | [(ch <any_Vx_ch_ch_iy_noSlide>)]) ([(<any_Cx_ch_ch_v_f> ch)] | [(ch <any_Cx_ch_ch_v_f>)])) (iy | ((<any_Vx_ch_ch_iy_noSlide> ch) | (ch <any_Vx_ch_ch_iy_noSlide>)))) (([(<any_Cx_ch_ch_v> ch)] | [(ch <any_Cx_ch_ch_v>)]) (v | ((<any_Cx_ch_ch_v_axr> ch) | (ch <any_Cx_ch_ch_v_axr>)))) (([(<any_Cx_zh_ch_axr_v> zh)] | [(zh <any_Cx_zh_ch_axr_v>)]) (axr | ((<any_Cx_zh_ch_axr_v> zh) | (zh <any_Cx_zh_ch_axr_v>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_ng> ng)] | [(ng <any_Cx_zh_axr_ng>)]) sil))

results =
{72 [{sil 65 67} {s 68 70} {iy 71 73} {v 74 76} {axr 77 79} {sil 80 82}]}
{80 [{sil 71 74} {s 75 77} {iy 78 80} {v 81 83} {axr 84 86} {sil 87 90}]}
{91 [{sil 0 13} {f 14 17} {iy 18 34} {v 35 37} {axr 38 56} {sil 57 103}]}
{105 [{sil 0 16} {f 17 20} {iy 21 39} {v 40 43} {axr 44 65} {sil 66 115}]}
{125 [{sil 3 20} {f 21 26} {iy 27 48} {v 49 52} {axr 53 78} {sil 79 139}]}

normalised results =
{72 [{sil 65 67} {s 94 94} {iy 99 99} {v 103 103} {axr 107 107} {sil 111 111}]}
{80 [{sil 71 74} {s 94 94} {iy 98 98} {v 101 101} {axr 105 105} {sil 109 113}]}
{91 [{sil 0 13} {f 15 19} {iy 20 37} {v 38 38} {axr 42 62} {sil 63 113}]}
{105 [{sil 0 16} {f 16 19} {iy 20 37} {v 38 41} {axr 42 62} {sil 63 110}]}
{125 [{sil 3 20} {f 17 21} {iy 22 38} {v 39 42} {axr 42 62} {sil 63 111}]}

ruleAligned = [{{f 1} [{2 1} {3 1} {4 1}]} {{iy 1} [{2 2} {3 2} {4 2}]} {{v 2} [{3 3} {4 3}]} {{axr 1} [{2 4} {3 4} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 65 65} {s 94 94} {iy 99 99} {v 103 103} {axr 107 107} {sil 111 111}]}
{80 [{sil 71 71} {s 94 94} {iy 98 98} {v 101 101} {axr 105 105} {sil 109 109}]}
{91 [{sil 0 0} {f 15 19} {iy 20 37} {v 38 38} {axr 42 62} {sil 63 63}]}
{105 [{sil 0 0} {f 16 19} {iy 20 37} {v 38 41} {axr 42 62} {sil 63 63}]}
{125 [{sil 3 3} {f 17 21} {iy 22 38} {v 39 42} {axr 42 62} {sil 63 63}]}

timeAligned = [{{f 17 19} [{2 1} {3 1} {4 1}]} {{iy 22 37} [{2 2} {3 2} {4 2}]} {{axr 42 62} [{2 4} {3 4} {4 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 19
i, iTime, newITime, timeStartFrom = 2 1 -1 37
i, iTime, newITime, timeStartFrom = 3 1 2 37
combinedVerdict    = [{f 1} {iy 1} {v 2} {axr 1}]
ruleAlignedVerdict = [{f 1} {iy 1} {v 2} {axr 1}]

score->
+1 for f
+1 for iy
-1 for v
+1 for axr
score<-: 2
bestResult = {2 [{f 1} {iy 1} {v 2} {axr 1}] [f iy v axr]}
testPronounce f possible iy possible v missing axr possible
publish->
phonsToAlphas = [{[f] f} {[iy] e} {[v] v} {[axr] er}]
getVerdict<-:new {f [f] 1}
getVerdict<-:new {e [iy] 1}
getVerdict<-:new {v [v] 2}
getVerdict<-:new {er [axr] 1}
lettersVerdicts = [{f [f] 1} {e [iy] 1} {v [v] 2} {er [axr] 1}]
publish<-
Total: 279.26099ms
{
  "results": [
    {
      "letters": "f",
      "phonemes": "f",
      "verdict": "possible"
    },
    {
      "letters": "e",
      "phonemes": "iː",
      "verdict": "possible"
    },
    {
      "letters": "v",
      "phonemes": "v",
      "verdict": "missing"
    },
    {
      "letters": "er",
      "phonemes": "əɹ",
      "verdict": "possible"
    }
  ],
  "err": null
}
