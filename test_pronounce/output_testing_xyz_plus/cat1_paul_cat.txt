
 length of audio =  1.902625



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.54 0.6 1.1400000000000001

 start3, duration3, end3 =  0.54 0.48 1.02

 Initial start, duration, end =  0.44000000000000006 0.7000000000000001 1.1400000000000001

 Cut at: start, duration =  0.44000000000000006 1.1500000000000001     guard_end =  1.5900000000000003 

Running scan for frate = 125
Considering guard z with value 1 for k ...
Considering guard zh with value 1 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard zh with value 2 for ae ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ao with value 1 for t ...
Considering guard zh with value 1 for t ...
candidateGuards = map[ao:true zh:true]
Picking guard, zh

frate, target rule = 125 public <cat> = (((sil [((d <any_Cx_k_d_b>) | (<any_Cx_k_d_b> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil b (sil [((d <any_Cx_k_d_b>) | (<any_Cx_k_d_b> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_z_b_d_k> z)] | [(z <any_Cx_z_b_d_k>)]) (k | d | ((<any_Cx_z_b_d_k> z) | (z <any_Cx_z_b_d_k>)))) ((([(<any_Vx_zh_z_ae_noSlide> zh)] | [(zh <any_Vx_zh_z_ae_noSlide>)]) ([(<any_Cx_zh_z_t_k> zh)] | [(zh <any_Cx_zh_z_t_k>)])) (ae | ((<any_Vx_zh_z_ae_noSlide> zh) | (zh <any_Vx_zh_z_ae_noSlide>)))) (([(<any_Cx_zh_zh_t> zh)] | [(zh <any_Cx_zh_zh_t>)]) (t | ((<any_Cx_zh_zh_t> zh) | (zh <any_Cx_zh_zh_t>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_d> d)] | [(d <any_Cx_zh_t_d>)]) sil))
Running scan for frate = 105
Considering guard zh with value 1 for k ...
Considering guard z with value 1 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for ae ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ao with value 1 for t ...
Considering guard zh with value 1 for t ...
candidateGuards = map[ao:true zh:true]
Picking guard, ao

frate, target rule = 105 public <cat> = (((sil [((d <any_Cx_k_d_b>) | (<any_Cx_k_d_b> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil b (sil [((d <any_Cx_k_d_b>) | (<any_Cx_k_d_b> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_zh_b_d_k> zh)] | [(zh <any_Cx_zh_b_d_k>)]) (k | d | ((<any_Cx_zh_b_d_k> zh) | (zh <any_Cx_zh_b_d_k>)))) ((([(<any_Vx_zh_zh_ae_noSlide> zh)] | [(zh <any_Vx_zh_zh_ae_noSlide>)]) ([(<any_Cx_zh_zh_t_k> zh)] | [(zh <any_Cx_zh_zh_t_k>)])) (ae | ((<any_Vx_zh_zh_ae_noSlide> zh) | (zh <any_Vx_zh_zh_ae_noSlide>)))) (([(<any_Cx_ao_zh_t> ao)] | [(ao <any_Cx_ao_zh_t>)]) (t | ((<any_Cx_ao_zh_t> ao) | (ao <any_Cx_ao_zh_t>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_ao_t_thr> thr)] | [(thr <any_Cx_ao_t_thr>)]) sil))
Running scan for frate = 91
Considering guard z with value 1 for k ...
Considering guard zh with value 1 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard zh with value 2 for ae ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for t ...
Considering guard ao with value 1 for t ...
candidateGuards = map[ao:true zh:true]
Picking guard, ao

frate, target rule = 91 public <cat> = (((sil [((p <any_Cx_k_p_b>) | (<any_Cx_k_p_b> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]) | (sil b (sil [((p <any_Cx_k_p_b>) | (<any_Cx_k_p_b> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]))) (([(<any_Cx_z_b_p_k> z)] | [(z <any_Cx_z_b_p_k>)]) (k | d | ((<any_Cx_z_b_p_k> z) | (z <any_Cx_z_b_p_k>)))) ((([(<any_Vx_zh_z_ae_noSlide> zh)] | [(zh <any_Vx_zh_z_ae_noSlide>)]) ([(<any_Cx_zh_z_t_k> zh)] | [(zh <any_Cx_zh_z_t_k>)])) (ae | ((<any_Vx_zh_z_ae_noSlide> zh) | (zh <any_Vx_zh_z_ae_noSlide>)))) (([(<any_Cx_ao_zh_t> ao)] | [(ao <any_Cx_ao_zh_t>)]) (t | ((<any_Cx_ao_zh_t> ao) | (ao <any_Cx_ao_zh_t>)))) (([(<any_vowel_noSlide> k)] | [(k <any_vowel_noSlide>)]) ([(<any_Cx_ao_t_k> k)] | [(k <any_Cx_ao_t_k>)]) sil))
Running scan for frate = 80
Considering guard z with value 1 for k ...
Considering guard zh with value 1 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard zh with value 2 for ae ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for t ...
Considering guard ao with value 1 for t ...
candidateGuards = map[ao:true zh:true]
Picking guard, zh

frate, target rule = 80 public <cat> = (((sil [((p <any_Cx_k_p_b>) | (<any_Cx_k_p_b> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]) | (sil b (sil [((p <any_Cx_k_p_b>) | (<any_Cx_k_p_b> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]))) (([(<any_Cx_z_b_p_k> z)] | [(z <any_Cx_z_b_p_k>)]) (k | d | ((<any_Cx_z_b_p_k> z) | (z <any_Cx_z_b_p_k>)))) ((([(<any_Vx_zh_z_ae_noSlide> zh)] | [(zh <any_Vx_zh_z_ae_noSlide>)]) ([(<any_Cx_zh_z_t_k> zh)] | [(zh <any_Cx_zh_z_t_k>)])) (ae | ((<any_Vx_zh_z_ae_noSlide> zh) | (zh <any_Vx_zh_z_ae_noSlide>)))) (([(<any_Cx_zh_zh_t> zh)] | [(zh <any_Cx_zh_zh_t>)]) (t | ((<any_Cx_zh_zh_t> zh) | (zh <any_Cx_zh_zh_t>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_p> p)] | [(p <any_Cx_zh_t_p>)]) sil))
Running scan for frate = 72
Considering guard zh with value 1 for k ...
Considering guard z with value 1 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for ae ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ao with value 1 for t ...
Considering guard zh with value 1 for t ...
candidateGuards = map[ao:true zh:true]
Picking guard, ao

frate, target rule = 72 public <cat> = (((sil [((p <any_Cx_k_p_b>) | (<any_Cx_k_p_b> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]) | (sil b (sil [((p <any_Cx_k_p_b>) | (<any_Cx_k_p_b> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]))) (([(<any_Cx_zh_b_p_k> zh)] | [(zh <any_Cx_zh_b_p_k>)]) (k | d | ((<any_Cx_zh_b_p_k> zh) | (zh <any_Cx_zh_b_p_k>)))) ((([(<any_Vx_zh_zh_ae_noSlide> zh)] | [(zh <any_Vx_zh_zh_ae_noSlide>)]) ([(<any_Cx_zh_zh_t_k> zh)] | [(zh <any_Cx_zh_zh_t_k>)])) (ae | ((<any_Vx_zh_zh_ae_noSlide> zh) | (zh <any_Vx_zh_zh_ae_noSlide>)))) (([(<any_Cx_ao_zh_t> ao)] | [(ao <any_Cx_ao_zh_t>)]) (t | ((<any_Cx_ao_zh_t> ao) | (ao <any_Cx_ao_zh_t>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_ao_t_g> g)] | [(g <any_Cx_ao_t_g>)]) sil))

results =
{72 [{sil 0 11} {k 12 18} {ae 19 34} {t 35 49} {sil 50 64}]}
{80 [{sil 0 13} {k 14 20} {ae 21 38} {t 39 53} {sil 54 69}]}
{91 [{sil 0 16} {k 17 23} {ae 24 44} {t 45 63} {sil 64 103}]}
{105 [{sil 0 19} {k 20 26} {ae 27 52} {t 53 76} {sil 77 115}]}
{125 [{sil 3 24} {k 25 33} {ae 34 63} {t 64 85} {sil 86 139}]}

normalised results =
{72 [{sil 0 11} {k 17 25} {ae 26 47} {t 49 68} {sil 69 89}]}
{80 [{sil 0 13} {k 18 25} {ae 26 48} {t 49 66} {sil 68 86}]}
{91 [{sil 0 16} {k 19 25} {ae 26 48} {t 49 69} {sil 70 113}]}
{105 [{sil 0 19} {k 19 25} {ae 26 50} {t 50 72} {sil 73 110}]}
{125 [{sil 3 24} {k 20 26} {ae 27 50} {t 51 68} {sil 69 111}]}

ruleAligned = [{{k 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ae 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{t 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {k 17 25} {ae 26 47} {t 49 68} {sil 69 69}]}
{80 [{sil 0 0} {k 18 25} {ae 26 48} {t 49 66} {sil 68 68}]}
{91 [{sil 0 0} {k 19 25} {ae 26 48} {t 49 69} {sil 70 70}]}
{105 [{sil 0 0} {k 19 25} {ae 26 50} {t 50 72} {sil 73 73}]}
{125 [{sil 3 3} {k 20 26} {ae 27 50} {t 51 68} {sil 69 69}]}

timeAligned = [{{k 19 25} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ae 26 48} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{t 49 68} [{0 3} {1 3} {2 3} {3 3} {4 3}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 25
i, iTime, newITime, timeStartFrom = 2 1 2 47
combinedVerdict    = [{k 0} {ae 0} {t 0}]
ruleAlignedVerdict = [{k 0} {ae 0} {t 0}]

score->
+1 for k
+1 for ae
+1 for t
score<-: 8
testPronounce k good ae good t good
publish->
phonsToAlphas = [{[k] c} {[ae] a} {[t] t}]
getVerdict<-:new {c [k] 0}
getVerdict<-:new {a [ae] 0}
getVerdict<-:new {t [t] 0}
lettersVerdicts = [{c [k] 0} {a [ae] 0} {t [t] 0}]
publish<-
Total: 293.860008ms
{
  "results": [
    {
      "letters": "c",
      "phonemes": "k",
      "verdict": "good"
    },
    {
      "letters": "a",
      "phonemes": "Ã¦",
      "verdict": "good"
    },
    {
      "letters": "t",
      "phonemes": "t",
      "verdict": "good"
    }
  ],
  "err": null
}
