
 length of audio =  2.961375



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.6 0.84 1.44

 start3, duration3, end3 =  0.9400000000000001 0.4 1.34

 Initial start, duration, end =  0.5 0.94 1.44

 Cut at: start, duration =  0.5 1.39     guard_end =  1.89 

Running scan for frate = 125
Considering guard w with value 2 for s ...
Considering guard m with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, w

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard z with value 5 for uw ...
Considering guard zh with value 5 for uw ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 125 public <school> = (((sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil p (sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_w_p_sh_s_k> w)] | [(w <any_Cx_w_p_sh_s_k>)]) (s | z | ((<any_Cx_w_p_sh_s_k> w) | (w <any_Cx_w_p_sh_s_k>)))) (([(<any_Cx_n_w_k_s> n)] | [(n <any_Cx_n_w_k_s>)]) (k | ((<any_Cx_n_w_k> n) | (n <any_Cx_n_w_k>)))) ((([(<any_Vx_z_n_uw_noSlide> z)] | [(z <any_Vx_z_n_uw_noSlide>)]) ([(<any_Cx_z_n_l_k> z)] | [(z <any_Cx_z_n_l_k>)])) (uw | ((<any_Vx_z_n_uw_noSlide> z) | (z <any_Vx_z_n_uw_noSlide>)))) (([(<any_Cx_sh_z_l> sh)] | [(sh <any_Cx_sh_z_l>)]) (l | ((<any_Cx_sh_z_l> sh) | (sh <any_Cx_sh_z_l>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_thr> thr)] | [(thr <any_Cx_sh_l_thr>)]) sil))
Running scan for frate = 105
Considering guard m with value 2 for s ...
Considering guard w with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, m

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard z with value 5 for uw ...
Considering guard zh with value 5 for uw ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 105 public <school> = (((sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]) | (sil p (sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]))) (([(<any_Cx_m_p_th_s_k> m)] | [(m <any_Cx_m_p_th_s_k>)]) (s | z | ((<any_Cx_m_p_th_s_k> m) | (m <any_Cx_m_p_th_s_k>)))) (([(<any_Cx_n_m_k_s> n)] | [(n <any_Cx_n_m_k_s>)]) (k | ((<any_Cx_n_m_k> n) | (n <any_Cx_n_m_k>)))) ((([(<any_Vx_z_n_uw_noSlide> z)] | [(z <any_Vx_z_n_uw_noSlide>)]) ([(<any_Cx_z_n_l_k> z)] | [(z <any_Cx_z_n_l_k>)])) (uw | ((<any_Vx_z_n_uw_noSlide> z) | (z <any_Vx_z_n_uw_noSlide>)))) (([(<any_Cx_sh_z_l> sh)] | [(sh <any_Cx_sh_z_l>)]) (l | ((<any_Cx_sh_z_l> sh) | (sh <any_Cx_sh_z_l>)))) (([(<any_vowel_noSlide> w)] | [(w <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_w> w)] | [(w <any_Cx_sh_l_w>)]) sil))
Running scan for frate = 91
Considering guard w with value 2 for s ...
Considering guard m with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, w

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard z with value 5 for uw ...
Considering guard zh with value 5 for uw ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 91 public <school> = (((sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]) | (sil p (sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]))) (([(<any_Cx_w_p_th_s_k> w)] | [(w <any_Cx_w_p_th_s_k>)]) (s | z | ((<any_Cx_w_p_th_s_k> w) | (w <any_Cx_w_p_th_s_k>)))) (([(<any_Cx_n_w_k_s> n)] | [(n <any_Cx_n_w_k_s>)]) (k | ((<any_Cx_n_w_k> n) | (n <any_Cx_n_w_k>)))) ((([(<any_Vx_z_n_uw_noSlide> z)] | [(z <any_Vx_z_n_uw_noSlide>)]) ([(<any_Cx_z_n_l_k> z)] | [(z <any_Cx_z_n_l_k>)])) (uw | ((<any_Vx_z_n_uw_noSlide> z) | (z <any_Vx_z_n_uw_noSlide>)))) (([(<any_Cx_sh_z_l> sh)] | [(sh <any_Cx_sh_z_l>)]) (l | ((<any_Cx_sh_z_l> sh) | (sh <any_Cx_sh_z_l>)))) (([(<any_vowel_noSlide> r)] | [(r <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_r> r)] | [(r <any_Cx_sh_l_r>)]) sil))
Running scan for frate = 80
Considering guard w with value 2 for s ...
Considering guard m with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, m

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard zh with value 5 for uw ...
Considering guard z with value 5 for uw ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 80 public <school> = (((sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]) | (sil p (sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]))) (([(<any_Cx_m_p_th_s_k> m)] | [(m <any_Cx_m_p_th_s_k>)]) (s | z | ((<any_Cx_m_p_th_s_k> m) | (m <any_Cx_m_p_th_s_k>)))) (([(<any_Cx_n_m_k_s> n)] | [(n <any_Cx_n_m_k_s>)]) (k | ((<any_Cx_n_m_k> n) | (n <any_Cx_n_m_k>)))) ((([(<any_Vx_zh_n_uw_noSlide> zh)] | [(zh <any_Vx_zh_n_uw_noSlide>)]) ([(<any_Cx_zh_n_l_k> zh)] | [(zh <any_Cx_zh_n_l_k>)])) (uw | ((<any_Vx_zh_n_uw_noSlide> zh) | (zh <any_Vx_zh_n_uw_noSlide>)))) (([(<any_Cx_sh_zh_l> sh)] | [(sh <any_Cx_sh_zh_l>)]) (l | ((<any_Cx_sh_zh_l> sh) | (sh <any_Cx_sh_zh_l>)))) (([(<any_vowel_noSlide> w)] | [(w <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_w> w)] | [(w <any_Cx_sh_l_w>)]) sil))
Running scan for frate = 72
Considering guard m with value 2 for s ...
Considering guard w with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, m

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard z with value 5 for uw ...
Considering guard zh with value 5 for uw ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 72 public <school> = (((sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil p (sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_m_p_sh_s_k> m)] | [(m <any_Cx_m_p_sh_s_k>)]) (s | z | ((<any_Cx_m_p_sh_s_k> m) | (m <any_Cx_m_p_sh_s_k>)))) (([(<any_Cx_n_m_k_s> n)] | [(n <any_Cx_n_m_k_s>)]) (k | ((<any_Cx_n_m_k> n) | (n <any_Cx_n_m_k>)))) ((([(<any_Vx_z_n_uw_noSlide> z)] | [(z <any_Vx_z_n_uw_noSlide>)]) ([(<any_Cx_z_n_l_k> z)] | [(z <any_Cx_z_n_l_k>)])) (uw | ((<any_Vx_z_n_uw_noSlide> z) | (z <any_Vx_z_n_uw_noSlide>)))) (([(<any_Cx_sh_z_l> sh)] | [(sh <any_Cx_sh_z_l>)]) (l | ((<any_Cx_sh_z_l> sh) | (sh <any_Cx_sh_z_l>)))) (([(<any_vowel_noSlide> w)] | [(w <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_w> w)] | [(w <any_Cx_sh_l_w>)]) sil))
Running scan for frate = 125
Considering guard w with value 2 for s ...
Considering guard m with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, w

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard n with value 3 for uwl ...
candidateGuards = map[n:true]
Picking guard, n


frate, target rule = 125 public <school> = (((sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil p (sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_w_p_t_s_k> w)] | [(w <any_Cx_w_p_t_s_k>)]) (s | z | ((<any_Cx_w_p_t_s_k> w) | (w <any_Cx_w_p_t_s_k>)))) (([(<any_Cx_n_w_k_s> n)] | [(n <any_Cx_n_w_k_s>)]) (k | ((<any_Cx_n_w_k_uwl> n) | (n <any_Cx_n_w_k_uwl>)))) (([(<any_Cx_n_n_uwl_k> n)] | [(n <any_Cx_n_n_uwl_k>)]) (uwl | ((<any_Cx_n_n_uwl_k> n) | (n <any_Cx_n_n_uwl_k>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_n_uwl_f> f)] | [(f <any_Cx_n_uwl_f>)]) sil))
Running scan for frate = 105
Considering guard m with value 2 for s ...
Considering guard w with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, m

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard n with value 3 for uwl ...
candidateGuards = map[n:true]
Picking guard, n


frate, target rule = 105 public <school> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_m_p_ch_s_k> m)] | [(m <any_Cx_m_p_ch_s_k>)]) (s | z | ((<any_Cx_m_p_ch_s_k> m) | (m <any_Cx_m_p_ch_s_k>)))) (([(<any_Cx_n_m_k_s> n)] | [(n <any_Cx_n_m_k_s>)]) (k | ((<any_Cx_n_m_k_uwl> n) | (n <any_Cx_n_m_k_uwl>)))) (([(<any_Cx_n_n_uwl_k> n)] | [(n <any_Cx_n_n_uwl_k>)]) (uwl | ((<any_Cx_n_n_uwl_k> n) | (n <any_Cx_n_n_uwl_k>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_n_uwl_f> f)] | [(f <any_Cx_n_uwl_f>)]) sil))
Running scan for frate = 91
Considering guard m with value 2 for s ...
Considering guard w with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, m

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard n with value 3 for uwl ...
candidateGuards = map[n:true]
Picking guard, n


frate, target rule = 91 public <school> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_m_p_ch_s_k> m)] | [(m <any_Cx_m_p_ch_s_k>)]) (s | z | ((<any_Cx_m_p_ch_s_k> m) | (m <any_Cx_m_p_ch_s_k>)))) (([(<any_Cx_n_m_k_s> n)] | [(n <any_Cx_n_m_k_s>)]) (k | ((<any_Cx_n_m_k_uwl> n) | (n <any_Cx_n_m_k_uwl>)))) (([(<any_Cx_n_n_uwl_k> n)] | [(n <any_Cx_n_n_uwl_k>)]) (uwl | ((<any_Cx_n_n_uwl_k> n) | (n <any_Cx_n_n_uwl_k>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_n_uwl_hh> hh)] | [(hh <any_Cx_n_uwl_hh>)]) sil))
Running scan for frate = 80
Considering guard m with value 2 for s ...
Considering guard w with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, m

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard n with value 3 for uwl ...
candidateGuards = map[n:true]
Picking guard, n


frate, target rule = 80 public <school> = (((sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_m_p_z_s_k> m)] | [(m <any_Cx_m_p_z_s_k>)]) (s | z | ((<any_Cx_m_p_z_s_k> m) | (m <any_Cx_m_p_z_s_k>)))) (([(<any_Cx_n_m_k_s> n)] | [(n <any_Cx_n_m_k_s>)]) (k | ((<any_Cx_n_m_k_uwl> n) | (n <any_Cx_n_m_k_uwl>)))) (([(<any_Cx_n_n_uwl_k> n)] | [(n <any_Cx_n_n_uwl_k>)]) (uwl | ((<any_Cx_n_n_uwl_k> n) | (n <any_Cx_n_n_uwl_k>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_n_uwl_f> f)] | [(f <any_Cx_n_uwl_f>)]) sil))
Running scan for frate = 72
Considering guard m with value 2 for s ...
Considering guard w with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, m

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard n with value 3 for uwl ...
candidateGuards = map[n:true]
Picking guard, n


frate, target rule = 72 public <school> = (((sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil p (sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_m_p_sh_s_k> m)] | [(m <any_Cx_m_p_sh_s_k>)]) (s | z | ((<any_Cx_m_p_sh_s_k> m) | (m <any_Cx_m_p_sh_s_k>)))) (([(<any_Cx_n_m_k_s> n)] | [(n <any_Cx_n_m_k_s>)]) (k | ((<any_Cx_n_m_k_uwl> n) | (n <any_Cx_n_m_k_uwl>)))) (([(<any_Cx_n_n_uwl_k> n)] | [(n <any_Cx_n_n_uwl_k>)]) (uwl | ((<any_Cx_n_n_uwl_k> n) | (n <any_Cx_n_n_uwl_k>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_n_uwl_f> f)] | [(f <any_Cx_n_uwl_f>)]) sil))

results =
{72 [{sil 0 10} {sh 11 13} {eh 14 20} {z 21 31} {k 32 38} {l 39 52} {n 53 56} {sil 57 68}]}
{80 [{sil 86 91} {s 92 94} {k 95 97} {v 98 100} {n 101 103} {sil 104 111}]}
{91 [{sil 0 14} {ch 15 17} {ih 18 28} {s 29 39} {k 40 48} {l 49 67} {n 68 71} {sil 72 125}]}
{105 [{sil 0 16} {ch 17 19} {ih 20 32} {s 33 48} {k 49 56} {l 57 79} {n 80 82} {sil 83 145}]}
{125 [{sil 3 21} {t 22 25} {ih 26 39} {s 40 58} {k 59 64} {l 65 96} {n 97 99} {sil 100 169}]}

normalised results =
{72 [{sil 0 10} {sh 15 15} {eh 19 28} {z 29 43} {k 44 53} {l 54 72} {n 74 78} {sil 79 94}]}
{80 [{sil 86 91} {s 115 115} {k 119 119} {v 123 123} {n 126 126} {sil 130 139}]}
{91 [{sil 0 14} {ch 16 16} {ih 20 31} {s 32 43} {k 44 53} {l 54 74} {n 75 78} {sil 79 137}]}
{105 [{sil 0 16} {ch 16 16} {ih 19 30} {s 31 46} {k 47 53} {l 54 75} {n 76 76} {sil 79 138}]}
{125 [{sil 3 21} {t 18 20} {ih 21 31} {s 32 46} {k 47 51} {l 52 77} {n 78 78} {sil 80 135}]}

ruleAligned = [{{ih 3} [{2 2} {3 2} {4 2}]} {{s 1} [{2 3} {3 3} {4 3}]} {{k 0} [{0 4} {2 4} {3 4} {4 4}]} {{uwl 2} []} {{l 3} [{0 5} {2 5} {3 5} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {sh 15 15} {eh 19 28} {z 29 43} {k 44 53} {l 54 72} {n 74 74} {sil 79 79}]}
{80 [{sil 86 86} {s 115 115} {k 119 119} {v 123 123} {n 126 126} {sil 130 130}]}
{91 [{sil 0 0} {ch 16 16} {ih 20 31} {s 32 43} {k 44 53} {l 54 74} {n 75 75} {sil 79 79}]}
{105 [{sil 0 0} {ch 16 16} {ih 19 30} {s 31 46} {k 47 53} {l 54 75} {n 76 76} {sil 79 79}]}
{125 [{sil 3 3} {t 18 18} {ih 21 31} {s 32 46} {k 47 51} {l 52 77} {n 78 78} {sil 80 80}]}

timeAligned = [{{ih 21 30} [{2 2} {3 2} {4 2}]} {{s 32 43} [{2 3} {3 3} {4 3}]} {{k 47 53} [{0 4} {2 4} {3 4} {4 4}]} {{l 54 74} [{0 5} {2 5} {3 5} {4 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 30
i, iTime, newITime, timeStartFrom = 2 1 2 43
i, iTime, newITime, timeStartFrom = 3 2 -1 51
i, iTime, newITime, timeStartFrom = 4 2 3 51
combinedVerdict    = [{ih 3} {s 1} {k 0} {uwl 2} {l 3}]
ruleAlignedVerdict = [{ih 3} {s 1} {k 0} {uwl 2} {l 3}]

score->
-1 for ih
+1 for s
+1 for k
-1 for uwl
-1 for l
score<-: -1

results =
{72 [{sil 0 10} {sh 11 13} {eh 14 20} {z 21 31} {k 32 37} {uw 38 41} {l 42 56} {sil 57 68}]}
{80 [{sil 86 90} {s 91 93} {k 94 96} {uw 97 99} {l 100 102} {sil 103 111}]}
{91 [{sil 0 14} {th 15 18} {ih 19 28} {s 29 39} {k 40 47} {uw 48 52} {l 53 71} {sil 72 125}]}
{105 [{sil 0 16} {th 17 21} {ih 22 32} {s 33 48} {k 49 55} {uw 56 59} {l 60 82} {sil 83 145}]}
{125 [{sil 3 23} {sh 24 26} {ih 27 39} {s 40 58} {k 59 66} {uw 67 72} {l 73 98} {sil 99 169}]}

normalised results =
{72 [{sil 0 10} {sh 15 15} {eh 19 28} {z 29 43} {k 44 51} {uw 53 57} {l 58 78} {sil 79 94}]}
{80 [{sil 86 90} {s 114 114} {k 118 118} {uw 121 121} {l 125 125} {sil 129 139}]}
{91 [{sil 0 14} {th 16 20} {ih 21 31} {s 32 43} {k 44 52} {uw 53 57} {l 58 78} {sil 79 137}]}
{105 [{sil 0 16} {th 16 20} {ih 21 30} {s 31 46} {k 47 52} {uw 53 56} {l 57 78} {sil 79 138}]}
{125 [{sil 3 23} {sh 19 19} {ih 22 31} {s 32 46} {k 47 53} {uw 54 58} {l 58 78} {sil 79 135}]}

ruleAligned = [{{ih 3} [{2 2} {3 2} {4 2}]} {{s 1} [{2 3} {3 3} {4 3}]} {{k 0} [{0 4} {2 4} {3 4} {4 4}]} {{uw 0} [{0 5} {2 5} {3 5} {4 5}]} {{l 0} [{0 6} {2 6} {3 6} {4 6}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {sh 15 15} {eh 19 28} {z 29 43} {k 44 51} {uw 53 57} {l 58 78} {sil 79 79}]}
{80 [{sil 86 86} {s 114 114} {k 118 118} {uw 121 121} {l 125 125} {sil 129 129}]}
{91 [{sil 0 0} {th 16 20} {ih 21 31} {s 32 43} {k 44 52} {uw 53 57} {l 58 78} {sil 79 79}]}
{105 [{sil 0 0} {th 16 20} {ih 21 30} {s 31 46} {k 47 52} {uw 53 56} {l 57 78} {sil 79 79}]}
{125 [{sil 3 3} {sh 19 19} {ih 22 31} {s 32 46} {k 47 53} {uw 54 58} {l 58 78} {sil 79 79}]}

timeAligned = [{{ih 22 30} [{2 2} {3 2} {4 2}]} {{s 32 43} [{2 3} {3 3} {4 3}]} {{k 47 52} [{0 4} {2 4} {3 4} {4 4}]} {{uw 53 57} [{0 5} {2 5} {3 5} {4 5}]} {{l 58 78} [{0 6} {2 6} {3 6} {4 6}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 30
i, iTime, newITime, timeStartFrom = 2 1 2 43
i, iTime, newITime, timeStartFrom = 3 2 3 51
i, iTime, newITime, timeStartFrom = 4 3 4 56
combinedVerdict    = [{ih 3} {s 1} {k 0} {uw 0} {l 0}]
ruleAlignedVerdict = [{ih 3} {s 1} {k 0} {uw 0} {l 0}]

score->
-1 for ih
+1 for s
+1 for k
+1 for uw
+1 for l
score<-: 3
testPronounce ih surprise s possible k good uw good l good
publish->
phonsToAlphas = [{[s] s} {[k] ch} {[uw] oo} {[l] l}]
getVerdict<-:new {s [s] 1}
getVerdict<-:new {ch [k] 0}
getVerdict<-:new {oo [uw] 0}
getVerdict<-:new {l [l] 0}
lettersVerdicts = [{ih [ih] 3} {s [s] 1} {ch [k] 0} {oo [uw] 0} {l [l] 0}]
publish<-
{
  "results": [
    {
      "letters": "ih",
      "phonemes": "ɪ",
      "verdict": "surprise"
    },
    {
      "letters": "s",
      "phonemes": "s",
      "verdict": "possible"
    },
    {
      "letters": "ch",
      "phonemes": "k",
      "verdict": "good"
    },
    {
      "letters": "oo",
      "phonemes": "u",
      "verdict": "good"
    },
    {
      "letters": "l",
      "phonemes": "l",
      "verdict": "good"
    }
  ],
  "err": null
}
