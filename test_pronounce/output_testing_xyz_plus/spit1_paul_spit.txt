
 length of audio =  1.902562



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.66 0.86 1.52

 start3, duration3, end3 =  0.88 0.44000000000000006 1.32

 Initial start, duration, end =  0.56 0.96 1.52

 Cut at: start, duration =  0.56 1.322562     guard_end =  1.882562 

Running scan for frate = 125
Considering guard ng with value 1.7999999999999998 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 4 for p ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 3 for t ...
candidateGuards = map[r:true]
Picking guard, r


frate, target rule = 125 public <spit> = (((sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ng_p_z_s_p> ng)] | [(ng <any_Cx_ng_p_z_s_p>)]) (s | z | ((<any_Cx_ng_p_z_s_p> ng) | (ng <any_Cx_ng_p_z_s_p>)))) (([(<any_Cx_ng_ng_p_s> ng)] | [(ng <any_Cx_ng_ng_p_s>)]) (p | ((<any_Cx_ng_ng_p> ng) | (ng <any_Cx_ng_ng_p>)))) ((([(<any_Vx_r_ng_ih_noSlide> r)] | [(r <any_Vx_r_ng_ih_noSlide>)]) ([(<any_Cx_r_ng_t_p> r)] | [(r <any_Cx_r_ng_t_p>)])) (ih | ((<any_Vx_r_ng_ih_noSlide> r) | (r <any_Vx_r_ng_ih_noSlide>)))) (([(<any_Cx_r_r_t> r)] | [(r <any_Cx_r_r_t>)]) (t | ((<any_Cx_r_r_t> r) | (r <any_Cx_r_r_t>)))) (([(<any_vowel_noSlide> k)] | [(k <any_vowel_noSlide>)]) ([(<any_Cx_r_t_k> k)] | [(k <any_Cx_r_t_k>)]) sil))
Running scan for frate = 105
Considering guard ng with value 1.7999999999999998 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 4 for p ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 3 for t ...
candidateGuards = map[r:true]
Picking guard, r


frate, target rule = 105 public <spit> = (((sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil p (sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_ng_p_sh_s_p> ng)] | [(ng <any_Cx_ng_p_sh_s_p>)]) (s | z | ((<any_Cx_ng_p_sh_s_p> ng) | (ng <any_Cx_ng_p_sh_s_p>)))) (([(<any_Cx_ng_ng_p_s> ng)] | [(ng <any_Cx_ng_ng_p_s>)]) (p | ((<any_Cx_ng_ng_p> ng) | (ng <any_Cx_ng_ng_p>)))) ((([(<any_Vx_r_ng_ih_noSlide> r)] | [(r <any_Vx_r_ng_ih_noSlide>)]) ([(<any_Cx_r_ng_t_p> r)] | [(r <any_Cx_r_ng_t_p>)])) (ih | ((<any_Vx_r_ng_ih_noSlide> r) | (r <any_Vx_r_ng_ih_noSlide>)))) (([(<any_Cx_r_r_t> r)] | [(r <any_Cx_r_r_t>)]) (t | ((<any_Cx_r_r_t> r) | (r <any_Cx_r_r_t>)))) (([(<any_vowel_noSlide> k)] | [(k <any_vowel_noSlide>)]) ([(<any_Cx_r_t_k> k)] | [(k <any_Cx_r_t_k>)]) sil))
Running scan for frate = 91
Considering guard ng with value 1.7999999999999998 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 4 for p ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 3 for t ...
candidateGuards = map[r:true]
Picking guard, r


frate, target rule = 91 public <spit> = (((sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ng_p_z_s_p> ng)] | [(ng <any_Cx_ng_p_z_s_p>)]) (s | z | ((<any_Cx_ng_p_z_s_p> ng) | (ng <any_Cx_ng_p_z_s_p>)))) (([(<any_Cx_ng_ng_p_s> ng)] | [(ng <any_Cx_ng_ng_p_s>)]) (p | ((<any_Cx_ng_ng_p> ng) | (ng <any_Cx_ng_ng_p>)))) ((([(<any_Vx_r_ng_ih_noSlide> r)] | [(r <any_Vx_r_ng_ih_noSlide>)]) ([(<any_Cx_r_ng_t_p> r)] | [(r <any_Cx_r_ng_t_p>)])) (ih | ((<any_Vx_r_ng_ih_noSlide> r) | (r <any_Vx_r_ng_ih_noSlide>)))) (([(<any_Cx_r_r_t> r)] | [(r <any_Cx_r_r_t>)]) (t | ((<any_Cx_r_r_t> r) | (r <any_Cx_r_r_t>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_r_t_g> g)] | [(g <any_Cx_r_t_g>)]) sil))
Running scan for frate = 80
Considering guard ng with value 1.7999999999999998 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 4 for p ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 3 for t ...
candidateGuards = map[r:true]
Picking guard, r


frate, target rule = 80 public <spit> = (((sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil p (sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_ng_p_sh_s_p> ng)] | [(ng <any_Cx_ng_p_sh_s_p>)]) (s | z | ((<any_Cx_ng_p_sh_s_p> ng) | (ng <any_Cx_ng_p_sh_s_p>)))) (([(<any_Cx_ng_ng_p_s> ng)] | [(ng <any_Cx_ng_ng_p_s>)]) (p | ((<any_Cx_ng_ng_p> ng) | (ng <any_Cx_ng_ng_p>)))) ((([(<any_Vx_r_ng_ih_noSlide> r)] | [(r <any_Vx_r_ng_ih_noSlide>)]) ([(<any_Cx_r_ng_t_p> r)] | [(r <any_Cx_r_ng_t_p>)])) (ih | ((<any_Vx_r_ng_ih_noSlide> r) | (r <any_Vx_r_ng_ih_noSlide>)))) (([(<any_Cx_r_r_t> r)] | [(r <any_Cx_r_r_t>)]) (t | ((<any_Cx_r_r_t> r) | (r <any_Cx_r_r_t>)))) (([(<any_vowel_noSlide> k)] | [(k <any_vowel_noSlide>)]) ([(<any_Cx_r_t_k> k)] | [(k <any_Cx_r_t_k>)]) sil))
Running scan for frate = 72
Considering guard ng with value 1.7999999999999998 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 4 for p ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 3 for t ...
candidateGuards = map[r:true]
Picking guard, r


frate, target rule = 72 public <spit> = (((sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil p (sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_ng_p_t_s_p> ng)] | [(ng <any_Cx_ng_p_t_s_p>)]) (s | z | ((<any_Cx_ng_p_t_s_p> ng) | (ng <any_Cx_ng_p_t_s_p>)))) (([(<any_Cx_ng_ng_p_s> ng)] | [(ng <any_Cx_ng_ng_p_s>)]) (p | ((<any_Cx_ng_ng_p> ng) | (ng <any_Cx_ng_ng_p>)))) ((([(<any_Vx_r_ng_ih_noSlide> r)] | [(r <any_Vx_r_ng_ih_noSlide>)]) ([(<any_Cx_r_ng_t_p> r)] | [(r <any_Cx_r_ng_t_p>)])) (ih | ((<any_Vx_r_ng_ih_noSlide> r) | (r <any_Vx_r_ng_ih_noSlide>)))) (([(<any_Cx_r_r_t> r)] | [(r <any_Cx_r_r_t>)]) (t | ((<any_Cx_r_r_t> r) | (r <any_Cx_r_r_t>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_r_t_g> g)] | [(g <any_Cx_r_t_g>)]) sil))

results =
{72 [{sil 0 7} {s 8 27} {p 28 30} {ih 31 47} {t 48 65} {sil 66 78}]}
{80 [{sil 0 9} {s 10 30} {p 31 33} {ih 34 52} {t 53 72} {sil 73 85}]}
{91 [{sil 0 10} {s 11 35} {p 36 38} {ih 39 59} {t 60 82} {sil 83 115}]}
{105 [{sil 0 12} {s 13 41} {p 42 45} {ih 46 69} {t 70 96} {sil 97 138}]}
{125 [{sil 3 16} {s 17 51} {p 52 54} {ih 55 86} {t 87 114} {sil 115 161}]}

normalised results =
{72 [{sil 0 7} {s 11 38} {p 39 39} {ih 43 65} {t 67 90} {sil 92 108}]}
{80 [{sil 0 9} {s 13 38} {p 39 39} {ih 43 65} {t 66 90} {sil 91 106}]}
{91 [{sil 0 10} {s 12 38} {p 40 40} {ih 43 65} {t 66 90} {sil 91 126}]}
{105 [{sil 0 12} {s 12 39} {p 40 43} {ih 44 66} {t 67 91} {sil 92 131}]}
{125 [{sil 3 16} {s 14 41} {p 42 42} {ih 44 69} {t 70 91} {sil 92 129}]}

ruleAligned = [{{s 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{p 2} [{3 2}]} {{ih 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{t 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {s 11 38} {p 39 39} {ih 43 65} {t 67 90} {sil 92 92}]}
{80 [{sil 0 0} {s 13 38} {p 39 39} {ih 43 65} {t 66 90} {sil 91 91}]}
{91 [{sil 0 0} {s 12 38} {p 40 40} {ih 43 65} {t 66 90} {sil 91 91}]}
{105 [{sil 0 0} {s 12 39} {p 40 43} {ih 44 66} {t 67 91} {sil 92 92}]}
{125 [{sil 3 3} {s 14 41} {p 42 42} {ih 44 69} {t 70 91} {sil 92 92}]}

timeAligned = [{{s 12 38} [{0 1} {2 1} {3 1} {1 1} {4 1}]} {{ih 43 65} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{t 67 90} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 -1 38
i, iTime, newITime, timeStartFrom = 2 0 1 38
i, iTime, newITime, timeStartFrom = 3 1 2 65
combinedVerdict    = [{s 0} {p 2} {ih 0} {t 0}]
ruleAlignedVerdict = [{s 0} {p 2} {ih 0} {t 0}]

score->
+1 for s
-1 for p
+1 for ih
+1 for t
score<-: 2
bestResult = {2 [{s 0} {p 2} {ih 0} {t 0}] [s p ih t]}
testPronounce s good p missing ih good t good
publish->
phonsToAlphas = [{[s] s} {[p] p} {[ih] i} {[t] t}]
getVerdict<-:new {s [s] 0}
getVerdict<-:new {p [p] 2}
getVerdict<-:new {i [ih] 0}
getVerdict<-:new {t [t] 0}
lettersVerdicts = [{s [s] 0} {p [p] 2} {i [ih] 0} {t [t] 0}]
publish<-
{
  "results": [
    {
      "letters": "s",
      "phonemes": "s",
      "verdict": "good"
    },
    {
      "letters": "p",
      "phonemes": "p",
      "verdict": "missing"
    },
    {
      "letters": "i",
      "phonemes": "Éª",
      "verdict": "good"
    },
    {
      "letters": "t",
      "phonemes": "t",
      "verdict": "good"
    }
  ],
  "err": null
}
