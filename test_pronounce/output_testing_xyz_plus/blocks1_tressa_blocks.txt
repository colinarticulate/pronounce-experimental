
 length of audio =  1.919625



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.5 0.48 0.98

 start3, duration3, end3 =  0.5 0.44000000000000006 0.9400000000000001

 Initial start, duration, end =  0.4 0.58 0.98

 Cut at: start, duration =  0.4 1.03     guard_end =  1.4300000000000002 

Running scan for frate = 125
Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard y with value 7.199999999999999 for oh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 5.199999999999999 for k ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard m with value 2 for s ...
Considering guard w with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, m


frate, target rule = 125 public <blocks> = (((sil [((hh <any_Cx_b_hh_hh>) | (<any_Cx_b_hh_hh> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil hh (sil [((hh <any_Cx_b_hh_hh>) | (<any_Cx_b_hh_hh> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_sh_hh_hh_b_l> sh)] | [(sh <any_Cx_sh_hh_hh_b_l>)]) (b | ((<any_Cx_sh_hh_hh_b_l> sh) | (sh <any_Cx_sh_hh_hh_b_l>)))) (([(<any_Cx_sh_sh_l_oh_b> sh)] | [(sh <any_Cx_sh_sh_l_oh_b>)]) (l | ((<any_Cx_sh_sh_l_oh> sh) | (sh <any_Cx_sh_sh_l_oh>)))) (([(<any_Cx_y_sh_oh_k_l> y)] | [(y <any_Cx_y_sh_oh_k_l>)]) (oh | ((<any_Cx_y_sh_oh_k_l> y) | (y <any_Cx_y_sh_oh_k_l>)))) (([(<any_Cx_y_y_k_oh> y)] | [(y <any_Cx_y_y_k_oh>)]) (k | ((<any_Cx_y_y_k_s_oh> y) | (y <any_Cx_y_y_k_s_oh>)))) (([(<any_Cx_m_y_s_k> m)] | [(m <any_Cx_m_y_s_k>)]) (s | ((<any_Cx_m_y_s_k> m) | (m <any_Cx_m_y_s_k>)))) (([(<any_vowel_noSlide> t)] | [(t <any_vowel_noSlide>)]) ([(<any_Cx_m_s_t> t)] | [(t <any_Cx_m_s_t>)]) sil))
Running scan for frate = 105
Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard y with value 7.199999999999999 for oh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 5.199999999999999 for k ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard m with value 2 for s ...
Considering guard w with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, m


frate, target rule = 105 public <blocks> = (((sil [((v <any_Cx_b_v_hh>) | (<any_Cx_b_v_hh> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]) | (sil hh (sil [((v <any_Cx_b_v_hh>) | (<any_Cx_b_v_hh> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]))) (([(<any_Cx_sh_hh_v_b_l> sh)] | [(sh <any_Cx_sh_hh_v_b_l>)]) (b | ((<any_Cx_sh_hh_v_b_l> sh) | (sh <any_Cx_sh_hh_v_b_l>)))) (([(<any_Cx_sh_sh_l_oh_b> sh)] | [(sh <any_Cx_sh_sh_l_oh_b>)]) (l | ((<any_Cx_sh_sh_l_oh> sh) | (sh <any_Cx_sh_sh_l_oh>)))) (([(<any_Cx_y_sh_oh_k_l> y)] | [(y <any_Cx_y_sh_oh_k_l>)]) (oh | ((<any_Cx_y_sh_oh_k_l> y) | (y <any_Cx_y_sh_oh_k_l>)))) (([(<any_Cx_y_y_k_oh> y)] | [(y <any_Cx_y_y_k_oh>)]) (k | ((<any_Cx_y_y_k_s_oh> y) | (y <any_Cx_y_y_k_s_oh>)))) (([(<any_Cx_m_y_s_k> m)] | [(m <any_Cx_m_y_s_k>)]) (s | ((<any_Cx_m_y_s_k> m) | (m <any_Cx_m_y_s_k>)))) (([(<any_vowel_noSlide> t)] | [(t <any_vowel_noSlide>)]) ([(<any_Cx_m_s_t> t)] | [(t <any_Cx_m_s_t>)]) sil))
Running scan for frate = 91
Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard y with value 7.199999999999999 for oh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 5.199999999999999 for k ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard m with value 2 for s ...
Considering guard w with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, m


frate, target rule = 91 public <blocks> = (((sil [((p <any_Cx_b_p_hh>) | (<any_Cx_b_p_hh> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]) | (sil hh (sil [((p <any_Cx_b_p_hh>) | (<any_Cx_b_p_hh> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]))) (([(<any_Cx_sh_hh_p_b_l> sh)] | [(sh <any_Cx_sh_hh_p_b_l>)]) (b | ((<any_Cx_sh_hh_p_b_l> sh) | (sh <any_Cx_sh_hh_p_b_l>)))) (([(<any_Cx_sh_sh_l_oh_b> sh)] | [(sh <any_Cx_sh_sh_l_oh_b>)]) (l | ((<any_Cx_sh_sh_l_oh> sh) | (sh <any_Cx_sh_sh_l_oh>)))) (([(<any_Cx_y_sh_oh_k_l> y)] | [(y <any_Cx_y_sh_oh_k_l>)]) (oh | ((<any_Cx_y_sh_oh_k_l> y) | (y <any_Cx_y_sh_oh_k_l>)))) (([(<any_Cx_y_y_k_oh> y)] | [(y <any_Cx_y_y_k_oh>)]) (k | ((<any_Cx_y_y_k_s_oh> y) | (y <any_Cx_y_y_k_s_oh>)))) (([(<any_Cx_m_y_s_k> m)] | [(m <any_Cx_m_y_s_k>)]) (s | ((<any_Cx_m_y_s_k> m) | (m <any_Cx_m_y_s_k>)))) (([(<any_vowel_noSlide> ch)] | [(ch <any_vowel_noSlide>)]) ([(<any_Cx_m_s_ch> ch)] | [(ch <any_Cx_m_s_ch>)]) sil))
Running scan for frate = 80
Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard y with value 7.199999999999999 for oh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 5.199999999999999 for k ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard m with value 2 for s ...
Considering guard w with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, m


frate, target rule = 80 public <blocks> = (((sil [((dh <any_Cx_b_dh_hh>) | (<any_Cx_b_dh_hh> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]) | (sil hh (sil [((dh <any_Cx_b_dh_hh>) | (<any_Cx_b_dh_hh> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]))) (([(<any_Cx_sh_hh_dh_b_l> sh)] | [(sh <any_Cx_sh_hh_dh_b_l>)]) (b | ((<any_Cx_sh_hh_dh_b_l> sh) | (sh <any_Cx_sh_hh_dh_b_l>)))) (([(<any_Cx_sh_sh_l_oh_b> sh)] | [(sh <any_Cx_sh_sh_l_oh_b>)]) (l | ((<any_Cx_sh_sh_l_oh> sh) | (sh <any_Cx_sh_sh_l_oh>)))) (([(<any_Cx_y_sh_oh_k_l> y)] | [(y <any_Cx_y_sh_oh_k_l>)]) (oh | ((<any_Cx_y_sh_oh_k_l> y) | (y <any_Cx_y_sh_oh_k_l>)))) (([(<any_Cx_y_y_k_oh> y)] | [(y <any_Cx_y_y_k_oh>)]) (k | ((<any_Cx_y_y_k_s_oh> y) | (y <any_Cx_y_y_k_s_oh>)))) (([(<any_Cx_m_y_s_k> m)] | [(m <any_Cx_m_y_s_k>)]) (s | ((<any_Cx_m_y_s_k> m) | (m <any_Cx_m_y_s_k>)))) (([(<any_vowel_noSlide> sh)] | [(sh <any_vowel_noSlide>)]) ([(<any_Cx_m_s_sh> sh)] | [(sh <any_Cx_m_s_sh>)]) sil))
Running scan for frate = 72
Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard y with value 7.199999999999999 for oh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 5.199999999999999 for k ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard w with value 2 for s ...
Considering guard m with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, w


frate, target rule = 72 public <blocks> = (((sil [((hh <any_Cx_b_hh_hh>) | (<any_Cx_b_hh_hh> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil hh (sil [((hh <any_Cx_b_hh_hh>) | (<any_Cx_b_hh_hh> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_sh_hh_hh_b_l> sh)] | [(sh <any_Cx_sh_hh_hh_b_l>)]) (b | ((<any_Cx_sh_hh_hh_b_l> sh) | (sh <any_Cx_sh_hh_hh_b_l>)))) (([(<any_Cx_sh_sh_l_oh_b> sh)] | [(sh <any_Cx_sh_sh_l_oh_b>)]) (l | ((<any_Cx_sh_sh_l_oh> sh) | (sh <any_Cx_sh_sh_l_oh>)))) (([(<any_Cx_y_sh_oh_k_l> y)] | [(y <any_Cx_y_sh_oh_k_l>)]) (oh | ((<any_Cx_y_sh_oh_k_l> y) | (y <any_Cx_y_sh_oh_k_l>)))) (([(<any_Cx_y_y_k_oh> y)] | [(y <any_Cx_y_y_k_oh>)]) (k | ((<any_Cx_y_y_k_s_oh> y) | (y <any_Cx_y_y_k_s_oh>)))) (([(<any_Cx_w_y_s_k> w)] | [(w <any_Cx_w_y_s_k>)]) (s | ((<any_Cx_w_y_s_k> w) | (w <any_Cx_w_y_s_k>)))) (([(<any_vowel_noSlide> ch)] | [(ch <any_vowel_noSlide>)]) ([(<any_Cx_w_s_ch> ch)] | [(ch <any_Cx_w_s_ch>)]) sil))
Running scan for frate = 125
Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard y with value 7.199999999999999 for oh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard ng with value 1.7999999999999998 for ks ...
candidateGuards = map[ng:true]
Picking guard, ng


frate, target rule = 125 public <blocks> = (((sil [((d <any_Cx_b_d_hh>) | (<any_Cx_b_d_hh> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil hh (sil [((d <any_Cx_b_d_hh>) | (<any_Cx_b_d_hh> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_sh_hh_d_b_l> sh)] | [(sh <any_Cx_sh_hh_d_b_l>)]) (b | ((<any_Cx_sh_hh_d_b_l> sh) | (sh <any_Cx_sh_hh_d_b_l>)))) (([(<any_Cx_sh_sh_l_oh_b> sh)] | [(sh <any_Cx_sh_sh_l_oh_b>)]) (l | ((<any_Cx_sh_sh_l_oh> sh) | (sh <any_Cx_sh_sh_l_oh>)))) (([(<any_Cx_y_sh_oh_l> y)] | [(y <any_Cx_y_sh_oh_l>)]) (oh | ((<any_Cx_y_sh_oh_ks_l> y) | (y <any_Cx_y_sh_oh_ks_l>)))) (([(<any_Cx_ng_y_ks_oh> ng)] | [(ng <any_Cx_ng_y_ks_oh>)]) (ks | ((<any_Cx_ng_y_ks_oh> ng) | (ng <any_Cx_ng_y_ks_oh>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_ng_ks_f> f)] | [(f <any_Cx_ng_ks_f>)]) sil))
Running scan for frate = 105
Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard y with value 7.199999999999999 for oh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard ng with value 1.7999999999999998 for ks ...
candidateGuards = map[ng:true]
Picking guard, ng


frate, target rule = 105 public <blocks> = (((sil [((sh <any_Cx_b_sh_hh>) | (<any_Cx_b_sh_hh> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil hh (sil [((sh <any_Cx_b_sh_hh>) | (<any_Cx_b_sh_hh> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_sh_hh_sh_b_l> sh)] | [(sh <any_Cx_sh_hh_sh_b_l>)]) (b | ((<any_Cx_sh_hh_sh_b_l> sh) | (sh <any_Cx_sh_hh_sh_b_l>)))) (([(<any_Cx_sh_sh_l_oh_b> sh)] | [(sh <any_Cx_sh_sh_l_oh_b>)]) (l | ((<any_Cx_sh_sh_l_oh> sh) | (sh <any_Cx_sh_sh_l_oh>)))) (([(<any_Cx_y_sh_oh_l> y)] | [(y <any_Cx_y_sh_oh_l>)]) (oh | ((<any_Cx_y_sh_oh_ks_l> y) | (y <any_Cx_y_sh_oh_ks_l>)))) (([(<any_Cx_ng_y_ks_oh> ng)] | [(ng <any_Cx_ng_y_ks_oh>)]) (ks | ((<any_Cx_ng_y_ks_oh> ng) | (ng <any_Cx_ng_y_ks_oh>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_ng_ks_ng> ng)] | [(ng <any_Cx_ng_ks_ng>)]) sil))
Running scan for frate = 91
Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard y with value 7.199999999999999 for oh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard ng with value 1.7999999999999998 for ks ...
candidateGuards = map[ng:true]
Picking guard, ng


frate, target rule = 91 public <blocks> = (((sil [((l <any_Cx_b_l_hh>) | (<any_Cx_b_l_hh> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]) | (sil hh (sil [((l <any_Cx_b_l_hh>) | (<any_Cx_b_l_hh> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]))) (([(<any_Cx_sh_hh_l_b_l> sh)] | [(sh <any_Cx_sh_hh_l_b_l>)]) (b | ((<any_Cx_sh_hh_l_b_l> sh) | (sh <any_Cx_sh_hh_l_b_l>)))) (([(<any_Cx_sh_sh_l_oh_b> sh)] | [(sh <any_Cx_sh_sh_l_oh_b>)]) (l | ((<any_Cx_sh_sh_l_oh> sh) | (sh <any_Cx_sh_sh_l_oh>)))) (([(<any_Cx_y_sh_oh_l> y)] | [(y <any_Cx_y_sh_oh_l>)]) (oh | ((<any_Cx_y_sh_oh_ks_l> y) | (y <any_Cx_y_sh_oh_ks_l>)))) (([(<any_Cx_ng_y_ks_oh> ng)] | [(ng <any_Cx_ng_y_ks_oh>)]) (ks | ((<any_Cx_ng_y_ks_oh> ng) | (ng <any_Cx_ng_y_ks_oh>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_ng_ks_ng> ng)] | [(ng <any_Cx_ng_ks_ng>)]) sil))
Running scan for frate = 80
Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard y with value 7.199999999999999 for oh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard ng with value 1.7999999999999998 for ks ...
candidateGuards = map[ng:true]
Picking guard, ng


frate, target rule = 80 public <blocks> = (((sil [((sh <any_Cx_b_sh_hh>) | (<any_Cx_b_sh_hh> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil hh (sil [((sh <any_Cx_b_sh_hh>) | (<any_Cx_b_sh_hh> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_sh_hh_sh_b_l> sh)] | [(sh <any_Cx_sh_hh_sh_b_l>)]) (b | ((<any_Cx_sh_hh_sh_b_l> sh) | (sh <any_Cx_sh_hh_sh_b_l>)))) (([(<any_Cx_sh_sh_l_oh_b> sh)] | [(sh <any_Cx_sh_sh_l_oh_b>)]) (l | ((<any_Cx_sh_sh_l_oh> sh) | (sh <any_Cx_sh_sh_l_oh>)))) (([(<any_Cx_y_sh_oh_l> y)] | [(y <any_Cx_y_sh_oh_l>)]) (oh | ((<any_Cx_y_sh_oh_ks_l> y) | (y <any_Cx_y_sh_oh_ks_l>)))) (([(<any_Cx_ng_y_ks_oh> ng)] | [(ng <any_Cx_ng_y_ks_oh>)]) (ks | ((<any_Cx_ng_y_ks_oh> ng) | (ng <any_Cx_ng_y_ks_oh>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_ng_ks_f> f)] | [(f <any_Cx_ng_ks_f>)]) sil))
Running scan for frate = 72
Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard y with value 7.199999999999999 for oh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard ng with value 1.7999999999999998 for ks ...
candidateGuards = map[ng:true]
Picking guard, ng


frate, target rule = 72 public <blocks> = (((sil [((dh <any_Cx_b_dh_hh>) | (<any_Cx_b_dh_hh> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]) | (sil hh (sil [((dh <any_Cx_b_dh_hh>) | (<any_Cx_b_dh_hh> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]))) (([(<any_Cx_sh_hh_dh_b_l> sh)] | [(sh <any_Cx_sh_hh_dh_b_l>)]) (b | ((<any_Cx_sh_hh_dh_b_l> sh) | (sh <any_Cx_sh_hh_dh_b_l>)))) (([(<any_Cx_sh_sh_l_oh_b> sh)] | [(sh <any_Cx_sh_sh_l_oh_b>)]) (l | ((<any_Cx_sh_sh_l_oh> sh) | (sh <any_Cx_sh_sh_l_oh>)))) (([(<any_Cx_y_sh_oh_l> y)] | [(y <any_Cx_y_sh_oh_l>)]) (oh | ((<any_Cx_y_sh_oh_ks_l> y) | (y <any_Cx_y_sh_oh_ks_l>)))) (([(<any_Cx_ng_y_ks_oh> ng)] | [(ng <any_Cx_ng_y_ks_oh>)]) (ks | ((<any_Cx_ng_y_ks_oh> ng) | (ng <any_Cx_ng_y_ks_oh>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_ng_ks_hh> hh)] | [(hh <any_Cx_ng_ks_hh>)]) sil))
Running scan for frate = 125
Considering guard zh with value 1 for bl ...
Considering guard sh with value 1 for bl ...
Considering guard jh with value 1 for bl ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for oh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard y with value 5.199999999999999 for k ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard w with value 2 for s ...
Considering guard m with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, w


frate, target rule = 125 public <blocks> = (((sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_bl_oh> zh)] | [(zh <any_Cx_zh_p_z_bl_oh>)]) (bl | ((<any_Cx_zh_p_z_bl_oh> zh) | (zh <any_Cx_zh_p_z_bl_oh>)))) (([(<any_Cx_zh_zh_oh_k_bl> zh)] | [(zh <any_Cx_zh_zh_oh_k_bl>)]) (oh | ((<any_Cx_zh_zh_oh_k> zh) | (zh <any_Cx_zh_zh_oh_k>)))) (([(<any_Cx_y_zh_k_oh> y)] | [(y <any_Cx_y_zh_k_oh>)]) (k | ((<any_Cx_y_zh_k_s_oh> y) | (y <any_Cx_y_zh_k_s_oh>)))) (([(<any_Cx_w_y_s_k> w)] | [(w <any_Cx_w_y_s_k>)]) (s | ((<any_Cx_w_y_s_k> w) | (w <any_Cx_w_y_s_k>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_w_s_thr> thr)] | [(thr <any_Cx_w_s_thr>)]) sil))
Running scan for frate = 105
Considering guard sh with value 1 for bl ...
Considering guard jh with value 1 for bl ...
Considering guard zh with value 1 for bl ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, sh

Considering guard zh with value 2 for oh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard y with value 5.199999999999999 for k ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard w with value 2 for s ...
Considering guard m with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, w


frate, target rule = 105 public <blocks> = (((sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_bl_oh> sh)] | [(sh <any_Cx_sh_p_z_bl_oh>)]) (bl | ((<any_Cx_sh_p_z_bl_oh> sh) | (sh <any_Cx_sh_p_z_bl_oh>)))) (([(<any_Cx_zh_sh_oh_k_bl> zh)] | [(zh <any_Cx_zh_sh_oh_k_bl>)]) (oh | ((<any_Cx_zh_sh_oh_k> zh) | (zh <any_Cx_zh_sh_oh_k>)))) (([(<any_Cx_y_zh_k_oh> y)] | [(y <any_Cx_y_zh_k_oh>)]) (k | ((<any_Cx_y_zh_k_s_oh> y) | (y <any_Cx_y_zh_k_s_oh>)))) (([(<any_Cx_w_y_s_k> w)] | [(w <any_Cx_w_y_s_k>)]) (s | ((<any_Cx_w_y_s_k> w) | (w <any_Cx_w_y_s_k>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_w_s_f> f)] | [(f <any_Cx_w_s_f>)]) sil))
Running scan for frate = 91
Considering guard jh with value 1 for bl ...
Considering guard sh with value 1 for bl ...
Considering guard zh with value 1 for bl ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, jh

Considering guard zh with value 2 for oh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard y with value 5.199999999999999 for k ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard w with value 2 for s ...
Considering guard m with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, w


frate, target rule = 91 public <blocks> = (((sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_jh_p_z_bl_oh> jh)] | [(jh <any_Cx_jh_p_z_bl_oh>)]) (bl | ((<any_Cx_jh_p_z_bl_oh> jh) | (jh <any_Cx_jh_p_z_bl_oh>)))) (([(<any_Cx_zh_jh_oh_k_bl> zh)] | [(zh <any_Cx_zh_jh_oh_k_bl>)]) (oh | ((<any_Cx_zh_jh_oh_k> zh) | (zh <any_Cx_zh_jh_oh_k>)))) (([(<any_Cx_y_zh_k_oh> y)] | [(y <any_Cx_y_zh_k_oh>)]) (k | ((<any_Cx_y_zh_k_s_oh> y) | (y <any_Cx_y_zh_k_s_oh>)))) (([(<any_Cx_w_y_s_k> w)] | [(w <any_Cx_w_y_s_k>)]) (s | ((<any_Cx_w_y_s_k> w) | (w <any_Cx_w_y_s_k>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_w_s_f> f)] | [(f <any_Cx_w_s_f>)]) sil))
Running scan for frate = 80
Considering guard jh with value 1 for bl ...
Considering guard zh with value 1 for bl ...
Considering guard sh with value 1 for bl ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, sh

Considering guard zh with value 2 for oh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard y with value 5.199999999999999 for k ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard m with value 2 for s ...
Considering guard w with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, m


frate, target rule = 80 public <blocks> = (((sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_bl_oh> sh)] | [(sh <any_Cx_sh_p_z_bl_oh>)]) (bl | ((<any_Cx_sh_p_z_bl_oh> sh) | (sh <any_Cx_sh_p_z_bl_oh>)))) (([(<any_Cx_zh_sh_oh_k_bl> zh)] | [(zh <any_Cx_zh_sh_oh_k_bl>)]) (oh | ((<any_Cx_zh_sh_oh_k> zh) | (zh <any_Cx_zh_sh_oh_k>)))) (([(<any_Cx_y_zh_k_oh> y)] | [(y <any_Cx_y_zh_k_oh>)]) (k | ((<any_Cx_y_zh_k_s_oh> y) | (y <any_Cx_y_zh_k_s_oh>)))) (([(<any_Cx_m_y_s_k> m)] | [(m <any_Cx_m_y_s_k>)]) (s | ((<any_Cx_m_y_s_k> m) | (m <any_Cx_m_y_s_k>)))) (([(<any_vowel_noSlide> sh)] | [(sh <any_vowel_noSlide>)]) ([(<any_Cx_m_s_sh> sh)] | [(sh <any_Cx_m_s_sh>)]) sil))
Running scan for frate = 72
Considering guard sh with value 1 for bl ...
Considering guard zh with value 1 for bl ...
Considering guard jh with value 1 for bl ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for oh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard y with value 5.199999999999999 for k ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard m with value 2 for s ...
Considering guard w with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, m


frate, target rule = 72 public <blocks> = (((sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_bl_oh> zh)] | [(zh <any_Cx_zh_p_z_bl_oh>)]) (bl | ((<any_Cx_zh_p_z_bl_oh> zh) | (zh <any_Cx_zh_p_z_bl_oh>)))) (([(<any_Cx_zh_zh_oh_k_bl> zh)] | [(zh <any_Cx_zh_zh_oh_k_bl>)]) (oh | ((<any_Cx_zh_zh_oh_k> zh) | (zh <any_Cx_zh_zh_oh_k>)))) (([(<any_Cx_y_zh_k_oh> y)] | [(y <any_Cx_y_zh_k_oh>)]) (k | ((<any_Cx_y_zh_k_s_oh> y) | (y <any_Cx_y_zh_k_s_oh>)))) (([(<any_Cx_m_y_s_k> m)] | [(m <any_Cx_m_y_s_k>)]) (s | ((<any_Cx_m_y_s_k> m) | (m <any_Cx_m_y_s_k>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_m_s_hh> hh)] | [(hh <any_Cx_m_s_hh>)]) sil))
Running scan for frate = 125
Considering guard jh with value 1 for bl ...
Considering guard sh with value 1 for bl ...
Considering guard zh with value 1 for bl ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, jh

Considering guard ng with value 5.2 for oh ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 1.7999999999999998 for ks ...
candidateGuards = map[ng:true]
Picking guard, ng


frate, target rule = 125 public <blocks> = (((sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_jh_p_z_bl_oh> jh)] | [(jh <any_Cx_jh_p_z_bl_oh>)]) (bl | ((<any_Cx_jh_p_z_bl_oh> jh) | (jh <any_Cx_jh_p_z_bl_oh>)))) (([(<any_Cx_ng_jh_oh_bl> ng)] | [(ng <any_Cx_ng_jh_oh_bl>)]) (oh | ((<any_Cx_ng_jh_oh_ks> ng) | (ng <any_Cx_ng_jh_oh_ks>)))) (([(<any_Cx_ng_ng_ks_oh> ng)] | [(ng <any_Cx_ng_ng_ks_oh>)]) (ks | ((<any_Cx_ng_ng_ks_oh> ng) | (ng <any_Cx_ng_ng_ks_oh>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_ng_ks_ng> ng)] | [(ng <any_Cx_ng_ks_ng>)]) sil))
Running scan for frate = 105
Considering guard jh with value 1 for bl ...
Considering guard sh with value 1 for bl ...
Considering guard zh with value 1 for bl ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, jh

Considering guard ng with value 5.2 for oh ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 1.7999999999999998 for ks ...
candidateGuards = map[ng:true]
Picking guard, ng


frate, target rule = 105 public <blocks> = (((sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_jh_p_z_bl_oh> jh)] | [(jh <any_Cx_jh_p_z_bl_oh>)]) (bl | ((<any_Cx_jh_p_z_bl_oh> jh) | (jh <any_Cx_jh_p_z_bl_oh>)))) (([(<any_Cx_ng_jh_oh_bl> ng)] | [(ng <any_Cx_ng_jh_oh_bl>)]) (oh | ((<any_Cx_ng_jh_oh_ks> ng) | (ng <any_Cx_ng_jh_oh_ks>)))) (([(<any_Cx_ng_ng_ks_oh> ng)] | [(ng <any_Cx_ng_ng_ks_oh>)]) (ks | ((<any_Cx_ng_ng_ks_oh> ng) | (ng <any_Cx_ng_ng_ks_oh>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_ng_ks_n> n)] | [(n <any_Cx_ng_ks_n>)]) sil))
Running scan for frate = 91
Considering guard sh with value 1 for bl ...
Considering guard jh with value 1 for bl ...
Considering guard zh with value 1 for bl ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, sh

Considering guard ng with value 5.2 for oh ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 1.7999999999999998 for ks ...
candidateGuards = map[ng:true]
Picking guard, ng


frate, target rule = 91 public <blocks> = (((sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_bl_oh> sh)] | [(sh <any_Cx_sh_p_z_bl_oh>)]) (bl | ((<any_Cx_sh_p_z_bl_oh> sh) | (sh <any_Cx_sh_p_z_bl_oh>)))) (([(<any_Cx_ng_sh_oh_bl> ng)] | [(ng <any_Cx_ng_sh_oh_bl>)]) (oh | ((<any_Cx_ng_sh_oh_ks> ng) | (ng <any_Cx_ng_sh_oh_ks>)))) (([(<any_Cx_ng_ng_ks_oh> ng)] | [(ng <any_Cx_ng_ng_ks_oh>)]) (ks | ((<any_Cx_ng_ng_ks_oh> ng) | (ng <any_Cx_ng_ng_ks_oh>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_ng_ks_m> m)] | [(m <any_Cx_ng_ks_m>)]) sil))
Running scan for frate = 80
Considering guard sh with value 1 for bl ...
Considering guard zh with value 1 for bl ...
Considering guard jh with value 1 for bl ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, sh

Considering guard ng with value 5.2 for oh ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 1.7999999999999998 for ks ...
candidateGuards = map[ng:true]
Picking guard, ng


frate, target rule = 80 public <blocks> = (((sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_bl_oh> sh)] | [(sh <any_Cx_sh_p_z_bl_oh>)]) (bl | ((<any_Cx_sh_p_z_bl_oh> sh) | (sh <any_Cx_sh_p_z_bl_oh>)))) (([(<any_Cx_ng_sh_oh_bl> ng)] | [(ng <any_Cx_ng_sh_oh_bl>)]) (oh | ((<any_Cx_ng_sh_oh_ks> ng) | (ng <any_Cx_ng_sh_oh_ks>)))) (([(<any_Cx_ng_ng_ks_oh> ng)] | [(ng <any_Cx_ng_ng_ks_oh>)]) (ks | ((<any_Cx_ng_ng_ks_oh> ng) | (ng <any_Cx_ng_ng_ks_oh>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_ng_ks_f> f)] | [(f <any_Cx_ng_ks_f>)]) sil))
Running scan for frate = 72
Considering guard jh with value 1 for bl ...
Considering guard sh with value 1 for bl ...
Considering guard zh with value 1 for bl ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, jh

Considering guard ng with value 5.2 for oh ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 1.7999999999999998 for ks ...
candidateGuards = map[ng:true]
Picking guard, ng


frate, target rule = 72 public <blocks> = (((sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_jh_p_z_bl_oh> jh)] | [(jh <any_Cx_jh_p_z_bl_oh>)]) (bl | ((<any_Cx_jh_p_z_bl_oh> jh) | (jh <any_Cx_jh_p_z_bl_oh>)))) (([(<any_Cx_ng_jh_oh_bl> ng)] | [(ng <any_Cx_ng_jh_oh_bl>)]) (oh | ((<any_Cx_ng_jh_oh_ks> ng) | (ng <any_Cx_ng_jh_oh_ks>)))) (([(<any_Cx_ng_ng_ks_oh> ng)] | [(ng <any_Cx_ng_ng_ks_oh>)]) (ks | ((<any_Cx_ng_ng_ks_oh> ng) | (ng <any_Cx_ng_ng_ks_oh>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_ng_ks_f> f)] | [(f <any_Cx_ng_ks_f>)]) sil))

results =
{72 [{sil 0 15} {jh 16 20} {l 21 24} {oh 25 38} {ks 39 63} {sil 64 68}]}
{80 [{sil 0 17} {sh 18 22} {l 23 27} {oh 28 43} {ks 44 72} {sil 73 81}]}
{91 [{sil 0 20} {sh 21 26} {l 27 31} {oh 32 49} {ks 50 82} {sil 83 88}]}
{105 [{sil 0 17} {g 18 25} {z 26 28} {bl 29 35} {oh 36 57} {ks 58 95} {sil 96 103}]}
{125 [{sil 3 23} {g 24 31} {z 32 35} {bl 36 43} {oh 44 69} {ks 70 112} {sil 113 128}]}

normalised results =
{72 [{sil 0 15} {jh 22 28} {l 29 33} {oh 35 53} {ks 54 88} {sil 89 94}]}
{80 [{sil 0 17} {sh 23 28} {l 29 34} {oh 35 54} {ks 55 90} {sil 91 101}]}
{91 [{sil 0 20} {sh 23 29} {l 30 34} {oh 35 54} {ks 55 90} {sil 91 97}]}
{105 [{sil 0 17} {g 17 24} {z 25 25} {bl 28 33} {oh 34 54} {ks 55 90} {sil 91 98}]}
{125 [{sil 3 23} {g 19 25} {z 26 28} {bl 29 34} {oh 35 55} {ks 56 90} {sil 90 102}]}

ruleAligned = [{{bl 2} [{3 3} {4 3}]} {{l 3} [{0 2} {1 2} {2 2}]} {{oh 0} [{0 3} {1 3} {2 3} {3 4} {4 4}]} {{ks 0} [{0 4} {1 4} {2 4} {3 5} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {jh 22 28} {l 29 33} {oh 35 53} {ks 54 88} {sil 89 89}]}
{80 [{sil 0 0} {sh 23 28} {l 29 34} {oh 35 54} {ks 55 90} {sil 91 91}]}
{91 [{sil 0 0} {sh 23 29} {l 30 34} {oh 35 54} {ks 55 90} {sil 91 91}]}
{105 [{sil 0 0} {g 17 24} {z 25 25} {bl 28 33} {oh 34 54} {ks 55 90} {sil 91 91}]}
{125 [{sil 3 3} {g 19 25} {z 26 26} {bl 29 34} {oh 35 55} {ks 56 90} {sil 90 90}]}

timeAligned = [{{l 30 33} [{0 2} {1 2} {2 2}]} {{oh 35 54} [{0 3} {1 3} {2 3} {3 4} {4 4}]} {{ks 55 90} [{0 4} {1 4} {2 4} {3 5} {4 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 -1 0
i, iTime, newITime, timeStartFrom = 1 0 0 0
i, iTime, newITime, timeStartFrom = 2 0 1 33
i, iTime, newITime, timeStartFrom = 3 1 2 53
combinedVerdict    = [{bl 2} {l 3} {oh 0} {ks 0}]
ruleAlignedVerdict = [{bl 2} {l 3} {oh 0} {ks 0}]

score->
-1 for bl
-1 for l
+1 for oh
+1 for ks
score<-: 0

results =
{72 [{sil 0 9} {b 10 18} {l 19 24} {oh 25 38} {ks 39 63} {sil 64 68}]}
{80 [{sil 0 12} {g 13 18} {sh 19 22} {l 23 27} {oh 28 43} {ks 44 72} {sil 73 81}]}
{91 [{sil 0 14} {g 15 21} {sh 22 26} {l 27 31} {oh 32 49} {ks 50 82} {sil 83 88}]}
{105 [{sil 0 17} {g 18 25} {sh 26 30} {l 31 36} {oh 37 57} {ks 58 95} {sil 96 103}]}
{125 [{sil 3 22} {b 23 26} {g 27 32} {sh 33 36} {l 37 44} {oh 45 69} {ks 70 112} {sil 113 128}]}

normalised results =
{72 [{sil 0 9} {b 14 25} {l 26 33} {oh 35 53} {ks 54 88} {sil 89 94}]}
{80 [{sil 0 12} {g 16 23} {sh 24 28} {l 29 34} {oh 35 54} {ks 55 90} {sil 91 101}]}
{91 [{sil 0 14} {g 16 23} {sh 24 29} {l 30 34} {oh 35 54} {ks 55 90} {sil 91 97}]}
{105 [{sil 0 17} {g 17 24} {sh 25 29} {l 30 34} {oh 35 54} {ks 55 90} {sil 91 98}]}
{125 [{sil 3 22} {b 18 21} {g 22 26} {sh 26 29} {l 30 35} {oh 36 55} {ks 56 90} {sil 90 102}]}

ruleAligned = [{{b 2} [{0 1} {4 1}]} {{g 3} [{1 1} {2 1} {3 1}]} {{l 0} [{0 2} {1 3} {2 3} {3 3} {4 4}]} {{oh 0} [{0 3} {1 4} {2 4} {3 4} {4 5}]} {{ks 0} [{0 4} {1 5} {2 5} {3 5} {4 6}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {b 14 25} {l 26 33} {oh 35 53} {ks 54 88} {sil 89 89}]}
{80 [{sil 0 0} {g 16 23} {sh 24 24} {l 29 34} {oh 35 54} {ks 55 90} {sil 91 91}]}
{91 [{sil 0 0} {g 16 23} {sh 24 29} {l 30 34} {oh 35 54} {ks 55 90} {sil 91 91}]}
{105 [{sil 0 0} {g 17 24} {sh 25 25} {l 30 34} {oh 35 54} {ks 55 90} {sil 91 91}]}
{125 [{sil 3 3} {b 18 21} {g 22 26} {sh 26 26} {l 30 35} {oh 36 55} {ks 56 90} {sil 90 90}]}

timeAligned = [{{g 17 23} [{1 1} {2 1} {3 1} {4 2}]} {{l 30 34} [{0 2} {1 3} {2 3} {3 3} {4 4}]} {{oh 35 54} [{0 3} {1 4} {2 4} {3 4} {4 5}]} {{ks 55 90} [{0 4} {1 5} {2 5} {3 5} {4 6}]}]

i, iTime, newITime, timeStartFrom = 0 0 -1 0
i, iTime, newITime, timeStartFrom = 1 0 0 0
i, iTime, newITime, timeStartFrom = 2 0 1 23
i, iTime, newITime, timeStartFrom = 3 1 2 33
i, iTime, newITime, timeStartFrom = 4 2 3 53
combinedVerdict    = [{b 2} {g 3} {l 0} {oh 0} {ks 0}]
ruleAlignedVerdict = [{b 2} {g 3} {l 0} {oh 0} {ks 0}]

score->
-1 for b
-1 for g
+1 for l
+1 for oh
+1 for ks
score<-: 1

results =
{72 [{sil 0 16} {zh 17 19} {l 20 24} {oh 25 37} {k 38 49} {s 50 63} {sil 64 68}]}
{80 [{sil 0 17} {sh 18 22} {l 23 27} {oh 28 41} {k 42 55} {s 56 73} {sil 74 81}]}
{91 [{sil 0 20} {jh 21 23} {l 24 31} {oh 32 49} {k 50 63} {s 64 82} {sil 83 88}]}
{105 [{sil 0 23} {sh 24 30} {l 31 36} {oh 37 57} {k 58 73} {s 74 95} {sil 96 103}]}
{125 [{sil 3 32} {zh 33 36} {l 37 44} {oh 45 64} {k 65 88} {s 89 112} {sil 113 128}]}

normalised results =
{72 [{sil 0 16} {zh 24 24} {l 28 33} {oh 35 51} {k 53 68} {s 69 88} {sil 89 94}]}
{80 [{sil 0 17} {sh 23 28} {l 29 34} {oh 35 51} {k 53 69} {s 70 91} {sil 93 101}]}
{91 [{sil 0 20} {jh 23 23} {l 26 34} {oh 35 54} {k 55 69} {s 70 90} {sil 91 97}]}
{105 [{sil 0 23} {sh 23 29} {l 30 34} {oh 35 54} {k 55 70} {s 70 90} {sil 91 98}]}
{125 [{sil 3 32} {zh 26 29} {l 30 35} {oh 36 51} {k 52 70} {s 71 90} {sil 90 102}]}

ruleAligned = [{{bl 2} []} {{l 3} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{oh 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{k 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{s 0} [{0 5} {1 5} {2 5} {3 5} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {zh 24 24} {l 28 33} {oh 35 51} {k 53 68} {s 69 88} {sil 89 89}]}
{80 [{sil 0 0} {sh 23 28} {l 29 34} {oh 35 51} {k 53 69} {s 70 91} {sil 93 93}]}
{91 [{sil 0 0} {jh 23 23} {l 26 34} {oh 35 54} {k 55 69} {s 70 90} {sil 91 91}]}
{105 [{sil 0 0} {sh 23 29} {l 30 34} {oh 35 54} {k 55 70} {s 70 90} {sil 91 91}]}
{125 [{sil 3 3} {zh 26 26} {l 30 35} {oh 36 51} {k 52 70} {s 71 90} {sil 90 90}]}

timeAligned = [{{l 29 34} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{oh 35 51} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{k 53 69} [{0 4} {1 4} {4 4} {2 4} {3 4}]} {{s 70 90} [{0 5} {1 5} {2 5} {3 5} {4 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 -1 0
i, iTime, newITime, timeStartFrom = 1 0 0 0
i, iTime, newITime, timeStartFrom = 2 0 1 33
i, iTime, newITime, timeStartFrom = 3 1 2 51
i, iTime, newITime, timeStartFrom = 4 2 3 68
combinedVerdict    = [{bl 2} {l 3} {oh 0} {k 0} {s 0}]
ruleAlignedVerdict = [{bl 2} {l 3} {oh 0} {k 0} {s 0}]

score->
-1 for bl
-1 for l
+1 for oh
+1 for k
+1 for s
score<-: 1

results =
{72 [{sil 0 9} {b 10 18} {l 19 24} {oh 25 37} {k 38 49} {s 50 63} {sil 64 68}]}
{80 [{sil 0 12} {g 13 18} {sh 19 22} {l 23 27} {oh 28 41} {k 42 55} {s 56 73} {sil 74 81}]}
{91 [{sil 0 14} {g 15 21} {sh 22 26} {l 27 31} {oh 32 49} {k 50 63} {s 64 82} {sil 83 88}]}
{105 [{sil 0 17} {g 18 25} {sh 26 30} {l 31 36} {oh 37 57} {k 58 73} {s 74 95} {sil 96 103}]}
{125 [{sil 3 22} {b 23 26} {g 27 32} {sh 33 36} {l 37 44} {oh 45 64} {k 65 88} {s 89 112} {sil 113 128}]}

normalised results =
{72 [{sil 0 9} {b 14 25} {l 26 33} {oh 35 51} {k 53 68} {s 69 88} {sil 89 94}]}
{80 [{sil 0 12} {g 16 23} {sh 24 28} {l 29 34} {oh 35 51} {k 53 69} {s 70 91} {sil 93 101}]}
{91 [{sil 0 14} {g 16 23} {sh 24 29} {l 30 34} {oh 35 54} {k 55 69} {s 70 90} {sil 91 97}]}
{105 [{sil 0 17} {g 17 24} {sh 25 29} {l 30 34} {oh 35 54} {k 55 70} {s 70 90} {sil 91 98}]}
{125 [{sil 3 22} {b 18 21} {g 22 26} {sh 26 29} {l 30 35} {oh 36 51} {k 52 70} {s 71 90} {sil 90 102}]}

ruleAligned = [{{b 2} [{0 1} {4 1}]} {{g 3} [{1 1} {2 1} {3 1}]} {{l 0} [{0 2} {1 3} {2 3} {3 3} {4 4}]} {{oh 0} [{0 3} {1 4} {2 4} {3 4} {4 5}]} {{k 0} [{0 4} {1 5} {2 5} {3 5} {4 6}]} {{s 0} [{0 5} {1 6} {2 6} {3 6} {4 7}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {b 14 25} {l 26 33} {oh 35 51} {k 53 68} {s 69 88} {sil 89 89}]}
{80 [{sil 0 0} {g 16 23} {sh 24 24} {l 29 34} {oh 35 51} {k 53 69} {s 70 91} {sil 93 93}]}
{91 [{sil 0 0} {g 16 23} {sh 24 29} {l 30 34} {oh 35 54} {k 55 69} {s 70 90} {sil 91 91}]}
{105 [{sil 0 0} {g 17 24} {sh 25 25} {l 30 34} {oh 35 54} {k 55 70} {s 70 90} {sil 91 91}]}
{125 [{sil 3 3} {b 18 21} {g 22 26} {sh 26 26} {l 30 35} {oh 36 51} {k 52 70} {s 71 90} {sil 90 90}]}

timeAligned = [{{g 17 23} [{1 1} {2 1} {3 1} {4 2}]} {{l 30 34} [{0 2} {1 3} {2 3} {3 3} {4 4}]} {{oh 35 51} [{0 3} {1 4} {2 4} {3 4} {4 5}]} {{k 53 69} [{0 4} {1 5} {4 6} {2 5} {3 5}]} {{s 70 90} [{0 5} {1 6} {2 6} {3 6} {4 7}]}]

i, iTime, newITime, timeStartFrom = 0 0 -1 0
i, iTime, newITime, timeStartFrom = 1 0 0 0
i, iTime, newITime, timeStartFrom = 2 0 1 23
i, iTime, newITime, timeStartFrom = 3 1 2 33
i, iTime, newITime, timeStartFrom = 4 2 3 51
i, iTime, newITime, timeStartFrom = 5 3 4 68
combinedVerdict    = [{b 2} {g 3} {l 0} {oh 0} {k 0} {s 0}]
ruleAlignedVerdict = [{b 2} {g 3} {l 0} {oh 0} {k 0} {s 0}]

score->
-1 for b
-1 for g
+1 for l
+1 for oh
+1 for k
+1 for s
score<-: 2
bestResult = {2 [{b 2} {g 3} {l 0} {oh 0} {k 0} {s 0}] [b l oh k s]}
testPronounce b missing g surprise l good oh good k good s good
publish->
phonsToAlphas = [{[b] b} {[l] l} {[oh] o} {[k] ck} {[s] s}]
getVerdict<-:new {b [b] 2}
getVerdict<-:new {l [l] 0}
getVerdict<-:new {o [oh] 0}
getVerdict<-:new {ck [k] 0}
getVerdict<-:new {s [s] 0}
lettersVerdicts = [{b [b] 2} {g [g] 3} {l [l] 0} {o [oh] 0} {ck [k] 0} {s [s] 0}]
publish<-
{
  "results": [
    {
      "letters": "b",
      "phonemes": "b",
      "verdict": "missing"
    },
    {
      "letters": "g",
      "phonemes": "g",
      "verdict": "surprise"
    },
    {
      "letters": "l",
      "phonemes": "l",
      "verdict": "good"
    },
    {
      "letters": "o",
      "phonemes": "ɒ",
      "verdict": "good"
    },
    {
      "letters": "ck",
      "phonemes": "k",
      "verdict": "good"
    },
    {
      "letters": "s",
      "phonemes": "s",
      "verdict": "good"
    }
  ],
  "err": null
}
