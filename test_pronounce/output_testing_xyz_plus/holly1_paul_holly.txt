
 length of audio =  1.694687



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.64 1.04 1.6800000000000002

 start3, duration3, end3 =  0.78 0.58 1.3599999999999999

 Initial start, duration, end =  0.54 1.1400000000000001 1.6800000000000002

 Cut at: start, duration =  0.54 1.134687     guard_end =  1.674687 

Running scan for frate = 125
Considering guard z with value 1 for hh ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard z with value 5 for oh ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 125 public <holly> = (((sil [((iy <any_Cx_hh_iy_b>) | (<any_Cx_hh_iy_b> iy))] [((iy <any_vowel_noSlide>) | (<any_vowel_noSlide> iy))]) | (sil b (sil [((iy <any_Cx_hh_iy_b>) | (<any_Cx_hh_iy_b> iy))] [((iy <any_vowel_noSlide>) | (<any_vowel_noSlide> iy))]))) (([(<any_Cx_z_b_iy_hh_oh> z)] | [(z <any_Cx_z_b_iy_hh_oh>)]) (hh | ((<any_Cx_z_b_iy_hh_oh> z) | (z <any_Cx_z_b_iy_hh_oh>)))) (([(<any_Cx_z_z_oh_l_hh> z)] | [(z <any_Cx_z_z_oh_l_hh>)]) (oh | ((<any_Cx_z_z_oh_l> z) | (z <any_Cx_z_z_oh_l>)))) (([(<any_Cx_sh_z_l_oh> sh)] | [(sh <any_Cx_sh_z_l_oh>)]) (l | ((<any_Cx_sh_z_l_oh> sh) | (sh <any_Cx_sh_z_l_oh>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_iy_hh> hh)] | [(hh <any_Cx_sh_iy_hh>)]) ([(<any_Vx_sh_iy_hh> hh)] | [(hh <any_Vx_sh_iy_hh>)]) sil))
Running scan for frate = 105
Considering guard z with value 1 for hh ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard z with value 5 for oh ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 105 public <holly> = (((sil [((b <any_Cx_hh_b_b>) | (<any_Cx_hh_b_b> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]) | (sil b (sil [((b <any_Cx_hh_b_b>) | (<any_Cx_hh_b_b> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]))) (([(<any_Cx_z_b_b_hh_oh> z)] | [(z <any_Cx_z_b_b_hh_oh>)]) (hh | ((<any_Cx_z_b_b_hh_oh> z) | (z <any_Cx_z_b_b_hh_oh>)))) (([(<any_Cx_z_z_oh_l_hh> z)] | [(z <any_Cx_z_z_oh_l_hh>)]) (oh | ((<any_Cx_z_z_oh_l> z) | (z <any_Cx_z_z_oh_l>)))) (([(<any_Cx_sh_z_l_oh> sh)] | [(sh <any_Cx_sh_z_l_oh>)]) (l | ((<any_Cx_sh_z_l_oh> sh) | (sh <any_Cx_sh_z_l_oh>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_iy_n> n)] | [(n <any_Cx_sh_iy_n>)]) ([(<any_Vx_sh_iy_n> n)] | [(n <any_Vx_sh_iy_n>)]) sil))
Running scan for frate = 91
Considering guard z with value 1 for hh ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard z with value 5 for oh ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 91 public <holly> = (((sil [((z <any_Cx_hh_z_b>) | (<any_Cx_hh_z_b> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil b (sil [((z <any_Cx_hh_z_b>) | (<any_Cx_hh_z_b> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_z_b_z_hh_oh> z)] | [(z <any_Cx_z_b_z_hh_oh>)]) (hh | ((<any_Cx_z_b_z_hh_oh> z) | (z <any_Cx_z_b_z_hh_oh>)))) (([(<any_Cx_z_z_oh_l_hh> z)] | [(z <any_Cx_z_z_oh_l_hh>)]) (oh | ((<any_Cx_z_z_oh_l> z) | (z <any_Cx_z_z_oh_l>)))) (([(<any_Cx_sh_z_l_oh> sh)] | [(sh <any_Cx_sh_z_l_oh>)]) (l | ((<any_Cx_sh_z_l_oh> sh) | (sh <any_Cx_sh_z_l_oh>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_iy_f> f)] | [(f <any_Cx_sh_iy_f>)]) ([(<any_Vx_sh_iy_f> f)] | [(f <any_Vx_sh_iy_f>)]) sil))
Running scan for frate = 80
Considering guard z with value 1 for hh ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard z with value 5 for oh ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 80 public <holly> = (((sil [((iy <any_Cx_hh_iy_b>) | (<any_Cx_hh_iy_b> iy))] [((iy <any_vowel_noSlide>) | (<any_vowel_noSlide> iy))]) | (sil b (sil [((iy <any_Cx_hh_iy_b>) | (<any_Cx_hh_iy_b> iy))] [((iy <any_vowel_noSlide>) | (<any_vowel_noSlide> iy))]))) (([(<any_Cx_z_b_iy_hh_oh> z)] | [(z <any_Cx_z_b_iy_hh_oh>)]) (hh | ((<any_Cx_z_b_iy_hh_oh> z) | (z <any_Cx_z_b_iy_hh_oh>)))) (([(<any_Cx_z_z_oh_l_hh> z)] | [(z <any_Cx_z_z_oh_l_hh>)]) (oh | ((<any_Cx_z_z_oh_l> z) | (z <any_Cx_z_z_oh_l>)))) (([(<any_Cx_sh_z_l_oh> sh)] | [(sh <any_Cx_sh_z_l_oh>)]) (l | ((<any_Cx_sh_z_l_oh> sh) | (sh <any_Cx_sh_z_l_oh>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_iy_n> n)] | [(n <any_Cx_sh_iy_n>)]) ([(<any_Vx_sh_iy_n> n)] | [(n <any_Vx_sh_iy_n>)]) sil))
Running scan for frate = 72
Considering guard z with value 1 for hh ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard z with value 5 for oh ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 72 public <holly> = (((sil [((b <any_Cx_hh_b_b>) | (<any_Cx_hh_b_b> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]) | (sil b (sil [((b <any_Cx_hh_b_b>) | (<any_Cx_hh_b_b> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]))) (([(<any_Cx_z_b_b_hh_oh> z)] | [(z <any_Cx_z_b_b_hh_oh>)]) (hh | ((<any_Cx_z_b_b_hh_oh> z) | (z <any_Cx_z_b_b_hh_oh>)))) (([(<any_Cx_z_z_oh_l_hh> z)] | [(z <any_Cx_z_z_oh_l_hh>)]) (oh | ((<any_Cx_z_z_oh_l> z) | (z <any_Cx_z_z_oh_l>)))) (([(<any_Cx_sh_z_l_oh> sh)] | [(sh <any_Cx_sh_z_l_oh>)]) (l | ((<any_Cx_sh_z_l_oh> sh) | (sh <any_Cx_sh_z_l_oh>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_iy_f> f)] | [(f <any_Cx_sh_iy_f>)]) ([(<any_Vx_sh_iy_f> f)] | [(f <any_Vx_sh_iy_f>)]) sil))

results =
{72 [{sil 0 13} {hh 14 24} {oh 25 31} {l 32 38} {iy 39 55} {sil 56 66}]}
{80 [{sil 0 15} {hh 16 27} {oh 28 36} {l 37 43} {iy 44 61} {sil 62 71}]}
{91 [{sil 0 17} {hh 18 31} {oh 32 41} {l 42 49} {iy 50 70} {sil 71 101}]}
{105 [{sil 0 19} {hh 20 36} {oh 37 48} {l 49 56} {iy 57 81} {sil 82 118}]}
{125 [{sil 3 24} {hh 25 44} {oh 45 58} {l 59 68} {iy 69 97} {sil 98 141}]}

normalised results =
{72 [{sil 0 13} {hh 19 33} {oh 35 43} {l 44 53} {iy 54 76} {sil 78 92}]}
{80 [{sil 0 15} {hh 20 34} {oh 35 45} {l 46 54} {iy 55 76} {sil 78 89}]}
{91 [{sil 0 17} {hh 20 34} {oh 35 45} {l 46 54} {iy 55 77} {sil 78 111}]}
{105 [{sil 0 19} {hh 19 34} {oh 35 46} {l 47 53} {iy 54 77} {sil 78 112}]}
{125 [{sil 3 24} {hh 20 35} {oh 36 46} {l 47 54} {iy 55 78} {sil 78 113}]}

ruleAligned = [{{hh 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{oh 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{l 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{iy 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {hh 19 33} {oh 35 43} {l 44 53} {iy 54 76} {sil 78 78}]}
{80 [{sil 0 0} {hh 20 34} {oh 35 45} {l 46 54} {iy 55 76} {sil 78 78}]}
{91 [{sil 0 0} {hh 20 34} {oh 35 45} {l 46 54} {iy 55 77} {sil 78 78}]}
{105 [{sil 0 0} {hh 19 34} {oh 35 46} {l 47 53} {iy 54 77} {sil 78 78}]}
{125 [{sil 3 3} {hh 20 35} {oh 36 46} {l 47 54} {iy 55 78} {sil 78 78}]}

timeAligned = [{{hh 20 34} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{oh 35 45} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{l 46 54} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{iy 55 77} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 33
i, iTime, newITime, timeStartFrom = 2 1 2 43
i, iTime, newITime, timeStartFrom = 3 2 3 53
combinedVerdict    = [{hh 0} {oh 0} {l 0} {iy 0}]
ruleAlignedVerdict = [{hh 0} {oh 0} {l 0} {iy 0}]

score->
+1 for hh
+1 for oh
+1 for l
+1 for iy
score<-: 9
testPronounce hh good oh good l good iy good
publish->
phonsToAlphas = [{[hh] h} {[oh] o} {[l] ll} {[iy] y}]
getVerdict<-:new {h [hh] 0}
getVerdict<-:new {o [oh] 0}
getVerdict<-:new {ll [l] 0}
getVerdict<-:new {y [iy] 0}
lettersVerdicts = [{h [hh] 0} {o [oh] 0} {ll [l] 0} {y [iy] 0}]
publish<-
Total: 262.112032ms
{
  "results": [
    {
      "letters": "h",
      "phonemes": "h",
      "verdict": "good"
    },
    {
      "letters": "o",
      "phonemes": "ɒ",
      "verdict": "good"
    },
    {
      "letters": "ll",
      "phonemes": "l",
      "verdict": "good"
    },
    {
      "letters": "y",
      "phonemes": "iː",
      "verdict": "good"
    }
  ],
  "err": null
}
