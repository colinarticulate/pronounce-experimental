
 length of audio =  1.885438



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.62 0.72 1.3399999999999999

 start3, duration3, end3 =  0.64 0.6 1.24

 Initial start, duration, end =  0.52 0.8199999999999998 1.3399999999999999

 Cut at: start, duration =  0.52 1.2699999999999998     guard_end =  1.7899999999999998 

Running scan for frate = 125
Considering guard ch with value 1 for dh ...
Considering guard zh with value 1 for dh ...
candidateGuards = map[ch:true zh:true]
Picking guard, ch

Considering guard ch with value 1 for ehr ...
Considering guard zh with value 1 for ehr ...
candidateGuards = map[ch:true zh:true]
Picking guard, ch

frate, target rule = 125 public <their> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ch_p_z_dh> ch)] | [(ch <any_Cx_ch_p_z_dh>)]) (dh | t | ((<any_Cx_ch_p_z_dh_ehr> ch) | (ch <any_Cx_ch_p_z_dh_ehr>)))) (([(<any_Cx_ch_ch_ehr_dh> ch)] | [(ch <any_Cx_ch_ch_ehr_dh>)]) (ehr | ((<any_Cx_ch_ch_ehr> ch) | (ch <any_Cx_ch_ch_ehr>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_ch_ehr_m> m)] | [(m <any_Cx_ch_ehr_m>)]) sil))
Running scan for frate = 105
Considering guard ch with value 1 for dh ...
Considering guard zh with value 1 for dh ...
candidateGuards = map[ch:true zh:true]
Picking guard, ch

Considering guard zh with value 1 for ehr ...
Considering guard ch with value 1 for ehr ...
candidateGuards = map[ch:true zh:true]
Picking guard, zh

frate, target rule = 105 public <their> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ch_p_z_dh> ch)] | [(ch <any_Cx_ch_p_z_dh>)]) (dh | t | ((<any_Cx_ch_p_z_dh_ehr> ch) | (ch <any_Cx_ch_p_z_dh_ehr>)))) (([(<any_Cx_zh_ch_ehr_dh> zh)] | [(zh <any_Cx_zh_ch_ehr_dh>)]) (ehr | ((<any_Cx_zh_ch_ehr> zh) | (zh <any_Cx_zh_ch_ehr>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_zh_ehr_n> n)] | [(n <any_Cx_zh_ehr_n>)]) sil))
Running scan for frate = 91
Considering guard zh with value 1 for dh ...
Considering guard ch with value 1 for dh ...
candidateGuards = map[ch:true zh:true]
Picking guard, zh

Considering guard zh with value 1 for ehr ...
Considering guard ch with value 1 for ehr ...
candidateGuards = map[ch:true zh:true]
Picking guard, ch

frate, target rule = 91 public <their> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_dh> zh)] | [(zh <any_Cx_zh_p_z_dh>)]) (dh | t | ((<any_Cx_zh_p_z_dh_ehr> zh) | (zh <any_Cx_zh_p_z_dh_ehr>)))) (([(<any_Cx_ch_zh_ehr_dh> ch)] | [(ch <any_Cx_ch_zh_ehr_dh>)]) (ehr | ((<any_Cx_ch_zh_ehr> ch) | (ch <any_Cx_ch_zh_ehr>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_ch_ehr_hh> hh)] | [(hh <any_Cx_ch_ehr_hh>)]) sil))
Running scan for frate = 80
Considering guard zh with value 1 for dh ...
Considering guard ch with value 1 for dh ...
candidateGuards = map[ch:true zh:true]
Picking guard, zh

Considering guard zh with value 1 for ehr ...
Considering guard ch with value 1 for ehr ...
candidateGuards = map[ch:true zh:true]
Picking guard, zh

frate, target rule = 80 public <their> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_dh> zh)] | [(zh <any_Cx_zh_p_z_dh>)]) (dh | t | ((<any_Cx_zh_p_z_dh_ehr> zh) | (zh <any_Cx_zh_p_z_dh_ehr>)))) (([(<any_Cx_zh_zh_ehr_dh> zh)] | [(zh <any_Cx_zh_zh_ehr_dh>)]) (ehr | ((<any_Cx_zh_zh_ehr> zh) | (zh <any_Cx_zh_zh_ehr>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_zh_ehr_hh> hh)] | [(hh <any_Cx_zh_ehr_hh>)]) sil))
Running scan for frate = 72
Considering guard ch with value 1 for dh ...
Considering guard zh with value 1 for dh ...
candidateGuards = map[ch:true zh:true]
Picking guard, ch

Considering guard zh with value 1 for ehr ...
Considering guard ch with value 1 for ehr ...
candidateGuards = map[ch:true zh:true]
Picking guard, ch

frate, target rule = 72 public <their> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ch_p_z_dh> ch)] | [(ch <any_Cx_ch_p_z_dh>)]) (dh | t | ((<any_Cx_ch_p_z_dh_ehr> ch) | (ch <any_Cx_ch_p_z_dh_ehr>)))) (([(<any_Cx_ch_ch_ehr_dh> ch)] | [(ch <any_Cx_ch_ch_ehr_dh>)]) (ehr | ((<any_Cx_ch_ch_ehr> ch) | (ch <any_Cx_ch_ch_ehr>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_ch_ehr_p> p)] | [(p <any_Cx_ch_ehr_p>)]) sil))

results =
{72 [{sil 0 10} {dh 11 18} {ehr 19 44} {sil 45 56}]}
{80 [{sil 0 11} {dh 12 20} {ehr 21 49} {sil 50 60}]}
{91 [{sil 0 12} {dh 13 22} {ehr 23 25} {hh 26 28} {ae 29 58} {sil 59 110}]}
{105 [{sil 0 14} {dh 15 25} {ehr 26 28} {ae 29 60} {n 61 71} {sil 72 132}]}
{125 [{sil 3 19} {dh 20 31} {ehr 32 34} {ae 35 73} {m 74 82} {sil 83 154}]}

normalised results =
{72 [{sil 0 10} {dh 15 25} {ehr 26 61} {sil 63 78}]}
{80 [{sil 0 11} {dh 15 25} {ehr 26 61} {sil 63 75}]}
{91 [{sil 0 12} {dh 14 24} {ehr 25 25} {hh 29 29} {ae 32 64} {sil 65 121}]}
{105 [{sil 0 14} {dh 14 24} {ehr 25 25} {ae 28 57} {n 58 68} {sil 69 126}]}
{125 [{sil 3 19} {dh 16 25} {ehr 26 26} {ae 28 58} {m 59 66} {sil 66 123}]}

ruleAligned = [{{dh 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ehr 2} [{0 2} {1 2}]} {{ae 3} [{2 4} {3 3} {4 3}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {dh 15 25} {ehr 26 61} {sil 63 63}]}
{80 [{sil 0 0} {dh 15 25} {ehr 26 61} {sil 63 63}]}
{91 [{sil 0 0} {dh 14 24} {ehr 25 25} {hh 29 29} {ae 32 64} {sil 65 65}]}
{105 [{sil 0 0} {dh 14 24} {ehr 25 25} {ae 28 57} {n 58 68} {sil 69 69}]}
{125 [{sil 3 3} {dh 16 25} {ehr 26 26} {ae 28 58} {m 59 66} {sil 66 66}]}

timeAligned = [{{dh 15 25} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ae 32 57} [{2 4} {3 3} {4 3}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 -1 24
i, iTime, newITime, timeStartFrom = 2 0 1 24
combinedVerdict    = [{dh 0} {ehr 2} {ae 3}]
ruleAlignedVerdict = [{dh 0} {ehr 2} {ae 3}]

score->
+1 for dh
-1 for ehr
-1 for ae
score<-: -1
bestResult = {-1 [{dh 0} {ehr 2} {ae 3}] [dh ehr]}
testPronounce dh good ehr missing ae surprise
publish->
phonsToAlphas = [{[dh] th} {[ehr] eir}]
getVerdict<-:new {th [dh] 0}
getVerdict<-:new {eir [ehr] 2}
lettersVerdicts = [{th [dh] 0} {eir [ehr] 2} {ae [ae] 3}]
publish<-
Total: 234.266103ms
{
  "results": [
    {
      "letters": "th",
      "phonemes": "ð",
      "verdict": "good"
    },
    {
      "letters": "eir",
      "phonemes": "ɛː",
      "verdict": "missing"
    },
    {
      "letters": "ae",
      "phonemes": "æ",
      "verdict": "surprise"
    }
  ],
  "err": null
}
