
 length of audio =  1.43925



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.64 0.66 1.3

 start3, duration3, end3 =  0.66 0.58 1.24

 Initial start, duration, end =  0.54 0.76 1.3

 Cut at: start, duration =  0.54 0.8792499999999999     guard_end =  1.41925 

Running scan for frate = 125
Running scan for frate = 125
Considering guard ch with value 3 for iy ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard zh with value 1 for ay ...
Considering guard ch with value 1 for ay ...
candidateGuards = map[ch:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for dh ...
Considering guard ch with value 2 for dh ...
candidateGuards = map[ch:true zh:true]
Picking guard, zh

Considering guard ch with value 6 for dh ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh



frate, target rule = 125 public <either> = (((sil [((z <any_Vx_ay_z_p_noSlide>) | (<any_Vx_ay_z_p_noSlide> z))] [((z <any_Cx_ay_z_p>) | (<any_Cx_ay_z_p> z))]) | (sil p (sil [((z <any_Vx_ay_z_p_noSlide>) | (<any_Vx_ay_z_p_noSlide> z))] [((z <any_Cx_ay_z_p>) | (<any_Cx_ay_z_p> z))]))) ((([(<any_Vx_zh_p_z_ay_noSlide> zh)] | [(zh <any_Vx_zh_p_z_ay_noSlide>)]) ([(<any_Cx_zh_p_z_dh> zh)] | [(zh <any_Cx_zh_p_z_dh>)])) (ay | ((<any_Vx_zh_p_z_ay_noSlide> zh) | (zh <any_Vx_zh_p_z_ay_noSlide>)))) (([(<any_Cx_zh_zh_dh> zh)] | [(zh <any_Cx_zh_zh_dh>)]) (dh | ((<any_Cx_zh_zh_dh_axr> zh) | (zh <any_Cx_zh_zh_dh_axr>)))) (([(<any_Cx_zh_zh_axr_dh> zh)] | [(zh <any_Cx_zh_zh_axr_dh>)]) (axr | ((<any_Cx_zh_zh_axr_dh> zh) | (zh <any_Cx_zh_zh_axr_dh>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_thr> thr)] | [(thr <any_Cx_zh_axr_thr>)]) sil))
Running scan for frate = 105
frate, target rule = 125 public <either> = (((sil [((z <any_Vx_iy_z_p_noSlide>) | (<any_Vx_iy_z_p_noSlide> z))] [((z <any_Cx_iy_z_p>) | (<any_Cx_iy_z_p> z))]) | (sil p (sil [((z <any_Vx_iy_z_p_noSlide>) | (<any_Vx_iy_z_p_noSlide> z))] [((z <any_Cx_iy_z_p>) | (<any_Cx_iy_z_p> z))]))) ((([(<any_Vx_ch_p_z_iy_noSlide> ch)] | [(ch <any_Vx_ch_p_z_iy_noSlide>)]) ([(<any_Cx_ch_p_z_dh> ch)] | [(ch <any_Cx_ch_p_z_dh>)])) (iy | ((<any_Vx_ch_p_z_iy_noSlide> ch) | (ch <any_Vx_ch_p_z_iy_noSlide>)))) (([(<any_Cx_ch_ch_dh> ch)] | [(ch <any_Cx_ch_ch_dh>)]) (dh | ((<any_Cx_ch_ch_dh_axr> ch) | (ch <any_Cx_ch_ch_dh_axr>)))) (([(<any_Cx_zh_ch_axr_dh> zh)] | [(zh <any_Cx_zh_ch_axr_dh>)]) (axr | ((<any_Cx_zh_ch_axr_dh> zh) | (zh <any_Cx_zh_ch_axr_dh>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_hh> hh)] | [(hh <any_Cx_zh_axr_hh>)]) sil))
Running scan for frate = 105
Considering guard zh with value 1 for ay ...
Considering guard ch with value 1 for ay ...
candidateGuards = map[ch:true zh:true]
Picking guard, zh

Considering guard ch with value 3 for iy ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard zh with value 2 for dh ...
Considering guard ch with value 2 for dh ...
candidateGuards = map[ch:true zh:true]
Picking guard, ch

Considering guard ch with value 6 for dh ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh



frate, target rule = 105 public <either> = (((sil [((z <any_Vx_ay_z_p_noSlide>) | (<any_Vx_ay_z_p_noSlide> z))] [((z <any_Cx_ay_z_p>) | (<any_Cx_ay_z_p> z))]) | (sil p (sil [((z <any_Vx_ay_z_p_noSlide>) | (<any_Vx_ay_z_p_noSlide> z))] [((z <any_Cx_ay_z_p>) | (<any_Cx_ay_z_p> z))]))) ((([(<any_Vx_zh_p_z_ay_noSlide> zh)] | [(zh <any_Vx_zh_p_z_ay_noSlide>)]) ([(<any_Cx_zh_p_z_dh> zh)] | [(zh <any_Cx_zh_p_z_dh>)])) (ay | ((<any_Vx_zh_p_z_ay_noSlide> zh) | (zh <any_Vx_zh_p_z_ay_noSlide>)))) (([(<any_Cx_ch_zh_dh> ch)] | [(ch <any_Cx_ch_zh_dh>)]) (dh | ((<any_Cx_ch_zh_dh_axr> ch) | (ch <any_Cx_ch_zh_dh_axr>)))) (([(<any_Cx_zh_ch_axr_dh> zh)] | [(zh <any_Cx_zh_ch_axr_dh>)]) (axr | ((<any_Cx_zh_ch_axr_dh> zh) | (zh <any_Cx_zh_ch_axr_dh>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_f> f)] | [(f <any_Cx_zh_axr_f>)]) sil))
Running scan for frate = 91
frate, target rule = 105 public <either> = (((sil [((z <any_Vx_iy_z_p_noSlide>) | (<any_Vx_iy_z_p_noSlide> z))] [((z <any_Cx_iy_z_p>) | (<any_Cx_iy_z_p> z))]) | (sil p (sil [((z <any_Vx_iy_z_p_noSlide>) | (<any_Vx_iy_z_p_noSlide> z))] [((z <any_Cx_iy_z_p>) | (<any_Cx_iy_z_p> z))]))) ((([(<any_Vx_ch_p_z_iy_noSlide> ch)] | [(ch <any_Vx_ch_p_z_iy_noSlide>)]) ([(<any_Cx_ch_p_z_dh> ch)] | [(ch <any_Cx_ch_p_z_dh>)])) (iy | ((<any_Vx_ch_p_z_iy_noSlide> ch) | (ch <any_Vx_ch_p_z_iy_noSlide>)))) (([(<any_Cx_ch_ch_dh> ch)] | [(ch <any_Cx_ch_ch_dh>)]) (dh | ((<any_Cx_ch_ch_dh_axr> ch) | (ch <any_Cx_ch_ch_dh_axr>)))) (([(<any_Cx_zh_ch_axr_dh> zh)] | [(zh <any_Cx_zh_ch_axr_dh>)]) (axr | ((<any_Cx_zh_ch_axr_dh> zh) | (zh <any_Cx_zh_ch_axr_dh>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_thr> thr)] | [(thr <any_Cx_zh_axr_thr>)]) sil))
Running scan for frate = 91
Considering guard zh with value 1 for ay ...
Considering guard ch with value 1 for ay ...
candidateGuards = map[ch:true zh:true]
Picking guard, zh

Considering guard ch with value 3 for iy ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 2 for dh ...
Considering guard zh with value 2 for dh ...
candidateGuards = map[ch:true zh:true]
Picking guard, ch

Considering guard ch with value 6 for dh ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh



frate, target rule = 91 public <either> = (((sil [((z <any_Vx_ay_z_p_noSlide>) | (<any_Vx_ay_z_p_noSlide> z))] [((z <any_Cx_ay_z_p>) | (<any_Cx_ay_z_p> z))]) | (sil p (sil [((z <any_Vx_ay_z_p_noSlide>) | (<any_Vx_ay_z_p_noSlide> z))] [((z <any_Cx_ay_z_p>) | (<any_Cx_ay_z_p> z))]))) ((([(<any_Vx_zh_p_z_ay_noSlide> zh)] | [(zh <any_Vx_zh_p_z_ay_noSlide>)]) ([(<any_Cx_zh_p_z_dh> zh)] | [(zh <any_Cx_zh_p_z_dh>)])) (ay | ((<any_Vx_zh_p_z_ay_noSlide> zh) | (zh <any_Vx_zh_p_z_ay_noSlide>)))) (([(<any_Cx_ch_zh_dh> ch)] | [(ch <any_Cx_ch_zh_dh>)]) (dh | ((<any_Cx_ch_zh_dh_axr> ch) | (ch <any_Cx_ch_zh_dh_axr>)))) (([(<any_Cx_zh_ch_axr_dh> zh)] | [(zh <any_Cx_zh_ch_axr_dh>)]) (axr | ((<any_Cx_zh_ch_axr_dh> zh) | (zh <any_Cx_zh_ch_axr_dh>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_n> n)] | [(n <any_Cx_zh_axr_n>)]) sil))
Running scan for frate = 80
frate, target rule = 91 public <either> = (((sil [((z <any_Vx_iy_z_p_noSlide>) | (<any_Vx_iy_z_p_noSlide> z))] [((z <any_Cx_iy_z_p>) | (<any_Cx_iy_z_p> z))]) | (sil p (sil [((z <any_Vx_iy_z_p_noSlide>) | (<any_Vx_iy_z_p_noSlide> z))] [((z <any_Cx_iy_z_p>) | (<any_Cx_iy_z_p> z))]))) ((([(<any_Vx_ch_p_z_iy_noSlide> ch)] | [(ch <any_Vx_ch_p_z_iy_noSlide>)]) ([(<any_Cx_ch_p_z_dh> ch)] | [(ch <any_Cx_ch_p_z_dh>)])) (iy | ((<any_Vx_ch_p_z_iy_noSlide> ch) | (ch <any_Vx_ch_p_z_iy_noSlide>)))) (([(<any_Cx_ch_ch_dh> ch)] | [(ch <any_Cx_ch_ch_dh>)]) (dh | ((<any_Cx_ch_ch_dh_axr> ch) | (ch <any_Cx_ch_ch_dh_axr>)))) (([(<any_Cx_zh_ch_axr_dh> zh)] | [(zh <any_Cx_zh_ch_axr_dh>)]) (axr | ((<any_Cx_zh_ch_axr_dh> zh) | (zh <any_Cx_zh_ch_axr_dh>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_ng> ng)] | [(ng <any_Cx_zh_axr_ng>)]) sil))
Running scan for frate = 80
Considering guard ch with value 1 for ay ...
Considering guard zh with value 1 for ay ...
candidateGuards = map[ch:true zh:true]
Picking guard, ch

Considering guard ch with value 3 for iy ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard zh with value 2 for dh ...
Considering guard ch with value 2 for dh ...
candidateGuards = map[ch:true zh:true]
Picking guard, zh

Considering guard ch with value 6 for dh ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh



frate, target rule = 80 public <either> = (((sil [((z <any_Vx_ay_z_p_noSlide>) | (<any_Vx_ay_z_p_noSlide> z))] [((z <any_Cx_ay_z_p>) | (<any_Cx_ay_z_p> z))]) | (sil p (sil [((z <any_Vx_ay_z_p_noSlide>) | (<any_Vx_ay_z_p_noSlide> z))] [((z <any_Cx_ay_z_p>) | (<any_Cx_ay_z_p> z))]))) ((([(<any_Vx_ch_p_z_ay_noSlide> ch)] | [(ch <any_Vx_ch_p_z_ay_noSlide>)]) ([(<any_Cx_ch_p_z_dh> ch)] | [(ch <any_Cx_ch_p_z_dh>)])) (ay | ((<any_Vx_ch_p_z_ay_noSlide> ch) | (ch <any_Vx_ch_p_z_ay_noSlide>)))) (([(<any_Cx_zh_ch_dh> zh)] | [(zh <any_Cx_zh_ch_dh>)]) (dh | ((<any_Cx_zh_ch_dh_axr> zh) | (zh <any_Cx_zh_ch_dh_axr>)))) (([(<any_Cx_zh_zh_axr_dh> zh)] | [(zh <any_Cx_zh_zh_axr_dh>)]) (axr | ((<any_Cx_zh_zh_axr_dh> zh) | (zh <any_Cx_zh_zh_axr_dh>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_p> p)] | [(p <any_Cx_zh_axr_p>)]) sil))
Running scan for frate = 72
frate, target rule = 80 public <either> = (((sil [((z <any_Vx_iy_z_p_noSlide>) | (<any_Vx_iy_z_p_noSlide> z))] [((z <any_Cx_iy_z_p>) | (<any_Cx_iy_z_p> z))]) | (sil p (sil [((z <any_Vx_iy_z_p_noSlide>) | (<any_Vx_iy_z_p_noSlide> z))] [((z <any_Cx_iy_z_p>) | (<any_Cx_iy_z_p> z))]))) ((([(<any_Vx_ch_p_z_iy_noSlide> ch)] | [(ch <any_Vx_ch_p_z_iy_noSlide>)]) ([(<any_Cx_ch_p_z_dh> ch)] | [(ch <any_Cx_ch_p_z_dh>)])) (iy | ((<any_Vx_ch_p_z_iy_noSlide> ch) | (ch <any_Vx_ch_p_z_iy_noSlide>)))) (([(<any_Cx_ch_ch_dh> ch)] | [(ch <any_Cx_ch_ch_dh>)]) (dh | ((<any_Cx_ch_ch_dh_axr> ch) | (ch <any_Cx_ch_ch_dh_axr>)))) (([(<any_Cx_zh_ch_axr_dh> zh)] | [(zh <any_Cx_zh_ch_axr_dh>)]) (axr | ((<any_Cx_zh_ch_axr_dh> zh) | (zh <any_Cx_zh_ch_axr_dh>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_f> f)] | [(f <any_Cx_zh_axr_f>)]) sil))
Running scan for frate = 72
Considering guard zh with value 1 for ay ...
Considering guard ch with value 1 for ay ...
candidateGuards = map[ch:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for dh ...
Considering guard ch with value 2 for dh ...
candidateGuards = map[ch:true zh:true]
Picking guard, zh

Considering guard ch with value 3 for iy ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 6 for dh ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh


frate, target rule = 72 public <either> = (((sil [((z <any_Vx_ay_z_p_noSlide>) | (<any_Vx_ay_z_p_noSlide> z))] [((z <any_Cx_ay_z_p>) | (<any_Cx_ay_z_p> z))]) | (sil p (sil [((z <any_Vx_ay_z_p_noSlide>) | (<any_Vx_ay_z_p_noSlide> z))] [((z <any_Cx_ay_z_p>) | (<any_Cx_ay_z_p> z))]))) ((([(<any_Vx_zh_p_z_ay_noSlide> zh)] | [(zh <any_Vx_zh_p_z_ay_noSlide>)]) ([(<any_Cx_zh_p_z_dh> zh)] | [(zh <any_Cx_zh_p_z_dh>)])) (ay | ((<any_Vx_zh_p_z_ay_noSlide> zh) | (zh <any_Vx_zh_p_z_ay_noSlide>)))) (([(<any_Cx_zh_zh_dh> zh)] | [(zh <any_Cx_zh_zh_dh>)]) (dh | ((<any_Cx_zh_zh_dh_axr> zh) | (zh <any_Cx_zh_zh_dh_axr>)))) (([(<any_Cx_zh_zh_axr_dh> zh)] | [(zh <any_Cx_zh_zh_axr_dh>)]) (axr | ((<any_Cx_zh_zh_axr_dh> zh) | (zh <any_Cx_zh_zh_axr_dh>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_ng> ng)] | [(ng <any_Cx_zh_axr_ng>)]) sil))

frate, target rule = 72 public <either> = (((sil [((z <any_Vx_iy_z_p_noSlide>) | (<any_Vx_iy_z_p_noSlide> z))] [((z <any_Cx_iy_z_p>) | (<any_Cx_iy_z_p> z))]) | (sil p (sil [((z <any_Vx_iy_z_p_noSlide>) | (<any_Vx_iy_z_p_noSlide> z))] [((z <any_Cx_iy_z_p>) | (<any_Cx_iy_z_p> z))]))) ((([(<any_Vx_ch_p_z_iy_noSlide> ch)] | [(ch <any_Vx_ch_p_z_iy_noSlide>)]) ([(<any_Cx_ch_p_z_dh> ch)] | [(ch <any_Cx_ch_p_z_dh>)])) (iy | ((<any_Vx_ch_p_z_iy_noSlide> ch) | (ch <any_Vx_ch_p_z_iy_noSlide>)))) (([(<any_Cx_ch_ch_dh> ch)] | [(ch <any_Cx_ch_ch_dh>)]) (dh | ((<any_Cx_ch_ch_dh_axr> ch) | (ch <any_Cx_ch_ch_dh_axr>)))) (([(<any_Cx_zh_ch_axr_dh> zh)] | [(zh <any_Cx_zh_ch_axr_dh>)]) (axr | ((<any_Cx_zh_ch_axr_dh> zh) | (zh <any_Cx_zh_ch_axr_dh>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_f> f)] | [(f <any_Cx_zh_axr_f>)]) sil))

results =
{72 [{sil 0 14} {ay 15 29} {dh 30 36} {axr 37 45} {sil 46 56}]}
{80 [{sil 0 15} {ay 16 32} {dh 33 40} {axr 41 49} {sil 50 59}]}
{91 [{sil 0 18} {ay 19 37} {dh 38 45} {axr 46 63} {sil 64 74}]}
{105 [{sil 0 22} {ay 23 44} {dh 45 53} {axr 54 72} {sil 73 87}]}
{125 [{sil 3 29} {ay 30 53} {dh 54 64} {axr 65 88} {sil 89 105}]}

normalised results =
{72 [{sil 0 14} {ay 21 40} {dh 42 50} {axr 51 63} {sil 64 78}]}
{80 [{sil 0 15} {ay 20 40} {dh 41 50} {axr 51 61} {sil 63 74}]}
{91 [{sil 0 18} {ay 21 41} {dh 42 49} {axr 51 69} {sil 70 81}]}
{105 [{sil 0 22} {ay 22 42} {dh 43 50} {axr 51 69} {sil 70 83}]}
{125 [{sil 3 29} {ay 24 42} {dh 43 51} {axr 52 70} {sil 71 84}]}

ruleAligned = [{{ay 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{dh 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{axr 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {ay 21 40} {dh 42 50} {axr 51 63} {sil 64 64}]}
{80 [{sil 0 0} {ay 20 40} {dh 41 50} {axr 51 61} {sil 63 63}]}
{91 [{sil 0 0} {ay 21 41} {dh 42 49} {axr 51 69} {sil 70 70}]}
{105 [{sil 0 0} {ay 22 42} {dh 43 50} {axr 51 69} {sil 70 70}]}
{125 [{sil 3 3} {ay 24 42} {dh 43 51} {axr 52 70} {sil 71 71}]}

timeAligned = [{{ay 21 41} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{dh 42 50} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{axr 51 69} [{0 3} {1 3} {2 3} {3 3} {4 3}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 40
i, iTime, newITime, timeStartFrom = 2 1 2 49
combinedVerdict    = [{ay 0} {dh 0} {axr 0}]
ruleAlignedVerdict = [{ay 0} {dh 0} {axr 0}]

score->
+1 for ay
+1 for dh
+1 for axr
score<-: 8

results =
{72 [{sil 0 12} {l 13 22} {ch 23 25} {iy 26 30} {dh 31 36} {axr 37 45} {sil 46 56}]}
{80 [{sil 0 14} {l 15 26} {z 27 29} {iy 30 33} {dh 34 40} {axr 41 49} {sil 50 59}]}
{91 [{sil 0 11} {z 12 14} {w 15 31} {iy 32 38} {dh 39 45} {axr 46 63} {sil 64 74}]}
{105 [{sil 0 14} {z 15 17} {w 18 36} {iy 37 44} {dh 45 53} {axr 54 72} {sil 73 87}]}
{125 [{sil 3 20} {z 21 23} {w 24 43} {iy 44 54} {dh 55 64} {axr 65 88} {sil 89 105}]}

normalised results =
{72 [{sil 0 12} {l 18 31} {ch 32 32} {iy 36 42} {dh 43 50} {axr 51 63} {sil 64 78}]}
{80 [{sil 0 14} {l 19 33} {z 34 34} {iy 38 41} {dh 43 50} {axr 51 61} {sil 63 74}]}
{91 [{sil 0 11} {z 13 13} {w 16 34} {iy 35 42} {dh 43 49} {axr 51 69} {sil 70 81}]}
{105 [{sil 0 14} {z 14 14} {w 17 34} {iy 35 42} {dh 43 50} {axr 51 69} {sil 70 83}]}
{125 [{sil 3 20} {z 17 17} {w 19 34} {iy 35 43} {dh 44 51} {axr 52 70} {sil 71 84}]}

ruleAligned = [{{w 3} [{2 2} {3 2} {4 2}]} {{iy 0} [{0 3} {2 3} {3 3} {4 3}]} {{dh 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{axr 0} [{0 5} {1 5} {2 5} {3 5} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {l 18 31} {ch 32 32} {iy 36 42} {dh 43 50} {axr 51 63} {sil 64 64}]}
{80 [{sil 0 0} {l 19 33} {z 34 34} {iy 38 38} {dh 43 50} {axr 51 61} {sil 63 63}]}
{91 [{sil 0 0} {z 13 13} {w 16 34} {iy 35 42} {dh 43 49} {axr 51 69} {sil 70 70}]}
{105 [{sil 0 0} {z 14 14} {w 17 34} {iy 35 42} {dh 43 50} {axr 51 69} {sil 70 70}]}
{125 [{sil 3 3} {z 17 17} {w 19 34} {iy 35 43} {dh 44 51} {axr 52 70} {sil 71 71}]}

timeAligned = [{{w 19 34} [{2 2} {3 2} {4 2}]} {{iy 35 42} [{2 3} {3 3} {4 3} {0 3}]} {{dh 43 50} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{axr 51 69} [{0 5} {1 5} {2 5} {3 5} {4 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 34
i, iTime, newITime, timeStartFrom = 2 1 2 42
i, iTime, newITime, timeStartFrom = 3 2 3 49
combinedVerdict    = [{w 3} {iy 0} {dh 0} {axr 0}]
ruleAlignedVerdict = [{w 3} {iy 0} {dh 0} {axr 0}]

score->
-1 for w
+1 for iy
+1 for dh
+1 for axr
score<-: 2
testPronounce ay good dh good axr good
publish->
phonsToAlphas = [{[ay] ei} {[dh] th} {[axr] er}]
getVerdict<-:new {ei [ay] 0}
getVerdict<-:new {th [dh] 0}
getVerdict<-:new {er [axr] 0}
lettersVerdicts = [{ei [ay] 0} {th [dh] 0} {er [axr] 0}]
publish<-
{
  "results": [
    {
      "letters": "ei",
      "phonemes": "ɑɪ",
      "verdict": "good"
    },
    {
      "letters": "th",
      "phonemes": "ð",
      "verdict": "good"
    },
    {
      "letters": "er",
      "phonemes": "əɹ",
      "verdict": "good"
    }
  ],
  "err": null
}
