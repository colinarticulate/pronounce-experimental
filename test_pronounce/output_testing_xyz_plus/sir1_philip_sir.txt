
 length of audio =  1.962312



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.86 0.64 1.5

 start3, duration3, end3 =  0.86 0.58 1.44

 Initial start, duration, end =  0.76 0.74 1.5

 Cut at: start, duration =  0.76 1.19     guard_end =  1.95 

Running scan for frate = 125
Considering guard ng with value 1.7999999999999998 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 1.7999999999999998 for er ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 125 public <sir> = (((sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]) | (sil p (sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]))) (([(<any_Cx_ng_p_th_s> ng)] | [(ng <any_Cx_ng_p_th_s>)]) (s | z | ((<any_Cx_ng_p_th_s> ng) | (ng <any_Cx_ng_p_th_s>)))) ((([(<any_Vx_ng_ng_er_noSlide> ng)] | [(ng <any_Vx_ng_ng_er_noSlide>)]) ([(<any_Cx_ng_ng_s> ng)] | [(ng <any_Cx_ng_ng_s>)])) (er | ((<any_Vx_ng_ng_er_noSlide> ng) | (ng <any_Vx_ng_ng_er_noSlide>)))) (([(<any_Cx_ng_er_n> n)] | [(n <any_Cx_ng_er_n>)]) ([(<any_Vx_ng_er_n> n)] | [(n <any_Vx_ng_er_n>)]) sil))
Running scan for frate = 105
Considering guard ng with value 1.7999999999999998 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 1.7999999999999998 for er ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 105 public <sir> = (((sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]) | (sil p (sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]))) (([(<any_Cx_ng_p_th_s> ng)] | [(ng <any_Cx_ng_p_th_s>)]) (s | z | ((<any_Cx_ng_p_th_s> ng) | (ng <any_Cx_ng_p_th_s>)))) ((([(<any_Vx_ng_ng_er_noSlide> ng)] | [(ng <any_Vx_ng_ng_er_noSlide>)]) ([(<any_Cx_ng_ng_s> ng)] | [(ng <any_Cx_ng_ng_s>)])) (er | ((<any_Vx_ng_ng_er_noSlide> ng) | (ng <any_Vx_ng_ng_er_noSlide>)))) (([(<any_Cx_ng_er_thr> thr)] | [(thr <any_Cx_ng_er_thr>)]) ([(<any_Vx_ng_er_thr> thr)] | [(thr <any_Vx_ng_er_thr>)]) sil))
Running scan for frate = 91
Considering guard ng with value 1.7999999999999998 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 1.7999999999999998 for er ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 91 public <sir> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_ng_p_ch_s> ng)] | [(ng <any_Cx_ng_p_ch_s>)]) (s | z | ((<any_Cx_ng_p_ch_s> ng) | (ng <any_Cx_ng_p_ch_s>)))) ((([(<any_Vx_ng_ng_er_noSlide> ng)] | [(ng <any_Vx_ng_ng_er_noSlide>)]) ([(<any_Cx_ng_ng_s> ng)] | [(ng <any_Cx_ng_ng_s>)])) (er | ((<any_Vx_ng_ng_er_noSlide> ng) | (ng <any_Vx_ng_ng_er_noSlide>)))) (([(<any_Cx_ng_er_d> d)] | [(d <any_Cx_ng_er_d>)]) ([(<any_Vx_ng_er_d> d)] | [(d <any_Vx_ng_er_d>)]) sil))
Running scan for frate = 80
Considering guard ng with value 1.7999999999999998 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 1.7999999999999998 for er ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 80 public <sir> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_ng_p_ch_s> ng)] | [(ng <any_Cx_ng_p_ch_s>)]) (s | z | ((<any_Cx_ng_p_ch_s> ng) | (ng <any_Cx_ng_p_ch_s>)))) ((([(<any_Vx_ng_ng_er_noSlide> ng)] | [(ng <any_Vx_ng_ng_er_noSlide>)]) ([(<any_Cx_ng_ng_s> ng)] | [(ng <any_Cx_ng_ng_s>)])) (er | ((<any_Vx_ng_ng_er_noSlide> ng) | (ng <any_Vx_ng_ng_er_noSlide>)))) (([(<any_Cx_ng_er_r> r)] | [(r <any_Cx_ng_er_r>)]) ([(<any_Vx_ng_er_r> r)] | [(r <any_Vx_ng_er_r>)]) sil))
Running scan for frate = 72
Considering guard ng with value 1.7999999999999998 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 1.7999999999999998 for er ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 72 public <sir> = (((sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]) | (sil p (sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]))) (([(<any_Cx_ng_p_th_s> ng)] | [(ng <any_Cx_ng_p_th_s>)]) (s | z | ((<any_Cx_ng_p_th_s> ng) | (ng <any_Cx_ng_p_th_s>)))) ((([(<any_Vx_ng_ng_er_noSlide> ng)] | [(ng <any_Vx_ng_ng_er_noSlide>)]) ([(<any_Cx_ng_ng_s> ng)] | [(ng <any_Cx_ng_ng_s>)])) (er | ((<any_Vx_ng_ng_er_noSlide> ng) | (ng <any_Vx_ng_ng_er_noSlide>)))) (([(<any_Cx_ng_er_thr> thr)] | [(thr <any_Cx_ng_er_thr>)]) ([(<any_Vx_ng_er_thr> thr)] | [(thr <any_Vx_ng_er_thr>)]) sil))

results =
{72 [{sil 0 2} {s 3 15} {er 16 39} {sil 40 52}]}
{80 [{sil 0 2} {s 3 17} {er 18 43} {sil 44 55}]}
{91 [{sil 0 2} {s 3 19} {er 20 51} {sil 52 103}]}
{105 [{sil 0 2} {s 3 22} {er 23 59} {sil 60 124}]}
{125 [{sil 3 5} {s 6 27} {er 28 61} {n 62 65} {axl 66 81} {sil 82 148}]}

normalised results =
{72 [{sil 0 2} {s 4 21} {er 22 54} {sil 56 72}]}
{80 [{sil 0 2} {s 4 21} {er 23 54} {sil 55 69}]}
{91 [{sil 0 2} {s 3 21} {er 22 56} {sil 57 113}]}
{105 [{sil 0 2} {s 3 21} {er 22 56} {sil 57 118}]}
{125 [{sil 3 5} {s 5 22} {er 22 49} {n 50 52} {axl 53 65} {sil 66 118}]}

ruleAligned = [{{s 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{er 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {s 4 21} {er 22 54} {sil 56 56}]}
{80 [{sil 0 0} {s 4 21} {er 23 54} {sil 55 55}]}
{91 [{sil 0 0} {s 3 21} {er 22 56} {sil 57 57}]}
{105 [{sil 0 0} {s 3 21} {er 22 56} {sil 57 57}]}
{125 [{sil 3 3} {s 5 22} {er 22 49} {n 50 50} {axl 53 65} {sil 66 66}]}

timeAligned = [{{s 4 21} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{er 22 54} [{0 2} {2 2} {3 2} {4 2} {1 2}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 21
combinedVerdict    = [{s 0} {er 0}]
ruleAlignedVerdict = [{s 0} {er 0}]

score->
+1 for s
+1 for er
score<-: 7
testPronounce s good er good
publish->
phonsToAlphas = [{[s] s} {[er] ir}]
getVerdict<-:new {s [s] 0}
getVerdict<-:new {ir [er] 0}
lettersVerdicts = [{s [s] 0} {ir [er] 0}]
publish<-
Total: 191.231492ms
{
  "results": [
    {
      "letters": "s",
      "phonemes": "s",
      "verdict": "good"
    },
    {
      "letters": "ir",
      "phonemes": "ɜɹ",
      "verdict": "good"
    }
  ],
  "err": null
}
