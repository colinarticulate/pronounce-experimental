
 length of audio =  2.275187



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.8 1.1 1.9000000000000001

 start3, duration3, end3 =  0.8 0.9199999999999999 1.72

 Initial start, duration, end =  0.7000000000000001 1.2000000000000002 1.9000000000000001

 Cut at: start, duration =  0.7000000000000001 1.5551869999999997     guard_end =  2.255187 

Running scan for frate = 125
Running scan for frate = 125
Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for axl ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 125 public <dearly> = (((sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_d> sh)] | [(sh <any_Cx_sh_p_z_d>)]) (d | ((<any_Cx_sh_p_z_d> sh) | (sh <any_Cx_sh_p_z_d>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_axl_d> sh)] | [(sh <any_Cx_sh_sh_axl_d>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_sh_axl> sh)] | [(sh <any_Cx_sh_sh_axl>)]) (axl | ((<any_Cx_sh_sh_axl> sh) | (sh <any_Cx_sh_sh_axl>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_axl> sh)] | [(sh <any_Cx_sh_sh_axl>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_iy_n> n)] | [(n <any_Cx_sh_iy_n>)]) ([(<any_Vx_sh_iy_n> n)] | [(n <any_Vx_sh_iy_n>)]) sil))
frate, target rule = 125 public <dearly> = (((sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_d> sh)] | [(sh <any_Cx_sh_p_z_d>)]) (d | ((<any_Cx_sh_p_z_d> sh) | (sh <any_Cx_sh_p_z_d>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_ax_d> sh)] | [(sh <any_Cx_sh_sh_ax_d>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_sh_ax_l> sh)] | [(sh <any_Cx_sh_sh_ax_l>)]) (ax | ((<any_Cx_sh_sh_ax_l> sh) | (sh <any_Cx_sh_sh_ax_l>)))) (([(<any_Cx_sh_sh_l_ax> sh)] | [(sh <any_Cx_sh_sh_l_ax>)]) (l | ((<any_Cx_sh_sh_l_ax> sh) | (sh <any_Cx_sh_sh_l_ax>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_iy_hh> hh)] | [(hh <any_Cx_sh_iy_hh>)]) ([(<any_Vx_sh_iy_hh> hh)] | [(hh <any_Vx_sh_iy_hh>)]) sil))
Running scan for frate = 105
Running scan for frate = 105
Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for axl ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 105 public <dearly> = (((sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_d> sh)] | [(sh <any_Cx_sh_p_z_d>)]) (d | ((<any_Cx_sh_p_z_d> sh) | (sh <any_Cx_sh_p_z_d>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_axl_d> sh)] | [(sh <any_Cx_sh_sh_axl_d>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_sh_axl> sh)] | [(sh <any_Cx_sh_sh_axl>)]) (axl | ((<any_Cx_sh_sh_axl> sh) | (sh <any_Cx_sh_sh_axl>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_axl> sh)] | [(sh <any_Cx_sh_sh_axl>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_iy_thr> thr)] | [(thr <any_Cx_sh_iy_thr>)]) ([(<any_Vx_sh_iy_thr> thr)] | [(thr <any_Vx_sh_iy_thr>)]) sil))
frate, target rule = 105 public <dearly> = (((sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_d> sh)] | [(sh <any_Cx_sh_p_z_d>)]) (d | ((<any_Cx_sh_p_z_d> sh) | (sh <any_Cx_sh_p_z_d>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_ax_d> sh)] | [(sh <any_Cx_sh_sh_ax_d>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_sh_ax_l> sh)] | [(sh <any_Cx_sh_sh_ax_l>)]) (ax | ((<any_Cx_sh_sh_ax_l> sh) | (sh <any_Cx_sh_sh_ax_l>)))) (([(<any_Cx_sh_sh_l_ax> sh)] | [(sh <any_Cx_sh_sh_l_ax>)]) (l | ((<any_Cx_sh_sh_l_ax> sh) | (sh <any_Cx_sh_sh_l_ax>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_iy_ng> ng)] | [(ng <any_Cx_sh_iy_ng>)]) ([(<any_Vx_sh_iy_ng> ng)] | [(ng <any_Vx_sh_iy_ng>)]) sil))
Running scan for frate = 91
Running scan for frate = 91
Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for axl ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 91 public <dearly> = (((sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_d> sh)] | [(sh <any_Cx_sh_p_z_d>)]) (d | ((<any_Cx_sh_p_z_d> sh) | (sh <any_Cx_sh_p_z_d>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_axl_d> sh)] | [(sh <any_Cx_sh_sh_axl_d>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_sh_axl> sh)] | [(sh <any_Cx_sh_sh_axl>)]) (axl | ((<any_Cx_sh_sh_axl> sh) | (sh <any_Cx_sh_sh_axl>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_axl> sh)] | [(sh <any_Cx_sh_sh_axl>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_iy_f> f)] | [(f <any_Cx_sh_iy_f>)]) ([(<any_Vx_sh_iy_f> f)] | [(f <any_Vx_sh_iy_f>)]) sil))
frate, target rule = 91 public <dearly> = (((sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_d> sh)] | [(sh <any_Cx_sh_p_z_d>)]) (d | ((<any_Cx_sh_p_z_d> sh) | (sh <any_Cx_sh_p_z_d>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_ax_d> sh)] | [(sh <any_Cx_sh_sh_ax_d>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_sh_ax_l> sh)] | [(sh <any_Cx_sh_sh_ax_l>)]) (ax | ((<any_Cx_sh_sh_ax_l> sh) | (sh <any_Cx_sh_sh_ax_l>)))) (([(<any_Cx_sh_sh_l_ax> sh)] | [(sh <any_Cx_sh_sh_l_ax>)]) (l | ((<any_Cx_sh_sh_l_ax> sh) | (sh <any_Cx_sh_sh_l_ax>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_iy_f> f)] | [(f <any_Cx_sh_iy_f>)]) ([(<any_Vx_sh_iy_f> f)] | [(f <any_Vx_sh_iy_f>)]) sil))
Running scan for frate = 80
Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 80
Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 80 public <dearly> = (((sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_d> sh)] | [(sh <any_Cx_sh_p_z_d>)]) (d | ((<any_Cx_sh_p_z_d> sh) | (sh <any_Cx_sh_p_z_d>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_ax_d> sh)] | [(sh <any_Cx_sh_sh_ax_d>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_sh_ax_l> sh)] | [(sh <any_Cx_sh_sh_ax_l>)]) (ax | ((<any_Cx_sh_sh_ax_l> sh) | (sh <any_Cx_sh_sh_ax_l>)))) (([(<any_Cx_sh_sh_l_ax> sh)] | [(sh <any_Cx_sh_sh_l_ax>)]) (l | ((<any_Cx_sh_sh_l_ax> sh) | (sh <any_Cx_sh_sh_l_ax>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_iy_thr> thr)] | [(thr <any_Cx_sh_iy_thr>)]) ([(<any_Vx_sh_iy_thr> thr)] | [(thr <any_Vx_sh_iy_thr>)]) sil))
Running scan for frate = 72
Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for axl ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 80 public <dearly> = (((sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_d> sh)] | [(sh <any_Cx_sh_p_z_d>)]) (d | ((<any_Cx_sh_p_z_d> sh) | (sh <any_Cx_sh_p_z_d>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_axl_d> sh)] | [(sh <any_Cx_sh_sh_axl_d>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_sh_axl> sh)] | [(sh <any_Cx_sh_sh_axl>)]) (axl | ((<any_Cx_sh_sh_axl> sh) | (sh <any_Cx_sh_sh_axl>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_axl> sh)] | [(sh <any_Cx_sh_sh_axl>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_iy_ng> ng)] | [(ng <any_Cx_sh_iy_ng>)]) ([(<any_Vx_sh_iy_ng> ng)] | [(ng <any_Vx_sh_iy_ng>)]) sil))
Considering guard sh with value 1 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 72 public <dearly> = (((sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_d> sh)] | [(sh <any_Cx_sh_p_z_d>)]) (d | ((<any_Cx_sh_p_z_d> sh) | (sh <any_Cx_sh_p_z_d>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_ax_d> sh)] | [(sh <any_Cx_sh_sh_ax_d>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_sh_ax_l> sh)] | [(sh <any_Cx_sh_sh_ax_l>)]) (ax | ((<any_Cx_sh_sh_ax_l> sh) | (sh <any_Cx_sh_sh_ax_l>)))) (([(<any_Cx_sh_sh_l_ax> sh)] | [(sh <any_Cx_sh_sh_l_ax>)]) (l | ((<any_Cx_sh_sh_l_ax> sh) | (sh <any_Cx_sh_sh_l_ax>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_iy_m> m)] | [(m <any_Cx_sh_iy_m>)]) ([(<any_Vx_sh_iy_m> m)] | [(m <any_Vx_sh_iy_m>)]) sil))
Running scan for frate = 72
Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for axl ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 72 public <dearly> = (((sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_d> sh)] | [(sh <any_Cx_sh_p_z_d>)]) (d | ((<any_Cx_sh_p_z_d> sh) | (sh <any_Cx_sh_p_z_d>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_axl_d> sh)] | [(sh <any_Cx_sh_sh_axl_d>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_sh_axl> sh)] | [(sh <any_Cx_sh_sh_axl>)]) (axl | ((<any_Cx_sh_sh_axl> sh) | (sh <any_Cx_sh_sh_axl>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_axl> sh)] | [(sh <any_Cx_sh_sh_axl>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_iy_ng> ng)] | [(ng <any_Cx_sh_iy_ng>)]) ([(<any_Vx_sh_iy_ng> ng)] | [(ng <any_Vx_sh_iy_ng>)]) sil))

results =
{72 [{sil 0 11} {d 12 15} {iy 16 31} {ax 32 37} {l 38 50} {iy 51 63} {sil 64 66}]}
{80 [{sil 0 13} {d 14 17} {iy 18 35} {ax 36 44} {l 45 55} {iy 56 74} {sil 75 80}]}
{91 [{sil 0 15} {d 16 19} {iy 20 42} {ax 43 46} {l 47 63} {iy 64 84} {sil 85 136}]}
{105 [{sil 0 18} {d 19 22} {iy 23 48} {ax 49 59} {l 60 73} {iy 74 98} {sil 99 158}]}
{125 [{sil 3 23} {d 24 28} {iy 29 57} {ax 58 71} {l 72 87} {iy 88 117} {sil 118 190}]}

normalised results =
{72 [{sil 0 11} {d 17 21} {iy 22 43} {ax 44 51} {l 53 69} {iy 71 88} {sil 89 89}]}
{80 [{sil 0 13} {d 18 21} {iy 23 44} {ax 45 55} {l 56 69} {iy 70 93} {sil 94 100}]}
{91 [{sil 0 15} {d 18 21} {iy 22 46} {ax 47 51} {l 52 69} {iy 70 92} {sil 93 149}]}
{105 [{sil 0 18} {d 18 21} {iy 22 46} {ax 47 56} {l 57 70} {iy 70 93} {sil 94 150}]}
{125 [{sil 3 23} {d 19 22} {iy 23 46} {ax 46 57} {l 58 70} {iy 70 94} {sil 94 152}]}

ruleAligned = [{{d 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{iy 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{ax 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{l 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{iy 0} [{0 5} {1 5} {2 5} {3 5} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {d 17 21} {iy 22 43} {ax 44 51} {l 53 69} {iy 71 88} {sil 89 89}]}
{80 [{sil 0 0} {d 18 21} {iy 23 44} {ax 45 55} {l 56 69} {iy 70 93} {sil 94 94}]}
{91 [{sil 0 0} {d 18 21} {iy 22 46} {ax 47 51} {l 52 69} {iy 70 92} {sil 93 93}]}
{105 [{sil 0 0} {d 18 21} {iy 22 46} {ax 47 56} {l 57 70} {iy 70 93} {sil 94 94}]}
{125 [{sil 3 3} {d 19 22} {iy 23 46} {ax 46 57} {l 58 70} {iy 70 94} {sil 94 94}]}

timeAligned = [{{d 18 21} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{iy 22 46} [{0 2} {2 2} {3 2} {1 2} {4 2}]} {{ax 46 55} [{0 3} {1 3} {4 3} {2 3} {3 3}]} {{l 56 69} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{iy 70 93} [{1 5} {2 5} {3 5} {4 5} {0 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 21
i, iTime, newITime, timeStartFrom = 2 1 2 43
i, iTime, newITime, timeStartFrom = 3 2 3 51
i, iTime, newITime, timeStartFrom = 4 3 4 69
combinedVerdict    = [{d 0} {iy 0} {ax 0} {l 0} {iy 0}]
ruleAlignedVerdict = [{d 0} {iy 0} {ax 0} {l 0} {iy 0}]

score->
+1 for d
+1 for iy
+1 for ax
+1 for l
+1 for iy
score<-: 10

results =
{72 [{sil 0 11} {d 12 15} {iy 16 31} {sh 32 34} {l 35 50} {iy 51 63} {sil 64 66}]}
{80 [{sil 0 13} {d 14 17} {iy 18 35} {sh 36 38} {l 39 55} {iy 56 74} {sil 75 80}]}
{91 [{sil 0 15} {d 16 19} {iy 20 40} {sh 41 43} {l 44 63} {iy 64 84} {sil 85 136}]}
{105 [{sil 0 18} {d 19 22} {iy 23 48} {sh 49 51} {l 52 73} {iy 74 98} {sil 99 158}]}
{125 [{sil 3 23} {d 24 28} {iy 29 59} {sh 60 62} {l 63 87} {iy 88 117} {sil 118 190}]}

normalised results =
{72 [{sil 0 11} {d 17 21} {iy 22 43} {sh 44 44} {l 49 69} {iy 71 88} {sil 89 89}]}
{80 [{sil 0 13} {d 18 21} {iy 23 44} {sh 45 45} {l 49 69} {iy 70 93} {sil 94 100}]}
{91 [{sil 0 15} {d 18 21} {iy 22 44} {sh 45 45} {l 48 69} {iy 70 92} {sil 93 149}]}
{105 [{sil 0 18} {d 18 21} {iy 22 46} {sh 47 47} {l 50 70} {iy 70 93} {sil 94 150}]}
{125 [{sil 3 23} {d 19 22} {iy 23 47} {sh 48 48} {l 50 70} {iy 70 94} {sil 94 152}]}

ruleAligned = [{{d 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{iy 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{axl 2} []} {{l 3} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{iy 0} [{0 5} {1 5} {2 5} {3 5} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {d 17 21} {iy 22 43} {sh 44 44} {l 49 69} {iy 71 88} {sil 89 89}]}
{80 [{sil 0 0} {d 18 21} {iy 23 44} {sh 45 45} {l 49 69} {iy 70 93} {sil 94 94}]}
{91 [{sil 0 0} {d 18 21} {iy 22 44} {sh 45 45} {l 48 69} {iy 70 92} {sil 93 93}]}
{105 [{sil 0 0} {d 18 21} {iy 22 46} {sh 47 47} {l 50 70} {iy 70 93} {sil 94 94}]}
{125 [{sil 3 3} {d 19 22} {iy 23 47} {sh 48 48} {l 50 70} {iy 70 94} {sil 94 94}]}

timeAligned = [{{d 18 21} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{iy 22 44} [{0 2} {2 2} {3 2} {1 2} {4 2}]} {{l 49 69} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{iy 70 93} [{1 5} {2 5} {3 5} {4 5} {0 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 21
i, iTime, newITime, timeStartFrom = 2 1 -1 43
i, iTime, newITime, timeStartFrom = 3 1 2 43
i, iTime, newITime, timeStartFrom = 4 2 3 69
combinedVerdict    = [{d 0} {iy 0} {axl 2} {l 3} {iy 0}]
ruleAlignedVerdict = [{d 0} {iy 0} {axl 2} {l 3} {iy 0}]

score->
+1 for d
+1 for iy
-1 for axl
-1 for l
+1 for iy
score<-: 1
testPronounce d good iy good ax good l good iy good
publish->
phonsToAlphas = [{[d] d} {[iy ax] ear} {[l] l} {[iy] y}]
getVerdict<-:new {d [d] 0}
getVerdict<-:new {l [l] 0}
getVerdict<-:new {y [iy] 0}
lettersVerdicts = [{d [d] 0} {ear [iy ax] 0} {l [l] 0} {y [iy] 0}]
publish<-
Total: 312.011641ms
{
  "results": [
    {
      "letters": "d",
      "phonemes": "d",
      "verdict": "good"
    },
    {
      "letters": "ear",
      "phonemes": "iː ə",
      "verdict": "good"
    },
    {
      "letters": "l",
      "phonemes": "l",
      "verdict": "good"
    },
    {
      "letters": "y",
      "phonemes": "iː",
      "verdict": "good"
    }
  ],
  "err": null
}
