
 length of audio =  2.694875



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.66 1.4000000000000001 2.06

 start3, duration3, end3 =  1.22 0.54 1.76

 Initial start, duration, end =  0.56 1.5 2.06

 Cut at: start, duration =  0.56 1.95     guard_end =  2.51 

Running scan for frate = 125
Running scan for frate = 125
Considering guard sh with value 1.6 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard jh with value 1 for ing ...
Considering guard ch with value 1 for ing ...
Considering guard sh with value 1 for ing ...
Considering guard zh with value 1 for ing ...
candidateGuards = map[ch:true jh:true sh:true zh:true]
Picking guard, jh

Considering guard sh with value 1.6 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 125 public <meaning> = (((sil [((l <any_Cx_m_l_p>) | (<any_Cx_m_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]) | (sil p (sil [((l <any_Cx_m_l_p>) | (<any_Cx_m_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]))) (([(<any_Cx_sh_p_l_m> sh)] | [(sh <any_Cx_sh_p_l_m>)]) (m | ((<any_Cx_sh_p_l_m> sh) | (sh <any_Cx_sh_p_l_m>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_n_m> sh)] | [(sh <any_Cx_sh_sh_n_m>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_sh_n> sh)] | [(sh <any_Cx_sh_sh_n>)]) (n | ((<any_Cx_sh_sh_n_ing> sh) | (sh <any_Cx_sh_sh_n_ing>)))) (([(<any_Cx_jh_sh_ing_n> jh)] | [(jh <any_Cx_jh_sh_ing_n>)]) (ing | ((<any_Cx_jh_sh_ing_n> jh) | (jh <any_Cx_jh_sh_ing_n>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_jh_ing_ng> ng)] | [(ng <any_Cx_jh_ing_ng>)]) sil))
Considering guard s with value 1 for ng ...
Considering guard sh with value 1 for ng ...
Considering guard jh with value 1 for ng ...
Considering guard z with value 1 for ng ...
candidateGuards = map[jh:true s:true sh:true z:true]
Picking guard, s

Running scan for frate = 105
frate, target rule = 125 public <meaning> = (((sil [((l <any_Cx_m_l_p>) | (<any_Cx_m_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]) | (sil p (sil [((l <any_Cx_m_l_p>) | (<any_Cx_m_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]))) (([(<any_Cx_sh_p_l_m> sh)] | [(sh <any_Cx_sh_p_l_m>)]) (m | ((<any_Cx_sh_p_l_m> sh) | (sh <any_Cx_sh_p_l_m>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_n_m> sh)] | [(sh <any_Cx_sh_sh_n_m>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_sh_n> sh)] | [(sh <any_Cx_sh_sh_n>)]) (n | ((<any_Cx_sh_sh_n> sh) | (sh <any_Cx_sh_sh_n>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_ng_n> sh)] | [(sh <any_Cx_sh_sh_ng_n>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_s_sh_ng> s)] | [(s <any_Cx_s_sh_ng>)]) (ng | ((<any_Cx_s_sh_ng> s) | (s <any_Cx_s_sh_ng>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_s_ng_m> m)] | [(m <any_Cx_s_ng_m>)]) sil))
Considering guard sh with value 1.6 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard jh with value 1 for ing ...
Considering guard ch with value 1 for ing ...
Considering guard sh with value 1 for ing ...
Considering guard zh with value 1 for ing ...
candidateGuards = map[ch:true jh:true sh:true zh:true]
Picking guard, jh

frate, target rule = 105 public <meaning> = (((sil [((l <any_Cx_m_l_p>) | (<any_Cx_m_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]) | (sil p (sil [((l <any_Cx_m_l_p>) | (<any_Cx_m_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]))) (([(<any_Cx_sh_p_l_m> sh)] | [(sh <any_Cx_sh_p_l_m>)]) (m | ((<any_Cx_sh_p_l_m> sh) | (sh <any_Cx_sh_p_l_m>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_n_m> sh)] | [(sh <any_Cx_sh_sh_n_m>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_sh_n> sh)] | [(sh <any_Cx_sh_sh_n>)]) (n | ((<any_Cx_sh_sh_n_ing> sh) | (sh <any_Cx_sh_sh_n_ing>)))) (([(<any_Cx_jh_sh_ing_n> jh)] | [(jh <any_Cx_jh_sh_ing_n>)]) (ing | ((<any_Cx_jh_sh_ing_n> jh) | (jh <any_Cx_jh_sh_ing_n>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_jh_ing_p> p)] | [(p <any_Cx_jh_ing_p>)]) sil))
Running scan for frate = 105
Running scan for frate = 91
Considering guard sh with value 1.6 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard jh with value 1 for ng ...
Considering guard sh with value 1 for ng ...
Considering guard z with value 1 for ng ...
Considering guard s with value 1 for ng ...
candidateGuards = map[jh:true s:true sh:true z:true]
Picking guard, jh

Considering guard jh with value 1 for ing ...
Considering guard ch with value 1 for ing ...
Considering guard zh with value 1 for ing ...
Considering guard sh with value 1 for ing ...
candidateGuards = map[ch:true jh:true sh:true zh:true]
Picking guard, jh

frate, target rule = 105 public <meaning> = (((sil [((d <any_Cx_m_d_p>) | (<any_Cx_m_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil p (sil [((d <any_Cx_m_d_p>) | (<any_Cx_m_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_sh_p_d_m> sh)] | [(sh <any_Cx_sh_p_d_m>)]) (m | ((<any_Cx_sh_p_d_m> sh) | (sh <any_Cx_sh_p_d_m>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_n_m> sh)] | [(sh <any_Cx_sh_sh_n_m>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_sh_n> sh)] | [(sh <any_Cx_sh_sh_n>)]) (n | ((<any_Cx_sh_sh_n> sh) | (sh <any_Cx_sh_sh_n>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_ng_n> sh)] | [(sh <any_Cx_sh_sh_ng_n>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_jh_sh_ng> jh)] | [(jh <any_Cx_jh_sh_ng>)]) (ng | ((<any_Cx_jh_sh_ng> jh) | (jh <any_Cx_jh_sh_ng>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_jh_ng_ng> ng)] | [(ng <any_Cx_jh_ng_ng>)]) sil))
frate, target rule = 91 public <meaning> = (((sil [((d <any_Cx_m_d_p>) | (<any_Cx_m_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil p (sil [((d <any_Cx_m_d_p>) | (<any_Cx_m_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_sh_p_d_m> sh)] | [(sh <any_Cx_sh_p_d_m>)]) (m | ((<any_Cx_sh_p_d_m> sh) | (sh <any_Cx_sh_p_d_m>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_n_m> sh)] | [(sh <any_Cx_sh_sh_n_m>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_sh_n> sh)] | [(sh <any_Cx_sh_sh_n>)]) (n | ((<any_Cx_sh_sh_n_ing> sh) | (sh <any_Cx_sh_sh_n_ing>)))) (([(<any_Cx_jh_sh_ing_n> jh)] | [(jh <any_Cx_jh_sh_ing_n>)]) (ing | ((<any_Cx_jh_sh_ing_n> jh) | (jh <any_Cx_jh_sh_ing_n>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_jh_ing_ng> ng)] | [(ng <any_Cx_jh_ing_ng>)]) sil))
Running scan for frate = 91
Running scan for frate = 80
Considering guard sh with value 1.6 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 1 for ing ...
Considering guard sh with value 1 for ing ...
Considering guard jh with value 1 for ing ...
Considering guard zh with value 1 for ing ...
candidateGuards = map[ch:true jh:true sh:true zh:true]
Picking guard, ch

Considering guard z with value 1 for ng ...
Considering guard jh with value 1 for ng ...
Considering guard sh with value 1 for ng ...
Considering guard s with value 1 for ng ...
candidateGuards = map[jh:true s:true sh:true z:true]
Picking guard, sh

frate, target rule = 80 public <meaning> = (((sil [((l <any_Cx_m_l_p>) | (<any_Cx_m_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]) | (sil p (sil [((l <any_Cx_m_l_p>) | (<any_Cx_m_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]))) (([(<any_Cx_sh_p_l_m> sh)] | [(sh <any_Cx_sh_p_l_m>)]) (m | ((<any_Cx_sh_p_l_m> sh) | (sh <any_Cx_sh_p_l_m>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_n_m> sh)] | [(sh <any_Cx_sh_sh_n_m>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_sh_n> sh)] | [(sh <any_Cx_sh_sh_n>)]) (n | ((<any_Cx_sh_sh_n_ing> sh) | (sh <any_Cx_sh_sh_n_ing>)))) (([(<any_Cx_ch_sh_ing_n> ch)] | [(ch <any_Cx_ch_sh_ing_n>)]) (ing | ((<any_Cx_ch_sh_ing_n> ch) | (ch <any_Cx_ch_sh_ing_n>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_ch_ing_n> n)] | [(n <any_Cx_ch_ing_n>)]) sil))
frate, target rule = 91 public <meaning> = (((sil [((v <any_Cx_m_v_p>) | (<any_Cx_m_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]) | (sil p (sil [((v <any_Cx_m_v_p>) | (<any_Cx_m_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]))) (([(<any_Cx_sh_p_v_m> sh)] | [(sh <any_Cx_sh_p_v_m>)]) (m | ((<any_Cx_sh_p_v_m> sh) | (sh <any_Cx_sh_p_v_m>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_n_m> sh)] | [(sh <any_Cx_sh_sh_n_m>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_sh_n> sh)] | [(sh <any_Cx_sh_sh_n>)]) (n | ((<any_Cx_sh_sh_n> sh) | (sh <any_Cx_sh_sh_n>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_ng_n> sh)] | [(sh <any_Cx_sh_sh_ng_n>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_sh_sh_ng> sh)] | [(sh <any_Cx_sh_sh_ng>)]) (ng | ((<any_Cx_sh_sh_ng> sh) | (sh <any_Cx_sh_sh_ng>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_sh_ng_ng> ng)] | [(ng <any_Cx_sh_ng_ng>)]) sil))
Running scan for frate = 72
Running scan for frate = 80
Considering guard sh with value 1.6 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 1 for ing ...
Considering guard jh with value 1 for ing ...
Considering guard sh with value 1 for ing ...
Considering guard zh with value 1 for ing ...
candidateGuards = map[ch:true jh:true sh:true zh:true]
Picking guard, jh

Considering guard sh with value 1.6 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 72 public <meaning> = (((sil [((v <any_Cx_m_v_p>) | (<any_Cx_m_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]) | (sil p (sil [((v <any_Cx_m_v_p>) | (<any_Cx_m_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]))) (([(<any_Cx_sh_p_v_m> sh)] | [(sh <any_Cx_sh_p_v_m>)]) (m | ((<any_Cx_sh_p_v_m> sh) | (sh <any_Cx_sh_p_v_m>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_n_m> sh)] | [(sh <any_Cx_sh_sh_n_m>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_sh_n> sh)] | [(sh <any_Cx_sh_sh_n>)]) (n | ((<any_Cx_sh_sh_n_ing> sh) | (sh <any_Cx_sh_sh_n_ing>)))) (([(<any_Cx_jh_sh_ing_n> jh)] | [(jh <any_Cx_jh_sh_ing_n>)]) (ing | ((<any_Cx_jh_sh_ing_n> jh) | (jh <any_Cx_jh_sh_ing_n>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_jh_ing_p> p)] | [(p <any_Cx_jh_ing_p>)]) sil))
Considering guard sh with value 1 for ng ...
Considering guard z with value 1 for ng ...
Considering guard s with value 1 for ng ...
Considering guard jh with value 1 for ng ...
candidateGuards = map[jh:true s:true sh:true z:true]
Picking guard, sh

frate, target rule = 80 public <meaning> = (((sil [((d <any_Cx_m_d_p>) | (<any_Cx_m_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil p (sil [((d <any_Cx_m_d_p>) | (<any_Cx_m_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_sh_p_d_m> sh)] | [(sh <any_Cx_sh_p_d_m>)]) (m | ((<any_Cx_sh_p_d_m> sh) | (sh <any_Cx_sh_p_d_m>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_n_m> sh)] | [(sh <any_Cx_sh_sh_n_m>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_sh_n> sh)] | [(sh <any_Cx_sh_sh_n>)]) (n | ((<any_Cx_sh_sh_n> sh) | (sh <any_Cx_sh_sh_n>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_ng_n> sh)] | [(sh <any_Cx_sh_sh_ng_n>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_sh_sh_ng> sh)] | [(sh <any_Cx_sh_sh_ng>)]) (ng | ((<any_Cx_sh_sh_ng> sh) | (sh <any_Cx_sh_sh_ng>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_sh_ng_ng> ng)] | [(ng <any_Cx_sh_ng_ng>)]) sil))
Running scan for frate = 72
Considering guard sh with value 1.6 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard z with value 1 for ng ...
Considering guard jh with value 1 for ng ...
Considering guard sh with value 1 for ng ...
Considering guard s with value 1 for ng ...
candidateGuards = map[jh:true s:true sh:true z:true]
Picking guard, z

frate, target rule = 72 public <meaning> = (((sil [((d <any_Cx_m_d_p>) | (<any_Cx_m_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil p (sil [((d <any_Cx_m_d_p>) | (<any_Cx_m_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_sh_p_d_m> sh)] | [(sh <any_Cx_sh_p_d_m>)]) (m | ((<any_Cx_sh_p_d_m> sh) | (sh <any_Cx_sh_p_d_m>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_n_m> sh)] | [(sh <any_Cx_sh_sh_n_m>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_sh_n> sh)] | [(sh <any_Cx_sh_sh_n>)]) (n | ((<any_Cx_sh_sh_n> sh) | (sh <any_Cx_sh_sh_n>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_ng_n> sh)] | [(sh <any_Cx_sh_sh_ng_n>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_z_sh_ng> z)] | [(z <any_Cx_z_sh_ng>)]) (ng | ((<any_Cx_z_sh_ng> z) | (z <any_Cx_z_sh_ng>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_z_ng_hh> hh)] | [(hh <any_Cx_z_ng_hh>)]) sil))

results =
{72 []}
{80 []}
{91 [{sil 0 14} {m 15 32} {ao 33 52} {sh 53 55} {n 56 71} {ing 72 74} {ih 75 93} {ng 94 124} {sil 125 172}]}
{105 [{sil 0 18} {m 19 37} {ao 38 61} {sh 62 64} {n 65 84} {ing 85 144} {sil 145 200}]}
{125 [{sil 3 22} {m 23 44} {iy 45 73} {n 74 100} {ing 101 103} {ih 104 131} {ng 132 166} {sil 167 239}]}

normalised results =
{72 []}
{80 []}
{91 [{sil 0 14} {m 16 35} {ao 36 57} {sh 58 58} {n 62 78} {ing 79 79} {ih 82 102} {ng 103 136} {sil 137 189}]}
{105 [{sil 0 18} {m 18 35} {ao 36 58} {sh 59 59} {n 62 80} {ing 81 137} {sil 138 190}]}
{125 [{sil 3 22} {m 18 35} {iy 36 58} {n 59 80} {ing 81 81} {ih 83 105} {ng 106 133} {sil 134 191}]}

Mapped result =
result 0 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 1 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 2 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 3 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 4 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false

Rules =
rule 0 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: v
rule: {v {[{sil} {{[{[{v} {{any_Cx_m_v_p {[{g} {dh} {d} {l} {ch} {hh} {w} {z} {zh} {b}]}}}]} {[{{any_Cx_m_v_p {[{g} {dh} {d} {l} {ch} {hh} {w} {z} {zh} {b}]}}} {v}]}]}} {{[{[{v} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]} {[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {v}]}]}}]}}
Phoneme rule:
guard: sh phoneme: m
rule: {[{[{{[{{any_Cx_sh_p_v_m {[{g} {z} {l} {hh} {w} {zh} {b} {ch} {dh} {d}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_p_v_m {[{g} {z} {l} {hh} {w} {zh} {b} {ch} {dh} {d}]}}}]}}]} {[{m} {[{[{{any_Cx_sh_p_v_m {[{g} {z} {l} {hh} {w} {zh} {b} {ch} {dh} {d}]}}} {sh}]} {[{sh} {{any_Cx_sh_p_v_m {[{g} {z} {l} {hh} {w} {zh} {b} {ch} {dh} {d}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: iy
rule: {[{[{[{{[{{any_Vx_sh_sh_iy_noSlide {[{ax} {eh} {uw} {aa} {ae} {ao} {uh} {y} {ah} {ih} {oh}]}}} {sh}]}} {{[{sh} {{any_Vx_sh_sh_iy_noSlide {[{ax} {eh} {uw} {aa} {ae} {ao} {uh} {y} {ah} {ih} {oh}]}}}]}}]} {[{{[{{any_Cx_sh_sh_n_m {[{dh} {hh} {b} {w} {zh} {l} {z} {ch} {g} {d} {v}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_n_m {[{dh} {hh} {b} {w} {zh} {l} {z} {ch} {g} {d} {v}]}}}]}}]}]} {[{iy} {[{[{{any_Vx_sh_sh_iy_noSlide {[{ax} {eh} {uw} {aa} {ae} {ao} {uh} {y} {ah} {ih} {oh}]}}} {sh}]} {[{sh} {{any_Vx_sh_sh_iy_noSlide {[{ax} {eh} {uw} {aa} {ae} {ao} {uh} {y} {ah} {ih} {oh}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: n
rule: {[{[{{[{{any_Cx_sh_sh_n {[{d} {g} {ch} {zh} {hh} {w} {z} {dh} {b} {m} {l} {v}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_n {[{d} {g} {ch} {zh} {hh} {w} {z} {dh} {b} {m} {l} {v}]}}}]}}]} {[{n} {[{[{{any_Cx_sh_sh_n_ing {[{b} {g} {w} {hh} {zh} {l} {z} {dh} {m} {v} {ch} {d}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_n_ing {[{b} {g} {w} {hh} {zh} {l} {z} {dh} {m} {v} {ch} {d}]}}}]}]}]}]}
Phoneme rule:
guard: jh phoneme: ing
rule: {[{[{{[{{any_Cx_jh_sh_ing_n {[{g} {ch} {dh} {m} {z} {d} {l} {v} {zh} {b} {hh} {w}]}}} {jh}]}} {{[{jh} {{any_Cx_jh_sh_ing_n {[{g} {ch} {dh} {m} {z} {d} {l} {v} {zh} {b} {hh} {w}]}}}]}}]} {[{ing} {[{[{{any_Cx_jh_sh_ing_n {[{g} {ch} {dh} {m} {z} {d} {l} {v} {zh} {b} {hh} {w}]}}} {jh}]} {[{jh} {{any_Cx_jh_sh_ing_n {[{g} {ch} {dh} {m} {z} {d} {l} {v} {zh} {b} {hh} {w}]}}}]}]}]}]}
Closing rule:
guard: p
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {p}]}} {{[{p} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_jh_ing_p {[{l} {z} {m} {ch} {w} {hh} {v} {zh} {g} {dh} {b} {d}]}}} {p}]}} {{[{p} {{any_Cx_jh_ing_p {[{l} {z} {m} {ch} {w} {hh} {v} {zh} {g} {dh} {b} {d}]}}}]}}]} {sil}]}
rule 1 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: l
rule: {l {[{sil} {{[{[{l} {{any_Cx_m_l_p {[{ch} {g} {z} {zh} {w} {dh} {hh} {v} {b} {d}]}}}]} {[{{any_Cx_m_l_p {[{ch} {g} {z} {zh} {w} {dh} {hh} {v} {b} {d}]}}} {l}]}]}} {{[{[{l} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]} {[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {l}]}]}}]}}
Phoneme rule:
guard: sh phoneme: m
rule: {[{[{{[{{any_Cx_sh_p_l_m {[{v} {w} {dh} {hh} {zh} {ch} {g} {d} {z} {b}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_p_l_m {[{v} {w} {dh} {hh} {zh} {ch} {g} {d} {z} {b}]}}}]}}]} {[{m} {[{[{{any_Cx_sh_p_l_m {[{v} {w} {dh} {hh} {zh} {ch} {g} {d} {z} {b}]}}} {sh}]} {[{sh} {{any_Cx_sh_p_l_m {[{v} {w} {dh} {hh} {zh} {ch} {g} {d} {z} {b}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: iy
rule: {[{[{[{{[{{any_Vx_sh_sh_iy_noSlide {[{uw} {uh} {y} {aa} {ae} {ax} {eh} {oh} {ah} {ao} {ih}]}}} {sh}]}} {{[{sh} {{any_Vx_sh_sh_iy_noSlide {[{uw} {uh} {y} {aa} {ae} {ax} {eh} {oh} {ah} {ao} {ih}]}}}]}}]} {[{{[{{any_Cx_sh_sh_n_m {[{l} {ch} {g} {dh} {b} {z} {v} {zh} {d} {hh} {w}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_n_m {[{l} {ch} {g} {dh} {b} {z} {v} {zh} {d} {hh} {w}]}}}]}}]}]} {[{iy} {[{[{{any_Vx_sh_sh_iy_noSlide {[{uw} {uh} {y} {aa} {ae} {ax} {eh} {oh} {ah} {ao} {ih}]}}} {sh}]} {[{sh} {{any_Vx_sh_sh_iy_noSlide {[{uw} {uh} {y} {aa} {ae} {ax} {eh} {oh} {ah} {ao} {ih}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: n
rule: {[{[{{[{{any_Cx_sh_sh_n {[{hh} {w} {ch} {dh} {g} {b} {m} {z} {zh} {d} {l} {v}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_n {[{hh} {w} {ch} {dh} {g} {b} {m} {z} {zh} {d} {l} {v}]}}}]}}]} {[{n} {[{[{{any_Cx_sh_sh_n_ing {[{d} {z} {ch} {zh} {dh} {m} {hh} {v} {b} {g} {l} {w}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_n_ing {[{d} {z} {ch} {zh} {dh} {m} {hh} {v} {b} {g} {l} {w}]}}}]}]}]}]}
Phoneme rule:
guard: ch phoneme: ing
rule: {[{[{{[{{any_Cx_ch_sh_ing_n {[{b} {d} {hh} {v} {zh} {l} {m} {z} {dh} {g} {w}]}}} {ch}]}} {{[{ch} {{any_Cx_ch_sh_ing_n {[{b} {d} {hh} {v} {zh} {l} {m} {z} {dh} {g} {w}]}}}]}}]} {[{ing} {[{[{{any_Cx_ch_sh_ing_n {[{b} {d} {hh} {v} {zh} {l} {m} {z} {dh} {g} {w}]}}} {ch}]} {[{ch} {{any_Cx_ch_sh_ing_n {[{b} {d} {hh} {v} {zh} {l} {m} {z} {dh} {g} {w}]}}}]}]}]}]}
Closing rule:
guard: n
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {n}]}} {{[{n} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_ch_ing_n {[{g} {hh} {w} {z} {zh} {m} {b} {d} {dh} {l} {v}]}}} {n}]}} {{[{n} {{any_Cx_ch_ing_n {[{g} {hh} {w} {z} {zh} {m} {b} {d} {dh} {l} {v}]}}}]}}]} {sil}]}
rule 2 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: d
rule: {d {[{sil} {{[{[{d} {{any_Cx_m_d_p {[{v} {z} {b} {hh} {g} {l} {ch} {dh} {w} {zh}]}}}]} {[{{any_Cx_m_d_p {[{v} {z} {b} {hh} {g} {l} {ch} {dh} {w} {zh}]}}} {d}]}]}} {{[{[{d} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]} {[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {d}]}]}}]}}
Phoneme rule:
guard: sh phoneme: m
rule: {[{[{{[{{any_Cx_sh_p_d_m {[{ch} {g} {l} {b} {v} {z} {dh} {hh} {w} {zh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_p_d_m {[{ch} {g} {l} {b} {v} {z} {dh} {hh} {w} {zh}]}}}]}}]} {[{m} {[{[{{any_Cx_sh_p_d_m {[{ch} {g} {l} {b} {v} {z} {dh} {hh} {w} {zh}]}}} {sh}]} {[{sh} {{any_Cx_sh_p_d_m {[{ch} {g} {l} {b} {v} {z} {dh} {hh} {w} {zh}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: iy
rule: {[{[{[{{[{{any_Vx_sh_sh_iy_noSlide {[{y} {ah} {ao} {ih} {uw} {uh} {aa} {ae} {ax} {eh} {oh}]}}} {sh}]}} {{[{sh} {{any_Vx_sh_sh_iy_noSlide {[{y} {ah} {ao} {ih} {uw} {uh} {aa} {ae} {ax} {eh} {oh}]}}}]}}]} {[{{[{{any_Cx_sh_sh_n_m {[{g} {w} {b} {l} {zh} {ch} {v} {z} {hh} {dh} {d}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_n_m {[{g} {w} {b} {l} {zh} {ch} {v} {z} {hh} {dh} {d}]}}}]}}]}]} {[{iy} {[{[{{any_Vx_sh_sh_iy_noSlide {[{y} {ah} {ao} {ih} {uw} {uh} {aa} {ae} {ax} {eh} {oh}]}}} {sh}]} {[{sh} {{any_Vx_sh_sh_iy_noSlide {[{y} {ah} {ao} {ih} {uw} {uh} {aa} {ae} {ax} {eh} {oh}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: n
rule: {[{[{{[{{any_Cx_sh_sh_n {[{ch} {hh} {z} {d} {dh} {g} {w} {m} {v} {zh} {l} {b}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_n {[{ch} {hh} {z} {d} {dh} {g} {w} {m} {v} {zh} {l} {b}]}}}]}}]} {[{n} {[{[{{any_Cx_sh_sh_n_ing {[{d} {w} {zh} {g} {hh} {l} {m} {z} {b} {v} {ch} {dh}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_n_ing {[{d} {w} {zh} {g} {hh} {l} {m} {z} {b} {v} {ch} {dh}]}}}]}]}]}]}
Phoneme rule:
guard: jh phoneme: ing
rule: {[{[{{[{{any_Cx_jh_sh_ing_n {[{g} {w} {b} {ch} {hh} {m} {v} {l} {d} {dh} {z} {zh}]}}} {jh}]}} {{[{jh} {{any_Cx_jh_sh_ing_n {[{g} {w} {b} {ch} {hh} {m} {v} {l} {d} {dh} {z} {zh}]}}}]}}]} {[{ing} {[{[{{any_Cx_jh_sh_ing_n {[{g} {w} {b} {ch} {hh} {m} {v} {l} {d} {dh} {z} {zh}]}}} {jh}]} {[{jh} {{any_Cx_jh_sh_ing_n {[{g} {w} {b} {ch} {hh} {m} {v} {l} {d} {dh} {z} {zh}]}}}]}]}]}]}
Closing rule:
guard: ng
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {ng}]}} {{[{ng} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_jh_ing_ng {[{b} {hh} {g} {l} {m} {ch} {w} {d} {dh} {v} {z} {zh}]}}} {ng}]}} {{[{ng} {{any_Cx_jh_ing_ng {[{b} {hh} {g} {l} {m} {ch} {w} {d} {dh} {v} {z} {zh}]}}}]}}]} {sil}]}
rule 3 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: l
rule: {l {[{sil} {{[{[{l} {{any_Cx_m_l_p {[{hh} {z} {v} {zh} {g} {b} {d} {w} {ch} {dh}]}}}]} {[{{any_Cx_m_l_p {[{hh} {z} {v} {zh} {g} {b} {d} {w} {ch} {dh}]}}} {l}]}]}} {{[{[{l} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]} {[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {l}]}]}}]}}
Phoneme rule:
guard: sh phoneme: m
rule: {[{[{{[{{any_Cx_sh_p_l_m {[{dh} {g} {w} {b} {v} {z} {ch} {d} {hh} {zh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_p_l_m {[{dh} {g} {w} {b} {v} {z} {ch} {d} {hh} {zh}]}}}]}}]} {[{m} {[{[{{any_Cx_sh_p_l_m {[{dh} {g} {w} {b} {v} {z} {ch} {d} {hh} {zh}]}}} {sh}]} {[{sh} {{any_Cx_sh_p_l_m {[{dh} {g} {w} {b} {v} {z} {ch} {d} {hh} {zh}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: iy
rule: {[{[{[{{[{{any_Vx_sh_sh_iy_noSlide {[{ah} {eh} {ih} {oh} {uw} {y} {aa} {ae} {ao} {ax} {uh}]}}} {sh}]}} {{[{sh} {{any_Vx_sh_sh_iy_noSlide {[{ah} {eh} {ih} {oh} {uw} {y} {aa} {ae} {ao} {ax} {uh}]}}}]}}]} {[{{[{{any_Cx_sh_sh_n_m {[{zh} {b} {hh} {g} {z} {dh} {w} {d} {l} {v} {ch}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_n_m {[{zh} {b} {hh} {g} {z} {dh} {w} {d} {l} {v} {ch}]}}}]}}]}]} {[{iy} {[{[{{any_Vx_sh_sh_iy_noSlide {[{ah} {eh} {ih} {oh} {uw} {y} {aa} {ae} {ao} {ax} {uh}]}}} {sh}]} {[{sh} {{any_Vx_sh_sh_iy_noSlide {[{ah} {eh} {ih} {oh} {uw} {y} {aa} {ae} {ao} {ax} {uh}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: n
rule: {[{[{{[{{any_Cx_sh_sh_n {[{w} {dh} {v} {d} {ch} {m} {zh} {g} {hh} {l} {b} {z}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_n {[{w} {dh} {v} {d} {ch} {m} {zh} {g} {hh} {l} {b} {z}]}}}]}}]} {[{n} {[{[{{any_Cx_sh_sh_n_ing {[{g} {hh} {z} {dh} {ch} {l} {m} {b} {v} {zh} {w} {d}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_n_ing {[{g} {hh} {z} {dh} {ch} {l} {m} {b} {v} {zh} {w} {d}]}}}]}]}]}]}
Phoneme rule:
guard: jh phoneme: ing
rule: {[{[{{[{{any_Cx_jh_sh_ing_n {[{ch} {b} {z} {d} {g} {m} {v} {zh} {hh} {dh} {w} {l}]}}} {jh}]}} {{[{jh} {{any_Cx_jh_sh_ing_n {[{ch} {b} {z} {d} {g} {m} {v} {zh} {hh} {dh} {w} {l}]}}}]}}]} {[{ing} {[{[{{any_Cx_jh_sh_ing_n {[{ch} {b} {z} {d} {g} {m} {v} {zh} {hh} {dh} {w} {l}]}}} {jh}]} {[{jh} {{any_Cx_jh_sh_ing_n {[{ch} {b} {z} {d} {g} {m} {v} {zh} {hh} {dh} {w} {l}]}}}]}]}]}]}
Closing rule:
guard: p
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {p}]}} {{[{p} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_jh_ing_p {[{ch} {v} {g} {hh} {w} {d} {dh} {z} {b} {l} {m} {zh}]}}} {p}]}} {{[{p} {{any_Cx_jh_ing_p {[{ch} {v} {g} {hh} {w} {d} {dh} {z} {b} {l} {m} {zh}]}}}]}}]} {sil}]}
rule 4 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: l
rule: {l {[{sil} {{[{[{l} {{any_Cx_m_l_p {[{g} {w} {z} {dh} {v} {b} {ch} {d} {zh} {hh}]}}}]} {[{{any_Cx_m_l_p {[{g} {w} {z} {dh} {v} {b} {ch} {d} {zh} {hh}]}}} {l}]}]}} {{[{[{l} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]} {[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {l}]}]}}]}}
Phoneme rule:
guard: sh phoneme: m
rule: {[{[{{[{{any_Cx_sh_p_l_m {[{g} {b} {ch} {hh} {v} {d} {zh} {dh} {z} {w}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_p_l_m {[{g} {b} {ch} {hh} {v} {d} {zh} {dh} {z} {w}]}}}]}}]} {[{m} {[{[{{any_Cx_sh_p_l_m {[{g} {b} {ch} {hh} {v} {d} {zh} {dh} {z} {w}]}}} {sh}]} {[{sh} {{any_Cx_sh_p_l_m {[{g} {b} {ch} {hh} {v} {d} {zh} {dh} {z} {w}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: iy
rule: {[{[{[{{[{{any_Vx_sh_sh_iy_noSlide {[{ah} {eh} {oh} {uw} {uh} {aa} {ao} {ax} {ih} {y} {ae}]}}} {sh}]}} {{[{sh} {{any_Vx_sh_sh_iy_noSlide {[{ah} {eh} {oh} {uw} {uh} {aa} {ao} {ax} {ih} {y} {ae}]}}}]}}]} {[{{[{{any_Cx_sh_sh_n_m {[{z} {d} {ch} {l} {zh} {b} {v} {dh} {g} {w} {hh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_n_m {[{z} {d} {ch} {l} {zh} {b} {v} {dh} {g} {w} {hh}]}}}]}}]}]} {[{iy} {[{[{{any_Vx_sh_sh_iy_noSlide {[{ah} {eh} {oh} {uw} {uh} {aa} {ao} {ax} {ih} {y} {ae}]}}} {sh}]} {[{sh} {{any_Vx_sh_sh_iy_noSlide {[{ah} {eh} {oh} {uw} {uh} {aa} {ao} {ax} {ih} {y} {ae}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: n
rule: {[{[{{[{{any_Cx_sh_sh_n {[{zh} {b} {hh} {v} {w} {z} {dh} {m} {ch} {d} {g} {l}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_n {[{zh} {b} {hh} {v} {w} {z} {dh} {m} {ch} {d} {g} {l}]}}}]}}]} {[{n} {[{[{{any_Cx_sh_sh_n_ing {[{d} {l} {z} {v} {zh} {ch} {hh} {g} {dh} {w} {m} {b}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_n_ing {[{d} {l} {z} {v} {zh} {ch} {hh} {g} {dh} {w} {m} {b}]}}}]}]}]}]}
Phoneme rule:
guard: jh phoneme: ing
rule: {[{[{{[{{any_Cx_jh_sh_ing_n {[{w} {zh} {hh} {v} {b} {ch} {d} {dh} {g} {l} {z} {m}]}}} {jh}]}} {{[{jh} {{any_Cx_jh_sh_ing_n {[{w} {zh} {hh} {v} {b} {ch} {d} {dh} {g} {l} {z} {m}]}}}]}}]} {[{ing} {[{[{{any_Cx_jh_sh_ing_n {[{w} {zh} {hh} {v} {b} {ch} {d} {dh} {g} {l} {z} {m}]}}} {jh}]} {[{jh} {{any_Cx_jh_sh_ing_n {[{w} {zh} {hh} {v} {b} {ch} {d} {dh} {g} {l} {z} {m}]}}}]}]}]}]}
Closing rule:
guard: ng
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {ng}]}} {{[{ng} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_jh_ing_ng {[{ch} {d} {b} {dh} {l} {hh} {m} {z} {v} {w} {g} {zh}]}}} {ng}]}} {{[{ng} {{any_Cx_jh_ing_ng {[{ch} {d} {b} {dh} {l} {hh} {m} {z} {v} {w} {g} {zh}]}}}]}}]} {sil}]}

parse: err = Parser error
Mapped result =
result 0 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 1 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 2 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 3 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 4 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false

Rules =
rule 0 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: v
rule: {v {[{sil} {{[{[{v} {{any_Cx_m_v_p {[{g} {dh} {d} {l} {ch} {hh} {w} {z} {zh} {b}]}}}]} {[{{any_Cx_m_v_p {[{g} {dh} {d} {l} {ch} {hh} {w} {z} {zh} {b}]}}} {v}]}]}} {{[{[{v} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]} {[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {v}]}]}}]}}
Phoneme rule:
guard: sh phoneme: m
rule: {[{[{{[{{any_Cx_sh_p_v_m {[{g} {z} {l} {hh} {w} {zh} {b} {ch} {dh} {d}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_p_v_m {[{g} {z} {l} {hh} {w} {zh} {b} {ch} {dh} {d}]}}}]}}]} {[{m} {[{[{{any_Cx_sh_p_v_m {[{g} {z} {l} {hh} {w} {zh} {b} {ch} {dh} {d}]}}} {sh}]} {[{sh} {{any_Cx_sh_p_v_m {[{g} {z} {l} {hh} {w} {zh} {b} {ch} {dh} {d}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: iy
rule: {[{[{[{{[{{any_Vx_sh_sh_iy_noSlide {[{ax} {eh} {uw} {aa} {ae} {ao} {uh} {y} {ah} {ih} {oh}]}}} {sh}]}} {{[{sh} {{any_Vx_sh_sh_iy_noSlide {[{ax} {eh} {uw} {aa} {ae} {ao} {uh} {y} {ah} {ih} {oh}]}}}]}}]} {[{{[{{any_Cx_sh_sh_n_m {[{dh} {hh} {b} {w} {zh} {l} {z} {ch} {g} {d} {v}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_n_m {[{dh} {hh} {b} {w} {zh} {l} {z} {ch} {g} {d} {v}]}}}]}}]}]} {[{iy} {[{[{{any_Vx_sh_sh_iy_noSlide {[{ax} {eh} {uw} {aa} {ae} {ao} {uh} {y} {ah} {ih} {oh}]}}} {sh}]} {[{sh} {{any_Vx_sh_sh_iy_noSlide {[{ax} {eh} {uw} {aa} {ae} {ao} {uh} {y} {ah} {ih} {oh}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: n
rule: {[{[{{[{{any_Cx_sh_sh_n {[{d} {g} {ch} {zh} {hh} {w} {z} {dh} {b} {m} {l} {v}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_n {[{d} {g} {ch} {zh} {hh} {w} {z} {dh} {b} {m} {l} {v}]}}}]}}]} {[{n} {[{[{{any_Cx_sh_sh_n_ing {[{b} {g} {w} {hh} {zh} {l} {z} {dh} {m} {v} {ch} {d}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_n_ing {[{b} {g} {w} {hh} {zh} {l} {z} {dh} {m} {v} {ch} {d}]}}}]}]}]}]}
Phoneme rule:
guard: jh phoneme: ing
rule: {[{[{{[{{any_Cx_jh_sh_ing_n {[{g} {ch} {dh} {m} {z} {d} {l} {v} {zh} {b} {hh} {w}]}}} {jh}]}} {{[{jh} {{any_Cx_jh_sh_ing_n {[{g} {ch} {dh} {m} {z} {d} {l} {v} {zh} {b} {hh} {w}]}}}]}}]} {[{ing} {[{[{{any_Cx_jh_sh_ing_n {[{g} {ch} {dh} {m} {z} {d} {l} {v} {zh} {b} {hh} {w}]}}} {jh}]} {[{jh} {{any_Cx_jh_sh_ing_n {[{g} {ch} {dh} {m} {z} {d} {l} {v} {zh} {b} {hh} {w}]}}}]}]}]}]}
Closing rule:
guard: p
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {p}]}} {{[{p} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_jh_ing_p {[{l} {z} {m} {ch} {w} {hh} {v} {zh} {g} {dh} {b} {d}]}}} {p}]}} {{[{p} {{any_Cx_jh_ing_p {[{l} {z} {m} {ch} {w} {hh} {v} {zh} {g} {dh} {b} {d}]}}}]}}]} {sil}]}
rule 1 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: l
rule: {l {[{sil} {{[{[{l} {{any_Cx_m_l_p {[{ch} {g} {z} {zh} {w} {dh} {hh} {v} {b} {d}]}}}]} {[{{any_Cx_m_l_p {[{ch} {g} {z} {zh} {w} {dh} {hh} {v} {b} {d}]}}} {l}]}]}} {{[{[{l} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]} {[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {l}]}]}}]}}
Phoneme rule:
guard: sh phoneme: m
rule: {[{[{{[{{any_Cx_sh_p_l_m {[{v} {w} {dh} {hh} {zh} {ch} {g} {d} {z} {b}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_p_l_m {[{v} {w} {dh} {hh} {zh} {ch} {g} {d} {z} {b}]}}}]}}]} {[{m} {[{[{{any_Cx_sh_p_l_m {[{v} {w} {dh} {hh} {zh} {ch} {g} {d} {z} {b}]}}} {sh}]} {[{sh} {{any_Cx_sh_p_l_m {[{v} {w} {dh} {hh} {zh} {ch} {g} {d} {z} {b}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: iy
rule: {[{[{[{{[{{any_Vx_sh_sh_iy_noSlide {[{uw} {uh} {y} {aa} {ae} {ax} {eh} {oh} {ah} {ao} {ih}]}}} {sh}]}} {{[{sh} {{any_Vx_sh_sh_iy_noSlide {[{uw} {uh} {y} {aa} {ae} {ax} {eh} {oh} {ah} {ao} {ih}]}}}]}}]} {[{{[{{any_Cx_sh_sh_n_m {[{l} {ch} {g} {dh} {b} {z} {v} {zh} {d} {hh} {w}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_n_m {[{l} {ch} {g} {dh} {b} {z} {v} {zh} {d} {hh} {w}]}}}]}}]}]} {[{iy} {[{[{{any_Vx_sh_sh_iy_noSlide {[{uw} {uh} {y} {aa} {ae} {ax} {eh} {oh} {ah} {ao} {ih}]}}} {sh}]} {[{sh} {{any_Vx_sh_sh_iy_noSlide {[{uw} {uh} {y} {aa} {ae} {ax} {eh} {oh} {ah} {ao} {ih}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: n
rule: {[{[{{[{{any_Cx_sh_sh_n {[{hh} {w} {ch} {dh} {g} {b} {m} {z} {zh} {d} {l} {v}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_n {[{hh} {w} {ch} {dh} {g} {b} {m} {z} {zh} {d} {l} {v}]}}}]}}]} {[{n} {[{[{{any_Cx_sh_sh_n_ing {[{d} {z} {ch} {zh} {dh} {m} {hh} {v} {b} {g} {l} {w}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_n_ing {[{d} {z} {ch} {zh} {dh} {m} {hh} {v} {b} {g} {l} {w}]}}}]}]}]}]}
Phoneme rule:
guard: ch phoneme: ing
rule: {[{[{{[{{any_Cx_ch_sh_ing_n {[{b} {d} {hh} {v} {zh} {l} {m} {z} {dh} {g} {w}]}}} {ch}]}} {{[{ch} {{any_Cx_ch_sh_ing_n {[{b} {d} {hh} {v} {zh} {l} {m} {z} {dh} {g} {w}]}}}]}}]} {[{ing} {[{[{{any_Cx_ch_sh_ing_n {[{b} {d} {hh} {v} {zh} {l} {m} {z} {dh} {g} {w}]}}} {ch}]} {[{ch} {{any_Cx_ch_sh_ing_n {[{b} {d} {hh} {v} {zh} {l} {m} {z} {dh} {g} {w}]}}}]}]}]}]}
Closing rule:
guard: n
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {n}]}} {{[{n} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_ch_ing_n {[{g} {hh} {w} {z} {zh} {m} {b} {d} {dh} {l} {v}]}}} {n}]}} {{[{n} {{any_Cx_ch_ing_n {[{g} {hh} {w} {z} {zh} {m} {b} {d} {dh} {l} {v}]}}}]}}]} {sil}]}
rule 2 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: d
rule: {d {[{sil} {{[{[{d} {{any_Cx_m_d_p {[{v} {z} {b} {hh} {g} {l} {ch} {dh} {w} {zh}]}}}]} {[{{any_Cx_m_d_p {[{v} {z} {b} {hh} {g} {l} {ch} {dh} {w} {zh}]}}} {d}]}]}} {{[{[{d} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]} {[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {d}]}]}}]}}
Phoneme rule:
guard: sh phoneme: m
rule: {[{[{{[{{any_Cx_sh_p_d_m {[{ch} {g} {l} {b} {v} {z} {dh} {hh} {w} {zh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_p_d_m {[{ch} {g} {l} {b} {v} {z} {dh} {hh} {w} {zh}]}}}]}}]} {[{m} {[{[{{any_Cx_sh_p_d_m {[{ch} {g} {l} {b} {v} {z} {dh} {hh} {w} {zh}]}}} {sh}]} {[{sh} {{any_Cx_sh_p_d_m {[{ch} {g} {l} {b} {v} {z} {dh} {hh} {w} {zh}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: iy
rule: {[{[{[{{[{{any_Vx_sh_sh_iy_noSlide {[{y} {ah} {ao} {ih} {uw} {uh} {aa} {ae} {ax} {eh} {oh}]}}} {sh}]}} {{[{sh} {{any_Vx_sh_sh_iy_noSlide {[{y} {ah} {ao} {ih} {uw} {uh} {aa} {ae} {ax} {eh} {oh}]}}}]}}]} {[{{[{{any_Cx_sh_sh_n_m {[{g} {w} {b} {l} {zh} {ch} {v} {z} {hh} {dh} {d}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_n_m {[{g} {w} {b} {l} {zh} {ch} {v} {z} {hh} {dh} {d}]}}}]}}]}]} {[{iy} {[{[{{any_Vx_sh_sh_iy_noSlide {[{y} {ah} {ao} {ih} {uw} {uh} {aa} {ae} {ax} {eh} {oh}]}}} {sh}]} {[{sh} {{any_Vx_sh_sh_iy_noSlide {[{y} {ah} {ao} {ih} {uw} {uh} {aa} {ae} {ax} {eh} {oh}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: n
rule: {[{[{{[{{any_Cx_sh_sh_n {[{ch} {hh} {z} {d} {dh} {g} {w} {m} {v} {zh} {l} {b}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_n {[{ch} {hh} {z} {d} {dh} {g} {w} {m} {v} {zh} {l} {b}]}}}]}}]} {[{n} {[{[{{any_Cx_sh_sh_n_ing {[{d} {w} {zh} {g} {hh} {l} {m} {z} {b} {v} {ch} {dh}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_n_ing {[{d} {w} {zh} {g} {hh} {l} {m} {z} {b} {v} {ch} {dh}]}}}]}]}]}]}
Phoneme rule:
guard: jh phoneme: ing
rule: {[{[{{[{{any_Cx_jh_sh_ing_n {[{g} {w} {b} {ch} {hh} {m} {v} {l} {d} {dh} {z} {zh}]}}} {jh}]}} {{[{jh} {{any_Cx_jh_sh_ing_n {[{g} {w} {b} {ch} {hh} {m} {v} {l} {d} {dh} {z} {zh}]}}}]}}]} {[{ing} {[{[{{any_Cx_jh_sh_ing_n {[{g} {w} {b} {ch} {hh} {m} {v} {l} {d} {dh} {z} {zh}]}}} {jh}]} {[{jh} {{any_Cx_jh_sh_ing_n {[{g} {w} {b} {ch} {hh} {m} {v} {l} {d} {dh} {z} {zh}]}}}]}]}]}]}
Closing rule:
guard: ng
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {ng}]}} {{[{ng} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_jh_ing_ng {[{b} {hh} {g} {l} {m} {ch} {w} {d} {dh} {v} {z} {zh}]}}} {ng}]}} {{[{ng} {{any_Cx_jh_ing_ng {[{b} {hh} {g} {l} {m} {ch} {w} {d} {dh} {v} {z} {zh}]}}}]}}]} {sil}]}
rule 3 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: l
rule: {l {[{sil} {{[{[{l} {{any_Cx_m_l_p {[{hh} {z} {v} {zh} {g} {b} {d} {w} {ch} {dh}]}}}]} {[{{any_Cx_m_l_p {[{hh} {z} {v} {zh} {g} {b} {d} {w} {ch} {dh}]}}} {l}]}]}} {{[{[{l} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]} {[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {l}]}]}}]}}
Phoneme rule:
guard: sh phoneme: m
rule: {[{[{{[{{any_Cx_sh_p_l_m {[{dh} {g} {w} {b} {v} {z} {ch} {d} {hh} {zh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_p_l_m {[{dh} {g} {w} {b} {v} {z} {ch} {d} {hh} {zh}]}}}]}}]} {[{m} {[{[{{any_Cx_sh_p_l_m {[{dh} {g} {w} {b} {v} {z} {ch} {d} {hh} {zh}]}}} {sh}]} {[{sh} {{any_Cx_sh_p_l_m {[{dh} {g} {w} {b} {v} {z} {ch} {d} {hh} {zh}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: iy
rule: {[{[{[{{[{{any_Vx_sh_sh_iy_noSlide {[{ah} {eh} {ih} {oh} {uw} {y} {aa} {ae} {ao} {ax} {uh}]}}} {sh}]}} {{[{sh} {{any_Vx_sh_sh_iy_noSlide {[{ah} {eh} {ih} {oh} {uw} {y} {aa} {ae} {ao} {ax} {uh}]}}}]}}]} {[{{[{{any_Cx_sh_sh_n_m {[{zh} {b} {hh} {g} {z} {dh} {w} {d} {l} {v} {ch}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_n_m {[{zh} {b} {hh} {g} {z} {dh} {w} {d} {l} {v} {ch}]}}}]}}]}]} {[{iy} {[{[{{any_Vx_sh_sh_iy_noSlide {[{ah} {eh} {ih} {oh} {uw} {y} {aa} {ae} {ao} {ax} {uh}]}}} {sh}]} {[{sh} {{any_Vx_sh_sh_iy_noSlide {[{ah} {eh} {ih} {oh} {uw} {y} {aa} {ae} {ao} {ax} {uh}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: n
rule: {[{[{{[{{any_Cx_sh_sh_n {[{w} {dh} {v} {d} {ch} {m} {zh} {g} {hh} {l} {b} {z}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_n {[{w} {dh} {v} {d} {ch} {m} {zh} {g} {hh} {l} {b} {z}]}}}]}}]} {[{n} {[{[{{any_Cx_sh_sh_n_ing {[{g} {hh} {z} {dh} {ch} {l} {m} {b} {v} {zh} {w} {d}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_n_ing {[{g} {hh} {z} {dh} {ch} {l} {m} {b} {v} {zh} {w} {d}]}}}]}]}]}]}
Phoneme rule:
guard: jh phoneme: ing
rule: {[{[{{[{{any_Cx_jh_sh_ing_n {[{ch} {b} {z} {d} {g} {m} {v} {zh} {hh} {dh} {w} {l}]}}} {jh}]}} {{[{jh} {{any_Cx_jh_sh_ing_n {[{ch} {b} {z} {d} {g} {m} {v} {zh} {hh} {dh} {w} {l}]}}}]}}]} {[{ing} {[{[{{any_Cx_jh_sh_ing_n {[{ch} {b} {z} {d} {g} {m} {v} {zh} {hh} {dh} {w} {l}]}}} {jh}]} {[{jh} {{any_Cx_jh_sh_ing_n {[{ch} {b} {z} {d} {g} {m} {v} {zh} {hh} {dh} {w} {l}]}}}]}]}]}]}
Closing rule:
guard: p
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {p}]}} {{[{p} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_jh_ing_p {[{ch} {v} {g} {hh} {w} {d} {dh} {z} {b} {l} {m} {zh}]}}} {p}]}} {{[{p} {{any_Cx_jh_ing_p {[{ch} {v} {g} {hh} {w} {d} {dh} {z} {b} {l} {m} {zh}]}}}]}}]} {sil}]}
rule 4 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: l
rule: {l {[{sil} {{[{[{l} {{any_Cx_m_l_p {[{g} {w} {z} {dh} {v} {b} {ch} {d} {zh} {hh}]}}}]} {[{{any_Cx_m_l_p {[{g} {w} {z} {dh} {v} {b} {ch} {d} {zh} {hh}]}}} {l}]}]}} {{[{[{l} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]} {[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {l}]}]}}]}}
Phoneme rule:
guard: sh phoneme: m
rule: {[{[{{[{{any_Cx_sh_p_l_m {[{g} {b} {ch} {hh} {v} {d} {zh} {dh} {z} {w}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_p_l_m {[{g} {b} {ch} {hh} {v} {d} {zh} {dh} {z} {w}]}}}]}}]} {[{m} {[{[{{any_Cx_sh_p_l_m {[{g} {b} {ch} {hh} {v} {d} {zh} {dh} {z} {w}]}}} {sh}]} {[{sh} {{any_Cx_sh_p_l_m {[{g} {b} {ch} {hh} {v} {d} {zh} {dh} {z} {w}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: iy
rule: {[{[{[{{[{{any_Vx_sh_sh_iy_noSlide {[{ah} {eh} {oh} {uw} {uh} {aa} {ao} {ax} {ih} {y} {ae}]}}} {sh}]}} {{[{sh} {{any_Vx_sh_sh_iy_noSlide {[{ah} {eh} {oh} {uw} {uh} {aa} {ao} {ax} {ih} {y} {ae}]}}}]}}]} {[{{[{{any_Cx_sh_sh_n_m {[{z} {d} {ch} {l} {zh} {b} {v} {dh} {g} {w} {hh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_n_m {[{z} {d} {ch} {l} {zh} {b} {v} {dh} {g} {w} {hh}]}}}]}}]}]} {[{iy} {[{[{{any_Vx_sh_sh_iy_noSlide {[{ah} {eh} {oh} {uw} {uh} {aa} {ao} {ax} {ih} {y} {ae}]}}} {sh}]} {[{sh} {{any_Vx_sh_sh_iy_noSlide {[{ah} {eh} {oh} {uw} {uh} {aa} {ao} {ax} {ih} {y} {ae}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: n
rule: {[{[{{[{{any_Cx_sh_sh_n {[{zh} {b} {hh} {v} {w} {z} {dh} {m} {ch} {d} {g} {l}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_n {[{zh} {b} {hh} {v} {w} {z} {dh} {m} {ch} {d} {g} {l}]}}}]}}]} {[{n} {[{[{{any_Cx_sh_sh_n_ing {[{d} {l} {z} {v} {zh} {ch} {hh} {g} {dh} {w} {m} {b}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_n_ing {[{d} {l} {z} {v} {zh} {ch} {hh} {g} {dh} {w} {m} {b}]}}}]}]}]}]}
Phoneme rule:
guard: jh phoneme: ing
rule: {[{[{{[{{any_Cx_jh_sh_ing_n {[{w} {zh} {hh} {v} {b} {ch} {d} {dh} {g} {l} {z} {m}]}}} {jh}]}} {{[{jh} {{any_Cx_jh_sh_ing_n {[{w} {zh} {hh} {v} {b} {ch} {d} {dh} {g} {l} {z} {m}]}}}]}}]} {[{ing} {[{[{{any_Cx_jh_sh_ing_n {[{w} {zh} {hh} {v} {b} {ch} {d} {dh} {g} {l} {z} {m}]}}} {jh}]} {[{jh} {{any_Cx_jh_sh_ing_n {[{w} {zh} {hh} {v} {b} {ch} {d} {dh} {g} {l} {z} {m}]}}}]}]}]}]}
Closing rule:
guard: ng
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {ng}]}} {{[{ng} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_jh_ing_ng {[{ch} {d} {b} {dh} {l} {hh} {m} {z} {v} {w} {g} {zh}]}}} {ng}]}} {{[{ng} {{any_Cx_jh_ing_ng {[{ch} {d} {b} {dh} {l} {hh} {m} {z} {v} {w} {g} {zh}]}}}]}}]} {sil}]}

parse: err = Parser error
ruleAligned = [{{m 1} [{2 1} {3 1} {4 1}]} {{iy 2} [{4 2}]} {{n 1} [{2 4} {3 4} {4 3}]} {{ing 2} [{3 5}]}]

results (after rule-alignment) =
{72 []}
{80 []}
{91 [{sil 0 0} {m 16 35} {ao 36 57} {sh 58 58} {n 62 78} {ing 79 79} {ih 82 102} {ng 103 136} {sil 137 137}]}
{105 [{sil 0 0} {m 18 35} {ao 36 58} {sh 59 59} {n 62 80} {ing 81 137} {sil 138 138}]}
{125 [{sil 3 3} {m 18 35} {iy 36 58} {n 59 80} {ing 81 81} {ih 83 105} {ng 106 133} {sil 134 134}]}

timeAligned = [{{m 18 35} [{2 1} {3 1} {4 1}]} {{n 62 78} [{2 4} {3 4} {4 3}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 -1 35
i, iTime, newITime, timeStartFrom = 2 0 1 35
i, iTime, newITime, timeStartFrom = 3 1 -1 78
combinedVerdict    = [{m 1} {iy 2} {n 1} {ing 2}]
ruleAlignedVerdict = [{m 1} {iy 2} {n 1} {ing 2}]

score->
+1 for m
-1 for iy
+1 for n
-1 for ing
score<-: 0

results =
{72 []}
{80 []}
{91 [{sil 0 14} {m 15 32} {ao 33 52} {sh 53 55} {n 56 72} {ih 73 93} {ng 94 124} {sil 125 172}]}
{105 [{sil 0 18} {m 19 37} {ao 38 61} {sh 62 64} {n 65 83} {ih 84 108} {ng 109 143} {sil 144 200}]}
{125 [{sil 3 22} {m 23 44} {iy 45 73} {n 74 100} {ih 101 131} {ng 132 166} {sil 167 239}]}

normalised results =
{72 []}
{80 []}
{91 [{sil 0 14} {m 16 35} {ao 36 57} {sh 58 58} {n 62 79} {ih 80 102} {ng 103 136} {sil 137 189}]}
{105 [{sil 0 18} {m 18 35} {ao 36 58} {sh 59 59} {n 62 79} {ih 80 103} {ng 104 136} {sil 137 190}]}
{125 [{sil 3 22} {m 18 35} {iy 36 58} {n 59 80} {ih 81 105} {ng 106 133} {sil 134 191}]}

Mapped result =
result 0 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 1 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 2 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 3 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 4 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false

Rules =
rule 0 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: d
rule: {d {[{sil} {{[{[{d} {{any_Cx_m_d_p {[{ch} {l} {z} {hh} {w} {zh} {b} {dh} {g} {v}]}}}]} {[{{any_Cx_m_d_p {[{ch} {l} {z} {hh} {w} {zh} {b} {dh} {g} {v}]}}} {d}]}]}} {{[{[{d} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]} {[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {d}]}]}}]}}
Phoneme rule:
guard: sh phoneme: m
rule: {[{[{{[{{any_Cx_sh_p_d_m {[{v} {z} {zh} {g} {hh} {w} {b} {ch} {dh} {l}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_p_d_m {[{v} {z} {zh} {g} {hh} {w} {b} {ch} {dh} {l}]}}}]}}]} {[{m} {[{[{{any_Cx_sh_p_d_m {[{v} {z} {zh} {g} {hh} {w} {b} {ch} {dh} {l}]}}} {sh}]} {[{sh} {{any_Cx_sh_p_d_m {[{v} {z} {zh} {g} {hh} {w} {b} {ch} {dh} {l}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: iy
rule: {[{[{[{{[{{any_Vx_sh_sh_iy_noSlide {[{uw} {uh} {y} {ah} {ao} {ih} {eh} {oh} {aa} {ae} {ax}]}}} {sh}]}} {{[{sh} {{any_Vx_sh_sh_iy_noSlide {[{uw} {uh} {y} {ah} {ao} {ih} {eh} {oh} {aa} {ae} {ax}]}}}]}}]} {[{{[{{any_Cx_sh_sh_n_m {[{v} {z} {hh} {g} {zh} {w} {ch} {l} {dh} {b} {d}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_n_m {[{v} {z} {hh} {g} {zh} {w} {ch} {l} {dh} {b} {d}]}}}]}}]}]} {[{iy} {[{[{{any_Vx_sh_sh_iy_noSlide {[{uw} {uh} {y} {ah} {ao} {ih} {eh} {oh} {aa} {ae} {ax}]}}} {sh}]} {[{sh} {{any_Vx_sh_sh_iy_noSlide {[{uw} {uh} {y} {ah} {ao} {ih} {eh} {oh} {aa} {ae} {ax}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: n
rule: {[{[{{[{{any_Cx_sh_sh_n {[{z} {g} {dh} {l} {w} {ch} {zh} {hh} {b} {m} {v} {d}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_n {[{z} {g} {dh} {l} {w} {ch} {zh} {hh} {b} {m} {v} {d}]}}}]}}]} {[{n} {[{[{{any_Cx_sh_sh_n {[{z} {g} {dh} {l} {w} {ch} {zh} {hh} {b} {m} {v} {d}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_n {[{z} {g} {dh} {l} {w} {ch} {zh} {hh} {b} {m} {v} {d}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ih
rule: {[{[{[{{[{{any_Vx_sh_sh_ih_noSlide {[{eh} {uw} {ah} {ao} {ax} {iy} {oh} {uh} {y} {aa} {ae}]}}} {sh}]}} {{[{sh} {{any_Vx_sh_sh_ih_noSlide {[{eh} {uw} {ah} {ao} {ax} {iy} {oh} {uh} {y} {aa} {ae}]}}}]}}]} {[{{[{{any_Cx_sh_sh_ng_n {[{g} {l} {b} {hh} {d} {dh} {v} {z} {w} {zh} {ch} {m}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_ng_n {[{g} {l} {b} {hh} {d} {dh} {v} {z} {w} {zh} {ch} {m}]}}}]}}]}]} {[{ih} {[{[{{any_Vx_sh_sh_ih_noSlide {[{eh} {uw} {ah} {ao} {ax} {iy} {oh} {uh} {y} {aa} {ae}]}}} {sh}]} {[{sh} {{any_Vx_sh_sh_ih_noSlide {[{eh} {uw} {ah} {ao} {ax} {iy} {oh} {uh} {y} {aa} {ae}]}}}]}]}]}]}
Phoneme rule:
guard: z phoneme: ng
rule: {[{[{{[{{any_Cx_z_sh_ng {[{dh} {v} {w} {ch} {l} {hh} {g} {m} {zh} {d} {b}]}}} {z}]}} {{[{z} {{any_Cx_z_sh_ng {[{dh} {v} {w} {ch} {l} {hh} {g} {m} {zh} {d} {b}]}}}]}}]} {[{ng} {[{[{{any_Cx_z_sh_ng {[{dh} {v} {w} {ch} {l} {hh} {g} {m} {zh} {d} {b}]}}} {z}]} {[{z} {{any_Cx_z_sh_ng {[{dh} {v} {w} {ch} {l} {hh} {g} {m} {zh} {d} {b}]}}}]}]}]}]}
Closing rule:
guard: hh
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {hh}]}} {{[{hh} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_z_ng_hh {[{ch} {g} {b} {dh} {zh} {d} {m} {v} {l} {w}]}}} {hh}]}} {{[{hh} {{any_Cx_z_ng_hh {[{ch} {g} {b} {dh} {zh} {d} {m} {v} {l} {w}]}}}]}}]} {sil}]}
rule 1 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: d
rule: {d {[{sil} {{[{[{d} {{any_Cx_m_d_p {[{dh} {v} {w} {z} {hh} {l} {g} {ch} {b} {zh}]}}}]} {[{{any_Cx_m_d_p {[{dh} {v} {w} {z} {hh} {l} {g} {ch} {b} {zh}]}}} {d}]}]}} {{[{[{d} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]} {[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {d}]}]}}]}}
Phoneme rule:
guard: sh phoneme: m
rule: {[{[{{[{{any_Cx_sh_p_d_m {[{b} {g} {dh} {w} {ch} {zh} {hh} {v} {z} {l}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_p_d_m {[{b} {g} {dh} {w} {ch} {zh} {hh} {v} {z} {l}]}}}]}}]} {[{m} {[{[{{any_Cx_sh_p_d_m {[{b} {g} {dh} {w} {ch} {zh} {hh} {v} {z} {l}]}}} {sh}]} {[{sh} {{any_Cx_sh_p_d_m {[{b} {g} {dh} {w} {ch} {zh} {hh} {v} {z} {l}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: iy
rule: {[{[{[{{[{{any_Vx_sh_sh_iy_noSlide {[{eh} {ih} {oh} {uw} {uh} {ao} {ax} {ah} {y} {aa} {ae}]}}} {sh}]}} {{[{sh} {{any_Vx_sh_sh_iy_noSlide {[{eh} {ih} {oh} {uw} {uh} {ao} {ax} {ah} {y} {aa} {ae}]}}}]}}]} {[{{[{{any_Cx_sh_sh_n_m {[{d} {l} {z} {hh} {dh} {g} {v} {b} {zh} {ch} {w}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_n_m {[{d} {l} {z} {hh} {dh} {g} {v} {b} {zh} {ch} {w}]}}}]}}]}]} {[{iy} {[{[{{any_Vx_sh_sh_iy_noSlide {[{eh} {ih} {oh} {uw} {uh} {ao} {ax} {ah} {y} {aa} {ae}]}}} {sh}]} {[{sh} {{any_Vx_sh_sh_iy_noSlide {[{eh} {ih} {oh} {uw} {uh} {ao} {ax} {ah} {y} {aa} {ae}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: n
rule: {[{[{{[{{any_Cx_sh_sh_n {[{zh} {g} {m} {z} {b} {d} {l} {hh} {w} {dh} {v} {ch}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_n {[{zh} {g} {m} {z} {b} {d} {l} {hh} {w} {dh} {v} {ch}]}}}]}}]} {[{n} {[{[{{any_Cx_sh_sh_n {[{zh} {g} {m} {z} {b} {d} {l} {hh} {w} {dh} {v} {ch}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_n {[{zh} {g} {m} {z} {b} {d} {l} {hh} {w} {dh} {v} {ch}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ih
rule: {[{[{[{{[{{any_Vx_sh_sh_ih_noSlide {[{ae} {oh} {uw} {y} {aa} {ah} {ao} {ax} {eh} {iy} {uh}]}}} {sh}]}} {{[{sh} {{any_Vx_sh_sh_ih_noSlide {[{ae} {oh} {uw} {y} {aa} {ah} {ao} {ax} {eh} {iy} {uh}]}}}]}}]} {[{{[{{any_Cx_sh_sh_ng_n {[{d} {dh} {hh} {v} {z} {b} {g} {l} {ch} {m} {w} {zh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_ng_n {[{d} {dh} {hh} {v} {z} {b} {g} {l} {ch} {m} {w} {zh}]}}}]}}]}]} {[{ih} {[{[{{any_Vx_sh_sh_ih_noSlide {[{ae} {oh} {uw} {y} {aa} {ah} {ao} {ax} {eh} {iy} {uh}]}}} {sh}]} {[{sh} {{any_Vx_sh_sh_ih_noSlide {[{ae} {oh} {uw} {y} {aa} {ah} {ao} {ax} {eh} {iy} {uh}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ng
rule: {[{[{{[{{any_Cx_sh_sh_ng {[{d} {l} {zh} {dh} {z} {ch} {g} {b} {hh} {v} {w} {m}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_ng {[{d} {l} {zh} {dh} {z} {ch} {g} {b} {hh} {v} {w} {m}]}}}]}}]} {[{ng} {[{[{{any_Cx_sh_sh_ng {[{d} {l} {zh} {dh} {z} {ch} {g} {b} {hh} {v} {w} {m}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_ng {[{d} {l} {zh} {dh} {z} {ch} {g} {b} {hh} {v} {w} {m}]}}}]}]}]}]}
Closing rule:
guard: ng
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {ng}]}} {{[{ng} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_ng_ng {[{w} {d} {z} {zh} {g} {l} {hh} {m} {b} {dh} {v} {ch}]}}} {ng}]}} {{[{ng} {{any_Cx_sh_ng_ng {[{w} {d} {z} {zh} {g} {l} {hh} {m} {b} {dh} {v} {ch}]}}}]}}]} {sil}]}
rule 2 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: v
rule: {v {[{sil} {{[{[{v} {{any_Cx_m_v_p {[{ch} {b} {dh} {hh} {zh} {z} {d} {w} {g} {l}]}}}]} {[{{any_Cx_m_v_p {[{ch} {b} {dh} {hh} {zh} {z} {d} {w} {g} {l}]}}} {v}]}]}} {{[{[{v} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]} {[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {v}]}]}}]}}
Phoneme rule:
guard: sh phoneme: m
rule: {[{[{{[{{any_Cx_sh_p_v_m {[{l} {g} {dh} {b} {w} {z} {d} {hh} {zh} {ch}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_p_v_m {[{l} {g} {dh} {b} {w} {z} {d} {hh} {zh} {ch}]}}}]}}]} {[{m} {[{[{{any_Cx_sh_p_v_m {[{l} {g} {dh} {b} {w} {z} {d} {hh} {zh} {ch}]}}} {sh}]} {[{sh} {{any_Cx_sh_p_v_m {[{l} {g} {dh} {b} {w} {z} {d} {hh} {zh} {ch}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: iy
rule: {[{[{[{{[{{any_Vx_sh_sh_iy_noSlide {[{uw} {uh} {y} {aa} {ae} {ao} {ax} {oh} {ah} {eh} {ih}]}}} {sh}]}} {{[{sh} {{any_Vx_sh_sh_iy_noSlide {[{uw} {uh} {y} {aa} {ae} {ao} {ax} {oh} {ah} {eh} {ih}]}}}]}}]} {[{{[{{any_Cx_sh_sh_n_m {[{dh} {hh} {v} {w} {b} {zh} {z} {ch} {g} {l} {d}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_n_m {[{dh} {hh} {v} {w} {b} {zh} {z} {ch} {g} {l} {d}]}}}]}}]}]} {[{iy} {[{[{{any_Vx_sh_sh_iy_noSlide {[{uw} {uh} {y} {aa} {ae} {ao} {ax} {oh} {ah} {eh} {ih}]}}} {sh}]} {[{sh} {{any_Vx_sh_sh_iy_noSlide {[{uw} {uh} {y} {aa} {ae} {ao} {ax} {oh} {ah} {eh} {ih}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: n
rule: {[{[{{[{{any_Cx_sh_sh_n {[{zh} {z} {ch} {w} {d} {v} {dh} {g} {l} {hh} {b} {m}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_n {[{zh} {z} {ch} {w} {d} {v} {dh} {g} {l} {hh} {b} {m}]}}}]}}]} {[{n} {[{[{{any_Cx_sh_sh_n {[{zh} {z} {ch} {w} {d} {v} {dh} {g} {l} {hh} {b} {m}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_n {[{zh} {z} {ch} {w} {d} {v} {dh} {g} {l} {hh} {b} {m}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ih
rule: {[{[{[{{[{{any_Vx_sh_sh_ih_noSlide {[{ah} {eh} {iy} {uw} {uh} {ae} {ao} {ax} {oh} {y} {aa}]}}} {sh}]}} {{[{sh} {{any_Vx_sh_sh_ih_noSlide {[{ah} {eh} {iy} {uw} {uh} {ae} {ao} {ax} {oh} {y} {aa}]}}}]}}]} {[{{[{{any_Cx_sh_sh_ng_n {[{w} {z} {d} {dh} {v} {g} {zh} {hh} {b} {l} {m} {ch}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_ng_n {[{w} {z} {d} {dh} {v} {g} {zh} {hh} {b} {l} {m} {ch}]}}}]}}]}]} {[{ih} {[{[{{any_Vx_sh_sh_ih_noSlide {[{ah} {eh} {iy} {uw} {uh} {ae} {ao} {ax} {oh} {y} {aa}]}}} {sh}]} {[{sh} {{any_Vx_sh_sh_ih_noSlide {[{ah} {eh} {iy} {uw} {uh} {ae} {ao} {ax} {oh} {y} {aa}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ng
rule: {[{[{{[{{any_Cx_sh_sh_ng {[{m} {dh} {g} {w} {zh} {z} {ch} {d} {v} {hh} {l} {b}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_ng {[{m} {dh} {g} {w} {zh} {z} {ch} {d} {v} {hh} {l} {b}]}}}]}}]} {[{ng} {[{[{{any_Cx_sh_sh_ng {[{m} {dh} {g} {w} {zh} {z} {ch} {d} {v} {hh} {l} {b}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_ng {[{m} {dh} {g} {w} {zh} {z} {ch} {d} {v} {hh} {l} {b}]}}}]}]}]}]}
Closing rule:
guard: ng
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {ng}]}} {{[{ng} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_ng_ng {[{zh} {ch} {m} {hh} {l} {d} {dh} {w} {b} {g} {v} {z}]}}} {ng}]}} {{[{ng} {{any_Cx_sh_ng_ng {[{zh} {ch} {m} {hh} {l} {d} {dh} {w} {b} {g} {v} {z}]}}}]}}]} {sil}]}
rule 3 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: d
rule: {d {[{sil} {{[{[{d} {{any_Cx_m_d_p {[{l} {dh} {zh} {b} {z} {hh} {v} {w} {ch} {g}]}}}]} {[{{any_Cx_m_d_p {[{l} {dh} {zh} {b} {z} {hh} {v} {w} {ch} {g}]}}} {d}]}]}} {{[{[{d} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]} {[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {d}]}]}}]}}
Phoneme rule:
guard: sh phoneme: m
rule: {[{[{{[{{any_Cx_sh_p_d_m {[{hh} {dh} {g} {zh} {ch} {l} {w} {b} {v} {z}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_p_d_m {[{hh} {dh} {g} {zh} {ch} {l} {w} {b} {v} {z}]}}}]}}]} {[{m} {[{[{{any_Cx_sh_p_d_m {[{hh} {dh} {g} {zh} {ch} {l} {w} {b} {v} {z}]}}} {sh}]} {[{sh} {{any_Cx_sh_p_d_m {[{hh} {dh} {g} {zh} {ch} {l} {w} {b} {v} {z}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: iy
rule: {[{[{[{{[{{any_Vx_sh_sh_iy_noSlide {[{uw} {y} {aa} {ao} {ax} {oh} {uh} {ae} {ah} {eh} {ih}]}}} {sh}]}} {{[{sh} {{any_Vx_sh_sh_iy_noSlide {[{uw} {y} {aa} {ao} {ax} {oh} {uh} {ae} {ah} {eh} {ih}]}}}]}}]} {[{{[{{any_Cx_sh_sh_n_m {[{ch} {dh} {zh} {g} {hh} {l} {z} {v} {w} {b} {d}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_n_m {[{ch} {dh} {zh} {g} {hh} {l} {z} {v} {w} {b} {d}]}}}]}}]}]} {[{iy} {[{[{{any_Vx_sh_sh_iy_noSlide {[{uw} {y} {aa} {ao} {ax} {oh} {uh} {ae} {ah} {eh} {ih}]}}} {sh}]} {[{sh} {{any_Vx_sh_sh_iy_noSlide {[{uw} {y} {aa} {ao} {ax} {oh} {uh} {ae} {ah} {eh} {ih}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: n
rule: {[{[{{[{{any_Cx_sh_sh_n {[{z} {b} {l} {w} {m} {g} {v} {hh} {d} {dh} {ch} {zh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_n {[{z} {b} {l} {w} {m} {g} {v} {hh} {d} {dh} {ch} {zh}]}}}]}}]} {[{n} {[{[{{any_Cx_sh_sh_n {[{z} {b} {l} {w} {m} {g} {v} {hh} {d} {dh} {ch} {zh}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_n {[{z} {b} {l} {w} {m} {g} {v} {hh} {d} {dh} {ch} {zh}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ih
rule: {[{[{[{{[{{any_Vx_sh_sh_ih_noSlide {[{ao} {uw} {y} {iy} {oh} {uh} {aa} {ae} {ah} {ax} {eh}]}}} {sh}]}} {{[{sh} {{any_Vx_sh_sh_ih_noSlide {[{ao} {uw} {y} {iy} {oh} {uh} {aa} {ae} {ah} {ax} {eh}]}}}]}}]} {[{{[{{any_Cx_sh_sh_ng_n {[{hh} {zh} {v} {b} {ch} {dh} {m} {g} {z} {d} {w} {l}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_ng_n {[{hh} {zh} {v} {b} {ch} {dh} {m} {g} {z} {d} {w} {l}]}}}]}}]}]} {[{ih} {[{[{{any_Vx_sh_sh_ih_noSlide {[{ao} {uw} {y} {iy} {oh} {uh} {aa} {ae} {ah} {ax} {eh}]}}} {sh}]} {[{sh} {{any_Vx_sh_sh_ih_noSlide {[{ao} {uw} {y} {iy} {oh} {uh} {aa} {ae} {ah} {ax} {eh}]}}}]}]}]}]}
Phoneme rule:
guard: jh phoneme: ng
rule: {[{[{{[{{any_Cx_jh_sh_ng {[{z} {b} {dh} {hh} {m} {d} {g} {l} {v} {w} {ch} {zh}]}}} {jh}]}} {{[{jh} {{any_Cx_jh_sh_ng {[{z} {b} {dh} {hh} {m} {d} {g} {l} {v} {w} {ch} {zh}]}}}]}}]} {[{ng} {[{[{{any_Cx_jh_sh_ng {[{z} {b} {dh} {hh} {m} {d} {g} {l} {v} {w} {ch} {zh}]}}} {jh}]} {[{jh} {{any_Cx_jh_sh_ng {[{z} {b} {dh} {hh} {m} {d} {g} {l} {v} {w} {ch} {zh}]}}}]}]}]}]}
Closing rule:
guard: ng
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {ng}]}} {{[{ng} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_jh_ng_ng {[{ch} {z} {dh} {zh} {g} {v} {l} {d} {hh} {w} {b} {m}]}}} {ng}]}} {{[{ng} {{any_Cx_jh_ng_ng {[{ch} {z} {dh} {zh} {g} {v} {l} {d} {hh} {w} {b} {m}]}}}]}}]} {sil}]}
rule 4 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: l
rule: {l {[{sil} {{[{[{l} {{any_Cx_m_l_p {[{v} {w} {z} {d} {hh} {dh} {g} {ch} {zh} {b}]}}}]} {[{{any_Cx_m_l_p {[{v} {w} {z} {d} {hh} {dh} {g} {ch} {zh} {b}]}}} {l}]}]}} {{[{[{l} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]} {[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {l}]}]}}]}}
Phoneme rule:
guard: sh phoneme: m
rule: {[{[{{[{{any_Cx_sh_p_l_m {[{dh} {w} {b} {zh} {ch} {hh} {z} {d} {g} {v}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_p_l_m {[{dh} {w} {b} {zh} {ch} {hh} {z} {d} {g} {v}]}}}]}}]} {[{m} {[{[{{any_Cx_sh_p_l_m {[{dh} {w} {b} {zh} {ch} {hh} {z} {d} {g} {v}]}}} {sh}]} {[{sh} {{any_Cx_sh_p_l_m {[{dh} {w} {b} {zh} {ch} {hh} {z} {d} {g} {v}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: iy
rule: {[{[{[{{[{{any_Vx_sh_sh_iy_noSlide {[{aa} {eh} {ih} {uw} {oh} {uh} {y} {ae} {ah} {ao} {ax}]}}} {sh}]}} {{[{sh} {{any_Vx_sh_sh_iy_noSlide {[{aa} {eh} {ih} {uw} {oh} {uh} {y} {ae} {ah} {ao} {ax}]}}}]}}]} {[{{[{{any_Cx_sh_sh_n_m {[{hh} {ch} {dh} {l} {d} {v} {b} {g} {zh} {z} {w}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_n_m {[{hh} {ch} {dh} {l} {d} {v} {b} {g} {zh} {z} {w}]}}}]}}]}]} {[{iy} {[{[{{any_Vx_sh_sh_iy_noSlide {[{aa} {eh} {ih} {uw} {oh} {uh} {y} {ae} {ah} {ao} {ax}]}}} {sh}]} {[{sh} {{any_Vx_sh_sh_iy_noSlide {[{aa} {eh} {ih} {uw} {oh} {uh} {y} {ae} {ah} {ao} {ax}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: n
rule: {[{[{{[{{any_Cx_sh_sh_n {[{dh} {w} {l} {b} {ch} {d} {g} {v} {hh} {m} {z} {zh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_n {[{dh} {w} {l} {b} {ch} {d} {g} {v} {hh} {m} {z} {zh}]}}}]}}]} {[{n} {[{[{{any_Cx_sh_sh_n {[{dh} {w} {l} {b} {ch} {d} {g} {v} {hh} {m} {z} {zh}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_n {[{dh} {w} {l} {b} {ch} {d} {g} {v} {hh} {m} {z} {zh}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ih
rule: {[{[{[{{[{{any_Vx_sh_sh_ih_noSlide {[{iy} {uw} {y} {ao} {ax} {eh} {oh} {uh} {aa} {ae} {ah}]}}} {sh}]}} {{[{sh} {{any_Vx_sh_sh_ih_noSlide {[{iy} {uw} {y} {ao} {ax} {eh} {oh} {uh} {aa} {ae} {ah}]}}}]}}]} {[{{[{{any_Cx_sh_sh_ng_n {[{g} {l} {b} {d} {w} {ch} {hh} {z} {m} {zh} {dh} {v}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_ng_n {[{g} {l} {b} {d} {w} {ch} {hh} {z} {m} {zh} {dh} {v}]}}}]}}]}]} {[{ih} {[{[{{any_Vx_sh_sh_ih_noSlide {[{iy} {uw} {y} {ao} {ax} {eh} {oh} {uh} {aa} {ae} {ah}]}}} {sh}]} {[{sh} {{any_Vx_sh_sh_ih_noSlide {[{iy} {uw} {y} {ao} {ax} {eh} {oh} {uh} {aa} {ae} {ah}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: ng
rule: {[{[{{[{{any_Cx_s_sh_ng {[{b} {d} {hh} {g} {zh} {dh} {v} {w} {z} {m} {ch} {l}]}}} {s}]}} {{[{s} {{any_Cx_s_sh_ng {[{b} {d} {hh} {g} {zh} {dh} {v} {w} {z} {m} {ch} {l}]}}}]}}]} {[{ng} {[{[{{any_Cx_s_sh_ng {[{b} {d} {hh} {g} {zh} {dh} {v} {w} {z} {m} {ch} {l}]}}} {s}]} {[{s} {{any_Cx_s_sh_ng {[{b} {d} {hh} {g} {zh} {dh} {v} {w} {z} {m} {ch} {l}]}}}]}]}]}]}
Closing rule:
guard: m
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {m}]}} {{[{m} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_s_ng_m {[{ch} {hh} {w} {g} {zh} {b} {d} {dh} {l} {v} {z}]}}} {m}]}} {{[{m} {{any_Cx_s_ng_m {[{ch} {hh} {w} {g} {zh} {b} {d} {dh} {l} {v} {z}]}}}]}}]} {sil}]}

parse: err = Parser error
Mapped result =
result 0 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 1 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 2 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 3 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 4 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false

Rules =
rule 0 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: d
rule: {d {[{sil} {{[{[{d} {{any_Cx_m_d_p {[{ch} {l} {z} {hh} {w} {zh} {b} {dh} {g} {v}]}}}]} {[{{any_Cx_m_d_p {[{ch} {l} {z} {hh} {w} {zh} {b} {dh} {g} {v}]}}} {d}]}]}} {{[{[{d} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]} {[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {d}]}]}}]}}
Phoneme rule:
guard: sh phoneme: m
rule: {[{[{{[{{any_Cx_sh_p_d_m {[{v} {z} {zh} {g} {hh} {w} {b} {ch} {dh} {l}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_p_d_m {[{v} {z} {zh} {g} {hh} {w} {b} {ch} {dh} {l}]}}}]}}]} {[{m} {[{[{{any_Cx_sh_p_d_m {[{v} {z} {zh} {g} {hh} {w} {b} {ch} {dh} {l}]}}} {sh}]} {[{sh} {{any_Cx_sh_p_d_m {[{v} {z} {zh} {g} {hh} {w} {b} {ch} {dh} {l}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: iy
rule: {[{[{[{{[{{any_Vx_sh_sh_iy_noSlide {[{uw} {uh} {y} {ah} {ao} {ih} {eh} {oh} {aa} {ae} {ax}]}}} {sh}]}} {{[{sh} {{any_Vx_sh_sh_iy_noSlide {[{uw} {uh} {y} {ah} {ao} {ih} {eh} {oh} {aa} {ae} {ax}]}}}]}}]} {[{{[{{any_Cx_sh_sh_n_m {[{v} {z} {hh} {g} {zh} {w} {ch} {l} {dh} {b} {d}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_n_m {[{v} {z} {hh} {g} {zh} {w} {ch} {l} {dh} {b} {d}]}}}]}}]}]} {[{iy} {[{[{{any_Vx_sh_sh_iy_noSlide {[{uw} {uh} {y} {ah} {ao} {ih} {eh} {oh} {aa} {ae} {ax}]}}} {sh}]} {[{sh} {{any_Vx_sh_sh_iy_noSlide {[{uw} {uh} {y} {ah} {ao} {ih} {eh} {oh} {aa} {ae} {ax}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: n
rule: {[{[{{[{{any_Cx_sh_sh_n {[{z} {g} {dh} {l} {w} {ch} {zh} {hh} {b} {m} {v} {d}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_n {[{z} {g} {dh} {l} {w} {ch} {zh} {hh} {b} {m} {v} {d}]}}}]}}]} {[{n} {[{[{{any_Cx_sh_sh_n {[{z} {g} {dh} {l} {w} {ch} {zh} {hh} {b} {m} {v} {d}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_n {[{z} {g} {dh} {l} {w} {ch} {zh} {hh} {b} {m} {v} {d}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ih
rule: {[{[{[{{[{{any_Vx_sh_sh_ih_noSlide {[{eh} {uw} {ah} {ao} {ax} {iy} {oh} {uh} {y} {aa} {ae}]}}} {sh}]}} {{[{sh} {{any_Vx_sh_sh_ih_noSlide {[{eh} {uw} {ah} {ao} {ax} {iy} {oh} {uh} {y} {aa} {ae}]}}}]}}]} {[{{[{{any_Cx_sh_sh_ng_n {[{g} {l} {b} {hh} {d} {dh} {v} {z} {w} {zh} {ch} {m}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_ng_n {[{g} {l} {b} {hh} {d} {dh} {v} {z} {w} {zh} {ch} {m}]}}}]}}]}]} {[{ih} {[{[{{any_Vx_sh_sh_ih_noSlide {[{eh} {uw} {ah} {ao} {ax} {iy} {oh} {uh} {y} {aa} {ae}]}}} {sh}]} {[{sh} {{any_Vx_sh_sh_ih_noSlide {[{eh} {uw} {ah} {ao} {ax} {iy} {oh} {uh} {y} {aa} {ae}]}}}]}]}]}]}
Phoneme rule:
guard: z phoneme: ng
rule: {[{[{{[{{any_Cx_z_sh_ng {[{dh} {v} {w} {ch} {l} {hh} {g} {m} {zh} {d} {b}]}}} {z}]}} {{[{z} {{any_Cx_z_sh_ng {[{dh} {v} {w} {ch} {l} {hh} {g} {m} {zh} {d} {b}]}}}]}}]} {[{ng} {[{[{{any_Cx_z_sh_ng {[{dh} {v} {w} {ch} {l} {hh} {g} {m} {zh} {d} {b}]}}} {z}]} {[{z} {{any_Cx_z_sh_ng {[{dh} {v} {w} {ch} {l} {hh} {g} {m} {zh} {d} {b}]}}}]}]}]}]}
Closing rule:
guard: hh
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {hh}]}} {{[{hh} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_z_ng_hh {[{ch} {g} {b} {dh} {zh} {d} {m} {v} {l} {w}]}}} {hh}]}} {{[{hh} {{any_Cx_z_ng_hh {[{ch} {g} {b} {dh} {zh} {d} {m} {v} {l} {w}]}}}]}}]} {sil}]}
rule 1 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: d
rule: {d {[{sil} {{[{[{d} {{any_Cx_m_d_p {[{dh} {v} {w} {z} {hh} {l} {g} {ch} {b} {zh}]}}}]} {[{{any_Cx_m_d_p {[{dh} {v} {w} {z} {hh} {l} {g} {ch} {b} {zh}]}}} {d}]}]}} {{[{[{d} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]} {[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {d}]}]}}]}}
Phoneme rule:
guard: sh phoneme: m
rule: {[{[{{[{{any_Cx_sh_p_d_m {[{b} {g} {dh} {w} {ch} {zh} {hh} {v} {z} {l}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_p_d_m {[{b} {g} {dh} {w} {ch} {zh} {hh} {v} {z} {l}]}}}]}}]} {[{m} {[{[{{any_Cx_sh_p_d_m {[{b} {g} {dh} {w} {ch} {zh} {hh} {v} {z} {l}]}}} {sh}]} {[{sh} {{any_Cx_sh_p_d_m {[{b} {g} {dh} {w} {ch} {zh} {hh} {v} {z} {l}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: iy
rule: {[{[{[{{[{{any_Vx_sh_sh_iy_noSlide {[{eh} {ih} {oh} {uw} {uh} {ao} {ax} {ah} {y} {aa} {ae}]}}} {sh}]}} {{[{sh} {{any_Vx_sh_sh_iy_noSlide {[{eh} {ih} {oh} {uw} {uh} {ao} {ax} {ah} {y} {aa} {ae}]}}}]}}]} {[{{[{{any_Cx_sh_sh_n_m {[{d} {l} {z} {hh} {dh} {g} {v} {b} {zh} {ch} {w}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_n_m {[{d} {l} {z} {hh} {dh} {g} {v} {b} {zh} {ch} {w}]}}}]}}]}]} {[{iy} {[{[{{any_Vx_sh_sh_iy_noSlide {[{eh} {ih} {oh} {uw} {uh} {ao} {ax} {ah} {y} {aa} {ae}]}}} {sh}]} {[{sh} {{any_Vx_sh_sh_iy_noSlide {[{eh} {ih} {oh} {uw} {uh} {ao} {ax} {ah} {y} {aa} {ae}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: n
rule: {[{[{{[{{any_Cx_sh_sh_n {[{zh} {g} {m} {z} {b} {d} {l} {hh} {w} {dh} {v} {ch}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_n {[{zh} {g} {m} {z} {b} {d} {l} {hh} {w} {dh} {v} {ch}]}}}]}}]} {[{n} {[{[{{any_Cx_sh_sh_n {[{zh} {g} {m} {z} {b} {d} {l} {hh} {w} {dh} {v} {ch}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_n {[{zh} {g} {m} {z} {b} {d} {l} {hh} {w} {dh} {v} {ch}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ih
rule: {[{[{[{{[{{any_Vx_sh_sh_ih_noSlide {[{ae} {oh} {uw} {y} {aa} {ah} {ao} {ax} {eh} {iy} {uh}]}}} {sh}]}} {{[{sh} {{any_Vx_sh_sh_ih_noSlide {[{ae} {oh} {uw} {y} {aa} {ah} {ao} {ax} {eh} {iy} {uh}]}}}]}}]} {[{{[{{any_Cx_sh_sh_ng_n {[{d} {dh} {hh} {v} {z} {b} {g} {l} {ch} {m} {w} {zh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_ng_n {[{d} {dh} {hh} {v} {z} {b} {g} {l} {ch} {m} {w} {zh}]}}}]}}]}]} {[{ih} {[{[{{any_Vx_sh_sh_ih_noSlide {[{ae} {oh} {uw} {y} {aa} {ah} {ao} {ax} {eh} {iy} {uh}]}}} {sh}]} {[{sh} {{any_Vx_sh_sh_ih_noSlide {[{ae} {oh} {uw} {y} {aa} {ah} {ao} {ax} {eh} {iy} {uh}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ng
rule: {[{[{{[{{any_Cx_sh_sh_ng {[{d} {l} {zh} {dh} {z} {ch} {g} {b} {hh} {v} {w} {m}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_ng {[{d} {l} {zh} {dh} {z} {ch} {g} {b} {hh} {v} {w} {m}]}}}]}}]} {[{ng} {[{[{{any_Cx_sh_sh_ng {[{d} {l} {zh} {dh} {z} {ch} {g} {b} {hh} {v} {w} {m}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_ng {[{d} {l} {zh} {dh} {z} {ch} {g} {b} {hh} {v} {w} {m}]}}}]}]}]}]}
Closing rule:
guard: ng
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {ng}]}} {{[{ng} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_ng_ng {[{w} {d} {z} {zh} {g} {l} {hh} {m} {b} {dh} {v} {ch}]}}} {ng}]}} {{[{ng} {{any_Cx_sh_ng_ng {[{w} {d} {z} {zh} {g} {l} {hh} {m} {b} {dh} {v} {ch}]}}}]}}]} {sil}]}
rule 2 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: v
rule: {v {[{sil} {{[{[{v} {{any_Cx_m_v_p {[{ch} {b} {dh} {hh} {zh} {z} {d} {w} {g} {l}]}}}]} {[{{any_Cx_m_v_p {[{ch} {b} {dh} {hh} {zh} {z} {d} {w} {g} {l}]}}} {v}]}]}} {{[{[{v} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]} {[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {v}]}]}}]}}
Phoneme rule:
guard: sh phoneme: m
rule: {[{[{{[{{any_Cx_sh_p_v_m {[{l} {g} {dh} {b} {w} {z} {d} {hh} {zh} {ch}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_p_v_m {[{l} {g} {dh} {b} {w} {z} {d} {hh} {zh} {ch}]}}}]}}]} {[{m} {[{[{{any_Cx_sh_p_v_m {[{l} {g} {dh} {b} {w} {z} {d} {hh} {zh} {ch}]}}} {sh}]} {[{sh} {{any_Cx_sh_p_v_m {[{l} {g} {dh} {b} {w} {z} {d} {hh} {zh} {ch}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: iy
rule: {[{[{[{{[{{any_Vx_sh_sh_iy_noSlide {[{uw} {uh} {y} {aa} {ae} {ao} {ax} {oh} {ah} {eh} {ih}]}}} {sh}]}} {{[{sh} {{any_Vx_sh_sh_iy_noSlide {[{uw} {uh} {y} {aa} {ae} {ao} {ax} {oh} {ah} {eh} {ih}]}}}]}}]} {[{{[{{any_Cx_sh_sh_n_m {[{dh} {hh} {v} {w} {b} {zh} {z} {ch} {g} {l} {d}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_n_m {[{dh} {hh} {v} {w} {b} {zh} {z} {ch} {g} {l} {d}]}}}]}}]}]} {[{iy} {[{[{{any_Vx_sh_sh_iy_noSlide {[{uw} {uh} {y} {aa} {ae} {ao} {ax} {oh} {ah} {eh} {ih}]}}} {sh}]} {[{sh} {{any_Vx_sh_sh_iy_noSlide {[{uw} {uh} {y} {aa} {ae} {ao} {ax} {oh} {ah} {eh} {ih}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: n
rule: {[{[{{[{{any_Cx_sh_sh_n {[{zh} {z} {ch} {w} {d} {v} {dh} {g} {l} {hh} {b} {m}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_n {[{zh} {z} {ch} {w} {d} {v} {dh} {g} {l} {hh} {b} {m}]}}}]}}]} {[{n} {[{[{{any_Cx_sh_sh_n {[{zh} {z} {ch} {w} {d} {v} {dh} {g} {l} {hh} {b} {m}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_n {[{zh} {z} {ch} {w} {d} {v} {dh} {g} {l} {hh} {b} {m}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ih
rule: {[{[{[{{[{{any_Vx_sh_sh_ih_noSlide {[{ah} {eh} {iy} {uw} {uh} {ae} {ao} {ax} {oh} {y} {aa}]}}} {sh}]}} {{[{sh} {{any_Vx_sh_sh_ih_noSlide {[{ah} {eh} {iy} {uw} {uh} {ae} {ao} {ax} {oh} {y} {aa}]}}}]}}]} {[{{[{{any_Cx_sh_sh_ng_n {[{w} {z} {d} {dh} {v} {g} {zh} {hh} {b} {l} {m} {ch}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_ng_n {[{w} {z} {d} {dh} {v} {g} {zh} {hh} {b} {l} {m} {ch}]}}}]}}]}]} {[{ih} {[{[{{any_Vx_sh_sh_ih_noSlide {[{ah} {eh} {iy} {uw} {uh} {ae} {ao} {ax} {oh} {y} {aa}]}}} {sh}]} {[{sh} {{any_Vx_sh_sh_ih_noSlide {[{ah} {eh} {iy} {uw} {uh} {ae} {ao} {ax} {oh} {y} {aa}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ng
rule: {[{[{{[{{any_Cx_sh_sh_ng {[{m} {dh} {g} {w} {zh} {z} {ch} {d} {v} {hh} {l} {b}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_ng {[{m} {dh} {g} {w} {zh} {z} {ch} {d} {v} {hh} {l} {b}]}}}]}}]} {[{ng} {[{[{{any_Cx_sh_sh_ng {[{m} {dh} {g} {w} {zh} {z} {ch} {d} {v} {hh} {l} {b}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_ng {[{m} {dh} {g} {w} {zh} {z} {ch} {d} {v} {hh} {l} {b}]}}}]}]}]}]}
Closing rule:
guard: ng
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {ng}]}} {{[{ng} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_ng_ng {[{zh} {ch} {m} {hh} {l} {d} {dh} {w} {b} {g} {v} {z}]}}} {ng}]}} {{[{ng} {{any_Cx_sh_ng_ng {[{zh} {ch} {m} {hh} {l} {d} {dh} {w} {b} {g} {v} {z}]}}}]}}]} {sil}]}
rule 3 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: d
rule: {d {[{sil} {{[{[{d} {{any_Cx_m_d_p {[{l} {dh} {zh} {b} {z} {hh} {v} {w} {ch} {g}]}}}]} {[{{any_Cx_m_d_p {[{l} {dh} {zh} {b} {z} {hh} {v} {w} {ch} {g}]}}} {d}]}]}} {{[{[{d} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]} {[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {d}]}]}}]}}
Phoneme rule:
guard: sh phoneme: m
rule: {[{[{{[{{any_Cx_sh_p_d_m {[{hh} {dh} {g} {zh} {ch} {l} {w} {b} {v} {z}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_p_d_m {[{hh} {dh} {g} {zh} {ch} {l} {w} {b} {v} {z}]}}}]}}]} {[{m} {[{[{{any_Cx_sh_p_d_m {[{hh} {dh} {g} {zh} {ch} {l} {w} {b} {v} {z}]}}} {sh}]} {[{sh} {{any_Cx_sh_p_d_m {[{hh} {dh} {g} {zh} {ch} {l} {w} {b} {v} {z}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: iy
rule: {[{[{[{{[{{any_Vx_sh_sh_iy_noSlide {[{uw} {y} {aa} {ao} {ax} {oh} {uh} {ae} {ah} {eh} {ih}]}}} {sh}]}} {{[{sh} {{any_Vx_sh_sh_iy_noSlide {[{uw} {y} {aa} {ao} {ax} {oh} {uh} {ae} {ah} {eh} {ih}]}}}]}}]} {[{{[{{any_Cx_sh_sh_n_m {[{ch} {dh} {zh} {g} {hh} {l} {z} {v} {w} {b} {d}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_n_m {[{ch} {dh} {zh} {g} {hh} {l} {z} {v} {w} {b} {d}]}}}]}}]}]} {[{iy} {[{[{{any_Vx_sh_sh_iy_noSlide {[{uw} {y} {aa} {ao} {ax} {oh} {uh} {ae} {ah} {eh} {ih}]}}} {sh}]} {[{sh} {{any_Vx_sh_sh_iy_noSlide {[{uw} {y} {aa} {ao} {ax} {oh} {uh} {ae} {ah} {eh} {ih}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: n
rule: {[{[{{[{{any_Cx_sh_sh_n {[{z} {b} {l} {w} {m} {g} {v} {hh} {d} {dh} {ch} {zh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_n {[{z} {b} {l} {w} {m} {g} {v} {hh} {d} {dh} {ch} {zh}]}}}]}}]} {[{n} {[{[{{any_Cx_sh_sh_n {[{z} {b} {l} {w} {m} {g} {v} {hh} {d} {dh} {ch} {zh}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_n {[{z} {b} {l} {w} {m} {g} {v} {hh} {d} {dh} {ch} {zh}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ih
rule: {[{[{[{{[{{any_Vx_sh_sh_ih_noSlide {[{ao} {uw} {y} {iy} {oh} {uh} {aa} {ae} {ah} {ax} {eh}]}}} {sh}]}} {{[{sh} {{any_Vx_sh_sh_ih_noSlide {[{ao} {uw} {y} {iy} {oh} {uh} {aa} {ae} {ah} {ax} {eh}]}}}]}}]} {[{{[{{any_Cx_sh_sh_ng_n {[{hh} {zh} {v} {b} {ch} {dh} {m} {g} {z} {d} {w} {l}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_ng_n {[{hh} {zh} {v} {b} {ch} {dh} {m} {g} {z} {d} {w} {l}]}}}]}}]}]} {[{ih} {[{[{{any_Vx_sh_sh_ih_noSlide {[{ao} {uw} {y} {iy} {oh} {uh} {aa} {ae} {ah} {ax} {eh}]}}} {sh}]} {[{sh} {{any_Vx_sh_sh_ih_noSlide {[{ao} {uw} {y} {iy} {oh} {uh} {aa} {ae} {ah} {ax} {eh}]}}}]}]}]}]}
Phoneme rule:
guard: jh phoneme: ng
rule: {[{[{{[{{any_Cx_jh_sh_ng {[{z} {b} {dh} {hh} {m} {d} {g} {l} {v} {w} {ch} {zh}]}}} {jh}]}} {{[{jh} {{any_Cx_jh_sh_ng {[{z} {b} {dh} {hh} {m} {d} {g} {l} {v} {w} {ch} {zh}]}}}]}}]} {[{ng} {[{[{{any_Cx_jh_sh_ng {[{z} {b} {dh} {hh} {m} {d} {g} {l} {v} {w} {ch} {zh}]}}} {jh}]} {[{jh} {{any_Cx_jh_sh_ng {[{z} {b} {dh} {hh} {m} {d} {g} {l} {v} {w} {ch} {zh}]}}}]}]}]}]}
Closing rule:
guard: ng
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {ng}]}} {{[{ng} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_jh_ng_ng {[{ch} {z} {dh} {zh} {g} {v} {l} {d} {hh} {w} {b} {m}]}}} {ng}]}} {{[{ng} {{any_Cx_jh_ng_ng {[{ch} {z} {dh} {zh} {g} {v} {l} {d} {hh} {w} {b} {m}]}}}]}}]} {sil}]}
rule 4 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: l
rule: {l {[{sil} {{[{[{l} {{any_Cx_m_l_p {[{v} {w} {z} {d} {hh} {dh} {g} {ch} {zh} {b}]}}}]} {[{{any_Cx_m_l_p {[{v} {w} {z} {d} {hh} {dh} {g} {ch} {zh} {b}]}}} {l}]}]}} {{[{[{l} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]} {[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {l}]}]}}]}}
Phoneme rule:
guard: sh phoneme: m
rule: {[{[{{[{{any_Cx_sh_p_l_m {[{dh} {w} {b} {zh} {ch} {hh} {z} {d} {g} {v}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_p_l_m {[{dh} {w} {b} {zh} {ch} {hh} {z} {d} {g} {v}]}}}]}}]} {[{m} {[{[{{any_Cx_sh_p_l_m {[{dh} {w} {b} {zh} {ch} {hh} {z} {d} {g} {v}]}}} {sh}]} {[{sh} {{any_Cx_sh_p_l_m {[{dh} {w} {b} {zh} {ch} {hh} {z} {d} {g} {v}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: iy
rule: {[{[{[{{[{{any_Vx_sh_sh_iy_noSlide {[{aa} {eh} {ih} {uw} {oh} {uh} {y} {ae} {ah} {ao} {ax}]}}} {sh}]}} {{[{sh} {{any_Vx_sh_sh_iy_noSlide {[{aa} {eh} {ih} {uw} {oh} {uh} {y} {ae} {ah} {ao} {ax}]}}}]}}]} {[{{[{{any_Cx_sh_sh_n_m {[{hh} {ch} {dh} {l} {d} {v} {b} {g} {zh} {z} {w}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_n_m {[{hh} {ch} {dh} {l} {d} {v} {b} {g} {zh} {z} {w}]}}}]}}]}]} {[{iy} {[{[{{any_Vx_sh_sh_iy_noSlide {[{aa} {eh} {ih} {uw} {oh} {uh} {y} {ae} {ah} {ao} {ax}]}}} {sh}]} {[{sh} {{any_Vx_sh_sh_iy_noSlide {[{aa} {eh} {ih} {uw} {oh} {uh} {y} {ae} {ah} {ao} {ax}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: n
rule: {[{[{{[{{any_Cx_sh_sh_n {[{dh} {w} {l} {b} {ch} {d} {g} {v} {hh} {m} {z} {zh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_n {[{dh} {w} {l} {b} {ch} {d} {g} {v} {hh} {m} {z} {zh}]}}}]}}]} {[{n} {[{[{{any_Cx_sh_sh_n {[{dh} {w} {l} {b} {ch} {d} {g} {v} {hh} {m} {z} {zh}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_n {[{dh} {w} {l} {b} {ch} {d} {g} {v} {hh} {m} {z} {zh}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ih
rule: {[{[{[{{[{{any_Vx_sh_sh_ih_noSlide {[{iy} {uw} {y} {ao} {ax} {eh} {oh} {uh} {aa} {ae} {ah}]}}} {sh}]}} {{[{sh} {{any_Vx_sh_sh_ih_noSlide {[{iy} {uw} {y} {ao} {ax} {eh} {oh} {uh} {aa} {ae} {ah}]}}}]}}]} {[{{[{{any_Cx_sh_sh_ng_n {[{g} {l} {b} {d} {w} {ch} {hh} {z} {m} {zh} {dh} {v}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_ng_n {[{g} {l} {b} {d} {w} {ch} {hh} {z} {m} {zh} {dh} {v}]}}}]}}]}]} {[{ih} {[{[{{any_Vx_sh_sh_ih_noSlide {[{iy} {uw} {y} {ao} {ax} {eh} {oh} {uh} {aa} {ae} {ah}]}}} {sh}]} {[{sh} {{any_Vx_sh_sh_ih_noSlide {[{iy} {uw} {y} {ao} {ax} {eh} {oh} {uh} {aa} {ae} {ah}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: ng
rule: {[{[{{[{{any_Cx_s_sh_ng {[{b} {d} {hh} {g} {zh} {dh} {v} {w} {z} {m} {ch} {l}]}}} {s}]}} {{[{s} {{any_Cx_s_sh_ng {[{b} {d} {hh} {g} {zh} {dh} {v} {w} {z} {m} {ch} {l}]}}}]}}]} {[{ng} {[{[{{any_Cx_s_sh_ng {[{b} {d} {hh} {g} {zh} {dh} {v} {w} {z} {m} {ch} {l}]}}} {s}]} {[{s} {{any_Cx_s_sh_ng {[{b} {d} {hh} {g} {zh} {dh} {v} {w} {z} {m} {ch} {l}]}}}]}]}]}]}
Closing rule:
guard: m
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {m}]}} {{[{m} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_s_ng_m {[{ch} {hh} {w} {g} {zh} {b} {d} {dh} {l} {v} {z}]}}} {m}]}} {{[{m} {{any_Cx_s_ng_m {[{ch} {hh} {w} {g} {zh} {b} {d} {dh} {l} {v} {z}]}}}]}}]} {sil}]}

parse: err = Parser error
ruleAligned = [{{m 1} [{2 1} {3 1} {4 1}]} {{iy 2} [{4 2}]} {{n 1} [{2 4} {3 4} {4 3}]} {{ih 1} [{2 5} {3 5} {4 4}]} {{ng 1} [{2 6} {3 6} {4 5}]}]

results (after rule-alignment) =
{72 []}
{80 []}
{91 [{sil 0 0} {m 16 35} {ao 36 57} {sh 58 58} {n 62 79} {ih 80 102} {ng 103 136} {sil 137 137}]}
{105 [{sil 0 0} {m 18 35} {ao 36 58} {sh 59 59} {n 62 79} {ih 80 103} {ng 104 136} {sil 137 137}]}
{125 [{sil 3 3} {m 18 35} {iy 36 58} {n 59 80} {ih 81 105} {ng 106 133} {sil 134 134}]}

timeAligned = [{{m 18 35} [{2 1} {3 1} {4 1}]} {{n 62 79} [{2 4} {3 4} {4 3}]} {{ih 81 102} [{2 5} {3 5} {4 4}]} {{ng 106 133} [{2 6} {3 6} {4 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 -1 35
i, iTime, newITime, timeStartFrom = 2 0 1 35
i, iTime, newITime, timeStartFrom = 3 1 2 79
i, iTime, newITime, timeStartFrom = 4 2 3 102
combinedVerdict    = [{m 1} {iy 2} {n 1} {ih 1} {ng 1}]
ruleAlignedVerdict = [{m 1} {iy 2} {n 1} {ih 1} {ng 1}]

score->
+1 for m
-1 for iy
+1 for n
+1 for ih
+1 for ng
score<-: 3
bestResult = {3 [{m 1} {iy 2} {n 1} {ih 1} {ng 1}] [m iy n ih ng]}
testPronounce m possible iy missing n possible ih possible ng possible
publish->
phonsToAlphas = [{[m] m} {[iy] ea} {[n] n} {[ih] i} {[ng] ng}]
getVerdict<-:new {m [m] 1}
getVerdict<-:new {ea [iy] 2}
getVerdict<-:new {n [n] 1}
getVerdict<-:new {i [ih] 1}
getVerdict<-:new {ng [ng] 1}
lettersVerdicts = [{m [m] 1} {ea [iy] 2} {n [n] 1} {i [ih] 1} {ng [ng] 1}]
publish<-
Total: 336.866533ms
{
  "results": [
    {
      "letters": "m",
      "phonemes": "m",
      "verdict": "possible"
    },
    {
      "letters": "ea",
      "phonemes": "iː",
      "verdict": "missing"
    },
    {
      "letters": "n",
      "phonemes": "n",
      "verdict": "possible"
    },
    {
      "letters": "i",
      "phonemes": "ɪ",
      "verdict": "possible"
    },
    {
      "letters": "ng",
      "phonemes": "ŋ",
      "verdict": "possible"
    }
  ],
  "err": null
}
