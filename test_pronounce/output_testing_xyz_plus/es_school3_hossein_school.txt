
 length of audio =  2.410312



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.9 0.9199999999999999 1.8199999999999998

 start3, duration3, end3 =  0.9 0.32 1.22

 Initial start, duration, end =  0.8 1.0199999999999998 1.8199999999999998

 Cut at: start, duration =  0.8 1.4699999999999998     guard_end =  2.2699999999999996 

Running scan for frate = 125
Considering guard w with value 2 for s ...
Considering guard m with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, w

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard z with value 5 for uw ...
Considering guard zh with value 5 for uw ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 125 public <school> = (((sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]) | (sil p (sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]))) (([(<any_Cx_w_p_th_s_k> w)] | [(w <any_Cx_w_p_th_s_k>)]) (s | z | ((<any_Cx_w_p_th_s_k> w) | (w <any_Cx_w_p_th_s_k>)))) (([(<any_Cx_n_w_k_s> n)] | [(n <any_Cx_n_w_k_s>)]) (k | ((<any_Cx_n_w_k> n) | (n <any_Cx_n_w_k>)))) ((([(<any_Vx_z_n_uw_noSlide> z)] | [(z <any_Vx_z_n_uw_noSlide>)]) ([(<any_Cx_z_n_l_k> z)] | [(z <any_Cx_z_n_l_k>)])) (uw | ((<any_Vx_z_n_uw_noSlide> z) | (z <any_Vx_z_n_uw_noSlide>)))) (([(<any_Cx_sh_z_l> sh)] | [(sh <any_Cx_sh_z_l>)]) (l | ((<any_Cx_sh_z_l> sh) | (sh <any_Cx_sh_z_l>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_thr> thr)] | [(thr <any_Cx_sh_l_thr>)]) sil))
Running scan for frate = 105
Considering guard m with value 2 for s ...
Considering guard w with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, m

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard zh with value 5 for uw ...
Considering guard z with value 5 for uw ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 105 public <school> = (((sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil p (sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_m_p_t_s_k> m)] | [(m <any_Cx_m_p_t_s_k>)]) (s | z | ((<any_Cx_m_p_t_s_k> m) | (m <any_Cx_m_p_t_s_k>)))) (([(<any_Cx_n_m_k_s> n)] | [(n <any_Cx_n_m_k_s>)]) (k | ((<any_Cx_n_m_k> n) | (n <any_Cx_n_m_k>)))) ((([(<any_Vx_zh_n_uw_noSlide> zh)] | [(zh <any_Vx_zh_n_uw_noSlide>)]) ([(<any_Cx_zh_n_l_k> zh)] | [(zh <any_Cx_zh_n_l_k>)])) (uw | ((<any_Vx_zh_n_uw_noSlide> zh) | (zh <any_Vx_zh_n_uw_noSlide>)))) (([(<any_Cx_sh_zh_l> sh)] | [(sh <any_Cx_sh_zh_l>)]) (l | ((<any_Cx_sh_zh_l> sh) | (sh <any_Cx_sh_zh_l>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_b> b)] | [(b <any_Cx_sh_l_b>)]) sil))
Running scan for frate = 91
Considering guard m with value 2 for s ...
Considering guard w with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, m

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard zh with value 5 for uw ...
Considering guard z with value 5 for uw ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 91 public <school> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_m_p_ch_s_k> m)] | [(m <any_Cx_m_p_ch_s_k>)]) (s | z | ((<any_Cx_m_p_ch_s_k> m) | (m <any_Cx_m_p_ch_s_k>)))) (([(<any_Cx_n_m_k_s> n)] | [(n <any_Cx_n_m_k_s>)]) (k | ((<any_Cx_n_m_k> n) | (n <any_Cx_n_m_k>)))) ((([(<any_Vx_zh_n_uw_noSlide> zh)] | [(zh <any_Vx_zh_n_uw_noSlide>)]) ([(<any_Cx_zh_n_l_k> zh)] | [(zh <any_Cx_zh_n_l_k>)])) (uw | ((<any_Vx_zh_n_uw_noSlide> zh) | (zh <any_Vx_zh_n_uw_noSlide>)))) (([(<any_Cx_sh_zh_l> sh)] | [(sh <any_Cx_sh_zh_l>)]) (l | ((<any_Cx_sh_zh_l> sh) | (sh <any_Cx_sh_zh_l>)))) (([(<any_vowel_noSlide> r)] | [(r <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_r> r)] | [(r <any_Cx_sh_l_r>)]) sil))
Running scan for frate = 80
Considering guard w with value 2 for s ...
Considering guard m with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, w

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard zh with value 5 for uw ...
Considering guard z with value 5 for uw ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 80 public <school> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_w_p_ch_s_k> w)] | [(w <any_Cx_w_p_ch_s_k>)]) (s | z | ((<any_Cx_w_p_ch_s_k> w) | (w <any_Cx_w_p_ch_s_k>)))) (([(<any_Cx_n_w_k_s> n)] | [(n <any_Cx_n_w_k_s>)]) (k | ((<any_Cx_n_w_k> n) | (n <any_Cx_n_w_k>)))) ((([(<any_Vx_zh_n_uw_noSlide> zh)] | [(zh <any_Vx_zh_n_uw_noSlide>)]) ([(<any_Cx_zh_n_l_k> zh)] | [(zh <any_Cx_zh_n_l_k>)])) (uw | ((<any_Vx_zh_n_uw_noSlide> zh) | (zh <any_Vx_zh_n_uw_noSlide>)))) (([(<any_Cx_sh_zh_l> sh)] | [(sh <any_Cx_sh_zh_l>)]) (l | ((<any_Cx_sh_zh_l> sh) | (sh <any_Cx_sh_zh_l>)))) (([(<any_vowel_noSlide> w)] | [(w <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_w> w)] | [(w <any_Cx_sh_l_w>)]) sil))
Running scan for frate = 72
Considering guard w with value 2 for s ...
Considering guard m with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, w

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard zh with value 5 for uw ...
Considering guard z with value 5 for uw ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 72 public <school> = (((sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil p (sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_w_p_t_s_k> w)] | [(w <any_Cx_w_p_t_s_k>)]) (s | z | ((<any_Cx_w_p_t_s_k> w) | (w <any_Cx_w_p_t_s_k>)))) (([(<any_Cx_n_w_k_s> n)] | [(n <any_Cx_n_w_k_s>)]) (k | ((<any_Cx_n_w_k> n) | (n <any_Cx_n_w_k>)))) ((([(<any_Vx_zh_n_uw_noSlide> zh)] | [(zh <any_Vx_zh_n_uw_noSlide>)]) ([(<any_Cx_zh_n_l_k> zh)] | [(zh <any_Cx_zh_n_l_k>)])) (uw | ((<any_Vx_zh_n_uw_noSlide> zh) | (zh <any_Vx_zh_n_uw_noSlide>)))) (([(<any_Cx_sh_zh_l> sh)] | [(sh <any_Cx_sh_zh_l>)]) (l | ((<any_Cx_sh_zh_l> sh) | (sh <any_Cx_sh_zh_l>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_f> f)] | [(f <any_Cx_sh_l_f>)]) sil))
Running scan for frate = 125
Considering guard m with value 2 for s ...
Considering guard w with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, m

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard n with value 3 for uwl ...
candidateGuards = map[n:true]
Picking guard, n


frate, target rule = 125 public <school> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_m_p_ch_s_k> m)] | [(m <any_Cx_m_p_ch_s_k>)]) (s | z | ((<any_Cx_m_p_ch_s_k> m) | (m <any_Cx_m_p_ch_s_k>)))) (([(<any_Cx_n_m_k_s> n)] | [(n <any_Cx_n_m_k_s>)]) (k | ((<any_Cx_n_m_k_uwl> n) | (n <any_Cx_n_m_k_uwl>)))) (([(<any_Cx_n_n_uwl_k> n)] | [(n <any_Cx_n_n_uwl_k>)]) (uwl | ((<any_Cx_n_n_uwl_k> n) | (n <any_Cx_n_n_uwl_k>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_n_uwl_m> m)] | [(m <any_Cx_n_uwl_m>)]) sil))
Running scan for frate = 105
Considering guard w with value 2 for s ...
Considering guard m with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, w

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard n with value 3 for uwl ...
candidateGuards = map[n:true]
Picking guard, n


frate, target rule = 105 public <school> = (((sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_w_p_z_s_k> w)] | [(w <any_Cx_w_p_z_s_k>)]) (s | z | ((<any_Cx_w_p_z_s_k> w) | (w <any_Cx_w_p_z_s_k>)))) (([(<any_Cx_n_w_k_s> n)] | [(n <any_Cx_n_w_k_s>)]) (k | ((<any_Cx_n_w_k_uwl> n) | (n <any_Cx_n_w_k_uwl>)))) (([(<any_Cx_n_n_uwl_k> n)] | [(n <any_Cx_n_n_uwl_k>)]) (uwl | ((<any_Cx_n_n_uwl_k> n) | (n <any_Cx_n_n_uwl_k>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_n_uwl_n> n)] | [(n <any_Cx_n_uwl_n>)]) sil))
Running scan for frate = 91
Considering guard m with value 2 for s ...
Considering guard w with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, m

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard n with value 3 for uwl ...
candidateGuards = map[n:true]
Picking guard, n


frate, target rule = 91 public <school> = (((sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil p (sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_m_p_sh_s_k> m)] | [(m <any_Cx_m_p_sh_s_k>)]) (s | z | ((<any_Cx_m_p_sh_s_k> m) | (m <any_Cx_m_p_sh_s_k>)))) (([(<any_Cx_n_m_k_s> n)] | [(n <any_Cx_n_m_k_s>)]) (k | ((<any_Cx_n_m_k_uwl> n) | (n <any_Cx_n_m_k_uwl>)))) (([(<any_Cx_n_n_uwl_k> n)] | [(n <any_Cx_n_n_uwl_k>)]) (uwl | ((<any_Cx_n_n_uwl_k> n) | (n <any_Cx_n_n_uwl_k>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_n_uwl_m> m)] | [(m <any_Cx_n_uwl_m>)]) sil))
Running scan for frate = 80
Considering guard w with value 2 for s ...
Considering guard m with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, w

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard n with value 3 for uwl ...
candidateGuards = map[n:true]
Picking guard, n


frate, target rule = 80 public <school> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_w_p_ch_s_k> w)] | [(w <any_Cx_w_p_ch_s_k>)]) (s | z | ((<any_Cx_w_p_ch_s_k> w) | (w <any_Cx_w_p_ch_s_k>)))) (([(<any_Cx_n_w_k_s> n)] | [(n <any_Cx_n_w_k_s>)]) (k | ((<any_Cx_n_w_k_uwl> n) | (n <any_Cx_n_w_k_uwl>)))) (([(<any_Cx_n_n_uwl_k> n)] | [(n <any_Cx_n_n_uwl_k>)]) (uwl | ((<any_Cx_n_n_uwl_k> n) | (n <any_Cx_n_n_uwl_k>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_n_uwl_m> m)] | [(m <any_Cx_n_uwl_m>)]) sil))
Running scan for frate = 72
Considering guard w with value 2 for s ...
Considering guard m with value 2 for s ...
candidateGuards = map[m:true w:true]
Picking guard, w

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard n with value 3 for uwl ...
candidateGuards = map[n:true]
Picking guard, n


frate, target rule = 72 public <school> = (((sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil p (sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_w_p_sh_s_k> w)] | [(w <any_Cx_w_p_sh_s_k>)]) (s | z | ((<any_Cx_w_p_sh_s_k> w) | (w <any_Cx_w_p_sh_s_k>)))) (([(<any_Cx_n_w_k_s> n)] | [(n <any_Cx_n_w_k_s>)]) (k | ((<any_Cx_n_w_k_uwl> n) | (n <any_Cx_n_w_k_uwl>)))) (([(<any_Cx_n_n_uwl_k> n)] | [(n <any_Cx_n_n_uwl_k>)]) (uwl | ((<any_Cx_n_n_uwl_k> n) | (n <any_Cx_n_n_uwl_k>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_n_uwl_ng> ng)] | [(ng <any_Cx_n_uwl_ng>)]) sil))

results =
{72 [{sil 0 11} {t 12 14} {eh 15 21} {s 22 34} {k 35 45} {uw 46 48} {l 49 63} {sil 64 75}]}
{80 [{sil 0 14} {ch 15 17} {ih 18 25} {s 26 38} {k 39 50} {uw 51 53} {l 54 70} {sil 71 81}]}
{91 [{sil 0 12} {ch 13 15} {eh 16 27} {s 28 44} {k 45 57} {uw 58 60} {l 61 79} {sil 80 132}]}
{105 [{sil 0 18} {t 19 21} {eh 22 32} {s 33 51} {k 52 66} {uw 67 69} {l 70 92} {sil 93 153}]}
{125 [{sil 3 23} {th 24 26} {eh 27 39} {s 40 62} {k 63 80} {uw 81 83} {l 84 110} {sil 111 183}]}

normalised results =
{72 [{sil 0 11} {t 17 17} {eh 21 29} {s 31 47} {k 49 63} {uw 64 64} {l 68 88} {sil 89 104}]}
{80 [{sil 0 14} {ch 19 19} {ih 23 31} {s 33 48} {k 49 63} {uw 64 64} {l 68 88} {sil 89 101}]}
{91 [{sil 0 12} {ch 14 14} {eh 18 30} {s 31 48} {k 49 63} {uw 64 64} {l 67 87} {sil 88 145}]}
{105 [{sil 0 18} {t 18 18} {eh 21 30} {s 31 49} {k 50 63} {uw 64 64} {l 67 88} {sil 89 146}]}
{125 [{sil 3 23} {th 19 19} {eh 22 31} {s 32 50} {k 50 64} {uw 65 65} {l 67 88} {sil 89 146}]}

ruleAligned = [{{eh 3} [{0 2} {2 2} {3 2} {4 2}]} {{s 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{k 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{uw 2} []} {{l 0} [{0 6} {1 6} {2 6} {3 6} {4 6}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {t 17 17} {eh 21 29} {s 31 47} {k 49 63} {uw 64 64} {l 68 88} {sil 89 89}]}
{80 [{sil 0 0} {ch 19 19} {ih 23 31} {s 33 48} {k 49 63} {uw 64 64} {l 68 88} {sil 89 89}]}
{91 [{sil 0 0} {ch 14 14} {eh 18 30} {s 31 48} {k 49 63} {uw 64 64} {l 67 87} {sil 88 88}]}
{105 [{sil 0 0} {t 18 18} {eh 21 30} {s 31 49} {k 50 63} {uw 64 64} {l 67 88} {sil 89 89}]}
{125 [{sil 3 3} {th 19 19} {eh 22 31} {s 32 50} {k 50 64} {uw 65 65} {l 67 88} {sil 89 89}]}

timeAligned = [{{eh 21 30} [{0 2} {2 2} {3 2} {4 2}]} {{s 31 48} [{0 3} {2 3} {3 3} {4 3} {1 3}]} {{k 49 63} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{l 67 88} [{2 6} {3 6} {4 6} {0 6} {1 6}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 29
i, iTime, newITime, timeStartFrom = 2 1 2 47
i, iTime, newITime, timeStartFrom = 3 2 -1 63
i, iTime, newITime, timeStartFrom = 4 2 3 63
combinedVerdict    = [{eh 3} {s 0} {k 0} {uw 2} {l 0}]
ruleAlignedVerdict = [{eh 3} {s 0} {k 0} {uw 2} {l 0}]

score->
-1 for eh
+1 for s
+1 for k
-1 for uw
+1 for l
score<-: 1

results =
{72 [{sil 0 13} {sh 14 16} {ih 17 22} {s 23 34} {k 35 45} {l 46 58} {n 59 63} {sil 64 75}]}
{80 [{sil 0 14} {ch 15 17} {ih 18 25} {s 26 38} {k 39 50} {l 51 64} {n 65 70} {sil 71 81}]}
{91 [{sil 0 12} {sh 13 15} {eh 16 27} {s 28 44} {k 45 57} {l 58 74} {n 75 79} {sil 80 132}]}
{105 [{sil 0 20} {eh 21 31} {z 32 38} {s 39 51} {k 52 67} {l 68 86} {n 87 92} {sil 93 153}]}
{125 [{sil 3 24} {ch 25 27} {eh 28 39} {s 40 62} {k 63 78} {l 79 104} {n 105 110} {sil 111 183}]}

normalised results =
{72 [{sil 0 13} {sh 19 19} {ih 24 31} {s 32 47} {k 49 63} {l 64 81} {n 82 88} {sil 89 104}]}
{80 [{sil 0 14} {ch 19 19} {ih 23 31} {s 33 48} {k 49 63} {l 64 80} {n 81 88} {sil 89 101}]}
{91 [{sil 0 12} {sh 14 14} {eh 18 30} {s 31 48} {k 49 63} {l 64 81} {n 82 87} {sil 88 145}]}
{105 [{sil 0 20} {eh 20 30} {z 30 36} {s 37 49} {k 50 64} {l 65 82} {n 83 88} {sil 89 146}]}
{125 [{sil 3 24} {ch 20 20} {eh 22 31} {s 32 50} {k 50 62} {l 63 83} {n 84 88} {sil 89 146}]}

ruleAligned = [{{eh 3} [{2 2} {3 1} {4 2}]} {{s 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{k 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{uwl 2} []} {{l 3} [{0 5} {1 5} {2 5} {3 5} {4 5}]} {{n 3} [{0 6} {1 6} {2 6} {3 6}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {sh 19 19} {ih 24 31} {s 32 47} {k 49 63} {l 64 81} {n 82 88} {sil 89 89}]}
{80 [{sil 0 0} {ch 19 19} {ih 23 31} {s 33 48} {k 49 63} {l 64 80} {n 81 88} {sil 89 89}]}
{91 [{sil 0 0} {sh 14 14} {eh 18 30} {s 31 48} {k 49 63} {l 64 81} {n 82 87} {sil 88 88}]}
{105 [{sil 0 0} {eh 20 30} {z 30 36} {s 37 49} {k 50 64} {l 65 82} {n 83 88} {sil 89 89}]}
{125 [{sil 3 3} {ch 20 20} {eh 22 31} {s 32 50} {k 50 62} {l 63 83} {n 84 84} {sil 89 89}]}

timeAligned = [{{eh 22 30} [{2 2} {3 1} {4 2}]} {{s 32 48} [{0 3} {2 3} {4 3} {1 3} {3 3}]} {{k 49 63} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{l 64 81} [{0 5} {1 5} {2 5} {4 5} {3 5}]} {{n 82 88} [{0 6} {1 6} {2 6} {3 6}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 30
i, iTime, newITime, timeStartFrom = 2 1 2 47
i, iTime, newITime, timeStartFrom = 3 2 -1 62
i, iTime, newITime, timeStartFrom = 4 2 3 62
i, iTime, newITime, timeStartFrom = 5 3 4 80
combinedVerdict    = [{eh 3} {s 0} {k 0} {uwl 2} {l 3} {n 3}]
ruleAlignedVerdict = [{eh 3} {s 0} {k 0} {uwl 2} {l 3} {n 3}]

score->
-1 for eh
+1 for s
+1 for k
-1 for uwl
-1 for l
-1 for n
score<-: -2
bestResult = {1 [{eh 3} {s 0} {k 0} {uw 2} {l 0}] [s k uw l]}
testPronounce eh surprise s good k good uw missing l good
publish->
phonsToAlphas = [{[s] s} {[k] ch} {[uw] oo} {[l] l}]
getVerdict<-:new {s [s] 0}
getVerdict<-:new {ch [k] 0}
getVerdict<-:new {oo [uw] 2}
getVerdict<-:new {l [l] 0}
lettersVerdicts = [{eh [eh] 3} {s [s] 0} {ch [k] 0} {oo [uw] 2} {l [l] 0}]
publish<-
{
  "results": [
    {
      "letters": "eh",
      "phonemes": "ɛ",
      "verdict": "surprise"
    },
    {
      "letters": "s",
      "phonemes": "s",
      "verdict": "good"
    },
    {
      "letters": "ch",
      "phonemes": "k",
      "verdict": "good"
    },
    {
      "letters": "oo",
      "phonemes": "u",
      "verdict": "missing"
    },
    {
      "letters": "l",
      "phonemes": "l",
      "verdict": "good"
    }
  ],
  "err": null
}
