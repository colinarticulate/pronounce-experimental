
 length of audio =  2.275187



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.33999999999999997 1.5 1.8399999999999999

 start3, duration3, end3 =  0.56 1.04 1.6

 Initial start, duration, end =  0.23999999999999996 1.5999999999999999 1.8399999999999999

 Cut at: start, duration =  0.23999999999999996 2.015187     guard_end =  2.255187 

Running scan for frate = 125
Running scan for frate = 125
Considering guard sh with value 1.6 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard y with value 3.5999999999999996 for er ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard y with value 3.2 for sh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3.5999999999999996 for er ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3.2 for sh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3.2 for ax ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 2.4 for axn ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 0.8 for n ...
Considering guard zh with value 0.8 for n ...
candidateGuards = map[sh:true zh:true]
Picking guard, sh

frate, target rule = 125 public <immersion> = (((sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]) | (sil p (sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]))) ((([(<any_Vx_sh_p_z_ih_noSlide> sh)] | [(sh <any_Vx_sh_p_z_ih_noSlide>)]) ([(<any_Cx_sh_p_z_m> sh)] | [(sh <any_Cx_sh_p_z_m>)])) (ih | ((<any_Vx_sh_p_z_ih_noSlide> sh) | (sh <any_Vx_sh_p_z_ih_noSlide>)))) (([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)]) (m | ((<any_Cx_sh_sh_m> sh) | (sh <any_Cx_sh_sh_m>)))) ((([(<any_Vx_y_sh_er_noSlide> y)] | [(y <any_Vx_y_sh_er_noSlide>)]) ([(<any_Cx_y_sh_sh_m> y)] | [(y <any_Cx_y_sh_sh_m>)])) (er | ((<any_Vx_y_sh_er_noSlide> y) | (y <any_Vx_y_sh_er_noSlide>)))) (([(<any_Cx_y_y_sh> y)] | [(y <any_Cx_y_y_sh>)]) (sh | ((<any_Cx_y_y_sh_axn> y) | (y <any_Cx_y_y_sh_axn>)))) (([(<any_Cx_y_y_axn_sh> y)] | [(y <any_Cx_y_y_axn_sh>)]) (axn | ((<any_Cx_y_y_axn_sh> y) | (y <any_Cx_y_y_axn_sh>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_y_axn_m> m)] | [(m <any_Cx_y_axn_m>)]) sil))
frate, target rule = 125 public <immersion> = (((sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]) | (sil p (sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]))) ((([(<any_Vx_sh_p_z_ih_noSlide> sh)] | [(sh <any_Vx_sh_p_z_ih_noSlide>)]) ([(<any_Cx_sh_p_z_m> sh)] | [(sh <any_Cx_sh_p_z_m>)])) (ih | ((<any_Vx_sh_p_z_ih_noSlide> sh) | (sh <any_Vx_sh_p_z_ih_noSlide>)))) (([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)]) (m | ((<any_Cx_sh_sh_m> sh) | (sh <any_Cx_sh_sh_m>)))) ((([(<any_Vx_y_sh_er_noSlide> y)] | [(y <any_Vx_y_sh_er_noSlide>)]) ([(<any_Cx_y_sh_sh_m> y)] | [(y <any_Cx_y_sh_sh_m>)])) (er | ((<any_Vx_y_sh_er_noSlide> y) | (y <any_Vx_y_sh_er_noSlide>)))) (([(<any_Cx_y_y_sh_ax> y)] | [(y <any_Cx_y_y_sh_ax>)]) (sh | ((<any_Cx_y_y_sh_ax> y) | (y <any_Cx_y_y_sh_ax>)))) (([(<any_Cx_y_y_ax_sh> y)] | [(y <any_Cx_y_y_ax_sh>)]) (ax | ((<any_Cx_y_y_ax_n_sh> y) | (y <any_Cx_y_y_ax_n_sh>)))) (([(<any_Cx_sh_y_n_ax> sh)] | [(sh <any_Cx_sh_y_n_ax>)]) (n | ((<any_Cx_sh_y_n_ax> sh) | (sh <any_Cx_sh_y_n_ax>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_sh_n_m> m)] | [(m <any_Cx_sh_n_m>)]) sil))
Running scan for frate = 105
Running scan for frate = 105
Considering guard sh with value 1.6 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard y with value 3.5999999999999996 for er ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3.5999999999999996 for er ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3.2 for sh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3.2 for sh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 2.4 for axn ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3.2 for ax ...
candidateGuards = map[y:true]
Picking guard, y

frate, target rule = 105 public <immersion> = (((sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]) | (sil p (sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]))) ((([(<any_Vx_sh_p_z_ih_noSlide> sh)] | [(sh <any_Vx_sh_p_z_ih_noSlide>)]) ([(<any_Cx_sh_p_z_m> sh)] | [(sh <any_Cx_sh_p_z_m>)])) (ih | ((<any_Vx_sh_p_z_ih_noSlide> sh) | (sh <any_Vx_sh_p_z_ih_noSlide>)))) (([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)]) (m | ((<any_Cx_sh_sh_m> sh) | (sh <any_Cx_sh_sh_m>)))) ((([(<any_Vx_y_sh_er_noSlide> y)] | [(y <any_Vx_y_sh_er_noSlide>)]) ([(<any_Cx_y_sh_sh_m> y)] | [(y <any_Cx_y_sh_sh_m>)])) (er | ((<any_Vx_y_sh_er_noSlide> y) | (y <any_Vx_y_sh_er_noSlide>)))) (([(<any_Cx_y_y_sh> y)] | [(y <any_Cx_y_y_sh>)]) (sh | ((<any_Cx_y_y_sh_axn> y) | (y <any_Cx_y_y_sh_axn>)))) (([(<any_Cx_y_y_axn_sh> y)] | [(y <any_Cx_y_y_axn_sh>)]) (axn | ((<any_Cx_y_y_axn_sh> y) | (y <any_Cx_y_y_axn_sh>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_y_axn_f> f)] | [(f <any_Cx_y_axn_f>)]) sil))
Considering guard zh with value 0.8 for n ...
Considering guard sh with value 0.8 for n ...
candidateGuards = map[sh:true zh:true]
Picking guard, zh

Running scan for frate = 91
frate, target rule = 105 public <immersion> = (((sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]) | (sil p (sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]))) ((([(<any_Vx_sh_p_z_ih_noSlide> sh)] | [(sh <any_Vx_sh_p_z_ih_noSlide>)]) ([(<any_Cx_sh_p_z_m> sh)] | [(sh <any_Cx_sh_p_z_m>)])) (ih | ((<any_Vx_sh_p_z_ih_noSlide> sh) | (sh <any_Vx_sh_p_z_ih_noSlide>)))) (([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)]) (m | ((<any_Cx_sh_sh_m> sh) | (sh <any_Cx_sh_sh_m>)))) ((([(<any_Vx_y_sh_er_noSlide> y)] | [(y <any_Vx_y_sh_er_noSlide>)]) ([(<any_Cx_y_sh_sh_m> y)] | [(y <any_Cx_y_sh_sh_m>)])) (er | ((<any_Vx_y_sh_er_noSlide> y) | (y <any_Vx_y_sh_er_noSlide>)))) (([(<any_Cx_y_y_sh_ax> y)] | [(y <any_Cx_y_y_sh_ax>)]) (sh | ((<any_Cx_y_y_sh_ax> y) | (y <any_Cx_y_y_sh_ax>)))) (([(<any_Cx_y_y_ax_sh> y)] | [(y <any_Cx_y_y_ax_sh>)]) (ax | ((<any_Cx_y_y_ax_n_sh> y) | (y <any_Cx_y_y_ax_n_sh>)))) (([(<any_Cx_zh_y_n_ax> zh)] | [(zh <any_Cx_zh_y_n_ax>)]) (n | ((<any_Cx_zh_y_n_ax> zh) | (zh <any_Cx_zh_y_n_ax>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_zh_n_b> b)] | [(b <any_Cx_zh_n_b>)]) sil))
Considering guard sh with value 1.6 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 91
Considering guard y with value 3.5999999999999996 for er ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 1.6 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard y with value 3.2 for sh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard y with value 2.4 for axn ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3.5999999999999996 for er ...
candidateGuards = map[y:true]
Picking guard, y

frate, target rule = 91 public <immersion> = (((sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]) | (sil p (sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]))) ((([(<any_Vx_sh_p_z_ih_noSlide> sh)] | [(sh <any_Vx_sh_p_z_ih_noSlide>)]) ([(<any_Cx_sh_p_z_m> sh)] | [(sh <any_Cx_sh_p_z_m>)])) (ih | ((<any_Vx_sh_p_z_ih_noSlide> sh) | (sh <any_Vx_sh_p_z_ih_noSlide>)))) (([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)]) (m | ((<any_Cx_sh_sh_m> sh) | (sh <any_Cx_sh_sh_m>)))) ((([(<any_Vx_y_sh_er_noSlide> y)] | [(y <any_Vx_y_sh_er_noSlide>)]) ([(<any_Cx_y_sh_sh_m> y)] | [(y <any_Cx_y_sh_sh_m>)])) (er | ((<any_Vx_y_sh_er_noSlide> y) | (y <any_Vx_y_sh_er_noSlide>)))) (([(<any_Cx_y_y_sh> y)] | [(y <any_Cx_y_y_sh>)]) (sh | ((<any_Cx_y_y_sh_axn> y) | (y <any_Cx_y_y_sh_axn>)))) (([(<any_Cx_y_y_axn_sh> y)] | [(y <any_Cx_y_y_axn_sh>)]) (axn | ((<any_Cx_y_y_axn_sh> y) | (y <any_Cx_y_y_axn_sh>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_y_axn_m> m)] | [(m <any_Cx_y_axn_m>)]) sil))
Considering guard y with value 3.2 for sh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3.2 for ax ...
candidateGuards = map[y:true]
Picking guard, y

Running scan for frate = 80
Considering guard sh with value 0.8 for n ...
Considering guard zh with value 0.8 for n ...
candidateGuards = map[sh:true zh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 91 public <immersion> = (((sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]) | (sil p (sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]))) ((([(<any_Vx_sh_p_z_ih_noSlide> sh)] | [(sh <any_Vx_sh_p_z_ih_noSlide>)]) ([(<any_Cx_sh_p_z_m> sh)] | [(sh <any_Cx_sh_p_z_m>)])) (ih | ((<any_Vx_sh_p_z_ih_noSlide> sh) | (sh <any_Vx_sh_p_z_ih_noSlide>)))) (([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)]) (m | ((<any_Cx_sh_sh_m> sh) | (sh <any_Cx_sh_sh_m>)))) ((([(<any_Vx_y_sh_er_noSlide> y)] | [(y <any_Vx_y_sh_er_noSlide>)]) ([(<any_Cx_y_sh_sh_m> y)] | [(y <any_Cx_y_sh_sh_m>)])) (er | ((<any_Vx_y_sh_er_noSlide> y) | (y <any_Vx_y_sh_er_noSlide>)))) (([(<any_Cx_y_y_sh_ax> y)] | [(y <any_Cx_y_y_sh_ax>)]) (sh | ((<any_Cx_y_y_sh_ax> y) | (y <any_Cx_y_y_sh_ax>)))) (([(<any_Cx_y_y_ax_sh> y)] | [(y <any_Cx_y_y_ax_sh>)]) (ax | ((<any_Cx_y_y_ax_n_sh> y) | (y <any_Cx_y_y_ax_n_sh>)))) (([(<any_Cx_sh_y_n_ax> sh)] | [(sh <any_Cx_sh_y_n_ax>)]) (n | ((<any_Cx_sh_y_n_ax> sh) | (sh <any_Cx_sh_y_n_ax>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_sh_n_ng> ng)] | [(ng <any_Cx_sh_n_ng>)]) sil))
Considering guard y with value 3.5999999999999996 for er ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3.2 for sh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 2.4 for axn ...
candidateGuards = map[y:true]
Picking guard, y

Running scan for frate = 80
frate, target rule = 80 public <immersion> = (((sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]) | (sil p (sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]))) ((([(<any_Vx_sh_p_z_ih_noSlide> sh)] | [(sh <any_Vx_sh_p_z_ih_noSlide>)]) ([(<any_Cx_sh_p_z_m> sh)] | [(sh <any_Cx_sh_p_z_m>)])) (ih | ((<any_Vx_sh_p_z_ih_noSlide> sh) | (sh <any_Vx_sh_p_z_ih_noSlide>)))) (([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)]) (m | ((<any_Cx_sh_sh_m> sh) | (sh <any_Cx_sh_sh_m>)))) ((([(<any_Vx_y_sh_er_noSlide> y)] | [(y <any_Vx_y_sh_er_noSlide>)]) ([(<any_Cx_y_sh_sh_m> y)] | [(y <any_Cx_y_sh_sh_m>)])) (er | ((<any_Vx_y_sh_er_noSlide> y) | (y <any_Vx_y_sh_er_noSlide>)))) (([(<any_Cx_y_y_sh> y)] | [(y <any_Cx_y_y_sh>)]) (sh | ((<any_Cx_y_y_sh_axn> y) | (y <any_Cx_y_y_sh_axn>)))) (([(<any_Cx_y_y_axn_sh> y)] | [(y <any_Cx_y_y_axn_sh>)]) (axn | ((<any_Cx_y_y_axn_sh> y) | (y <any_Cx_y_y_axn_sh>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_y_axn_m> m)] | [(m <any_Cx_y_axn_m>)]) sil))
Considering guard sh with value 1.6 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 72
Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard y with value 3.5999999999999996 for er ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard y with value 3.5999999999999996 for er ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3.2 for sh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3.2 for sh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3.2 for ax ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 2.4 for axn ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 0.8 for n ...
Considering guard zh with value 0.8 for n ...
candidateGuards = map[sh:true zh:true]
Picking guard, sh

frate, target rule = 72 public <immersion> = (((sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]) | (sil p (sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]))) ((([(<any_Vx_sh_p_z_ih_noSlide> sh)] | [(sh <any_Vx_sh_p_z_ih_noSlide>)]) ([(<any_Cx_sh_p_z_m> sh)] | [(sh <any_Cx_sh_p_z_m>)])) (ih | ((<any_Vx_sh_p_z_ih_noSlide> sh) | (sh <any_Vx_sh_p_z_ih_noSlide>)))) (([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)]) (m | ((<any_Cx_sh_sh_m> sh) | (sh <any_Cx_sh_sh_m>)))) ((([(<any_Vx_y_sh_er_noSlide> y)] | [(y <any_Vx_y_sh_er_noSlide>)]) ([(<any_Cx_y_sh_sh_m> y)] | [(y <any_Cx_y_sh_sh_m>)])) (er | ((<any_Vx_y_sh_er_noSlide> y) | (y <any_Vx_y_sh_er_noSlide>)))) (([(<any_Cx_y_y_sh> y)] | [(y <any_Cx_y_y_sh>)]) (sh | ((<any_Cx_y_y_sh_axn> y) | (y <any_Cx_y_y_sh_axn>)))) (([(<any_Cx_y_y_axn_sh> y)] | [(y <any_Cx_y_y_axn_sh>)]) (axn | ((<any_Cx_y_y_axn_sh> y) | (y <any_Cx_y_y_axn_sh>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_y_axn_f> f)] | [(f <any_Cx_y_axn_f>)]) sil))
frate, target rule = 80 public <immersion> = (((sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]) | (sil p (sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]))) ((([(<any_Vx_sh_p_z_ih_noSlide> sh)] | [(sh <any_Vx_sh_p_z_ih_noSlide>)]) ([(<any_Cx_sh_p_z_m> sh)] | [(sh <any_Cx_sh_p_z_m>)])) (ih | ((<any_Vx_sh_p_z_ih_noSlide> sh) | (sh <any_Vx_sh_p_z_ih_noSlide>)))) (([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)]) (m | ((<any_Cx_sh_sh_m> sh) | (sh <any_Cx_sh_sh_m>)))) ((([(<any_Vx_y_sh_er_noSlide> y)] | [(y <any_Vx_y_sh_er_noSlide>)]) ([(<any_Cx_y_sh_sh_m> y)] | [(y <any_Cx_y_sh_sh_m>)])) (er | ((<any_Vx_y_sh_er_noSlide> y) | (y <any_Vx_y_sh_er_noSlide>)))) (([(<any_Cx_y_y_sh_ax> y)] | [(y <any_Cx_y_y_sh_ax>)]) (sh | ((<any_Cx_y_y_sh_ax> y) | (y <any_Cx_y_y_sh_ax>)))) (([(<any_Cx_y_y_ax_sh> y)] | [(y <any_Cx_y_y_ax_sh>)]) (ax | ((<any_Cx_y_y_ax_n_sh> y) | (y <any_Cx_y_y_ax_n_sh>)))) (([(<any_Cx_sh_y_n_ax> sh)] | [(sh <any_Cx_sh_y_n_ax>)]) (n | ((<any_Cx_sh_y_n_ax> sh) | (sh <any_Cx_sh_y_n_ax>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_sh_n_d> d)] | [(d <any_Cx_sh_n_d>)]) sil))
Running scan for frate = 72
Considering guard sh with value 1.6 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard y with value 3.5999999999999996 for er ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3.2 for sh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3.2 for ax ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 0.8 for n ...
Considering guard zh with value 0.8 for n ...
candidateGuards = map[sh:true zh:true]
Picking guard, sh

frate, target rule = 72 public <immersion> = (((sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]) | (sil p (sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]))) ((([(<any_Vx_sh_p_z_ih_noSlide> sh)] | [(sh <any_Vx_sh_p_z_ih_noSlide>)]) ([(<any_Cx_sh_p_z_m> sh)] | [(sh <any_Cx_sh_p_z_m>)])) (ih | ((<any_Vx_sh_p_z_ih_noSlide> sh) | (sh <any_Vx_sh_p_z_ih_noSlide>)))) (([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)]) (m | ((<any_Cx_sh_sh_m> sh) | (sh <any_Cx_sh_sh_m>)))) ((([(<any_Vx_y_sh_er_noSlide> y)] | [(y <any_Vx_y_sh_er_noSlide>)]) ([(<any_Cx_y_sh_sh_m> y)] | [(y <any_Cx_y_sh_sh_m>)])) (er | ((<any_Vx_y_sh_er_noSlide> y) | (y <any_Vx_y_sh_er_noSlide>)))) (([(<any_Cx_y_y_sh_ax> y)] | [(y <any_Cx_y_y_sh_ax>)]) (sh | ((<any_Cx_y_y_sh_ax> y) | (y <any_Cx_y_y_sh_ax>)))) (([(<any_Cx_y_y_ax_sh> y)] | [(y <any_Cx_y_y_ax_sh>)]) (ax | ((<any_Cx_y_y_ax_n_sh> y) | (y <any_Cx_y_y_ax_n_sh>)))) (([(<any_Cx_sh_y_n_ax> sh)] | [(sh <any_Cx_sh_y_n_ax>)]) (n | ((<any_Cx_sh_y_n_ax> sh) | (sh <any_Cx_sh_y_n_ax>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_sh_n_d> d)] | [(d <any_Cx_sh_n_d>)]) sil))

results =
{72 [{sil 0 29} {ih 30 37} {m 38 46} {er 47 64} {sh 65 74} {axn 75 91} {sil 92 100}]}
{80 [{sil 0 32} {ih 33 41} {m 42 50} {er 51 71} {sh 72 82} {axn 83 100} {sil 101 110}]}
{91 [{sil 0 37} {ih 38 46} {m 47 57} {er 58 80} {zh 81 91} {y 92 94} {axn 95 120} {sil 121 178}]}
{105 [{sil 0 43} {ih 44 54} {m 55 66} {er 67 92} {zh 93 106} {y 107 112} {axn 113 139} {sil 140 207}]}
{125 [{sil 3 52} {ih 53 65} {m 66 79} {er 80 112} {zh 113 126} {y 127 135} {axn 136 167} {sil 168 251}]}

normalised results =
{72 [{sil 0 29} {ih 42 51} {m 53 64} {er 65 89} {sh 90 103} {axn 104 126} {sil 128 139}]}
{80 [{sil 0 32} {ih 41 51} {m 53 63} {er 64 89} {sh 90 103} {axn 104 125} {sil 126 138}]}
{91 [{sil 0 37} {ih 42 51} {m 52 63} {er 64 88} {zh 89 100} {y 101 101} {axn 104 132} {sil 133 196}]}
{105 [{sil 0 43} {ih 42 51} {m 52 63} {er 64 88} {zh 89 101} {y 102 107} {axn 108 132} {sil 133 197}]}
{125 [{sil 3 52} {ih 42 52} {m 53 63} {er 64 90} {zh 90 101} {y 102 108} {axn 109 134} {sil 134 201}]}

ruleAligned = [{{ih 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{m 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{er 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{sh 2} [{0 4} {1 4}]} {{zh 3} [{2 4} {3 4} {4 4}]} {{axn 0} [{0 5} {1 5} {2 6} {3 6} {4 6}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {ih 42 51} {m 53 64} {er 65 89} {sh 90 103} {axn 104 126} {sil 128 128}]}
{80 [{sil 0 0} {ih 41 51} {m 53 63} {er 64 89} {sh 90 103} {axn 104 125} {sil 126 126}]}
{91 [{sil 0 0} {ih 42 51} {m 52 63} {er 64 88} {zh 89 100} {y 101 101} {axn 104 132} {sil 133 133}]}
{105 [{sil 0 0} {ih 42 51} {m 52 63} {er 64 88} {zh 89 101} {y 102 107} {axn 108 132} {sil 133 133}]}
{125 [{sil 3 3} {ih 42 52} {m 53 63} {er 64 90} {zh 90 101} {y 102 108} {axn 109 134} {sil 134 134}]}

timeAligned = [{{ih 42 51} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{m 53 63} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{er 64 89} [{1 3} {2 3} {3 3} {4 3} {0 3}]} {{zh 90 100} [{2 4} {3 4} {4 4}]} {{axn 104 132} [{0 5} {1 5} {2 6} {3 6} {4 6}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 51
i, iTime, newITime, timeStartFrom = 2 1 2 63
i, iTime, newITime, timeStartFrom = 3 2 -1 88
i, iTime, newITime, timeStartFrom = 4 2 3 88
i, iTime, newITime, timeStartFrom = 5 3 4 100
combinedVerdict    = [{ih 0} {m 0} {er 0} {sh 2} {zh 3} {axn 0}]
ruleAlignedVerdict = [{ih 0} {m 0} {er 0} {sh 2} {zh 3} {axn 0}]

score->
+1 for ih
+1 for m
+1 for er
-1 for sh
-1 for zh
+1 for axn
score<-: 2

results =
{72 [{sil 0 29} {ih 30 37} {m 38 46} {er 47 64} {sh 65 74} {ax 75 78} {n 79 91} {sil 92 100}]}
{80 [{sil 0 32} {ih 33 41} {m 42 50} {er 51 71} {sh 72 82} {ax 83 87} {n 88 100} {sil 101 110}]}
{91 [{sil 0 37} {ih 38 46} {m 47 57} {er 58 80} {zh 81 91} {y 92 94} {ax 95 100} {n 101 120} {sil 121 178}]}
{105 [{sil 0 43} {ih 44 54} {m 55 66} {er 67 92} {zh 93 106} {y 107 109} {ax 110 116} {n 117 139} {sil 140 207}]}
{125 [{sil 3 52} {ih 53 65} {m 66 79} {er 80 112} {zh 113 126} {y 127 129} {ax 130 139} {n 140 167} {sil 168 251}]}

normalised results =
{72 [{sil 0 29} {ih 42 51} {m 53 64} {er 65 89} {sh 90 103} {ax 104 108} {n 110 126} {sil 128 139}]}
{80 [{sil 0 32} {ih 41 51} {m 53 63} {er 64 89} {sh 90 103} {ax 104 109} {n 110 125} {sil 126 138}]}
{91 [{sil 0 37} {ih 42 51} {m 52 63} {er 64 88} {zh 89 100} {y 101 101} {ax 104 110} {n 111 132} {sil 133 196}]}
{105 [{sil 0 43} {ih 42 51} {m 52 63} {er 64 88} {zh 89 101} {y 102 102} {ax 105 110} {n 111 132} {sil 133 197}]}
{125 [{sil 3 52} {ih 42 52} {m 53 63} {er 64 90} {zh 90 101} {y 102 102} {ax 104 111} {n 112 134} {sil 134 201}]}

ruleAligned = [{{ih 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{m 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{er 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{sh 2} [{0 4} {1 4}]} {{zh 3} [{2 4} {3 4} {4 4}]} {{ax 0} [{0 5} {1 5} {2 6} {3 6} {4 6}]} {{n 0} [{0 6} {1 6} {2 7} {3 7} {4 7}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {ih 42 51} {m 53 64} {er 65 89} {sh 90 103} {ax 104 108} {n 110 126} {sil 128 128}]}
{80 [{sil 0 0} {ih 41 51} {m 53 63} {er 64 89} {sh 90 103} {ax 104 109} {n 110 125} {sil 126 126}]}
{91 [{sil 0 0} {ih 42 51} {m 52 63} {er 64 88} {zh 89 100} {y 101 101} {ax 104 110} {n 111 132} {sil 133 133}]}
{105 [{sil 0 0} {ih 42 51} {m 52 63} {er 64 88} {zh 89 101} {y 102 102} {ax 105 110} {n 111 132} {sil 133 133}]}
{125 [{sil 3 3} {ih 42 52} {m 53 63} {er 64 90} {zh 90 101} {y 102 102} {ax 104 111} {n 112 134} {sil 134 134}]}

timeAligned = [{{ih 42 51} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{m 53 63} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{er 64 89} [{1 3} {2 3} {3 3} {4 3} {0 3}]} {{zh 90 100} [{2 4} {3 4} {4 4}]} {{ax 104 110} [{0 5} {1 5} {2 6} {4 6} {3 6}]} {{n 111 132} [{0 6} {1 6} {2 7} {3 7} {4 7}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 51
i, iTime, newITime, timeStartFrom = 2 1 2 63
i, iTime, newITime, timeStartFrom = 3 2 -1 88
i, iTime, newITime, timeStartFrom = 4 2 3 88
i, iTime, newITime, timeStartFrom = 5 3 4 100
i, iTime, newITime, timeStartFrom = 6 4 5 108
combinedVerdict    = [{ih 0} {m 0} {er 0} {sh 2} {zh 3} {ax 0} {n 0}]
ruleAlignedVerdict = [{ih 0} {m 0} {er 0} {sh 2} {zh 3} {ax 0} {n 0}]

score->
+1 for ih
+1 for m
+1 for er
-1 for sh
-1 for zh
+1 for ax
+1 for n
score<-: 3
bestResult = {3 [{ih 0} {m 0} {er 0} {sh 2} {zh 3} {ax 0} {n 0}] [ih m er sh ax n]}
testPronounce ih good m good er good sh missing zh surprise ax good n good
publish->
phonsToAlphas = [{[ih] i} {[m] mm} {[er] er} {[sh] s} {[ax] io} {[n] n}]
getVerdict<-:new {i [ih] 0}
getVerdict<-:new {mm [m] 0}
getVerdict<-:new {er [er] 0}
getVerdict<-:new {s [sh] 2}
getVerdict<-:new {io [ax] 0}
getVerdict<-:new {n [n] 0}
lettersVerdicts = [{i [ih] 0} {mm [m] 0} {er [er] 0} {s [sh] 2} {zh [zh] 3} {io [ax] 0} {n [n] 0}]
publish<-
Total: 353.85635ms
{
  "results": [
    {
      "letters": "i",
      "phonemes": "ɪ",
      "verdict": "good"
    },
    {
      "letters": "mm",
      "phonemes": "m",
      "verdict": "good"
    },
    {
      "letters": "er",
      "phonemes": "ɜɹ",
      "verdict": "good"
    },
    {
      "letters": "s",
      "phonemes": "ʃ",
      "verdict": "missing"
    },
    {
      "letters": "zh",
      "phonemes": "ʒ",
      "verdict": "surprise"
    },
    {
      "letters": "io",
      "phonemes": "ə",
      "verdict": "good"
    },
    {
      "letters": "n",
      "phonemes": "n",
      "verdict": "good"
    }
  ],
  "err": null
}
