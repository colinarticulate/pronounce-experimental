
 length of audio =  1.507875



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.28 0.96 1.24

 start3, duration3, end3 =  0.33999999999999997 0.4 0.74

 Initial start, duration, end =  0.18000000000000002 1.06 1.24

 Cut at: start, duration =  0.18000000000000002 1.3078750000000001     guard_end =  1.487875 

Running scan for frate = 125
Considering guard zh with value 1 for p ...
Considering guard jh with value 1 for p ...
candidateGuards = map[jh:true zh:true]
Picking guard, zh

Considering guard ng with value 4 for eh ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard w with value 4 for s ...
Considering guard ng with value 4 for s ...
candidateGuards = map[ng:true w:true]
Picking guard, w

Considering guard aa with value 2 for t ...
candidateGuards = map[aa:true]
Picking guard, aa

Considering guard aa with value 1 for s ...
candidateGuards = map[aa:true]
Picking guard, aa


frate, target rule = 125 public <pests> = (((sil [((sh <any_Cx_p_sh_d>) | (<any_Cx_p_sh_d> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil d (sil [((sh <any_Cx_p_sh_d>) | (<any_Cx_p_sh_d> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_zh_d_sh_p> zh)] | [(zh <any_Cx_zh_d_sh_p>)]) (p | ((<any_Cx_zh_d_sh_p> zh) | (zh <any_Cx_zh_d_sh_p>)))) ((([(<any_Vx_ng_zh_eh_noSlide> ng)] | [(ng <any_Vx_ng_zh_eh_noSlide>)]) ([(<any_Cx_ng_zh_s_p> ng)] | [(ng <any_Cx_ng_zh_s_p>)])) (eh | ((<any_Vx_ng_zh_eh_noSlide> ng) | (ng <any_Vx_ng_zh_eh_noSlide>)))) (([(<any_Cx_w_ng_s_t> w)] | [(w <any_Cx_w_ng_s_t>)]) (s | ((<any_Cx_w_ng_s_t> w) | (w <any_Cx_w_ng_s_t>)))) (([(<any_Cx_aa_w_t_s> aa)] | [(aa <any_Cx_aa_w_t_s>)]) (t | ((<any_Cx_aa_w_t_s_s> aa) | (aa <any_Cx_aa_w_t_s_s>)))) (([(<any_Cx_aa_aa_s_t> aa)] | [(aa <any_Cx_aa_aa_s_t>)]) (s | ((<any_Cx_aa_aa_s_t> aa) | (aa <any_Cx_aa_aa_s_t>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_aa_s_f> f)] | [(f <any_Cx_aa_s_f>)]) sil))
Running scan for frate = 105
Considering guard jh with value 1 for p ...
Considering guard zh with value 1 for p ...
candidateGuards = map[jh:true zh:true]
Picking guard, jh

Considering guard ng with value 4 for eh ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 4 for s ...
Considering guard w with value 4 for s ...
candidateGuards = map[ng:true w:true]
Picking guard, ng

Considering guard aa with value 2 for t ...
candidateGuards = map[aa:true]
Picking guard, aa

Considering guard aa with value 1 for s ...
candidateGuards = map[aa:true]
Picking guard, aa


frate, target rule = 105 public <pests> = (((sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil d (sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_jh_d_hh_p> jh)] | [(jh <any_Cx_jh_d_hh_p>)]) (p | ((<any_Cx_jh_d_hh_p> jh) | (jh <any_Cx_jh_d_hh_p>)))) ((([(<any_Vx_ng_jh_eh_noSlide> ng)] | [(ng <any_Vx_ng_jh_eh_noSlide>)]) ([(<any_Cx_ng_jh_s_p> ng)] | [(ng <any_Cx_ng_jh_s_p>)])) (eh | ((<any_Vx_ng_jh_eh_noSlide> ng) | (ng <any_Vx_ng_jh_eh_noSlide>)))) (([(<any_Cx_ng_ng_s_t> ng)] | [(ng <any_Cx_ng_ng_s_t>)]) (s | ((<any_Cx_ng_ng_s_t> ng) | (ng <any_Cx_ng_ng_s_t>)))) (([(<any_Cx_aa_ng_t_s> aa)] | [(aa <any_Cx_aa_ng_t_s>)]) (t | ((<any_Cx_aa_ng_t_s_s> aa) | (aa <any_Cx_aa_ng_t_s_s>)))) (([(<any_Cx_aa_aa_s_t> aa)] | [(aa <any_Cx_aa_aa_s_t>)]) (s | ((<any_Cx_aa_aa_s_t> aa) | (aa <any_Cx_aa_aa_s_t>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_aa_s_thr> thr)] | [(thr <any_Cx_aa_s_thr>)]) sil))
Running scan for frate = 91
Considering guard jh with value 1 for p ...
Considering guard zh with value 1 for p ...
candidateGuards = map[jh:true zh:true]
Picking guard, jh

Considering guard ng with value 4 for eh ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 4 for s ...
Considering guard w with value 4 for s ...
candidateGuards = map[ng:true w:true]
Picking guard, w

Considering guard aa with value 2 for t ...
candidateGuards = map[aa:true]
Picking guard, aa

Considering guard aa with value 1 for s ...
candidateGuards = map[aa:true]
Picking guard, aa


frate, target rule = 91 public <pests> = (((sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil d (sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_jh_d_hh_p> jh)] | [(jh <any_Cx_jh_d_hh_p>)]) (p | ((<any_Cx_jh_d_hh_p> jh) | (jh <any_Cx_jh_d_hh_p>)))) ((([(<any_Vx_ng_jh_eh_noSlide> ng)] | [(ng <any_Vx_ng_jh_eh_noSlide>)]) ([(<any_Cx_ng_jh_s_p> ng)] | [(ng <any_Cx_ng_jh_s_p>)])) (eh | ((<any_Vx_ng_jh_eh_noSlide> ng) | (ng <any_Vx_ng_jh_eh_noSlide>)))) (([(<any_Cx_w_ng_s_t> w)] | [(w <any_Cx_w_ng_s_t>)]) (s | ((<any_Cx_w_ng_s_t> w) | (w <any_Cx_w_ng_s_t>)))) (([(<any_Cx_aa_w_t_s> aa)] | [(aa <any_Cx_aa_w_t_s>)]) (t | ((<any_Cx_aa_w_t_s_s> aa) | (aa <any_Cx_aa_w_t_s_s>)))) (([(<any_Cx_aa_aa_s_t> aa)] | [(aa <any_Cx_aa_aa_s_t>)]) (s | ((<any_Cx_aa_aa_s_t> aa) | (aa <any_Cx_aa_aa_s_t>)))) (([(<any_vowel_noSlide> ch)] | [(ch <any_vowel_noSlide>)]) ([(<any_Cx_aa_s_ch> ch)] | [(ch <any_Cx_aa_s_ch>)]) sil))
Running scan for frate = 80
Considering guard zh with value 1 for p ...
Considering guard jh with value 1 for p ...
candidateGuards = map[jh:true zh:true]
Picking guard, zh

Considering guard ng with value 4 for eh ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 4 for s ...
Considering guard w with value 4 for s ...
candidateGuards = map[ng:true w:true]
Picking guard, ng

Considering guard aa with value 2 for t ...
candidateGuards = map[aa:true]
Picking guard, aa

Considering guard aa with value 1 for s ...
candidateGuards = map[aa:true]
Picking guard, aa


frate, target rule = 80 public <pests> = (((sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil d (sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_zh_d_hh_p> zh)] | [(zh <any_Cx_zh_d_hh_p>)]) (p | ((<any_Cx_zh_d_hh_p> zh) | (zh <any_Cx_zh_d_hh_p>)))) ((([(<any_Vx_ng_zh_eh_noSlide> ng)] | [(ng <any_Vx_ng_zh_eh_noSlide>)]) ([(<any_Cx_ng_zh_s_p> ng)] | [(ng <any_Cx_ng_zh_s_p>)])) (eh | ((<any_Vx_ng_zh_eh_noSlide> ng) | (ng <any_Vx_ng_zh_eh_noSlide>)))) (([(<any_Cx_ng_ng_s_t> ng)] | [(ng <any_Cx_ng_ng_s_t>)]) (s | ((<any_Cx_ng_ng_s_t> ng) | (ng <any_Cx_ng_ng_s_t>)))) (([(<any_Cx_aa_ng_t_s> aa)] | [(aa <any_Cx_aa_ng_t_s>)]) (t | ((<any_Cx_aa_ng_t_s_s> aa) | (aa <any_Cx_aa_ng_t_s_s>)))) (([(<any_Cx_aa_aa_s_t> aa)] | [(aa <any_Cx_aa_aa_s_t>)]) (s | ((<any_Cx_aa_aa_s_t> aa) | (aa <any_Cx_aa_aa_s_t>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_aa_s_f> f)] | [(f <any_Cx_aa_s_f>)]) sil))
Running scan for frate = 72
Considering guard jh with value 1 for p ...
Considering guard zh with value 1 for p ...
candidateGuards = map[jh:true zh:true]
Picking guard, jh

Considering guard ng with value 4 for eh ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard w with value 4 for s ...
Considering guard ng with value 4 for s ...
candidateGuards = map[ng:true w:true]
Picking guard, w

Considering guard aa with value 2 for t ...
candidateGuards = map[aa:true]
Picking guard, aa

Considering guard aa with value 1 for s ...
candidateGuards = map[aa:true]
Picking guard, aa


frate, target rule = 72 public <pests> = (((sil [((sh <any_Cx_p_sh_d>) | (<any_Cx_p_sh_d> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil d (sil [((sh <any_Cx_p_sh_d>) | (<any_Cx_p_sh_d> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_jh_d_sh_p> jh)] | [(jh <any_Cx_jh_d_sh_p>)]) (p | ((<any_Cx_jh_d_sh_p> jh) | (jh <any_Cx_jh_d_sh_p>)))) ((([(<any_Vx_ng_jh_eh_noSlide> ng)] | [(ng <any_Vx_ng_jh_eh_noSlide>)]) ([(<any_Cx_ng_jh_s_p> ng)] | [(ng <any_Cx_ng_jh_s_p>)])) (eh | ((<any_Vx_ng_jh_eh_noSlide> ng) | (ng <any_Vx_ng_jh_eh_noSlide>)))) (([(<any_Cx_w_ng_s_t> w)] | [(w <any_Cx_w_ng_s_t>)]) (s | ((<any_Cx_w_ng_s_t> w) | (w <any_Cx_w_ng_s_t>)))) (([(<any_Cx_aa_w_t_s> aa)] | [(aa <any_Cx_aa_w_t_s>)]) (t | ((<any_Cx_aa_w_t_s_s> aa) | (aa <any_Cx_aa_w_t_s_s>)))) (([(<any_Cx_aa_aa_s_t> aa)] | [(aa <any_Cx_aa_aa_s_t>)]) (s | ((<any_Cx_aa_aa_s_t> aa) | (aa <any_Cx_aa_aa_s_t>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_aa_s_f> f)] | [(f <any_Cx_aa_s_f>)]) sil))
Running scan for frate = 125
Considering guard jh with value 1 for p ...
Considering guard zh with value 1 for p ...
candidateGuards = map[jh:true zh:true]
Picking guard, jh

Considering guard ng with value 4 for eh ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 4 for s ...
Considering guard w with value 4 for s ...
candidateGuards = map[ng:true w:true]
Picking guard, ng

Considering guard ih with value 0.6 for ts ...
candidateGuards = map[ih:true]
Picking guard, ih


frate, target rule = 125 public <pests> = (((sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil d (sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_jh_d_hh_p> jh)] | [(jh <any_Cx_jh_d_hh_p>)]) (p | ((<any_Cx_jh_d_hh_p> jh) | (jh <any_Cx_jh_d_hh_p>)))) ((([(<any_Vx_ng_jh_eh_noSlide> ng)] | [(ng <any_Vx_ng_jh_eh_noSlide>)]) ([(<any_Cx_ng_jh_s_p> ng)] | [(ng <any_Cx_ng_jh_s_p>)])) (eh | ((<any_Vx_ng_jh_eh_noSlide> ng) | (ng <any_Vx_ng_jh_eh_noSlide>)))) (([(<any_Cx_ng_ng_s> ng)] | [(ng <any_Cx_ng_ng_s>)]) (s | ((<any_Cx_ng_ng_s_ts> ng) | (ng <any_Cx_ng_ng_s_ts>)))) (([(<any_Cx_ih_ng_ts_s> ih)] | [(ih <any_Cx_ih_ng_ts_s>)]) (ts | ((<any_Cx_ih_ng_ts_s> ih) | (ih <any_Cx_ih_ng_ts_s>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_ih_ts_thr> thr)] | [(thr <any_Cx_ih_ts_thr>)]) sil))
Running scan for frate = 105
Considering guard jh with value 1 for p ...
Considering guard zh with value 1 for p ...
candidateGuards = map[jh:true zh:true]
Picking guard, jh

Considering guard ng with value 4 for eh ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 4 for s ...
Considering guard w with value 4 for s ...
candidateGuards = map[ng:true w:true]
Picking guard, ng

Considering guard ih with value 0.6 for ts ...
candidateGuards = map[ih:true]
Picking guard, ih


frate, target rule = 105 public <pests> = (((sil [((b <any_Cx_p_b_d>) | (<any_Cx_p_b_d> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]) | (sil d (sil [((b <any_Cx_p_b_d>) | (<any_Cx_p_b_d> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]))) (([(<any_Cx_jh_d_b_p> jh)] | [(jh <any_Cx_jh_d_b_p>)]) (p | ((<any_Cx_jh_d_b_p> jh) | (jh <any_Cx_jh_d_b_p>)))) ((([(<any_Vx_ng_jh_eh_noSlide> ng)] | [(ng <any_Vx_ng_jh_eh_noSlide>)]) ([(<any_Cx_ng_jh_s_p> ng)] | [(ng <any_Cx_ng_jh_s_p>)])) (eh | ((<any_Vx_ng_jh_eh_noSlide> ng) | (ng <any_Vx_ng_jh_eh_noSlide>)))) (([(<any_Cx_ng_ng_s> ng)] | [(ng <any_Cx_ng_ng_s>)]) (s | ((<any_Cx_ng_ng_s_ts> ng) | (ng <any_Cx_ng_ng_s_ts>)))) (([(<any_Cx_ih_ng_ts_s> ih)] | [(ih <any_Cx_ih_ng_ts_s>)]) (ts | ((<any_Cx_ih_ng_ts_s> ih) | (ih <any_Cx_ih_ng_ts_s>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_ih_ts_p> p)] | [(p <any_Cx_ih_ts_p>)]) sil))
Running scan for frate = 91
Considering guard zh with value 1 for p ...
Considering guard jh with value 1 for p ...
candidateGuards = map[jh:true zh:true]
Picking guard, zh

Considering guard ng with value 4 for eh ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 4 for s ...
Considering guard w with value 4 for s ...
candidateGuards = map[ng:true w:true]
Picking guard, ng

Considering guard ih with value 0.6 for ts ...
candidateGuards = map[ih:true]
Picking guard, ih


frate, target rule = 91 public <pests> = (((sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil d (sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_zh_d_hh_p> zh)] | [(zh <any_Cx_zh_d_hh_p>)]) (p | ((<any_Cx_zh_d_hh_p> zh) | (zh <any_Cx_zh_d_hh_p>)))) ((([(<any_Vx_ng_zh_eh_noSlide> ng)] | [(ng <any_Vx_ng_zh_eh_noSlide>)]) ([(<any_Cx_ng_zh_s_p> ng)] | [(ng <any_Cx_ng_zh_s_p>)])) (eh | ((<any_Vx_ng_zh_eh_noSlide> ng) | (ng <any_Vx_ng_zh_eh_noSlide>)))) (([(<any_Cx_ng_ng_s> ng)] | [(ng <any_Cx_ng_ng_s>)]) (s | ((<any_Cx_ng_ng_s_ts> ng) | (ng <any_Cx_ng_ng_s_ts>)))) (([(<any_Cx_ih_ng_ts_s> ih)] | [(ih <any_Cx_ih_ng_ts_s>)]) (ts | ((<any_Cx_ih_ng_ts_s> ih) | (ih <any_Cx_ih_ng_ts_s>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_ih_ts_p> p)] | [(p <any_Cx_ih_ts_p>)]) sil))
Running scan for frate = 80
Considering guard jh with value 1 for p ...
Considering guard zh with value 1 for p ...
candidateGuards = map[jh:true zh:true]
Picking guard, jh

Considering guard ng with value 4 for eh ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard w with value 4 for s ...
Considering guard ng with value 4 for s ...
candidateGuards = map[ng:true w:true]
Picking guard, w

Considering guard ih with value 0.6 for ts ...
candidateGuards = map[ih:true]
Picking guard, ih


frate, target rule = 80 public <pests> = (((sil [((b <any_Cx_p_b_d>) | (<any_Cx_p_b_d> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]) | (sil d (sil [((b <any_Cx_p_b_d>) | (<any_Cx_p_b_d> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]))) (([(<any_Cx_jh_d_b_p> jh)] | [(jh <any_Cx_jh_d_b_p>)]) (p | ((<any_Cx_jh_d_b_p> jh) | (jh <any_Cx_jh_d_b_p>)))) ((([(<any_Vx_ng_jh_eh_noSlide> ng)] | [(ng <any_Vx_ng_jh_eh_noSlide>)]) ([(<any_Cx_ng_jh_s_p> ng)] | [(ng <any_Cx_ng_jh_s_p>)])) (eh | ((<any_Vx_ng_jh_eh_noSlide> ng) | (ng <any_Vx_ng_jh_eh_noSlide>)))) (([(<any_Cx_w_ng_s> w)] | [(w <any_Cx_w_ng_s>)]) (s | ((<any_Cx_w_ng_s_ts> w) | (w <any_Cx_w_ng_s_ts>)))) (([(<any_Cx_ih_w_ts_s> ih)] | [(ih <any_Cx_ih_w_ts_s>)]) (ts | ((<any_Cx_ih_w_ts_s> ih) | (ih <any_Cx_ih_w_ts_s>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_ih_ts_f> f)] | [(f <any_Cx_ih_ts_f>)]) sil))
Running scan for frate = 72
Considering guard zh with value 1 for p ...
Considering guard jh with value 1 for p ...
candidateGuards = map[jh:true zh:true]
Picking guard, zh

Considering guard ng with value 4 for eh ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard w with value 4 for s ...
Considering guard ng with value 4 for s ...
candidateGuards = map[ng:true w:true]
Picking guard, w

Considering guard ih with value 0.6 for ts ...
candidateGuards = map[ih:true]
Picking guard, ih


frate, target rule = 72 public <pests> = (((sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil d (sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_zh_d_hh_p> zh)] | [(zh <any_Cx_zh_d_hh_p>)]) (p | ((<any_Cx_zh_d_hh_p> zh) | (zh <any_Cx_zh_d_hh_p>)))) ((([(<any_Vx_ng_zh_eh_noSlide> ng)] | [(ng <any_Vx_ng_zh_eh_noSlide>)]) ([(<any_Cx_ng_zh_s_p> ng)] | [(ng <any_Cx_ng_zh_s_p>)])) (eh | ((<any_Vx_ng_zh_eh_noSlide> ng) | (ng <any_Vx_ng_zh_eh_noSlide>)))) (([(<any_Cx_w_ng_s> w)] | [(w <any_Cx_w_ng_s>)]) (s | ((<any_Cx_w_ng_s_ts> w) | (w <any_Cx_w_ng_s_ts>)))) (([(<any_Cx_ih_w_ts_s> ih)] | [(ih <any_Cx_ih_w_ts_s>)]) (ts | ((<any_Cx_ih_w_ts_s> ih) | (ih <any_Cx_ih_w_ts_s>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_ih_ts_f> f)] | [(f <any_Cx_ih_ts_f>)]) sil))
Running scan for frate = 125
Considering guard jh with value 1 for p ...
Considering guard zh with value 1 for p ...
candidateGuards = map[jh:true zh:true]
Picking guard, jh

Considering guard ng with value 4 for eh ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 4 for st ...
Considering guard w with value 4 for st ...
candidateGuards = map[ng:true w:true]
Picking guard, ng

Considering guard ih with value 0.6 for s ...
candidateGuards = map[ih:true]
Picking guard, ih

Running scan for frate = 125
Considering guard zh with value 1 for p ...
Considering guard jh with value 1 for p ...
candidateGuards = map[jh:true zh:true]
Picking guard, zh

Considering guard ng with value 4 for eh ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 2 for sts ...
Considering guard w with value 2 for sts ...
candidateGuards = map[ng:true w:true]
Picking guard, ng


frate, target rule = 125 public <pests> = (((sil [((sh <any_Cx_p_sh_d>) | (<any_Cx_p_sh_d> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil d (sil [((sh <any_Cx_p_sh_d>) | (<any_Cx_p_sh_d> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_zh_d_sh_p> zh)] | [(zh <any_Cx_zh_d_sh_p>)]) (p | ((<any_Cx_zh_d_sh_p> zh) | (zh <any_Cx_zh_d_sh_p>)))) ((([(<any_Vx_ng_zh_eh_noSlide> ng)] | [(ng <any_Vx_ng_zh_eh_noSlide>)]) ([(<any_Cx_ng_zh_sts_p> ng)] | [(ng <any_Cx_ng_zh_sts_p>)])) (eh | ((<any_Vx_ng_zh_eh_noSlide> ng) | (ng <any_Vx_ng_zh_eh_noSlide>)))) (([(<any_Cx_ng_ng_sts> ng)] | [(ng <any_Cx_ng_ng_sts>)]) (sts | ((<any_Cx_ng_ng_sts> ng) | (ng <any_Cx_ng_ng_sts>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_ng_sts_hh> hh)] | [(hh <any_Cx_ng_sts_hh>)]) sil))
Running scan for frate = 105
Considering guard jh with value 1 for p ...
Considering guard zh with value 1 for p ...
candidateGuards = map[jh:true zh:true]
Picking guard, jh

Considering guard ng with value 4 for eh ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard w with value 2 for sts ...
Considering guard ng with value 2 for sts ...
candidateGuards = map[ng:true w:true]
Picking guard, w


frate, target rule = 105 public <pests> = (((sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil d (sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_jh_d_hh_p> jh)] | [(jh <any_Cx_jh_d_hh_p>)]) (p | ((<any_Cx_jh_d_hh_p> jh) | (jh <any_Cx_jh_d_hh_p>)))) ((([(<any_Vx_ng_jh_eh_noSlide> ng)] | [(ng <any_Vx_ng_jh_eh_noSlide>)]) ([(<any_Cx_ng_jh_sts_p> ng)] | [(ng <any_Cx_ng_jh_sts_p>)])) (eh | ((<any_Vx_ng_jh_eh_noSlide> ng) | (ng <any_Vx_ng_jh_eh_noSlide>)))) (([(<any_Cx_w_ng_sts> w)] | [(w <any_Cx_w_ng_sts>)]) (sts | ((<any_Cx_w_ng_sts> w) | (w <any_Cx_w_ng_sts>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_w_sts_p> p)] | [(p <any_Cx_w_sts_p>)]) sil))
Running scan for frate = 91
Considering guard jh with value 1 for p ...
Considering guard zh with value 1 for p ...
candidateGuards = map[jh:true zh:true]
Picking guard, jh

Considering guard ng with value 4 for eh ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard w with value 2 for sts ...
Considering guard ng with value 2 for sts ...
candidateGuards = map[ng:true w:true]
Picking guard, w


frate, target rule = 91 public <pests> = (((sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil d (sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_jh_d_hh_p> jh)] | [(jh <any_Cx_jh_d_hh_p>)]) (p | ((<any_Cx_jh_d_hh_p> jh) | (jh <any_Cx_jh_d_hh_p>)))) ((([(<any_Vx_ng_jh_eh_noSlide> ng)] | [(ng <any_Vx_ng_jh_eh_noSlide>)]) ([(<any_Cx_ng_jh_sts_p> ng)] | [(ng <any_Cx_ng_jh_sts_p>)])) (eh | ((<any_Vx_ng_jh_eh_noSlide> ng) | (ng <any_Vx_ng_jh_eh_noSlide>)))) (([(<any_Cx_w_ng_sts> w)] | [(w <any_Cx_w_ng_sts>)]) (sts | ((<any_Cx_w_ng_sts> w) | (w <any_Cx_w_ng_sts>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_w_sts_m> m)] | [(m <any_Cx_w_sts_m>)]) sil))
Running scan for frate = 80
Considering guard jh with value 1 for p ...
Considering guard zh with value 1 for p ...
candidateGuards = map[jh:true zh:true]
Picking guard, jh

Considering guard ng with value 4 for eh ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard w with value 2 for sts ...
Considering guard ng with value 2 for sts ...
candidateGuards = map[ng:true w:true]
Picking guard, w


frate, target rule = 80 public <pests> = (((sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil d (sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_jh_d_hh_p> jh)] | [(jh <any_Cx_jh_d_hh_p>)]) (p | ((<any_Cx_jh_d_hh_p> jh) | (jh <any_Cx_jh_d_hh_p>)))) ((([(<any_Vx_ng_jh_eh_noSlide> ng)] | [(ng <any_Vx_ng_jh_eh_noSlide>)]) ([(<any_Cx_ng_jh_sts_p> ng)] | [(ng <any_Cx_ng_jh_sts_p>)])) (eh | ((<any_Vx_ng_jh_eh_noSlide> ng) | (ng <any_Vx_ng_jh_eh_noSlide>)))) (([(<any_Cx_w_ng_sts> w)] | [(w <any_Cx_w_ng_sts>)]) (sts | ((<any_Cx_w_ng_sts> w) | (w <any_Cx_w_ng_sts>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_w_sts_m> m)] | [(m <any_Cx_w_sts_m>)]) sil))
Running scan for frate = 72
Considering guard zh with value 1 for p ...
Considering guard jh with value 1 for p ...
candidateGuards = map[jh:true zh:true]
Picking guard, zh

Considering guard ng with value 4 for eh ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 2 for sts ...
Considering guard w with value 2 for sts ...
candidateGuards = map[ng:true w:true]
Picking guard, ng


frate, target rule = 72 public <pests> = (((sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil d (sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_zh_d_hh_p> zh)] | [(zh <any_Cx_zh_d_hh_p>)]) (p | ((<any_Cx_zh_d_hh_p> zh) | (zh <any_Cx_zh_d_hh_p>)))) ((([(<any_Vx_ng_zh_eh_noSlide> ng)] | [(ng <any_Vx_ng_zh_eh_noSlide>)]) ([(<any_Cx_ng_zh_sts_p> ng)] | [(ng <any_Cx_ng_zh_sts_p>)])) (eh | ((<any_Vx_ng_zh_eh_noSlide> ng) | (ng <any_Vx_ng_zh_eh_noSlide>)))) (([(<any_Cx_ng_ng_sts> ng)] | [(ng <any_Cx_ng_ng_sts>)]) (sts | ((<any_Cx_ng_ng_sts> ng) | (ng <any_Cx_ng_ng_sts>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_ng_sts_ng> ng)] | [(ng <any_Cx_ng_sts_ng>)]) sil))

frate, target rule = 125 public <pests> = (((sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil d (sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_jh_d_hh_p> jh)] | [(jh <any_Cx_jh_d_hh_p>)]) (p | ((<any_Cx_jh_d_hh_p> jh) | (jh <any_Cx_jh_d_hh_p>)))) ((([(<any_Vx_ng_jh_eh_noSlide> ng)] | [(ng <any_Vx_ng_jh_eh_noSlide>)]) ([(<any_Cx_ng_jh_st_p> ng)] | [(ng <any_Cx_ng_jh_st_p>)])) (eh | ((<any_Vx_ng_jh_eh_noSlide> ng) | (ng <any_Vx_ng_jh_eh_noSlide>)))) (([(<any_Cx_ng_ng_st> ng)] | [(ng <any_Cx_ng_ng_st>)]) (st | ((<any_Cx_ng_ng_st_s> ng) | (ng <any_Cx_ng_ng_st_s>)))) (([(<any_Cx_ih_ng_s_st> ih)] | [(ih <any_Cx_ih_ng_s_st>)]) (s | ((<any_Cx_ih_ng_s_st> ih) | (ih <any_Cx_ih_ng_s_st>)))) (([(<any_vowel_noSlide> ch)] | [(ch <any_vowel_noSlide>)]) ([(<any_Cx_ih_s_ch> ch)] | [(ch <any_Cx_ih_s_ch>)]) sil))
Running scan for frate = 105
Considering guard zh with value 1 for p ...
Considering guard jh with value 1 for p ...
candidateGuards = map[jh:true zh:true]
Picking guard, zh

Considering guard ng with value 4 for eh ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard w with value 4 for st ...
Considering guard ng with value 4 for st ...
candidateGuards = map[ng:true w:true]
Picking guard, ng

Considering guard ih with value 0.6 for s ...
candidateGuards = map[ih:true]
Picking guard, ih


frate, target rule = 105 public <pests> = (((sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil d (sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_zh_d_hh_p> zh)] | [(zh <any_Cx_zh_d_hh_p>)]) (p | ((<any_Cx_zh_d_hh_p> zh) | (zh <any_Cx_zh_d_hh_p>)))) ((([(<any_Vx_ng_zh_eh_noSlide> ng)] | [(ng <any_Vx_ng_zh_eh_noSlide>)]) ([(<any_Cx_ng_zh_st_p> ng)] | [(ng <any_Cx_ng_zh_st_p>)])) (eh | ((<any_Vx_ng_zh_eh_noSlide> ng) | (ng <any_Vx_ng_zh_eh_noSlide>)))) (([(<any_Cx_ng_ng_st> ng)] | [(ng <any_Cx_ng_ng_st>)]) (st | ((<any_Cx_ng_ng_st_s> ng) | (ng <any_Cx_ng_ng_st_s>)))) (([(<any_Cx_ih_ng_s_st> ih)] | [(ih <any_Cx_ih_ng_s_st>)]) (s | ((<any_Cx_ih_ng_s_st> ih) | (ih <any_Cx_ih_ng_s_st>)))) (([(<any_vowel_noSlide> th)] | [(th <any_vowel_noSlide>)]) ([(<any_Cx_ih_s_th> th)] | [(th <any_Cx_ih_s_th>)]) sil))
Running scan for frate = 91
Considering guard zh with value 1 for p ...
Considering guard jh with value 1 for p ...
candidateGuards = map[jh:true zh:true]
Picking guard, zh

Considering guard ng with value 4 for eh ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard w with value 4 for st ...
Considering guard ng with value 4 for st ...
candidateGuards = map[ng:true w:true]
Picking guard, w

Considering guard ih with value 0.6 for s ...
candidateGuards = map[ih:true]
Picking guard, ih


frate, target rule = 91 public <pests> = (((sil [((b <any_Cx_p_b_d>) | (<any_Cx_p_b_d> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]) | (sil d (sil [((b <any_Cx_p_b_d>) | (<any_Cx_p_b_d> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]))) (([(<any_Cx_zh_d_b_p> zh)] | [(zh <any_Cx_zh_d_b_p>)]) (p | ((<any_Cx_zh_d_b_p> zh) | (zh <any_Cx_zh_d_b_p>)))) ((([(<any_Vx_ng_zh_eh_noSlide> ng)] | [(ng <any_Vx_ng_zh_eh_noSlide>)]) ([(<any_Cx_ng_zh_st_p> ng)] | [(ng <any_Cx_ng_zh_st_p>)])) (eh | ((<any_Vx_ng_zh_eh_noSlide> ng) | (ng <any_Vx_ng_zh_eh_noSlide>)))) (([(<any_Cx_w_ng_st> w)] | [(w <any_Cx_w_ng_st>)]) (st | ((<any_Cx_w_ng_st_s> w) | (w <any_Cx_w_ng_st_s>)))) (([(<any_Cx_ih_w_s_st> ih)] | [(ih <any_Cx_ih_w_s_st>)]) (s | ((<any_Cx_ih_w_s_st> ih) | (ih <any_Cx_ih_w_s_st>)))) (([(<any_vowel_noSlide> sh)] | [(sh <any_vowel_noSlide>)]) ([(<any_Cx_ih_s_sh> sh)] | [(sh <any_Cx_ih_s_sh>)]) sil))
Running scan for frate = 80
Considering guard jh with value 1 for p ...
Considering guard zh with value 1 for p ...
candidateGuards = map[jh:true zh:true]
Picking guard, jh

Considering guard ng with value 4 for eh ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard w with value 4 for st ...
Considering guard ng with value 4 for st ...
candidateGuards = map[ng:true w:true]
Picking guard, w

Considering guard ih with value 0.6 for s ...
candidateGuards = map[ih:true]
Picking guard, ih


frate, target rule = 80 public <pests> = (((sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil d (sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_jh_d_hh_p> jh)] | [(jh <any_Cx_jh_d_hh_p>)]) (p | ((<any_Cx_jh_d_hh_p> jh) | (jh <any_Cx_jh_d_hh_p>)))) ((([(<any_Vx_ng_jh_eh_noSlide> ng)] | [(ng <any_Vx_ng_jh_eh_noSlide>)]) ([(<any_Cx_ng_jh_st_p> ng)] | [(ng <any_Cx_ng_jh_st_p>)])) (eh | ((<any_Vx_ng_jh_eh_noSlide> ng) | (ng <any_Vx_ng_jh_eh_noSlide>)))) (([(<any_Cx_w_ng_st> w)] | [(w <any_Cx_w_ng_st>)]) (st | ((<any_Cx_w_ng_st_s> w) | (w <any_Cx_w_ng_st_s>)))) (([(<any_Cx_ih_w_s_st> ih)] | [(ih <any_Cx_ih_w_s_st>)]) (s | ((<any_Cx_ih_w_s_st> ih) | (ih <any_Cx_ih_w_s_st>)))) (([(<any_vowel_noSlide> z)] | [(z <any_vowel_noSlide>)]) ([(<any_Cx_ih_s_z> z)] | [(z <any_Cx_ih_s_z>)]) sil))
Running scan for frate = 72
Considering guard zh with value 1 for p ...
Considering guard jh with value 1 for p ...
candidateGuards = map[jh:true zh:true]
Picking guard, zh

Considering guard ng with value 4 for eh ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard w with value 4 for st ...
Considering guard ng with value 4 for st ...
candidateGuards = map[ng:true w:true]
Picking guard, w

Considering guard ih with value 0.6 for s ...
candidateGuards = map[ih:true]
Picking guard, ih


frate, target rule = 72 public <pests> = (((sil [((sh <any_Cx_p_sh_d>) | (<any_Cx_p_sh_d> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil d (sil [((sh <any_Cx_p_sh_d>) | (<any_Cx_p_sh_d> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_zh_d_sh_p> zh)] | [(zh <any_Cx_zh_d_sh_p>)]) (p | ((<any_Cx_zh_d_sh_p> zh) | (zh <any_Cx_zh_d_sh_p>)))) ((([(<any_Vx_ng_zh_eh_noSlide> ng)] | [(ng <any_Vx_ng_zh_eh_noSlide>)]) ([(<any_Cx_ng_zh_st_p> ng)] | [(ng <any_Cx_ng_zh_st_p>)])) (eh | ((<any_Vx_ng_zh_eh_noSlide> ng) | (ng <any_Vx_ng_zh_eh_noSlide>)))) (([(<any_Cx_w_ng_st> w)] | [(w <any_Cx_w_ng_st>)]) (st | ((<any_Cx_w_ng_st_s> w) | (w <any_Cx_w_ng_st_s>)))) (([(<any_Cx_ih_w_s_st> ih)] | [(ih <any_Cx_ih_w_s_st>)]) (s | ((<any_Cx_ih_w_s_st> ih) | (ih <any_Cx_ih_w_s_st>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_ih_s_f> f)] | [(f <any_Cx_ih_s_f>)]) sil))

results =
{72 [{sil 0 9} {p 10 20} {eh 21 38} {sts 39 75} {sil 76 86}]}
{80 [{sil 0 12} {p 13 23} {eh 24 42} {sts 43 79} {sil 80 93}]}
{91 [{sil 0 13} {p 14 25} {eh 26 46} {sts 47 95} {sil 96 117}]}
{105 [{sil 0 18} {p 19 29} {eh 30 50} {sts 51 73} {p 74 76} {z 77 103} {sil 104 136}]}
{125 [{sil 3 23} {p 24 36} {eh 37 61} {sts 62 131} {sil 132 163}]}

normalised results =
{72 [{sil 0 9} {p 14 28} {eh 29 53} {sts 54 104} {sil 106 119}]}
{80 [{sil 0 12} {p 16 29} {eh 30 53} {sts 54 99} {sil 100 116}]}
{91 [{sil 0 13} {p 15 27} {eh 29 51} {sts 52 104} {sil 105 129}]}
{105 [{sil 0 18} {p 18 28} {eh 29 48} {sts 49 70} {p 70 70} {z 73 98} {sil 99 130}]}
{125 [{sil 3 23} {p 19 29} {eh 30 49} {sts 50 105} {sil 106 130}]}

ruleAligned = [{{p 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{eh 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{sts 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {p 14 28} {eh 29 53} {sts 54 104} {sil 106 106}]}
{80 [{sil 0 0} {p 16 29} {eh 30 53} {sts 54 99} {sil 100 100}]}
{91 [{sil 0 0} {p 15 27} {eh 29 51} {sts 52 104} {sil 105 105}]}
{105 [{sil 0 0} {p 18 28} {eh 29 48} {sts 49 70} {p 70 70} {z 73 98} {sil 99 99}]}
{125 [{sil 3 3} {p 19 29} {eh 30 49} {sts 50 105} {sil 106 106}]}

timeAligned = [{{p 16 28} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{eh 29 51} [{0 2} {2 2} {3 2} {1 2} {4 2}]} {{sts 52 104} [{2 3} {3 3} {4 3} {0 3} {1 3}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 27
i, iTime, newITime, timeStartFrom = 2 1 2 48
combinedVerdict    = [{p 0} {eh 0} {sts 0}]
ruleAlignedVerdict = [{p 0} {eh 0} {sts 0}]

score->
+1 for p
+1 for eh
+1 for sts
score<-: 8

results =
{72 [{sil 0 9} {p 10 20} {eh 21 38} {st 39 50} {s 51 69} {sil 70 86}]}
{80 [{sil 0 12} {p 13 22} {eh 23 43} {st 44 55} {s 56 76} {sil 77 93}]}
{91 [{sil 0 13} {p 14 25} {eh 26 49} {st 50 63} {s 64 87} {sil 88 117}]}
{105 [{sil 0 18} {p 19 29} {eh 30 54} {st 55 74} {s 75 100} {sil 101 136}]}
{125 [{sil 3 23} {p 24 36} {eh 37 61} {st 62 89} {s 90 120} {sil 121 163}]}

normalised results =
{72 [{sil 0 9} {p 14 28} {eh 29 53} {st 54 69} {s 71 96} {sil 97 119}]}
{80 [{sil 0 12} {p 16 28} {eh 29 54} {st 55 69} {s 70 95} {sil 96 116}]}
{91 [{sil 0 13} {p 15 27} {eh 29 54} {st 55 69} {s 70 96} {sil 97 129}]}
{105 [{sil 0 18} {p 18 28} {eh 29 51} {st 52 70} {s 71 95} {sil 96 130}]}
{125 [{sil 3 23} {p 19 29} {eh 30 49} {st 50 71} {s 72 96} {sil 97 130}]}

ruleAligned = [{{p 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{eh 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{st 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{s 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {p 14 28} {eh 29 53} {st 54 69} {s 71 96} {sil 97 97}]}
{80 [{sil 0 0} {p 16 28} {eh 29 54} {st 55 69} {s 70 95} {sil 96 96}]}
{91 [{sil 0 0} {p 15 27} {eh 29 54} {st 55 69} {s 70 96} {sil 97 97}]}
{105 [{sil 0 0} {p 18 28} {eh 29 51} {st 52 70} {s 71 95} {sil 96 96}]}
{125 [{sil 3 3} {p 19 29} {eh 30 49} {st 50 71} {s 72 96} {sil 97 97}]}

timeAligned = [{{p 16 28} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{eh 29 53} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{st 54 69} [{0 3} {3 3} {4 3} {1 3} {2 3}]} {{s 71 96} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 27
i, iTime, newITime, timeStartFrom = 2 1 2 49
i, iTime, newITime, timeStartFrom = 3 2 3 69
combinedVerdict    = [{p 0} {eh 0} {st 0} {s 0}]
ruleAlignedVerdict = [{p 0} {eh 0} {st 0} {s 0}]

score->
+1 for p
+1 for eh
+1 for st
+1 for s
score<-: 9

results =
{72 [{sil 0 9} {p 10 20} {eh 21 38} {s 39 49} {ts 50 71} {sil 72 86}]}
{80 [{sil 0 12} {p 13 22} {eh 23 42} {s 43 54} {ts 55 79} {sil 80 93}]}
{91 [{sil 0 13} {p 14 25} {eh 26 46} {s 47 63} {ts 64 95} {sil 96 117}]}
{105 [{sil 0 18} {p 19 29} {eh 30 54} {s 55 73} {ts 74 110} {sil 111 136}]}
{125 [{sil 3 23} {p 24 36} {eh 37 65} {s 66 89} {ts 90 131} {sil 132 163}]}

normalised results =
{72 [{sil 0 9} {p 14 28} {eh 29 53} {s 54 68} {ts 69 99} {sil 100 119}]}
{80 [{sil 0 12} {p 16 28} {eh 29 53} {s 54 68} {ts 69 99} {sil 100 116}]}
{91 [{sil 0 13} {p 15 27} {eh 29 51} {s 52 69} {ts 70 104} {sil 105 129}]}
{105 [{sil 0 18} {p 18 28} {eh 29 51} {s 52 70} {ts 70 105} {sil 106 130}]}
{125 [{sil 3 23} {p 19 29} {eh 30 52} {s 53 71} {ts 72 105} {sil 106 130}]}

ruleAligned = [{{p 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{eh 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{s 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{ts 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {p 14 28} {eh 29 53} {s 54 68} {ts 69 99} {sil 100 100}]}
{80 [{sil 0 0} {p 16 28} {eh 29 53} {s 54 68} {ts 69 99} {sil 100 100}]}
{91 [{sil 0 0} {p 15 27} {eh 29 51} {s 52 69} {ts 70 104} {sil 105 105}]}
{105 [{sil 0 0} {p 18 28} {eh 29 51} {s 52 70} {ts 70 105} {sil 106 106}]}
{125 [{sil 3 3} {p 19 29} {eh 30 52} {s 53 71} {ts 72 105} {sil 106 106}]}

timeAligned = [{{p 16 28} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{eh 29 52} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{s 53 69} [{2 3} {3 3} {4 3} {0 3} {1 3}]} {{ts 70 104} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 27
i, iTime, newITime, timeStartFrom = 2 1 2 51
i, iTime, newITime, timeStartFrom = 3 2 3 68
combinedVerdict    = [{p 0} {eh 0} {s 0} {ts 0}]
ruleAlignedVerdict = [{p 0} {eh 0} {s 0} {ts 0}]

score->
+1 for p
+1 for eh
+1 for s
+1 for ts
score<-: 9

results =
{72 [{sil 0 9} {p 10 20} {eh 21 38} {s 39 48} {t 49 53} {s 54 70} {sil 71 86}]}
{80 [{sil 0 12} {p 13 22} {eh 23 42} {s 43 54} {t 55 59} {s 60 76} {sil 77 93}]}
{91 [{sil 0 13} {p 14 25} {eh 26 46} {s 47 62} {t 63 66} {s 67 87} {sil 88 117}]}
{105 [{sil 0 18} {p 19 29} {eh 30 54} {s 55 73} {t 74 76} {s 77 100} {sil 101 136}]}
{125 [{sil 3 23} {p 24 36} {eh 37 65} {s 66 88} {t 89 91} {s 92 120} {sil 121 163}]}

normalised results =
{72 [{sil 0 9} {p 14 28} {eh 29 53} {s 54 67} {t 68 74} {s 75 97} {sil 99 119}]}
{80 [{sil 0 12} {p 16 28} {eh 29 53} {s 54 68} {t 69 74} {s 75 95} {sil 96 116}]}
{91 [{sil 0 13} {p 15 27} {eh 29 51} {s 52 68} {t 69 73} {s 74 96} {sil 97 129}]}
{105 [{sil 0 18} {p 18 28} {eh 29 51} {s 52 70} {t 70 70} {s 73 95} {sil 96 130}]}
{125 [{sil 3 23} {p 19 29} {eh 30 52} {s 53 70} {t 71 71} {s 74 96} {sil 97 130}]}

ruleAligned = [{{p 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{eh 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{s 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{t 1} [{0 4} {1 4} {2 4}]} {{s 0} [{0 5} {1 5} {2 5} {3 5} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {p 14 28} {eh 29 53} {s 54 67} {t 68 74} {s 75 97} {sil 99 99}]}
{80 [{sil 0 0} {p 16 28} {eh 29 53} {s 54 68} {t 69 74} {s 75 95} {sil 96 96}]}
{91 [{sil 0 0} {p 15 27} {eh 29 51} {s 52 68} {t 69 73} {s 74 96} {sil 97 97}]}
{105 [{sil 0 0} {p 18 28} {eh 29 51} {s 52 70} {t 70 70} {s 73 95} {sil 96 96}]}
{125 [{sil 3 3} {p 19 29} {eh 30 52} {s 53 70} {t 71 71} {s 74 96} {sil 97 97}]}

timeAligned = [{{p 16 28} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{eh 29 52} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{s 53 68} [{2 3} {3 3} {4 3} {0 3} {1 3}]} {{t 69 73} [{0 4} {1 4} {2 4}]} {{s 74 96} [{2 5} {3 5} {4 5} {0 5} {1 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 27
i, iTime, newITime, timeStartFrom = 2 1 2 51
i, iTime, newITime, timeStartFrom = 3 2 3 67
i, iTime, newITime, timeStartFrom = 4 3 4 73
combinedVerdict    = [{p 0} {eh 0} {s 0} {t 1} {s 0}]
ruleAlignedVerdict = [{p 0} {eh 0} {s 0} {t 1} {s 0}]

score->
+1 for p
+1 for eh
+1 for s
+1 for t
+1 for s
score<-: 10
testPronounce p good eh good s good t possible s good
publish->
phonsToAlphas = [{[p] p} {[eh] e} {[s] s} {[t] t} {[s] s}]
getVerdict<-:new {p [p] 0}
getVerdict<-:new {e [eh] 0}
getVerdict<-:new {s [s] 0}
getVerdict<-:new {t [t] 1}
getVerdict<-:new {s [s] 0}
lettersVerdicts = [{p [p] 0} {e [eh] 0} {s [s] 0} {t [t] 1} {s [s] 0}]
publish<-
{
  "results": [
    {
      "letters": "p",
      "phonemes": "p",
      "verdict": "good"
    },
    {
      "letters": "e",
      "phonemes": "ɛ",
      "verdict": "good"
    },
    {
      "letters": "s",
      "phonemes": "s",
      "verdict": "good"
    },
    {
      "letters": "t",
      "phonemes": "t",
      "verdict": "possible"
    },
    {
      "letters": "s",
      "phonemes": "s",
      "verdict": "good"
    }
  ],
  "err": null
}
