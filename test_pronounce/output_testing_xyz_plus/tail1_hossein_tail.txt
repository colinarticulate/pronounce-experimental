
 length of audio =  1.749



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.26 1.48 1.74

 start3, duration3, end3 =  0.78 0.66 1.44

 Initial start, duration, end =  0.16 1.58 1.74

 Cut at: start, duration =  0.16 1.5690000000000002     guard_end =  1.729 

Running scan for frate = 125
Considering guard ao with value 1 for t ...
candidateGuards = map[ao:true]
Picking guard, ao

Considering guard y with value 8.8 for ey ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 1.6 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 125 public <tail> = (((sil [((s <any_Cx_t_s_p>) | (<any_Cx_t_s_p> s))] [((s <any_vowel_noSlide>) | (<any_vowel_noSlide> s))]) | (sil p (sil [((s <any_Cx_t_s_p>) | (<any_Cx_t_s_p> s))] [((s <any_vowel_noSlide>) | (<any_vowel_noSlide> s))]))) (([(<any_Cx_ao_p_s_t> ao)] | [(ao <any_Cx_ao_p_s_t>)]) (t | ((<any_Cx_ao_p_s_t> ao) | (ao <any_Cx_ao_p_s_t>)))) ((([(<any_Vx_y_ao_ey_noSlide> y)] | [(y <any_Vx_y_ao_ey_noSlide>)]) ([(<any_Cx_y_ao_l_t> y)] | [(y <any_Cx_y_ao_l_t>)])) (ey | ((<any_Vx_y_ao_ey_noSlide> y) | (y <any_Vx_y_ao_ey_noSlide>)))) (([(<any_Cx_sh_y_l> sh)] | [(sh <any_Cx_sh_y_l>)]) (l | ((<any_Cx_sh_y_l> sh) | (sh <any_Cx_sh_y_l>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_d> d)] | [(d <any_Cx_sh_l_d>)]) sil))
Running scan for frate = 105
Considering guard ao with value 1 for t ...
candidateGuards = map[ao:true]
Picking guard, ao

Considering guard y with value 8.8 for ey ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 1.6 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 105 public <tail> = (((sil [((f <any_Cx_t_f_p>) | (<any_Cx_t_f_p> f))] [((f <any_vowel_noSlide>) | (<any_vowel_noSlide> f))]) | (sil p (sil [((f <any_Cx_t_f_p>) | (<any_Cx_t_f_p> f))] [((f <any_vowel_noSlide>) | (<any_vowel_noSlide> f))]))) (([(<any_Cx_ao_p_f_t> ao)] | [(ao <any_Cx_ao_p_f_t>)]) (t | ((<any_Cx_ao_p_f_t> ao) | (ao <any_Cx_ao_p_f_t>)))) ((([(<any_Vx_y_ao_ey_noSlide> y)] | [(y <any_Vx_y_ao_ey_noSlide>)]) ([(<any_Cx_y_ao_l_t> y)] | [(y <any_Cx_y_ao_l_t>)])) (ey | ((<any_Vx_y_ao_ey_noSlide> y) | (y <any_Vx_y_ao_ey_noSlide>)))) (([(<any_Cx_sh_y_l> sh)] | [(sh <any_Cx_sh_y_l>)]) (l | ((<any_Cx_sh_y_l> sh) | (sh <any_Cx_sh_y_l>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_f> f)] | [(f <any_Cx_sh_l_f>)]) sil))
Running scan for frate = 91
Considering guard ao with value 1 for t ...
candidateGuards = map[ao:true]
Picking guard, ao

Considering guard y with value 8.8 for ey ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 1.6 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 91 public <tail> = (((sil [((f <any_Cx_t_f_p>) | (<any_Cx_t_f_p> f))] [((f <any_vowel_noSlide>) | (<any_vowel_noSlide> f))]) | (sil p (sil [((f <any_Cx_t_f_p>) | (<any_Cx_t_f_p> f))] [((f <any_vowel_noSlide>) | (<any_vowel_noSlide> f))]))) (([(<any_Cx_ao_p_f_t> ao)] | [(ao <any_Cx_ao_p_f_t>)]) (t | ((<any_Cx_ao_p_f_t> ao) | (ao <any_Cx_ao_p_f_t>)))) ((([(<any_Vx_y_ao_ey_noSlide> y)] | [(y <any_Vx_y_ao_ey_noSlide>)]) ([(<any_Cx_y_ao_l_t> y)] | [(y <any_Cx_y_ao_l_t>)])) (ey | ((<any_Vx_y_ao_ey_noSlide> y) | (y <any_Vx_y_ao_ey_noSlide>)))) (([(<any_Cx_sh_y_l> sh)] | [(sh <any_Cx_sh_y_l>)]) (l | ((<any_Cx_sh_y_l> sh) | (sh <any_Cx_sh_y_l>)))) (([(<any_vowel_noSlide> r)] | [(r <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_r> r)] | [(r <any_Cx_sh_l_r>)]) sil))
Running scan for frate = 80
Considering guard ao with value 1 for t ...
candidateGuards = map[ao:true]
Picking guard, ao

Considering guard y with value 8.8 for ey ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 1.6 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 80 public <tail> = (((sil [((k <any_Cx_t_k_p>) | (<any_Cx_t_k_p> k))] [((k <any_vowel_noSlide>) | (<any_vowel_noSlide> k))]) | (sil p (sil [((k <any_Cx_t_k_p>) | (<any_Cx_t_k_p> k))] [((k <any_vowel_noSlide>) | (<any_vowel_noSlide> k))]))) (([(<any_Cx_ao_p_k_t> ao)] | [(ao <any_Cx_ao_p_k_t>)]) (t | ((<any_Cx_ao_p_k_t> ao) | (ao <any_Cx_ao_p_k_t>)))) ((([(<any_Vx_y_ao_ey_noSlide> y)] | [(y <any_Vx_y_ao_ey_noSlide>)]) ([(<any_Cx_y_ao_l_t> y)] | [(y <any_Cx_y_ao_l_t>)])) (ey | ((<any_Vx_y_ao_ey_noSlide> y) | (y <any_Vx_y_ao_ey_noSlide>)))) (([(<any_Cx_sh_y_l> sh)] | [(sh <any_Cx_sh_y_l>)]) (l | ((<any_Cx_sh_y_l> sh) | (sh <any_Cx_sh_y_l>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_thr> thr)] | [(thr <any_Cx_sh_l_thr>)]) sil))
Running scan for frate = 72
Considering guard ao with value 1 for t ...
candidateGuards = map[ao:true]
Picking guard, ao

Considering guard y with value 8.8 for ey ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 1.6 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 72 public <tail> = (((sil [((g <any_Cx_t_g_p>) | (<any_Cx_t_g_p> g))] [((g <any_vowel_noSlide>) | (<any_vowel_noSlide> g))]) | (sil p (sil [((g <any_Cx_t_g_p>) | (<any_Cx_t_g_p> g))] [((g <any_vowel_noSlide>) | (<any_vowel_noSlide> g))]))) (([(<any_Cx_ao_p_g_t> ao)] | [(ao <any_Cx_ao_p_g_t>)]) (t | ((<any_Cx_ao_p_g_t> ao) | (ao <any_Cx_ao_p_g_t>)))) ((([(<any_Vx_y_ao_ey_noSlide> y)] | [(y <any_Vx_y_ao_ey_noSlide>)]) ([(<any_Cx_y_ao_l_t> y)] | [(y <any_Cx_y_ao_l_t>)])) (ey | ((<any_Vx_y_ao_ey_noSlide> y) | (y <any_Vx_y_ao_ey_noSlide>)))) (([(<any_Cx_sh_y_l> sh)] | [(sh <any_Cx_sh_y_l>)]) (l | ((<any_Cx_sh_y_l> sh) | (sh <any_Cx_sh_y_l>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_b> b)] | [(b <any_Cx_sh_l_b>)]) sil))

results =
{72 [{sil 0 10} {p 11 23} {sil 24 34} {t 35 47} {ey 48 63} {l 64 74} {v 75 101} {b 102 107} {sil 108 111}]}
{80 [{sil 0 12} {p 13 25} {sil 26 38} {t 39 52} {ey 53 68} {sh 69 71} {w 72 82} {sh 83 85} {v 86 100} {ah 101 115} {thr 116 118} {sil 119 124}]}
{91 [{sil 0 14} {p 15 28} {sil 29 40} {t 41 43} {y 44 48} {d 49 60} {ey 61 80} {w 81 94} {sh 95 97} {sh 98 100} {g 101 115} {ah 116 131} {r 132 134} {sil 135 137}]}
{105 [{sil 0 17} {p 18 31} {sil 32 46} {t 47 49} {y 50 56} {d 57 70} {ey 71 93} {w 94 110} {sh 111 113} {f 114 133} {ah 134 161} {sil 162 164}]}
{125 [{sil 3 24} {p 25 37} {sil 38 59} {t 60 62} {y 63 68} {d 69 84} {ey 85 109} {sh 110 112} {w 113 130} {d 131 160} {ah 161 193} {sil 194 196}]}

normalised results =
{72 [{sil 0 10} {p 15 32} {sil 33 47} {t 49 65} {ey 67 88} {l 89 103} {v 104 140} {b 142 149} {sil 150 154}]}
{80 [{sil 0 12} {p 16 31} {sil 33 48} {t 49 65} {ey 66 85} {sh 86 86} {w 90 103} {sh 104 104} {v 108 125} {ah 126 144} {thr 145 145} {sil 149 155}]}
{91 [{sil 0 14} {p 16 31} {sil 32 44} {t 45 45} {y 48 53} {d 54 66} {ey 67 88} {w 89 103} {sh 104 104} {sh 108 108} {g 111 126} {ah 127 144} {r 145 145} {sil 148 148}]}
{105 [{sil 0 17} {p 17 30} {sil 30 44} {t 45 45} {y 48 53} {d 54 67} {ey 68 89} {w 90 105} {sh 106 106} {f 109 127} {ah 128 153} {sil 154 154}]}
{125 [{sil 3 24} {p 20 30} {sil 30 47} {t 48 48} {y 50 54} {d 55 67} {ey 68 87} {sh 88 88} {w 90 104} {d 105 128} {ah 129 154} {sil 155 155}]}

ruleAligned = [{{t 2} [{0 3} {1 3}]} {{d 3} [{2 5} {3 5} {4 5}]} {{ey 0} [{0 4} {1 4} {2 6} {3 6} {4 6}]} {{l 2} [{0 5}]} {{ah 3} [{1 9} {2 11} {3 10} {4 10}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {p 15 15} {sil 33 33} {t 49 65} {ey 67 88} {l 89 103} {v 104 104} {b 142 149} {sil 150 150}]}
{80 [{sil 0 0} {p 16 16} {sil 33 33} {t 49 65} {ey 66 85} {sh 86 86} {w 90 103} {sh 104 104} {v 108 125} {ah 126 144} {thr 145 145} {sil 149 149}]}
{91 [{sil 0 0} {p 16 16} {sil 32 32} {t 45 45} {y 48 53} {d 54 66} {ey 67 88} {w 89 103} {sh 104 104} {sh 108 108} {g 111 126} {ah 127 144} {r 145 145} {sil 148 148}]}
{105 [{sil 0 0} {p 17 17} {sil 30 30} {t 45 45} {y 48 53} {d 54 67} {ey 68 89} {w 90 105} {sh 106 106} {f 109 127} {ah 128 153} {sil 154 154}]}
{125 [{sil 3 3} {p 20 20} {sil 30 30} {t 48 48} {y 50 50} {d 55 67} {ey 68 87} {sh 88 88} {w 90 104} {d 105 128} {ah 129 154} {sil 155 155}]}

timeAligned = [{{d 55 66} [{2 5} {3 5} {4 5}]} {{ey 67 88} [{0 4} {1 4} {2 6} {3 6} {4 6}]} {{w 90 103} [{1 6} {2 7} {3 7} {4 8}]} {{ah 128 144} [{1 9} {2 11} {3 10} {4 10}]}]

i, iTime, newITime, timeStartFrom = 0 0 -1 0
i, iTime, newITime, timeStartFrom = 1 0 0 0
i, iTime, newITime, timeStartFrom = 2 0 1 66
i, iTime, newITime, timeStartFrom = 3 1 -1 85
i, iTime, newITime, timeStartFrom = 4 1 3 85
combinedVerdict    = [{t 2} {d 3} {ey 0} {l 2} {w 3} {ah 3}]
ruleAlignedVerdict = [{t 2} {d 3} {ey 0} {l 2} {ah 3}]

score->
-1 for t
-1 for d
+1 for ey
-1 for l
-1 for w
-1 for ah
score<-: -4
bestResult = {-4 [{t 2} {d 3} {ey 0} {l 2} {w 3} {ah 3}] [t ey l]}
testPronounce t missing d surprise ey good l missing w surprise ah surprise
publish->
phonsToAlphas = [{[t] t} {[ey] ai} {[l] l}]
getVerdict<-:new {t [t] 2}
getVerdict<-:new {ai [ey] 0}
getVerdict<-:new {l [l] 2}
lettersVerdicts = [{t [t] 2} {d [d] 3} {ai [ey] 0} {l [l] 2} {w [w] 3} {ah [ah] 3}]
publish<-
{
  "results": [
    {
      "letters": "t",
      "phonemes": "t",
      "verdict": "missing"
    },
    {
      "letters": "d",
      "phonemes": "d",
      "verdict": "surprise"
    },
    {
      "letters": "ai",
      "phonemes": "eɪ",
      "verdict": "good"
    },
    {
      "letters": "l",
      "phonemes": "l",
      "verdict": "missing"
    },
    {
      "letters": "w",
      "phonemes": "w",
      "verdict": "surprise"
    },
    {
      "letters": "ah",
      "phonemes": "ʌ",
      "verdict": "surprise"
    }
  ],
  "err": null
}
