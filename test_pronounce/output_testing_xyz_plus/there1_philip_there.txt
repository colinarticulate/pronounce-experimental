
 length of audio =  1.979625



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.52 0.86 1.38

 start3, duration3, end3 =  0.52 0.7999999999999999 1.3199999999999998

 Initial start, duration, end =  0.42000000000000004 0.9599999999999999 1.38

 Cut at: start, duration =  0.42000000000000004 1.41     guard_end =  1.83 

Running scan for frate = 125
Considering guard ch with value 1 for dh ...
Considering guard zh with value 1 for dh ...
candidateGuards = map[ch:true zh:true]
Picking guard, ch

Considering guard zh with value 1 for ehr ...
Considering guard ch with value 1 for ehr ...
candidateGuards = map[ch:true zh:true]
Picking guard, zh


frate, target rule = 125 public <there> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ch_p_z_dh> ch)] | [(ch <any_Cx_ch_p_z_dh>)]) (dh | t | ((<any_Cx_ch_p_z_dh_ehr> ch) | (ch <any_Cx_ch_p_z_dh_ehr>)))) (([(<any_Cx_zh_ch_ehr_dh> zh)] | [(zh <any_Cx_zh_ch_ehr_dh>)]) (ehr | ((<any_Cx_zh_ch_ehr> zh) | (zh <any_Cx_zh_ch_ehr>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_zh_ehr_thr> thr)] | [(thr <any_Cx_zh_ehr_thr>)]) sil))
Running scan for frate = 105
Considering guard ch with value 1 for dh ...
Considering guard zh with value 1 for dh ...
candidateGuards = map[ch:true zh:true]
Picking guard, zh

Considering guard zh with value 1 for ehr ...
Considering guard ch with value 1 for ehr ...
candidateGuards = map[ch:true zh:true]
Picking guard, zh


frate, target rule = 105 public <there> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_dh> zh)] | [(zh <any_Cx_zh_p_z_dh>)]) (dh | t | ((<any_Cx_zh_p_z_dh_ehr> zh) | (zh <any_Cx_zh_p_z_dh_ehr>)))) (([(<any_Cx_zh_zh_ehr_dh> zh)] | [(zh <any_Cx_zh_zh_ehr_dh>)]) (ehr | ((<any_Cx_zh_zh_ehr> zh) | (zh <any_Cx_zh_zh_ehr>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_zh_ehr_ng> ng)] | [(ng <any_Cx_zh_ehr_ng>)]) sil))
Running scan for frate = 91
Considering guard zh with value 1 for dh ...
Considering guard ch with value 1 for dh ...
candidateGuards = map[ch:true zh:true]
Picking guard, zh

Considering guard ch with value 1 for ehr ...
Considering guard zh with value 1 for ehr ...
candidateGuards = map[ch:true zh:true]
Picking guard, ch


frate, target rule = 91 public <there> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_dh> zh)] | [(zh <any_Cx_zh_p_z_dh>)]) (dh | t | ((<any_Cx_zh_p_z_dh_ehr> zh) | (zh <any_Cx_zh_p_z_dh_ehr>)))) (([(<any_Cx_ch_zh_ehr_dh> ch)] | [(ch <any_Cx_ch_zh_ehr_dh>)]) (ehr | ((<any_Cx_ch_zh_ehr> ch) | (ch <any_Cx_ch_zh_ehr>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_ch_ehr_thr> thr)] | [(thr <any_Cx_ch_ehr_thr>)]) sil))
Running scan for frate = 80
Considering guard ch with value 1 for dh ...
Considering guard zh with value 1 for dh ...
candidateGuards = map[ch:true zh:true]
Picking guard, ch

Considering guard ch with value 1 for ehr ...
Considering guard zh with value 1 for ehr ...
candidateGuards = map[ch:true zh:true]
Picking guard, ch


frate, target rule = 80 public <there> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ch_p_z_dh> ch)] | [(ch <any_Cx_ch_p_z_dh>)]) (dh | t | ((<any_Cx_ch_p_z_dh_ehr> ch) | (ch <any_Cx_ch_p_z_dh_ehr>)))) (([(<any_Cx_ch_ch_ehr_dh> ch)] | [(ch <any_Cx_ch_ch_ehr_dh>)]) (ehr | ((<any_Cx_ch_ch_ehr> ch) | (ch <any_Cx_ch_ch_ehr>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_ch_ehr_thr> thr)] | [(thr <any_Cx_ch_ehr_thr>)]) sil))
Running scan for frate = 72
Considering guard ch with value 1 for dh ...
Considering guard zh with value 1 for dh ...
candidateGuards = map[ch:true zh:true]
Picking guard, ch

Considering guard zh with value 1 for ehr ...
Considering guard ch with value 1 for ehr ...
candidateGuards = map[ch:true zh:true]
Picking guard, zh


frate, target rule = 72 public <there> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ch_p_z_dh> ch)] | [(ch <any_Cx_ch_p_z_dh>)]) (dh | t | ((<any_Cx_ch_p_z_dh_ehr> ch) | (ch <any_Cx_ch_p_z_dh_ehr>)))) (([(<any_Cx_zh_ch_ehr_dh> zh)] | [(zh <any_Cx_zh_ch_ehr_dh>)]) (ehr | ((<any_Cx_zh_ch_ehr> zh) | (zh <any_Cx_zh_ch_ehr>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_zh_ehr_f> f)] | [(f <any_Cx_zh_ehr_f>)]) sil))

results =
{72 [{sil 0 11} {dh 12 30} {ehr 31 59} {sil 60 69}]}
{80 [{sil 0 12} {dh 13 33} {ehr 34 66} {sil 67 74}]}
{91 [{sil 0 15} {dh 16 49} {ehr 50 77} {sil 78 123}]}
{105 [{sil 0 17} {dh 18 44} {ehr 45 50} {ih 51 72} {ng 73 88} {sil 89 143}]}
{125 [{sil 3 22} {dh 23 54} {ehr 55 59} {thr 60 62} {eh 63 105} {sil 106 176}]}

normalised results =
{72 [{sil 0 11} {dh 17 42} {ehr 43 82} {sil 83 96}]}
{80 [{sil 0 12} {dh 16 41} {ehr 43 83} {sil 84 93}]}
{91 [{sil 0 15} {dh 18 54} {ehr 55 85} {sil 86 135}]}
{105 [{sil 0 17} {dh 17 42} {ehr 43 48} {ih 49 69} {ng 70 84} {sil 85 136}]}
{125 [{sil 3 22} {dh 18 43} {ehr 44 47} {thr 48 48} {eh 50 84} {sil 85 141}]}

ruleAligned = [{{dh 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ehr 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {dh 17 42} {ehr 43 82} {sil 83 83}]}
{80 [{sil 0 0} {dh 16 41} {ehr 43 83} {sil 84 84}]}
{91 [{sil 0 0} {dh 18 54} {ehr 55 85} {sil 86 86}]}
{105 [{sil 0 0} {dh 17 42} {ehr 43 48} {ih 49 69} {ng 70 84} {sil 85 85}]}
{125 [{sil 3 3} {dh 18 43} {ehr 44 47} {thr 48 48} {eh 50 84} {sil 85 85}]}

timeAligned = [{{dh 17 42} [{0 1} {1 1} {3 1} {2 1} {4 1}]} {{ehr 43 48} [{0 2} {1 2} {3 2} {4 2}]} {{ehr 55 82} [{0 2} {1 2} {2 2}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 41
combinedVerdict    = [{dh 0} {ehr 0} {ehr 3}]
ruleAlignedVerdict = [{dh 0} {ehr 0}]

score->
+1 for dh
+1 for ehr
score<-: 7
testPronounce dh good ehr good
publish->
phonsToAlphas = [{[dh] th} {[ehr] ere}]
getVerdict<-:new {th [dh] 0}
getVerdict<-:new {ere [ehr] 0}
lettersVerdicts = [{th [dh] 0} {ere [ehr] 0}]
publish<-
{
  "results": [
    {
      "letters": "th",
      "phonemes": "ð",
      "verdict": "good"
    },
    {
      "letters": "ere",
      "phonemes": "ɛː",
      "verdict": "good"
    }
  ],
  "err": null
}
