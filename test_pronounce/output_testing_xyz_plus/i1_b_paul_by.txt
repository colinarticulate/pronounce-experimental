
 length of audio =  2.018687



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.86 0.7999999999999999 1.66

 start3, duration3, end3 =  0.88 0.58 1.46

 Initial start, duration, end =  0.76 0.8999999999999999 1.66

 Cut at: start, duration =  0.76 1.2386869999999999     guard_end =  1.9986869999999999 

Running scan for frate = 125
Considering guard jh with value 1 for b ...
Considering guard s with value 1 for b ...
Considering guard sh with value 1 for b ...
Considering guard zh with value 1 for b ...
candidateGuards = map[jh:true s:true sh:true zh:true]
Picking guard, jh

Considering guard sh with value 1 for ay ...
Considering guard jh with value 1 for ay ...
Considering guard s with value 1 for ay ...
Considering guard zh with value 1 for ay ...
candidateGuards = map[jh:true s:true sh:true zh:true]
Picking guard, sh


frate, target rule = 125 public <by> = (((sil [((l <any_Cx_b_l_hh>) | (<any_Cx_b_l_hh> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]) | (sil hh (sil [((l <any_Cx_b_l_hh>) | (<any_Cx_b_l_hh> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]))) (([(<any_Cx_jh_hh_l_b> jh)] | [(jh <any_Cx_jh_hh_l_b>)]) (b | ((<any_Cx_jh_hh_l_b> jh) | (jh <any_Cx_jh_hh_l_b>)))) ((([(<any_Vx_sh_jh_ay_noSlide> sh)] | [(sh <any_Vx_sh_jh_ay_noSlide>)]) ([(<any_Cx_sh_jh_b> sh)] | [(sh <any_Cx_sh_jh_b>)])) (ay | ((<any_Vx_sh_jh_ay_noSlide> sh) | (sh <any_Vx_sh_jh_ay_noSlide>)))) (([(<any_Cx_sh_ay_n> n)] | [(n <any_Cx_sh_ay_n>)]) ([(<any_Vx_sh_ay_n> n)] | [(n <any_Vx_sh_ay_n>)]) sil))
Running scan for frate = 105
Considering guard jh with value 1 for b ...
Considering guard zh with value 1 for b ...
Considering guard sh with value 1 for b ...
Considering guard s with value 1 for b ...
candidateGuards = map[jh:true s:true sh:true zh:true]
Picking guard, jh

Considering guard jh with value 1 for ay ...
Considering guard sh with value 1 for ay ...
Considering guard zh with value 1 for ay ...
Considering guard s with value 1 for ay ...
candidateGuards = map[jh:true s:true sh:true zh:true]
Picking guard, jh


frate, target rule = 105 public <by> = (((sil [((d <any_Cx_b_d_hh>) | (<any_Cx_b_d_hh> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil hh (sil [((d <any_Cx_b_d_hh>) | (<any_Cx_b_d_hh> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_jh_hh_d_b> jh)] | [(jh <any_Cx_jh_hh_d_b>)]) (b | ((<any_Cx_jh_hh_d_b> jh) | (jh <any_Cx_jh_hh_d_b>)))) ((([(<any_Vx_jh_jh_ay_noSlide> jh)] | [(jh <any_Vx_jh_jh_ay_noSlide>)]) ([(<any_Cx_jh_jh_b> jh)] | [(jh <any_Cx_jh_jh_b>)])) (ay | ((<any_Vx_jh_jh_ay_noSlide> jh) | (jh <any_Vx_jh_jh_ay_noSlide>)))) (([(<any_Cx_jh_ay_f> f)] | [(f <any_Cx_jh_ay_f>)]) ([(<any_Vx_jh_ay_f> f)] | [(f <any_Vx_jh_ay_f>)]) sil))
Running scan for frate = 91
Considering guard jh with value 1 for b ...
Considering guard sh with value 1 for b ...
Considering guard s with value 1 for b ...
Considering guard zh with value 1 for b ...
candidateGuards = map[jh:true s:true sh:true zh:true]
Picking guard, jh

Considering guard sh with value 1 for ay ...
Considering guard s with value 1 for ay ...
Considering guard jh with value 1 for ay ...
Considering guard zh with value 1 for ay ...
candidateGuards = map[jh:true s:true sh:true zh:true]
Picking guard, sh


frate, target rule = 91 public <by> = (((sil [((d <any_Cx_b_d_hh>) | (<any_Cx_b_d_hh> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil hh (sil [((d <any_Cx_b_d_hh>) | (<any_Cx_b_d_hh> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_jh_hh_d_b> jh)] | [(jh <any_Cx_jh_hh_d_b>)]) (b | ((<any_Cx_jh_hh_d_b> jh) | (jh <any_Cx_jh_hh_d_b>)))) ((([(<any_Vx_sh_jh_ay_noSlide> sh)] | [(sh <any_Vx_sh_jh_ay_noSlide>)]) ([(<any_Cx_sh_jh_b> sh)] | [(sh <any_Cx_sh_jh_b>)])) (ay | ((<any_Vx_sh_jh_ay_noSlide> sh) | (sh <any_Vx_sh_jh_ay_noSlide>)))) (([(<any_Cx_sh_ay_m> m)] | [(m <any_Cx_sh_ay_m>)]) ([(<any_Vx_sh_ay_m> m)] | [(m <any_Vx_sh_ay_m>)]) sil))
Running scan for frate = 80
Considering guard zh with value 1 for b ...
Considering guard s with value 1 for b ...
Considering guard jh with value 1 for b ...
Considering guard sh with value 1 for b ...
candidateGuards = map[jh:true s:true sh:true zh:true]
Picking guard, s

Considering guard s with value 1 for ay ...
Considering guard sh with value 1 for ay ...
Considering guard zh with value 1 for ay ...
Considering guard jh with value 1 for ay ...
candidateGuards = map[jh:true s:true sh:true zh:true]
Picking guard, sh


frate, target rule = 80 public <by> = (((sil [((v <any_Cx_b_v_hh>) | (<any_Cx_b_v_hh> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]) | (sil hh (sil [((v <any_Cx_b_v_hh>) | (<any_Cx_b_v_hh> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]))) (([(<any_Cx_s_hh_v_b> s)] | [(s <any_Cx_s_hh_v_b>)]) (b | ((<any_Cx_s_hh_v_b> s) | (s <any_Cx_s_hh_v_b>)))) ((([(<any_Vx_sh_s_ay_noSlide> sh)] | [(sh <any_Vx_sh_s_ay_noSlide>)]) ([(<any_Cx_sh_s_b> sh)] | [(sh <any_Cx_sh_s_b>)])) (ay | ((<any_Vx_sh_s_ay_noSlide> sh) | (sh <any_Vx_sh_s_ay_noSlide>)))) (([(<any_Cx_sh_ay_n> n)] | [(n <any_Cx_sh_ay_n>)]) ([(<any_Vx_sh_ay_n> n)] | [(n <any_Vx_sh_ay_n>)]) sil))
Running scan for frate = 72
Considering guard zh with value 1 for b ...
Considering guard jh with value 1 for b ...
Considering guard s with value 1 for b ...
Considering guard sh with value 1 for b ...
candidateGuards = map[jh:true s:true sh:true zh:true]
Picking guard, zh

Considering guard zh with value 1 for ay ...
Considering guard sh with value 1 for ay ...
Considering guard s with value 1 for ay ...
Considering guard jh with value 1 for ay ...
candidateGuards = map[jh:true s:true sh:true zh:true]
Picking guard, zh


frate, target rule = 72 public <by> = (((sil [((d <any_Cx_b_d_hh>) | (<any_Cx_b_d_hh> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil hh (sil [((d <any_Cx_b_d_hh>) | (<any_Cx_b_d_hh> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_zh_hh_d_b> zh)] | [(zh <any_Cx_zh_hh_d_b>)]) (b | ((<any_Cx_zh_hh_d_b> zh) | (zh <any_Cx_zh_hh_d_b>)))) ((([(<any_Vx_zh_zh_ay_noSlide> zh)] | [(zh <any_Vx_zh_zh_ay_noSlide>)]) ([(<any_Cx_zh_zh_b> zh)] | [(zh <any_Cx_zh_zh_b>)])) (ay | ((<any_Vx_zh_zh_ay_noSlide> zh) | (zh <any_Vx_zh_zh_ay_noSlide>)))) (([(<any_Cx_zh_ay_ng> ng)] | [(ng <any_Cx_zh_ay_ng>)]) ([(<any_Vx_zh_ay_ng> ng)] | [(ng <any_Vx_zh_ay_ng>)]) sil))

results =
{72 [{sil 0 9} {b 10 12} {ay 13 44} {sil 45 56}]}
{80 [{sil 0 11} {b 12 14} {ay 15 49} {sil 50 61}]}
{91 [{sil 0 13} {b 14 16} {ay 17 58} {sil 59 111}]}
{105 [{sil 0 16} {b 17 19} {ay 20 67} {sil 68 129}]}
{125 [{sil 3 21} {b 22 25} {ay 26 81} {sil 82 154}]}

normalised results =
{72 [{sil 0 9} {b 14 14} {ay 18 61} {sil 63 78}]}
{80 [{sil 0 11} {b 15 15} {ay 19 61} {sil 63 76}]}
{91 [{sil 0 13} {b 15 15} {ay 19 64} {sil 65 122}]}
{105 [{sil 0 16} {b 16 16} {ay 19 64} {sil 65 123}]}
{125 [{sil 3 21} {b 18 20} {ay 21 65} {sil 66 123}]}

ruleAligned = [{{b 2} [{4 1}]} {{ay 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {b 14 14} {ay 18 61} {sil 63 63}]}
{80 [{sil 0 0} {b 15 15} {ay 19 61} {sil 63 63}]}
{91 [{sil 0 0} {b 15 15} {ay 19 64} {sil 65 65}]}
{105 [{sil 0 0} {b 16 16} {ay 19 64} {sil 65 65}]}
{125 [{sil 3 3} {b 18 20} {ay 21 65} {sil 66 66}]}

timeAligned = [{{ay 19 64} [{0 2} {1 2} {2 2} {3 2} {4 2}]}]

i, iTime, newITime, timeStartFrom = 0 0 -1 0
i, iTime, newITime, timeStartFrom = 1 0 0 0
combinedVerdict    = [{b 2} {ay 0}]
ruleAlignedVerdict = [{b 2} {ay 0}]

score->
-1 for b
+1 for ay
score<-: 0
bestResult = {0 [{b 2} {ay 0}] [b ay]}
testPronounce b missing ay good
publish->
phonsToAlphas = [{[b] b} {[ay] y}]
getVerdict<-:new {b [b] 2}
getVerdict<-:new {y [ay] 0}
lettersVerdicts = [{b [b] 2} {y [ay] 0}]
publish<-
{
  "results": [
    {
      "letters": "b",
      "phonemes": "b",
      "verdict": "missing"
    },
    {
      "letters": "y",
      "phonemes": "ɑɪ",
      "verdict": "good"
    }
  ],
  "err": null
}
