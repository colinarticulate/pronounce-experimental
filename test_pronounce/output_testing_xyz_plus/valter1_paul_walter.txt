
 length of audio =  2.901063



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  1.24 1.1400000000000001 2.38

 start3, duration3, end3 =  1.24 0.9 2.14

 Initial start, duration, end =  1.14 1.24 2.38

 Cut at: start, duration =  1.14 1.69     guard_end =  2.83 

Running scan for frate = 125
Running scan for frate = 125
Considering guard sh with value 0.8 for w ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 0.8 for w ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ao ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ao ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 5.4 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 5.4 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard y with value 7.199999999999999 for t ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 7.199999999999999 for t ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard zh with value 1 for er ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 125 public <walter> = (((sil [((n <any_Cx_w_n_p>) | (<any_Cx_w_n_p> n))] [((n <any_vowel_noSlide>) | (<any_vowel_noSlide> n))]) | (sil p (sil [((n <any_Cx_w_n_p>) | (<any_Cx_w_n_p> n))] [((n <any_vowel_noSlide>) | (<any_vowel_noSlide> n))]))) (([(<any_Cx_sh_p_n_w> sh)] | [(sh <any_Cx_sh_p_n_w>)]) (w | v | ((<any_Cx_sh_p_n_w> sh) | (sh <any_Cx_sh_p_n_w>)))) ((([(<any_Vx_sh_sh_ao_noSlide> sh)] | [(sh <any_Vx_sh_sh_ao_noSlide>)]) ([(<any_Cx_sh_sh_l_w> sh)] | [(sh <any_Cx_sh_sh_l_w>)])) (ao | ((<any_Vx_sh_sh_ao_noSlide> sh) | (sh <any_Vx_sh_sh_ao_noSlide>)))) (([(<any_Cx_sh_sh_l_t> sh)] | [(sh <any_Cx_sh_sh_l_t>)]) (l | ((<any_Cx_sh_sh_l_t> sh) | (sh <any_Cx_sh_sh_l_t>)))) (([(<any_Cx_y_sh_t_l> y)] | [(y <any_Cx_y_sh_t_l>)]) (t | ((<any_Cx_y_sh_t_l> y) | (y <any_Cx_y_sh_t_l>)))) ((([(<any_Vx_zh_y_er_noSlide> zh)] | [(zh <any_Vx_zh_y_er_noSlide>)]) ([(<any_Cx_zh_y_t> zh)] | [(zh <any_Cx_zh_y_t>)])) (er | ((<any_Vx_zh_y_er_noSlide> zh) | (zh <any_Vx_zh_y_er_noSlide>)))) (([(<any_Cx_zh_er_d> d)] | [(d <any_Cx_zh_er_d>)]) ([(<any_Vx_zh_er_d> d)] | [(d <any_Vx_zh_er_d>)]) sil))
frate, target rule = 125 public <walter> = (((sil [((m <any_Cx_w_m_p>) | (<any_Cx_w_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]) | (sil p (sil [((m <any_Cx_w_m_p>) | (<any_Cx_w_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]))) (([(<any_Cx_sh_p_m_w> sh)] | [(sh <any_Cx_sh_p_m_w>)]) (w | v | ((<any_Cx_sh_p_m_w> sh) | (sh <any_Cx_sh_p_m_w>)))) ((([(<any_Vx_sh_sh_ao_noSlide> sh)] | [(sh <any_Vx_sh_sh_ao_noSlide>)]) ([(<any_Cx_sh_sh_l_w> sh)] | [(sh <any_Cx_sh_sh_l_w>)])) (ao | ((<any_Vx_sh_sh_ao_noSlide> sh) | (sh <any_Vx_sh_sh_ao_noSlide>)))) (([(<any_Cx_sh_sh_l_t> sh)] | [(sh <any_Cx_sh_sh_l_t>)]) (l | ((<any_Cx_sh_sh_l_t> sh) | (sh <any_Cx_sh_sh_l_t>)))) (([(<any_Cx_y_sh_t_l> y)] | [(y <any_Cx_y_sh_t_l>)]) (t | ((<any_Cx_y_sh_t_axr_l> y) | (y <any_Cx_y_sh_t_axr_l>)))) (([(<any_Cx_zh_y_axr_t> zh)] | [(zh <any_Cx_zh_y_axr_t>)]) (axr | ((<any_Cx_zh_y_axr_t> zh) | (zh <any_Cx_zh_y_axr_t>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_f> f)] | [(f <any_Cx_zh_axr_f>)]) sil))
Running scan for frate = 105
Considering guard sh with value 0.8 for w ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 105
Considering guard sh with value 1.6 for ao ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 0.8 for w ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 5.4 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ao ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard y with value 7.199999999999999 for t ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 5.4 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 1 for er ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard y with value 7.199999999999999 for t ...
candidateGuards = map[y:true]
Picking guard, y

frate, target rule = 105 public <walter> = (((sil [((n <any_Cx_w_n_p>) | (<any_Cx_w_n_p> n))] [((n <any_vowel_noSlide>) | (<any_vowel_noSlide> n))]) | (sil p (sil [((n <any_Cx_w_n_p>) | (<any_Cx_w_n_p> n))] [((n <any_vowel_noSlide>) | (<any_vowel_noSlide> n))]))) (([(<any_Cx_sh_p_n_w> sh)] | [(sh <any_Cx_sh_p_n_w>)]) (w | v | ((<any_Cx_sh_p_n_w> sh) | (sh <any_Cx_sh_p_n_w>)))) ((([(<any_Vx_sh_sh_ao_noSlide> sh)] | [(sh <any_Vx_sh_sh_ao_noSlide>)]) ([(<any_Cx_sh_sh_l_w> sh)] | [(sh <any_Cx_sh_sh_l_w>)])) (ao | ((<any_Vx_sh_sh_ao_noSlide> sh) | (sh <any_Vx_sh_sh_ao_noSlide>)))) (([(<any_Cx_sh_sh_l_t> sh)] | [(sh <any_Cx_sh_sh_l_t>)]) (l | ((<any_Cx_sh_sh_l_t> sh) | (sh <any_Cx_sh_sh_l_t>)))) (([(<any_Cx_y_sh_t_l> y)] | [(y <any_Cx_y_sh_t_l>)]) (t | ((<any_Cx_y_sh_t_l> y) | (y <any_Cx_y_sh_t_l>)))) ((([(<any_Vx_zh_y_er_noSlide> zh)] | [(zh <any_Vx_zh_y_er_noSlide>)]) ([(<any_Cx_zh_y_t> zh)] | [(zh <any_Cx_zh_y_t>)])) (er | ((<any_Vx_zh_y_er_noSlide> zh) | (zh <any_Vx_zh_y_er_noSlide>)))) (([(<any_Cx_zh_er_n> n)] | [(n <any_Cx_zh_er_n>)]) ([(<any_Vx_zh_er_n> n)] | [(n <any_Vx_zh_er_n>)]) sil))
Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 105 public <walter> = (((sil [((m <any_Cx_w_m_p>) | (<any_Cx_w_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]) | (sil p (sil [((m <any_Cx_w_m_p>) | (<any_Cx_w_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]))) (([(<any_Cx_sh_p_m_w> sh)] | [(sh <any_Cx_sh_p_m_w>)]) (w | v | ((<any_Cx_sh_p_m_w> sh) | (sh <any_Cx_sh_p_m_w>)))) ((([(<any_Vx_sh_sh_ao_noSlide> sh)] | [(sh <any_Vx_sh_sh_ao_noSlide>)]) ([(<any_Cx_sh_sh_l_w> sh)] | [(sh <any_Cx_sh_sh_l_w>)])) (ao | ((<any_Vx_sh_sh_ao_noSlide> sh) | (sh <any_Vx_sh_sh_ao_noSlide>)))) (([(<any_Cx_sh_sh_l_t> sh)] | [(sh <any_Cx_sh_sh_l_t>)]) (l | ((<any_Cx_sh_sh_l_t> sh) | (sh <any_Cx_sh_sh_l_t>)))) (([(<any_Cx_y_sh_t_l> y)] | [(y <any_Cx_y_sh_t_l>)]) (t | ((<any_Cx_y_sh_t_axr_l> y) | (y <any_Cx_y_sh_t_axr_l>)))) (([(<any_Cx_zh_y_axr_t> zh)] | [(zh <any_Cx_zh_y_axr_t>)]) (axr | ((<any_Cx_zh_y_axr_t> zh) | (zh <any_Cx_zh_y_axr_t>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_ng> ng)] | [(ng <any_Cx_zh_axr_ng>)]) sil))
Running scan for frate = 91
Considering guard sh with value 0.8 for w ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 91
Considering guard sh with value 1.6 for ao ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 0.8 for w ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 5.4 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ao ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard y with value 7.199999999999999 for t ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 5.4 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard y with value 7.199999999999999 for t ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard zh with value 1 for er ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 91 public <walter> = (((sil [((l <any_Cx_w_l_p>) | (<any_Cx_w_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]) | (sil p (sil [((l <any_Cx_w_l_p>) | (<any_Cx_w_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]))) (([(<any_Cx_sh_p_l_w> sh)] | [(sh <any_Cx_sh_p_l_w>)]) (w | v | ((<any_Cx_sh_p_l_w> sh) | (sh <any_Cx_sh_p_l_w>)))) ((([(<any_Vx_sh_sh_ao_noSlide> sh)] | [(sh <any_Vx_sh_sh_ao_noSlide>)]) ([(<any_Cx_sh_sh_l_w> sh)] | [(sh <any_Cx_sh_sh_l_w>)])) (ao | ((<any_Vx_sh_sh_ao_noSlide> sh) | (sh <any_Vx_sh_sh_ao_noSlide>)))) (([(<any_Cx_sh_sh_l_t> sh)] | [(sh <any_Cx_sh_sh_l_t>)]) (l | ((<any_Cx_sh_sh_l_t> sh) | (sh <any_Cx_sh_sh_l_t>)))) (([(<any_Cx_y_sh_t_l> y)] | [(y <any_Cx_y_sh_t_l>)]) (t | ((<any_Cx_y_sh_t_axr_l> y) | (y <any_Cx_y_sh_t_axr_l>)))) (([(<any_Cx_zh_y_axr_t> zh)] | [(zh <any_Cx_zh_y_axr_t>)]) (axr | ((<any_Cx_zh_y_axr_t> zh) | (zh <any_Cx_zh_y_axr_t>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_m> m)] | [(m <any_Cx_zh_axr_m>)]) sil))
Running scan for frate = 80
frate, target rule = 91 public <walter> = (((sil [((d <any_Cx_w_d_p>) | (<any_Cx_w_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil p (sil [((d <any_Cx_w_d_p>) | (<any_Cx_w_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_sh_p_d_w> sh)] | [(sh <any_Cx_sh_p_d_w>)]) (w | v | ((<any_Cx_sh_p_d_w> sh) | (sh <any_Cx_sh_p_d_w>)))) ((([(<any_Vx_sh_sh_ao_noSlide> sh)] | [(sh <any_Vx_sh_sh_ao_noSlide>)]) ([(<any_Cx_sh_sh_l_w> sh)] | [(sh <any_Cx_sh_sh_l_w>)])) (ao | ((<any_Vx_sh_sh_ao_noSlide> sh) | (sh <any_Vx_sh_sh_ao_noSlide>)))) (([(<any_Cx_sh_sh_l_t> sh)] | [(sh <any_Cx_sh_sh_l_t>)]) (l | ((<any_Cx_sh_sh_l_t> sh) | (sh <any_Cx_sh_sh_l_t>)))) (([(<any_Cx_y_sh_t_l> y)] | [(y <any_Cx_y_sh_t_l>)]) (t | ((<any_Cx_y_sh_t_l> y) | (y <any_Cx_y_sh_t_l>)))) ((([(<any_Vx_zh_y_er_noSlide> zh)] | [(zh <any_Vx_zh_y_er_noSlide>)]) ([(<any_Cx_zh_y_t> zh)] | [(zh <any_Cx_zh_y_t>)])) (er | ((<any_Vx_zh_y_er_noSlide> zh) | (zh <any_Vx_zh_y_er_noSlide>)))) (([(<any_Cx_zh_er_w> w)] | [(w <any_Cx_zh_er_w>)]) ([(<any_Vx_zh_er_w> w)] | [(w <any_Vx_zh_er_w>)]) sil))
Considering guard sh with value 0.8 for w ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ao ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 80
Considering guard sh with value 5.4 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 0.8 for w ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard y with value 7.199999999999999 for t ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 1.6 for ao ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 80 public <walter> = (((sil [((z <any_Cx_w_z_p>) | (<any_Cx_w_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_w_z_p>) | (<any_Cx_w_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_w> sh)] | [(sh <any_Cx_sh_p_z_w>)]) (w | v | ((<any_Cx_sh_p_z_w> sh) | (sh <any_Cx_sh_p_z_w>)))) ((([(<any_Vx_sh_sh_ao_noSlide> sh)] | [(sh <any_Vx_sh_sh_ao_noSlide>)]) ([(<any_Cx_sh_sh_l_w> sh)] | [(sh <any_Cx_sh_sh_l_w>)])) (ao | ((<any_Vx_sh_sh_ao_noSlide> sh) | (sh <any_Vx_sh_sh_ao_noSlide>)))) (([(<any_Cx_sh_sh_l_t> sh)] | [(sh <any_Cx_sh_sh_l_t>)]) (l | ((<any_Cx_sh_sh_l_t> sh) | (sh <any_Cx_sh_sh_l_t>)))) (([(<any_Cx_y_sh_t_l> y)] | [(y <any_Cx_y_sh_t_l>)]) (t | ((<any_Cx_y_sh_t_axr_l> y) | (y <any_Cx_y_sh_t_axr_l>)))) (([(<any_Cx_zh_y_axr_t> zh)] | [(zh <any_Cx_zh_y_axr_t>)]) (axr | ((<any_Cx_zh_y_axr_t> zh) | (zh <any_Cx_zh_y_axr_t>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_f> f)] | [(f <any_Cx_zh_axr_f>)]) sil))
Considering guard sh with value 5.4 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard y with value 7.199999999999999 for t ...
candidateGuards = map[y:true]
Picking guard, y

Running scan for frate = 72
Considering guard zh with value 1 for er ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 0.8 for w ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 80 public <walter> = (((sil [((d <any_Cx_w_d_p>) | (<any_Cx_w_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil p (sil [((d <any_Cx_w_d_p>) | (<any_Cx_w_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_sh_p_d_w> sh)] | [(sh <any_Cx_sh_p_d_w>)]) (w | v | ((<any_Cx_sh_p_d_w> sh) | (sh <any_Cx_sh_p_d_w>)))) ((([(<any_Vx_sh_sh_ao_noSlide> sh)] | [(sh <any_Vx_sh_sh_ao_noSlide>)]) ([(<any_Cx_sh_sh_l_w> sh)] | [(sh <any_Cx_sh_sh_l_w>)])) (ao | ((<any_Vx_sh_sh_ao_noSlide> sh) | (sh <any_Vx_sh_sh_ao_noSlide>)))) (([(<any_Cx_sh_sh_l_t> sh)] | [(sh <any_Cx_sh_sh_l_t>)]) (l | ((<any_Cx_sh_sh_l_t> sh) | (sh <any_Cx_sh_sh_l_t>)))) (([(<any_Cx_y_sh_t_l> y)] | [(y <any_Cx_y_sh_t_l>)]) (t | ((<any_Cx_y_sh_t_l> y) | (y <any_Cx_y_sh_t_l>)))) ((([(<any_Vx_zh_y_er_noSlide> zh)] | [(zh <any_Vx_zh_y_er_noSlide>)]) ([(<any_Cx_zh_y_t> zh)] | [(zh <any_Cx_zh_y_t>)])) (er | ((<any_Vx_zh_y_er_noSlide> zh) | (zh <any_Vx_zh_y_er_noSlide>)))) (([(<any_Cx_zh_er_n> n)] | [(n <any_Cx_zh_er_n>)]) ([(<any_Vx_zh_er_n> n)] | [(n <any_Vx_zh_er_n>)]) sil))
Considering guard sh with value 1.6 for ao ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 5.4 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 72
Considering guard y with value 7.199999999999999 for t ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 0.8 for w ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 1.6 for ao ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 5.4 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 72 public <walter> = (((sil [((d <any_Cx_w_d_p>) | (<any_Cx_w_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil p (sil [((d <any_Cx_w_d_p>) | (<any_Cx_w_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_sh_p_d_w> sh)] | [(sh <any_Cx_sh_p_d_w>)]) (w | v | ((<any_Cx_sh_p_d_w> sh) | (sh <any_Cx_sh_p_d_w>)))) ((([(<any_Vx_sh_sh_ao_noSlide> sh)] | [(sh <any_Vx_sh_sh_ao_noSlide>)]) ([(<any_Cx_sh_sh_l_w> sh)] | [(sh <any_Cx_sh_sh_l_w>)])) (ao | ((<any_Vx_sh_sh_ao_noSlide> sh) | (sh <any_Vx_sh_sh_ao_noSlide>)))) (([(<any_Cx_sh_sh_l_t> sh)] | [(sh <any_Cx_sh_sh_l_t>)]) (l | ((<any_Cx_sh_sh_l_t> sh) | (sh <any_Cx_sh_sh_l_t>)))) (([(<any_Cx_y_sh_t_l> y)] | [(y <any_Cx_y_sh_t_l>)]) (t | ((<any_Cx_y_sh_t_axr_l> y) | (y <any_Cx_y_sh_t_axr_l>)))) (([(<any_Cx_zh_y_axr_t> zh)] | [(zh <any_Cx_zh_y_axr_t>)]) (axr | ((<any_Cx_zh_y_axr_t> zh) | (zh <any_Cx_zh_y_axr_t>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_thr> thr)] | [(thr <any_Cx_zh_axr_thr>)]) sil))
Considering guard y with value 7.199999999999999 for t ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard zh with value 1 for er ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 72 public <walter> = (((sil [((n <any_Cx_w_n_p>) | (<any_Cx_w_n_p> n))] [((n <any_vowel_noSlide>) | (<any_vowel_noSlide> n))]) | (sil p (sil [((n <any_Cx_w_n_p>) | (<any_Cx_w_n_p> n))] [((n <any_vowel_noSlide>) | (<any_vowel_noSlide> n))]))) (([(<any_Cx_sh_p_n_w> sh)] | [(sh <any_Cx_sh_p_n_w>)]) (w | v | ((<any_Cx_sh_p_n_w> sh) | (sh <any_Cx_sh_p_n_w>)))) ((([(<any_Vx_sh_sh_ao_noSlide> sh)] | [(sh <any_Vx_sh_sh_ao_noSlide>)]) ([(<any_Cx_sh_sh_l_w> sh)] | [(sh <any_Cx_sh_sh_l_w>)])) (ao | ((<any_Vx_sh_sh_ao_noSlide> sh) | (sh <any_Vx_sh_sh_ao_noSlide>)))) (([(<any_Cx_sh_sh_l_t> sh)] | [(sh <any_Cx_sh_sh_l_t>)]) (l | ((<any_Cx_sh_sh_l_t> sh) | (sh <any_Cx_sh_sh_l_t>)))) (([(<any_Cx_y_sh_t_l> y)] | [(y <any_Cx_y_sh_t_l>)]) (t | ((<any_Cx_y_sh_t_l> y) | (y <any_Cx_y_sh_t_l>)))) ((([(<any_Vx_zh_y_er_noSlide> zh)] | [(zh <any_Vx_zh_y_er_noSlide>)]) ([(<any_Cx_zh_y_t> zh)] | [(zh <any_Cx_zh_y_t>)])) (er | ((<any_Vx_zh_y_er_noSlide> zh) | (zh <any_Vx_zh_y_er_noSlide>)))) (([(<any_Cx_zh_er_w> w)] | [(w <any_Cx_zh_er_w>)]) ([(<any_Vx_zh_er_w> w)] | [(w <any_Vx_zh_er_w>)]) sil))

results =
{72 [{sil 0 12} {v 13 24} {ao 25 27} {l 28 38} {t 39 50} {er 51 67} {sil 68 78}]}
{80 [{sil 0 14} {v 15 27} {ao 28 30} {l 31 42} {t 43 55} {er 56 60} {axr 61 76} {n 77 79} {sil 80 84}]}
{91 [{sil 0 14} {l 15 22} {d 23 25} {v 26 29} {oh 30 48} {sh 49 51} {l 52 54} {t 55 63} {er 64 68} {w 69 71} {axr 72 104} {sil 105 152}]}
{105 [{sil 0 17} {l 18 25} {n 26 30} {v 31 34} {oh 35 56} {sh 57 60} {l 61 63} {t 64 73} {er 74 78} {axr 79 117} {n 118 120} {sil 121 172}]}
{125 [{sil 3 22} {l 23 31} {n 32 37} {v 38 41} {oh 42 68} {sh 69 73} {l 74 77} {t 78 88} {er 89 99} {axr 100 136} {d 137 139} {sil 140 211}]}

normalised results =
{72 [{sil 0 12} {v 18 33} {ao 35 35} {l 39 53} {t 54 69} {er 71 93} {sil 94 108}]}
{80 [{sil 0 14} {v 19 34} {ao 35 35} {l 39 53} {t 54 69} {er 70 75} {axr 76 95} {n 96 96} {sil 100 105}]}
{91 [{sil 0 14} {l 16 24} {d 25 25} {v 29 32} {oh 33 53} {sh 54 54} {l 57 57} {t 60 69} {er 70 75} {w 76 76} {axr 79 114} {sil 115 167}]}
{105 [{sil 0 17} {l 17 24} {n 25 29} {v 30 32} {oh 33 53} {sh 54 57} {l 58 58} {t 61 70} {er 70 74} {axr 75 111} {n 112 112} {sil 115 164}]}
{125 [{sil 3 22} {l 18 25} {n 26 30} {v 30 33} {oh 34 54} {sh 55 58} {l 59 62} {t 62 70} {er 71 79} {axr 80 109} {d 110 110} {sil 112 169}]}

ruleAligned = [{{l 3} [{2 1} {3 1} {4 1}]} {{w 2} []} {{v 3} [{0 1} {1 1} {2 3} {3 3} {4 3}]} {{ao 2} []} {{oh 3} [{2 4} {3 4} {4 4}]} {{l 1} [{0 3} {1 3} {4 6}]} {{t 0} [{0 4} {1 4} {2 7} {3 7} {4 7}]} {{er 0} [{0 5} {1 5} {2 8} {3 8} {4 8}]} {{axr 3} [{1 6} {2 10} {4 9}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {v 18 33} {ao 35 35} {l 39 53} {t 54 69} {er 71 93} {sil 94 94}]}
{80 [{sil 0 0} {v 19 34} {ao 35 35} {l 39 53} {t 54 69} {er 70 75} {axr 76 95} {n 96 96} {sil 100 100}]}
{91 [{sil 0 0} {l 16 24} {d 25 25} {v 29 32} {oh 33 53} {sh 54 54} {l 57 57} {t 60 69} {er 70 75} {w 76 76} {axr 79 114} {sil 115 115}]}
{105 [{sil 0 0} {l 17 24} {n 25 25} {v 30 32} {oh 33 53} {sh 54 54} {l 58 58} {t 61 70} {er 70 74} {axr 75 75} {n 112 112} {sil 115 115}]}
{125 [{sil 3 3} {l 18 25} {n 26 26} {v 30 33} {oh 34 54} {sh 55 55} {l 59 62} {t 62 70} {er 71 79} {axr 80 109} {d 110 110} {sil 112 112}]}

timeAligned = [{{l 18 24} [{2 1} {3 1} {4 1}]} {{v 29 33} [{0 1} {1 1} {2 3} {3 3} {4 3}]} {{oh 34 53} [{2 4} {3 4} {4 4}]} {{t 60 69} [{0 4} {1 4} {2 7} {3 7} {4 7}]} {{er 70 75} [{1 5} {2 8} {3 8} {0 5} {4 8}]} {{axr 80 95} [{1 6} {2 10} {4 9}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 -1 24
i, iTime, newITime, timeStartFrom = 2 0 1 24
i, iTime, newITime, timeStartFrom = 3 1 -1 32
i, iTime, newITime, timeStartFrom = 4 1 2 32
i, iTime, newITime, timeStartFrom = 5 2 -1 53
i, iTime, newITime, timeStartFrom = 6 2 3 53
i, iTime, newITime, timeStartFrom = 7 3 4 69
i, iTime, newITime, timeStartFrom = 8 4 5 74
combinedVerdict    = [{l 3} {w 2} {v 3} {ao 2} {oh 3} {l 2} {t 0} {er 0} {axr 3}]
ruleAlignedVerdict = [{l 3} {w 2} {v 3} {ao 2} {oh 3} {l 1} {t 0} {er 0} {axr 3}]

score->
-1 for l
-1 for w
-1 for v
-1 for ao
-1 for oh
-1 for l
+1 for t
+1 for er
-1 for axr
score<-: -5

results =
{72 [{sil 0 12} {v 13 24} {ao 25 27} {l 28 38} {t 39 49} {axr 50 71} {sil 72 78}]}
{80 [{sil 0 14} {v 15 27} {ao 28 30} {l 31 42} {t 43 55} {axr 56 77} {sil 78 84}]}
{91 [{sil 0 14} {l 15 22} {m 23 25} {v 26 29} {oh 30 48} {sh 49 51} {l 52 54} {t 55 62} {axr 63 104} {sil 105 152}]}
{105 [{sil 0 17} {l 18 25} {m 26 29} {v 30 34} {oh 35 56} {sh 57 60} {l 61 63} {t 64 72} {axr 73 133} {sil 134 172}]}
{125 [{sil 3 22} {l 23 31} {m 32 36} {v 37 41} {oh 42 68} {sh 69 73} {l 74 77} {t 78 88} {axr 89 136} {sil 137 211}]}

normalised results =
{72 [{sil 0 12} {v 18 33} {ao 35 35} {l 39 53} {t 54 68} {axr 69 99} {sil 100 108}]}
{80 [{sil 0 14} {v 19 34} {ao 35 35} {l 39 53} {t 54 69} {axr 70 96} {sil 98 105}]}
{91 [{sil 0 14} {l 16 24} {m 25 25} {v 29 32} {oh 33 53} {sh 54 54} {l 57 57} {t 60 68} {axr 69 114} {sil 115 167}]}
{105 [{sil 0 17} {l 17 24} {m 25 28} {v 29 32} {oh 33 53} {sh 54 57} {l 58 58} {t 61 69} {axr 70 127} {sil 128 164}]}
{125 [{sil 3 22} {l 18 25} {m 26 29} {v 30 33} {oh 34 54} {sh 55 58} {l 59 62} {t 62 70} {axr 71 109} {sil 110 169}]}

ruleAligned = [{{l 3} [{2 1} {3 1} {4 1}]} {{w 2} []} {{v 3} [{0 1} {1 1} {2 3} {3 3} {4 3}]} {{ao 2} []} {{oh 3} [{2 4} {3 4} {4 4}]} {{l 1} [{0 3} {1 3} {4 6}]} {{t 0} [{0 4} {1 4} {2 7} {3 7} {4 7}]} {{axr 0} [{0 5} {1 5} {2 8} {3 8} {4 8}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {v 18 33} {ao 35 35} {l 39 53} {t 54 68} {axr 69 99} {sil 100 100}]}
{80 [{sil 0 0} {v 19 34} {ao 35 35} {l 39 53} {t 54 69} {axr 70 96} {sil 98 98}]}
{91 [{sil 0 0} {l 16 24} {m 25 25} {v 29 32} {oh 33 53} {sh 54 54} {l 57 57} {t 60 68} {axr 69 114} {sil 115 115}]}
{105 [{sil 0 0} {l 17 24} {m 25 25} {v 29 32} {oh 33 53} {sh 54 54} {l 58 58} {t 61 69} {axr 70 127} {sil 128 128}]}
{125 [{sil 3 3} {l 18 25} {m 26 26} {v 30 33} {oh 34 54} {sh 55 55} {l 59 62} {t 62 70} {axr 71 109} {sil 110 110}]}

timeAligned = [{{l 18 24} [{2 1} {3 1} {4 1}]} {{v 29 33} [{0 1} {1 1} {2 3} {3 3} {4 3}]} {{oh 34 53} [{2 4} {3 4} {4 4}]} {{t 60 69} [{0 4} {1 4} {2 7} {3 7} {4 7}]} {{axr 70 109} [{0 5} {1 5} {2 8} {3 8} {4 8}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 -1 24
i, iTime, newITime, timeStartFrom = 2 0 1 24
i, iTime, newITime, timeStartFrom = 3 1 -1 32
i, iTime, newITime, timeStartFrom = 4 1 2 32
i, iTime, newITime, timeStartFrom = 5 2 -1 53
i, iTime, newITime, timeStartFrom = 6 2 3 53
i, iTime, newITime, timeStartFrom = 7 3 4 68
combinedVerdict    = [{l 3} {w 2} {v 3} {ao 2} {oh 3} {l 2} {t 0} {axr 0}]
ruleAlignedVerdict = [{l 3} {w 2} {v 3} {ao 2} {oh 3} {l 1} {t 0} {axr 0}]

score->
-1 for l
-1 for w
-1 for v
-1 for ao
-1 for oh
-1 for l
+1 for t
+1 for axr
score<-: -4
bestResult = {-4 [{l 3} {w 2} {v 3} {ao 2} {oh 3} {l 2} {t 0} {axr 0}] [w ao l t axr]}
testPronounce l surprise w missing v surprise ao missing oh surprise l missing t good axr good
publish->
phonsToAlphas = [{[w] w} {[ao] a} {[l] l} {[t] t} {[axr] er}]
getVerdict<-:new {w [w] 2}
getVerdict<-:new {a [ao] 2}
getVerdict<-:new {l [l] 2}
getVerdict<-:new {t [t] 0}
getVerdict<-:new {er [axr] 0}
lettersVerdicts = [{l [l] 3} {w [w] 2} {v [v] 3} {a [ao] 2} {oh [oh] 3} {l [l] 2} {t [t] 0} {er [axr] 0}]
publish<-
Total: 328.588354ms
{
  "results": [
    {
      "letters": "l",
      "phonemes": "l",
      "verdict": "surprise"
    },
    {
      "letters": "w",
      "phonemes": "w",
      "verdict": "missing"
    },
    {
      "letters": "v",
      "phonemes": "v",
      "verdict": "surprise"
    },
    {
      "letters": "a",
      "phonemes": "ɔ",
      "verdict": "missing"
    },
    {
      "letters": "oh",
      "phonemes": "ɒ",
      "verdict": "surprise"
    },
    {
      "letters": "l",
      "phonemes": "l",
      "verdict": "missing"
    },
    {
      "letters": "t",
      "phonemes": "t",
      "verdict": "good"
    },
    {
      "letters": "er",
      "phonemes": "əɹ",
      "verdict": "good"
    }
  ],
  "err": null
}
