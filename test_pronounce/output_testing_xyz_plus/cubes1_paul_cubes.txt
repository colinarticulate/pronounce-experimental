
 length of audio =  1.834



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.5800000000000001 0.9 1.48

 start3, duration3, end3 =  0.9 0.36 1.26

 Initial start, duration, end =  0.4800000000000001 0.9999999999999999 1.48

 Cut at: start, duration =  0.4800000000000001 1.334     guard_end =  1.814 

Running scan for frate = 125
Considering guard zh with value 1 for k ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for y ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for uw ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 5 for b ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard hh with value 1 for z ...
candidateGuards = map[hh:true]
Picking guard, hh


frate, target rule = 125 public <cubes> = (((sil [((t <any_Cx_k_t_b>) | (<any_Cx_k_t_b> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil b (sil [((t <any_Cx_k_t_b>) | (<any_Cx_k_t_b> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_zh_b_t_k> zh)] | [(zh <any_Cx_zh_b_t_k>)]) (k | ((<any_Cx_zh_b_t_k> zh) | (zh <any_Cx_zh_b_t_k>)))) ((([(<any_Vx_zh_zh_y_uw_noSlide> zh)] | [(zh <any_Vx_zh_zh_y_uw_noSlide>)]) ([(<any_Cx_zh_zh_k> zh)] | [(zh <any_Cx_zh_zh_k>)])) (y | ((<any_Vx_zh_zh_y_uw_noSlide> zh) | (zh <any_Vx_zh_zh_y_uw_noSlide>)))) ((([(<any_Vx_zh_zh_uw_y_noSlide> zh)] | [(zh <any_Vx_zh_zh_uw_y_noSlide>)]) ([(<any_Cx_zh_zh_b> zh)] | [(zh <any_Cx_zh_zh_b>)])) (uw | ((<any_Vx_zh_zh_uw_y_noSlide> zh) | (zh <any_Vx_zh_zh_uw_y_noSlide>)))) (([(<any_Cx_ch_zh_b> ch)] | [(ch <any_Cx_ch_zh_b>)]) (b | ((<any_Cx_ch_zh_b_z> ch) | (ch <any_Cx_ch_zh_b_z>)))) (([(<any_Cx_hh_ch_z_b> hh)] | [(hh <any_Cx_hh_ch_z_b>)]) (z | ((<any_Cx_hh_ch_z_b> hh) | (hh <any_Cx_hh_ch_z_b>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_hh_z_b> b)] | [(b <any_Cx_hh_z_b>)]) sil))
Running scan for frate = 105
Considering guard zh with value 1 for k ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for y ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for uw ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 5 for b ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard hh with value 1 for z ...
candidateGuards = map[hh:true]
Picking guard, hh


frate, target rule = 105 public <cubes> = (((sil [((t <any_Cx_k_t_b>) | (<any_Cx_k_t_b> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil b (sil [((t <any_Cx_k_t_b>) | (<any_Cx_k_t_b> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_zh_b_t_k> zh)] | [(zh <any_Cx_zh_b_t_k>)]) (k | ((<any_Cx_zh_b_t_k> zh) | (zh <any_Cx_zh_b_t_k>)))) ((([(<any_Vx_zh_zh_y_uw_noSlide> zh)] | [(zh <any_Vx_zh_zh_y_uw_noSlide>)]) ([(<any_Cx_zh_zh_k> zh)] | [(zh <any_Cx_zh_zh_k>)])) (y | ((<any_Vx_zh_zh_y_uw_noSlide> zh) | (zh <any_Vx_zh_zh_y_uw_noSlide>)))) ((([(<any_Vx_zh_zh_uw_y_noSlide> zh)] | [(zh <any_Vx_zh_zh_uw_y_noSlide>)]) ([(<any_Cx_zh_zh_b> zh)] | [(zh <any_Cx_zh_zh_b>)])) (uw | ((<any_Vx_zh_zh_uw_y_noSlide> zh) | (zh <any_Vx_zh_zh_uw_y_noSlide>)))) (([(<any_Cx_ch_zh_b> ch)] | [(ch <any_Cx_ch_zh_b>)]) (b | ((<any_Cx_ch_zh_b_z> ch) | (ch <any_Cx_ch_zh_b_z>)))) (([(<any_Cx_hh_ch_z_b> hh)] | [(hh <any_Cx_hh_ch_z_b>)]) (z | ((<any_Cx_hh_ch_z_b> hh) | (hh <any_Cx_hh_ch_z_b>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_hh_z_thr> thr)] | [(thr <any_Cx_hh_z_thr>)]) sil))
Running scan for frate = 91
Considering guard zh with value 1 for k ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for y ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for uw ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 5 for b ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard hh with value 1 for z ...
candidateGuards = map[hh:true]
Picking guard, hh


frate, target rule = 91 public <cubes> = (((sil [((ch <any_Cx_k_ch_b>) | (<any_Cx_k_ch_b> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil b (sil [((ch <any_Cx_k_ch_b>) | (<any_Cx_k_ch_b> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_zh_b_ch_k> zh)] | [(zh <any_Cx_zh_b_ch_k>)]) (k | ((<any_Cx_zh_b_ch_k> zh) | (zh <any_Cx_zh_b_ch_k>)))) ((([(<any_Vx_zh_zh_y_uw_noSlide> zh)] | [(zh <any_Vx_zh_zh_y_uw_noSlide>)]) ([(<any_Cx_zh_zh_k> zh)] | [(zh <any_Cx_zh_zh_k>)])) (y | ((<any_Vx_zh_zh_y_uw_noSlide> zh) | (zh <any_Vx_zh_zh_y_uw_noSlide>)))) ((([(<any_Vx_zh_zh_uw_y_noSlide> zh)] | [(zh <any_Vx_zh_zh_uw_y_noSlide>)]) ([(<any_Cx_zh_zh_b> zh)] | [(zh <any_Cx_zh_zh_b>)])) (uw | ((<any_Vx_zh_zh_uw_y_noSlide> zh) | (zh <any_Vx_zh_zh_uw_y_noSlide>)))) (([(<any_Cx_ch_zh_b> ch)] | [(ch <any_Cx_ch_zh_b>)]) (b | ((<any_Cx_ch_zh_b_z> ch) | (ch <any_Cx_ch_zh_b_z>)))) (([(<any_Cx_hh_ch_z_b> hh)] | [(hh <any_Cx_hh_ch_z_b>)]) (z | ((<any_Cx_hh_ch_z_b> hh) | (hh <any_Cx_hh_ch_z_b>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_hh_z_v> v)] | [(v <any_Cx_hh_z_v>)]) sil))
Running scan for frate = 80
Considering guard zh with value 1 for k ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for y ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for uw ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 5 for b ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard hh with value 1 for z ...
candidateGuards = map[hh:true]
Picking guard, hh


frate, target rule = 80 public <cubes> = (((sil [((ch <any_Cx_k_ch_b>) | (<any_Cx_k_ch_b> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil b (sil [((ch <any_Cx_k_ch_b>) | (<any_Cx_k_ch_b> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_zh_b_ch_k> zh)] | [(zh <any_Cx_zh_b_ch_k>)]) (k | ((<any_Cx_zh_b_ch_k> zh) | (zh <any_Cx_zh_b_ch_k>)))) ((([(<any_Vx_zh_zh_y_uw_noSlide> zh)] | [(zh <any_Vx_zh_zh_y_uw_noSlide>)]) ([(<any_Cx_zh_zh_k> zh)] | [(zh <any_Cx_zh_zh_k>)])) (y | ((<any_Vx_zh_zh_y_uw_noSlide> zh) | (zh <any_Vx_zh_zh_y_uw_noSlide>)))) ((([(<any_Vx_zh_zh_uw_y_noSlide> zh)] | [(zh <any_Vx_zh_zh_uw_y_noSlide>)]) ([(<any_Cx_zh_zh_b> zh)] | [(zh <any_Cx_zh_zh_b>)])) (uw | ((<any_Vx_zh_zh_uw_y_noSlide> zh) | (zh <any_Vx_zh_zh_uw_y_noSlide>)))) (([(<any_Cx_ch_zh_b> ch)] | [(ch <any_Cx_ch_zh_b>)]) (b | ((<any_Cx_ch_zh_b_z> ch) | (ch <any_Cx_ch_zh_b_z>)))) (([(<any_Cx_hh_ch_z_b> hh)] | [(hh <any_Cx_hh_ch_z_b>)]) (z | ((<any_Cx_hh_ch_z_b> hh) | (hh <any_Cx_hh_ch_z_b>)))) (([(<any_vowel_noSlide> s)] | [(s <any_vowel_noSlide>)]) ([(<any_Cx_hh_z_s> s)] | [(s <any_Cx_hh_z_s>)]) sil))
Running scan for frate = 72
Considering guard zh with value 1 for k ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for y ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for uw ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 5 for b ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard hh with value 1 for z ...
candidateGuards = map[hh:true]
Picking guard, hh


frate, target rule = 72 public <cubes> = (((sil [((d <any_Cx_k_d_b>) | (<any_Cx_k_d_b> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil b (sil [((d <any_Cx_k_d_b>) | (<any_Cx_k_d_b> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_zh_b_d_k> zh)] | [(zh <any_Cx_zh_b_d_k>)]) (k | ((<any_Cx_zh_b_d_k> zh) | (zh <any_Cx_zh_b_d_k>)))) ((([(<any_Vx_zh_zh_y_uw_noSlide> zh)] | [(zh <any_Vx_zh_zh_y_uw_noSlide>)]) ([(<any_Cx_zh_zh_k> zh)] | [(zh <any_Cx_zh_zh_k>)])) (y | ((<any_Vx_zh_zh_y_uw_noSlide> zh) | (zh <any_Vx_zh_zh_y_uw_noSlide>)))) ((([(<any_Vx_zh_zh_uw_y_noSlide> zh)] | [(zh <any_Vx_zh_zh_uw_y_noSlide>)]) ([(<any_Cx_zh_zh_b> zh)] | [(zh <any_Cx_zh_zh_b>)])) (uw | ((<any_Vx_zh_zh_uw_y_noSlide> zh) | (zh <any_Vx_zh_zh_uw_y_noSlide>)))) (([(<any_Cx_ch_zh_b> ch)] | [(ch <any_Cx_ch_zh_b>)]) (b | ((<any_Cx_ch_zh_b_z> ch) | (ch <any_Cx_ch_zh_b_z>)))) (([(<any_Cx_hh_ch_z_b> hh)] | [(hh <any_Cx_hh_ch_z_b>)]) (z | ((<any_Cx_hh_ch_z_b> hh) | (hh <any_Cx_hh_ch_z_b>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_hh_z_thr> thr)] | [(thr <any_Cx_hh_z_thr>)]) sil))
Running scan for frate = 125
Considering guard zh with value 1 for k ...
Considering guard z with value 1 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard zh with value 2 for yuw ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 5 for b ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard hh with value 1 for z ...
candidateGuards = map[hh:true]
Picking guard, hh


frate, target rule = 125 public <cubes> = (((sil [((g <any_Cx_k_g_b>) | (<any_Cx_k_g_b> g))] [((g <any_vowel_noSlide>) | (<any_vowel_noSlide> g))]) | (sil b (sil [((g <any_Cx_k_g_b>) | (<any_Cx_k_g_b> g))] [((g <any_vowel_noSlide>) | (<any_vowel_noSlide> g))]))) (([(<any_Cx_z_b_g_k_yuw> z)] | [(z <any_Cx_z_b_g_k_yuw>)]) (k | ((<any_Cx_z_b_g_k_yuw> z) | (z <any_Cx_z_b_g_k_yuw>)))) (([(<any_Cx_zh_z_yuw_b_k> zh)] | [(zh <any_Cx_zh_z_yuw_b_k>)]) (yuw | ((<any_Cx_zh_z_yuw_b> zh) | (zh <any_Cx_zh_z_yuw_b>)))) (([(<any_Cx_ch_zh_b_yuw> ch)] | [(ch <any_Cx_ch_zh_b_yuw>)]) (b | ((<any_Cx_ch_zh_b_z_yuw> ch) | (ch <any_Cx_ch_zh_b_z_yuw>)))) (([(<any_Cx_hh_ch_z_b> hh)] | [(hh <any_Cx_hh_ch_z_b>)]) (z | ((<any_Cx_hh_ch_z_b> hh) | (hh <any_Cx_hh_ch_z_b>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_hh_z_b> b)] | [(b <any_Cx_hh_z_b>)]) sil))
Running scan for frate = 105
Considering guard zh with value 1 for k ...
Considering guard z with value 1 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for yuw ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 5 for b ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard hh with value 1 for z ...
candidateGuards = map[hh:true]
Picking guard, hh


frate, target rule = 105 public <cubes> = (((sil [((d <any_Cx_k_d_b>) | (<any_Cx_k_d_b> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil b (sil [((d <any_Cx_k_d_b>) | (<any_Cx_k_d_b> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_zh_b_d_k_yuw> zh)] | [(zh <any_Cx_zh_b_d_k_yuw>)]) (k | ((<any_Cx_zh_b_d_k_yuw> zh) | (zh <any_Cx_zh_b_d_k_yuw>)))) (([(<any_Cx_zh_zh_yuw_b_k> zh)] | [(zh <any_Cx_zh_zh_yuw_b_k>)]) (yuw | ((<any_Cx_zh_zh_yuw_b> zh) | (zh <any_Cx_zh_zh_yuw_b>)))) (([(<any_Cx_ch_zh_b_yuw> ch)] | [(ch <any_Cx_ch_zh_b_yuw>)]) (b | ((<any_Cx_ch_zh_b_z_yuw> ch) | (ch <any_Cx_ch_zh_b_z_yuw>)))) (([(<any_Cx_hh_ch_z_b> hh)] | [(hh <any_Cx_hh_ch_z_b>)]) (z | ((<any_Cx_hh_ch_z_b> hh) | (hh <any_Cx_hh_ch_z_b>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_hh_z_b> b)] | [(b <any_Cx_hh_z_b>)]) sil))
Running scan for frate = 91
Considering guard z with value 1 for k ...
Considering guard zh with value 1 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard zh with value 2 for yuw ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 5 for b ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard hh with value 1 for z ...
candidateGuards = map[hh:true]
Picking guard, hh


frate, target rule = 91 public <cubes> = (((sil [((ch <any_Cx_k_ch_b>) | (<any_Cx_k_ch_b> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil b (sil [((ch <any_Cx_k_ch_b>) | (<any_Cx_k_ch_b> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_z_b_ch_k_yuw> z)] | [(z <any_Cx_z_b_ch_k_yuw>)]) (k | ((<any_Cx_z_b_ch_k_yuw> z) | (z <any_Cx_z_b_ch_k_yuw>)))) (([(<any_Cx_zh_z_yuw_b_k> zh)] | [(zh <any_Cx_zh_z_yuw_b_k>)]) (yuw | ((<any_Cx_zh_z_yuw_b> zh) | (zh <any_Cx_zh_z_yuw_b>)))) (([(<any_Cx_ch_zh_b_yuw> ch)] | [(ch <any_Cx_ch_zh_b_yuw>)]) (b | ((<any_Cx_ch_zh_b_z_yuw> ch) | (ch <any_Cx_ch_zh_b_z_yuw>)))) (([(<any_Cx_hh_ch_z_b> hh)] | [(hh <any_Cx_hh_ch_z_b>)]) (z | ((<any_Cx_hh_ch_z_b> hh) | (hh <any_Cx_hh_ch_z_b>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_hh_z_thr> thr)] | [(thr <any_Cx_hh_z_thr>)]) sil))
Running scan for frate = 80
Considering guard z with value 1 for k ...
Considering guard zh with value 1 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for yuw ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 5 for b ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard hh with value 1 for z ...
candidateGuards = map[hh:true]
Picking guard, hh


frate, target rule = 80 public <cubes> = (((sil [((p <any_Cx_k_p_b>) | (<any_Cx_k_p_b> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]) | (sil b (sil [((p <any_Cx_k_p_b>) | (<any_Cx_k_p_b> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]))) (([(<any_Cx_zh_b_p_k_yuw> zh)] | [(zh <any_Cx_zh_b_p_k_yuw>)]) (k | ((<any_Cx_zh_b_p_k_yuw> zh) | (zh <any_Cx_zh_b_p_k_yuw>)))) (([(<any_Cx_zh_zh_yuw_b_k> zh)] | [(zh <any_Cx_zh_zh_yuw_b_k>)]) (yuw | ((<any_Cx_zh_zh_yuw_b> zh) | (zh <any_Cx_zh_zh_yuw_b>)))) (([(<any_Cx_ch_zh_b_yuw> ch)] | [(ch <any_Cx_ch_zh_b_yuw>)]) (b | ((<any_Cx_ch_zh_b_z_yuw> ch) | (ch <any_Cx_ch_zh_b_z_yuw>)))) (([(<any_Cx_hh_ch_z_b> hh)] | [(hh <any_Cx_hh_ch_z_b>)]) (z | ((<any_Cx_hh_ch_z_b> hh) | (hh <any_Cx_hh_ch_z_b>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_hh_z_v> v)] | [(v <any_Cx_hh_z_v>)]) sil))
Running scan for frate = 72
Considering guard zh with value 1 for k ...
Considering guard z with value 1 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for yuw ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 5 for b ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard hh with value 1 for z ...
candidateGuards = map[hh:true]
Picking guard, hh


frate, target rule = 72 public <cubes> = (((sil [((g <any_Cx_k_g_b>) | (<any_Cx_k_g_b> g))] [((g <any_vowel_noSlide>) | (<any_vowel_noSlide> g))]) | (sil b (sil [((g <any_Cx_k_g_b>) | (<any_Cx_k_g_b> g))] [((g <any_vowel_noSlide>) | (<any_vowel_noSlide> g))]))) (([(<any_Cx_zh_b_g_k_yuw> zh)] | [(zh <any_Cx_zh_b_g_k_yuw>)]) (k | ((<any_Cx_zh_b_g_k_yuw> zh) | (zh <any_Cx_zh_b_g_k_yuw>)))) (([(<any_Cx_zh_zh_yuw_b_k> zh)] | [(zh <any_Cx_zh_zh_yuw_b_k>)]) (yuw | ((<any_Cx_zh_zh_yuw_b> zh) | (zh <any_Cx_zh_zh_yuw_b>)))) (([(<any_Cx_ch_zh_b_yuw> ch)] | [(ch <any_Cx_ch_zh_b_yuw>)]) (b | ((<any_Cx_ch_zh_b_z_yuw> ch) | (ch <any_Cx_ch_zh_b_z_yuw>)))) (([(<any_Cx_hh_ch_z_b> hh)] | [(hh <any_Cx_hh_ch_z_b>)]) (z | ((<any_Cx_hh_ch_z_b> hh) | (hh <any_Cx_hh_ch_z_b>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_hh_z_thr> thr)] | [(thr <any_Cx_hh_z_thr>)]) sil))

results =
{72 [{sil 0 12} {k 13 21} {yuw 22 44} {b 45 51} {z 52 66} {sil 67 82}]}
{80 []}
{91 [{sil 0 15} {k 16 28} {yuw 29 58} {b 59 63} {z 64 82} {sil 83 116}]}
{105 [{sil 0 18} {k 19 32} {yuw 33 68} {b 69 73} {z 74 96} {sil 97 139}]}
{125 [{sil 3 24} {k 25 40} {yuw 41 82} {b 83 88} {z 89 116} {sil 117 162}]}

normalised results =
{72 [{sil 0 12} {k 18 29} {yuw 31 61} {b 63 71} {z 72 92} {sil 93 114}]}
{80 []}
{91 [{sil 0 15} {k 18 31} {yuw 32 64} {b 65 69} {z 70 90} {sil 91 127}]}
{105 [{sil 0 18} {k 18 30} {yuw 31 65} {b 66 70} {z 70 91} {sil 92 132}]}
{125 [{sil 3 24} {k 20 32} {yuw 33 66} {b 66 70} {z 71 93} {sil 94 130}]}

Mapped result =
result 0 =
start: 0 end: 0 phonemeFound: false
start: 1 end: 1 phonemeFound: true
start: 2 end: 2 phonemeFound: true
start: 3 end: 3 phonemeFound: true
start: 4 end: 4 phonemeFound: true
start: 5 end: 5 phonemeFound: false
result 1 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 2 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 3 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 4 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false

Rules =
rule 0 =
Trapped opening rule:
trap: b
rule: {b}
Opening rule:
guard: g
rule: {g {[{sil} {{[{[{g} {{any_Cx_k_g_b {[{m} {z} {w} {zh} {d} {l} {v} {ch} {hh} {dh}]}}}]} {[{{any_Cx_k_g_b {[{m} {z} {w} {zh} {d} {l} {v} {ch} {hh} {dh}]}}} {g}]}]}} {{[{[{g} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]} {[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {g}]}]}}]}}
Phoneme rule:
guard: zh phoneme: k
rule: {[{[{{[{{any_Cx_zh_b_g_k_yuw {[{m} {v} {l} {d} {dh} {z} {ch} {hh} {w}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_b_g_k_yuw {[{m} {v} {l} {d} {dh} {z} {ch} {hh} {w}]}}}]}}]} {[{k} {[{[{{any_Cx_zh_b_g_k_yuw {[{m} {v} {l} {d} {dh} {z} {ch} {hh} {w}]}}} {zh}]} {[{zh} {{any_Cx_zh_b_g_k_yuw {[{m} {v} {l} {d} {dh} {z} {ch} {hh} {w}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: yuw
rule: {[{[{{[{{any_Cx_zh_zh_yuw_b_k {[{w} {z} {l} {v} {d} {dh} {ch} {g} {hh} {m}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_yuw_b_k {[{w} {z} {l} {v} {d} {dh} {ch} {g} {hh} {m}]}}}]}}]} {[{yuw} {[{[{{any_Cx_zh_zh_yuw_b {[{g} {m} {d} {dh} {z} {w} {hh} {v} {ch} {l}]}}} {zh}]} {[{zh} {{any_Cx_zh_zh_yuw_b {[{g} {m} {d} {dh} {z} {w} {hh} {v} {ch} {l}]}}}]}]}]}]}
Phoneme rule:
guard: ch phoneme: b
rule: {[{[{{[{{any_Cx_ch_zh_b_yuw {[{g} {hh} {z} {v} {dh} {l} {d} {m} {w}]}}} {ch}]}} {{[{ch} {{any_Cx_ch_zh_b_yuw {[{g} {hh} {z} {v} {dh} {l} {d} {m} {w}]}}}]}}]} {[{b} {[{[{{any_Cx_ch_zh_b_z_yuw {[{d} {g} {l} {v} {w} {dh} {hh} {m}]}}} {ch}]} {[{ch} {{any_Cx_ch_zh_b_z_yuw {[{d} {g} {l} {v} {w} {dh} {hh} {m}]}}}]}]}]}]}
Phoneme rule:
guard: hh phoneme: z
rule: {[{[{{[{{any_Cx_hh_ch_z_b {[{d} {g} {v} {w} {zh} {dh} {m} {l}]}}} {hh}]}} {{[{hh} {{any_Cx_hh_ch_z_b {[{d} {g} {v} {w} {zh} {dh} {m} {l}]}}}]}}]} {[{z} {[{[{{any_Cx_hh_ch_z_b {[{d} {g} {v} {w} {zh} {dh} {m} {l}]}}} {hh}]} {[{hh} {{any_Cx_hh_ch_z_b {[{d} {g} {v} {w} {zh} {dh} {m} {l}]}}}]}]}]}]}
Closing rule:
guard: thr
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {thr}]}} {{[{thr} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_hh_z_thr {[{d} {m} {ch} {v} {zh} {b} {dh} {l} {g} {w}]}}} {thr}]}} {{[{thr} {{any_Cx_hh_z_thr {[{d} {m} {ch} {v} {zh} {b} {dh} {l} {g} {w}]}}}]}}]} {sil}]}
rule 1 =
Trapped opening rule:
trap: b
rule: {b}
Opening rule:
guard: p
rule: {p {[{sil} {{[{[{p} {{any_Cx_k_p_b {[{m} {v} {d} {dh} {zh} {ch} {z} {l} {w} {g} {hh}]}}}]} {[{{any_Cx_k_p_b {[{m} {v} {d} {dh} {zh} {ch} {z} {l} {w} {g} {hh}]}}} {p}]}]}} {{[{[{p} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]} {[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {p}]}]}}]}}
Phoneme rule:
guard: zh phoneme: k
rule: {[{[{{[{{any_Cx_zh_b_p_k_yuw {[{l} {d} {hh} {v} {g} {w} {z} {ch} {m} {dh}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_b_p_k_yuw {[{l} {d} {hh} {v} {g} {w} {z} {ch} {m} {dh}]}}}]}}]} {[{k} {[{[{{any_Cx_zh_b_p_k_yuw {[{l} {d} {hh} {v} {g} {w} {z} {ch} {m} {dh}]}}} {zh}]} {[{zh} {{any_Cx_zh_b_p_k_yuw {[{l} {d} {hh} {v} {g} {w} {z} {ch} {m} {dh}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: yuw
rule: {[{[{{[{{any_Cx_zh_zh_yuw_b_k {[{v} {g} {l} {w} {z} {d} {dh} {m} {ch} {hh}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_yuw_b_k {[{v} {g} {l} {w} {z} {d} {dh} {m} {ch} {hh}]}}}]}}]} {[{yuw} {[{[{{any_Cx_zh_zh_yuw_b {[{d} {v} {m} {dh} {z} {l} {ch} {hh} {g} {w}]}}} {zh}]} {[{zh} {{any_Cx_zh_zh_yuw_b {[{d} {v} {m} {dh} {z} {l} {ch} {hh} {g} {w}]}}}]}]}]}]}
Phoneme rule:
guard: ch phoneme: b
rule: {[{[{{[{{any_Cx_ch_zh_b_yuw {[{v} {g} {m} {z} {hh} {l} {d} {dh} {w}]}}} {ch}]}} {{[{ch} {{any_Cx_ch_zh_b_yuw {[{v} {g} {m} {z} {hh} {l} {d} {dh} {w}]}}}]}}]} {[{b} {[{[{{any_Cx_ch_zh_b_z_yuw {[{l} {w} {d} {g} {m} {hh} {dh} {v}]}}} {ch}]} {[{ch} {{any_Cx_ch_zh_b_z_yuw {[{l} {w} {d} {g} {m} {hh} {dh} {v}]}}}]}]}]}]}
Phoneme rule:
guard: hh phoneme: z
rule: {[{[{{[{{any_Cx_hh_ch_z_b {[{g} {l} {m} {v} {w} {dh} {zh} {d}]}}} {hh}]}} {{[{hh} {{any_Cx_hh_ch_z_b {[{g} {l} {m} {v} {w} {dh} {zh} {d}]}}}]}}]} {[{z} {[{[{{any_Cx_hh_ch_z_b {[{g} {l} {m} {v} {w} {dh} {zh} {d}]}}} {hh}]} {[{hh} {{any_Cx_hh_ch_z_b {[{g} {l} {m} {v} {w} {dh} {zh} {d}]}}}]}]}]}]}
Closing rule:
guard: v
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {v}]}} {{[{v} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_hh_z_v {[{b} {d} {w} {zh} {g} {l} {ch} {m} {dh}]}}} {v}]}} {{[{v} {{any_Cx_hh_z_v {[{b} {d} {w} {zh} {g} {l} {ch} {m} {dh}]}}}]}}]} {sil}]}
rule 2 =
Trapped opening rule:
trap: b
rule: {b}
Opening rule:
guard: ch
rule: {ch {[{sil} {{[{[{ch} {{any_Cx_k_ch_b {[{hh} {z} {m} {d} {dh} {v} {l} {g} {w} {zh}]}}}]} {[{{any_Cx_k_ch_b {[{hh} {z} {m} {d} {dh} {v} {l} {g} {w} {zh}]}}} {ch}]}]}} {{[{[{ch} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]} {[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {ch}]}]}}]}}
Phoneme rule:
guard: z phoneme: k
rule: {[{[{{[{{any_Cx_z_b_ch_k_yuw {[{g} {hh} {dh} {d} {zh} {l} {m} {w} {v}]}}} {z}]}} {{[{z} {{any_Cx_z_b_ch_k_yuw {[{g} {hh} {dh} {d} {zh} {l} {m} {w} {v}]}}}]}}]} {[{k} {[{[{{any_Cx_z_b_ch_k_yuw {[{g} {hh} {dh} {d} {zh} {l} {m} {w} {v}]}}} {z}]} {[{z} {{any_Cx_z_b_ch_k_yuw {[{g} {hh} {dh} {d} {zh} {l} {m} {w} {v}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: yuw
rule: {[{[{{[{{any_Cx_zh_z_yuw_b_k {[{w} {d} {l} {m} {hh} {v} {ch} {g} {dh}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_z_yuw_b_k {[{w} {d} {l} {m} {hh} {v} {ch} {g} {dh}]}}}]}}]} {[{yuw} {[{[{{any_Cx_zh_z_yuw_b {[{d} {w} {hh} {g} {v} {dh} {l} {ch} {m}]}}} {zh}]} {[{zh} {{any_Cx_zh_z_yuw_b {[{d} {w} {hh} {g} {v} {dh} {l} {ch} {m}]}}}]}]}]}]}
Phoneme rule:
guard: ch phoneme: b
rule: {[{[{{[{{any_Cx_ch_zh_b_yuw {[{d} {hh} {m} {z} {dh} {g} {l} {v} {w}]}}} {ch}]}} {{[{ch} {{any_Cx_ch_zh_b_yuw {[{d} {hh} {m} {z} {dh} {g} {l} {v} {w}]}}}]}}]} {[{b} {[{[{{any_Cx_ch_zh_b_z_yuw {[{l} {m} {v} {w} {g} {hh} {dh} {d}]}}} {ch}]} {[{ch} {{any_Cx_ch_zh_b_z_yuw {[{l} {m} {v} {w} {g} {hh} {dh} {d}]}}}]}]}]}]}
Phoneme rule:
guard: hh phoneme: z
rule: {[{[{{[{{any_Cx_hh_ch_z_b {[{zh} {dh} {g} {w} {m} {v} {l} {d}]}}} {hh}]}} {{[{hh} {{any_Cx_hh_ch_z_b {[{zh} {dh} {g} {w} {m} {v} {l} {d}]}}}]}}]} {[{z} {[{[{{any_Cx_hh_ch_z_b {[{zh} {dh} {g} {w} {m} {v} {l} {d}]}}} {hh}]} {[{hh} {{any_Cx_hh_ch_z_b {[{zh} {dh} {g} {w} {m} {v} {l} {d}]}}}]}]}]}]}
Closing rule:
guard: thr
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {thr}]}} {{[{thr} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_hh_z_thr {[{b} {l} {m} {zh} {dh} {g} {v} {w} {d} {ch}]}}} {thr}]}} {{[{thr} {{any_Cx_hh_z_thr {[{b} {l} {m} {zh} {dh} {g} {v} {w} {d} {ch}]}}}]}}]} {sil}]}
rule 3 =
Trapped opening rule:
trap: b
rule: {b}
Opening rule:
guard: d
rule: {d {[{sil} {{[{[{d} {{any_Cx_k_d_b {[{v} {zh} {g} {dh} {l} {z} {hh} {w} {ch} {m}]}}}]} {[{{any_Cx_k_d_b {[{v} {zh} {g} {dh} {l} {z} {hh} {w} {ch} {m}]}}} {d}]}]}} {{[{[{d} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]} {[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {d}]}]}}]}}
Phoneme rule:
guard: zh phoneme: k
rule: {[{[{{[{{any_Cx_zh_b_d_k_yuw {[{v} {dh} {l} {g} {hh} {w} {ch} {m} {z}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_b_d_k_yuw {[{v} {dh} {l} {g} {hh} {w} {ch} {m} {z}]}}}]}}]} {[{k} {[{[{{any_Cx_zh_b_d_k_yuw {[{v} {dh} {l} {g} {hh} {w} {ch} {m} {z}]}}} {zh}]} {[{zh} {{any_Cx_zh_b_d_k_yuw {[{v} {dh} {l} {g} {hh} {w} {ch} {m} {z}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: yuw
rule: {[{[{{[{{any_Cx_zh_zh_yuw_b_k {[{m} {w} {dh} {v} {ch} {z} {d} {g} {hh} {l}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_yuw_b_k {[{m} {w} {dh} {v} {ch} {z} {d} {g} {hh} {l}]}}}]}}]} {[{yuw} {[{[{{any_Cx_zh_zh_yuw_b {[{d} {m} {z} {g} {l} {hh} {ch} {dh} {w} {v}]}}} {zh}]} {[{zh} {{any_Cx_zh_zh_yuw_b {[{d} {m} {z} {g} {l} {hh} {ch} {dh} {w} {v}]}}}]}]}]}]}
Phoneme rule:
guard: ch phoneme: b
rule: {[{[{{[{{any_Cx_ch_zh_b_yuw {[{l} {d} {v} {w} {hh} {g} {m} {dh} {z}]}}} {ch}]}} {{[{ch} {{any_Cx_ch_zh_b_yuw {[{l} {d} {v} {w} {hh} {g} {m} {dh} {z}]}}}]}}]} {[{b} {[{[{{any_Cx_ch_zh_b_z_yuw {[{l} {v} {w} {hh} {m} {d} {g} {dh}]}}} {ch}]} {[{ch} {{any_Cx_ch_zh_b_z_yuw {[{l} {v} {w} {hh} {m} {d} {g} {dh}]}}}]}]}]}]}
Phoneme rule:
guard: hh phoneme: z
rule: {[{[{{[{{any_Cx_hh_ch_z_b {[{g} {l} {d} {m} {w} {dh} {v} {zh}]}}} {hh}]}} {{[{hh} {{any_Cx_hh_ch_z_b {[{g} {l} {d} {m} {w} {dh} {v} {zh}]}}}]}}]} {[{z} {[{[{{any_Cx_hh_ch_z_b {[{g} {l} {d} {m} {w} {dh} {v} {zh}]}}} {hh}]} {[{hh} {{any_Cx_hh_ch_z_b {[{g} {l} {d} {m} {w} {dh} {v} {zh}]}}}]}]}]}]}
Closing rule:
guard: b
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {b}]}} {{[{b} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_hh_z_b {[{d} {w} {ch} {l} {m} {v} {zh} {dh} {g}]}}} {b}]}} {{[{b} {{any_Cx_hh_z_b {[{d} {w} {ch} {l} {m} {v} {zh} {dh} {g}]}}}]}}]} {sil}]}
rule 4 =
Trapped opening rule:
trap: b
rule: {b}
Opening rule:
guard: g
rule: {g {[{sil} {{[{[{g} {{any_Cx_k_g_b {[{d} {l} {w} {m} {ch} {dh} {z} {zh} {v} {hh}]}}}]} {[{{any_Cx_k_g_b {[{d} {l} {w} {m} {ch} {dh} {z} {zh} {v} {hh}]}}} {g}]}]}} {{[{[{g} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]} {[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {g}]}]}}]}}
Phoneme rule:
guard: z phoneme: k
rule: {[{[{{[{{any_Cx_z_b_g_k_yuw {[{w} {ch} {d} {hh} {v} {m} {dh} {zh} {l}]}}} {z}]}} {{[{z} {{any_Cx_z_b_g_k_yuw {[{w} {ch} {d} {hh} {v} {m} {dh} {zh} {l}]}}}]}}]} {[{k} {[{[{{any_Cx_z_b_g_k_yuw {[{w} {ch} {d} {hh} {v} {m} {dh} {zh} {l}]}}} {z}]} {[{z} {{any_Cx_z_b_g_k_yuw {[{w} {ch} {d} {hh} {v} {m} {dh} {zh} {l}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: yuw
rule: {[{[{{[{{any_Cx_zh_z_yuw_b_k {[{g} {m} {v} {ch} {hh} {d} {l} {dh} {w}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_z_yuw_b_k {[{g} {m} {v} {ch} {hh} {d} {l} {dh} {w}]}}}]}}]} {[{yuw} {[{[{{any_Cx_zh_z_yuw_b {[{d} {dh} {l} {hh} {w} {ch} {g} {v} {m}]}}} {zh}]} {[{zh} {{any_Cx_zh_z_yuw_b {[{d} {dh} {l} {hh} {w} {ch} {g} {v} {m}]}}}]}]}]}]}
Phoneme rule:
guard: ch phoneme: b
rule: {[{[{{[{{any_Cx_ch_zh_b_yuw {[{z} {hh} {g} {m} {d} {l} {w} {v} {dh}]}}} {ch}]}} {{[{ch} {{any_Cx_ch_zh_b_yuw {[{z} {hh} {g} {m} {d} {l} {w} {v} {dh}]}}}]}}]} {[{b} {[{[{{any_Cx_ch_zh_b_z_yuw {[{v} {g} {dh} {m} {l} {d} {hh} {w}]}}} {ch}]} {[{ch} {{any_Cx_ch_zh_b_z_yuw {[{v} {g} {dh} {m} {l} {d} {hh} {w}]}}}]}]}]}]}
Phoneme rule:
guard: hh phoneme: z
rule: {[{[{{[{{any_Cx_hh_ch_z_b {[{zh} {l} {d} {g} {dh} {m} {w} {v}]}}} {hh}]}} {{[{hh} {{any_Cx_hh_ch_z_b {[{zh} {l} {d} {g} {dh} {m} {w} {v}]}}}]}}]} {[{z} {[{[{{any_Cx_hh_ch_z_b {[{zh} {l} {d} {g} {dh} {m} {w} {v}]}}} {hh}]} {[{hh} {{any_Cx_hh_ch_z_b {[{zh} {l} {d} {g} {dh} {m} {w} {v}]}}}]}]}]}]}
Closing rule:
guard: b
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {b}]}} {{[{b} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_hh_z_b {[{d} {zh} {g} {v} {m} {dh} {w} {ch} {l}]}}} {b}]}} {{[{b} {{any_Cx_hh_z_b {[{d} {zh} {g} {v} {m} {dh} {w} {ch} {l}]}}}]}}]} {sil}]}

parse: err = Parser error
ruleAligned = [{{k 0} [{0 1} {2 1} {3 1} {4 1}]} {{yuw 0} [{0 2} {2 2} {3 2} {4 2}]} {{b 0} [{0 3} {2 3} {3 3} {4 3}]} {{z 0} [{0 4} {2 4} {3 4} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {k 18 29} {yuw 31 61} {b 63 71} {z 72 92} {sil 93 93}]}
{80 []}
{91 [{sil 0 0} {k 18 31} {yuw 32 64} {b 65 69} {z 70 90} {sil 91 91}]}
{105 [{sil 0 0} {k 18 30} {yuw 31 65} {b 66 70} {z 70 91} {sil 92 92}]}
{125 [{sil 3 3} {k 20 32} {yuw 33 66} {b 66 70} {z 71 93} {sil 94 94}]}

timeAligned = [{{k 18 30} [{0 1} {2 1} {3 1} {4 1}]} {{yuw 32 64} [{0 2} {2 2} {3 2} {4 2}]} {{b 66 70} [{0 3} {2 3} {3 3} {4 3}]} {{z 71 91} [{2 4} {3 4} {4 4} {0 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 29
i, iTime, newITime, timeStartFrom = 2 1 2 61
i, iTime, newITime, timeStartFrom = 3 2 3 69
combinedVerdict    = [{k 0} {yuw 0} {b 0} {z 0}]
ruleAlignedVerdict = [{k 0} {yuw 0} {b 0} {z 0}]

score->
+1 for k
+1 for yuw
+1 for b
+1 for z
score<-: 9

results =
{72 [{sil 0 12} {k 13 21} {y 22 31} {uw 32 47} {b 48 51} {z 52 66} {sil 67 82}]}
{80 []}
{91 [{sil 0 15} {k 16 28} {y 29 40} {uw 41 60} {b 61 63} {z 64 82} {sil 83 116}]}
{105 [{sil 0 18} {k 19 32} {y 33 47} {uw 48 70} {b 71 73} {z 74 96} {sil 97 139}]}
{125 [{sil 3 24} {k 25 39} {y 40 53} {uw 54 85} {b 86 88} {z 89 116} {sil 117 162}]}

normalised results =
{72 [{sil 0 12} {k 18 29} {y 31 43} {uw 44 65} {b 67 71} {z 72 92} {sil 93 114}]}
{80 []}
{91 [{sil 0 15} {k 18 31} {y 32 44} {uw 45 66} {b 67 67} {z 70 90} {sil 91 127}]}
{105 [{sil 0 18} {k 18 30} {y 31 45} {uw 46 67} {b 68 68} {z 70 91} {sil 92 132}]}
{125 [{sil 3 24} {k 20 31} {y 32 42} {uw 43 68} {b 69 69} {z 71 93} {sil 94 130}]}

Mapped result =
result 0 =
start: 0 end: 0 phonemeFound: false
start: 1 end: 1 phonemeFound: true
start: 2 end: 2 phonemeFound: true
start: 3 end: 3 phonemeFound: true
start: 4 end: 4 phonemeFound: true
start: 5 end: 5 phonemeFound: true
start: 6 end: 6 phonemeFound: false
result 1 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 2 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 3 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 4 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false

Rules =
rule 0 =
Trapped opening rule:
trap: b
rule: {b}
Opening rule:
guard: d
rule: {d {[{sil} {{[{[{d} {{any_Cx_k_d_b {[{ch} {l} {hh} {v} {z} {g} {m} {w} {dh} {zh}]}}}]} {[{{any_Cx_k_d_b {[{ch} {l} {hh} {v} {z} {g} {m} {w} {dh} {zh}]}}} {d}]}]}} {{[{[{d} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]} {[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {d}]}]}}]}}
Phoneme rule:
guard: zh phoneme: k
rule: {[{[{{[{{any_Cx_zh_b_d_k {[{z} {dh} {v} {g} {hh} {w} {m} {l} {ch}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_b_d_k {[{z} {dh} {v} {g} {hh} {w} {m} {l} {ch}]}}}]}}]} {[{k} {[{[{{any_Cx_zh_b_d_k {[{z} {dh} {v} {g} {hh} {w} {m} {l} {ch}]}}} {zh}]} {[{zh} {{any_Cx_zh_b_d_k {[{z} {dh} {v} {g} {hh} {w} {m} {l} {ch}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: y
rule: {[{[{[{{[{{any_Vx_zh_zh_y_uw_noSlide {[{ae} {ah} {ax} {eh} {ih} {oh} {aa} {uh} {iy} {ao}]}}} {zh}]}} {{[{zh} {{any_Vx_zh_zh_y_uw_noSlide {[{ae} {ah} {ax} {eh} {ih} {oh} {aa} {uh} {iy} {ao}]}}}]}}]} {[{{[{{any_Cx_zh_zh_k {[{m} {z} {g} {l} {ch} {v} {w} {b} {d} {hh} {dh}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_k {[{m} {z} {g} {l} {ch} {v} {w} {b} {d} {hh} {dh}]}}}]}}]}]} {[{y} {[{[{{any_Vx_zh_zh_y_uw_noSlide {[{ae} {ah} {ax} {eh} {ih} {oh} {aa} {uh} {iy} {ao}]}}} {zh}]} {[{zh} {{any_Vx_zh_zh_y_uw_noSlide {[{ae} {ah} {ax} {eh} {ih} {oh} {aa} {uh} {iy} {ao}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: uw
rule: {[{[{[{{[{{any_Vx_zh_zh_uw_y_noSlide {[{ae} {ao} {uh} {ih} {iy} {oh} {aa} {ah} {ax} {eh}]}}} {zh}]}} {{[{zh} {{any_Vx_zh_zh_uw_y_noSlide {[{ae} {ao} {uh} {ih} {iy} {oh} {aa} {ah} {ax} {eh}]}}}]}}]} {[{{[{{any_Cx_zh_zh_b {[{z} {hh} {dh} {m} {l} {v} {ch} {g} {w} {d}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_b {[{z} {hh} {dh} {m} {l} {v} {ch} {g} {w} {d}]}}}]}}]}]} {[{uw} {[{[{{any_Vx_zh_zh_uw_y_noSlide {[{ae} {ao} {uh} {ih} {iy} {oh} {aa} {ah} {ax} {eh}]}}} {zh}]} {[{zh} {{any_Vx_zh_zh_uw_y_noSlide {[{ae} {ao} {uh} {ih} {iy} {oh} {aa} {ah} {ax} {eh}]}}}]}]}]}]}
Phoneme rule:
guard: ch phoneme: b
rule: {[{[{{[{{any_Cx_ch_zh_b {[{v} {z} {m} {g} {w} {d} {dh} {hh} {l}]}}} {ch}]}} {{[{ch} {{any_Cx_ch_zh_b {[{v} {z} {m} {g} {w} {d} {dh} {hh} {l}]}}}]}}]} {[{b} {[{[{{any_Cx_ch_zh_b_z {[{d} {m} {dh} {g} {v} {w} {hh} {l}]}}} {ch}]} {[{ch} {{any_Cx_ch_zh_b_z {[{d} {m} {dh} {g} {v} {w} {hh} {l}]}}}]}]}]}]}
Phoneme rule:
guard: hh phoneme: z
rule: {[{[{{[{{any_Cx_hh_ch_z_b {[{zh} {dh} {d} {w} {g} {l} {m} {v}]}}} {hh}]}} {{[{hh} {{any_Cx_hh_ch_z_b {[{zh} {dh} {d} {w} {g} {l} {m} {v}]}}}]}}]} {[{z} {[{[{{any_Cx_hh_ch_z_b {[{zh} {dh} {d} {w} {g} {l} {m} {v}]}}} {hh}]} {[{hh} {{any_Cx_hh_ch_z_b {[{zh} {dh} {d} {w} {g} {l} {m} {v}]}}}]}]}]}]}
Closing rule:
guard: thr
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {thr}]}} {{[{thr} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_hh_z_thr {[{l} {g} {w} {ch} {m} {dh} {d} {v} {b} {zh}]}}} {thr}]}} {{[{thr} {{any_Cx_hh_z_thr {[{l} {g} {w} {ch} {m} {dh} {d} {v} {b} {zh}]}}}]}}]} {sil}]}
rule 1 =
Trapped opening rule:
trap: b
rule: {b}
Opening rule:
guard: ch
rule: {ch {[{sil} {{[{[{ch} {{any_Cx_k_ch_b {[{m} {v} {dh} {g} {w} {zh} {d} {z} {hh} {l}]}}}]} {[{{any_Cx_k_ch_b {[{m} {v} {dh} {g} {w} {zh} {d} {z} {hh} {l}]}}} {ch}]}]}} {{[{[{ch} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]} {[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {ch}]}]}}]}}
Phoneme rule:
guard: zh phoneme: k
rule: {[{[{{[{{any_Cx_zh_b_ch_k {[{m} {v} {l} {w} {dh} {g} {hh} {d} {z}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_b_ch_k {[{m} {v} {l} {w} {dh} {g} {hh} {d} {z}]}}}]}}]} {[{k} {[{[{{any_Cx_zh_b_ch_k {[{m} {v} {l} {w} {dh} {g} {hh} {d} {z}]}}} {zh}]} {[{zh} {{any_Cx_zh_b_ch_k {[{m} {v} {l} {w} {dh} {g} {hh} {d} {z}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: y
rule: {[{[{[{{[{{any_Vx_zh_zh_y_uw_noSlide {[{ae} {ao} {oh} {iy} {uh} {aa} {ah} {ax} {eh} {ih}]}}} {zh}]}} {{[{zh} {{any_Vx_zh_zh_y_uw_noSlide {[{ae} {ao} {oh} {iy} {uh} {aa} {ah} {ax} {eh} {ih}]}}}]}}]} {[{{[{{any_Cx_zh_zh_k {[{ch} {hh} {l} {z} {d} {w} {dh} {g} {m} {b} {v}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_k {[{ch} {hh} {l} {z} {d} {w} {dh} {g} {m} {b} {v}]}}}]}}]}]} {[{y} {[{[{{any_Vx_zh_zh_y_uw_noSlide {[{ae} {ao} {oh} {iy} {uh} {aa} {ah} {ax} {eh} {ih}]}}} {zh}]} {[{zh} {{any_Vx_zh_zh_y_uw_noSlide {[{ae} {ao} {oh} {iy} {uh} {aa} {ah} {ax} {eh} {ih}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: uw
rule: {[{[{[{{[{{any_Vx_zh_zh_uw_y_noSlide {[{ae} {ih} {uh} {iy} {oh} {aa} {ah} {ao} {ax} {eh}]}}} {zh}]}} {{[{zh} {{any_Vx_zh_zh_uw_y_noSlide {[{ae} {ih} {uh} {iy} {oh} {aa} {ah} {ao} {ax} {eh}]}}}]}}]} {[{{[{{any_Cx_zh_zh_b {[{l} {z} {g} {dh} {m} {w} {d} {v} {ch} {hh}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_b {[{l} {z} {g} {dh} {m} {w} {d} {v} {ch} {hh}]}}}]}}]}]} {[{uw} {[{[{{any_Vx_zh_zh_uw_y_noSlide {[{ae} {ih} {uh} {iy} {oh} {aa} {ah} {ao} {ax} {eh}]}}} {zh}]} {[{zh} {{any_Vx_zh_zh_uw_y_noSlide {[{ae} {ih} {uh} {iy} {oh} {aa} {ah} {ao} {ax} {eh}]}}}]}]}]}]}
Phoneme rule:
guard: ch phoneme: b
rule: {[{[{{[{{any_Cx_ch_zh_b {[{d} {hh} {dh} {w} {z} {g} {l} {m} {v}]}}} {ch}]}} {{[{ch} {{any_Cx_ch_zh_b {[{d} {hh} {dh} {w} {z} {g} {l} {m} {v}]}}}]}}]} {[{b} {[{[{{any_Cx_ch_zh_b_z {[{m} {v} {w} {dh} {hh} {d} {l} {g}]}}} {ch}]} {[{ch} {{any_Cx_ch_zh_b_z {[{m} {v} {w} {dh} {hh} {d} {l} {g}]}}}]}]}]}]}
Phoneme rule:
guard: hh phoneme: z
rule: {[{[{{[{{any_Cx_hh_ch_z_b {[{m} {d} {v} {w} {zh} {l} {dh} {g}]}}} {hh}]}} {{[{hh} {{any_Cx_hh_ch_z_b {[{m} {d} {v} {w} {zh} {l} {dh} {g}]}}}]}}]} {[{z} {[{[{{any_Cx_hh_ch_z_b {[{m} {d} {v} {w} {zh} {l} {dh} {g}]}}} {hh}]} {[{hh} {{any_Cx_hh_ch_z_b {[{m} {d} {v} {w} {zh} {l} {dh} {g}]}}}]}]}]}]}
Closing rule:
guard: s
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {s}]}} {{[{s} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_hh_z_s {[{v} {l} {zh} {d} {b} {g} {dh} {w} {ch} {m}]}}} {s}]}} {{[{s} {{any_Cx_hh_z_s {[{v} {l} {zh} {d} {b} {g} {dh} {w} {ch} {m}]}}}]}}]} {sil}]}
rule 2 =
Trapped opening rule:
trap: b
rule: {b}
Opening rule:
guard: ch
rule: {ch {[{sil} {{[{[{ch} {{any_Cx_k_ch_b {[{z} {l} {m} {v} {zh} {d} {dh} {hh} {g} {w}]}}}]} {[{{any_Cx_k_ch_b {[{z} {l} {m} {v} {zh} {d} {dh} {hh} {g} {w}]}}} {ch}]}]}} {{[{[{ch} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]} {[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {ch}]}]}}]}}
Phoneme rule:
guard: zh phoneme: k
rule: {[{[{{[{{any_Cx_zh_b_ch_k {[{dh} {l} {w} {hh} {z} {v} {d} {m} {g}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_b_ch_k {[{dh} {l} {w} {hh} {z} {v} {d} {m} {g}]}}}]}}]} {[{k} {[{[{{any_Cx_zh_b_ch_k {[{dh} {l} {w} {hh} {z} {v} {d} {m} {g}]}}} {zh}]} {[{zh} {{any_Cx_zh_b_ch_k {[{dh} {l} {w} {hh} {z} {v} {d} {m} {g}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: y
rule: {[{[{[{{[{{any_Vx_zh_zh_y_uw_noSlide {[{aa} {ae} {ih} {oh} {uh} {ah} {ao} {ax} {eh} {iy}]}}} {zh}]}} {{[{zh} {{any_Vx_zh_zh_y_uw_noSlide {[{aa} {ae} {ih} {oh} {uh} {ah} {ao} {ax} {eh} {iy}]}}}]}}]} {[{{[{{any_Cx_zh_zh_k {[{d} {w} {l} {m} {b} {hh} {dh} {z} {ch} {g} {v}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_k {[{d} {w} {l} {m} {b} {hh} {dh} {z} {ch} {g} {v}]}}}]}}]}]} {[{y} {[{[{{any_Vx_zh_zh_y_uw_noSlide {[{aa} {ae} {ih} {oh} {uh} {ah} {ao} {ax} {eh} {iy}]}}} {zh}]} {[{zh} {{any_Vx_zh_zh_y_uw_noSlide {[{aa} {ae} {ih} {oh} {uh} {ah} {ao} {ax} {eh} {iy}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: uw
rule: {[{[{[{{[{{any_Vx_zh_zh_uw_y_noSlide {[{ao} {ax} {iy} {oh} {uh} {ae} {ah} {eh} {ih} {aa}]}}} {zh}]}} {{[{zh} {{any_Vx_zh_zh_uw_y_noSlide {[{ao} {ax} {iy} {oh} {uh} {ae} {ah} {eh} {ih} {aa}]}}}]}}]} {[{{[{{any_Cx_zh_zh_b {[{l} {m} {ch} {d} {w} {g} {dh} {v} {z} {hh}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_b {[{l} {m} {ch} {d} {w} {g} {dh} {v} {z} {hh}]}}}]}}]}]} {[{uw} {[{[{{any_Vx_zh_zh_uw_y_noSlide {[{ao} {ax} {iy} {oh} {uh} {ae} {ah} {eh} {ih} {aa}]}}} {zh}]} {[{zh} {{any_Vx_zh_zh_uw_y_noSlide {[{ao} {ax} {iy} {oh} {uh} {ae} {ah} {eh} {ih} {aa}]}}}]}]}]}]}
Phoneme rule:
guard: ch phoneme: b
rule: {[{[{{[{{any_Cx_ch_zh_b {[{v} {g} {hh} {m} {w} {d} {l} {z} {dh}]}}} {ch}]}} {{[{ch} {{any_Cx_ch_zh_b {[{v} {g} {hh} {m} {w} {d} {l} {z} {dh}]}}}]}}]} {[{b} {[{[{{any_Cx_ch_zh_b_z {[{d} {dh} {hh} {w} {g} {v} {m} {l}]}}} {ch}]} {[{ch} {{any_Cx_ch_zh_b_z {[{d} {dh} {hh} {w} {g} {v} {m} {l}]}}}]}]}]}]}
Phoneme rule:
guard: hh phoneme: z
rule: {[{[{{[{{any_Cx_hh_ch_z_b {[{d} {w} {v} {l} {m} {zh} {g} {dh}]}}} {hh}]}} {{[{hh} {{any_Cx_hh_ch_z_b {[{d} {w} {v} {l} {m} {zh} {g} {dh}]}}}]}}]} {[{z} {[{[{{any_Cx_hh_ch_z_b {[{d} {w} {v} {l} {m} {zh} {g} {dh}]}}} {hh}]} {[{hh} {{any_Cx_hh_ch_z_b {[{d} {w} {v} {l} {m} {zh} {g} {dh}]}}}]}]}]}]}
Closing rule:
guard: v
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {v}]}} {{[{v} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_hh_z_v {[{w} {g} {d} {ch} {m} {l} {zh} {b} {dh}]}}} {v}]}} {{[{v} {{any_Cx_hh_z_v {[{w} {g} {d} {ch} {m} {l} {zh} {b} {dh}]}}}]}}]} {sil}]}
rule 3 =
Trapped opening rule:
trap: b
rule: {b}
Opening rule:
guard: t
rule: {t {[{sil} {{[{[{t} {{any_Cx_k_t_b {[{d} {g} {l} {dh} {w} {v} {z} {zh} {ch} {hh} {m}]}}}]} {[{{any_Cx_k_t_b {[{d} {g} {l} {dh} {w} {v} {z} {zh} {ch} {hh} {m}]}}} {t}]}]}} {{[{[{t} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]} {[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {t}]}]}}]}}
Phoneme rule:
guard: zh phoneme: k
rule: {[{[{{[{{any_Cx_zh_b_t_k {[{m} {ch} {d} {w} {v} {z} {dh} {l} {hh} {g}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_b_t_k {[{m} {ch} {d} {w} {v} {z} {dh} {l} {hh} {g}]}}}]}}]} {[{k} {[{[{{any_Cx_zh_b_t_k {[{m} {ch} {d} {w} {v} {z} {dh} {l} {hh} {g}]}}} {zh}]} {[{zh} {{any_Cx_zh_b_t_k {[{m} {ch} {d} {w} {v} {z} {dh} {l} {hh} {g}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: y
rule: {[{[{[{{[{{any_Vx_zh_zh_y_uw_noSlide {[{ah} {ax} {ih} {oh} {iy} {uh} {aa} {ae} {ao} {eh}]}}} {zh}]}} {{[{zh} {{any_Vx_zh_zh_y_uw_noSlide {[{ah} {ax} {ih} {oh} {iy} {uh} {aa} {ae} {ao} {eh}]}}}]}}]} {[{{[{{any_Cx_zh_zh_k {[{d} {v} {b} {ch} {w} {m} {dh} {l} {z} {g} {hh}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_k {[{d} {v} {b} {ch} {w} {m} {dh} {l} {z} {g} {hh}]}}}]}}]}]} {[{y} {[{[{{any_Vx_zh_zh_y_uw_noSlide {[{ah} {ax} {ih} {oh} {iy} {uh} {aa} {ae} {ao} {eh}]}}} {zh}]} {[{zh} {{any_Vx_zh_zh_y_uw_noSlide {[{ah} {ax} {ih} {oh} {iy} {uh} {aa} {ae} {ao} {eh}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: uw
rule: {[{[{[{{[{{any_Vx_zh_zh_uw_y_noSlide {[{ae} {ah} {ax} {eh} {ih} {aa} {iy} {oh} {uh} {ao}]}}} {zh}]}} {{[{zh} {{any_Vx_zh_zh_uw_y_noSlide {[{ae} {ah} {ax} {eh} {ih} {aa} {iy} {oh} {uh} {ao}]}}}]}}]} {[{{[{{any_Cx_zh_zh_b {[{w} {v} {ch} {g} {hh} {m} {z} {d} {dh} {l}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_b {[{w} {v} {ch} {g} {hh} {m} {z} {d} {dh} {l}]}}}]}}]}]} {[{uw} {[{[{{any_Vx_zh_zh_uw_y_noSlide {[{ae} {ah} {ax} {eh} {ih} {aa} {iy} {oh} {uh} {ao}]}}} {zh}]} {[{zh} {{any_Vx_zh_zh_uw_y_noSlide {[{ae} {ah} {ax} {eh} {ih} {aa} {iy} {oh} {uh} {ao}]}}}]}]}]}]}
Phoneme rule:
guard: ch phoneme: b
rule: {[{[{{[{{any_Cx_ch_zh_b {[{g} {v} {l} {hh} {m} {dh} {z} {d} {w}]}}} {ch}]}} {{[{ch} {{any_Cx_ch_zh_b {[{g} {v} {l} {hh} {m} {dh} {z} {d} {w}]}}}]}}]} {[{b} {[{[{{any_Cx_ch_zh_b_z {[{d} {hh} {v} {dh} {l} {w} {m} {g}]}}} {ch}]} {[{ch} {{any_Cx_ch_zh_b_z {[{d} {hh} {v} {dh} {l} {w} {m} {g}]}}}]}]}]}]}
Phoneme rule:
guard: hh phoneme: z
rule: {[{[{{[{{any_Cx_hh_ch_z_b {[{v} {dh} {g} {zh} {w} {l} {m} {d}]}}} {hh}]}} {{[{hh} {{any_Cx_hh_ch_z_b {[{v} {dh} {g} {zh} {w} {l} {m} {d}]}}}]}}]} {[{z} {[{[{{any_Cx_hh_ch_z_b {[{v} {dh} {g} {zh} {w} {l} {m} {d}]}}} {hh}]} {[{hh} {{any_Cx_hh_ch_z_b {[{v} {dh} {g} {zh} {w} {l} {m} {d}]}}}]}]}]}]}
Closing rule:
guard: thr
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {thr}]}} {{[{thr} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_hh_z_thr {[{d} {b} {ch} {w} {zh} {g} {m} {v} {dh} {l}]}}} {thr}]}} {{[{thr} {{any_Cx_hh_z_thr {[{d} {b} {ch} {w} {zh} {g} {m} {v} {dh} {l}]}}}]}}]} {sil}]}
rule 4 =
Trapped opening rule:
trap: b
rule: {b}
Opening rule:
guard: t
rule: {t {[{sil} {{[{[{t} {{any_Cx_k_t_b {[{g} {hh} {l} {zh} {v} {z} {ch} {d} {m} {dh} {w}]}}}]} {[{{any_Cx_k_t_b {[{g} {hh} {l} {zh} {v} {z} {ch} {d} {m} {dh} {w}]}}} {t}]}]}} {{[{[{t} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]} {[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {t}]}]}}]}}
Phoneme rule:
guard: zh phoneme: k
rule: {[{[{{[{{any_Cx_zh_b_t_k {[{dh} {w} {d} {v} {z} {g} {l} {m} {ch} {hh}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_b_t_k {[{dh} {w} {d} {v} {z} {g} {l} {m} {ch} {hh}]}}}]}}]} {[{k} {[{[{{any_Cx_zh_b_t_k {[{dh} {w} {d} {v} {z} {g} {l} {m} {ch} {hh}]}}} {zh}]} {[{zh} {{any_Cx_zh_b_t_k {[{dh} {w} {d} {v} {z} {g} {l} {m} {ch} {hh}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: y
rule: {[{[{[{{[{{any_Vx_zh_zh_y_uw_noSlide {[{ae} {ao} {ax} {ih} {aa} {ah} {eh} {iy} {oh} {uh}]}}} {zh}]}} {{[{zh} {{any_Vx_zh_zh_y_uw_noSlide {[{ae} {ao} {ax} {ih} {aa} {ah} {eh} {iy} {oh} {uh}]}}}]}}]} {[{{[{{any_Cx_zh_zh_k {[{ch} {dh} {hh} {l} {w} {b} {m} {v} {d} {g} {z}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_k {[{ch} {dh} {hh} {l} {w} {b} {m} {v} {d} {g} {z}]}}}]}}]}]} {[{y} {[{[{{any_Vx_zh_zh_y_uw_noSlide {[{ae} {ao} {ax} {ih} {aa} {ah} {eh} {iy} {oh} {uh}]}}} {zh}]} {[{zh} {{any_Vx_zh_zh_y_uw_noSlide {[{ae} {ao} {ax} {ih} {aa} {ah} {eh} {iy} {oh} {uh}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: uw
rule: {[{[{[{{[{{any_Vx_zh_zh_uw_y_noSlide {[{ao} {ax} {iy} {aa} {ae} {ih} {oh} {uh} {ah} {eh}]}}} {zh}]}} {{[{zh} {{any_Vx_zh_zh_uw_y_noSlide {[{ao} {ax} {iy} {aa} {ae} {ih} {oh} {uh} {ah} {eh}]}}}]}}]} {[{{[{{any_Cx_zh_zh_b {[{m} {dh} {d} {v} {w} {ch} {hh} {z} {g} {l}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_b {[{m} {dh} {d} {v} {w} {ch} {hh} {z} {g} {l}]}}}]}}]}]} {[{uw} {[{[{{any_Vx_zh_zh_uw_y_noSlide {[{ao} {ax} {iy} {aa} {ae} {ih} {oh} {uh} {ah} {eh}]}}} {zh}]} {[{zh} {{any_Vx_zh_zh_uw_y_noSlide {[{ao} {ax} {iy} {aa} {ae} {ih} {oh} {uh} {ah} {eh}]}}}]}]}]}]}
Phoneme rule:
guard: ch phoneme: b
rule: {[{[{{[{{any_Cx_ch_zh_b {[{hh} {d} {w} {v} {dh} {z} {l} {m} {g}]}}} {ch}]}} {{[{ch} {{any_Cx_ch_zh_b {[{hh} {d} {w} {v} {dh} {z} {l} {m} {g}]}}}]}}]} {[{b} {[{[{{any_Cx_ch_zh_b_z {[{d} {w} {g} {dh} {v} {l} {m} {hh}]}}} {ch}]} {[{ch} {{any_Cx_ch_zh_b_z {[{d} {w} {g} {dh} {v} {l} {m} {hh}]}}}]}]}]}]}
Phoneme rule:
guard: hh phoneme: z
rule: {[{[{{[{{any_Cx_hh_ch_z_b {[{m} {v} {l} {d} {g} {w} {zh} {dh}]}}} {hh}]}} {{[{hh} {{any_Cx_hh_ch_z_b {[{m} {v} {l} {d} {g} {w} {zh} {dh}]}}}]}}]} {[{z} {[{[{{any_Cx_hh_ch_z_b {[{m} {v} {l} {d} {g} {w} {zh} {dh}]}}} {hh}]} {[{hh} {{any_Cx_hh_ch_z_b {[{m} {v} {l} {d} {g} {w} {zh} {dh}]}}}]}]}]}]}
Closing rule:
guard: b
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {b}]}} {{[{b} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_hh_z_b {[{dh} {d} {l} {zh} {g} {v} {m} {ch} {w}]}}} {b}]}} {{[{b} {{any_Cx_hh_z_b {[{dh} {d} {l} {zh} {g} {v} {m} {ch} {w}]}}}]}}]} {sil}]}

parse: err = Parser error
ruleAligned = [{{k 0} [{0 1} {2 1} {3 1} {4 1}]} {{y 0} [{0 2} {2 2} {3 2} {4 2}]} {{uw 0} [{0 3} {2 3} {3 3} {4 3}]} {{b 2} [{0 4}]} {{z 0} [{0 5} {2 5} {3 5} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {k 18 29} {y 31 43} {uw 44 65} {b 67 71} {z 72 92} {sil 93 93}]}
{80 []}
{91 [{sil 0 0} {k 18 31} {y 32 44} {uw 45 66} {b 67 67} {z 70 90} {sil 91 91}]}
{105 [{sil 0 0} {k 18 30} {y 31 45} {uw 46 67} {b 68 68} {z 70 91} {sil 92 92}]}
{125 [{sil 3 3} {k 20 31} {y 32 42} {uw 43 68} {b 69 69} {z 71 93} {sil 94 94}]}

timeAligned = [{{k 18 30} [{0 1} {2 1} {3 1} {4 1}]} {{y 32 43} [{0 2} {2 2} {3 2} {4 2}]} {{uw 45 66} [{0 3} {2 3} {4 3} {3 3}]} {{z 71 91} [{2 5} {3 5} {4 5} {0 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 29
i, iTime, newITime, timeStartFrom = 2 1 2 42
i, iTime, newITime, timeStartFrom = 3 2 -1 65
i, iTime, newITime, timeStartFrom = 4 2 3 65
combinedVerdict    = [{k 0} {y 0} {uw 0} {b 2} {z 0}]
ruleAlignedVerdict = [{k 0} {y 0} {uw 0} {b 2} {z 0}]

score->
+1 for k
+1 for y
+1 for uw
-1 for b
+1 for z
score<-: 3
testPronounce k good yuw good b good z good
publish->
{
  "results": [],
  "err": "Phoneme translation failure, translating phoneme yuw in word, cubes"
}
