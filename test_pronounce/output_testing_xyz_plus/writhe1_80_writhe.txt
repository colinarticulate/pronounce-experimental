
 length of audio =  2.4145



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.4600000000000001 1.9400000000000002 2.4000000000000004

 start3, duration3, end3 =  1.0999999999999999 0.94 2.04

 Initial start, duration, end =  0.3600000000000001 2.04 2.4000000000000004

 Cut at: start, duration =  0.3600000000000001 2.0345     guard_end =  2.3945 

Running scan for frate = 125
Considering guard z with value 1 for r ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard zh with value 4 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 1 for dh ...
Considering guard zh with value 1 for dh ...
candidateGuards = map[ch:true zh:true]
Picking guard, ch


frate, target rule = 125 public <writhe> = (((sil [((m <any_Cx_r_m_p>) | (<any_Cx_r_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]) | (sil p (sil [((m <any_Cx_r_m_p>) | (<any_Cx_r_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]))) (([(<any_Cx_z_p_m_r> z)] | [(z <any_Cx_z_p_m_r>)]) (r | l | w | ((<any_Cx_z_p_m_r> z) | (z <any_Cx_z_p_m_r>)))) ((([(<any_Vx_zh_z_ay_noSlide> zh)] | [(zh <any_Vx_zh_z_ay_noSlide>)]) ([(<any_Cx_zh_z_dh_r> zh)] | [(zh <any_Cx_zh_z_dh_r>)])) (ay | ((<any_Vx_zh_z_ay_noSlide> zh) | (zh <any_Vx_zh_z_ay_noSlide>)))) (([(<any_Cx_ch_zh_dh> ch)] | [(ch <any_Cx_ch_zh_dh>)]) (dh | ((<any_Cx_ch_zh_dh> ch) | (ch <any_Cx_ch_zh_dh>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_ch_dh_thr> thr)] | [(thr <any_Cx_ch_dh_thr>)]) sil))
Running scan for frate = 105
Considering guard z with value 1 for r ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard zh with value 4 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for dh ...
Considering guard ch with value 1 for dh ...
candidateGuards = map[ch:true zh:true]
Picking guard, zh


frate, target rule = 105 public <writhe> = (((sil [((hh <any_Cx_r_hh_p>) | (<any_Cx_r_hh_p> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil p (sil [((hh <any_Cx_r_hh_p>) | (<any_Cx_r_hh_p> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_z_p_hh_r> z)] | [(z <any_Cx_z_p_hh_r>)]) (r | l | w | ((<any_Cx_z_p_hh_r> z) | (z <any_Cx_z_p_hh_r>)))) ((([(<any_Vx_zh_z_ay_noSlide> zh)] | [(zh <any_Vx_zh_z_ay_noSlide>)]) ([(<any_Cx_zh_z_dh_r> zh)] | [(zh <any_Cx_zh_z_dh_r>)])) (ay | ((<any_Vx_zh_z_ay_noSlide> zh) | (zh <any_Vx_zh_z_ay_noSlide>)))) (([(<any_Cx_zh_zh_dh> zh)] | [(zh <any_Cx_zh_zh_dh>)]) (dh | ((<any_Cx_zh_zh_dh> zh) | (zh <any_Cx_zh_zh_dh>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_zh_dh_thr> thr)] | [(thr <any_Cx_zh_dh_thr>)]) sil))
Running scan for frate = 91
Considering guard z with value 1 for r ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard zh with value 4 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for dh ...
Considering guard ch with value 1 for dh ...
candidateGuards = map[ch:true zh:true]
Picking guard, ch


frate, target rule = 91 public <writhe> = (((sil [((hh <any_Cx_r_hh_p>) | (<any_Cx_r_hh_p> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil p (sil [((hh <any_Cx_r_hh_p>) | (<any_Cx_r_hh_p> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_z_p_hh_r> z)] | [(z <any_Cx_z_p_hh_r>)]) (r | l | w | ((<any_Cx_z_p_hh_r> z) | (z <any_Cx_z_p_hh_r>)))) ((([(<any_Vx_zh_z_ay_noSlide> zh)] | [(zh <any_Vx_zh_z_ay_noSlide>)]) ([(<any_Cx_zh_z_dh_r> zh)] | [(zh <any_Cx_zh_z_dh_r>)])) (ay | ((<any_Vx_zh_z_ay_noSlide> zh) | (zh <any_Vx_zh_z_ay_noSlide>)))) (([(<any_Cx_ch_zh_dh> ch)] | [(ch <any_Cx_ch_zh_dh>)]) (dh | ((<any_Cx_ch_zh_dh> ch) | (ch <any_Cx_ch_zh_dh>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_ch_dh_thr> thr)] | [(thr <any_Cx_ch_dh_thr>)]) sil))
Running scan for frate = 80
Considering guard z with value 1 for r ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard zh with value 4 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 1 for dh ...
Considering guard zh with value 1 for dh ...
candidateGuards = map[ch:true zh:true]
Picking guard, zh


frate, target rule = 80 public <writhe> = (((sil [((m <any_Cx_r_m_p>) | (<any_Cx_r_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]) | (sil p (sil [((m <any_Cx_r_m_p>) | (<any_Cx_r_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]))) (([(<any_Cx_z_p_m_r> z)] | [(z <any_Cx_z_p_m_r>)]) (r | l | w | ((<any_Cx_z_p_m_r> z) | (z <any_Cx_z_p_m_r>)))) ((([(<any_Vx_zh_z_ay_noSlide> zh)] | [(zh <any_Vx_zh_z_ay_noSlide>)]) ([(<any_Cx_zh_z_dh_r> zh)] | [(zh <any_Cx_zh_z_dh_r>)])) (ay | ((<any_Vx_zh_z_ay_noSlide> zh) | (zh <any_Vx_zh_z_ay_noSlide>)))) (([(<any_Cx_zh_zh_dh> zh)] | [(zh <any_Cx_zh_zh_dh>)]) (dh | ((<any_Cx_zh_zh_dh> zh) | (zh <any_Cx_zh_zh_dh>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_zh_dh_f> f)] | [(f <any_Cx_zh_dh_f>)]) sil))
Running scan for frate = 72
Considering guard z with value 1 for r ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard zh with value 4 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for dh ...
Considering guard ch with value 1 for dh ...
candidateGuards = map[ch:true zh:true]
Picking guard, zh


frate, target rule = 72 public <writhe> = (((sil [((n <any_Cx_r_n_p>) | (<any_Cx_r_n_p> n))] [((n <any_vowel_noSlide>) | (<any_vowel_noSlide> n))]) | (sil p (sil [((n <any_Cx_r_n_p>) | (<any_Cx_r_n_p> n))] [((n <any_vowel_noSlide>) | (<any_vowel_noSlide> n))]))) (([(<any_Cx_z_p_n_r> z)] | [(z <any_Cx_z_p_n_r>)]) (r | l | w | ((<any_Cx_z_p_n_r> z) | (z <any_Cx_z_p_n_r>)))) ((([(<any_Vx_zh_z_ay_noSlide> zh)] | [(zh <any_Vx_zh_z_ay_noSlide>)]) ([(<any_Cx_zh_z_dh_r> zh)] | [(zh <any_Cx_zh_z_dh_r>)])) (ay | ((<any_Vx_zh_z_ay_noSlide> zh) | (zh <any_Vx_zh_z_ay_noSlide>)))) (([(<any_Cx_zh_zh_dh> zh)] | [(zh <any_Cx_zh_zh_dh>)]) (dh | ((<any_Cx_zh_zh_dh> zh) | (zh <any_Cx_zh_zh_dh>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_zh_dh_hh> hh)] | [(hh <any_Cx_zh_dh_hh>)]) sil))

results =
{72 [{sil 0 9} {r 10 22} {ay 23 43} {dh 44 64} {hh 65 68} {ah 69 101} {sil 102 145}]}
{80 [{sil 0 11} {r 12 27} {ay 28 48} {dh 49 54} {f 55 74} {ah 75 112} {sil 113 157}]}
{91 [{sil 0 14} {r 15 31} {ay 32 55} {dh 56 61} {thr 62 78} {ah 79 128} {sil 129 179}]}
{105 [{sil 0 16} {r 17 35} {ay 36 64} {dh 65 69} {thr 70 90} {ah 91 149} {sil 150 213}]}
{125 [{sil 3 21} {r 22 43} {ay 44 77} {dh 78 83} {thr 84 108} {ah 109 179} {sil 180 254}]}

normalised results =
{72 [{sil 0 9} {r 14 31} {ay 32 60} {dh 61 89} {hh 90 94} {ah 96 140} {sil 142 201}]}
{80 [{sil 0 11} {r 15 34} {ay 35 60} {dh 61 68} {f 69 93} {ah 94 140} {sil 141 196}]}
{91 [{sil 0 14} {r 16 34} {ay 35 60} {dh 62 67} {thr 68 86} {ah 87 141} {sil 142 197}]}
{105 [{sil 0 16} {r 16 33} {ay 34 61} {dh 62 66} {thr 67 86} {ah 87 142} {sil 143 203}]}
{125 [{sil 3 21} {r 18 34} {ay 35 62} {dh 62 66} {thr 67 86} {ah 87 143} {sil 144 203}]}

ruleAligned = [{{r 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ay 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{dh 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{thr 3} [{2 4} {3 4} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {r 14 31} {ay 32 60} {dh 61 89} {hh 90 90} {ah 96 96} {sil 142 142}]}
{80 [{sil 0 0} {r 15 34} {ay 35 60} {dh 61 68} {f 69 93} {ah 94 94} {sil 141 141}]}
{91 [{sil 0 0} {r 16 34} {ay 35 60} {dh 62 67} {thr 68 86} {ah 87 87} {sil 142 142}]}
{105 [{sil 0 0} {r 16 33} {ay 34 61} {dh 62 66} {thr 67 86} {ah 87 87} {sil 143 143}]}
{125 [{sil 3 3} {r 18 34} {ay 35 62} {dh 62 66} {thr 67 86} {ah 87 87} {sil 144 144}]}

timeAligned = [{{r 16 34} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ay 35 60} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{dh 62 67} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{thr 68 86} [{2 4} {3 4} {4 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 31
i, iTime, newITime, timeStartFrom = 2 1 2 60
i, iTime, newITime, timeStartFrom = 3 2 3 66
combinedVerdict    = [{r 0} {ay 0} {dh 0} {thr 3}]
ruleAlignedVerdict = [{r 0} {ay 0} {dh 0} {thr 3}]

score->
+1 for r
+1 for ay
+1 for dh
-1 for thr
score<-: 2
testPronounce r good ay good dh good thr surprise
publish->
phonsToAlphas = [{[r] wr} {[ay] i} {[dh] the}]
getVerdict<-:new {wr [r] 0}
getVerdict<-:new {i [ay] 0}
getVerdict<-:new {the [dh] 0}
lettersVerdicts = [{wr [r] 0} {i [ay] 0} {the [dh] 0} {thr [thr] 3}]
publish<-
{
  "results": [
    {
      "letters": "wr",
      "phonemes": "ɹ",
      "verdict": "good"
    },
    {
      "letters": "i",
      "phonemes": "ɑɪ",
      "verdict": "good"
    },
    {
      "letters": "the",
      "phonemes": "ð",
      "verdict": "good"
    },
    {
      "letters": "thr",
      "phonemes": "thr",
      "verdict": "surprise"
    }
  ],
  "err": null
}
