
 length of audio =  2.068



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.4600000000000001 1.08 1.54

 start3, duration3, end3 =  0.48 1 1.48

 Initial start, duration, end =  0.3600000000000001 1.18 1.54

 Cut at: start, duration =  0.3600000000000001 1.63     guard_end =  1.99 

Running scan for frate = 125
Considering guard ch with value 1.4 for eh ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard zh with value 4.8 for m ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 4.8 for p ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for ax ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard z with value 2 for r ...
Considering guard y with value 2 for r ...
candidateGuards = map[y:true z:true]
Picking guard, z

Considering guard y with value 5 for ax ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 5 for z ...
Considering guard ch with value 5 for z ...
candidateGuards = map[ch:true y:true]
Picking guard, y

frate, target rule = 125 public <emperors> = (((sil [((hh <any_Vx_eh_hh_p_noSlide>) | (<any_Vx_eh_hh_p_noSlide> hh))] [((hh <any_Cx_eh_hh_p>) | (<any_Cx_eh_hh_p> hh))]) | (sil p (sil [((hh <any_Vx_eh_hh_p_noSlide>) | (<any_Vx_eh_hh_p_noSlide> hh))] [((hh <any_Cx_eh_hh_p>) | (<any_Cx_eh_hh_p> hh))]))) ((([(<any_Vx_ch_p_hh_eh_noSlide> ch)] | [(ch <any_Vx_ch_p_hh_eh_noSlide>)]) ([(<any_Cx_ch_p_hh_m> ch)] | [(ch <any_Cx_ch_p_hh_m>)])) (eh | ((<any_Vx_ch_p_hh_eh_noSlide> ch) | (ch <any_Vx_ch_p_hh_eh_noSlide>)))) (([(<any_Cx_zh_ch_m_p> zh)] | [(zh <any_Cx_zh_ch_m_p>)]) (m | ((<any_Cx_zh_ch_m_p> zh) | (zh <any_Cx_zh_ch_m_p>)))) (([(<any_Cx_zh_zh_p_ax_m> zh)] | [(zh <any_Cx_zh_zh_p_ax_m>)]) (p | ((<any_Cx_zh_zh_p_ax_m> zh) | (zh <any_Cx_zh_zh_p_ax_m>)))) (([(<any_Cx_zh_zh_ax_r_p> zh)] | [(zh <any_Cx_zh_zh_ax_r_p>)]) (ax | ((<any_Cx_zh_zh_ax_r_p> zh) | (zh <any_Cx_zh_zh_ax_r_p>)))) (([(<any_Cx_z_zh_r_ax_ax> z)] | [(z <any_Cx_z_zh_r_ax_ax>)]) (r | ((<any_Cx_z_zh_r_ax_ax> z) | (z <any_Cx_z_zh_r_ax_ax>)))) (([(<any_Cx_y_z_ax_r> y)] | [(y <any_Cx_y_z_ax_r>)]) (ax | ((<any_Cx_y_z_ax_z_r> y) | (y <any_Cx_y_z_ax_z_r>)))) (([(<any_Cx_y_y_z_ax> y)] | [(y <any_Cx_y_y_z_ax>)]) (z | ((<any_Cx_y_y_z_ax> y) | (y <any_Cx_y_y_z_ax>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_y_z_v> v)] | [(v <any_Cx_y_z_v>)]) sil))
Running scan for frate = 105
Considering guard ch with value 1.4 for eh ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard zh with value 4.8 for m ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 4.8 for p ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for ax ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard y with value 2 for r ...
Considering guard z with value 2 for r ...
candidateGuards = map[y:true z:true]
Picking guard, y

Considering guard y with value 5 for ax ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 5 for z ...
Considering guard ch with value 5 for z ...
candidateGuards = map[ch:true y:true]
Picking guard, y

frate, target rule = 105 public <emperors> = (((sil [((r <any_Vx_eh_r_p_noSlide>) | (<any_Vx_eh_r_p_noSlide> r))] [((r <any_Cx_eh_r_p>) | (<any_Cx_eh_r_p> r))]) | (sil p (sil [((r <any_Vx_eh_r_p_noSlide>) | (<any_Vx_eh_r_p_noSlide> r))] [((r <any_Cx_eh_r_p>) | (<any_Cx_eh_r_p> r))]))) ((([(<any_Vx_ch_p_r_eh_noSlide> ch)] | [(ch <any_Vx_ch_p_r_eh_noSlide>)]) ([(<any_Cx_ch_p_r_m> ch)] | [(ch <any_Cx_ch_p_r_m>)])) (eh | ((<any_Vx_ch_p_r_eh_noSlide> ch) | (ch <any_Vx_ch_p_r_eh_noSlide>)))) (([(<any_Cx_zh_ch_m_p> zh)] | [(zh <any_Cx_zh_ch_m_p>)]) (m | ((<any_Cx_zh_ch_m_p> zh) | (zh <any_Cx_zh_ch_m_p>)))) (([(<any_Cx_zh_zh_p_ax_m> zh)] | [(zh <any_Cx_zh_zh_p_ax_m>)]) (p | ((<any_Cx_zh_zh_p_ax_m> zh) | (zh <any_Cx_zh_zh_p_ax_m>)))) (([(<any_Cx_zh_zh_ax_r_p> zh)] | [(zh <any_Cx_zh_zh_ax_r_p>)]) (ax | ((<any_Cx_zh_zh_ax_r_p> zh) | (zh <any_Cx_zh_zh_ax_r_p>)))) (([(<any_Cx_y_zh_r_ax_ax> y)] | [(y <any_Cx_y_zh_r_ax_ax>)]) (r | ((<any_Cx_y_zh_r_ax_ax> y) | (y <any_Cx_y_zh_r_ax_ax>)))) (([(<any_Cx_y_y_ax_r> y)] | [(y <any_Cx_y_y_ax_r>)]) (ax | ((<any_Cx_y_y_ax_z_r> y) | (y <any_Cx_y_y_ax_z_r>)))) (([(<any_Cx_y_y_z_ax> y)] | [(y <any_Cx_y_y_z_ax>)]) (z | ((<any_Cx_y_y_z_ax> y) | (y <any_Cx_y_y_z_ax>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_y_z_thr> thr)] | [(thr <any_Cx_y_z_thr>)]) sil))
Running scan for frate = 91
Considering guard ch with value 1.4 for eh ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard zh with value 4.8 for m ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 4.8 for p ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for ax ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard z with value 2 for r ...
Considering guard y with value 2 for r ...
candidateGuards = map[y:true z:true]
Picking guard, z

Considering guard y with value 5 for ax ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 5 for z ...
Considering guard ch with value 5 for z ...
candidateGuards = map[ch:true y:true]
Picking guard, y

frate, target rule = 91 public <emperors> = (((sil [((l <any_Vx_eh_l_p_noSlide>) | (<any_Vx_eh_l_p_noSlide> l))] [((l <any_Cx_eh_l_p>) | (<any_Cx_eh_l_p> l))]) | (sil p (sil [((l <any_Vx_eh_l_p_noSlide>) | (<any_Vx_eh_l_p_noSlide> l))] [((l <any_Cx_eh_l_p>) | (<any_Cx_eh_l_p> l))]))) ((([(<any_Vx_ch_p_l_eh_noSlide> ch)] | [(ch <any_Vx_ch_p_l_eh_noSlide>)]) ([(<any_Cx_ch_p_l_m> ch)] | [(ch <any_Cx_ch_p_l_m>)])) (eh | ((<any_Vx_ch_p_l_eh_noSlide> ch) | (ch <any_Vx_ch_p_l_eh_noSlide>)))) (([(<any_Cx_zh_ch_m_p> zh)] | [(zh <any_Cx_zh_ch_m_p>)]) (m | ((<any_Cx_zh_ch_m_p> zh) | (zh <any_Cx_zh_ch_m_p>)))) (([(<any_Cx_zh_zh_p_ax_m> zh)] | [(zh <any_Cx_zh_zh_p_ax_m>)]) (p | ((<any_Cx_zh_zh_p_ax_m> zh) | (zh <any_Cx_zh_zh_p_ax_m>)))) (([(<any_Cx_zh_zh_ax_r_p> zh)] | [(zh <any_Cx_zh_zh_ax_r_p>)]) (ax | ((<any_Cx_zh_zh_ax_r_p> zh) | (zh <any_Cx_zh_zh_ax_r_p>)))) (([(<any_Cx_z_zh_r_ax_ax> z)] | [(z <any_Cx_z_zh_r_ax_ax>)]) (r | ((<any_Cx_z_zh_r_ax_ax> z) | (z <any_Cx_z_zh_r_ax_ax>)))) (([(<any_Cx_y_z_ax_r> y)] | [(y <any_Cx_y_z_ax_r>)]) (ax | ((<any_Cx_y_z_ax_z_r> y) | (y <any_Cx_y_z_ax_z_r>)))) (([(<any_Cx_y_y_z_ax> y)] | [(y <any_Cx_y_y_z_ax>)]) (z | ((<any_Cx_y_y_z_ax> y) | (y <any_Cx_y_y_z_ax>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_y_z_thr> thr)] | [(thr <any_Cx_y_z_thr>)]) sil))
Running scan for frate = 80
Considering guard ch with value 1.4 for eh ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard zh with value 4.8 for m ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 4.8 for p ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for ax ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard y with value 2 for r ...
Considering guard z with value 2 for r ...
candidateGuards = map[y:true z:true]
Picking guard, y

Considering guard y with value 5 for ax ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 5 for z ...
Considering guard ch with value 5 for z ...
candidateGuards = map[ch:true y:true]
Picking guard, y

frate, target rule = 80 public <emperors> = (((sil [((r <any_Vx_eh_r_p_noSlide>) | (<any_Vx_eh_r_p_noSlide> r))] [((r <any_Cx_eh_r_p>) | (<any_Cx_eh_r_p> r))]) | (sil p (sil [((r <any_Vx_eh_r_p_noSlide>) | (<any_Vx_eh_r_p_noSlide> r))] [((r <any_Cx_eh_r_p>) | (<any_Cx_eh_r_p> r))]))) ((([(<any_Vx_ch_p_r_eh_noSlide> ch)] | [(ch <any_Vx_ch_p_r_eh_noSlide>)]) ([(<any_Cx_ch_p_r_m> ch)] | [(ch <any_Cx_ch_p_r_m>)])) (eh | ((<any_Vx_ch_p_r_eh_noSlide> ch) | (ch <any_Vx_ch_p_r_eh_noSlide>)))) (([(<any_Cx_zh_ch_m_p> zh)] | [(zh <any_Cx_zh_ch_m_p>)]) (m | ((<any_Cx_zh_ch_m_p> zh) | (zh <any_Cx_zh_ch_m_p>)))) (([(<any_Cx_zh_zh_p_ax_m> zh)] | [(zh <any_Cx_zh_zh_p_ax_m>)]) (p | ((<any_Cx_zh_zh_p_ax_m> zh) | (zh <any_Cx_zh_zh_p_ax_m>)))) (([(<any_Cx_zh_zh_ax_r_p> zh)] | [(zh <any_Cx_zh_zh_ax_r_p>)]) (ax | ((<any_Cx_zh_zh_ax_r_p> zh) | (zh <any_Cx_zh_zh_ax_r_p>)))) (([(<any_Cx_y_zh_r_ax_ax> y)] | [(y <any_Cx_y_zh_r_ax_ax>)]) (r | ((<any_Cx_y_zh_r_ax_ax> y) | (y <any_Cx_y_zh_r_ax_ax>)))) (([(<any_Cx_y_y_ax_r> y)] | [(y <any_Cx_y_y_ax_r>)]) (ax | ((<any_Cx_y_y_ax_z_r> y) | (y <any_Cx_y_y_ax_z_r>)))) (([(<any_Cx_y_y_z_ax> y)] | [(y <any_Cx_y_y_z_ax>)]) (z | ((<any_Cx_y_y_z_ax> y) | (y <any_Cx_y_y_z_ax>)))) (([(<any_vowel_noSlide> s)] | [(s <any_vowel_noSlide>)]) ([(<any_Cx_y_z_s> s)] | [(s <any_Cx_y_z_s>)]) sil))
Running scan for frate = 72
Considering guard ch with value 1.4 for eh ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard zh with value 4.8 for m ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 4.8 for p ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for ax ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard y with value 2 for r ...
Considering guard z with value 2 for r ...
candidateGuards = map[y:true z:true]
Picking guard, y

Considering guard y with value 5 for ax ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard ch with value 5 for z ...
Considering guard y with value 5 for z ...
candidateGuards = map[ch:true y:true]
Picking guard, ch

frate, target rule = 72 public <emperors> = (((sil [((r <any_Vx_eh_r_p_noSlide>) | (<any_Vx_eh_r_p_noSlide> r))] [((r <any_Cx_eh_r_p>) | (<any_Cx_eh_r_p> r))]) | (sil p (sil [((r <any_Vx_eh_r_p_noSlide>) | (<any_Vx_eh_r_p_noSlide> r))] [((r <any_Cx_eh_r_p>) | (<any_Cx_eh_r_p> r))]))) ((([(<any_Vx_ch_p_r_eh_noSlide> ch)] | [(ch <any_Vx_ch_p_r_eh_noSlide>)]) ([(<any_Cx_ch_p_r_m> ch)] | [(ch <any_Cx_ch_p_r_m>)])) (eh | ((<any_Vx_ch_p_r_eh_noSlide> ch) | (ch <any_Vx_ch_p_r_eh_noSlide>)))) (([(<any_Cx_zh_ch_m_p> zh)] | [(zh <any_Cx_zh_ch_m_p>)]) (m | ((<any_Cx_zh_ch_m_p> zh) | (zh <any_Cx_zh_ch_m_p>)))) (([(<any_Cx_zh_zh_p_ax_m> zh)] | [(zh <any_Cx_zh_zh_p_ax_m>)]) (p | ((<any_Cx_zh_zh_p_ax_m> zh) | (zh <any_Cx_zh_zh_p_ax_m>)))) (([(<any_Cx_zh_zh_ax_r_p> zh)] | [(zh <any_Cx_zh_zh_ax_r_p>)]) (ax | ((<any_Cx_zh_zh_ax_r_p> zh) | (zh <any_Cx_zh_zh_ax_r_p>)))) (([(<any_Cx_y_zh_r_ax_ax> y)] | [(y <any_Cx_y_zh_r_ax_ax>)]) (r | ((<any_Cx_y_zh_r_ax_ax> y) | (y <any_Cx_y_zh_r_ax_ax>)))) (([(<any_Cx_y_y_ax_r> y)] | [(y <any_Cx_y_y_ax_r>)]) (ax | ((<any_Cx_y_y_ax_z_r> y) | (y <any_Cx_y_y_ax_z_r>)))) (([(<any_Cx_ch_y_z_ax> ch)] | [(ch <any_Cx_ch_y_z_ax>)]) (z | ((<any_Cx_ch_y_z_ax> ch) | (ch <any_Cx_ch_y_z_ax>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_ch_z_v> v)] | [(v <any_Cx_ch_z_v>)]) sil))

results =
{72 [{sil 0 12} {eh 13 24} {m 25 32} {p 33 40} {ax 41 45} {r 46 58} {ax 59 62} {z 63 79} {sil 80 97}]}
{80 [{sil 0 14} {eh 15 27} {m 28 35} {p 36 45} {ax 46 49} {r 50 66} {ax 67 70} {z 71 88} {sil 89 105}]}
{91 [{sil 0 16} {eh 17 32} {m 33 41} {p 42 51} {ax 52 56} {r 57 73} {ax 74 80} {z 81 104} {sil 105 143}]}
{105 [{sil 0 19} {eh 20 38} {m 39 48} {p 49 60} {ax 61 65} {r 66 85} {ax 86 94} {z 95 118} {sil 119 166}]}
{125 [{sil 3 25} {eh 26 45} {m 46 62} {p 63 72} {ax 73 78} {r 79 105} {ax 106 113} {z 114 141} {sil 142 203}]}

normalised results =
{72 [{sil 0 12} {eh 18 33} {m 35 44} {p 46 56} {ax 57 63} {r 64 81} {ax 82 86} {z 88 110} {sil 111 135}]}
{80 [{sil 0 14} {eh 19 34} {m 35 44} {p 45 56} {ax 58 61} {r 63 83} {ax 84 88} {z 89 110} {sil 111 131}]}
{91 [{sil 0 16} {eh 19 35} {m 36 45} {p 46 56} {ax 57 62} {r 63 80} {ax 81 88} {z 89 114} {sil 115 157}]}
{105 [{sil 0 19} {eh 19 36} {m 37 46} {p 47 57} {ax 58 62} {r 63 81} {ax 82 90} {z 90 112} {sil 113 158}]}
{125 [{sil 3 25} {eh 21 36} {m 37 50} {p 50 58} {ax 58 62} {r 63 84} {ax 85 90} {z 91 113} {sil 114 162}]}

ruleAligned = [{{eh 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{m 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{p 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{ax 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{r 0} [{0 5} {1 5} {2 5} {3 5} {4 5}]} {{ax 0} [{0 6} {1 6} {2 6} {3 6} {4 6}]} {{z 0} [{0 7} {1 7} {2 7} {3 7} {4 7}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {eh 18 33} {m 35 44} {p 46 56} {ax 57 63} {r 64 81} {ax 82 86} {z 88 110} {sil 111 111}]}
{80 [{sil 0 0} {eh 19 34} {m 35 44} {p 45 56} {ax 58 61} {r 63 83} {ax 84 88} {z 89 110} {sil 111 111}]}
{91 [{sil 0 0} {eh 19 35} {m 36 45} {p 46 56} {ax 57 62} {r 63 80} {ax 81 88} {z 89 114} {sil 115 115}]}
{105 [{sil 0 0} {eh 19 36} {m 37 46} {p 47 57} {ax 58 62} {r 63 81} {ax 82 90} {z 90 112} {sil 113 113}]}
{125 [{sil 3 3} {eh 21 36} {m 37 50} {p 50 58} {ax 58 62} {r 63 84} {ax 85 90} {z 91 113} {sil 114 114}]}

timeAligned = [{{eh 19 35} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{m 36 45} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{p 46 56} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{ax 58 62} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{r 63 81} [{1 5} {2 5} {3 5} {4 5} {0 5}]} {{ax 82 88} [{0 6} {2 6} {3 6} {1 6} {4 6}]} {{z 89 112} [{0 7} {1 7} {2 7} {3 7} {4 7}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 33
i, iTime, newITime, timeStartFrom = 2 1 2 44
i, iTime, newITime, timeStartFrom = 3 2 3 56
i, iTime, newITime, timeStartFrom = 4 3 4 61
i, iTime, newITime, timeStartFrom = 5 4 5 80
i, iTime, newITime, timeStartFrom = 6 5 6 86
combinedVerdict    = [{eh 0} {m 0} {p 0} {ax 0} {r 0} {ax 0} {z 0}]
ruleAlignedVerdict = [{eh 0} {m 0} {p 0} {ax 0} {r 0} {ax 0} {z 0}]

score->
+1 for eh
+1 for m
+1 for p
+1 for ax
+1 for r
+1 for ax
+1 for z
score<-: 12
testPronounce eh good m good p good ax good r good ax good z good
publish->
phonsToAlphas = [{[eh] e} {[m] m} {[p] p} {[ax] e} {[r] r} {[ax] or} {[z] s}]
getVerdict<-:new {e [eh] 0}
getVerdict<-:new {m [m] 0}
getVerdict<-:new {p [p] 0}
getVerdict<-:new {e [ax] 0}
getVerdict<-:new {r [r] 0}
getVerdict<-:new {or [ax] 0}
getVerdict<-:new {s [z] 0}
lettersVerdicts = [{e [eh] 0} {m [m] 0} {p [p] 0} {e [ax] 0} {r [r] 0} {or [ax] 0} {s [z] 0}]
publish<-
Total: 229.025526ms
{
  "results": [
    {
      "letters": "e",
      "phonemes": "ɛ",
      "verdict": "good"
    },
    {
      "letters": "m",
      "phonemes": "m",
      "verdict": "good"
    },
    {
      "letters": "p",
      "phonemes": "p",
      "verdict": "good"
    },
    {
      "letters": "e",
      "phonemes": "ə",
      "verdict": "good"
    },
    {
      "letters": "r",
      "phonemes": "ɹ",
      "verdict": "good"
    },
    {
      "letters": "or",
      "phonemes": "ə",
      "verdict": "good"
    },
    {
      "letters": "s",
      "phonemes": "z",
      "verdict": "good"
    }
  ],
  "err": null
}
