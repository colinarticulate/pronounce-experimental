
 length of audio =  1.902625



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.5800000000000001 0.74 1.32

 start3, duration3, end3 =  0.8 0.32 1.12

 Initial start, duration, end =  0.4800000000000001 0.84 1.32

 Cut at: start, duration =  0.4800000000000001 1.29     guard_end =  1.77 

Running scan for frate = 125
Considering guard ng with value 2 for s ...
Considering guard w with value 2 for s ...
candidateGuards = map[ng:true w:true]
Picking guard, ng

Considering guard w with value 4 for eh ...
Considering guard ng with value 4 for eh ...
candidateGuards = map[ng:true w:true]
Picking guard, w

Considering guard oy with value 1 for t ...
Considering guard zh with value 1 for t ...
candidateGuards = map[oy:true zh:true]
Picking guard, oy


frate, target rule = 125 public <set> = (((sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil p (sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_ng_p_t_s> ng)] | [(ng <any_Cx_ng_p_t_s>)]) (s | z | ((<any_Cx_ng_p_t_s> ng) | (ng <any_Cx_ng_p_t_s>)))) ((([(<any_Vx_w_ng_eh_noSlide> w)] | [(w <any_Vx_w_ng_eh_noSlide>)]) ([(<any_Cx_w_ng_t_s> w)] | [(w <any_Cx_w_ng_t_s>)])) (eh | ((<any_Vx_w_ng_eh_noSlide> w) | (w <any_Vx_w_ng_eh_noSlide>)))) (([(<any_Cx_oy_w_t> oy)] | [(oy <any_Cx_oy_w_t>)]) (t | ((<any_Cx_oy_w_t> oy) | (oy <any_Cx_oy_w_t>)))) (([(<any_vowel_noSlide> ch)] | [(ch <any_vowel_noSlide>)]) ([(<any_Cx_oy_t_ch> ch)] | [(ch <any_Cx_oy_t_ch>)]) sil))
Running scan for frate = 105
Considering guard ng with value 2 for s ...
Considering guard w with value 2 for s ...
candidateGuards = map[ng:true w:true]
Picking guard, ng

Considering guard w with value 4 for eh ...
Considering guard ng with value 4 for eh ...
candidateGuards = map[ng:true w:true]
Picking guard, ng

Considering guard zh with value 1 for t ...
Considering guard oy with value 1 for t ...
candidateGuards = map[oy:true zh:true]
Picking guard, zh


frate, target rule = 105 public <set> = (((sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ng_p_z_s> ng)] | [(ng <any_Cx_ng_p_z_s>)]) (s | z | ((<any_Cx_ng_p_z_s> ng) | (ng <any_Cx_ng_p_z_s>)))) ((([(<any_Vx_ng_ng_eh_noSlide> ng)] | [(ng <any_Vx_ng_ng_eh_noSlide>)]) ([(<any_Cx_ng_ng_t_s> ng)] | [(ng <any_Cx_ng_ng_t_s>)])) (eh | ((<any_Vx_ng_ng_eh_noSlide> ng) | (ng <any_Vx_ng_ng_eh_noSlide>)))) (([(<any_Cx_zh_ng_t> zh)] | [(zh <any_Cx_zh_ng_t>)]) (t | ((<any_Cx_zh_ng_t> zh) | (zh <any_Cx_zh_ng_t>)))) (([(<any_vowel_noSlide> k)] | [(k <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_k> k)] | [(k <any_Cx_zh_t_k>)]) sil))
Running scan for frate = 91
Considering guard ng with value 2 for s ...
Considering guard w with value 2 for s ...
candidateGuards = map[ng:true w:true]
Picking guard, ng

Considering guard w with value 4 for eh ...
Considering guard ng with value 4 for eh ...
candidateGuards = map[ng:true w:true]
Picking guard, w

Considering guard zh with value 1 for t ...
Considering guard oy with value 1 for t ...
candidateGuards = map[oy:true zh:true]
Picking guard, zh


frate, target rule = 91 public <set> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_ng_p_ch_s> ng)] | [(ng <any_Cx_ng_p_ch_s>)]) (s | z | ((<any_Cx_ng_p_ch_s> ng) | (ng <any_Cx_ng_p_ch_s>)))) ((([(<any_Vx_w_ng_eh_noSlide> w)] | [(w <any_Vx_w_ng_eh_noSlide>)]) ([(<any_Cx_w_ng_t_s> w)] | [(w <any_Cx_w_ng_t_s>)])) (eh | ((<any_Vx_w_ng_eh_noSlide> w) | (w <any_Vx_w_ng_eh_noSlide>)))) (([(<any_Cx_zh_w_t> zh)] | [(zh <any_Cx_zh_w_t>)]) (t | ((<any_Cx_zh_w_t> zh) | (zh <any_Cx_zh_w_t>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_thr> thr)] | [(thr <any_Cx_zh_t_thr>)]) sil))
Running scan for frate = 80
Considering guard ng with value 2 for s ...
Considering guard w with value 2 for s ...
candidateGuards = map[ng:true w:true]
Picking guard, ng

Considering guard ng with value 4 for eh ...
Considering guard w with value 4 for eh ...
candidateGuards = map[ng:true w:true]
Picking guard, ng

Considering guard zh with value 1 for t ...
Considering guard oy with value 1 for t ...
candidateGuards = map[oy:true zh:true]
Picking guard, zh


frate, target rule = 80 public <set> = (((sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil p (sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_ng_p_sh_s> ng)] | [(ng <any_Cx_ng_p_sh_s>)]) (s | z | ((<any_Cx_ng_p_sh_s> ng) | (ng <any_Cx_ng_p_sh_s>)))) ((([(<any_Vx_ng_ng_eh_noSlide> ng)] | [(ng <any_Vx_ng_ng_eh_noSlide>)]) ([(<any_Cx_ng_ng_t_s> ng)] | [(ng <any_Cx_ng_ng_t_s>)])) (eh | ((<any_Vx_ng_ng_eh_noSlide> ng) | (ng <any_Vx_ng_ng_eh_noSlide>)))) (([(<any_Cx_zh_ng_t> zh)] | [(zh <any_Cx_zh_ng_t>)]) (t | ((<any_Cx_zh_ng_t> zh) | (zh <any_Cx_zh_ng_t>)))) (([(<any_vowel_noSlide> ch)] | [(ch <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_ch> ch)] | [(ch <any_Cx_zh_t_ch>)]) sil))
Running scan for frate = 72
Considering guard ng with value 2 for s ...
Considering guard w with value 2 for s ...
candidateGuards = map[ng:true w:true]
Picking guard, ng

Considering guard w with value 4 for eh ...
Considering guard ng with value 4 for eh ...
candidateGuards = map[ng:true w:true]
Picking guard, w

Considering guard zh with value 1 for t ...
Considering guard oy with value 1 for t ...
candidateGuards = map[oy:true zh:true]
Picking guard, zh


frate, target rule = 72 public <set> = (((sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]) | (sil p (sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]))) (([(<any_Cx_ng_p_th_s> ng)] | [(ng <any_Cx_ng_p_th_s>)]) (s | z | ((<any_Cx_ng_p_th_s> ng) | (ng <any_Cx_ng_p_th_s>)))) ((([(<any_Vx_w_ng_eh_noSlide> w)] | [(w <any_Vx_w_ng_eh_noSlide>)]) ([(<any_Cx_w_ng_t_s> w)] | [(w <any_Cx_w_ng_t_s>)])) (eh | ((<any_Vx_w_ng_eh_noSlide> w) | (w <any_Vx_w_ng_eh_noSlide>)))) (([(<any_Cx_zh_w_t> zh)] | [(zh <any_Cx_zh_w_t>)]) (t | ((<any_Cx_zh_w_t> zh) | (zh <any_Cx_zh_w_t>)))) (([(<any_vowel_noSlide> ch)] | [(ch <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_ch> ch)] | [(ch <any_Cx_zh_t_ch>)]) sil))

results =
{72 [{sil 0 7} {s 8 26} {eh 27 44} {t 45 58} {sil 59 72}]}
{80 [{sil 0 8} {s 9 30} {eh 31 49} {t 50 64} {sil 65 78}]}
{91 [{sil 0 10} {s 11 34} {eh 35 57} {t 58 75} {sil 76 116}]}
{105 [{sil 0 12} {s 13 40} {eh 41 66} {t 67 85} {sil 86 130}]}
{125 [{sil 3 16} {s 17 48} {eh 49 80} {t 81 100} {sil 101 161}]}

normalised results =
{72 [{sil 0 7} {s 11 36} {eh 38 61} {t 63 81} {sil 82 100}]}
{80 [{sil 0 8} {s 11 38} {eh 39 61} {t 63 80} {sil 81 98}]}
{91 [{sil 0 10} {s 12 37} {eh 38 63} {t 64 82} {sil 84 127}]}
{105 [{sil 0 12} {s 12 38} {eh 39 63} {t 64 81} {sil 82 124}]}
{125 [{sil 3 16} {s 14 38} {eh 39 64} {t 65 80} {sil 81 129}]}

ruleAligned = [{{s 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{eh 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{t 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {s 11 36} {eh 38 61} {t 63 81} {sil 82 82}]}
{80 [{sil 0 0} {s 11 38} {eh 39 61} {t 63 80} {sil 81 81}]}
{91 [{sil 0 0} {s 12 37} {eh 38 63} {t 64 82} {sil 84 84}]}
{105 [{sil 0 0} {s 12 38} {eh 39 63} {t 64 81} {sil 82 82}]}
{125 [{sil 3 3} {s 14 38} {eh 39 64} {t 65 80} {sil 81 81}]}

timeAligned = [{{s 12 38} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{eh 39 63} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{t 64 81} [{0 3} {1 3} {2 3} {3 3} {4 3}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 36
i, iTime, newITime, timeStartFrom = 2 1 2 61
combinedVerdict    = [{s 0} {eh 0} {t 0}]
ruleAlignedVerdict = [{s 0} {eh 0} {t 0}]

score->
+1 for s
+1 for eh
+1 for t
score<-: 8
testPronounce s good eh good t good
publish->
phonsToAlphas = [{[s] s} {[eh] e} {[t] t}]
getVerdict<-:new {s [s] 0}
getVerdict<-:new {e [eh] 0}
getVerdict<-:new {t [t] 0}
lettersVerdicts = [{s [s] 0} {e [eh] 0} {t [t] 0}]
publish<-
{
  "results": [
    {
      "letters": "s",
      "phonemes": "s",
      "verdict": "good"
    },
    {
      "letters": "e",
      "phonemes": "É›",
      "verdict": "good"
    },
    {
      "letters": "t",
      "phonemes": "t",
      "verdict": "good"
    }
  ],
  "err": null
}
