
 length of audio =  2.845312



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  1.1199999999999999 0.84 1.96

 start3, duration3, end3 =  1.1199999999999999 0.78 1.9

 Initial start, duration, end =  1.0199999999999998 0.9400000000000002 1.96

 Cut at: start, duration =  1.0199999999999998 1.3900000000000001     guard_end =  2.41 

Running scan for frate = 125
Considering guard z with value 1 for r ...
Considering guard y with value 1 for r ...
candidateGuards = map[y:true z:true]
Picking guard, z

Considering guard y with value 2 for ah ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3.2 for sh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 1.6 for axr ...
candidateGuards = map[y:true]
Picking guard, y


frate, target rule = 125 public <russia> = (((sil [((n <any_Cx_r_n_p>) | (<any_Cx_r_n_p> n))] [((n <any_vowel_noSlide>) | (<any_vowel_noSlide> n))]) | (sil p (sil [((n <any_Cx_r_n_p>) | (<any_Cx_r_n_p> n))] [((n <any_vowel_noSlide>) | (<any_vowel_noSlide> n))]))) (([(<any_Cx_z_p_n_r> z)] | [(z <any_Cx_z_p_n_r>)]) (r | l | w | ((<any_Cx_z_p_n_r> z) | (z <any_Cx_z_p_n_r>)))) ((([(<any_Vx_y_z_ah_noSlide> y)] | [(y <any_Vx_y_z_ah_noSlide>)]) ([(<any_Cx_y_z_sh_r> y)] | [(y <any_Cx_y_z_sh_r>)])) (ah | ((<any_Vx_y_z_ah_noSlide> y) | (y <any_Vx_y_z_ah_noSlide>)))) (([(<any_Cx_y_y_sh> y)] | [(y <any_Cx_y_y_sh>)]) (sh | ((<any_Cx_y_y_sh_axr> y) | (y <any_Cx_y_y_sh_axr>)))) (([(<any_Cx_y_y_axr_sh> y)] | [(y <any_Cx_y_y_axr_sh>)]) (axr | ((<any_Cx_y_y_axr_sh> y) | (y <any_Cx_y_y_axr_sh>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_y_axr_n> n)] | [(n <any_Cx_y_axr_n>)]) sil))
Running scan for frate = 105
Considering guard y with value 1 for r ...
Considering guard z with value 1 for r ...
candidateGuards = map[y:true z:true]
Picking guard, y

Considering guard y with value 2 for ah ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3.2 for sh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 1.6 for axr ...
candidateGuards = map[y:true]
Picking guard, y


frate, target rule = 105 public <russia> = (((sil [((m <any_Cx_r_m_p>) | (<any_Cx_r_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]) | (sil p (sil [((m <any_Cx_r_m_p>) | (<any_Cx_r_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]))) (([(<any_Cx_y_p_m_r> y)] | [(y <any_Cx_y_p_m_r>)]) (r | l | w | ((<any_Cx_y_p_m_r> y) | (y <any_Cx_y_p_m_r>)))) ((([(<any_Vx_y_y_ah_noSlide> y)] | [(y <any_Vx_y_y_ah_noSlide>)]) ([(<any_Cx_y_y_sh_r> y)] | [(y <any_Cx_y_y_sh_r>)])) (ah | ((<any_Vx_y_y_ah_noSlide> y) | (y <any_Vx_y_y_ah_noSlide>)))) (([(<any_Cx_y_y_sh> y)] | [(y <any_Cx_y_y_sh>)]) (sh | ((<any_Cx_y_y_sh_axr> y) | (y <any_Cx_y_y_sh_axr>)))) (([(<any_Cx_y_y_axr_sh> y)] | [(y <any_Cx_y_y_axr_sh>)]) (axr | ((<any_Cx_y_y_axr_sh> y) | (y <any_Cx_y_y_axr_sh>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_y_axr_n> n)] | [(n <any_Cx_y_axr_n>)]) sil))
Running scan for frate = 91
Considering guard y with value 1 for r ...
Considering guard z with value 1 for r ...
candidateGuards = map[y:true z:true]
Picking guard, y

Considering guard y with value 2 for ah ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3.2 for sh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 1.6 for axr ...
candidateGuards = map[y:true]
Picking guard, y


frate, target rule = 91 public <russia> = (((sil [((m <any_Cx_r_m_p>) | (<any_Cx_r_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]) | (sil p (sil [((m <any_Cx_r_m_p>) | (<any_Cx_r_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]))) (([(<any_Cx_y_p_m_r> y)] | [(y <any_Cx_y_p_m_r>)]) (r | l | w | ((<any_Cx_y_p_m_r> y) | (y <any_Cx_y_p_m_r>)))) ((([(<any_Vx_y_y_ah_noSlide> y)] | [(y <any_Vx_y_y_ah_noSlide>)]) ([(<any_Cx_y_y_sh_r> y)] | [(y <any_Cx_y_y_sh_r>)])) (ah | ((<any_Vx_y_y_ah_noSlide> y) | (y <any_Vx_y_y_ah_noSlide>)))) (([(<any_Cx_y_y_sh> y)] | [(y <any_Cx_y_y_sh>)]) (sh | ((<any_Cx_y_y_sh_axr> y) | (y <any_Cx_y_y_sh_axr>)))) (([(<any_Cx_y_y_axr_sh> y)] | [(y <any_Cx_y_y_axr_sh>)]) (axr | ((<any_Cx_y_y_axr_sh> y) | (y <any_Cx_y_y_axr_sh>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_y_axr_thr> thr)] | [(thr <any_Cx_y_axr_thr>)]) sil))
Running scan for frate = 80
Considering guard z with value 1 for r ...
Considering guard y with value 1 for r ...
candidateGuards = map[y:true z:true]
Picking guard, z

Considering guard y with value 2 for ah ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3.2 for sh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 1.6 for axr ...
candidateGuards = map[y:true]
Picking guard, y


frate, target rule = 80 public <russia> = (((sil [((hh <any_Cx_r_hh_p>) | (<any_Cx_r_hh_p> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil p (sil [((hh <any_Cx_r_hh_p>) | (<any_Cx_r_hh_p> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_z_p_hh_r> z)] | [(z <any_Cx_z_p_hh_r>)]) (r | l | w | ((<any_Cx_z_p_hh_r> z) | (z <any_Cx_z_p_hh_r>)))) ((([(<any_Vx_y_z_ah_noSlide> y)] | [(y <any_Vx_y_z_ah_noSlide>)]) ([(<any_Cx_y_z_sh_r> y)] | [(y <any_Cx_y_z_sh_r>)])) (ah | ((<any_Vx_y_z_ah_noSlide> y) | (y <any_Vx_y_z_ah_noSlide>)))) (([(<any_Cx_y_y_sh> y)] | [(y <any_Cx_y_y_sh>)]) (sh | ((<any_Cx_y_y_sh_axr> y) | (y <any_Cx_y_y_sh_axr>)))) (([(<any_Cx_y_y_axr_sh> y)] | [(y <any_Cx_y_y_axr_sh>)]) (axr | ((<any_Cx_y_y_axr_sh> y) | (y <any_Cx_y_y_axr_sh>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_y_axr_hh> hh)] | [(hh <any_Cx_y_axr_hh>)]) sil))
Running scan for frate = 72
Considering guard y with value 1 for r ...
Considering guard z with value 1 for r ...
candidateGuards = map[y:true z:true]
Picking guard, y

Considering guard y with value 2 for ah ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3.2 for sh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 1.6 for axr ...
candidateGuards = map[y:true]
Picking guard, y


frate, target rule = 72 public <russia> = (((sil [((n <any_Cx_r_n_p>) | (<any_Cx_r_n_p> n))] [((n <any_vowel_noSlide>) | (<any_vowel_noSlide> n))]) | (sil p (sil [((n <any_Cx_r_n_p>) | (<any_Cx_r_n_p> n))] [((n <any_vowel_noSlide>) | (<any_vowel_noSlide> n))]))) (([(<any_Cx_y_p_n_r> y)] | [(y <any_Cx_y_p_n_r>)]) (r | l | w | ((<any_Cx_y_p_n_r> y) | (y <any_Cx_y_p_n_r>)))) ((([(<any_Vx_y_y_ah_noSlide> y)] | [(y <any_Vx_y_y_ah_noSlide>)]) ([(<any_Cx_y_y_sh_r> y)] | [(y <any_Cx_y_y_sh_r>)])) (ah | ((<any_Vx_y_y_ah_noSlide> y) | (y <any_Vx_y_y_ah_noSlide>)))) (([(<any_Cx_y_y_sh> y)] | [(y <any_Cx_y_y_sh>)]) (sh | ((<any_Cx_y_y_sh_axr> y) | (y <any_Cx_y_y_sh_axr>)))) (([(<any_Cx_y_y_axr_sh> y)] | [(y <any_Cx_y_y_axr_sh>)]) (axr | ((<any_Cx_y_y_axr_sh> y) | (y <any_Cx_y_y_axr_sh>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_y_axr_p> p)] | [(p <any_Cx_y_axr_p>)]) sil))

results =
{72 [{sil 0 11} {r 12 17} {ah 18 20} {zh 21 31} {y 32 39} {axr 40 48} {b 49 60} {p 61 63} {sil 64 79}]}
{80 [{sil 0 13} {r 14 19} {ah 20 22} {zh 23 34} {y 35 43} {axr 44 53} {sil 54 87}]}
{91 [{sil 0 14} {r 15 23} {ah 24 27} {sh 28 39} {y 40 55} {m 56 69} {sil 70 125}]}
{105 [{sil 0 17} {r 18 27} {ah 28 30} {z 31 45} {y 46 57} {axr 58 69} {n 70 84} {b 85 89} {sil 90 145}]}
{125 [{sil 3 22} {r 23 31} {ah 32 34} {z 35 55} {y 56 66} {axr 67 82} {n 83 101} {b 102 107} {sil 108 169}]}

normalised results =
{72 [{sil 0 11} {r 17 24} {ah 25 25} {zh 29 43} {y 44 54} {axr 56 67} {b 68 83} {p 85 85} {sil 89 110}]}
{80 [{sil 0 13} {r 18 24} {ah 25 25} {zh 29 43} {y 44 54} {axr 55 66} {sil 68 109}]}
{91 [{sil 0 14} {r 16 25} {ah 26 30} {sh 31 43} {y 44 60} {m 62 76} {sil 77 137}]}
{105 [{sil 0 17} {r 17 26} {ah 27 27} {z 30 43} {y 44 54} {axr 55 66} {n 67 80} {b 81 85} {sil 86 138}]}
{125 [{sil 3 22} {r 18 25} {ah 26 26} {z 28 44} {y 45 53} {axr 54 66} {n 66 81} {b 82 86} {sil 86 135}]}

ruleAligned = [{{r 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ah 2} [{2 2}]} {{sh 2} [{2 3}]} {{y 3} [{0 4} {1 4} {3 4} {4 4}]} {{axr 0} [{0 5} {1 5} {3 5} {4 5}]} {{b 3} [{0 6} {3 7} {4 7}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {r 17 24} {ah 25 25} {zh 29 43} {y 44 54} {axr 56 67} {b 68 83} {p 85 85} {sil 89 89}]}
{80 [{sil 0 0} {r 18 24} {ah 25 25} {zh 29 43} {y 44 54} {axr 55 66} {sil 68 68}]}
{91 [{sil 0 0} {r 16 25} {ah 26 30} {sh 31 43} {y 44 60} {m 62 76} {sil 77 77}]}
{105 [{sil 0 0} {r 17 26} {ah 27 27} {z 30 43} {y 44 54} {axr 55 66} {n 67 80} {b 81 85} {sil 86 86}]}
{125 [{sil 3 3} {r 18 25} {ah 26 26} {z 28 44} {y 45 53} {axr 54 66} {n 66 81} {b 82 86} {sil 86 86}]}

timeAligned = [{{r 17 25} [{0 1} {2 1} {3 1} {1 1} {4 1}]} {{y 44 54} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{axr 55 66} [{1 5} {3 5} {4 5} {0 5}]} {{b 82 83} [{0 6} {3 7} {4 7}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 -1 24
i, iTime, newITime, timeStartFrom = 2 0 -1 24
i, iTime, newITime, timeStartFrom = 3 0 1 24
i, iTime, newITime, timeStartFrom = 4 1 2 53
i, iTime, newITime, timeStartFrom = 5 2 3 66
combinedVerdict    = [{r 0} {ah 2} {sh 2} {y 3} {axr 0} {b 3}]
ruleAlignedVerdict = [{r 0} {ah 2} {sh 2} {y 3} {axr 0} {b 3}]

score->
+1 for r
-1 for ah
-1 for sh
-1 for y
+1 for axr
-1 for b
score<-: -2
bestResult = {-2 [{r 0} {ah 2} {sh 2} {y 3} {axr 0} {b 3}] [r ah sh axr]}
testPronounce r good ah missing sh missing y surprise axr good b surprise
publish->
phonsToAlphas = [{[r] r} {[ah] u} {[sh] ssi} {[axr] a}]
getVerdict<-:new {r [r] 0}
getVerdict<-:new {u [ah] 2}
getVerdict<-:new {ssi [sh] 2}
getVerdict<-:new {a [axr] 0}
lettersVerdicts = [{r [r] 0} {u [ah] 2} {ssi [sh] 2} {y [y] 3} {a [axr] 0} {b [b] 3}]
publish<-
{
  "results": [
    {
      "letters": "r",
      "phonemes": "ɹ",
      "verdict": "good"
    },
    {
      "letters": "u",
      "phonemes": "ʌ",
      "verdict": "missing"
    },
    {
      "letters": "ssi",
      "phonemes": "ʃ",
      "verdict": "missing"
    },
    {
      "letters": "y",
      "phonemes": "j",
      "verdict": "surprise"
    },
    {
      "letters": "a",
      "phonemes": "əɹ",
      "verdict": "good"
    },
    {
      "letters": "b",
      "phonemes": "b",
      "verdict": "surprise"
    }
  ],
  "err": null
}
