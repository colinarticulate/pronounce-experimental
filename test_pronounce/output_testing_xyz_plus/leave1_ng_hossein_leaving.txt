
 length of audio =  2.730313



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0 2.8200000000000003 2.8200000000000003

 start3, duration3, end3 =  1.18 1.54 2.7199999999999998

 Initial start, duration, end =  0 2.8200000000000003 2.8200000000000003

 Cut at: start, duration =  0 2.710313     guard_end =  2.710313 

Running scan for frate = 125
Running scan for frate = 125
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 4.2 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 4.2 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 6 for v ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 6 for v ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard zh with value 8 for ih ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for ing ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard jh with value 1 for ng ...
Considering guard z with value 1 for ng ...
Considering guard sh with value 1 for ng ...
Considering guard s with value 1 for ng ...
candidateGuards = map[jh:true s:true sh:true z:true]
Picking guard, jh

frate, target rule = 125 public <leaving> = (((sil [((z <any_Cx_l_z_p>) | (<any_Cx_l_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_l_z_p>) | (<any_Cx_l_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_l> sh)] | [(sh <any_Cx_sh_p_z_l>)]) (l | ((<any_Cx_sh_p_z_l> sh) | (sh <any_Cx_sh_p_z_l>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_v_l> sh)] | [(sh <any_Cx_sh_sh_v_l>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_ch_sh_v> ch)] | [(ch <any_Cx_ch_sh_v>)]) (v | ((<any_Cx_ch_sh_v_ing> ch) | (ch <any_Cx_ch_sh_v_ing>)))) (([(<any_Cx_zh_ch_ing_v> zh)] | [(zh <any_Cx_zh_ch_ing_v>)]) (ing | ((<any_Cx_zh_ch_ing_v> zh) | (zh <any_Cx_zh_ch_ing_v>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_zh_ing_m> m)] | [(m <any_Cx_zh_ing_m>)]) sil))
frate, target rule = 125 public <leaving> = (((sil [((m <any_Cx_l_m_p>) | (<any_Cx_l_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]) | (sil p (sil [((m <any_Cx_l_m_p>) | (<any_Cx_l_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]))) (([(<any_Cx_sh_p_m_l> sh)] | [(sh <any_Cx_sh_p_m_l>)]) (l | ((<any_Cx_sh_p_m_l> sh) | (sh <any_Cx_sh_p_m_l>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_v_l> sh)] | [(sh <any_Cx_sh_sh_v_l>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_ch_sh_v> ch)] | [(ch <any_Cx_ch_sh_v>)]) (v | ((<any_Cx_ch_sh_v> ch) | (ch <any_Cx_ch_sh_v>)))) ((([(<any_Vx_zh_ch_ih_noSlide> zh)] | [(zh <any_Vx_zh_ch_ih_noSlide>)]) ([(<any_Cx_zh_ch_ng_v> zh)] | [(zh <any_Cx_zh_ch_ng_v>)])) (ih | ((<any_Vx_zh_ch_ih_noSlide> zh) | (zh <any_Vx_zh_ch_ih_noSlide>)))) (([(<any_Cx_jh_zh_ng> jh)] | [(jh <any_Cx_jh_zh_ng>)]) (ng | ((<any_Cx_jh_zh_ng> jh) | (jh <any_Cx_jh_zh_ng>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_jh_ng_m> m)] | [(m <any_Cx_jh_ng_m>)]) sil))
Running scan for frate = 105
Running scan for frate = 105
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 4.2 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 4.2 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 6 for v ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 6 for v ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard zh with value 1 for ing ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 8 for ih ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 105 public <leaving> = (((sil [((w <any_Cx_l_w_p>) | (<any_Cx_l_w_p> w))] [((w <any_vowel_noSlide>) | (<any_vowel_noSlide> w))]) | (sil p (sil [((w <any_Cx_l_w_p>) | (<any_Cx_l_w_p> w))] [((w <any_vowel_noSlide>) | (<any_vowel_noSlide> w))]))) (([(<any_Cx_sh_p_w_l> sh)] | [(sh <any_Cx_sh_p_w_l>)]) (l | ((<any_Cx_sh_p_w_l> sh) | (sh <any_Cx_sh_p_w_l>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_v_l> sh)] | [(sh <any_Cx_sh_sh_v_l>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_ch_sh_v> ch)] | [(ch <any_Cx_ch_sh_v>)]) (v | ((<any_Cx_ch_sh_v_ing> ch) | (ch <any_Cx_ch_sh_v_ing>)))) (([(<any_Cx_zh_ch_ing_v> zh)] | [(zh <any_Cx_zh_ch_ing_v>)]) (ing | ((<any_Cx_zh_ch_ing_v> zh) | (zh <any_Cx_zh_ch_ing_v>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_zh_ing_thr> thr)] | [(thr <any_Cx_zh_ing_thr>)]) sil))
Considering guard z with value 1 for ng ...
Considering guard s with value 1 for ng ...
Considering guard jh with value 1 for ng ...
Considering guard sh with value 1 for ng ...
candidateGuards = map[jh:true s:true sh:true z:true]
Picking guard, sh

Running scan for frate = 91
frate, target rule = 105 public <leaving> = (((sil [((v <any_Cx_l_v_p>) | (<any_Cx_l_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]) | (sil p (sil [((v <any_Cx_l_v_p>) | (<any_Cx_l_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]))) (([(<any_Cx_sh_p_v_l> sh)] | [(sh <any_Cx_sh_p_v_l>)]) (l | ((<any_Cx_sh_p_v_l> sh) | (sh <any_Cx_sh_p_v_l>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_v_l> sh)] | [(sh <any_Cx_sh_sh_v_l>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_ch_sh_v> ch)] | [(ch <any_Cx_ch_sh_v>)]) (v | ((<any_Cx_ch_sh_v> ch) | (ch <any_Cx_ch_sh_v>)))) ((([(<any_Vx_zh_ch_ih_noSlide> zh)] | [(zh <any_Vx_zh_ch_ih_noSlide>)]) ([(<any_Cx_zh_ch_ng_v> zh)] | [(zh <any_Cx_zh_ch_ng_v>)])) (ih | ((<any_Vx_zh_ch_ih_noSlide> zh) | (zh <any_Vx_zh_ch_ih_noSlide>)))) (([(<any_Cx_sh_zh_ng> sh)] | [(sh <any_Cx_sh_zh_ng>)]) (ng | ((<any_Cx_sh_zh_ng> sh) | (sh <any_Cx_sh_zh_ng>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_sh_ng_f> f)] | [(f <any_Cx_sh_ng_f>)]) sil))
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 91
Considering guard sh with value 4.2 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 6 for v ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard zh with value 1 for ing ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 4.2 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 6 for v ...
candidateGuards = map[ch:true]
Picking guard, ch

frate, target rule = 91 public <leaving> = (((sil [((r <any_Cx_l_r_p>) | (<any_Cx_l_r_p> r))] [((r <any_vowel_noSlide>) | (<any_vowel_noSlide> r))]) | (sil p (sil [((r <any_Cx_l_r_p>) | (<any_Cx_l_r_p> r))] [((r <any_vowel_noSlide>) | (<any_vowel_noSlide> r))]))) (([(<any_Cx_sh_p_r_l> sh)] | [(sh <any_Cx_sh_p_r_l>)]) (l | ((<any_Cx_sh_p_r_l> sh) | (sh <any_Cx_sh_p_r_l>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_v_l> sh)] | [(sh <any_Cx_sh_sh_v_l>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_ch_sh_v> ch)] | [(ch <any_Cx_ch_sh_v>)]) (v | ((<any_Cx_ch_sh_v_ing> ch) | (ch <any_Cx_ch_sh_v_ing>)))) (([(<any_Cx_zh_ch_ing_v> zh)] | [(zh <any_Cx_zh_ch_ing_v>)]) (ing | ((<any_Cx_zh_ch_ing_v> zh) | (zh <any_Cx_zh_ch_ing_v>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_zh_ing_m> m)] | [(m <any_Cx_zh_ing_m>)]) sil))
Considering guard zh with value 8 for ih ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard z with value 1 for ng ...
Considering guard sh with value 1 for ng ...
Considering guard s with value 1 for ng ...
Considering guard jh with value 1 for ng ...
candidateGuards = map[jh:true s:true sh:true z:true]
Picking guard, z

Running scan for frate = 80
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 91 public <leaving> = (((sil [((z <any_Cx_l_z_p>) | (<any_Cx_l_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_l_z_p>) | (<any_Cx_l_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_l> sh)] | [(sh <any_Cx_sh_p_z_l>)]) (l | ((<any_Cx_sh_p_z_l> sh) | (sh <any_Cx_sh_p_z_l>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_v_l> sh)] | [(sh <any_Cx_sh_sh_v_l>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_ch_sh_v> ch)] | [(ch <any_Cx_ch_sh_v>)]) (v | ((<any_Cx_ch_sh_v> ch) | (ch <any_Cx_ch_sh_v>)))) ((([(<any_Vx_zh_ch_ih_noSlide> zh)] | [(zh <any_Vx_zh_ch_ih_noSlide>)]) ([(<any_Cx_zh_ch_ng_v> zh)] | [(zh <any_Cx_zh_ch_ng_v>)])) (ih | ((<any_Vx_zh_ch_ih_noSlide> zh) | (zh <any_Vx_zh_ch_ih_noSlide>)))) (([(<any_Cx_z_zh_ng> z)] | [(z <any_Cx_z_zh_ng>)]) (ng | ((<any_Cx_z_zh_ng> z) | (z <any_Cx_z_zh_ng>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_z_ng_thr> thr)] | [(thr <any_Cx_z_ng_thr>)]) sil))
Considering guard sh with value 4.2 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 6 for v ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard zh with value 1 for ing ...
candidateGuards = map[zh:true]
Picking guard, zh

Running scan for frate = 80
frate, target rule = 80 public <leaving> = (((sil [((r <any_Cx_l_r_p>) | (<any_Cx_l_r_p> r))] [((r <any_vowel_noSlide>) | (<any_vowel_noSlide> r))]) | (sil p (sil [((r <any_Cx_l_r_p>) | (<any_Cx_l_r_p> r))] [((r <any_vowel_noSlide>) | (<any_vowel_noSlide> r))]))) (([(<any_Cx_sh_p_r_l> sh)] | [(sh <any_Cx_sh_p_r_l>)]) (l | ((<any_Cx_sh_p_r_l> sh) | (sh <any_Cx_sh_p_r_l>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_v_l> sh)] | [(sh <any_Cx_sh_sh_v_l>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_ch_sh_v> ch)] | [(ch <any_Cx_ch_sh_v>)]) (v | ((<any_Cx_ch_sh_v_ing> ch) | (ch <any_Cx_ch_sh_v_ing>)))) (([(<any_Cx_zh_ch_ing_v> zh)] | [(zh <any_Cx_zh_ch_ing_v>)]) (ing | ((<any_Cx_zh_ch_ing_v> zh) | (zh <any_Cx_zh_ch_ing_v>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_zh_ing_m> m)] | [(m <any_Cx_zh_ing_m>)]) sil))
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 4.2 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 72
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 6 for v ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard sh with value 4.2 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 6 for v ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard zh with value 8 for ih ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for ing ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 1 for ng ...
Considering guard z with value 1 for ng ...
Considering guard s with value 1 for ng ...
Considering guard jh with value 1 for ng ...
candidateGuards = map[jh:true s:true sh:true z:true]
Picking guard, sh

frate, target rule = 72 public <leaving> = (((sil [((w <any_Cx_l_w_p>) | (<any_Cx_l_w_p> w))] [((w <any_vowel_noSlide>) | (<any_vowel_noSlide> w))]) | (sil p (sil [((w <any_Cx_l_w_p>) | (<any_Cx_l_w_p> w))] [((w <any_vowel_noSlide>) | (<any_vowel_noSlide> w))]))) (([(<any_Cx_sh_p_w_l> sh)] | [(sh <any_Cx_sh_p_w_l>)]) (l | ((<any_Cx_sh_p_w_l> sh) | (sh <any_Cx_sh_p_w_l>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_v_l> sh)] | [(sh <any_Cx_sh_sh_v_l>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_ch_sh_v> ch)] | [(ch <any_Cx_ch_sh_v>)]) (v | ((<any_Cx_ch_sh_v_ing> ch) | (ch <any_Cx_ch_sh_v_ing>)))) (([(<any_Cx_zh_ch_ing_v> zh)] | [(zh <any_Cx_zh_ch_ing_v>)]) (ing | ((<any_Cx_zh_ch_ing_v> zh) | (zh <any_Cx_zh_ch_ing_v>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_zh_ing_m> m)] | [(m <any_Cx_zh_ing_m>)]) sil))
frate, target rule = 80 public <leaving> = (((sil [((m <any_Cx_l_m_p>) | (<any_Cx_l_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]) | (sil p (sil [((m <any_Cx_l_m_p>) | (<any_Cx_l_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]))) (([(<any_Cx_sh_p_m_l> sh)] | [(sh <any_Cx_sh_p_m_l>)]) (l | ((<any_Cx_sh_p_m_l> sh) | (sh <any_Cx_sh_p_m_l>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_v_l> sh)] | [(sh <any_Cx_sh_sh_v_l>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_ch_sh_v> ch)] | [(ch <any_Cx_ch_sh_v>)]) (v | ((<any_Cx_ch_sh_v> ch) | (ch <any_Cx_ch_sh_v>)))) ((([(<any_Vx_zh_ch_ih_noSlide> zh)] | [(zh <any_Vx_zh_ch_ih_noSlide>)]) ([(<any_Cx_zh_ch_ng_v> zh)] | [(zh <any_Cx_zh_ch_ng_v>)])) (ih | ((<any_Vx_zh_ch_ih_noSlide> zh) | (zh <any_Vx_zh_ch_ih_noSlide>)))) (([(<any_Cx_sh_zh_ng> sh)] | [(sh <any_Cx_sh_zh_ng>)]) (ng | ((<any_Cx_sh_zh_ng> sh) | (sh <any_Cx_sh_zh_ng>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_sh_ng_ng> ng)] | [(ng <any_Cx_sh_ng_ng>)]) sil))
Running scan for frate = 72
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 4.2 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 6 for v ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard zh with value 8 for ih ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 1 for ng ...
Considering guard z with value 1 for ng ...
Considering guard s with value 1 for ng ...
Considering guard jh with value 1 for ng ...
candidateGuards = map[jh:true s:true sh:true z:true]
Picking guard, sh

frate, target rule = 72 public <leaving> = (((sil [((w <any_Cx_l_w_p>) | (<any_Cx_l_w_p> w))] [((w <any_vowel_noSlide>) | (<any_vowel_noSlide> w))]) | (sil p (sil [((w <any_Cx_l_w_p>) | (<any_Cx_l_w_p> w))] [((w <any_vowel_noSlide>) | (<any_vowel_noSlide> w))]))) (([(<any_Cx_sh_p_w_l> sh)] | [(sh <any_Cx_sh_p_w_l>)]) (l | ((<any_Cx_sh_p_w_l> sh) | (sh <any_Cx_sh_p_w_l>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_v_l> sh)] | [(sh <any_Cx_sh_sh_v_l>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_ch_sh_v> ch)] | [(ch <any_Cx_ch_sh_v>)]) (v | ((<any_Cx_ch_sh_v> ch) | (ch <any_Cx_ch_sh_v>)))) ((([(<any_Vx_zh_ch_ih_noSlide> zh)] | [(zh <any_Vx_zh_ch_ih_noSlide>)]) ([(<any_Cx_zh_ch_ng_v> zh)] | [(zh <any_Cx_zh_ch_ng_v>)])) (ih | ((<any_Vx_zh_ch_ih_noSlide> zh) | (zh <any_Vx_zh_ch_ih_noSlide>)))) (([(<any_Cx_sh_zh_ng> sh)] | [(sh <any_Cx_sh_zh_ng>)]) (ng | ((<any_Cx_sh_zh_ng> sh) | (sh <any_Cx_sh_zh_ng>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_sh_ng_thr> thr)] | [(thr <any_Cx_sh_ng_thr>)]) sil))

results =
{72 [{sil 0 63} {l 64 71} {iy 72 88} {v 89 98} {ih 99 101} {ng 102 104} {sil 105 107}]}
{80 [{sil 0 70} {l 71 79} {iy 80 98} {v 99 108} {ih 109 111} {ng 112 114} {sil 115 117}]}
{91 [{sil 0 78} {l 79 89} {iy 90 114} {v 115 124} {ih 125 127} {ng 128 130} {sil 131 241}]}
{105 [{sil 0 92} {l 93 103} {iy 104 134} {v 135 145} {ih 146 148} {ng 149 151} {sil 152 284}]}
{125 [{sil 3 110} {l 111 123} {iy 124 161} {v 162 173} {ih 174 176} {ng 177 179} {sil 180 338}]}

normalised results =
{72 [{sil 0 63} {l 89 99} {iy 100 122} {v 124 136} {ih 138 138} {ng 142 142} {sil 146 146}]}
{80 [{sil 0 70} {l 89 99} {iy 100 123} {v 124 135} {ih 136 136} {ng 140 140} {sil 144 144}]}
{91 [{sil 0 78} {l 87 98} {iy 99 125} {v 126 136} {ih 137 137} {ng 141 141} {sil 144 265}]}
{105 [{sil 0 92} {l 89 98} {iy 99 128} {v 129 138} {ih 139 139} {ng 142 142} {sil 145 270}]}
{125 [{sil 3 110} {l 89 98} {iy 99 129} {v 130 138} {ih 139 139} {ng 142 142} {sil 144 270}]}

ruleAligned = [{{l 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{iy 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{v 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{ih 2} []} {{ng 2} []}]

results (after rule-alignment) =
{72 [{sil 0 0} {l 89 99} {iy 100 122} {v 124 136} {ih 138 138} {ng 142 142} {sil 146 146}]}
{80 [{sil 0 0} {l 89 99} {iy 100 123} {v 124 135} {ih 136 136} {ng 140 140} {sil 144 144}]}
{91 [{sil 0 0} {l 87 98} {iy 99 125} {v 126 136} {ih 137 137} {ng 141 141} {sil 144 144}]}
{105 [{sil 0 0} {l 89 98} {iy 99 128} {v 129 138} {ih 139 139} {ng 142 142} {sil 145 145}]}
{125 [{sil 3 3} {l 89 98} {iy 99 129} {v 130 138} {ih 139 139} {ng 142 142} {sil 144 144}]}

timeAligned = [{{l 89 98} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{iy 99 125} [{2 2} {3 2} {4 2} {0 2} {1 2}]} {{v 126 136} [{0 3} {1 3} {2 3} {3 3} {4 3}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 98
i, iTime, newITime, timeStartFrom = 2 1 2 122
i, iTime, newITime, timeStartFrom = 3 2 -1 135
i, iTime, newITime, timeStartFrom = 4 2 -1 135
combinedVerdict    = [{l 0} {iy 0} {v 0} {ih 2} {ng 2}]
ruleAlignedVerdict = [{l 0} {iy 0} {v 0} {ih 2} {ng 2}]

score->
+1 for l
+1 for iy
+1 for v
-1 for ih
-1 for ng
score<-: 1

results =
{72 [{sil 0 63} {l 64 71} {iy 72 88} {v 89 99} {ing 100 102} {sil 103 107}]}
{80 [{sil 0 70} {l 71 79} {iy 80 98} {v 99 111} {ing 112 114} {sil 115 117}]}
{91 [{sil 0 78} {l 79 89} {iy 90 114} {v 115 125} {ing 126 128} {sil 129 241}]}
{105 [{sil 0 92} {l 93 103} {iy 104 134} {v 135 146} {ing 147 149} {sil 150 284}]}
{125 [{sil 3 110} {l 111 123} {iy 124 161} {v 162 175} {ing 176 178} {sil 179 338}]}

normalised results =
{72 [{sil 0 63} {l 89 99} {iy 100 122} {v 124 138} {ing 139 139} {sil 143 149}]}
{80 [{sil 0 70} {l 89 99} {iy 100 123} {v 124 139} {ing 140 140} {sil 144 144}]}
{91 [{sil 0 78} {l 87 98} {iy 99 125} {v 126 137} {ing 138 138} {sil 142 265}]}
{105 [{sil 0 92} {l 89 98} {iy 99 128} {v 129 139} {ing 140 140} {sil 143 270}]}
{125 [{sil 3 110} {l 89 98} {iy 99 129} {v 130 140} {ing 141 141} {sil 143 270}]}

ruleAligned = [{{l 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{iy 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{v 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{ing 2} []}]

results (after rule-alignment) =
{72 [{sil 0 0} {l 89 99} {iy 100 122} {v 124 138} {ing 139 139} {sil 143 143}]}
{80 [{sil 0 0} {l 89 99} {iy 100 123} {v 124 139} {ing 140 140} {sil 144 144}]}
{91 [{sil 0 0} {l 87 98} {iy 99 125} {v 126 137} {ing 138 138} {sil 142 142}]}
{105 [{sil 0 0} {l 89 98} {iy 99 128} {v 129 139} {ing 140 140} {sil 143 143}]}
{125 [{sil 3 3} {l 89 98} {iy 99 129} {v 130 140} {ing 141 141} {sil 143 143}]}

timeAligned = [{{l 89 98} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{iy 99 125} [{2 2} {3 2} {4 2} {0 2} {1 2}]} {{v 126 139} [{0 3} {1 3} {2 3} {3 3} {4 3}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 98
i, iTime, newITime, timeStartFrom = 2 1 2 122
i, iTime, newITime, timeStartFrom = 3 2 -1 137
combinedVerdict    = [{l 0} {iy 0} {v 0} {ing 2}]
ruleAlignedVerdict = [{l 0} {iy 0} {v 0} {ing 2}]

score->
+1 for l
+1 for iy
+1 for v
-1 for ing
score<-: 2
bestResult = {2 [{l 0} {iy 0} {v 0} {ing 2}] [l iy v ing]}
testPronounce l good iy good v good ing missing
publish->
phonsToAlphas = [{[l] l} {[iy] ea} {[v] v} {[ing] ing}]
getVerdict<-:new {l [l] 0}
getVerdict<-:new {ea [iy] 0}
getVerdict<-:new {v [v] 0}
getVerdict<-:new {ing [ing] 2}
lettersVerdicts = [{l [l] 0} {ea [iy] 0} {v [v] 0} {ing [ing] 2}]
publish<-
Total: 341.067163ms
{
  "results": [
    {
      "letters": "l",
      "phonemes": "l",
      "verdict": "good"
    },
    {
      "letters": "ea",
      "phonemes": "iː",
      "verdict": "good"
    },
    {
      "letters": "v",
      "phonemes": "v",
      "verdict": "good"
    },
    {
      "letters": "ing",
      "phonemes": "ɪŋ",
      "verdict": "missing"
    }
  ],
  "err": null
}
