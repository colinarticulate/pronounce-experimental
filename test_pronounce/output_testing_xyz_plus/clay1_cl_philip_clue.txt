
 length of audio =  2.282313



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.76 0.94 1.7

 start3, duration3, end3 =  0.86 0.76 1.62

 Initial start, duration, end =  0.66 1.04 1.7

 Cut at: start, duration =  0.66 1.49     guard_end =  2.15 

Running scan for frate = 125
Running scan for frate = 125
Considering guard n with value 3 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard n with value 6 for l ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard z with value 1 for kl ...
Considering guard zh with value 1 for kl ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard sh with value 1 for uw ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 1 for uw ...
Considering guard z with value 1 for uw ...
candidateGuards = map[z:true zh:true]
Picking guard, z

frate, target rule = 125 public <clue> = (((sil [((p <any_Cx_k_p_b>) | (<any_Cx_k_p_b> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]) | (sil b (sil [((p <any_Cx_k_p_b>) | (<any_Cx_k_p_b> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]))) (([(<any_Cx_n_b_p_k_l> n)] | [(n <any_Cx_n_b_p_k_l>)]) (k | d | ((<any_Cx_n_b_p_k_l> n) | (n <any_Cx_n_b_p_k_l>)))) (([(<any_Cx_n_n_l_k> n)] | [(n <any_Cx_n_n_l_k>)]) (l | ((<any_Cx_n_n_l> n) | (n <any_Cx_n_n_l>)))) ((([(<any_Vx_sh_n_uw_noSlide> sh)] | [(sh <any_Vx_sh_n_uw_noSlide>)]) ([(<any_Cx_sh_n_l> sh)] | [(sh <any_Cx_sh_n_l>)])) (uw | ((<any_Vx_sh_n_uw_noSlide> sh) | (sh <any_Vx_sh_n_uw_noSlide>)))) (([(<any_Cx_sh_uw_r> r)] | [(r <any_Cx_sh_uw_r>)]) ([(<any_Vx_sh_uw_r> r)] | [(r <any_Vx_sh_uw_r>)]) sil))
frate, target rule = 125 public <clue> = (((sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_z_p_z_kl> z)] | [(z <any_Cx_z_p_z_kl>)]) (kl | ((<any_Cx_z_p_z_kl> z) | (z <any_Cx_z_p_z_kl>)))) ((([(<any_Vx_z_z_uw_noSlide> z)] | [(z <any_Vx_z_z_uw_noSlide>)]) ([(<any_Cx_z_z_kl> z)] | [(z <any_Cx_z_z_kl>)])) (uw | ((<any_Vx_z_z_uw_noSlide> z) | (z <any_Vx_z_z_uw_noSlide>)))) (([(<any_Cx_z_uw_n> n)] | [(n <any_Cx_z_uw_n>)]) ([(<any_Vx_z_uw_n> n)] | [(n <any_Vx_z_uw_n>)]) sil))
Running scan for frate = 105
Running scan for frate = 105
Considering guard zh with value 1 for kl ...
Considering guard z with value 1 for kl ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard n with value 3 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard zh with value 1 for uw ...
Considering guard z with value 1 for uw ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard n with value 6 for l ...
candidateGuards = map[n:true]
Picking guard, n

frate, target rule = 105 public <clue> = (((sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_z_p_z_kl> z)] | [(z <any_Cx_z_p_z_kl>)]) (kl | ((<any_Cx_z_p_z_kl> z) | (z <any_Cx_z_p_z_kl>)))) ((([(<any_Vx_zh_z_uw_noSlide> zh)] | [(zh <any_Vx_zh_z_uw_noSlide>)]) ([(<any_Cx_zh_z_kl> zh)] | [(zh <any_Cx_zh_z_kl>)])) (uw | ((<any_Vx_zh_z_uw_noSlide> zh) | (zh <any_Vx_zh_z_uw_noSlide>)))) (([(<any_Cx_zh_uw_d> d)] | [(d <any_Cx_zh_uw_d>)]) ([(<any_Vx_zh_uw_d> d)] | [(d <any_Vx_zh_uw_d>)]) sil))
Considering guard sh with value 1 for uw ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 91
frate, target rule = 105 public <clue> = (((sil [((g <any_Cx_k_g_b>) | (<any_Cx_k_g_b> g))] [((g <any_vowel_noSlide>) | (<any_vowel_noSlide> g))]) | (sil b (sil [((g <any_Cx_k_g_b>) | (<any_Cx_k_g_b> g))] [((g <any_vowel_noSlide>) | (<any_vowel_noSlide> g))]))) (([(<any_Cx_n_b_g_k_l> n)] | [(n <any_Cx_n_b_g_k_l>)]) (k | d | ((<any_Cx_n_b_g_k_l> n) | (n <any_Cx_n_b_g_k_l>)))) (([(<any_Cx_n_n_l_k> n)] | [(n <any_Cx_n_n_l_k>)]) (l | ((<any_Cx_n_n_l> n) | (n <any_Cx_n_n_l>)))) ((([(<any_Vx_sh_n_uw_noSlide> sh)] | [(sh <any_Vx_sh_n_uw_noSlide>)]) ([(<any_Cx_sh_n_l> sh)] | [(sh <any_Cx_sh_n_l>)])) (uw | ((<any_Vx_sh_n_uw_noSlide> sh) | (sh <any_Vx_sh_n_uw_noSlide>)))) (([(<any_Cx_sh_uw_hh> hh)] | [(hh <any_Cx_sh_uw_hh>)]) ([(<any_Vx_sh_uw_hh> hh)] | [(hh <any_Vx_sh_uw_hh>)]) sil))
Considering guard zh with value 1 for kl ...
Considering guard z with value 1 for kl ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Running scan for frate = 91
Considering guard zh with value 1 for uw ...
Considering guard z with value 1 for uw ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard n with value 3 for k ...
candidateGuards = map[n:true]
Picking guard, n

frate, target rule = 91 public <clue> = (((sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_kl> zh)] | [(zh <any_Cx_zh_p_z_kl>)]) (kl | ((<any_Cx_zh_p_z_kl> zh) | (zh <any_Cx_zh_p_z_kl>)))) ((([(<any_Vx_zh_zh_uw_noSlide> zh)] | [(zh <any_Vx_zh_zh_uw_noSlide>)]) ([(<any_Cx_zh_zh_kl> zh)] | [(zh <any_Cx_zh_zh_kl>)])) (uw | ((<any_Vx_zh_zh_uw_noSlide> zh) | (zh <any_Vx_zh_zh_uw_noSlide>)))) (([(<any_Cx_zh_uw_r> r)] | [(r <any_Cx_zh_uw_r>)]) ([(<any_Vx_zh_uw_r> r)] | [(r <any_Vx_zh_uw_r>)]) sil))
Considering guard n with value 6 for l ...
candidateGuards = map[n:true]
Picking guard, n

Running scan for frate = 80
Considering guard sh with value 1 for uw ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 1 for kl ...
Considering guard z with value 1 for kl ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

frate, target rule = 91 public <clue> = (((sil [((p <any_Cx_k_p_b>) | (<any_Cx_k_p_b> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]) | (sil b (sil [((p <any_Cx_k_p_b>) | (<any_Cx_k_p_b> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]))) (([(<any_Cx_n_b_p_k_l> n)] | [(n <any_Cx_n_b_p_k_l>)]) (k | d | ((<any_Cx_n_b_p_k_l> n) | (n <any_Cx_n_b_p_k_l>)))) (([(<any_Cx_n_n_l_k> n)] | [(n <any_Cx_n_n_l_k>)]) (l | ((<any_Cx_n_n_l> n) | (n <any_Cx_n_n_l>)))) ((([(<any_Vx_sh_n_uw_noSlide> sh)] | [(sh <any_Vx_sh_n_uw_noSlide>)]) ([(<any_Cx_sh_n_l> sh)] | [(sh <any_Cx_sh_n_l>)])) (uw | ((<any_Vx_sh_n_uw_noSlide> sh) | (sh <any_Vx_sh_n_uw_noSlide>)))) (([(<any_Cx_sh_uw_f> f)] | [(f <any_Cx_sh_uw_f>)]) ([(<any_Vx_sh_uw_f> f)] | [(f <any_Vx_sh_uw_f>)]) sil))
Considering guard zh with value 1 for uw ...
Considering guard z with value 1 for uw ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

frate, target rule = 80 public <clue> = (((sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_kl> zh)] | [(zh <any_Cx_zh_p_z_kl>)]) (kl | ((<any_Cx_zh_p_z_kl> zh) | (zh <any_Cx_zh_p_z_kl>)))) ((([(<any_Vx_zh_zh_uw_noSlide> zh)] | [(zh <any_Vx_zh_zh_uw_noSlide>)]) ([(<any_Cx_zh_zh_kl> zh)] | [(zh <any_Cx_zh_zh_kl>)])) (uw | ((<any_Vx_zh_zh_uw_noSlide> zh) | (zh <any_Vx_zh_zh_uw_noSlide>)))) (([(<any_Cx_zh_uw_w> w)] | [(w <any_Cx_zh_uw_w>)]) ([(<any_Vx_zh_uw_w> w)] | [(w <any_Vx_zh_uw_w>)]) sil))
Running scan for frate = 80
Running scan for frate = 72
Considering guard n with value 3 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard z with value 1 for kl ...
Considering guard zh with value 1 for kl ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard n with value 6 for l ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard z with value 1 for uw ...
Considering guard zh with value 1 for uw ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard sh with value 1 for uw ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 72 public <clue> = (((sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_z_p_z_kl> z)] | [(z <any_Cx_z_p_z_kl>)]) (kl | ((<any_Cx_z_p_z_kl> z) | (z <any_Cx_z_p_z_kl>)))) ((([(<any_Vx_z_z_uw_noSlide> z)] | [(z <any_Vx_z_z_uw_noSlide>)]) ([(<any_Cx_z_z_kl> z)] | [(z <any_Cx_z_z_kl>)])) (uw | ((<any_Vx_z_z_uw_noSlide> z) | (z <any_Vx_z_z_uw_noSlide>)))) (([(<any_Cx_z_uw_n> n)] | [(n <any_Cx_z_uw_n>)]) ([(<any_Vx_z_uw_n> n)] | [(n <any_Vx_z_uw_n>)]) sil))
frate, target rule = 80 public <clue> = (((sil [((g <any_Cx_k_g_b>) | (<any_Cx_k_g_b> g))] [((g <any_vowel_noSlide>) | (<any_vowel_noSlide> g))]) | (sil b (sil [((g <any_Cx_k_g_b>) | (<any_Cx_k_g_b> g))] [((g <any_vowel_noSlide>) | (<any_vowel_noSlide> g))]))) (([(<any_Cx_n_b_g_k_l> n)] | [(n <any_Cx_n_b_g_k_l>)]) (k | d | ((<any_Cx_n_b_g_k_l> n) | (n <any_Cx_n_b_g_k_l>)))) (([(<any_Cx_n_n_l_k> n)] | [(n <any_Cx_n_n_l_k>)]) (l | ((<any_Cx_n_n_l> n) | (n <any_Cx_n_n_l>)))) ((([(<any_Vx_sh_n_uw_noSlide> sh)] | [(sh <any_Vx_sh_n_uw_noSlide>)]) ([(<any_Cx_sh_n_l> sh)] | [(sh <any_Cx_sh_n_l>)])) (uw | ((<any_Vx_sh_n_uw_noSlide> sh) | (sh <any_Vx_sh_n_uw_noSlide>)))) (([(<any_Cx_sh_uw_d> d)] | [(d <any_Cx_sh_uw_d>)]) ([(<any_Vx_sh_uw_d> d)] | [(d <any_Vx_sh_uw_d>)]) sil))
Running scan for frate = 72
Considering guard n with value 3 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard n with value 6 for l ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard sh with value 1 for uw ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 72 public <clue> = (((sil [((ch <any_Cx_k_ch_b>) | (<any_Cx_k_ch_b> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil b (sil [((ch <any_Cx_k_ch_b>) | (<any_Cx_k_ch_b> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_n_b_ch_k_l> n)] | [(n <any_Cx_n_b_ch_k_l>)]) (k | d | ((<any_Cx_n_b_ch_k_l> n) | (n <any_Cx_n_b_ch_k_l>)))) (([(<any_Cx_n_n_l_k> n)] | [(n <any_Cx_n_n_l_k>)]) (l | ((<any_Cx_n_n_l> n) | (n <any_Cx_n_n_l>)))) ((([(<any_Vx_sh_n_uw_noSlide> sh)] | [(sh <any_Vx_sh_n_uw_noSlide>)]) ([(<any_Cx_sh_n_l> sh)] | [(sh <any_Cx_sh_n_l>)])) (uw | ((<any_Vx_sh_n_uw_noSlide> sh) | (sh <any_Vx_sh_n_uw_noSlide>)))) (([(<any_Cx_sh_uw_hh> hh)] | [(hh <any_Cx_sh_uw_hh>)]) ([(<any_Vx_sh_uw_hh> hh)] | [(hh <any_Vx_sh_uw_hh>)]) sil))

results =
{72 [{sil 0 10} {kl 11 23} {uw 24 27} {ow 28 47} {n 48 60} {sil 61 63}]}
{80 [{sil 0 12} {kl 13 25} {uw 26 28} {w 29 32} {ay 33 60} {sil 61 68}]}
{91 [{sil 0 11} {g 12 18} {zh 19 21} {kl 22 28} {uw 29 32} {r 33 35} {er 36 66} {sil 67 130}]}
{105 [{sil 0 14} {g 15 22} {z 23 25} {kl 26 33} {uw 34 41} {er 42 70} {d 71 78} {sil 79 151}]}
{125 [{sil 3 19} {g 20 28} {z 29 31} {kl 32 40} {uw 41 49} {er 50 80} {n 81 107} {sil 108 182}]}

normalised results =
{72 [{sil 0 10} {kl 15 32} {uw 33 38} {ow 39 65} {n 67 83} {sil 85 85}]}
{80 [{sil 0 12} {kl 16 31} {uw 33 33} {w 36 40} {ay 41 75} {sil 76 85}]}
{91 [{sil 0 11} {g 13 20} {zh 21 21} {kl 24 31} {uw 32 35} {r 36 36} {er 40 73} {sil 74 143}]}
{105 [{sil 0 14} {g 14 21} {z 22 22} {kl 25 31} {uw 32 39} {er 40 67} {d 68 74} {sil 75 144}]}
{125 [{sil 3 19} {g 16 22} {z 23 23} {kl 26 32} {uw 33 39} {er 40 64} {n 65 86} {sil 86 146}]}

ruleAligned = [{{g 3} [{2 1} {3 1} {4 1}]} {{kl 0} [{0 1} {1 1} {2 3} {3 3} {4 3}]} {{uw 2} [{3 4} {4 4}]} {{er 3} [{2 6} {3 5} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {kl 15 32} {uw 33 33} {ow 39 65} {n 67 83} {sil 85 85}]}
{80 [{sil 0 0} {kl 16 31} {uw 33 33} {w 36 40} {ay 41 75} {sil 76 76}]}
{91 [{sil 0 0} {g 13 20} {zh 21 21} {kl 24 31} {uw 32 32} {r 36 36} {er 40 73} {sil 74 74}]}
{105 [{sil 0 0} {g 14 21} {z 22 22} {kl 25 31} {uw 32 39} {er 40 67} {d 68 74} {sil 75 75}]}
{125 [{sil 3 3} {g 16 22} {z 23 23} {kl 26 32} {uw 33 39} {er 40 64} {n 65 86} {sil 86 86}]}

timeAligned = [{{g 16 20} [{2 1} {3 1} {4 1}]} {{kl 24 31} [{0 1} {1 1} {2 3} {3 3} {4 3}]} {{er 40 64} [{2 6} {3 5} {4 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 20
i, iTime, newITime, timeStartFrom = 2 1 -1 31
i, iTime, newITime, timeStartFrom = 3 1 2 31
combinedVerdict    = [{g 3} {kl 0} {uw 2} {er 3}]
ruleAlignedVerdict = [{g 3} {kl 0} {uw 2} {er 3}]

score->
-1 for g
+1 for kl
-1 for uw
-1 for er
score<-: -2

results =
{72 [{sil 0 8} {k 9 21} {l 22 24} {uw 25 27} {hh 28 30} {ay 31 54} {sil 55 63}]}
{80 [{sil 0 9} {k 10 22} {l 23 30} {uw 31 33} {ow 34 55} {d 56 58} {sil 59 68}]}
{91 [{sil 0 11} {k 12 26} {l 27 37} {eh 38 54} {sh 55 57} {iy 58 75} {f 76 78} {sil 79 130}]}
{105 [{sil 0 14} {g 15 21} {v 22 25} {k 26 30} {l 31 43} {eh 44 64} {sh 65 67} {iy 68 88} {hh 89 91} {sil 92 151}]}
{125 [{sil 3 20} {k 21 39} {l 40 51} {eh 52 77} {sh 78 80} {iy 81 107} {sh 108 110} {sil 111 182}]}

normalised results =
{72 [{sil 0 8} {k 13 29} {l 31 31} {uw 35 35} {hh 39 39} {ay 43 75} {sil 76 88}]}
{80 [{sil 0 9} {k 13 28} {l 29 38} {uw 39 39} {ow 43 69} {d 70 70} {sil 74 85}]}
{91 [{sil 0 11} {k 13 29} {l 30 41} {eh 42 59} {sh 60 60} {iy 64 82} {f 84 84} {sil 87 143}]}
{105 [{sil 0 14} {g 14 20} {v 21 24} {k 25 29} {l 30 41} {eh 42 61} {sh 62 62} {iy 65 84} {hh 85 85} {sil 88 144}]}
{125 [{sil 3 20} {k 17 31} {l 32 41} {eh 42 62} {sh 62 62} {iy 65 86} {sh 86 86} {sil 89 146}]}

ruleAligned = [{{k 0} [{0 1} {1 1} {2 1} {3 3} {4 1}]} {{l 0} [{1 2} {2 2} {3 4} {4 2}]} {{uw 2} []}]

results (after rule-alignment) =
{72 [{sil 0 0} {k 13 29} {l 31 31} {uw 35 35} {hh 39 39} {ay 43 75} {sil 76 76}]}
{80 [{sil 0 0} {k 13 28} {l 29 38} {uw 39 39} {ow 43 69} {d 70 70} {sil 74 74}]}
{91 [{sil 0 0} {k 13 29} {l 30 41} {eh 42 59} {sh 60 60} {iy 64 82} {f 84 84} {sil 87 87}]}
{105 [{sil 0 0} {g 14 20} {v 21 21} {k 25 29} {l 30 41} {eh 42 61} {sh 62 62} {iy 65 84} {hh 85 85} {sil 88 88}]}
{125 [{sil 3 3} {k 17 31} {l 32 41} {eh 42 62} {sh 62 62} {iy 65 86} {sh 86 86} {sil 89 89}]}

timeAligned = [{{k 13 29} [{0 1} {1 1} {2 1} {4 1} {3 3}]} {{l 30 41} [{1 2} {2 2} {3 4} {4 2}]} {{eh 42 59} [{2 3} {3 5} {4 3}]} {{iy 65 82} [{2 5} {3 7} {4 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 28
i, iTime, newITime, timeStartFrom = 2 1 -1 38
combinedVerdict    = [{k 0} {l 0} {uw 2} {eh 3} {iy 3}]
ruleAlignedVerdict = [{k 0} {l 0} {uw 2}]

score->
+1 for k
+1 for l
-1 for uw
-1 for eh
-1 for iy
score<-: -1
bestResult = {-1 [{k 0} {l 0} {uw 2} {eh 3} {iy 3}] [k l uw]}
testPronounce k good l good uw missing eh surprise iy surprise
publish->
phonsToAlphas = [{[k] c} {[l] l} {[uw] ue}]
getVerdict<-:new {c [k] 0}
getVerdict<-:new {l [l] 0}
getVerdict<-:new {ue [uw] 2}
lettersVerdicts = [{c [k] 0} {l [l] 0} {ue [uw] 2} {eh [eh] 3} {iy [iy] 3}]
publish<-
Total: 328.794686ms
{
  "results": [
    {
      "letters": "c",
      "phonemes": "k",
      "verdict": "good"
    },
    {
      "letters": "l",
      "phonemes": "l",
      "verdict": "good"
    },
    {
      "letters": "ue",
      "phonemes": "u",
      "verdict": "missing"
    },
    {
      "letters": "eh",
      "phonemes": "ɛ",
      "verdict": "surprise"
    },
    {
      "letters": "iy",
      "phonemes": "iː",
      "verdict": "surprise"
    }
  ],
  "err": null
}
