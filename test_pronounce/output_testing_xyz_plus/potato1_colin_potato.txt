
 length of audio =  1.694813



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.56 0.9 1.46

 start3, duration3, end3 =  0.5800000000000001 0.78 1.36

 Initial start, duration, end =  0.4600000000000001 0.9999999999999999 1.46

 Cut at: start, duration =  0.4600000000000001 1.214813     guard_end =  1.6748129999999999 

Running scan for frate = 125
Considering guard zh with value 1 for p ...
Considering guard jh with value 1 for p ...
candidateGuards = map[jh:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for ax ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 6 for t ...
Considering guard y with value 6 for t ...
candidateGuards = map[y:true zh:true]
Picking guard, zh

Considering guard ao with value 2 for ey ...
candidateGuards = map[ao:true]
Picking guard, ao

Considering guard y with value 8.8 for t ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3 for ow ...
candidateGuards = map[y:true]
Picking guard, y

frate, target rule = 125 public <potato> = (((sil [((b <any_Cx_p_b_d>) | (<any_Cx_p_b_d> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]) | (sil d (sil [((b <any_Cx_p_b_d>) | (<any_Cx_p_b_d> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]))) (([(<any_Cx_zh_d_b_p_ax> zh)] | [(zh <any_Cx_zh_d_b_p_ax>)]) (p | ((<any_Cx_zh_d_b_p_ax> zh) | (zh <any_Cx_zh_d_b_p_ax>)))) (([(<any_Cx_zh_zh_ax_t_p> zh)] | [(zh <any_Cx_zh_zh_ax_t_p>)]) (ax | ((<any_Cx_zh_zh_ax_t> zh) | (zh <any_Cx_zh_zh_ax_t>)))) (([(<any_Cx_zh_zh_t_ax> zh)] | [(zh <any_Cx_zh_zh_t_ax>)]) (t | ((<any_Cx_zh_zh_t_ax> zh) | (zh <any_Cx_zh_zh_t_ax>)))) ((([(<any_Vx_ao_zh_ey_noSlide> ao)] | [(ao <any_Vx_ao_zh_ey_noSlide>)]) ([(<any_Cx_ao_zh_t_t> ao)] | [(ao <any_Cx_ao_zh_t_t>)])) (ey | ((<any_Vx_ao_zh_ey_noSlide> ao) | (ao <any_Vx_ao_zh_ey_noSlide>)))) (([(<any_Cx_y_ao_t> y)] | [(y <any_Cx_y_ao_t>)]) (t | ((<any_Cx_y_ao_t> y) | (y <any_Cx_y_ao_t>)))) ((([(<any_Vx_y_y_ow_noSlide> y)] | [(y <any_Vx_y_y_ow_noSlide>)]) ([(<any_Cx_y_y_t> y)] | [(y <any_Cx_y_y_t>)])) (ow | ((<any_Vx_y_y_ow_noSlide> y) | (y <any_Vx_y_y_ow_noSlide>)))) (([(<any_Cx_y_ow_f> f)] | [(f <any_Cx_y_ow_f>)]) ([(<any_Vx_y_ow_f> f)] | [(f <any_Vx_y_ow_f>)]) sil))
Running scan for frate = 105
Considering guard zh with value 1 for p ...
Considering guard jh with value 1 for p ...
candidateGuards = map[jh:true zh:true]
Picking guard, jh

Considering guard zh with value 2 for ax ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard y with value 6 for t ...
Considering guard zh with value 6 for t ...
candidateGuards = map[y:true zh:true]
Picking guard, y

Considering guard ao with value 2 for ey ...
candidateGuards = map[ao:true]
Picking guard, ao

Considering guard y with value 8.8 for t ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3 for ow ...
candidateGuards = map[y:true]
Picking guard, y

frate, target rule = 105 public <potato> = (((sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil d (sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_jh_d_hh_p_ax> jh)] | [(jh <any_Cx_jh_d_hh_p_ax>)]) (p | ((<any_Cx_jh_d_hh_p_ax> jh) | (jh <any_Cx_jh_d_hh_p_ax>)))) (([(<any_Cx_zh_jh_ax_t_p> zh)] | [(zh <any_Cx_zh_jh_ax_t_p>)]) (ax | ((<any_Cx_zh_jh_ax_t> zh) | (zh <any_Cx_zh_jh_ax_t>)))) (([(<any_Cx_y_zh_t_ax> y)] | [(y <any_Cx_y_zh_t_ax>)]) (t | ((<any_Cx_y_zh_t_ax> y) | (y <any_Cx_y_zh_t_ax>)))) ((([(<any_Vx_ao_y_ey_noSlide> ao)] | [(ao <any_Vx_ao_y_ey_noSlide>)]) ([(<any_Cx_ao_y_t_t> ao)] | [(ao <any_Cx_ao_y_t_t>)])) (ey | ((<any_Vx_ao_y_ey_noSlide> ao) | (ao <any_Vx_ao_y_ey_noSlide>)))) (([(<any_Cx_y_ao_t> y)] | [(y <any_Cx_y_ao_t>)]) (t | ((<any_Cx_y_ao_t> y) | (y <any_Cx_y_ao_t>)))) ((([(<any_Vx_y_y_ow_noSlide> y)] | [(y <any_Vx_y_y_ow_noSlide>)]) ([(<any_Cx_y_y_t> y)] | [(y <any_Cx_y_y_t>)])) (ow | ((<any_Vx_y_y_ow_noSlide> y) | (y <any_Vx_y_y_ow_noSlide>)))) (([(<any_Cx_y_ow_thr> thr)] | [(thr <any_Cx_y_ow_thr>)]) ([(<any_Vx_y_ow_thr> thr)] | [(thr <any_Vx_y_ow_thr>)]) sil))
Running scan for frate = 91
Considering guard jh with value 1 for p ...
Considering guard zh with value 1 for p ...
candidateGuards = map[jh:true zh:true]
Picking guard, jh

Considering guard zh with value 2 for ax ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 6 for t ...
Considering guard y with value 6 for t ...
candidateGuards = map[y:true zh:true]
Picking guard, y

Considering guard ao with value 2 for ey ...
candidateGuards = map[ao:true]
Picking guard, ao

Considering guard y with value 8.8 for t ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3 for ow ...
candidateGuards = map[y:true]
Picking guard, y

frate, target rule = 91 public <potato> = (((sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil d (sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_jh_d_hh_p_ax> jh)] | [(jh <any_Cx_jh_d_hh_p_ax>)]) (p | ((<any_Cx_jh_d_hh_p_ax> jh) | (jh <any_Cx_jh_d_hh_p_ax>)))) (([(<any_Cx_zh_jh_ax_t_p> zh)] | [(zh <any_Cx_zh_jh_ax_t_p>)]) (ax | ((<any_Cx_zh_jh_ax_t> zh) | (zh <any_Cx_zh_jh_ax_t>)))) (([(<any_Cx_y_zh_t_ax> y)] | [(y <any_Cx_y_zh_t_ax>)]) (t | ((<any_Cx_y_zh_t_ax> y) | (y <any_Cx_y_zh_t_ax>)))) ((([(<any_Vx_ao_y_ey_noSlide> ao)] | [(ao <any_Vx_ao_y_ey_noSlide>)]) ([(<any_Cx_ao_y_t_t> ao)] | [(ao <any_Cx_ao_y_t_t>)])) (ey | ((<any_Vx_ao_y_ey_noSlide> ao) | (ao <any_Vx_ao_y_ey_noSlide>)))) (([(<any_Cx_y_ao_t> y)] | [(y <any_Cx_y_ao_t>)]) (t | ((<any_Cx_y_ao_t> y) | (y <any_Cx_y_ao_t>)))) ((([(<any_Vx_y_y_ow_noSlide> y)] | [(y <any_Vx_y_y_ow_noSlide>)]) ([(<any_Cx_y_y_t> y)] | [(y <any_Cx_y_y_t>)])) (ow | ((<any_Vx_y_y_ow_noSlide> y) | (y <any_Vx_y_y_ow_noSlide>)))) (([(<any_Cx_y_ow_thr> thr)] | [(thr <any_Cx_y_ow_thr>)]) ([(<any_Vx_y_ow_thr> thr)] | [(thr <any_Vx_y_ow_thr>)]) sil))
Running scan for frate = 80
Considering guard jh with value 1 for p ...
Considering guard zh with value 1 for p ...
candidateGuards = map[jh:true zh:true]
Picking guard, jh

Considering guard zh with value 2 for ax ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard y with value 6 for t ...
Considering guard zh with value 6 for t ...
candidateGuards = map[y:true zh:true]
Picking guard, y

Considering guard ao with value 2 for ey ...
candidateGuards = map[ao:true]
Picking guard, ao

Considering guard y with value 8.8 for t ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3 for ow ...
candidateGuards = map[y:true]
Picking guard, y

frate, target rule = 80 public <potato> = (((sil [((sh <any_Cx_p_sh_d>) | (<any_Cx_p_sh_d> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil d (sil [((sh <any_Cx_p_sh_d>) | (<any_Cx_p_sh_d> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_jh_d_sh_p_ax> jh)] | [(jh <any_Cx_jh_d_sh_p_ax>)]) (p | ((<any_Cx_jh_d_sh_p_ax> jh) | (jh <any_Cx_jh_d_sh_p_ax>)))) (([(<any_Cx_zh_jh_ax_t_p> zh)] | [(zh <any_Cx_zh_jh_ax_t_p>)]) (ax | ((<any_Cx_zh_jh_ax_t> zh) | (zh <any_Cx_zh_jh_ax_t>)))) (([(<any_Cx_y_zh_t_ax> y)] | [(y <any_Cx_y_zh_t_ax>)]) (t | ((<any_Cx_y_zh_t_ax> y) | (y <any_Cx_y_zh_t_ax>)))) ((([(<any_Vx_ao_y_ey_noSlide> ao)] | [(ao <any_Vx_ao_y_ey_noSlide>)]) ([(<any_Cx_ao_y_t_t> ao)] | [(ao <any_Cx_ao_y_t_t>)])) (ey | ((<any_Vx_ao_y_ey_noSlide> ao) | (ao <any_Vx_ao_y_ey_noSlide>)))) (([(<any_Cx_y_ao_t> y)] | [(y <any_Cx_y_ao_t>)]) (t | ((<any_Cx_y_ao_t> y) | (y <any_Cx_y_ao_t>)))) ((([(<any_Vx_y_y_ow_noSlide> y)] | [(y <any_Vx_y_y_ow_noSlide>)]) ([(<any_Cx_y_y_t> y)] | [(y <any_Cx_y_y_t>)])) (ow | ((<any_Vx_y_y_ow_noSlide> y) | (y <any_Vx_y_y_ow_noSlide>)))) (([(<any_Cx_y_ow_p> p)] | [(p <any_Cx_y_ow_p>)]) ([(<any_Vx_y_ow_p> p)] | [(p <any_Vx_y_ow_p>)]) sil))
Running scan for frate = 72
Considering guard jh with value 1 for p ...
Considering guard zh with value 1 for p ...
candidateGuards = map[jh:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for ax ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard y with value 6 for t ...
Considering guard zh with value 6 for t ...
candidateGuards = map[y:true zh:true]
Picking guard, y

Considering guard ao with value 2 for ey ...
candidateGuards = map[ao:true]
Picking guard, ao

Considering guard y with value 8.8 for t ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3 for ow ...
candidateGuards = map[y:true]
Picking guard, y

frate, target rule = 72 public <potato> = (((sil [((b <any_Cx_p_b_d>) | (<any_Cx_p_b_d> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]) | (sil d (sil [((b <any_Cx_p_b_d>) | (<any_Cx_p_b_d> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]))) (([(<any_Cx_zh_d_b_p_ax> zh)] | [(zh <any_Cx_zh_d_b_p_ax>)]) (p | ((<any_Cx_zh_d_b_p_ax> zh) | (zh <any_Cx_zh_d_b_p_ax>)))) (([(<any_Cx_zh_zh_ax_t_p> zh)] | [(zh <any_Cx_zh_zh_ax_t_p>)]) (ax | ((<any_Cx_zh_zh_ax_t> zh) | (zh <any_Cx_zh_zh_ax_t>)))) (([(<any_Cx_y_zh_t_ax> y)] | [(y <any_Cx_y_zh_t_ax>)]) (t | ((<any_Cx_y_zh_t_ax> y) | (y <any_Cx_y_zh_t_ax>)))) ((([(<any_Vx_ao_y_ey_noSlide> ao)] | [(ao <any_Vx_ao_y_ey_noSlide>)]) ([(<any_Cx_ao_y_t_t> ao)] | [(ao <any_Cx_ao_y_t_t>)])) (ey | ((<any_Vx_ao_y_ey_noSlide> ao) | (ao <any_Vx_ao_y_ey_noSlide>)))) (([(<any_Cx_y_ao_t> y)] | [(y <any_Cx_y_ao_t>)]) (t | ((<any_Cx_y_ao_t> y) | (y <any_Cx_y_ao_t>)))) ((([(<any_Vx_y_y_ow_noSlide> y)] | [(y <any_Vx_y_y_ow_noSlide>)]) ([(<any_Cx_y_y_t> y)] | [(y <any_Cx_y_y_t>)])) (ow | ((<any_Vx_y_y_ow_noSlide> y) | (y <any_Vx_y_y_ow_noSlide>)))) (([(<any_Cx_y_ow_m> m)] | [(m <any_Cx_y_ow_m>)]) ([(<any_Vx_y_ow_m> m)] | [(m <any_Vx_y_ow_m>)]) sil))

results =
{72 [{sil 0 11} {p 12 15} {ax 16 21} {t 22 25} {ey 26 36} {t 37 40} {ow 41 56} {sil 57 71}]}
{80 [{sil 0 13} {p 14 17} {ax 18 24} {t 25 28} {ey 29 40} {t 41 45} {ow 46 62} {sil 63 76}]}
{91 [{sil 0 15} {p 16 19} {ax 20 27} {t 28 32} {ey 33 45} {t 46 51} {ow 52 76} {sil 77 109}]}
{105 [{sil 0 18} {p 19 24} {ax 25 32} {t 33 37} {ey 38 52} {t 53 59} {ow 60 88} {sil 89 122}]}
{125 [{sil 3 23} {p 24 29} {ax 30 38} {t 39 46} {ey 47 63} {t 64 71} {ow 72 104} {sil 105 147}]}

normalised results =
{72 [{sil 0 11} {p 17 21} {ax 22 29} {t 31 35} {ey 36 50} {t 51 56} {ow 57 78} {sil 79 99}]}
{80 [{sil 0 13} {p 18 21} {ax 23 30} {t 31 35} {ey 36 50} {t 51 56} {ow 58 78} {sil 79 95}]}
{91 [{sil 0 15} {p 18 21} {ax 22 30} {t 31 35} {ey 36 49} {t 51 56} {ow 57 84} {sil 85 120}]}
{105 [{sil 0 18} {p 18 23} {ax 24 30} {t 31 35} {ey 36 50} {t 50 56} {ow 57 84} {sil 85 116}]}
{125 [{sil 3 23} {p 19 23} {ax 24 30} {t 31 37} {ey 38 50} {t 51 57} {ow 58 83} {sil 84 118}]}

ruleAligned = [{{p 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ax 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{t 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{ey 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{t 0} [{0 5} {1 5} {2 5} {3 5} {4 5}]} {{ow 0} [{0 6} {1 6} {2 6} {3 6} {4 6}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {p 17 21} {ax 22 29} {t 31 35} {ey 36 50} {t 51 56} {ow 57 78} {sil 79 79}]}
{80 [{sil 0 0} {p 18 21} {ax 23 30} {t 31 35} {ey 36 50} {t 51 56} {ow 58 78} {sil 79 79}]}
{91 [{sil 0 0} {p 18 21} {ax 22 30} {t 31 35} {ey 36 49} {t 51 56} {ow 57 84} {sil 85 85}]}
{105 [{sil 0 0} {p 18 23} {ax 24 30} {t 31 35} {ey 36 50} {t 50 56} {ow 57 84} {sil 85 85}]}
{125 [{sil 3 3} {p 19 23} {ax 24 30} {t 31 37} {ey 38 50} {t 51 57} {ow 58 83} {sil 84 84}]}

timeAligned = [{{p 18 21} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ax 23 30} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{t 31 35} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{ey 36 50} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{t 51 56} [{0 5} {1 5} {2 5} {3 5} {4 5}]} {{ow 57 83} [{0 6} {2 6} {3 6} {1 6} {4 6}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 21
i, iTime, newITime, timeStartFrom = 2 1 2 29
i, iTime, newITime, timeStartFrom = 3 2 3 35
i, iTime, newITime, timeStartFrom = 4 3 4 49
i, iTime, newITime, timeStartFrom = 5 4 5 56
combinedVerdict    = [{p 0} {ax 0} {t 0} {ey 0} {t 0} {ow 0}]
ruleAlignedVerdict = [{p 0} {ax 0} {t 0} {ey 0} {t 0} {ow 0}]

score->
+1 for p
+1 for ax
+1 for t
+1 for ey
+1 for t
+1 for ow
score<-: 11
testPronounce p good ax good t good ey good t good ow good
publish->
phonsToAlphas = [{[p] p} {[ax] o} {[t] t} {[ey] a} {[t] t} {[ow] o}]
getVerdict<-:new {p [p] 0}
getVerdict<-:new {o [ax] 0}
getVerdict<-:new {t [t] 0}
getVerdict<-:new {a [ey] 0}
getVerdict<-:new {t [t] 0}
getVerdict<-:new {o [ow] 0}
lettersVerdicts = [{p [p] 0} {o [ax] 0} {t [t] 0} {a [ey] 0} {t [t] 0} {o [ow] 0}]
publish<-
Total: 251.955771ms
{
  "results": [
    {
      "letters": "p",
      "phonemes": "p",
      "verdict": "good"
    },
    {
      "letters": "o",
      "phonemes": "ə",
      "verdict": "good"
    },
    {
      "letters": "t",
      "phonemes": "t",
      "verdict": "good"
    },
    {
      "letters": "a",
      "phonemes": "eɪ",
      "verdict": "good"
    },
    {
      "letters": "t",
      "phonemes": "t",
      "verdict": "good"
    },
    {
      "letters": "o",
      "phonemes": "oʊ",
      "verdict": "good"
    }
  ],
  "err": null
}
