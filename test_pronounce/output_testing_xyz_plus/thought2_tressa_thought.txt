
 length of audio =  1.514312



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.33999999999999997 0.96 1.2999999999999998

 start3, duration3, end3 =  0.7000000000000001 0.52 1.2200000000000002

 Initial start, duration, end =  0.23999999999999996 1.0599999999999998 1.2999999999999998

 Cut at: start, duration =  0.23999999999999996 1.254312     guard_end =  1.494312 

Running scan for frate = 125
Considering guard jh with value 1 for th ...
Considering guard zh with value 1 for th ...
candidateGuards = map[jh:true zh:true]
Picking guard, jh

Considering guard zh with value 2 for ao ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 125 public <thought> = (((sil [((t <any_Cx_th_t_p>) | (<any_Cx_th_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil p (sil [((t <any_Cx_th_t_p>) | (<any_Cx_th_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_jh_p_t_th> jh)] | [(jh <any_Cx_jh_p_t_th>)]) (th | t | d | s | ((<any_Cx_jh_p_t_th> jh) | (jh <any_Cx_jh_p_t_th>)))) ((([(<any_Vx_zh_jh_ao_noSlide> zh)] | [(zh <any_Vx_zh_jh_ao_noSlide>)]) ([(<any_Cx_zh_jh_t_th> zh)] | [(zh <any_Cx_zh_jh_t_th>)])) (ao | ((<any_Vx_zh_jh_ao_noSlide> zh) | (zh <any_Vx_zh_jh_ao_noSlide>)))) (([(<any_Cx_zh_zh_t> zh)] | [(zh <any_Cx_zh_zh_t>)]) (t | ((<any_Cx_zh_zh_t> zh) | (zh <any_Cx_zh_zh_t>)))) (([(<any_vowel_noSlide> k)] | [(k <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_k> k)] | [(k <any_Cx_zh_t_k>)]) sil))
Running scan for frate = 105
Considering guard zh with value 1 for th ...
Considering guard jh with value 1 for th ...
candidateGuards = map[jh:true zh:true]
Picking guard, jh

Considering guard zh with value 2 for ao ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 105 public <thought> = (((sil [((s <any_Cx_th_s_p>) | (<any_Cx_th_s_p> s))] [((s <any_vowel_noSlide>) | (<any_vowel_noSlide> s))]) | (sil p (sil [((s <any_Cx_th_s_p>) | (<any_Cx_th_s_p> s))] [((s <any_vowel_noSlide>) | (<any_vowel_noSlide> s))]))) (([(<any_Cx_jh_p_s_th> jh)] | [(jh <any_Cx_jh_p_s_th>)]) (th | t | d | s | ((<any_Cx_jh_p_s_th> jh) | (jh <any_Cx_jh_p_s_th>)))) ((([(<any_Vx_zh_jh_ao_noSlide> zh)] | [(zh <any_Vx_zh_jh_ao_noSlide>)]) ([(<any_Cx_zh_jh_t_th> zh)] | [(zh <any_Cx_zh_jh_t_th>)])) (ao | ((<any_Vx_zh_jh_ao_noSlide> zh) | (zh <any_Vx_zh_jh_ao_noSlide>)))) (([(<any_Cx_zh_zh_t> zh)] | [(zh <any_Cx_zh_zh_t>)]) (t | ((<any_Cx_zh_zh_t> zh) | (zh <any_Cx_zh_zh_t>)))) (([(<any_vowel_noSlide> k)] | [(k <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_k> k)] | [(k <any_Cx_zh_t_k>)]) sil))
Running scan for frate = 91
Considering guard jh with value 1 for th ...
Considering guard zh with value 1 for th ...
candidateGuards = map[jh:true zh:true]
Picking guard, jh

Considering guard zh with value 2 for ao ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 91 public <thought> = (((sil [((s <any_Cx_th_s_p>) | (<any_Cx_th_s_p> s))] [((s <any_vowel_noSlide>) | (<any_vowel_noSlide> s))]) | (sil p (sil [((s <any_Cx_th_s_p>) | (<any_Cx_th_s_p> s))] [((s <any_vowel_noSlide>) | (<any_vowel_noSlide> s))]))) (([(<any_Cx_jh_p_s_th> jh)] | [(jh <any_Cx_jh_p_s_th>)]) (th | t | d | s | ((<any_Cx_jh_p_s_th> jh) | (jh <any_Cx_jh_p_s_th>)))) ((([(<any_Vx_zh_jh_ao_noSlide> zh)] | [(zh <any_Vx_zh_jh_ao_noSlide>)]) ([(<any_Cx_zh_jh_t_th> zh)] | [(zh <any_Cx_zh_jh_t_th>)])) (ao | ((<any_Vx_zh_jh_ao_noSlide> zh) | (zh <any_Vx_zh_jh_ao_noSlide>)))) (([(<any_Cx_zh_zh_t> zh)] | [(zh <any_Cx_zh_zh_t>)]) (t | ((<any_Cx_zh_zh_t> zh) | (zh <any_Cx_zh_zh_t>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_g> g)] | [(g <any_Cx_zh_t_g>)]) sil))
Running scan for frate = 80
Considering guard zh with value 1 for th ...
Considering guard jh with value 1 for th ...
candidateGuards = map[jh:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for ao ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 80 public <thought> = (((sil [((z <any_Cx_th_z_p>) | (<any_Cx_th_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_th_z_p>) | (<any_Cx_th_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_th> zh)] | [(zh <any_Cx_zh_p_z_th>)]) (th | t | d | s | ((<any_Cx_zh_p_z_th> zh) | (zh <any_Cx_zh_p_z_th>)))) ((([(<any_Vx_zh_zh_ao_noSlide> zh)] | [(zh <any_Vx_zh_zh_ao_noSlide>)]) ([(<any_Cx_zh_zh_t_th> zh)] | [(zh <any_Cx_zh_zh_t_th>)])) (ao | ((<any_Vx_zh_zh_ao_noSlide> zh) | (zh <any_Vx_zh_zh_ao_noSlide>)))) (([(<any_Cx_zh_zh_t> zh)] | [(zh <any_Cx_zh_zh_t>)]) (t | ((<any_Cx_zh_zh_t> zh) | (zh <any_Cx_zh_zh_t>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_d> d)] | [(d <any_Cx_zh_t_d>)]) sil))
Running scan for frate = 72
Considering guard zh with value 1 for th ...
Considering guard jh with value 1 for th ...
candidateGuards = map[jh:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for ao ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 72 public <thought> = (((sil [((z <any_Cx_th_z_p>) | (<any_Cx_th_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_th_z_p>) | (<any_Cx_th_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_th> zh)] | [(zh <any_Cx_zh_p_z_th>)]) (th | t | d | s | ((<any_Cx_zh_p_z_th> zh) | (zh <any_Cx_zh_p_z_th>)))) ((([(<any_Vx_zh_zh_ao_noSlide> zh)] | [(zh <any_Vx_zh_zh_ao_noSlide>)]) ([(<any_Cx_zh_zh_t_th> zh)] | [(zh <any_Cx_zh_zh_t_th>)])) (ao | ((<any_Vx_zh_zh_ao_noSlide> zh) | (zh <any_Vx_zh_zh_ao_noSlide>)))) (([(<any_Cx_zh_zh_t> zh)] | [(zh <any_Cx_zh_zh_t>)]) (t | ((<any_Cx_zh_zh_t> zh) | (zh <any_Cx_zh_zh_t>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_g> g)] | [(g <any_Cx_zh_t_g>)]) sil))

results =
{72 [{sil 0 11} {m 12 28} {z 29 31} {th 32 39} {ao 40 58} {t 59 71} {sil 72 89}]}
{80 [{sil 0 13} {m 14 31} {z 32 35} {th 36 43} {ao 44 65} {t 66 81} {sil 82 95}]}
{91 [{sil 0 15} {m 16 42} {s 43 45} {th 46 49} {ao 50 75} {t 76 92} {sil 93 108}]}
{105 [{sil 0 17} {m 18 49} {s 50 53} {th 54 57} {ao 58 88} {t 89 107} {sil 108 130}]}
{125 [{sil 3 23} {m 24 50} {t 51 60} {th 61 71} {ao 72 107} {t 108 128} {sil 129 156}]}

normalised results =
{72 [{sil 0 11} {m 17 39} {z 40 40} {th 44 54} {ao 56 81} {t 82 99} {sil 100 124}]}
{80 [{sil 0 13} {m 18 39} {z 40 44} {th 45 54} {ao 55 81} {t 83 101} {sil 103 119}]}
{91 [{sil 0 15} {m 18 46} {s 47 47} {th 51 54} {ao 55 82} {t 84 101} {sil 102 119}]}
{105 [{sil 0 17} {m 17 47} {s 48 50} {th 51 54} {ao 55 84} {t 85 102} {sil 103 124}]}
{125 [{sil 3 23} {m 19 40} {t 41 48} {th 49 57} {ao 58 86} {t 86 102} {sil 103 125}]}

ruleAligned = [{{m 3} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{th 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{ao 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{t 0} [{0 5} {1 5} {2 5} {3 5} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {m 17 39} {z 40 40} {th 44 54} {ao 56 81} {t 82 99} {sil 100 100}]}
{80 [{sil 0 0} {m 18 39} {z 40 40} {th 45 54} {ao 55 81} {t 83 101} {sil 103 103}]}
{91 [{sil 0 0} {m 18 46} {s 47 47} {th 51 54} {ao 55 82} {t 84 101} {sil 102 102}]}
{105 [{sil 0 0} {m 17 47} {s 48 48} {th 51 54} {ao 55 84} {t 85 102} {sil 103 103}]}
{125 [{sil 3 3} {m 19 40} {t 41 48} {th 49 57} {ao 58 86} {t 86 102} {sil 103 103}]}

timeAligned = [{{m 18 40} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{th 49 54} [{0 3} {1 3} {4 3} {2 3} {3 3}]} {{ao 55 82} [{1 4} {2 4} {3 4} {0 4} {4 4}]} {{t 84 101} [{0 5} {1 5} {2 5} {3 5} {4 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 39
i, iTime, newITime, timeStartFrom = 2 1 2 54
i, iTime, newITime, timeStartFrom = 3 2 3 81
combinedVerdict    = [{m 3} {th 0} {ao 0} {t 0}]
ruleAlignedVerdict = [{m 3} {th 0} {ao 0} {t 0}]

score->
-1 for m
+1 for th
+1 for ao
+1 for t
score<-: 2
testPronounce m surprise th good ao good t good
publish->
phonsToAlphas = [{[th] th} {[ao] ou} {[t] ght}]
getVerdict<-:new {th [th] 0}
getVerdict<-:new {ou [ao] 0}
getVerdict<-:new {ght [t] 0}
lettersVerdicts = [{m [m] 3} {th [th] 0} {ou [ao] 0} {ght [t] 0}]
publish<-
Total: 234.497658ms
{
  "results": [
    {
      "letters": "m",
      "phonemes": "m",
      "verdict": "surprise"
    },
    {
      "letters": "th",
      "phonemes": "θ",
      "verdict": "good"
    },
    {
      "letters": "ou",
      "phonemes": "ɔ",
      "verdict": "good"
    },
    {
      "letters": "ght",
      "phonemes": "t",
      "verdict": "good"
    }
  ],
  "err": null
}
