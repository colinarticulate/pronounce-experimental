
 length of audio =  3.134313



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  2.08 0.66 2.74

 start3, duration3, end3 =  2.08 0.56 2.64

 Initial start, duration, end =  1.98 0.7600000000000002 2.74

 Cut at: start, duration =  1.98 1.1343130000000001     guard_end =  3.114313 

Running scan for frate = 125
Running scan for frate = 125
Considering guard z with value 1 for hh ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard z with value 1 for hh ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard y with value 8 for aa ...
Considering guard zh with value 8 for aa ...
Considering guard ng with value 8 for aa ...
Considering guard jh with value 8 for aa ...
Considering guard sh with value 8 for aa ...
Considering guard ch with value 8 for aa ...
candidateGuards = map[ch:true jh:true ng:true sh:true y:true zh:true]
Picking guard, y

Considering guard y with value 8 for aa ...
Considering guard jh with value 8 for aa ...
Considering guard zh with value 8 for aa ...
Considering guard ng with value 8 for aa ...
Considering guard ch with value 8 for aa ...
Considering guard sh with value 8 for aa ...
candidateGuards = map[ch:true jh:true ng:true sh:true y:true zh:true]
Picking guard, y

Considering guard zh with value 2 for th ...
Considering guard ng with value 2 for th ...
candidateGuards = map[ng:true zh:true]
Picking guard, ng

Considering guard zh with value 4 for thr ...
Considering guard jh with value 4 for thr ...
candidateGuards = map[jh:true zh:true]
Picking guard, zh

Considering guard zh with value 4 for r ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 4 for ah ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard z with value 2 for ah ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard zh with value 1 for g ...
Considering guard sh with value 1 for g ...
Considering guard z with value 1 for g ...
candidateGuards = map[sh:true z:true zh:true]
Picking guard, zh

Considering guard z with value 1 for g ...
Considering guard sh with value 1 for g ...
Considering guard zh with value 1 for g ...
candidateGuards = map[sh:true z:true zh:true]
Picking guard, z

frate, target rule = 125 public <hearthrug> = (((sil [((z <any_Cx_hh_z_b>) | (<any_Cx_hh_z_b> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil b (sil [((z <any_Cx_hh_z_b>) | (<any_Cx_hh_z_b> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_z_b_z_hh> z)] | [(z <any_Cx_z_b_z_hh>)]) (hh | ((<any_Cx_z_b_z_hh> z) | (z <any_Cx_z_b_z_hh>)))) ((([(<any_Vx_y_z_aa_noSlide> y)] | [(y <any_Vx_y_z_aa_noSlide>)]) ([(<any_Cx_y_z_thr_hh> y)] | [(y <any_Cx_y_z_thr_hh>)])) (aa | ((<any_Vx_y_z_aa_noSlide> y) | (y <any_Vx_y_z_aa_noSlide>)))) (([(<any_Cx_zh_y_thr> zh)] | [(zh <any_Cx_zh_y_thr>)]) (thr | ((<any_Cx_zh_y_thr> zh) | (zh <any_Cx_zh_y_thr>)))) ((([(<any_Vx_zh_zh_ah_noSlide> zh)] | [(zh <any_Vx_zh_zh_ah_noSlide>)]) ([(<any_Cx_zh_zh_g_thr> zh)] | [(zh <any_Cx_zh_zh_g_thr>)])) (ah | ((<any_Vx_zh_zh_ah_noSlide> zh) | (zh <any_Vx_zh_zh_ah_noSlide>)))) (([(<any_Cx_zh_zh_g> zh)] | [(zh <any_Cx_zh_zh_g>)]) (g | ((<any_Cx_zh_zh_g> zh) | (zh <any_Cx_zh_zh_g>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_zh_g_d> d)] | [(d <any_Cx_zh_g_d>)]) sil))
frate, target rule = 125 public <hearthrug> = (((sil [((b <any_Cx_hh_b_b>) | (<any_Cx_hh_b_b> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]) | (sil b (sil [((b <any_Cx_hh_b_b>) | (<any_Cx_hh_b_b> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]))) (([(<any_Cx_z_b_b_hh> z)] | [(z <any_Cx_z_b_b_hh>)]) (hh | ((<any_Cx_z_b_b_hh> z) | (z <any_Cx_z_b_b_hh>)))) ((([(<any_Vx_y_z_aa_noSlide> y)] | [(y <any_Vx_y_z_aa_noSlide>)]) ([(<any_Cx_y_z_th_hh> y)] | [(y <any_Cx_y_z_th_hh>)])) (aa | ((<any_Vx_y_z_aa_noSlide> y) | (y <any_Vx_y_z_aa_noSlide>)))) (([(<any_Cx_ng_y_th_r> ng)] | [(ng <any_Cx_ng_y_th_r>)]) (th | ((<any_Cx_ng_y_th_r> ng) | (ng <any_Cx_ng_y_th_r>)))) (([(<any_Cx_zh_ng_r_th> zh)] | [(zh <any_Cx_zh_ng_r_th>)]) (r | ((<any_Cx_zh_ng_r_th> zh) | (zh <any_Cx_zh_ng_r_th>)))) ((([(<any_Vx_z_zh_ah_noSlide> z)] | [(z <any_Vx_z_zh_ah_noSlide>)]) ([(<any_Cx_z_zh_g_r> z)] | [(z <any_Cx_z_zh_g_r>)])) (ah | ((<any_Vx_z_zh_ah_noSlide> z) | (z <any_Vx_z_zh_ah_noSlide>)))) (([(<any_Cx_z_z_g> z)] | [(z <any_Cx_z_z_g>)]) (g | ((<any_Cx_z_z_g> z) | (z <any_Cx_z_z_g>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_z_g_thr> thr)] | [(thr <any_Cx_z_g_thr>)]) sil))
Running scan for frate = 105
Running scan for frate = 105
Considering guard z with value 1 for hh ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard zh with value 8 for aa ...
Considering guard sh with value 8 for aa ...
Considering guard y with value 8 for aa ...
Considering guard ng with value 8 for aa ...
Considering guard ch with value 8 for aa ...
Considering guard jh with value 8 for aa ...
candidateGuards = map[ch:true jh:true ng:true sh:true y:true zh:true]
Picking guard, jh

Considering guard z with value 1 for hh ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard ng with value 2 for th ...
Considering guard zh with value 2 for th ...
candidateGuards = map[ng:true zh:true]
Picking guard, ng

Considering guard zh with value 4 for r ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard z with value 2 for ah ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard sh with value 1 for g ...
Considering guard z with value 1 for g ...
Considering guard zh with value 1 for g ...
candidateGuards = map[sh:true z:true zh:true]
Picking guard, z

Considering guard y with value 8 for aa ...
Considering guard jh with value 8 for aa ...
Considering guard ch with value 8 for aa ...
Considering guard sh with value 8 for aa ...
Considering guard zh with value 8 for aa ...
Considering guard ng with value 8 for aa ...
candidateGuards = map[ch:true jh:true ng:true sh:true y:true zh:true]
Picking guard, ng

Considering guard jh with value 4 for thr ...
Considering guard zh with value 4 for thr ...
candidateGuards = map[jh:true zh:true]
Picking guard, jh

frate, target rule = 105 public <hearthrug> = (((sil [((iy <any_Cx_hh_iy_b>) | (<any_Cx_hh_iy_b> iy))] [((iy <any_vowel_noSlide>) | (<any_vowel_noSlide> iy))]) | (sil b (sil [((iy <any_Cx_hh_iy_b>) | (<any_Cx_hh_iy_b> iy))] [((iy <any_vowel_noSlide>) | (<any_vowel_noSlide> iy))]))) (([(<any_Cx_z_b_iy_hh> z)] | [(z <any_Cx_z_b_iy_hh>)]) (hh | ((<any_Cx_z_b_iy_hh> z) | (z <any_Cx_z_b_iy_hh>)))) ((([(<any_Vx_jh_z_aa_noSlide> jh)] | [(jh <any_Vx_jh_z_aa_noSlide>)]) ([(<any_Cx_jh_z_th_hh> jh)] | [(jh <any_Cx_jh_z_th_hh>)])) (aa | ((<any_Vx_jh_z_aa_noSlide> jh) | (jh <any_Vx_jh_z_aa_noSlide>)))) (([(<any_Cx_ng_jh_th_r> ng)] | [(ng <any_Cx_ng_jh_th_r>)]) (th | ((<any_Cx_ng_jh_th_r> ng) | (ng <any_Cx_ng_jh_th_r>)))) (([(<any_Cx_zh_ng_r_th> zh)] | [(zh <any_Cx_zh_ng_r_th>)]) (r | ((<any_Cx_zh_ng_r_th> zh) | (zh <any_Cx_zh_ng_r_th>)))) ((([(<any_Vx_z_zh_ah_noSlide> z)] | [(z <any_Vx_z_zh_ah_noSlide>)]) ([(<any_Cx_z_zh_g_r> z)] | [(z <any_Cx_z_zh_g_r>)])) (ah | ((<any_Vx_z_zh_ah_noSlide> z) | (z <any_Vx_z_zh_ah_noSlide>)))) (([(<any_Cx_z_z_g> z)] | [(z <any_Cx_z_z_g>)]) (g | ((<any_Cx_z_z_g> z) | (z <any_Cx_z_z_g>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_z_g_d> d)] | [(d <any_Cx_z_g_d>)]) sil))
Considering guard zh with value 4 for ah ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard z with value 1 for g ...
Considering guard zh with value 1 for g ...
Considering guard sh with value 1 for g ...
candidateGuards = map[sh:true z:true zh:true]
Picking guard, z

Running scan for frate = 91
frate, target rule = 105 public <hearthrug> = (((sil [((iy <any_Cx_hh_iy_b>) | (<any_Cx_hh_iy_b> iy))] [((iy <any_vowel_noSlide>) | (<any_vowel_noSlide> iy))]) | (sil b (sil [((iy <any_Cx_hh_iy_b>) | (<any_Cx_hh_iy_b> iy))] [((iy <any_vowel_noSlide>) | (<any_vowel_noSlide> iy))]))) (([(<any_Cx_z_b_iy_hh> z)] | [(z <any_Cx_z_b_iy_hh>)]) (hh | ((<any_Cx_z_b_iy_hh> z) | (z <any_Cx_z_b_iy_hh>)))) ((([(<any_Vx_ng_z_aa_noSlide> ng)] | [(ng <any_Vx_ng_z_aa_noSlide>)]) ([(<any_Cx_ng_z_thr_hh> ng)] | [(ng <any_Cx_ng_z_thr_hh>)])) (aa | ((<any_Vx_ng_z_aa_noSlide> ng) | (ng <any_Vx_ng_z_aa_noSlide>)))) (([(<any_Cx_jh_ng_thr> jh)] | [(jh <any_Cx_jh_ng_thr>)]) (thr | ((<any_Cx_jh_ng_thr> jh) | (jh <any_Cx_jh_ng_thr>)))) ((([(<any_Vx_zh_jh_ah_noSlide> zh)] | [(zh <any_Vx_zh_jh_ah_noSlide>)]) ([(<any_Cx_zh_jh_g_thr> zh)] | [(zh <any_Cx_zh_jh_g_thr>)])) (ah | ((<any_Vx_zh_jh_ah_noSlide> zh) | (zh <any_Vx_zh_jh_ah_noSlide>)))) (([(<any_Cx_z_zh_g> z)] | [(z <any_Cx_z_zh_g>)]) (g | ((<any_Cx_z_zh_g> z) | (z <any_Cx_z_zh_g>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_z_g_thr> thr)] | [(thr <any_Cx_z_g_thr>)]) sil))
Considering guard z with value 1 for hh ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard zh with value 8 for aa ...
Considering guard sh with value 8 for aa ...
Considering guard ch with value 8 for aa ...
Considering guard ng with value 8 for aa ...
Considering guard jh with value 8 for aa ...
Considering guard y with value 8 for aa ...
candidateGuards = map[ch:true jh:true ng:true sh:true y:true zh:true]
Picking guard, sh

Running scan for frate = 91
Considering guard ng with value 2 for th ...
Considering guard zh with value 2 for th ...
candidateGuards = map[ng:true zh:true]
Picking guard, ng

Considering guard z with value 1 for hh ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard zh with value 4 for r ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard jh with value 8 for aa ...
Considering guard sh with value 8 for aa ...
Considering guard ng with value 8 for aa ...
Considering guard y with value 8 for aa ...
Considering guard zh with value 8 for aa ...
Considering guard ch with value 8 for aa ...
candidateGuards = map[ch:true jh:true ng:true sh:true y:true zh:true]
Picking guard, jh

Considering guard z with value 2 for ah ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard zh with value 4 for thr ...
Considering guard jh with value 4 for thr ...
candidateGuards = map[jh:true zh:true]
Picking guard, zh

Considering guard zh with value 1 for g ...
Considering guard sh with value 1 for g ...
Considering guard z with value 1 for g ...
candidateGuards = map[sh:true z:true zh:true]
Picking guard, zh

Considering guard zh with value 4 for ah ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 91 public <hearthrug> = (((sil [((b <any_Cx_hh_b_b>) | (<any_Cx_hh_b_b> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]) | (sil b (sil [((b <any_Cx_hh_b_b>) | (<any_Cx_hh_b_b> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]))) (([(<any_Cx_z_b_b_hh> z)] | [(z <any_Cx_z_b_b_hh>)]) (hh | ((<any_Cx_z_b_b_hh> z) | (z <any_Cx_z_b_b_hh>)))) ((([(<any_Vx_sh_z_aa_noSlide> sh)] | [(sh <any_Vx_sh_z_aa_noSlide>)]) ([(<any_Cx_sh_z_th_hh> sh)] | [(sh <any_Cx_sh_z_th_hh>)])) (aa | ((<any_Vx_sh_z_aa_noSlide> sh) | (sh <any_Vx_sh_z_aa_noSlide>)))) (([(<any_Cx_ng_sh_th_r> ng)] | [(ng <any_Cx_ng_sh_th_r>)]) (th | ((<any_Cx_ng_sh_th_r> ng) | (ng <any_Cx_ng_sh_th_r>)))) (([(<any_Cx_zh_ng_r_th> zh)] | [(zh <any_Cx_zh_ng_r_th>)]) (r | ((<any_Cx_zh_ng_r_th> zh) | (zh <any_Cx_zh_ng_r_th>)))) ((([(<any_Vx_z_zh_ah_noSlide> z)] | [(z <any_Vx_z_zh_ah_noSlide>)]) ([(<any_Cx_z_zh_g_r> z)] | [(z <any_Cx_z_zh_g_r>)])) (ah | ((<any_Vx_z_zh_ah_noSlide> z) | (z <any_Vx_z_zh_ah_noSlide>)))) (([(<any_Cx_zh_z_g> zh)] | [(zh <any_Cx_zh_z_g>)]) (g | ((<any_Cx_zh_z_g> zh) | (zh <any_Cx_zh_z_g>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_zh_g_d> d)] | [(d <any_Cx_zh_g_d>)]) sil))
Considering guard zh with value 1 for g ...
Considering guard sh with value 1 for g ...
Considering guard z with value 1 for g ...
candidateGuards = map[sh:true z:true zh:true]
Picking guard, zh

frate, target rule = 91 public <hearthrug> = (((sil [((b <any_Cx_hh_b_b>) | (<any_Cx_hh_b_b> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]) | (sil b (sil [((b <any_Cx_hh_b_b>) | (<any_Cx_hh_b_b> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]))) (([(<any_Cx_z_b_b_hh> z)] | [(z <any_Cx_z_b_b_hh>)]) (hh | ((<any_Cx_z_b_b_hh> z) | (z <any_Cx_z_b_b_hh>)))) ((([(<any_Vx_jh_z_aa_noSlide> jh)] | [(jh <any_Vx_jh_z_aa_noSlide>)]) ([(<any_Cx_jh_z_thr_hh> jh)] | [(jh <any_Cx_jh_z_thr_hh>)])) (aa | ((<any_Vx_jh_z_aa_noSlide> jh) | (jh <any_Vx_jh_z_aa_noSlide>)))) (([(<any_Cx_zh_jh_thr> zh)] | [(zh <any_Cx_zh_jh_thr>)]) (thr | ((<any_Cx_zh_jh_thr> zh) | (zh <any_Cx_zh_jh_thr>)))) ((([(<any_Vx_zh_zh_ah_noSlide> zh)] | [(zh <any_Vx_zh_zh_ah_noSlide>)]) ([(<any_Cx_zh_zh_g_thr> zh)] | [(zh <any_Cx_zh_zh_g_thr>)])) (ah | ((<any_Vx_zh_zh_ah_noSlide> zh) | (zh <any_Vx_zh_zh_ah_noSlide>)))) (([(<any_Cx_zh_zh_g> zh)] | [(zh <any_Cx_zh_zh_g>)]) (g | ((<any_Cx_zh_zh_g> zh) | (zh <any_Cx_zh_zh_g>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_zh_g_hh> hh)] | [(hh <any_Cx_zh_g_hh>)]) sil))
Running scan for frate = 80
Considering guard z with value 1 for hh ...
candidateGuards = map[z:true]
Picking guard, z

Running scan for frate = 80
Considering guard z with value 1 for hh ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard y with value 8 for aa ...
Considering guard ng with value 8 for aa ...
Considering guard ch with value 8 for aa ...
Considering guard sh with value 8 for aa ...
Considering guard jh with value 8 for aa ...
Considering guard zh with value 8 for aa ...
candidateGuards = map[ch:true jh:true ng:true sh:true y:true zh:true]
Picking guard, sh

Considering guard zh with value 4 for thr ...
Considering guard jh with value 4 for thr ...
candidateGuards = map[jh:true zh:true]
Picking guard, zh

Considering guard ng with value 8 for aa ...
Considering guard jh with value 8 for aa ...
Considering guard y with value 8 for aa ...
Considering guard zh with value 8 for aa ...
Considering guard ch with value 8 for aa ...
Considering guard sh with value 8 for aa ...
candidateGuards = map[ch:true jh:true ng:true sh:true y:true zh:true]
Picking guard, y

Considering guard zh with value 4 for ah ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for th ...
Considering guard ng with value 2 for th ...
candidateGuards = map[ng:true zh:true]
Picking guard, zh

Considering guard zh with value 4 for r ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard z with value 1 for g ...
Considering guard sh with value 1 for g ...
Considering guard zh with value 1 for g ...
candidateGuards = map[sh:true z:true zh:true]
Picking guard, z

Considering guard z with value 2 for ah ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard sh with value 1 for g ...
Considering guard zh with value 1 for g ...
Considering guard z with value 1 for g ...
candidateGuards = map[sh:true z:true zh:true]
Picking guard, sh

frate, target rule = 80 public <hearthrug> = (((sil [((z <any_Cx_hh_z_b>) | (<any_Cx_hh_z_b> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil b (sil [((z <any_Cx_hh_z_b>) | (<any_Cx_hh_z_b> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_z_b_z_hh> z)] | [(z <any_Cx_z_b_z_hh>)]) (hh | ((<any_Cx_z_b_z_hh> z) | (z <any_Cx_z_b_z_hh>)))) ((([(<any_Vx_sh_z_aa_noSlide> sh)] | [(sh <any_Vx_sh_z_aa_noSlide>)]) ([(<any_Cx_sh_z_thr_hh> sh)] | [(sh <any_Cx_sh_z_thr_hh>)])) (aa | ((<any_Vx_sh_z_aa_noSlide> sh) | (sh <any_Vx_sh_z_aa_noSlide>)))) (([(<any_Cx_zh_sh_thr> zh)] | [(zh <any_Cx_zh_sh_thr>)]) (thr | ((<any_Cx_zh_sh_thr> zh) | (zh <any_Cx_zh_sh_thr>)))) ((([(<any_Vx_zh_zh_ah_noSlide> zh)] | [(zh <any_Vx_zh_zh_ah_noSlide>)]) ([(<any_Cx_zh_zh_g_thr> zh)] | [(zh <any_Cx_zh_zh_g_thr>)])) (ah | ((<any_Vx_zh_zh_ah_noSlide> zh) | (zh <any_Vx_zh_zh_ah_noSlide>)))) (([(<any_Cx_z_zh_g> z)] | [(z <any_Cx_z_zh_g>)]) (g | ((<any_Cx_z_zh_g> z) | (z <any_Cx_z_zh_g>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_z_g_thr> thr)] | [(thr <any_Cx_z_g_thr>)]) sil))
frate, target rule = 80 public <hearthrug> = (((sil [((z <any_Cx_hh_z_b>) | (<any_Cx_hh_z_b> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil b (sil [((z <any_Cx_hh_z_b>) | (<any_Cx_hh_z_b> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_z_b_z_hh> z)] | [(z <any_Cx_z_b_z_hh>)]) (hh | ((<any_Cx_z_b_z_hh> z) | (z <any_Cx_z_b_z_hh>)))) ((([(<any_Vx_y_z_aa_noSlide> y)] | [(y <any_Vx_y_z_aa_noSlide>)]) ([(<any_Cx_y_z_th_hh> y)] | [(y <any_Cx_y_z_th_hh>)])) (aa | ((<any_Vx_y_z_aa_noSlide> y) | (y <any_Vx_y_z_aa_noSlide>)))) (([(<any_Cx_zh_y_th_r> zh)] | [(zh <any_Cx_zh_y_th_r>)]) (th | ((<any_Cx_zh_y_th_r> zh) | (zh <any_Cx_zh_y_th_r>)))) (([(<any_Cx_zh_zh_r_th> zh)] | [(zh <any_Cx_zh_zh_r_th>)]) (r | ((<any_Cx_zh_zh_r_th> zh) | (zh <any_Cx_zh_zh_r_th>)))) ((([(<any_Vx_z_zh_ah_noSlide> z)] | [(z <any_Vx_z_zh_ah_noSlide>)]) ([(<any_Cx_z_zh_g_r> z)] | [(z <any_Cx_z_zh_g_r>)])) (ah | ((<any_Vx_z_zh_ah_noSlide> z) | (z <any_Vx_z_zh_ah_noSlide>)))) (([(<any_Cx_sh_z_g> sh)] | [(sh <any_Cx_sh_z_g>)]) (g | ((<any_Cx_sh_z_g> sh) | (sh <any_Cx_sh_z_g>)))) (([(<any_vowel_noSlide> y)] | [(y <any_vowel_noSlide>)]) ([(<any_Cx_sh_g_y> y)] | [(y <any_Cx_sh_g_y>)]) sil))
Running scan for frate = 72
Considering guard z with value 1 for hh ...
candidateGuards = map[z:true]
Picking guard, z

Running scan for frate = 72
Considering guard ng with value 8 for aa ...
Considering guard sh with value 8 for aa ...
Considering guard zh with value 8 for aa ...
Considering guard y with value 8 for aa ...
Considering guard jh with value 8 for aa ...
Considering guard ch with value 8 for aa ...
candidateGuards = map[ch:true jh:true ng:true sh:true y:true zh:true]
Picking guard, zh

Considering guard zh with value 4 for thr ...
Considering guard jh with value 4 for thr ...
candidateGuards = map[jh:true zh:true]
Picking guard, jh

Considering guard z with value 1 for hh ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard zh with value 4 for ah ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for g ...
Considering guard sh with value 1 for g ...
Considering guard z with value 1 for g ...
candidateGuards = map[sh:true z:true zh:true]
Picking guard, zh

Considering guard ng with value 8 for aa ...
Considering guard sh with value 8 for aa ...
Considering guard y with value 8 for aa ...
Considering guard zh with value 8 for aa ...
Considering guard ch with value 8 for aa ...
Considering guard jh with value 8 for aa ...
candidateGuards = map[ch:true jh:true ng:true sh:true y:true zh:true]
Picking guard, ng

frate, target rule = 72 public <hearthrug> = (((sil [((z <any_Cx_hh_z_b>) | (<any_Cx_hh_z_b> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil b (sil [((z <any_Cx_hh_z_b>) | (<any_Cx_hh_z_b> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_z_b_z_hh> z)] | [(z <any_Cx_z_b_z_hh>)]) (hh | ((<any_Cx_z_b_z_hh> z) | (z <any_Cx_z_b_z_hh>)))) ((([(<any_Vx_zh_z_aa_noSlide> zh)] | [(zh <any_Vx_zh_z_aa_noSlide>)]) ([(<any_Cx_zh_z_thr_hh> zh)] | [(zh <any_Cx_zh_z_thr_hh>)])) (aa | ((<any_Vx_zh_z_aa_noSlide> zh) | (zh <any_Vx_zh_z_aa_noSlide>)))) (([(<any_Cx_jh_zh_thr> jh)] | [(jh <any_Cx_jh_zh_thr>)]) (thr | ((<any_Cx_jh_zh_thr> jh) | (jh <any_Cx_jh_zh_thr>)))) ((([(<any_Vx_zh_jh_ah_noSlide> zh)] | [(zh <any_Vx_zh_jh_ah_noSlide>)]) ([(<any_Cx_zh_jh_g_thr> zh)] | [(zh <any_Cx_zh_jh_g_thr>)])) (ah | ((<any_Vx_zh_jh_ah_noSlide> zh) | (zh <any_Vx_zh_jh_ah_noSlide>)))) (([(<any_Cx_zh_zh_g> zh)] | [(zh <any_Cx_zh_zh_g>)]) (g | ((<any_Cx_zh_zh_g> zh) | (zh <any_Cx_zh_zh_g>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_zh_g_d> d)] | [(d <any_Cx_zh_g_d>)]) sil))
Considering guard ng with value 2 for th ...
Considering guard zh with value 2 for th ...
candidateGuards = map[ng:true zh:true]
Picking guard, ng

Considering guard zh with value 4 for r ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard z with value 2 for ah ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard zh with value 1 for g ...
Considering guard z with value 1 for g ...
Considering guard sh with value 1 for g ...
candidateGuards = map[sh:true z:true zh:true]
Picking guard, zh

frate, target rule = 72 public <hearthrug> = (((sil [((b <any_Cx_hh_b_b>) | (<any_Cx_hh_b_b> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]) | (sil b (sil [((b <any_Cx_hh_b_b>) | (<any_Cx_hh_b_b> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]))) (([(<any_Cx_z_b_b_hh> z)] | [(z <any_Cx_z_b_b_hh>)]) (hh | ((<any_Cx_z_b_b_hh> z) | (z <any_Cx_z_b_b_hh>)))) ((([(<any_Vx_ng_z_aa_noSlide> ng)] | [(ng <any_Vx_ng_z_aa_noSlide>)]) ([(<any_Cx_ng_z_th_hh> ng)] | [(ng <any_Cx_ng_z_th_hh>)])) (aa | ((<any_Vx_ng_z_aa_noSlide> ng) | (ng <any_Vx_ng_z_aa_noSlide>)))) (([(<any_Cx_ng_ng_th_r> ng)] | [(ng <any_Cx_ng_ng_th_r>)]) (th | ((<any_Cx_ng_ng_th_r> ng) | (ng <any_Cx_ng_ng_th_r>)))) (([(<any_Cx_zh_ng_r_th> zh)] | [(zh <any_Cx_zh_ng_r_th>)]) (r | ((<any_Cx_zh_ng_r_th> zh) | (zh <any_Cx_zh_ng_r_th>)))) ((([(<any_Vx_z_zh_ah_noSlide> z)] | [(z <any_Vx_z_zh_ah_noSlide>)]) ([(<any_Cx_z_zh_g_r> z)] | [(z <any_Cx_z_zh_g_r>)])) (ah | ((<any_Vx_z_zh_ah_noSlide> z) | (z <any_Vx_z_zh_ah_noSlide>)))) (([(<any_Cx_zh_z_g> zh)] | [(zh <any_Cx_zh_z_g>)]) (g | ((<any_Cx_zh_z_g> zh) | (zh <any_Cx_zh_z_g>)))) (([(<any_vowel_noSlide> y)] | [(y <any_vowel_noSlide>)]) ([(<any_Cx_zh_g_y> y)] | [(y <any_Cx_zh_g_y>)]) sil))

results =
{72 [{sil 73 76} {z 77 82} {w 83 96} {aa 97 110} {jh 111 113} {v 114 118} {ah 119 125} {g 126 128} {sil 129 148}]}
{80 []}
{91 [{sil 0 4} {z 5 14} {w 15 30} {aa 31 50} {zh 51 53} {b 54 57} {ah 58 60} {g 61 63} {sil 64 101}]}
{105 [{sil 0 2} {z 3 16} {w 17 35} {aa 36 54} {jh 55 57} {v 58 66} {ah 67 82} {g 83 90} {sil 91 118}]}
{125 [{sil 3 18} {z 19 21} {w 22 42} {aa 43 60} {l 61 74} {zh 75 77} {ah 78 93} {g 94 111} {sil 112 141}]}

normalised results =
{72 [{sil 73 76} {z 107 114} {w 115 133} {aa 135 153} {jh 154 154} {v 158 164} {ah 165 174} {g 175 175} {sil 179 206}]}
{80 []}
{91 [{sil 0 4} {z 5 15} {w 16 33} {aa 34 55} {zh 56 56} {b 59 63} {ah 64 64} {g 67 67} {sil 70 111}]}
{105 [{sil 0 2} {z 3 15} {w 16 33} {aa 34 51} {jh 52 52} {v 55 63} {ah 64 78} {g 79 86} {sil 87 112}]}
{125 [{sil 3 18} {z 15 15} {w 18 34} {aa 34 48} {l 49 59} {zh 60 60} {ah 62 74} {g 75 89} {sil 90 113}]}

Mapped result =
result 0 =
start: 0 end: 0 phonemeFound: false
start: 1 end: 2 phonemeFound: false
start: 3 end: 3 phonemeFound: true
start: 4 end: 5 phonemeFound: false
start: 6 end: 6 phonemeFound: true
start: 7 end: 7 phonemeFound: true
start: 8 end: 8 phonemeFound: false
result 1 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 2 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 3 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 4 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false

Rules =
rule 0 =
Trapped opening rule:
trap: b
rule: {b}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Cx_hh_z_b {[{d} {zh} {dh} {ch} {g} {v} {l} {w} {m}]}}}]} {[{{any_Cx_hh_z_b {[{d} {zh} {dh} {ch} {g} {v} {l} {w} {m}]}}} {z}]}]}} {{[{[{z} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]} {[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {z}]}]}}]}}
Phoneme rule:
guard: z phoneme: hh
rule: {[{[{{[{{any_Cx_z_b_z_hh {[{m} {zh} {g} {v} {w} {dh} {d} {ch} {l}]}}} {z}]}} {{[{z} {{any_Cx_z_b_z_hh {[{m} {zh} {g} {v} {w} {dh} {d} {ch} {l}]}}}]}}]} {[{hh} {[{[{{any_Cx_z_b_z_hh {[{m} {zh} {g} {v} {w} {dh} {d} {ch} {l}]}}} {z}]} {[{z} {{any_Cx_z_b_z_hh {[{m} {zh} {g} {v} {w} {dh} {d} {ch} {l}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: aa
rule: {[{[{[{{[{{any_Vx_zh_z_aa_noSlide {[{ax} {eh} {uw} {ae} {ih} {iy} {ah} {ao} {oh} {uh} {y}]}}} {zh}]}} {{[{zh} {{any_Vx_zh_z_aa_noSlide {[{ax} {eh} {uw} {ae} {ih} {iy} {ah} {ao} {oh} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_zh_z_thr_hh {[{v} {d} {w} {b} {ch} {dh} {g} {l} {m}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_z_thr_hh {[{v} {d} {w} {b} {ch} {dh} {g} {l} {m}]}}}]}}]}]} {[{aa} {[{[{{any_Vx_zh_z_aa_noSlide {[{ax} {eh} {uw} {ae} {ih} {iy} {ah} {ao} {oh} {uh} {y}]}}} {zh}]} {[{zh} {{any_Vx_zh_z_aa_noSlide {[{ax} {eh} {uw} {ae} {ih} {iy} {ah} {ao} {oh} {uh} {y}]}}}]}]}]}]}
Phoneme rule:
guard: jh phoneme: thr
rule: {[{[{{[{{any_Cx_jh_zh_thr {[{l} {w} {hh} {d} {z} {m} {v} {b} {ch} {dh} {g}]}}} {jh}]}} {{[{jh} {{any_Cx_jh_zh_thr {[{l} {w} {hh} {d} {z} {m} {v} {b} {ch} {dh} {g}]}}}]}}]} {[{thr} {[{[{{any_Cx_jh_zh_thr {[{l} {w} {hh} {d} {z} {m} {v} {b} {ch} {dh} {g}]}}} {jh}]} {[{jh} {{any_Cx_jh_zh_thr {[{l} {w} {hh} {d} {z} {m} {v} {b} {ch} {dh} {g}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: ah
rule: {[{[{[{{[{{any_Vx_zh_jh_ah_noSlide {[{ax} {ih} {uw} {uh} {ao} {oh} {eh} {iy} {y} {aa} {ae}]}}} {zh}]}} {{[{zh} {{any_Vx_zh_jh_ah_noSlide {[{ax} {ih} {uw} {uh} {ao} {oh} {eh} {iy} {y} {aa} {ae}]}}}]}}]} {[{{[{{any_Cx_zh_jh_g_thr {[{dh} {b} {m} {z} {ch} {v} {hh} {d} {l} {w}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_jh_g_thr {[{dh} {b} {m} {z} {ch} {v} {hh} {d} {l} {w}]}}}]}}]}]} {[{ah} {[{[{{any_Vx_zh_jh_ah_noSlide {[{ax} {ih} {uw} {uh} {ao} {oh} {eh} {iy} {y} {aa} {ae}]}}} {zh}]} {[{zh} {{any_Vx_zh_jh_ah_noSlide {[{ax} {ih} {uw} {uh} {ao} {oh} {eh} {iy} {y} {aa} {ae}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: g
rule: {[{[{{[{{any_Cx_zh_zh_g {[{z} {ch} {m} {b} {w} {v} {d} {l} {hh} {dh}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_g {[{z} {ch} {m} {b} {w} {v} {d} {l} {hh} {dh}]}}}]}}]} {[{g} {[{[{{any_Cx_zh_zh_g {[{z} {ch} {m} {b} {w} {v} {d} {l} {hh} {dh}]}}} {zh}]} {[{zh} {{any_Cx_zh_zh_g {[{z} {ch} {m} {b} {w} {v} {d} {l} {hh} {dh}]}}}]}]}]}]}
Closing rule:
guard: d
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {d}]}} {{[{d} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_zh_g_d {[{dh} {hh} {w} {v} {ch} {z} {l} {b} {m}]}}} {d}]}} {{[{d} {{any_Cx_zh_g_d {[{dh} {hh} {w} {v} {ch} {z} {l} {b} {m}]}}}]}}]} {sil}]}
rule 1 =
Trapped opening rule:
trap: b
rule: {b}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Cx_hh_z_b {[{dh} {g} {l} {w} {m} {d} {ch} {v} {zh}]}}}]} {[{{any_Cx_hh_z_b {[{dh} {g} {l} {w} {m} {d} {ch} {v} {zh}]}}} {z}]}]}} {{[{[{z} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]} {[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {z}]}]}}]}}
Phoneme rule:
guard: z phoneme: hh
rule: {[{[{{[{{any_Cx_z_b_z_hh {[{dh} {w} {ch} {d} {g} {l} {zh} {m} {v}]}}} {z}]}} {{[{z} {{any_Cx_z_b_z_hh {[{dh} {w} {ch} {d} {g} {l} {zh} {m} {v}]}}}]}}]} {[{hh} {[{[{{any_Cx_z_b_z_hh {[{dh} {w} {ch} {d} {g} {l} {zh} {m} {v}]}}} {z}]} {[{z} {{any_Cx_z_b_z_hh {[{dh} {w} {ch} {d} {g} {l} {zh} {m} {v}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: aa
rule: {[{[{[{{[{{any_Vx_sh_z_aa_noSlide {[{eh} {ao} {ah} {y} {ax} {ih} {iy} {oh} {uw} {uh} {ae}]}}} {sh}]}} {{[{sh} {{any_Vx_sh_z_aa_noSlide {[{eh} {ao} {ah} {y} {ax} {ih} {iy} {oh} {uw} {uh} {ae}]}}}]}}]} {[{{[{{any_Cx_sh_z_thr_hh {[{d} {g} {l} {w} {m} {v} {zh} {b} {ch} {dh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_z_thr_hh {[{d} {g} {l} {w} {m} {v} {zh} {b} {ch} {dh}]}}}]}}]}]} {[{aa} {[{[{{any_Vx_sh_z_aa_noSlide {[{eh} {ao} {ah} {y} {ax} {ih} {iy} {oh} {uw} {uh} {ae}]}}} {sh}]} {[{sh} {{any_Vx_sh_z_aa_noSlide {[{eh} {ao} {ah} {y} {ax} {ih} {iy} {oh} {uw} {uh} {ae}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: thr
rule: {[{[{{[{{any_Cx_zh_sh_thr {[{ch} {g} {l} {d} {b} {m} {v} {z} {dh} {hh} {w}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_sh_thr {[{ch} {g} {l} {d} {b} {m} {v} {z} {dh} {hh} {w}]}}}]}}]} {[{thr} {[{[{{any_Cx_zh_sh_thr {[{ch} {g} {l} {d} {b} {m} {v} {z} {dh} {hh} {w}]}}} {zh}]} {[{zh} {{any_Cx_zh_sh_thr {[{ch} {g} {l} {d} {b} {m} {v} {z} {dh} {hh} {w}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: ah
rule: {[{[{[{{[{{any_Vx_zh_zh_ah_noSlide {[{ao} {ax} {eh} {ih} {iy} {uw} {aa} {oh} {uh} {y} {ae}]}}} {zh}]}} {{[{zh} {{any_Vx_zh_zh_ah_noSlide {[{ao} {ax} {eh} {ih} {iy} {uw} {aa} {oh} {uh} {y} {ae}]}}}]}}]} {[{{[{{any_Cx_zh_zh_g_thr {[{b} {ch} {m} {dh} {l} {v} {w} {z} {hh} {d}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_g_thr {[{b} {ch} {m} {dh} {l} {v} {w} {z} {hh} {d}]}}}]}}]}]} {[{ah} {[{[{{any_Vx_zh_zh_ah_noSlide {[{ao} {ax} {eh} {ih} {iy} {uw} {aa} {oh} {uh} {y} {ae}]}}} {zh}]} {[{zh} {{any_Vx_zh_zh_ah_noSlide {[{ao} {ax} {eh} {ih} {iy} {uw} {aa} {oh} {uh} {y} {ae}]}}}]}]}]}]}
Phoneme rule:
guard: z phoneme: g
rule: {[{[{{[{{any_Cx_z_zh_g {[{m} {ch} {hh} {b} {d} {dh} {v} {l} {w}]}}} {z}]}} {{[{z} {{any_Cx_z_zh_g {[{m} {ch} {hh} {b} {d} {dh} {v} {l} {w}]}}}]}}]} {[{g} {[{[{{any_Cx_z_zh_g {[{m} {ch} {hh} {b} {d} {dh} {v} {l} {w}]}}} {z}]} {[{z} {{any_Cx_z_zh_g {[{m} {ch} {hh} {b} {d} {dh} {v} {l} {w}]}}}]}]}]}]}
Closing rule:
guard: thr
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {thr}]}} {{[{thr} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_z_g_thr {[{l} {ch} {b} {d} {v} {w} {zh} {dh} {hh} {m}]}}} {thr}]}} {{[{thr} {{any_Cx_z_g_thr {[{l} {ch} {b} {d} {v} {w} {zh} {dh} {hh} {m}]}}}]}}]} {sil}]}
rule 2 =
Trapped opening rule:
trap: b
rule: {b}
Opening rule:
guard: b
rule: {b {[{sil} {{[{[{b} {{any_Cx_hh_b_b {[{zh} {ch} {m} {dh} {g} {d} {l} {z} {w} {v}]}}}]} {[{{any_Cx_hh_b_b {[{zh} {ch} {m} {dh} {g} {d} {l} {z} {w} {v}]}}} {b}]}]}} {{[{[{b} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]} {[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {b}]}]}}]}}
Phoneme rule:
guard: z phoneme: hh
rule: {[{[{{[{{any_Cx_z_b_b_hh {[{d} {l} {v} {zh} {w} {dh} {g} {ch} {m}]}}} {z}]}} {{[{z} {{any_Cx_z_b_b_hh {[{d} {l} {v} {zh} {w} {dh} {g} {ch} {m}]}}}]}}]} {[{hh} {[{[{{any_Cx_z_b_b_hh {[{d} {l} {v} {zh} {w} {dh} {g} {ch} {m}]}}} {z}]} {[{z} {{any_Cx_z_b_b_hh {[{d} {l} {v} {zh} {w} {dh} {g} {ch} {m}]}}}]}]}]}]}
Phoneme rule:
guard: jh phoneme: aa
rule: {[{[{[{{[{{any_Vx_jh_z_aa_noSlide {[{uw} {y} {ah} {eh} {uh} {ao} {oh} {ax} {iy} {ih} {ae}]}}} {jh}]}} {{[{jh} {{any_Vx_jh_z_aa_noSlide {[{uw} {y} {ah} {eh} {uh} {ao} {oh} {ax} {iy} {ih} {ae}]}}}]}}]} {[{{[{{any_Cx_jh_z_thr_hh {[{m} {zh} {w} {l} {b} {ch} {g} {d} {dh} {v}]}}} {jh}]}} {{[{jh} {{any_Cx_jh_z_thr_hh {[{m} {zh} {w} {l} {b} {ch} {g} {d} {dh} {v}]}}}]}}]}]} {[{aa} {[{[{{any_Vx_jh_z_aa_noSlide {[{uw} {y} {ah} {eh} {uh} {ao} {oh} {ax} {iy} {ih} {ae}]}}} {jh}]} {[{jh} {{any_Vx_jh_z_aa_noSlide {[{uw} {y} {ah} {eh} {uh} {ao} {oh} {ax} {iy} {ih} {ae}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: thr
rule: {[{[{{[{{any_Cx_zh_jh_thr {[{w} {hh} {m} {v} {dh} {b} {ch} {l} {d} {g} {z}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_jh_thr {[{w} {hh} {m} {v} {dh} {b} {ch} {l} {d} {g} {z}]}}}]}}]} {[{thr} {[{[{{any_Cx_zh_jh_thr {[{w} {hh} {m} {v} {dh} {b} {ch} {l} {d} {g} {z}]}}} {zh}]} {[{zh} {{any_Cx_zh_jh_thr {[{w} {hh} {m} {v} {dh} {b} {ch} {l} {d} {g} {z}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: ah
rule: {[{[{[{{[{{any_Vx_zh_zh_ah_noSlide {[{aa} {ae} {iy} {oh} {uw} {y} {ao} {ax} {eh} {ih} {uh}]}}} {zh}]}} {{[{zh} {{any_Vx_zh_zh_ah_noSlide {[{aa} {ae} {iy} {oh} {uw} {y} {ao} {ax} {eh} {ih} {uh}]}}}]}}]} {[{{[{{any_Cx_zh_zh_g_thr {[{d} {z} {b} {hh} {ch} {dh} {m} {v} {l} {w}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_g_thr {[{d} {z} {b} {hh} {ch} {dh} {m} {v} {l} {w}]}}}]}}]}]} {[{ah} {[{[{{any_Vx_zh_zh_ah_noSlide {[{aa} {ae} {iy} {oh} {uw} {y} {ao} {ax} {eh} {ih} {uh}]}}} {zh}]} {[{zh} {{any_Vx_zh_zh_ah_noSlide {[{aa} {ae} {iy} {oh} {uw} {y} {ao} {ax} {eh} {ih} {uh}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: g
rule: {[{[{{[{{any_Cx_zh_zh_g {[{dh} {v} {m} {hh} {l} {ch} {d} {z} {w} {b}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_g {[{dh} {v} {m} {hh} {l} {ch} {d} {z} {w} {b}]}}}]}}]} {[{g} {[{[{{any_Cx_zh_zh_g {[{dh} {v} {m} {hh} {l} {ch} {d} {z} {w} {b}]}}} {zh}]} {[{zh} {{any_Cx_zh_zh_g {[{dh} {v} {m} {hh} {l} {ch} {d} {z} {w} {b}]}}}]}]}]}]}
Closing rule:
guard: hh
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {hh}]}} {{[{hh} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_zh_g_hh {[{b} {m} {v} {dh} {l} {z} {ch} {d} {w}]}}} {hh}]}} {{[{hh} {{any_Cx_zh_g_hh {[{b} {m} {v} {dh} {l} {z} {ch} {d} {w}]}}}]}}]} {sil}]}
rule 3 =
Trapped opening rule:
trap: b
rule: {b}
Opening rule:
guard: iy
rule: {iy {[{sil} {{[{[{iy} {{any_Cx_hh_iy_b {[{g} {z} {v} {ch} {dh} {m} {w} {zh} {d} {l}]}}}]} {[{{any_Cx_hh_iy_b {[{g} {z} {v} {ch} {dh} {m} {w} {zh} {d} {l}]}}} {iy}]}]}} {{[{[{iy} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]} {[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {iy}]}]}}]}}
Phoneme rule:
guard: z phoneme: hh
rule: {[{[{{[{{any_Cx_z_b_iy_hh {[{m} {v} {w} {ch} {g} {dh} {l} {zh} {d}]}}} {z}]}} {{[{z} {{any_Cx_z_b_iy_hh {[{m} {v} {w} {ch} {g} {dh} {l} {zh} {d}]}}}]}}]} {[{hh} {[{[{{any_Cx_z_b_iy_hh {[{m} {v} {w} {ch} {g} {dh} {l} {zh} {d}]}}} {z}]} {[{z} {{any_Cx_z_b_iy_hh {[{m} {v} {w} {ch} {g} {dh} {l} {zh} {d}]}}}]}]}]}]}
Phoneme rule:
guard: ng phoneme: aa
rule: {[{[{[{{[{{any_Vx_ng_z_aa_noSlide {[{iy} {oh} {uh} {ah} {ao} {ax} {ih} {ae} {eh} {uw} {y}]}}} {ng}]}} {{[{ng} {{any_Vx_ng_z_aa_noSlide {[{iy} {oh} {uh} {ah} {ao} {ax} {ih} {ae} {eh} {uw} {y}]}}}]}}]} {[{{[{{any_Cx_ng_z_thr_hh {[{g} {ch} {m} {b} {d} {l} {dh} {w} {v} {zh}]}}} {ng}]}} {{[{ng} {{any_Cx_ng_z_thr_hh {[{g} {ch} {m} {b} {d} {l} {dh} {w} {v} {zh}]}}}]}}]}]} {[{aa} {[{[{{any_Vx_ng_z_aa_noSlide {[{iy} {oh} {uh} {ah} {ao} {ax} {ih} {ae} {eh} {uw} {y}]}}} {ng}]} {[{ng} {{any_Vx_ng_z_aa_noSlide {[{iy} {oh} {uh} {ah} {ao} {ax} {ih} {ae} {eh} {uw} {y}]}}}]}]}]}]}
Phoneme rule:
guard: jh phoneme: thr
rule: {[{[{{[{{any_Cx_jh_ng_thr {[{w} {d} {dh} {b} {l} {zh} {g} {v} {ch} {hh} {m} {z}]}}} {jh}]}} {{[{jh} {{any_Cx_jh_ng_thr {[{w} {d} {dh} {b} {l} {zh} {g} {v} {ch} {hh} {m} {z}]}}}]}}]} {[{thr} {[{[{{any_Cx_jh_ng_thr {[{w} {d} {dh} {b} {l} {zh} {g} {v} {ch} {hh} {m} {z}]}}} {jh}]} {[{jh} {{any_Cx_jh_ng_thr {[{w} {d} {dh} {b} {l} {zh} {g} {v} {ch} {hh} {m} {z}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: ah
rule: {[{[{[{{[{{any_Vx_zh_jh_ah_noSlide {[{y} {ao} {oh} {uh} {ih} {iy} {ae} {ax} {eh} {uw} {aa}]}}} {zh}]}} {{[{zh} {{any_Vx_zh_jh_ah_noSlide {[{y} {ao} {oh} {uh} {ih} {iy} {ae} {ax} {eh} {uw} {aa}]}}}]}}]} {[{{[{{any_Cx_zh_jh_g_thr {[{v} {z} {ch} {m} {hh} {l} {w} {b} {d} {dh}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_jh_g_thr {[{v} {z} {ch} {m} {hh} {l} {w} {b} {d} {dh}]}}}]}}]}]} {[{ah} {[{[{{any_Vx_zh_jh_ah_noSlide {[{y} {ao} {oh} {uh} {ih} {iy} {ae} {ax} {eh} {uw} {aa}]}}} {zh}]} {[{zh} {{any_Vx_zh_jh_ah_noSlide {[{y} {ao} {oh} {uh} {ih} {iy} {ae} {ax} {eh} {uw} {aa}]}}}]}]}]}]}
Phoneme rule:
guard: z phoneme: g
rule: {[{[{{[{{any_Cx_z_zh_g {[{d} {dh} {b} {hh} {m} {v} {l} {w} {ch}]}}} {z}]}} {{[{z} {{any_Cx_z_zh_g {[{d} {dh} {b} {hh} {m} {v} {l} {w} {ch}]}}}]}}]} {[{g} {[{[{{any_Cx_z_zh_g {[{d} {dh} {b} {hh} {m} {v} {l} {w} {ch}]}}} {z}]} {[{z} {{any_Cx_z_zh_g {[{d} {dh} {b} {hh} {m} {v} {l} {w} {ch}]}}}]}]}]}]}
Closing rule:
guard: thr
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {thr}]}} {{[{thr} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_z_g_thr {[{w} {d} {dh} {ch} {v} {b} {hh} {l} {m} {zh}]}}} {thr}]}} {{[{thr} {{any_Cx_z_g_thr {[{w} {d} {dh} {ch} {v} {b} {hh} {l} {m} {zh}]}}}]}}]} {sil}]}
rule 4 =
Trapped opening rule:
trap: b
rule: {b}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Cx_hh_z_b {[{g} {dh} {l} {v} {m} {ch} {w} {zh} {d}]}}}]} {[{{any_Cx_hh_z_b {[{g} {dh} {l} {v} {m} {ch} {w} {zh} {d}]}}} {z}]}]}} {{[{[{z} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]} {[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {z}]}]}}]}}
Phoneme rule:
guard: z phoneme: hh
rule: {[{[{{[{{any_Cx_z_b_z_hh {[{ch} {m} {v} {zh} {d} {dh} {l} {g} {w}]}}} {z}]}} {{[{z} {{any_Cx_z_b_z_hh {[{ch} {m} {v} {zh} {d} {dh} {l} {g} {w}]}}}]}}]} {[{hh} {[{[{{any_Cx_z_b_z_hh {[{ch} {m} {v} {zh} {d} {dh} {l} {g} {w}]}}} {z}]} {[{z} {{any_Cx_z_b_z_hh {[{ch} {m} {v} {zh} {d} {dh} {l} {g} {w}]}}}]}]}]}]}
Phoneme rule:
guard: y phoneme: aa
rule: {[{[{[{{[{{any_Vx_y_z_aa_noSlide {[{ae} {uh} {ih} {iy} {oh} {ah} {ao} {ax} {eh} {uw}]}}} {y}]}} {{[{y} {{any_Vx_y_z_aa_noSlide {[{ae} {uh} {ih} {iy} {oh} {ah} {ao} {ax} {eh} {uw}]}}}]}}]} {[{{[{{any_Cx_y_z_thr_hh {[{g} {l} {v} {w} {b} {d} {dh} {m} {ch} {zh}]}}} {y}]}} {{[{y} {{any_Cx_y_z_thr_hh {[{g} {l} {v} {w} {b} {d} {dh} {m} {ch} {zh}]}}}]}}]}]} {[{aa} {[{[{{any_Vx_y_z_aa_noSlide {[{ae} {uh} {ih} {iy} {oh} {ah} {ao} {ax} {eh} {uw}]}}} {y}]} {[{y} {{any_Vx_y_z_aa_noSlide {[{ae} {uh} {ih} {iy} {oh} {ah} {ao} {ax} {eh} {uw}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: thr
rule: {[{[{{[{{any_Cx_zh_y_thr {[{d} {dh} {hh} {w} {m} {g} {v} {b} {l} {z} {ch}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_y_thr {[{d} {dh} {hh} {w} {m} {g} {v} {b} {l} {z} {ch}]}}}]}}]} {[{thr} {[{[{{any_Cx_zh_y_thr {[{d} {dh} {hh} {w} {m} {g} {v} {b} {l} {z} {ch}]}}} {zh}]} {[{zh} {{any_Cx_zh_y_thr {[{d} {dh} {hh} {w} {m} {g} {v} {b} {l} {z} {ch}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: ah
rule: {[{[{[{{[{{any_Vx_zh_zh_ah_noSlide {[{ae} {uh} {ih} {iy} {oh} {uw} {aa} {ao} {ax} {eh} {y}]}}} {zh}]}} {{[{zh} {{any_Vx_zh_zh_ah_noSlide {[{ae} {uh} {ih} {iy} {oh} {uw} {aa} {ao} {ax} {eh} {y}]}}}]}}]} {[{{[{{any_Cx_zh_zh_g_thr {[{ch} {hh} {b} {d} {l} {v} {m} {dh} {w} {z}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_g_thr {[{ch} {hh} {b} {d} {l} {v} {m} {dh} {w} {z}]}}}]}}]}]} {[{ah} {[{[{{any_Vx_zh_zh_ah_noSlide {[{ae} {uh} {ih} {iy} {oh} {uw} {aa} {ao} {ax} {eh} {y}]}}} {zh}]} {[{zh} {{any_Vx_zh_zh_ah_noSlide {[{ae} {uh} {ih} {iy} {oh} {uw} {aa} {ao} {ax} {eh} {y}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: g
rule: {[{[{{[{{any_Cx_zh_zh_g {[{ch} {l} {m} {b} {hh} {v} {z} {d} {dh} {w}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_g {[{ch} {l} {m} {b} {hh} {v} {z} {d} {dh} {w}]}}}]}}]} {[{g} {[{[{{any_Cx_zh_zh_g {[{ch} {l} {m} {b} {hh} {v} {z} {d} {dh} {w}]}}} {zh}]} {[{zh} {{any_Cx_zh_zh_g {[{ch} {l} {m} {b} {hh} {v} {z} {d} {dh} {w}]}}}]}]}]}]}
Closing rule:
guard: d
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {d}]}} {{[{d} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_zh_g_d {[{ch} {l} {v} {m} {b} {z} {dh} {hh} {w}]}}} {d}]}} {{[{d} {{any_Cx_zh_g_d {[{ch} {l} {v} {m} {b} {z} {dh} {hh} {w}]}}}]}}]} {sil}]}

parse: err = Parser error
ruleAligned = [{{hh 2} []} {{z 3} [{0 1} {2 1} {3 1}]} {{w 3} [{0 2} {2 2} {3 2} {4 2}]} {{aa 0} [{0 3} {2 3} {3 3} {4 3}]} {{thr 2} []} {{ah 1} [{0 6} {3 6} {4 6}]} {{g 2} [{3 7} {4 7}]}]

results (after rule-alignment) =
{72 [{sil 73 73} {z 107 114} {w 115 133} {aa 135 153} {jh 154 154} {v 158 164} {ah 165 174} {g 175 175} {sil 179 179}]}
{80 []}
{91 [{sil 0 0} {z 5 15} {w 16 33} {aa 34 55} {zh 56 56} {b 59 63} {ah 64 64} {g 67 67} {sil 70 70}]}
{105 [{sil 0 0} {z 3 15} {w 16 33} {aa 34 51} {jh 52 52} {v 55 63} {ah 64 78} {g 79 86} {sil 87 87}]}
{125 [{sil 3 3} {z 15 15} {w 18 34} {aa 34 48} {l 49 59} {zh 60 60} {ah 62 74} {g 75 89} {sil 90 90}]}

timeAligned = [{{w 18 33} [{2 2} {3 2} {4 2}]} {{aa 34 48} [{2 3} {3 3} {4 3}]}]

i, iTime, newITime, timeStartFrom = 0 0 -1 0
i, iTime, newITime, timeStartFrom = 1 0 -1 0
i, iTime, newITime, timeStartFrom = 2 0 0 0
i, iTime, newITime, timeStartFrom = 3 0 1 33
i, iTime, newITime, timeStartFrom = 4 1 -1 48
i, iTime, newITime, timeStartFrom = 5 1 -1 48
i, iTime, newITime, timeStartFrom = 6 1 -1 48
combinedVerdict    = [{hh 2} {w 3} {aa 0} {thr 2} {ah 2} {g 2}]
ruleAlignedVerdict = [{hh 2} {z 3} {w 3} {aa 0} {thr 2} {ah 1} {g 2}]

score->
-1 for hh
-1 for w
+1 for aa
-1 for thr
-1 for ah
-1 for g
score<-: -4

results =
{72 [{sil 73 76} {z 77 82} {w 83 96} {aa 97 108} {ng 109 114} {b 115 118} {r 119 121} {ah 122 125} {g 126 128} {sil 129 148}]}
{80 []}
{91 [{sil 0 4} {z 5 14} {w 15 30} {aa 31 44} {ng 45 51} {v 52 54} {r 55 58} {ah 59 70} {g 71 73} {sil 74 101}]}
{105 [{sil 0 2} {z 3 16} {w 17 35} {aa 36 49} {l 50 54} {ng 55 64} {r 65 67} {ah 68 82} {g 83 90} {sil 91 118}]}
{125 [{sil 3 18} {z 19 21} {w 22 42} {aa 43 60} {l 61 66} {ng 67 77} {r 78 81} {ah 82 93} {g 94 111} {sil 112 141}]}

normalised results =
{72 [{sil 73 76} {z 107 114} {w 115 133} {aa 135 150} {ng 151 158} {b 160 164} {r 165 165} {ah 169 174} {g 175 175} {sil 179 206}]}
{80 []}
{91 [{sil 0 4} {z 5 15} {w 16 33} {aa 34 48} {ng 49 56} {v 57 57} {r 60 64} {ah 65 77} {g 78 78} {sil 81 111}]}
{105 [{sil 0 2} {z 3 15} {w 16 33} {aa 34 47} {l 48 51} {ng 52 61} {r 62 62} {ah 65 78} {g 79 86} {sil 87 112}]}
{125 [{sil 3 18} {z 15 15} {w 18 34} {aa 34 48} {l 49 53} {ng 54 62} {r 62 65} {ah 66 74} {g 75 89} {sil 90 113}]}

Mapped result =
result 0 =
start: 0 end: 0 phonemeFound: false
start: 1 end: 2 phonemeFound: false
start: 3 end: 3 phonemeFound: true
start: 4 end: 5 phonemeFound: false
start: 6 end: 6 phonemeFound: true
start: 7 end: 7 phonemeFound: true
start: 8 end: 8 phonemeFound: true
start: 9 end: 9 phonemeFound: false
result 1 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 2 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 3 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 4 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false

Rules =
rule 0 =
Trapped opening rule:
trap: b
rule: {b}
Opening rule:
guard: b
rule: {b {[{sil} {{[{[{b} {{any_Cx_hh_b_b {[{d} {dh} {g} {z} {ch} {l} {w} {zh} {m} {v}]}}}]} {[{{any_Cx_hh_b_b {[{d} {dh} {g} {z} {ch} {l} {w} {zh} {m} {v}]}}} {b}]}]}} {{[{[{b} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]} {[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {b}]}]}}]}}
Phoneme rule:
guard: z phoneme: hh
rule: {[{[{{[{{any_Cx_z_b_b_hh {[{ch} {d} {dh} {v} {l} {m} {w} {zh} {g}]}}} {z}]}} {{[{z} {{any_Cx_z_b_b_hh {[{ch} {d} {dh} {v} {l} {m} {w} {zh} {g}]}}}]}}]} {[{hh} {[{[{{any_Cx_z_b_b_hh {[{ch} {d} {dh} {v} {l} {m} {w} {zh} {g}]}}} {z}]} {[{z} {{any_Cx_z_b_b_hh {[{ch} {d} {dh} {v} {l} {m} {w} {zh} {g}]}}}]}]}]}]}
Phoneme rule:
guard: ng phoneme: aa
rule: {[{[{[{{[{{any_Vx_ng_z_aa_noSlide {[{ax} {ah} {ao} {uw} {ae} {eh} {uh} {y} {iy} {ih} {oh}]}}} {ng}]}} {{[{ng} {{any_Vx_ng_z_aa_noSlide {[{ax} {ah} {ao} {uw} {ae} {eh} {uh} {y} {iy} {ih} {oh}]}}}]}}]} {[{{[{{any_Cx_ng_z_th_hh {[{zh} {m} {ch} {d} {l} {dh} {g} {v} {w} {b}]}}} {ng}]}} {{[{ng} {{any_Cx_ng_z_th_hh {[{zh} {m} {ch} {d} {l} {dh} {g} {v} {w} {b}]}}}]}}]}]} {[{aa} {[{[{{any_Vx_ng_z_aa_noSlide {[{ax} {ah} {ao} {uw} {ae} {eh} {uh} {y} {iy} {ih} {oh}]}}} {ng}]} {[{ng} {{any_Vx_ng_z_aa_noSlide {[{ax} {ah} {ao} {uw} {ae} {eh} {uh} {y} {iy} {ih} {oh}]}}}]}]}]}]}
Phoneme rule:
guard: ng phoneme: th
rule: {[{[{{[{{any_Cx_ng_ng_th_r {[{l} {m} {zh} {g} {ch} {dh} {z} {b} {d} {w} {hh} {v}]}}} {ng}]}} {{[{ng} {{any_Cx_ng_ng_th_r {[{l} {m} {zh} {g} {ch} {dh} {z} {b} {d} {w} {hh} {v}]}}}]}}]} {[{th} {[{[{{any_Cx_ng_ng_th_r {[{l} {m} {zh} {g} {ch} {dh} {z} {b} {d} {w} {hh} {v}]}}} {ng}]} {[{ng} {{any_Cx_ng_ng_th_r {[{l} {m} {zh} {g} {ch} {dh} {z} {b} {d} {w} {hh} {v}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: r
rule: {[{[{{[{{any_Cx_zh_ng_r_th {[{v} {g} {hh} {m} {d} {dh} {b} {w} {l} {ch} {z}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_ng_r_th {[{v} {g} {hh} {m} {d} {dh} {b} {w} {l} {ch} {z}]}}}]}}]} {[{r} {[{[{{any_Cx_zh_ng_r_th {[{v} {g} {hh} {m} {d} {dh} {b} {w} {l} {ch} {z}]}}} {zh}]} {[{zh} {{any_Cx_zh_ng_r_th {[{v} {g} {hh} {m} {d} {dh} {b} {w} {l} {ch} {z}]}}}]}]}]}]}
Phoneme rule:
guard: z phoneme: ah
rule: {[{[{[{{[{{any_Vx_z_zh_ah_noSlide {[{aa} {ao} {ax} {eh} {ih} {uh} {ae} {iy} {uw} {y} {oh}]}}} {z}]}} {{[{z} {{any_Vx_z_zh_ah_noSlide {[{aa} {ao} {ax} {eh} {ih} {uh} {ae} {iy} {uw} {y} {oh}]}}}]}}]} {[{{[{{any_Cx_z_zh_g_r {[{d} {ch} {v} {w} {m} {b} {l} {dh} {hh}]}}} {z}]}} {{[{z} {{any_Cx_z_zh_g_r {[{d} {ch} {v} {w} {m} {b} {l} {dh} {hh}]}}}]}}]}]} {[{ah} {[{[{{any_Vx_z_zh_ah_noSlide {[{aa} {ao} {ax} {eh} {ih} {uh} {ae} {iy} {uw} {y} {oh}]}}} {z}]} {[{z} {{any_Vx_z_zh_ah_noSlide {[{aa} {ao} {ax} {eh} {ih} {uh} {ae} {iy} {uw} {y} {oh}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: g
rule: {[{[{{[{{any_Cx_zh_z_g {[{hh} {ch} {dh} {d} {l} {m} {b} {v} {w}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_z_g {[{hh} {ch} {dh} {d} {l} {m} {b} {v} {w}]}}}]}}]} {[{g} {[{[{{any_Cx_zh_z_g {[{hh} {ch} {dh} {d} {l} {m} {b} {v} {w}]}}} {zh}]} {[{zh} {{any_Cx_zh_z_g {[{hh} {ch} {dh} {d} {l} {m} {b} {v} {w}]}}}]}]}]}]}
Closing rule:
guard: y
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {y}]}} {{[{y} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_zh_g_y {[{hh} {w} {dh} {l} {m} {v} {ch} {z} {b} {d}]}}} {y}]}} {{[{y} {{any_Cx_zh_g_y {[{hh} {w} {dh} {l} {m} {v} {ch} {z} {b} {d}]}}}]}}]} {sil}]}
rule 1 =
Trapped opening rule:
trap: b
rule: {b}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Cx_hh_z_b {[{d} {dh} {v} {zh} {g} {l} {w} {ch} {m}]}}}]} {[{{any_Cx_hh_z_b {[{d} {dh} {v} {zh} {g} {l} {w} {ch} {m}]}}} {z}]}]}} {{[{[{z} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]} {[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {z}]}]}}]}}
Phoneme rule:
guard: z phoneme: hh
rule: {[{[{{[{{any_Cx_z_b_z_hh {[{zh} {l} {g} {ch} {d} {dh} {m} {w} {v}]}}} {z}]}} {{[{z} {{any_Cx_z_b_z_hh {[{zh} {l} {g} {ch} {d} {dh} {m} {w} {v}]}}}]}}]} {[{hh} {[{[{{any_Cx_z_b_z_hh {[{zh} {l} {g} {ch} {d} {dh} {m} {w} {v}]}}} {z}]} {[{z} {{any_Cx_z_b_z_hh {[{zh} {l} {g} {ch} {d} {dh} {m} {w} {v}]}}}]}]}]}]}
Phoneme rule:
guard: y phoneme: aa
rule: {[{[{[{{[{{any_Vx_y_z_aa_noSlide {[{ae} {ah} {ax} {iy} {oh} {uw} {ao} {eh} {ih} {uh}]}}} {y}]}} {{[{y} {{any_Vx_y_z_aa_noSlide {[{ae} {ah} {ax} {iy} {oh} {uw} {ao} {eh} {ih} {uh}]}}}]}}]} {[{{[{{any_Cx_y_z_th_hh {[{dh} {zh} {b} {ch} {m} {v} {l} {w} {d} {g}]}}} {y}]}} {{[{y} {{any_Cx_y_z_th_hh {[{dh} {zh} {b} {ch} {m} {v} {l} {w} {d} {g}]}}}]}}]}]} {[{aa} {[{[{{any_Vx_y_z_aa_noSlide {[{ae} {ah} {ax} {iy} {oh} {uw} {ao} {eh} {ih} {uh}]}}} {y}]} {[{y} {{any_Vx_y_z_aa_noSlide {[{ae} {ah} {ax} {iy} {oh} {uw} {ao} {eh} {ih} {uh}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: th
rule: {[{[{{[{{any_Cx_zh_y_th_r {[{v} {ch} {hh} {l} {b} {z} {d} {dh} {g} {m} {w}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_y_th_r {[{v} {ch} {hh} {l} {b} {z} {d} {dh} {g} {m} {w}]}}}]}}]} {[{th} {[{[{{any_Cx_zh_y_th_r {[{v} {ch} {hh} {l} {b} {z} {d} {dh} {g} {m} {w}]}}} {zh}]} {[{zh} {{any_Cx_zh_y_th_r {[{v} {ch} {hh} {l} {b} {z} {d} {dh} {g} {m} {w}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: r
rule: {[{[{{[{{any_Cx_zh_zh_r_th {[{l} {v} {ch} {dh} {hh} {z} {b} {m} {w} {d} {g}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_r_th {[{l} {v} {ch} {dh} {hh} {z} {b} {m} {w} {d} {g}]}}}]}}]} {[{r} {[{[{{any_Cx_zh_zh_r_th {[{l} {v} {ch} {dh} {hh} {z} {b} {m} {w} {d} {g}]}}} {zh}]} {[{zh} {{any_Cx_zh_zh_r_th {[{l} {v} {ch} {dh} {hh} {z} {b} {m} {w} {d} {g}]}}}]}]}]}]}
Phoneme rule:
guard: z phoneme: ah
rule: {[{[{[{{[{{any_Vx_z_zh_ah_noSlide {[{ih} {ax} {uw} {ao} {oh} {y} {aa} {ae} {eh} {iy} {uh}]}}} {z}]}} {{[{z} {{any_Vx_z_zh_ah_noSlide {[{ih} {ax} {uw} {ao} {oh} {y} {aa} {ae} {eh} {iy} {uh}]}}}]}}]} {[{{[{{any_Cx_z_zh_g_r {[{v} {w} {d} {hh} {l} {dh} {b} {ch} {m}]}}} {z}]}} {{[{z} {{any_Cx_z_zh_g_r {[{v} {w} {d} {hh} {l} {dh} {b} {ch} {m}]}}}]}}]}]} {[{ah} {[{[{{any_Vx_z_zh_ah_noSlide {[{ih} {ax} {uw} {ao} {oh} {y} {aa} {ae} {eh} {iy} {uh}]}}} {z}]} {[{z} {{any_Vx_z_zh_ah_noSlide {[{ih} {ax} {uw} {ao} {oh} {y} {aa} {ae} {eh} {iy} {uh}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: g
rule: {[{[{{[{{any_Cx_sh_z_g {[{v} {hh} {w} {b} {l} {dh} {ch} {m} {zh} {d}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_z_g {[{v} {hh} {w} {b} {l} {dh} {ch} {m} {zh} {d}]}}}]}}]} {[{g} {[{[{{any_Cx_sh_z_g {[{v} {hh} {w} {b} {l} {dh} {ch} {m} {zh} {d}]}}} {sh}]} {[{sh} {{any_Cx_sh_z_g {[{v} {hh} {w} {b} {l} {dh} {ch} {m} {zh} {d}]}}}]}]}]}]}
Closing rule:
guard: y
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {y}]}} {{[{y} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_g_y {[{ch} {z} {w} {v} {l} {zh} {b} {m} {d} {dh} {hh}]}}} {y}]}} {{[{y} {{any_Cx_sh_g_y {[{ch} {z} {w} {v} {l} {zh} {b} {m} {d} {dh} {hh}]}}}]}}]} {sil}]}
rule 2 =
Trapped opening rule:
trap: b
rule: {b}
Opening rule:
guard: b
rule: {b {[{sil} {{[{[{b} {{any_Cx_hh_b_b {[{w} {z} {g} {v} {zh} {d} {l} {m} {ch} {dh}]}}}]} {[{{any_Cx_hh_b_b {[{w} {z} {g} {v} {zh} {d} {l} {m} {ch} {dh}]}}} {b}]}]}} {{[{[{b} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]} {[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {b}]}]}}]}}
Phoneme rule:
guard: z phoneme: hh
rule: {[{[{{[{{any_Cx_z_b_b_hh {[{d} {v} {w} {dh} {l} {zh} {m} {ch} {g}]}}} {z}]}} {{[{z} {{any_Cx_z_b_b_hh {[{d} {v} {w} {dh} {l} {zh} {m} {ch} {g}]}}}]}}]} {[{hh} {[{[{{any_Cx_z_b_b_hh {[{d} {v} {w} {dh} {l} {zh} {m} {ch} {g}]}}} {z}]} {[{z} {{any_Cx_z_b_b_hh {[{d} {v} {w} {dh} {l} {zh} {m} {ch} {g}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: aa
rule: {[{[{[{{[{{any_Vx_sh_z_aa_noSlide {[{ae} {eh} {oh} {uw} {ah} {ax} {iy} {ih} {ao} {uh} {y}]}}} {sh}]}} {{[{sh} {{any_Vx_sh_z_aa_noSlide {[{ae} {eh} {oh} {uw} {ah} {ax} {iy} {ih} {ao} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_z_th_hh {[{ch} {l} {zh} {dh} {g} {b} {w} {m} {d} {v}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_z_th_hh {[{ch} {l} {zh} {dh} {g} {b} {w} {m} {d} {v}]}}}]}}]}]} {[{aa} {[{[{{any_Vx_sh_z_aa_noSlide {[{ae} {eh} {oh} {uw} {ah} {ax} {iy} {ih} {ao} {uh} {y}]}}} {sh}]} {[{sh} {{any_Vx_sh_z_aa_noSlide {[{ae} {eh} {oh} {uw} {ah} {ax} {iy} {ih} {ao} {uh} {y}]}}}]}]}]}]}
Phoneme rule:
guard: ng phoneme: th
rule: {[{[{{[{{any_Cx_ng_sh_th_r {[{b} {l} {m} {zh} {v} {d} {dh} {hh} {w} {ch} {g} {z}]}}} {ng}]}} {{[{ng} {{any_Cx_ng_sh_th_r {[{b} {l} {m} {zh} {v} {d} {dh} {hh} {w} {ch} {g} {z}]}}}]}}]} {[{th} {[{[{{any_Cx_ng_sh_th_r {[{b} {l} {m} {zh} {v} {d} {dh} {hh} {w} {ch} {g} {z}]}}} {ng}]} {[{ng} {{any_Cx_ng_sh_th_r {[{b} {l} {m} {zh} {v} {d} {dh} {hh} {w} {ch} {g} {z}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: r
rule: {[{[{{[{{any_Cx_zh_ng_r_th {[{m} {dh} {g} {l} {v} {d} {ch} {hh} {w} {b} {z}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_ng_r_th {[{m} {dh} {g} {l} {v} {d} {ch} {hh} {w} {b} {z}]}}}]}}]} {[{r} {[{[{{any_Cx_zh_ng_r_th {[{m} {dh} {g} {l} {v} {d} {ch} {hh} {w} {b} {z}]}}} {zh}]} {[{zh} {{any_Cx_zh_ng_r_th {[{m} {dh} {g} {l} {v} {d} {ch} {hh} {w} {b} {z}]}}}]}]}]}]}
Phoneme rule:
guard: z phoneme: ah
rule: {[{[{[{{[{{any_Vx_z_zh_ah_noSlide {[{uw} {iy} {uh} {eh} {oh} {y} {ae} {ao} {aa} {ax} {ih}]}}} {z}]}} {{[{z} {{any_Vx_z_zh_ah_noSlide {[{uw} {iy} {uh} {eh} {oh} {y} {ae} {ao} {aa} {ax} {ih}]}}}]}}]} {[{{[{{any_Cx_z_zh_g_r {[{b} {l} {hh} {ch} {w} {m} {d} {dh} {v}]}}} {z}]}} {{[{z} {{any_Cx_z_zh_g_r {[{b} {l} {hh} {ch} {w} {m} {d} {dh} {v}]}}}]}}]}]} {[{ah} {[{[{{any_Vx_z_zh_ah_noSlide {[{uw} {iy} {uh} {eh} {oh} {y} {ae} {ao} {aa} {ax} {ih}]}}} {z}]} {[{z} {{any_Vx_z_zh_ah_noSlide {[{uw} {iy} {uh} {eh} {oh} {y} {ae} {ao} {aa} {ax} {ih}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: g
rule: {[{[{{[{{any_Cx_zh_z_g {[{dh} {ch} {hh} {b} {l} {v} {w} {d} {m}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_z_g {[{dh} {ch} {hh} {b} {l} {v} {w} {d} {m}]}}}]}}]} {[{g} {[{[{{any_Cx_zh_z_g {[{dh} {ch} {hh} {b} {l} {v} {w} {d} {m}]}}} {zh}]} {[{zh} {{any_Cx_zh_z_g {[{dh} {ch} {hh} {b} {l} {v} {w} {d} {m}]}}}]}]}]}]}
Closing rule:
guard: d
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {d}]}} {{[{d} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_zh_g_d {[{b} {m} {hh} {z} {l} {dh} {ch} {v} {w}]}}} {d}]}} {{[{d} {{any_Cx_zh_g_d {[{b} {m} {hh} {z} {l} {dh} {ch} {v} {w}]}}}]}}]} {sil}]}
rule 3 =
Trapped opening rule:
trap: b
rule: {b}
Opening rule:
guard: iy
rule: {iy {[{sil} {{[{[{iy} {{any_Cx_hh_iy_b {[{dh} {w} {zh} {v} {l} {m} {z} {g} {ch} {d}]}}}]} {[{{any_Cx_hh_iy_b {[{dh} {w} {zh} {v} {l} {m} {z} {g} {ch} {d}]}}} {iy}]}]}} {{[{[{iy} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]} {[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {iy}]}]}}]}}
Phoneme rule:
guard: z phoneme: hh
rule: {[{[{{[{{any_Cx_z_b_iy_hh {[{ch} {l} {g} {v} {zh} {m} {dh} {w} {d}]}}} {z}]}} {{[{z} {{any_Cx_z_b_iy_hh {[{ch} {l} {g} {v} {zh} {m} {dh} {w} {d}]}}}]}}]} {[{hh} {[{[{{any_Cx_z_b_iy_hh {[{ch} {l} {g} {v} {zh} {m} {dh} {w} {d}]}}} {z}]} {[{z} {{any_Cx_z_b_iy_hh {[{ch} {l} {g} {v} {zh} {m} {dh} {w} {d}]}}}]}]}]}]}
Phoneme rule:
guard: jh phoneme: aa
rule: {[{[{[{{[{{any_Vx_jh_z_aa_noSlide {[{ih} {uw} {y} {ae} {ah} {eh} {iy} {uh} {ao} {ax} {oh}]}}} {jh}]}} {{[{jh} {{any_Vx_jh_z_aa_noSlide {[{ih} {uw} {y} {ae} {ah} {eh} {iy} {uh} {ao} {ax} {oh}]}}}]}}]} {[{{[{{any_Cx_jh_z_th_hh {[{l} {v} {zh} {d} {ch} {b} {w} {dh} {g} {m}]}}} {jh}]}} {{[{jh} {{any_Cx_jh_z_th_hh {[{l} {v} {zh} {d} {ch} {b} {w} {dh} {g} {m}]}}}]}}]}]} {[{aa} {[{[{{any_Vx_jh_z_aa_noSlide {[{ih} {uw} {y} {ae} {ah} {eh} {iy} {uh} {ao} {ax} {oh}]}}} {jh}]} {[{jh} {{any_Vx_jh_z_aa_noSlide {[{ih} {uw} {y} {ae} {ah} {eh} {iy} {uh} {ao} {ax} {oh}]}}}]}]}]}]}
Phoneme rule:
guard: ng phoneme: th
rule: {[{[{{[{{any_Cx_ng_jh_th_r {[{g} {b} {zh} {ch} {l} {w} {d} {v} {z} {dh} {hh} {m}]}}} {ng}]}} {{[{ng} {{any_Cx_ng_jh_th_r {[{g} {b} {zh} {ch} {l} {w} {d} {v} {z} {dh} {hh} {m}]}}}]}}]} {[{th} {[{[{{any_Cx_ng_jh_th_r {[{g} {b} {zh} {ch} {l} {w} {d} {v} {z} {dh} {hh} {m}]}}} {ng}]} {[{ng} {{any_Cx_ng_jh_th_r {[{g} {b} {zh} {ch} {l} {w} {d} {v} {z} {dh} {hh} {m}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: r
rule: {[{[{{[{{any_Cx_zh_ng_r_th {[{g} {b} {m} {dh} {hh} {v} {z} {w} {ch} {d} {l}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_ng_r_th {[{g} {b} {m} {dh} {hh} {v} {z} {w} {ch} {d} {l}]}}}]}}]} {[{r} {[{[{{any_Cx_zh_ng_r_th {[{g} {b} {m} {dh} {hh} {v} {z} {w} {ch} {d} {l}]}}} {zh}]} {[{zh} {{any_Cx_zh_ng_r_th {[{g} {b} {m} {dh} {hh} {v} {z} {w} {ch} {d} {l}]}}}]}]}]}]}
Phoneme rule:
guard: z phoneme: ah
rule: {[{[{[{{[{{any_Vx_z_zh_ah_noSlide {[{aa} {ae} {oh} {uw} {eh} {iy} {uh} {y} {ao} {ax} {ih}]}}} {z}]}} {{[{z} {{any_Vx_z_zh_ah_noSlide {[{aa} {ae} {oh} {uw} {eh} {iy} {uh} {y} {ao} {ax} {ih}]}}}]}}]} {[{{[{{any_Cx_z_zh_g_r {[{ch} {m} {w} {l} {v} {d} {dh} {b} {hh}]}}} {z}]}} {{[{z} {{any_Cx_z_zh_g_r {[{ch} {m} {w} {l} {v} {d} {dh} {b} {hh}]}}}]}}]}]} {[{ah} {[{[{{any_Vx_z_zh_ah_noSlide {[{aa} {ae} {oh} {uw} {eh} {iy} {uh} {y} {ao} {ax} {ih}]}}} {z}]} {[{z} {{any_Vx_z_zh_ah_noSlide {[{aa} {ae} {oh} {uw} {eh} {iy} {uh} {y} {ao} {ax} {ih}]}}}]}]}]}]}
Phoneme rule:
guard: z phoneme: g
rule: {[{[{{[{{any_Cx_z_z_g {[{d} {l} {m} {zh} {b} {w} {v} {dh} {hh} {ch}]}}} {z}]}} {{[{z} {{any_Cx_z_z_g {[{d} {l} {m} {zh} {b} {w} {v} {dh} {hh} {ch}]}}}]}}]} {[{g} {[{[{{any_Cx_z_z_g {[{d} {l} {m} {zh} {b} {w} {v} {dh} {hh} {ch}]}}} {z}]} {[{z} {{any_Cx_z_z_g {[{d} {l} {m} {zh} {b} {w} {v} {dh} {hh} {ch}]}}}]}]}]}]}
Closing rule:
guard: d
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {d}]}} {{[{d} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_z_g_d {[{ch} {m} {v} {zh} {w} {l} {hh} {b} {dh}]}}} {d}]}} {{[{d} {{any_Cx_z_g_d {[{ch} {m} {v} {zh} {w} {l} {hh} {b} {dh}]}}}]}}]} {sil}]}
rule 4 =
Trapped opening rule:
trap: b
rule: {b}
Opening rule:
guard: b
rule: {b {[{sil} {{[{[{b} {{any_Cx_hh_b_b {[{d} {ch} {l} {m} {v} {dh} {g} {zh} {w} {z}]}}}]} {[{{any_Cx_hh_b_b {[{d} {ch} {l} {m} {v} {dh} {g} {zh} {w} {z}]}}} {b}]}]}} {{[{[{b} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]} {[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {b}]}]}}]}}
Phoneme rule:
guard: z phoneme: hh
rule: {[{[{{[{{any_Cx_z_b_b_hh {[{dh} {v} {g} {m} {d} {l} {ch} {w} {zh}]}}} {z}]}} {{[{z} {{any_Cx_z_b_b_hh {[{dh} {v} {g} {m} {d} {l} {ch} {w} {zh}]}}}]}}]} {[{hh} {[{[{{any_Cx_z_b_b_hh {[{dh} {v} {g} {m} {d} {l} {ch} {w} {zh}]}}} {z}]} {[{z} {{any_Cx_z_b_b_hh {[{dh} {v} {g} {m} {d} {l} {ch} {w} {zh}]}}}]}]}]}]}
Phoneme rule:
guard: y phoneme: aa
rule: {[{[{[{{[{{any_Vx_y_z_aa_noSlide {[{ah} {ih} {oh} {uw} {uh} {ae} {ao} {ax} {eh} {iy}]}}} {y}]}} {{[{y} {{any_Vx_y_z_aa_noSlide {[{ah} {ih} {oh} {uw} {uh} {ae} {ao} {ax} {eh} {iy}]}}}]}}]} {[{{[{{any_Cx_y_z_th_hh {[{dh} {l} {b} {g} {v} {w} {zh} {ch} {d} {m}]}}} {y}]}} {{[{y} {{any_Cx_y_z_th_hh {[{dh} {l} {b} {g} {v} {w} {zh} {ch} {d} {m}]}}}]}}]}]} {[{aa} {[{[{{any_Vx_y_z_aa_noSlide {[{ah} {ih} {oh} {uw} {uh} {ae} {ao} {ax} {eh} {iy}]}}} {y}]} {[{y} {{any_Vx_y_z_aa_noSlide {[{ah} {ih} {oh} {uw} {uh} {ae} {ao} {ax} {eh} {iy}]}}}]}]}]}]}
Phoneme rule:
guard: ng phoneme: th
rule: {[{[{{[{{any_Cx_ng_y_th_r {[{hh} {zh} {z} {dh} {g} {w} {d} {v} {b} {m} {ch} {l}]}}} {ng}]}} {{[{ng} {{any_Cx_ng_y_th_r {[{hh} {zh} {z} {dh} {g} {w} {d} {v} {b} {m} {ch} {l}]}}}]}}]} {[{th} {[{[{{any_Cx_ng_y_th_r {[{hh} {zh} {z} {dh} {g} {w} {d} {v} {b} {m} {ch} {l}]}}} {ng}]} {[{ng} {{any_Cx_ng_y_th_r {[{hh} {zh} {z} {dh} {g} {w} {d} {v} {b} {m} {ch} {l}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: r
rule: {[{[{{[{{any_Cx_zh_ng_r_th {[{v} {z} {d} {m} {g} {b} {dh} {hh} {l} {ch} {w}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_ng_r_th {[{v} {z} {d} {m} {g} {b} {dh} {hh} {l} {ch} {w}]}}}]}}]} {[{r} {[{[{{any_Cx_zh_ng_r_th {[{v} {z} {d} {m} {g} {b} {dh} {hh} {l} {ch} {w}]}}} {zh}]} {[{zh} {{any_Cx_zh_ng_r_th {[{v} {z} {d} {m} {g} {b} {dh} {hh} {l} {ch} {w}]}}}]}]}]}]}
Phoneme rule:
guard: z phoneme: ah
rule: {[{[{[{{[{{any_Vx_z_zh_ah_noSlide {[{uh} {ih} {iy} {ae} {oh} {aa} {ao} {ax} {eh} {uw} {y}]}}} {z}]}} {{[{z} {{any_Vx_z_zh_ah_noSlide {[{uh} {ih} {iy} {ae} {oh} {aa} {ao} {ax} {eh} {uw} {y}]}}}]}}]} {[{{[{{any_Cx_z_zh_g_r {[{hh} {d} {l} {m} {ch} {dh} {v} {w} {b}]}}} {z}]}} {{[{z} {{any_Cx_z_zh_g_r {[{hh} {d} {l} {m} {ch} {dh} {v} {w} {b}]}}}]}}]}]} {[{ah} {[{[{{any_Vx_z_zh_ah_noSlide {[{uh} {ih} {iy} {ae} {oh} {aa} {ao} {ax} {eh} {uw} {y}]}}} {z}]} {[{z} {{any_Vx_z_zh_ah_noSlide {[{uh} {ih} {iy} {ae} {oh} {aa} {ao} {ax} {eh} {uw} {y}]}}}]}]}]}]}
Phoneme rule:
guard: z phoneme: g
rule: {[{[{{[{{any_Cx_z_z_g {[{m} {zh} {w} {d} {v} {hh} {l} {b} {ch} {dh}]}}} {z}]}} {{[{z} {{any_Cx_z_z_g {[{m} {zh} {w} {d} {v} {hh} {l} {b} {ch} {dh}]}}}]}}]} {[{g} {[{[{{any_Cx_z_z_g {[{m} {zh} {w} {d} {v} {hh} {l} {b} {ch} {dh}]}}} {z}]} {[{z} {{any_Cx_z_z_g {[{m} {zh} {w} {d} {v} {hh} {l} {b} {ch} {dh}]}}}]}]}]}]}
Closing rule:
guard: thr
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {thr}]}} {{[{thr} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_z_g_thr {[{d} {b} {hh} {dh} {l} {v} {w} {zh} {ch} {m}]}}} {thr}]}} {{[{thr} {{any_Cx_z_g_thr {[{d} {b} {hh} {dh} {l} {v} {w} {zh} {ch} {m}]}}}]}}]} {sil}]}

parse: err = Parser error
ruleAligned = [{{hh 2} []} {{z 3} [{0 1} {2 1} {3 1}]} {{w 3} [{0 2} {2 2} {3 2} {4 2}]} {{aa 0} [{0 3} {2 3} {3 3} {4 3}]} {{th 2} []} {{ng 3} [{0 4} {2 4} {3 5} {4 5}]} {{r 2} [{2 6} {4 6}]} {{ah 0} [{0 7} {2 7} {3 7} {4 7}]} {{g 2} [{3 8} {4 8}]}]

results (after rule-alignment) =
{72 [{sil 73 73} {z 107 114} {w 115 133} {aa 135 150} {ng 151 158} {b 160 164} {r 165 165} {ah 169 174} {g 175 175} {sil 179 179}]}
{80 []}
{91 [{sil 0 0} {z 5 15} {w 16 33} {aa 34 48} {ng 49 56} {v 57 57} {r 60 64} {ah 65 77} {g 78 78} {sil 81 81}]}
{105 [{sil 0 0} {z 3 15} {w 16 33} {aa 34 47} {l 48 48} {ng 52 61} {r 62 62} {ah 65 78} {g 79 86} {sil 87 87}]}
{125 [{sil 3 3} {z 15 15} {w 18 34} {aa 34 48} {l 49 53} {ng 54 62} {r 62 65} {ah 66 74} {g 75 89} {sil 90 90}]}

timeAligned = [{{w 18 33} [{2 2} {3 2} {4 2}]} {{aa 34 47} [{2 3} {3 3} {4 3}]} {{ng 54 56} [{2 4} {3 5} {4 5}]} {{ah 66 74} [{2 7} {3 7} {4 7}]}]

i, iTime, newITime, timeStartFrom = 0 0 -1 0
i, iTime, newITime, timeStartFrom = 1 0 -1 0
i, iTime, newITime, timeStartFrom = 2 0 0 0
i, iTime, newITime, timeStartFrom = 3 0 1 33
i, iTime, newITime, timeStartFrom = 4 1 -1 47
i, iTime, newITime, timeStartFrom = 5 1 2 47
i, iTime, newITime, timeStartFrom = 6 2 -1 56
i, iTime, newITime, timeStartFrom = 7 2 3 56
i, iTime, newITime, timeStartFrom = 8 3 -1 74
combinedVerdict    = [{hh 2} {w 3} {aa 0} {th 2} {ng 3} {r 2} {ah 0} {g 2}]
ruleAlignedVerdict = [{hh 2} {z 3} {w 3} {aa 0} {th 2} {ng 3} {r 2} {ah 0} {g 2}]

score->
-1 for hh
-1 for w
+1 for aa
-1 for th
-1 for ng
-1 for r
+1 for ah
-1 for g
score<-: -4
bestResult = {-4 [{hh 2} {w 3} {aa 0} {thr 2} {ah 2} {g 2}] [hh aa thr ah g]}
testPronounce hh missing w surprise aa good thr missing ah missing g missing
publish->
Total: 377.08148ms
{
  "results": [],
  "err": "Phoneme translation failure, translating phoneme thr in word, hearthrug"
}
