
 length of audio =  2.282313



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.76 0.94 1.7

 start3, duration3, end3 =  0.86 0.76 1.62

 Initial start, duration, end =  0.66 1.04 1.7

 Cut at: start, duration =  0.66 1.49     guard_end =  2.15 

Running scan for frate = 125
Considering guard sh with value 1.6 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ey ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 125 public <may> = (((sil [((l <any_Cx_m_l_p>) | (<any_Cx_m_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]) | (sil p (sil [((l <any_Cx_m_l_p>) | (<any_Cx_m_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]))) (([(<any_Cx_sh_p_l_m> sh)] | [(sh <any_Cx_sh_p_l_m>)]) (m | ((<any_Cx_sh_p_l_m> sh) | (sh <any_Cx_sh_p_l_m>)))) ((([(<any_Vx_sh_sh_ey_noSlide> sh)] | [(sh <any_Vx_sh_sh_ey_noSlide>)]) ([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)])) (ey | ((<any_Vx_sh_sh_ey_noSlide> sh) | (sh <any_Vx_sh_sh_ey_noSlide>)))) (([(<any_Cx_sh_ey_thr> thr)] | [(thr <any_Cx_sh_ey_thr>)]) ([(<any_Vx_sh_ey_thr> thr)] | [(thr <any_Vx_sh_ey_thr>)]) sil))
Running scan for frate = 105
Considering guard sh with value 1.6 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ey ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 105 public <may> = (((sil [((d <any_Cx_m_d_p>) | (<any_Cx_m_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil p (sil [((d <any_Cx_m_d_p>) | (<any_Cx_m_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_sh_p_d_m> sh)] | [(sh <any_Cx_sh_p_d_m>)]) (m | ((<any_Cx_sh_p_d_m> sh) | (sh <any_Cx_sh_p_d_m>)))) ((([(<any_Vx_sh_sh_ey_noSlide> sh)] | [(sh <any_Vx_sh_sh_ey_noSlide>)]) ([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)])) (ey | ((<any_Vx_sh_sh_ey_noSlide> sh) | (sh <any_Vx_sh_sh_ey_noSlide>)))) (([(<any_Cx_sh_ey_f> f)] | [(f <any_Cx_sh_ey_f>)]) ([(<any_Vx_sh_ey_f> f)] | [(f <any_Vx_sh_ey_f>)]) sil))
Running scan for frate = 91
Considering guard sh with value 1.6 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ey ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 91 public <may> = (((sil [((l <any_Cx_m_l_p>) | (<any_Cx_m_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]) | (sil p (sil [((l <any_Cx_m_l_p>) | (<any_Cx_m_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]))) (([(<any_Cx_sh_p_l_m> sh)] | [(sh <any_Cx_sh_p_l_m>)]) (m | ((<any_Cx_sh_p_l_m> sh) | (sh <any_Cx_sh_p_l_m>)))) ((([(<any_Vx_sh_sh_ey_noSlide> sh)] | [(sh <any_Vx_sh_sh_ey_noSlide>)]) ([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)])) (ey | ((<any_Vx_sh_sh_ey_noSlide> sh) | (sh <any_Vx_sh_sh_ey_noSlide>)))) (([(<any_Cx_sh_ey_w> w)] | [(w <any_Cx_sh_ey_w>)]) ([(<any_Vx_sh_ey_w> w)] | [(w <any_Vx_sh_ey_w>)]) sil))
Running scan for frate = 80
Considering guard sh with value 1.6 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ey ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 80 public <may> = (((sil [((z <any_Cx_m_z_p>) | (<any_Cx_m_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_m_z_p>) | (<any_Cx_m_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_m> sh)] | [(sh <any_Cx_sh_p_z_m>)]) (m | ((<any_Cx_sh_p_z_m> sh) | (sh <any_Cx_sh_p_z_m>)))) ((([(<any_Vx_sh_sh_ey_noSlide> sh)] | [(sh <any_Vx_sh_sh_ey_noSlide>)]) ([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)])) (ey | ((<any_Vx_sh_sh_ey_noSlide> sh) | (sh <any_Vx_sh_sh_ey_noSlide>)))) (([(<any_Cx_sh_ey_f> f)] | [(f <any_Cx_sh_ey_f>)]) ([(<any_Vx_sh_ey_f> f)] | [(f <any_Vx_sh_ey_f>)]) sil))
Running scan for frate = 72
Considering guard sh with value 1.6 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ey ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 72 public <may> = (((sil [((l <any_Cx_m_l_p>) | (<any_Cx_m_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]) | (sil p (sil [((l <any_Cx_m_l_p>) | (<any_Cx_m_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]))) (([(<any_Cx_sh_p_l_m> sh)] | [(sh <any_Cx_sh_p_l_m>)]) (m | ((<any_Cx_sh_p_l_m> sh) | (sh <any_Cx_sh_p_l_m>)))) ((([(<any_Vx_sh_sh_ey_noSlide> sh)] | [(sh <any_Vx_sh_sh_ey_noSlide>)]) ([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)])) (ey | ((<any_Vx_sh_sh_ey_noSlide> sh) | (sh <any_Vx_sh_sh_ey_noSlide>)))) (([(<any_Cx_sh_ey_n> n)] | [(n <any_Cx_sh_ey_n>)]) ([(<any_Vx_sh_ey_n> n)] | [(n <any_Vx_sh_ey_n>)]) sil))

results =
{72 [{sil 0 9} {g 10 14} {sh 15 17} {sh 18 22} {y 23 28} {ow 29 47} {n 48 60} {sil 61 63}]}
{80 [{sil 0 15} {sh 16 19} {l 20 33} {ey 34 60} {sil 61 68}]}
{91 [{sil 0 11} {g 12 18} {sh 19 22} {sh 23 26} {ax 27 30} {w 31 36} {er 37 66} {sil 67 130}]}
{105 [{sil 0 14} {g 15 21} {sh 22 27} {sh 28 30} {l 31 43} {eh 44 64} {sh 65 67} {iy 68 88} {f 89 91} {sil 92 151}]}
{125 [{sil 3 19} {g 20 37} {l 38 43} {l 44 51} {eh 52 76} {m 77 79} {iy 80 107} {sh 108 110} {sil 111 182}]}

normalised results =
{72 [{sil 0 9} {g 14 19} {sh 21 21} {sh 25 31} {y 32 39} {ow 40 65} {n 67 83} {sil 85 85}]}
{80 [{sil 0 15} {sh 20 24} {l 25 41} {ey 43 75} {sil 76 85}]}
{91 [{sil 0 11} {g 13 20} {sh 21 24} {sh 25 29} {ax 30 33} {w 34 40} {er 41 73} {sil 74 143}]}
{105 [{sil 0 14} {g 14 20} {sh 21 26} {sh 27 27} {l 30 41} {eh 42 61} {sh 62 62} {iy 65 84} {f 85 85} {sil 88 144}]}
{125 [{sil 3 19} {g 16 30} {l 30 34} {l 35 41} {eh 42 61} {m 62 62} {iy 64 86} {sh 86 86} {sil 89 146}]}

ruleAligned = [{{m 2} []} {{g 3} [{0 1} {2 1} {3 1}]} {{ey 2} [{1 3}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {g 14 19} {sh 21 21} {sh 25 31} {y 32 39} {ow 40 65} {n 67 83} {sil 85 85}]}
{80 [{sil 0 0} {sh 20 20} {l 25 41} {ey 43 75} {sil 76 76}]}
{91 [{sil 0 0} {g 13 20} {sh 21 21} {sh 25 25} {ax 30 30} {w 34 40} {er 41 73} {sil 74 74}]}
{105 [{sil 0 0} {g 14 20} {sh 21 26} {sh 27 27} {l 30 41} {eh 42 61} {sh 62 62} {iy 65 84} {f 85 85} {sil 88 88}]}
{125 [{sil 3 3} {g 16 30} {l 30 30} {l 35 35} {eh 42 61} {m 62 62} {iy 64 86} {sh 86 86} {sil 89 89}]}

timeAligned = [{{g 14 20} [{0 1} {2 1} {3 1} {4 1}]}]

i, iTime, newITime, timeStartFrom = 0 0 -1 0
i, iTime, newITime, timeStartFrom = 1 0 0 0
i, iTime, newITime, timeStartFrom = 2 0 -1 19
combinedVerdict    = [{m 2} {g 3} {ey 2}]
ruleAlignedVerdict = [{m 2} {g 3} {ey 2}]

score->
-1 for m
-1 for g
-1 for ey
score<-: -3
bestResult = {-3 [{m 2} {g 3} {ey 2}] [m ey]}
testPronounce m missing g surprise ey missing
publish->
phonsToAlphas = [{[m] m} {[ey] ay}]
getVerdict<-:new {m [m] 2}
getVerdict<-:new {ay [ey] 2}
lettersVerdicts = [{m [m] 2} {g [g] 3} {ay [ey] 2}]
publish<-
{
  "results": [
    {
      "letters": "m",
      "phonemes": "m",
      "verdict": "missing"
    },
    {
      "letters": "g",
      "phonemes": "g",
      "verdict": "surprise"
    },
    {
      "letters": "ay",
      "phonemes": "eÉª",
      "verdict": "missing"
    }
  ],
  "err": null
}
