
 length of audio =  2.282313



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.76 0.94 1.7

 start3, duration3, end3 =  0.86 0.76 1.62

 Initial start, duration, end =  0.66 1.04 1.7

 Cut at: start, duration =  0.66 1.49     guard_end =  2.15 

Running scan for frate = 125
Considering guard sh with value 1.6 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ey ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 125 public <may> = (((sil [((d <any_Cx_m_d_p>) | (<any_Cx_m_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil p (sil [((d <any_Cx_m_d_p>) | (<any_Cx_m_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_sh_p_d_m> sh)] | [(sh <any_Cx_sh_p_d_m>)]) (m | ((<any_Cx_sh_p_d_m> sh) | (sh <any_Cx_sh_p_d_m>)))) ((([(<any_Vx_sh_sh_ey_noSlide> sh)] | [(sh <any_Vx_sh_sh_ey_noSlide>)]) ([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)])) (ey | ((<any_Vx_sh_sh_ey_noSlide> sh) | (sh <any_Vx_sh_sh_ey_noSlide>)))) (([(<any_Cx_sh_ey_w> w)] | [(w <any_Cx_sh_ey_w>)]) ([(<any_Vx_sh_ey_w> w)] | [(w <any_Vx_sh_ey_w>)]) sil))
Running scan for frate = 105
Considering guard sh with value 1.6 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ey ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 105 public <may> = (((sil [((z <any_Cx_m_z_p>) | (<any_Cx_m_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_m_z_p>) | (<any_Cx_m_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_m> sh)] | [(sh <any_Cx_sh_p_z_m>)]) (m | ((<any_Cx_sh_p_z_m> sh) | (sh <any_Cx_sh_p_z_m>)))) ((([(<any_Vx_sh_sh_ey_noSlide> sh)] | [(sh <any_Vx_sh_sh_ey_noSlide>)]) ([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)])) (ey | ((<any_Vx_sh_sh_ey_noSlide> sh) | (sh <any_Vx_sh_sh_ey_noSlide>)))) (([(<any_Cx_sh_ey_r> r)] | [(r <any_Cx_sh_ey_r>)]) ([(<any_Vx_sh_ey_r> r)] | [(r <any_Vx_sh_ey_r>)]) sil))
Running scan for frate = 91
Considering guard sh with value 1.6 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ey ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 91 public <may> = (((sil [((v <any_Cx_m_v_p>) | (<any_Cx_m_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]) | (sil p (sil [((v <any_Cx_m_v_p>) | (<any_Cx_m_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]))) (([(<any_Cx_sh_p_v_m> sh)] | [(sh <any_Cx_sh_p_v_m>)]) (m | ((<any_Cx_sh_p_v_m> sh) | (sh <any_Cx_sh_p_v_m>)))) ((([(<any_Vx_sh_sh_ey_noSlide> sh)] | [(sh <any_Vx_sh_sh_ey_noSlide>)]) ([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)])) (ey | ((<any_Vx_sh_sh_ey_noSlide> sh) | (sh <any_Vx_sh_sh_ey_noSlide>)))) (([(<any_Cx_sh_ey_r> r)] | [(r <any_Cx_sh_ey_r>)]) ([(<any_Vx_sh_ey_r> r)] | [(r <any_Vx_sh_ey_r>)]) sil))
Running scan for frate = 80
Considering guard sh with value 1.6 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ey ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 80 public <may> = (((sil [((v <any_Cx_m_v_p>) | (<any_Cx_m_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]) | (sil p (sil [((v <any_Cx_m_v_p>) | (<any_Cx_m_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]))) (([(<any_Cx_sh_p_v_m> sh)] | [(sh <any_Cx_sh_p_v_m>)]) (m | ((<any_Cx_sh_p_v_m> sh) | (sh <any_Cx_sh_p_v_m>)))) ((([(<any_Vx_sh_sh_ey_noSlide> sh)] | [(sh <any_Vx_sh_sh_ey_noSlide>)]) ([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)])) (ey | ((<any_Vx_sh_sh_ey_noSlide> sh) | (sh <any_Vx_sh_sh_ey_noSlide>)))) (([(<any_Cx_sh_ey_w> w)] | [(w <any_Cx_sh_ey_w>)]) ([(<any_Vx_sh_ey_w> w)] | [(w <any_Vx_sh_ey_w>)]) sil))
Running scan for frate = 72
Considering guard sh with value 1.6 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ey ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 72 public <may> = (((sil [((v <any_Cx_m_v_p>) | (<any_Cx_m_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]) | (sil p (sil [((v <any_Cx_m_v_p>) | (<any_Cx_m_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]))) (([(<any_Cx_sh_p_v_m> sh)] | [(sh <any_Cx_sh_p_v_m>)]) (m | ((<any_Cx_sh_p_v_m> sh) | (sh <any_Cx_sh_p_v_m>)))) ((([(<any_Vx_sh_sh_ey_noSlide> sh)] | [(sh <any_Vx_sh_sh_ey_noSlide>)]) ([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)])) (ey | ((<any_Vx_sh_sh_ey_noSlide> sh) | (sh <any_Vx_sh_sh_ey_noSlide>)))) (([(<any_Cx_sh_ey_f> f)] | [(f <any_Cx_sh_ey_f>)]) ([(<any_Vx_sh_ey_f> f)] | [(f <any_Vx_sh_ey_f>)]) sil))

results =
{72 [{sil 0 9} {g 10 14} {v 15 17} {sh 18 20} {l 21 30} {ey 31 54} {sil 55 63}]}
{80 [{sil 0 11} {g 12 16} {v 17 19} {sh 20 22} {l 23 33} {ey 34 60} {sil 61 68}]}
{91 [{sil 0 11} {g 12 18} {v 19 22} {sh 23 25} {l 26 39} {ey 40 46} {r 47 53} {iy 54 77} {sil 78 130}]}
{105 [{sil 0 14} {g 15 21} {sh 22 27} {sh 28 30} {l 31 43} {eh 44 64} {sh 65 67} {iy 68 90} {sh 91 93} {sil 94 151}]}
{125 [{sil 3 19} {g 20 26} {d 27 34} {sh 35 37} {l 38 51} {eh 52 77} {sh 78 80} {iy 81 107} {sh 108 110} {sil 111 182}]}

normalised results =
{72 [{sil 0 9} {g 14 19} {v 21 21} {sh 25 25} {l 29 42} {ey 43 75} {sil 76 88}]}
{80 [{sil 0 11} {g 15 20} {v 21 21} {sh 25 25} {l 29 41} {ey 43 75} {sil 76 85}]}
{91 [{sil 0 11} {g 13 20} {v 21 24} {sh 25 25} {l 29 43} {ey 44 51} {r 52 58} {iy 59 85} {sil 86 143}]}
{105 [{sil 0 14} {g 14 20} {sh 21 26} {sh 27 27} {l 30 41} {eh 42 61} {sh 62 62} {iy 65 86} {sh 87 87} {sil 90 144}]}
{125 [{sil 3 19} {g 16 21} {d 22 27} {sh 28 28} {l 30 41} {eh 42 62} {sh 62 62} {iy 65 86} {sh 86 86} {sil 89 146}]}

ruleAligned = [{{g 3} [{0 1} {1 1} {2 1} {4 1}]} {{m 2} []} {{l 3} [{0 4} {1 4} {2 4} {4 4}]} {{ey 1} [{0 5} {1 5} {2 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {g 14 19} {v 21 21} {sh 25 25} {l 29 42} {ey 43 75} {sil 76 76}]}
{80 [{sil 0 0} {g 15 20} {v 21 21} {sh 25 25} {l 29 41} {ey 43 75} {sil 76 76}]}
{91 [{sil 0 0} {g 13 20} {v 21 21} {sh 25 25} {l 29 43} {ey 44 51} {r 52 58} {iy 59 85} {sil 86 86}]}
{105 [{sil 0 0} {g 14 20} {sh 21 26} {sh 27 27} {l 30 41} {eh 42 61} {sh 62 62} {iy 65 86} {sh 87 87} {sil 90 90}]}
{125 [{sil 3 3} {g 16 21} {d 22 27} {sh 28 28} {l 30 41} {eh 42 62} {sh 62 62} {iy 65 86} {sh 86 86} {sil 89 89}]}

timeAligned = [{{g 14 20} [{0 1} {2 1} {3 1} {1 1} {4 1}]} {{l 29 41} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{ey 44 51} [{0 5} {1 5} {2 5}]} {{iy 65 85} [{2 7} {3 7} {4 7}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 -1 19
i, iTime, newITime, timeStartFrom = 2 0 1 19
i, iTime, newITime, timeStartFrom = 3 1 2 41
combinedVerdict    = [{g 3} {m 2} {l 3} {ey 1} {iy 3}]
ruleAlignedVerdict = [{g 3} {m 2} {l 3} {ey 1}]

score->
-1 for g
-1 for m
-1 for l
+1 for ey
-1 for iy
score<-: -3
bestResult = {-3 [{g 3} {m 2} {l 3} {ey 1} {iy 3}] [m ey]}
testPronounce g surprise m missing l surprise ey possible iy surprise
publish->
phonsToAlphas = [{[m] m} {[ey] ay}]
getVerdict<-:new {m [m] 2}
getVerdict<-:new {ay [ey] 1}
lettersVerdicts = [{g [g] 3} {m [m] 2} {l [l] 3} {ay [ey] 1} {iy [iy] 3}]
publish<-
Total: 202.79505ms
{
  "results": [
    {
      "letters": "g",
      "phonemes": "g",
      "verdict": "surprise"
    },
    {
      "letters": "m",
      "phonemes": "m",
      "verdict": "missing"
    },
    {
      "letters": "l",
      "phonemes": "l",
      "verdict": "surprise"
    },
    {
      "letters": "ay",
      "phonemes": "eɪ",
      "verdict": "possible"
    },
    {
      "letters": "iy",
      "phonemes": "iː",
      "verdict": "surprise"
    }
  ],
  "err": null
}
