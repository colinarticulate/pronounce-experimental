
 length of audio =  1.983625



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.74 1.24 1.98

 start3, duration3, end3 =  0.88 0.88 1.76

 Initial start, duration, end =  0.64 1.3399999999999999 1.98

 Cut at: start, duration =  0.64 1.3236249999999998     guard_end =  1.963625 

Running scan for frate = 125
Running scan for frate = 125
Considering guard zh with value 1 for y ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for uw ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard z with value 2 for k ...
Considering guard zh with value 2 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard z with value 1 for yuw ...
Considering guard zh with value 1 for yuw ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard zh with value 2 for oh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard z with value 2 for k ...
Considering guard zh with value 2 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard sh with value 0.8 for n ...
Considering guard zh with value 0.8 for n ...
candidateGuards = map[sh:true zh:true]
Picking guard, sh

Considering guard zh with value 2 for oh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 0.8 for n ...
Considering guard zh with value 0.8 for n ...
candidateGuards = map[sh:true zh:true]
Picking guard, sh

frate, target rule = 125 public <yukon> = (((sil [((b <any_Vx_y_b_p_noSlide>) | (<any_Vx_y_b_p_noSlide> b))] [((b <any_Cx_y_b_p>) | (<any_Cx_y_b_p> b))]) | (sil p (sil [((b <any_Vx_y_b_p_noSlide>) | (<any_Vx_y_b_p_noSlide> b))] [((b <any_Cx_y_b_p>) | (<any_Cx_y_b_p> b))]))) ((([(<any_Vx_zh_p_b_y_uw_noSlide> zh)] | [(zh <any_Vx_zh_p_b_y_uw_noSlide>)]) ([(<any_Cx_zh_p_b> zh)] | [(zh <any_Cx_zh_p_b>)])) (y | ((<any_Vx_zh_p_b_y_uw_noSlide> zh) | (zh <any_Vx_zh_p_b_y_uw_noSlide>)))) ((([(<any_Vx_zh_zh_uw_y_noSlide> zh)] | [(zh <any_Vx_zh_zh_uw_y_noSlide>)]) ([(<any_Cx_zh_zh_k> zh)] | [(zh <any_Cx_zh_zh_k>)])) (uw | ((<any_Vx_zh_zh_uw_noSlide> zh) | (zh <any_Vx_zh_zh_uw_noSlide>)))) (([(<any_Cx_z_zh_k_oh> z)] | [(z <any_Cx_z_zh_k_oh>)]) (k | ((<any_Cx_z_zh_k_oh> z) | (z <any_Cx_z_zh_k_oh>)))) (([(<any_Cx_zh_z_oh_k> zh)] | [(zh <any_Cx_zh_z_oh_k>)]) (oh | ((<any_Cx_zh_z_oh_n_k> zh) | (zh <any_Cx_zh_z_oh_n_k>)))) (([(<any_Cx_sh_zh_n_oh> sh)] | [(sh <any_Cx_sh_zh_n_oh>)]) (n | ((<any_Cx_sh_zh_n_oh> sh) | (sh <any_Cx_sh_zh_n_oh>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_sh_n_ng> ng)] | [(ng <any_Cx_sh_n_ng>)]) sil))
frate, target rule = 125 public <yukon> = (((sil [((z <any_Cx_yuw_z_p>) | (<any_Cx_yuw_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_yuw_z_p>) | (<any_Cx_yuw_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_z_p_z_yuw_k> z)] | [(z <any_Cx_z_p_z_yuw_k>)]) (yuw | ((<any_Cx_z_p_z_yuw_k> z) | (z <any_Cx_z_p_z_yuw_k>)))) (([(<any_Cx_z_z_k_oh_yuw> z)] | [(z <any_Cx_z_z_k_oh_yuw>)]) (k | ((<any_Cx_z_z_k_oh> z) | (z <any_Cx_z_z_k_oh>)))) (([(<any_Cx_zh_z_oh_k> zh)] | [(zh <any_Cx_zh_z_oh_k>)]) (oh | ((<any_Cx_zh_z_oh_n_k> zh) | (zh <any_Cx_zh_z_oh_n_k>)))) (([(<any_Cx_sh_zh_n_oh> sh)] | [(sh <any_Cx_sh_zh_n_oh>)]) (n | ((<any_Cx_sh_zh_n_oh> sh) | (sh <any_Cx_sh_zh_n_oh>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_sh_n_thr> thr)] | [(thr <any_Cx_sh_n_thr>)]) sil))
Running scan for frate = 105
Running scan for frate = 105
Considering guard zh with value 1 for y ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard z with value 1 for yuw ...
Considering guard zh with value 1 for yuw ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard zh with value 2 for k ...
Considering guard z with value 2 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for uw ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for oh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for k ...
Considering guard z with value 2 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard zh with value 0.8 for n ...
Considering guard sh with value 0.8 for n ...
candidateGuards = map[sh:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for oh ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 105 public <yukon> = (((sil [((z <any_Cx_yuw_z_p>) | (<any_Cx_yuw_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_yuw_z_p>) | (<any_Cx_yuw_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_z_p_z_yuw_k> z)] | [(z <any_Cx_z_p_z_yuw_k>)]) (yuw | ((<any_Cx_z_p_z_yuw_k> z) | (z <any_Cx_z_p_z_yuw_k>)))) (([(<any_Cx_zh_z_k_oh_yuw> zh)] | [(zh <any_Cx_zh_z_k_oh_yuw>)]) (k | ((<any_Cx_zh_z_k_oh> zh) | (zh <any_Cx_zh_z_k_oh>)))) (([(<any_Cx_zh_zh_oh_k> zh)] | [(zh <any_Cx_zh_zh_oh_k>)]) (oh | ((<any_Cx_zh_zh_oh_n_k> zh) | (zh <any_Cx_zh_zh_oh_n_k>)))) (([(<any_Cx_zh_zh_n_oh> zh)] | [(zh <any_Cx_zh_zh_n_oh>)]) (n | ((<any_Cx_zh_zh_n_oh> zh) | (zh <any_Cx_zh_zh_n_oh>)))) (([(<any_vowel_noSlide> z)] | [(z <any_vowel_noSlide>)]) ([(<any_Cx_zh_n_z> z)] | [(z <any_Cx_zh_n_z>)]) sil))
Considering guard sh with value 0.8 for n ...
Considering guard zh with value 0.8 for n ...
candidateGuards = map[sh:true zh:true]
Picking guard, sh

Running scan for frate = 91
Considering guard zh with value 1 for yuw ...
Considering guard z with value 1 for yuw ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

frate, target rule = 105 public <yukon> = (((sil [((b <any_Vx_y_b_p_noSlide>) | (<any_Vx_y_b_p_noSlide> b))] [((b <any_Cx_y_b_p>) | (<any_Cx_y_b_p> b))]) | (sil p (sil [((b <any_Vx_y_b_p_noSlide>) | (<any_Vx_y_b_p_noSlide> b))] [((b <any_Cx_y_b_p>) | (<any_Cx_y_b_p> b))]))) ((([(<any_Vx_zh_p_b_y_uw_noSlide> zh)] | [(zh <any_Vx_zh_p_b_y_uw_noSlide>)]) ([(<any_Cx_zh_p_b> zh)] | [(zh <any_Cx_zh_p_b>)])) (y | ((<any_Vx_zh_p_b_y_uw_noSlide> zh) | (zh <any_Vx_zh_p_b_y_uw_noSlide>)))) ((([(<any_Vx_zh_zh_uw_y_noSlide> zh)] | [(zh <any_Vx_zh_zh_uw_y_noSlide>)]) ([(<any_Cx_zh_zh_k> zh)] | [(zh <any_Cx_zh_zh_k>)])) (uw | ((<any_Vx_zh_zh_uw_noSlide> zh) | (zh <any_Vx_zh_zh_uw_noSlide>)))) (([(<any_Cx_zh_zh_k_oh> zh)] | [(zh <any_Cx_zh_zh_k_oh>)]) (k | ((<any_Cx_zh_zh_k_oh> zh) | (zh <any_Cx_zh_zh_k_oh>)))) (([(<any_Cx_zh_zh_oh_k> zh)] | [(zh <any_Cx_zh_zh_oh_k>)]) (oh | ((<any_Cx_zh_zh_oh_n_k> zh) | (zh <any_Cx_zh_zh_oh_n_k>)))) (([(<any_Cx_sh_zh_n_oh> sh)] | [(sh <any_Cx_sh_zh_n_oh>)]) (n | ((<any_Cx_sh_zh_n_oh> sh) | (sh <any_Cx_sh_zh_n_oh>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_sh_n_d> d)] | [(d <any_Cx_sh_n_d>)]) sil))
Considering guard z with value 2 for k ...
Considering guard zh with value 2 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard zh with value 2 for oh ...
candidateGuards = map[zh:true]
Picking guard, zh

Running scan for frate = 91
Considering guard sh with value 0.8 for n ...
Considering guard zh with value 0.8 for n ...
candidateGuards = map[sh:true zh:true]
Picking guard, zh

Considering guard zh with value 1 for y ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 91 public <yukon> = (((sil [((z <any_Cx_yuw_z_p>) | (<any_Cx_yuw_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_yuw_z_p>) | (<any_Cx_yuw_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_yuw_k> zh)] | [(zh <any_Cx_zh_p_z_yuw_k>)]) (yuw | ((<any_Cx_zh_p_z_yuw_k> zh) | (zh <any_Cx_zh_p_z_yuw_k>)))) (([(<any_Cx_z_zh_k_oh_yuw> z)] | [(z <any_Cx_z_zh_k_oh_yuw>)]) (k | ((<any_Cx_z_zh_k_oh> z) | (z <any_Cx_z_zh_k_oh>)))) (([(<any_Cx_zh_z_oh_k> zh)] | [(zh <any_Cx_zh_z_oh_k>)]) (oh | ((<any_Cx_zh_z_oh_n_k> zh) | (zh <any_Cx_zh_z_oh_n_k>)))) (([(<any_Cx_zh_zh_n_oh> zh)] | [(zh <any_Cx_zh_zh_n_oh>)]) (n | ((<any_Cx_zh_zh_n_oh> zh) | (zh <any_Cx_zh_zh_n_oh>)))) (([(<any_vowel_noSlide> z)] | [(z <any_vowel_noSlide>)]) ([(<any_Cx_zh_n_z> z)] | [(z <any_Cx_zh_n_z>)]) sil))
Considering guard zh with value 2 for uw ...
candidateGuards = map[zh:true]
Picking guard, zh

Running scan for frate = 80
Considering guard zh with value 2 for k ...
Considering guard z with value 2 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard zh with value 1 for yuw ...
Considering guard z with value 1 for yuw ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for oh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard z with value 2 for k ...
Considering guard zh with value 2 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard zh with value 0.8 for n ...
Considering guard sh with value 0.8 for n ...
candidateGuards = map[sh:true zh:true]
Picking guard, sh

Considering guard zh with value 2 for oh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 0.8 for n ...
Considering guard sh with value 0.8 for n ...
candidateGuards = map[sh:true zh:true]
Picking guard, zh

frate, target rule = 91 public <yukon> = (((sil [((b <any_Vx_y_b_p_noSlide>) | (<any_Vx_y_b_p_noSlide> b))] [((b <any_Cx_y_b_p>) | (<any_Cx_y_b_p> b))]) | (sil p (sil [((b <any_Vx_y_b_p_noSlide>) | (<any_Vx_y_b_p_noSlide> b))] [((b <any_Cx_y_b_p>) | (<any_Cx_y_b_p> b))]))) ((([(<any_Vx_zh_p_b_y_uw_noSlide> zh)] | [(zh <any_Vx_zh_p_b_y_uw_noSlide>)]) ([(<any_Cx_zh_p_b> zh)] | [(zh <any_Cx_zh_p_b>)])) (y | ((<any_Vx_zh_p_b_y_uw_noSlide> zh) | (zh <any_Vx_zh_p_b_y_uw_noSlide>)))) ((([(<any_Vx_zh_zh_uw_y_noSlide> zh)] | [(zh <any_Vx_zh_zh_uw_y_noSlide>)]) ([(<any_Cx_zh_zh_k> zh)] | [(zh <any_Cx_zh_zh_k>)])) (uw | ((<any_Vx_zh_zh_uw_noSlide> zh) | (zh <any_Vx_zh_zh_uw_noSlide>)))) (([(<any_Cx_z_zh_k_oh> z)] | [(z <any_Cx_z_zh_k_oh>)]) (k | ((<any_Cx_z_zh_k_oh> z) | (z <any_Cx_z_zh_k_oh>)))) (([(<any_Cx_zh_z_oh_k> zh)] | [(zh <any_Cx_zh_z_oh_k>)]) (oh | ((<any_Cx_zh_z_oh_n_k> zh) | (zh <any_Cx_zh_z_oh_n_k>)))) (([(<any_Cx_sh_zh_n_oh> sh)] | [(sh <any_Cx_sh_zh_n_oh>)]) (n | ((<any_Cx_sh_zh_n_oh> sh) | (sh <any_Cx_sh_zh_n_oh>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_sh_n_ng> ng)] | [(ng <any_Cx_sh_n_ng>)]) sil))
frate, target rule = 80 public <yukon> = (((sil [((z <any_Cx_yuw_z_p>) | (<any_Cx_yuw_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_yuw_z_p>) | (<any_Cx_yuw_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_yuw_k> zh)] | [(zh <any_Cx_zh_p_z_yuw_k>)]) (yuw | ((<any_Cx_zh_p_z_yuw_k> zh) | (zh <any_Cx_zh_p_z_yuw_k>)))) (([(<any_Cx_z_zh_k_oh_yuw> z)] | [(z <any_Cx_z_zh_k_oh_yuw>)]) (k | ((<any_Cx_z_zh_k_oh> z) | (z <any_Cx_z_zh_k_oh>)))) (([(<any_Cx_zh_z_oh_k> zh)] | [(zh <any_Cx_zh_z_oh_k>)]) (oh | ((<any_Cx_zh_z_oh_n_k> zh) | (zh <any_Cx_zh_z_oh_n_k>)))) (([(<any_Cx_zh_zh_n_oh> zh)] | [(zh <any_Cx_zh_zh_n_oh>)]) (n | ((<any_Cx_zh_zh_n_oh> zh) | (zh <any_Cx_zh_zh_n_oh>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_zh_n_m> m)] | [(m <any_Cx_zh_n_m>)]) sil))
Running scan for frate = 72
Considering guard zh with value 1 for yuw ...
Considering guard z with value 1 for yuw ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Running scan for frate = 80
Considering guard zh with value 2 for k ...
Considering guard z with value 2 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for oh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 0.8 for n ...
Considering guard sh with value 0.8 for n ...
candidateGuards = map[sh:true zh:true]
Picking guard, zh

frate, target rule = 72 public <yukon> = (((sil [((z <any_Cx_yuw_z_p>) | (<any_Cx_yuw_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_yuw_z_p>) | (<any_Cx_yuw_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_yuw_k> zh)] | [(zh <any_Cx_zh_p_z_yuw_k>)]) (yuw | ((<any_Cx_zh_p_z_yuw_k> zh) | (zh <any_Cx_zh_p_z_yuw_k>)))) (([(<any_Cx_zh_zh_k_oh_yuw> zh)] | [(zh <any_Cx_zh_zh_k_oh_yuw>)]) (k | ((<any_Cx_zh_zh_k_oh> zh) | (zh <any_Cx_zh_zh_k_oh>)))) (([(<any_Cx_zh_zh_oh_k> zh)] | [(zh <any_Cx_zh_zh_oh_k>)]) (oh | ((<any_Cx_zh_zh_oh_n_k> zh) | (zh <any_Cx_zh_zh_oh_n_k>)))) (([(<any_Cx_zh_zh_n_oh> zh)] | [(zh <any_Cx_zh_zh_n_oh>)]) (n | ((<any_Cx_zh_zh_n_oh> zh) | (zh <any_Cx_zh_zh_n_oh>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_zh_n_thr> thr)] | [(thr <any_Cx_zh_n_thr>)]) sil))
Considering guard zh with value 1 for y ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for uw ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for k ...
Considering guard z with value 2 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for oh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 0.8 for n ...
Considering guard zh with value 0.8 for n ...
candidateGuards = map[sh:true zh:true]
Picking guard, sh

frate, target rule = 80 public <yukon> = (((sil [((l <any_Vx_y_l_p_noSlide>) | (<any_Vx_y_l_p_noSlide> l))] [((l <any_Cx_y_l_p>) | (<any_Cx_y_l_p> l))]) | (sil p (sil [((l <any_Vx_y_l_p_noSlide>) | (<any_Vx_y_l_p_noSlide> l))] [((l <any_Cx_y_l_p>) | (<any_Cx_y_l_p> l))]))) ((([(<any_Vx_zh_p_l_y_uw_noSlide> zh)] | [(zh <any_Vx_zh_p_l_y_uw_noSlide>)]) ([(<any_Cx_zh_p_l> zh)] | [(zh <any_Cx_zh_p_l>)])) (y | ((<any_Vx_zh_p_l_y_uw_noSlide> zh) | (zh <any_Vx_zh_p_l_y_uw_noSlide>)))) ((([(<any_Vx_zh_zh_uw_y_noSlide> zh)] | [(zh <any_Vx_zh_zh_uw_y_noSlide>)]) ([(<any_Cx_zh_zh_k> zh)] | [(zh <any_Cx_zh_zh_k>)])) (uw | ((<any_Vx_zh_zh_uw_noSlide> zh) | (zh <any_Vx_zh_zh_uw_noSlide>)))) (([(<any_Cx_zh_zh_k_oh> zh)] | [(zh <any_Cx_zh_zh_k_oh>)]) (k | ((<any_Cx_zh_zh_k_oh> zh) | (zh <any_Cx_zh_zh_k_oh>)))) (([(<any_Cx_zh_zh_oh_k> zh)] | [(zh <any_Cx_zh_zh_oh_k>)]) (oh | ((<any_Cx_zh_zh_oh_n_k> zh) | (zh <any_Cx_zh_zh_oh_n_k>)))) (([(<any_Cx_sh_zh_n_oh> sh)] | [(sh <any_Cx_sh_zh_n_oh>)]) (n | ((<any_Cx_sh_zh_n_oh> sh) | (sh <any_Cx_sh_zh_n_oh>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_sh_n_ng> ng)] | [(ng <any_Cx_sh_n_ng>)]) sil))
Running scan for frate = 72
Considering guard zh with value 1 for y ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for uw ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for k ...
Considering guard z with value 2 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for oh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 0.8 for n ...
Considering guard sh with value 0.8 for n ...
candidateGuards = map[sh:true zh:true]
Picking guard, zh

frate, target rule = 72 public <yukon> = (((sil [((hh <any_Vx_y_hh_p_noSlide>) | (<any_Vx_y_hh_p_noSlide> hh))] [((hh <any_Cx_y_hh_p>) | (<any_Cx_y_hh_p> hh))]) | (sil p (sil [((hh <any_Vx_y_hh_p_noSlide>) | (<any_Vx_y_hh_p_noSlide> hh))] [((hh <any_Cx_y_hh_p>) | (<any_Cx_y_hh_p> hh))]))) ((([(<any_Vx_zh_p_hh_y_uw_noSlide> zh)] | [(zh <any_Vx_zh_p_hh_y_uw_noSlide>)]) ([(<any_Cx_zh_p_hh> zh)] | [(zh <any_Cx_zh_p_hh>)])) (y | ((<any_Vx_zh_p_hh_y_uw_noSlide> zh) | (zh <any_Vx_zh_p_hh_y_uw_noSlide>)))) ((([(<any_Vx_zh_zh_uw_y_noSlide> zh)] | [(zh <any_Vx_zh_zh_uw_y_noSlide>)]) ([(<any_Cx_zh_zh_k> zh)] | [(zh <any_Cx_zh_zh_k>)])) (uw | ((<any_Vx_zh_zh_uw_noSlide> zh) | (zh <any_Vx_zh_zh_uw_noSlide>)))) (([(<any_Cx_zh_zh_k_oh> zh)] | [(zh <any_Cx_zh_zh_k_oh>)]) (k | ((<any_Cx_zh_zh_k_oh> zh) | (zh <any_Cx_zh_zh_k_oh>)))) (([(<any_Cx_zh_zh_oh_k> zh)] | [(zh <any_Cx_zh_zh_oh_k>)]) (oh | ((<any_Cx_zh_zh_oh_n_k> zh) | (zh <any_Cx_zh_zh_oh_n_k>)))) (([(<any_Cx_zh_zh_n_oh> zh)] | [(zh <any_Cx_zh_zh_n_oh>)]) (n | ((<any_Cx_zh_zh_n_oh> zh) | (zh <any_Cx_zh_zh_n_oh>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_zh_n_d> d)] | [(d <any_Cx_zh_n_d>)]) sil))

results =
{72 [{sil 0 18} {y 19 27} {uw 28 35} {k 36 46} {oh 47 60} {n 61 73} {sil 74 94}]}
{80 []}
{91 [{sil 0 23} {y 24 36} {uw 37 45} {k 46 59} {oh 60 78} {n 79 89} {ng 90 95} {v 96 112} {sil 113 115}]}
{105 [{sil 0 27} {y 28 42} {uw 43 53} {k 54 68} {oh 69 91} {n 92 114} {d 115 121} {v 122 135} {sil 136 138}]}
{125 [{sil 3 33} {y 34 46} {uw 47 65} {k 66 82} {oh 83 108} {n 109 124} {ng 125 134} {v 135 158} {sil 159 161}]}

normalised results =
{72 [{sil 0 18} {y 26 38} {uw 39 49} {k 50 64} {oh 65 83} {n 85 101} {sil 103 131}]}
{80 []}
{91 [{sil 0 23} {y 26 40} {uw 41 49} {k 51 65} {oh 66 86} {n 87 98} {ng 99 104} {v 105 123} {sil 124 124}]}
{105 [{sil 0 27} {y 27 40} {uw 41 50} {k 51 65} {oh 66 87} {n 88 109} {d 110 115} {v 116 129} {sil 130 130}]}
{125 [{sil 3 33} {y 27 37} {uw 38 52} {k 53 66} {oh 66 86} {n 87 99} {ng 100 107} {v 108 126} {sil 127 127}]}


results =
{72 [{sil 0 18} {yuw 19 32} {k 33 46} {oh 47 60} {n 61 73} {sil 74 94}]}
{80 []}
{91 [{sil 0 25} {yuw 26 41} {k 42 59} {oh 60 78} {n 79 96} {b 97 101} {z 102 105} {sil 106 115}]}
{105 [{sil 0 27} {yuw 28 48} {k 49 68} {oh 69 91} {n 92 116} {z 117 121} {v 122 135} {sil 136 138}]}
{125 [{sil 3 34} {yuw 35 57} {k 58 82} {oh 83 108} {n 109 134} {v 135 148} {thr 149 157} {sil 158 161}]}

normalised results =
{72 [{sil 0 18} {yuw 26 44} {k 46 64} {oh 65 83} {n 85 101} {sil 103 131}]}
{80 []}
{91 [{sil 0 25} {yuw 29 45} {k 46 65} {oh 66 86} {n 87 105} {b 107 111} {z 112 115} {sil 116 126}]}
{105 [{sil 0 27} {yuw 27 46} {k 47 65} {oh 66 87} {n 88 110} {z 111 115} {v 116 129} {sil 130 130}]}
{125 [{sil 3 34} {yuw 28 46} {k 46 66} {oh 66 86} {n 87 107} {v 108 118} {thr 119 126} {sil 126 129}]}

Mapped result =
result 0 =
start: 0 end: 0 phonemeFound: false
start: 1 end: 1 phonemeFound: true
start: 2 end: 2 phonemeFound: true
start: 3 end: 3 phonemeFound: true
start: 4 end: 4 phonemeFound: true
start: 5 end: 5 phonemeFound: false
result 1 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 2 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 3 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 4 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false

Mapped result =
result 0 =
start: 0 end: 0 phonemeFound: false
start: 1 end: 1 phonemeFound: true
start: 2 end: 2 phonemeFound: true
start: 3 end: 3 phonemeFound: true
start: 4 end: 4 phonemeFound: true
start: 5 end: 5 phonemeFound: true
start: 6 end: 6 phonemeFound: false
result 1 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 2 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 3 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 4 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false

Rules =
rule 0 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Cx_yuw_z_p {[{g} {l} {m} {zh} {w} {ch} {d} {b} {dh} {v} {hh}]}}}]} {[{{any_Cx_yuw_z_p {[{g} {l} {m} {zh} {w} {ch} {d} {b} {dh} {v} {hh}]}}} {z}]}]}} {{[{[{z} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]} {[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {z}]}]}}]}}
Phoneme rule:
guard: zh phoneme: yuw
rule: {[{[{{[{{any_Cx_zh_p_z_yuw_k {[{ch} {d} {g} {hh} {m} {v} {l} {w} {b} {dh}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_p_z_yuw_k {[{ch} {d} {g} {hh} {m} {v} {l} {w} {b} {dh}]}}}]}}]} {[{yuw} {[{[{{any_Cx_zh_p_z_yuw_k {[{ch} {d} {g} {hh} {m} {v} {l} {w} {b} {dh}]}}} {zh}]} {[{zh} {{any_Cx_zh_p_z_yuw_k {[{ch} {d} {g} {hh} {m} {v} {l} {w} {b} {dh}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: k
rule: {[{[{{[{{any_Cx_zh_zh_k_oh_yuw {[{ch} {g} {w} {dh} {d} {l} {hh} {m} {v} {b} {z}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_k_oh_yuw {[{ch} {g} {w} {dh} {d} {l} {hh} {m} {v} {b} {z}]}}}]}}]} {[{k} {[{[{{any_Cx_zh_zh_k_oh {[{l} {z} {hh} {g} {v} {w} {b} {dh} {m} {d} {ch}]}}} {zh}]} {[{zh} {{any_Cx_zh_zh_k_oh {[{l} {z} {hh} {g} {v} {w} {b} {dh} {m} {d} {ch}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: oh
rule: {[{[{{[{{any_Cx_zh_zh_oh_k {[{g} {z} {v} {w} {hh} {l} {b} {d} {ch} {dh} {m}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_oh_k {[{g} {z} {v} {w} {hh} {l} {b} {d} {ch} {dh} {m}]}}}]}}]} {[{oh} {[{[{{any_Cx_zh_zh_oh_n_k {[{b} {hh} {z} {ch} {g} {l} {m} {d} {v} {w} {dh}]}}} {zh}]} {[{zh} {{any_Cx_zh_zh_oh_n_k {[{b} {hh} {z} {ch} {g} {l} {m} {d} {v} {w} {dh}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: n
rule: {[{[{{[{{any_Cx_zh_zh_n_oh {[{dh} {z} {d} {hh} {ch} {w} {b} {l} {g} {m} {v}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_n_oh {[{dh} {z} {d} {hh} {ch} {w} {b} {l} {g} {m} {v}]}}}]}}]} {[{n} {[{[{{any_Cx_zh_zh_n_oh {[{dh} {z} {d} {hh} {ch} {w} {b} {l} {g} {m} {v}]}}} {zh}]} {[{zh} {{any_Cx_zh_zh_n_oh {[{dh} {z} {d} {hh} {ch} {w} {b} {l} {g} {m} {v}]}}}]}]}]}]}
Closing rule:
guard: thr
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {thr}]}} {{[{thr} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_zh_n_thr {[{l} {z} {w} {g} {hh} {ch} {m} {d} {dh} {b} {v}]}}} {thr}]}} {{[{thr} {{any_Cx_zh_n_thr {[{l} {z} {w} {g} {hh} {ch} {m} {d} {dh} {b} {v}]}}}]}}]} {sil}]}
rule 1 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Cx_yuw_z_p {[{d} {g} {l} {w} {zh} {hh} {m} {b} {ch} {dh} {v}]}}}]} {[{{any_Cx_yuw_z_p {[{d} {g} {l} {w} {zh} {hh} {m} {b} {ch} {dh} {v}]}}} {z}]}]}} {{[{[{z} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]} {[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {z}]}]}}]}}
Phoneme rule:
guard: zh phoneme: yuw
rule: {[{[{{[{{any_Cx_zh_p_z_yuw_k {[{b} {v} {m} {l} {ch} {hh} {d} {dh} {g} {w}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_p_z_yuw_k {[{b} {v} {m} {l} {ch} {hh} {d} {dh} {g} {w}]}}}]}}]} {[{yuw} {[{[{{any_Cx_zh_p_z_yuw_k {[{b} {v} {m} {l} {ch} {hh} {d} {dh} {g} {w}]}}} {zh}]} {[{zh} {{any_Cx_zh_p_z_yuw_k {[{b} {v} {m} {l} {ch} {hh} {d} {dh} {g} {w}]}}}]}]}]}]}
Phoneme rule:
guard: z phoneme: k
rule: {[{[{{[{{any_Cx_z_zh_k_oh_yuw {[{g} {d} {hh} {m} {w} {l} {b} {ch} {dh} {v}]}}} {z}]}} {{[{z} {{any_Cx_z_zh_k_oh_yuw {[{g} {d} {hh} {m} {w} {l} {b} {ch} {dh} {v}]}}}]}}]} {[{k} {[{[{{any_Cx_z_zh_k_oh {[{dh} {g} {w} {d} {l} {b} {v} {hh} {m} {ch}]}}} {z}]} {[{z} {{any_Cx_z_zh_k_oh {[{dh} {g} {w} {d} {l} {b} {v} {hh} {m} {ch}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: oh
rule: {[{[{{[{{any_Cx_zh_z_oh_k {[{b} {l} {hh} {d} {g} {ch} {dh} {v} {w} {m}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_z_oh_k {[{b} {l} {hh} {d} {g} {ch} {dh} {v} {w} {m}]}}}]}}]} {[{oh} {[{[{{any_Cx_zh_z_oh_n_k {[{dh} {hh} {b} {w} {m} {d} {g} {l} {ch} {v}]}}} {zh}]} {[{zh} {{any_Cx_zh_z_oh_n_k {[{dh} {hh} {b} {w} {m} {d} {g} {l} {ch} {v}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: n
rule: {[{[{{[{{any_Cx_zh_zh_n_oh {[{v} {b} {g} {l} {dh} {m} {d} {hh} {z} {ch} {w}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_n_oh {[{v} {b} {g} {l} {dh} {m} {d} {hh} {z} {ch} {w}]}}}]}}]} {[{n} {[{[{{any_Cx_zh_zh_n_oh {[{v} {b} {g} {l} {dh} {m} {d} {hh} {z} {ch} {w}]}}} {zh}]} {[{zh} {{any_Cx_zh_zh_n_oh {[{v} {b} {g} {l} {dh} {m} {d} {hh} {z} {ch} {w}]}}}]}]}]}]}
Closing rule:
guard: m
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {m}]}} {{[{m} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_zh_n_m {[{g} {z} {d} {hh} {l} {w} {b} {dh} {ch} {v}]}}} {m}]}} {{[{m} {{any_Cx_zh_n_m {[{g} {z} {d} {hh} {l} {w} {b} {dh} {ch} {v}]}}}]}}]} {sil}]}
rule 2 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Cx_yuw_z_p {[{w} {m} {hh} {ch} {g} {dh} {l} {zh} {v} {b} {d}]}}}]} {[{{any_Cx_yuw_z_p {[{w} {m} {hh} {ch} {g} {dh} {l} {zh} {v} {b} {d}]}}} {z}]}]}} {{[{[{z} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]} {[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {z}]}]}}]}}
Phoneme rule:
guard: zh phoneme: yuw
rule: {[{[{{[{{any_Cx_zh_p_z_yuw_k {[{w} {d} {g} {b} {m} {dh} {hh} {v} {ch} {l}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_p_z_yuw_k {[{w} {d} {g} {b} {m} {dh} {hh} {v} {ch} {l}]}}}]}}]} {[{yuw} {[{[{{any_Cx_zh_p_z_yuw_k {[{w} {d} {g} {b} {m} {dh} {hh} {v} {ch} {l}]}}} {zh}]} {[{zh} {{any_Cx_zh_p_z_yuw_k {[{w} {d} {g} {b} {m} {dh} {hh} {v} {ch} {l}]}}}]}]}]}]}
Phoneme rule:
guard: z phoneme: k
rule: {[{[{{[{{any_Cx_z_zh_k_oh_yuw {[{l} {w} {g} {dh} {d} {hh} {v} {ch} {m} {b}]}}} {z}]}} {{[{z} {{any_Cx_z_zh_k_oh_yuw {[{l} {w} {g} {dh} {d} {hh} {v} {ch} {m} {b}]}}}]}}]} {[{k} {[{[{{any_Cx_z_zh_k_oh {[{g} {w} {dh} {ch} {v} {b} {d} {hh} {l} {m}]}}} {z}]} {[{z} {{any_Cx_z_zh_k_oh {[{g} {w} {dh} {ch} {v} {b} {d} {hh} {l} {m}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: oh
rule: {[{[{{[{{any_Cx_zh_z_oh_k {[{ch} {w} {b} {m} {l} {hh} {v} {d} {g} {dh}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_z_oh_k {[{ch} {w} {b} {m} {l} {hh} {v} {d} {g} {dh}]}}}]}}]} {[{oh} {[{[{{any_Cx_zh_z_oh_n_k {[{l} {d} {w} {dh} {v} {b} {m} {ch} {g} {hh}]}}} {zh}]} {[{zh} {{any_Cx_zh_z_oh_n_k {[{l} {d} {w} {dh} {v} {b} {m} {ch} {g} {hh}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: n
rule: {[{[{{[{{any_Cx_zh_zh_n_oh {[{dh} {ch} {d} {g} {w} {b} {l} {m} {v} {hh} {z}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_n_oh {[{dh} {ch} {d} {g} {w} {b} {l} {m} {v} {hh} {z}]}}}]}}]} {[{n} {[{[{{any_Cx_zh_zh_n_oh {[{dh} {ch} {d} {g} {w} {b} {l} {m} {v} {hh} {z}]}}} {zh}]} {[{zh} {{any_Cx_zh_zh_n_oh {[{dh} {ch} {d} {g} {w} {b} {l} {m} {v} {hh} {z}]}}}]}]}]}]}
Closing rule:
guard: z
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {z}]}} {{[{z} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_zh_n_z {[{dh} {m} {v} {d} {l} {w} {ch} {g} {b} {hh}]}}} {z}]}} {{[{z} {{any_Cx_zh_n_z {[{dh} {m} {v} {d} {l} {w} {ch} {g} {b} {hh}]}}}]}}]} {sil}]}
rule 3 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Cx_yuw_z_p {[{g} {ch} {w} {b} {l} {zh} {d} {m} {dh} {hh} {v}]}}}]} {[{{any_Cx_yuw_z_p {[{g} {ch} {w} {b} {l} {zh} {d} {m} {dh} {hh} {v}]}}} {z}]}]}} {{[{[{z} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]} {[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {z}]}]}}]}}
Phoneme rule:
guard: z phoneme: yuw
rule: {[{[{{[{{any_Cx_z_p_z_yuw_k {[{l} {v} {b} {g} {zh} {dh} {w} {ch} {d} {m} {hh}]}}} {z}]}} {{[{z} {{any_Cx_z_p_z_yuw_k {[{l} {v} {b} {g} {zh} {dh} {w} {ch} {d} {m} {hh}]}}}]}}]} {[{yuw} {[{[{{any_Cx_z_p_z_yuw_k {[{l} {v} {b} {g} {zh} {dh} {w} {ch} {d} {m} {hh}]}}} {z}]} {[{z} {{any_Cx_z_p_z_yuw_k {[{l} {v} {b} {g} {zh} {dh} {w} {ch} {d} {m} {hh}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: k
rule: {[{[{{[{{any_Cx_zh_z_k_oh_yuw {[{v} {m} {w} {g} {b} {ch} {d} {hh} {l} {dh}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_z_k_oh_yuw {[{v} {m} {w} {g} {b} {ch} {d} {hh} {l} {dh}]}}}]}}]} {[{k} {[{[{{any_Cx_zh_z_k_oh {[{dh} {hh} {v} {l} {m} {d} {g} {w} {b} {ch}]}}} {zh}]} {[{zh} {{any_Cx_zh_z_k_oh {[{dh} {hh} {v} {l} {m} {d} {g} {w} {b} {ch}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: oh
rule: {[{[{{[{{any_Cx_zh_zh_oh_k {[{w} {z} {m} {v} {g} {b} {ch} {dh} {hh} {l} {d}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_oh_k {[{w} {z} {m} {v} {g} {b} {ch} {dh} {hh} {l} {d}]}}}]}}]} {[{oh} {[{[{{any_Cx_zh_zh_oh_n_k {[{d} {g} {z} {ch} {hh} {m} {v} {w} {b} {dh} {l}]}}} {zh}]} {[{zh} {{any_Cx_zh_zh_oh_n_k {[{d} {g} {z} {ch} {hh} {m} {v} {w} {b} {dh} {l}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: n
rule: {[{[{{[{{any_Cx_zh_zh_n_oh {[{hh} {b} {ch} {g} {v} {l} {m} {w} {z} {d} {dh}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_n_oh {[{hh} {b} {ch} {g} {v} {l} {m} {w} {z} {d} {dh}]}}}]}}]} {[{n} {[{[{{any_Cx_zh_zh_n_oh {[{hh} {b} {ch} {g} {v} {l} {m} {w} {z} {d} {dh}]}}} {zh}]} {[{zh} {{any_Cx_zh_zh_n_oh {[{hh} {b} {ch} {g} {v} {l} {m} {w} {z} {d} {dh}]}}}]}]}]}]}
Closing rule:
guard: z
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {z}]}} {{[{z} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_zh_n_z {[{l} {v} {ch} {hh} {dh} {b} {d} {m} {w} {g}]}}} {z}]}} {{[{z} {{any_Cx_zh_n_z {[{l} {v} {ch} {hh} {dh} {b} {d} {m} {w} {g}]}}}]}}]} {sil}]}
rule 4 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Cx_yuw_z_p {[{l} {w} {b} {g} {zh} {dh} {m} {ch} {v} {d} {hh}]}}}]} {[{{any_Cx_yuw_z_p {[{l} {w} {b} {g} {zh} {dh} {m} {ch} {v} {d} {hh}]}}} {z}]}]}} {{[{[{z} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]} {[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {z}]}]}}]}}
Phoneme rule:
guard: z phoneme: yuw
rule: {[{[{{[{{any_Cx_z_p_z_yuw_k {[{b} {w} {hh} {v} {dh} {g} {l} {zh} {ch} {d} {m}]}}} {z}]}} {{[{z} {{any_Cx_z_p_z_yuw_k {[{b} {w} {hh} {v} {dh} {g} {l} {zh} {ch} {d} {m}]}}}]}}]} {[{yuw} {[{[{{any_Cx_z_p_z_yuw_k {[{b} {w} {hh} {v} {dh} {g} {l} {zh} {ch} {d} {m}]}}} {z}]} {[{z} {{any_Cx_z_p_z_yuw_k {[{b} {w} {hh} {v} {dh} {g} {l} {zh} {ch} {d} {m}]}}}]}]}]}]}
Phoneme rule:
guard: z phoneme: k
rule: {[{[{{[{{any_Cx_z_z_k_oh_yuw {[{ch} {v} {d} {l} {hh} {w} {zh} {b} {dh} {m} {g}]}}} {z}]}} {{[{z} {{any_Cx_z_z_k_oh_yuw {[{ch} {v} {d} {l} {hh} {w} {zh} {b} {dh} {m} {g}]}}}]}}]} {[{k} {[{[{{any_Cx_z_z_k_oh {[{m} {zh} {dh} {v} {b} {d} {ch} {w} {l} {g} {hh}]}}} {z}]} {[{z} {{any_Cx_z_z_k_oh {[{m} {zh} {dh} {v} {b} {d} {ch} {w} {l} {g} {hh}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: oh
rule: {[{[{{[{{any_Cx_zh_z_oh_k {[{l} {d} {g} {w} {b} {v} {ch} {m} {dh} {hh}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_z_oh_k {[{l} {d} {g} {w} {b} {v} {ch} {m} {dh} {hh}]}}}]}}]} {[{oh} {[{[{{any_Cx_zh_z_oh_n_k {[{m} {v} {g} {hh} {l} {w} {b} {ch} {d} {dh}]}}} {zh}]} {[{zh} {{any_Cx_zh_z_oh_n_k {[{m} {v} {g} {hh} {l} {w} {b} {ch} {d} {dh}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: n
rule: {[{[{{[{{any_Cx_sh_zh_n_oh {[{z} {dh} {v} {m} {ch} {g} {hh} {b} {d} {w} {l}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_zh_n_oh {[{z} {dh} {v} {m} {ch} {g} {hh} {b} {d} {w} {l}]}}}]}}]} {[{n} {[{[{{any_Cx_sh_zh_n_oh {[{z} {dh} {v} {m} {ch} {g} {hh} {b} {d} {w} {l}]}}} {sh}]} {[{sh} {{any_Cx_sh_zh_n_oh {[{z} {dh} {v} {m} {ch} {g} {hh} {b} {d} {w} {l}]}}}]}]}]}]}
Closing rule:
guard: thr
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {thr}]}} {{[{thr} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_n_thr {[{d} {dh} {m} {b} {ch} {l} {v} {w} {zh} {hh} {g} {z}]}}} {thr}]}} {{[{thr} {{any_Cx_sh_n_thr {[{d} {dh} {m} {b} {ch} {l} {v} {w} {zh} {hh} {g} {z}]}}}]}}]} {sil}]}

parse: err = Parser error
ruleAligned = [{{yuw 0} [{0 1} {2 1} {3 1} {4 1}]} {{k 0} [{0 2} {2 2} {3 2} {4 2}]} {{oh 0} [{0 3} {2 3} {3 3} {4 3}]} {{n 0} [{0 4} {2 4} {3 4} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {yuw 26 44} {k 46 64} {oh 65 83} {n 85 101} {sil 103 103}]}
{80 []}
{91 [{sil 0 0} {yuw 29 45} {k 46 65} {oh 66 86} {n 87 105} {b 107 111} {z 112 112} {sil 116 116}]}
{105 [{sil 0 0} {yuw 27 46} {k 47 65} {oh 66 87} {n 88 110} {z 111 115} {v 116 129} {sil 130 130}]}
{125 [{sil 3 3} {yuw 28 46} {k 46 66} {oh 66 86} {n 87 107} {v 108 118} {thr 119 126} {sil 126 126}]}

timeAligned = [{{yuw 28 45} [{0 1} {3 1} {4 1} {2 1}]} {{k 46 65} [{0 2} {2 2} {4 2} {3 2}]} {{oh 66 86} [{0 3} {2 3} {3 3} {4 3}]} {{n 87 105} [{0 4} {2 4} {4 4} {3 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 44
i, iTime, newITime, timeStartFrom = 2 1 2 64
i, iTime, newITime, timeStartFrom = 3 2 3 83
combinedVerdict    = [{yuw 0} {k 0} {oh 0} {n 0}]
ruleAlignedVerdict = [{yuw 0} {k 0} {oh 0} {n 0}]

score->
+1 for yuw
+1 for k
+1 for oh
+1 for n
score<-: 9
Rules =
rule 0 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: hh
rule: {hh {[{sil} {{[{[{hh} {{any_Vx_y_hh_p_noSlide {[{ae} {oh} {uh} {aa} {ao} {uw} {ah} {ax} {eh} {ih} {iy}]}}}]} {[{{any_Vx_y_hh_p_noSlide {[{ae} {oh} {uh} {aa} {ao} {uw} {ah} {ax} {eh} {ih} {iy}]}}} {hh}]}]}} {{[{[{hh} {{any_Cx_y_hh_p {[{zh} {b} {dh} {z} {ch} {d} {g} {l} {m} {v} {w}]}}}]} {[{{any_Cx_y_hh_p {[{zh} {b} {dh} {z} {ch} {d} {g} {l} {m} {v} {w}]}}} {hh}]}]}}]}}
Phoneme rule:
guard: zh phoneme: y
rule: {[{[{[{{[{{any_Vx_zh_p_hh_y_uw_noSlide {[{oh} {ao} {ax} {iy} {eh} {uh} {ih} {aa} {ae} {ah}]}}} {zh}]}} {{[{zh} {{any_Vx_zh_p_hh_y_uw_noSlide {[{oh} {ao} {ax} {iy} {eh} {uh} {ih} {aa} {ae} {ah}]}}}]}}]} {[{{[{{any_Cx_zh_p_hh {[{m} {v} {ch} {d} {g} {b} {l} {z} {dh} {w}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_p_hh {[{m} {v} {ch} {d} {g} {b} {l} {z} {dh} {w}]}}}]}}]}]} {[{y} {[{[{{any_Vx_zh_p_hh_y_uw_noSlide {[{oh} {ao} {ax} {iy} {eh} {uh} {ih} {aa} {ae} {ah}]}}} {zh}]} {[{zh} {{any_Vx_zh_p_hh_y_uw_noSlide {[{oh} {ao} {ax} {iy} {eh} {uh} {ih} {aa} {ae} {ah}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: uw
rule: {[{[{[{{[{{any_Vx_zh_zh_uw_y_noSlide {[{ae} {ax} {oh} {uh} {aa} {ah} {ao} {eh} {ih} {iy}]}}} {zh}]}} {{[{zh} {{any_Vx_zh_zh_uw_y_noSlide {[{ae} {ax} {oh} {uh} {aa} {ah} {ao} {eh} {ih} {iy}]}}}]}}]} {[{{[{{any_Cx_zh_zh_k {[{d} {g} {l} {z} {m} {ch} {dh} {w} {hh} {b} {v}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_k {[{d} {g} {l} {z} {m} {ch} {dh} {w} {hh} {b} {v}]}}}]}}]}]} {[{uw} {[{[{{any_Vx_zh_zh_uw_noSlide {[{aa} {ae} {ah} {iy} {oh} {y} {ao} {ax} {eh} {ih} {uh}]}}} {zh}]} {[{zh} {{any_Vx_zh_zh_uw_noSlide {[{aa} {ae} {ah} {iy} {oh} {y} {ao} {ax} {eh} {ih} {uh}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: k
rule: {[{[{{[{{any_Cx_zh_zh_k_oh {[{hh} {b} {dh} {z} {v} {m} {ch} {l} {w} {d} {g}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_k_oh {[{hh} {b} {dh} {z} {v} {m} {ch} {l} {w} {d} {g}]}}}]}}]} {[{k} {[{[{{any_Cx_zh_zh_k_oh {[{hh} {b} {dh} {z} {v} {m} {ch} {l} {w} {d} {g}]}}} {zh}]} {[{zh} {{any_Cx_zh_zh_k_oh {[{hh} {b} {dh} {z} {v} {m} {ch} {l} {w} {d} {g}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: oh
rule: {[{[{{[{{any_Cx_zh_zh_oh_k {[{v} {b} {w} {d} {dh} {l} {m} {ch} {g} {hh} {z}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_oh_k {[{v} {b} {w} {d} {dh} {l} {m} {ch} {g} {hh} {z}]}}}]}}]} {[{oh} {[{[{{any_Cx_zh_zh_oh_n_k {[{hh} {v} {dh} {m} {g} {l} {z} {d} {w} {ch} {b}]}}} {zh}]} {[{zh} {{any_Cx_zh_zh_oh_n_k {[{hh} {v} {dh} {m} {g} {l} {z} {d} {w} {ch} {b}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: n
rule: {[{[{{[{{any_Cx_zh_zh_n_oh {[{m} {w} {ch} {z} {b} {l} {dh} {d} {v} {g} {hh}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_n_oh {[{m} {w} {ch} {z} {b} {l} {dh} {d} {v} {g} {hh}]}}}]}}]} {[{n} {[{[{{any_Cx_zh_zh_n_oh {[{m} {w} {ch} {z} {b} {l} {dh} {d} {v} {g} {hh}]}}} {zh}]} {[{zh} {{any_Cx_zh_zh_n_oh {[{m} {w} {ch} {z} {b} {l} {dh} {d} {v} {g} {hh}]}}}]}]}]}]}
Closing rule:
guard: d
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {d}]}} {{[{d} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_zh_n_d {[{b} {v} {g} {hh} {dh} {z} {w} {ch} {l} {m}]}}} {d}]}} {{[{d} {{any_Cx_zh_n_d {[{b} {v} {g} {hh} {dh} {z} {w} {ch} {l} {m}]}}}]}}]} {sil}]}
rule 1 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: l
rule: {l {[{sil} {{[{[{l} {{any_Vx_y_l_p_noSlide {[{eh} {iy} {oh} {uh} {ae} {ih} {aa} {ao} {ax} {uw} {ah}]}}}]} {[{{any_Vx_y_l_p_noSlide {[{eh} {iy} {oh} {uh} {ae} {ih} {aa} {ao} {ax} {uw} {ah}]}}} {l}]}]}} {{[{[{l} {{any_Cx_y_l_p {[{d} {g} {hh} {dh} {w} {zh} {m} {ch} {z} {v} {b}]}}}]} {[{{any_Cx_y_l_p {[{d} {g} {hh} {dh} {w} {zh} {m} {ch} {z} {v} {b}]}}} {l}]}]}}]}}
Phoneme rule:
guard: zh phoneme: y
rule: {[{[{[{{[{{any_Vx_zh_p_l_y_uw_noSlide {[{ah} {uh} {aa} {eh} {ih} {oh} {ae} {ao} {ax} {iy}]}}} {zh}]}} {{[{zh} {{any_Vx_zh_p_l_y_uw_noSlide {[{ah} {uh} {aa} {eh} {ih} {oh} {ae} {ao} {ax} {iy}]}}}]}}]} {[{{[{{any_Cx_zh_p_l {[{d} {m} {v} {hh} {z} {b} {ch} {dh} {g} {w}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_p_l {[{d} {m} {v} {hh} {z} {b} {ch} {dh} {g} {w}]}}}]}}]}]} {[{y} {[{[{{any_Vx_zh_p_l_y_uw_noSlide {[{ah} {uh} {aa} {eh} {ih} {oh} {ae} {ao} {ax} {iy}]}}} {zh}]} {[{zh} {{any_Vx_zh_p_l_y_uw_noSlide {[{ah} {uh} {aa} {eh} {ih} {oh} {ae} {ao} {ax} {iy}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: uw
rule: {[{[{[{{[{{any_Vx_zh_zh_uw_y_noSlide {[{ao} {ih} {iy} {oh} {eh} {uh} {aa} {ae} {ah} {ax}]}}} {zh}]}} {{[{zh} {{any_Vx_zh_zh_uw_y_noSlide {[{ao} {ih} {iy} {oh} {eh} {uh} {aa} {ae} {ah} {ax}]}}}]}}]} {[{{[{{any_Cx_zh_zh_k {[{g} {v} {dh} {ch} {z} {b} {d} {hh} {w} {l} {m}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_k {[{g} {v} {dh} {ch} {z} {b} {d} {hh} {w} {l} {m}]}}}]}}]}]} {[{uw} {[{[{{any_Vx_zh_zh_uw_noSlide {[{aa} {ae} {ah} {eh} {y} {ao} {ax} {ih} {iy} {oh} {uh}]}}} {zh}]} {[{zh} {{any_Vx_zh_zh_uw_noSlide {[{aa} {ae} {ah} {eh} {y} {ao} {ax} {ih} {iy} {oh} {uh}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: k
rule: {[{[{{[{{any_Cx_zh_zh_k_oh {[{hh} {d} {w} {v} {b} {dh} {z} {ch} {m} {l} {g}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_k_oh {[{hh} {d} {w} {v} {b} {dh} {z} {ch} {m} {l} {g}]}}}]}}]} {[{k} {[{[{{any_Cx_zh_zh_k_oh {[{hh} {d} {w} {v} {b} {dh} {z} {ch} {m} {l} {g}]}}} {zh}]} {[{zh} {{any_Cx_zh_zh_k_oh {[{hh} {d} {w} {v} {b} {dh} {z} {ch} {m} {l} {g}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: oh
rule: {[{[{{[{{any_Cx_zh_zh_oh_k {[{z} {w} {l} {m} {b} {hh} {g} {dh} {d} {v} {ch}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_oh_k {[{z} {w} {l} {m} {b} {hh} {g} {dh} {d} {v} {ch}]}}}]}}]} {[{oh} {[{[{{any_Cx_zh_zh_oh_n_k {[{b} {l} {d} {v} {z} {m} {ch} {w} {dh} {g} {hh}]}}} {zh}]} {[{zh} {{any_Cx_zh_zh_oh_n_k {[{b} {l} {d} {v} {z} {m} {ch} {w} {dh} {g} {hh}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: n
rule: {[{[{{[{{any_Cx_sh_zh_n_oh {[{m} {v} {ch} {hh} {dh} {l} {w} {z} {b} {g} {d}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_zh_n_oh {[{m} {v} {ch} {hh} {dh} {l} {w} {z} {b} {g} {d}]}}}]}}]} {[{n} {[{[{{any_Cx_sh_zh_n_oh {[{m} {v} {ch} {hh} {dh} {l} {w} {z} {b} {g} {d}]}}} {sh}]} {[{sh} {{any_Cx_sh_zh_n_oh {[{m} {v} {ch} {hh} {dh} {l} {w} {z} {b} {g} {d}]}}}]}]}]}]}
Closing rule:
guard: ng
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {ng}]}} {{[{ng} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_n_ng {[{l} {d} {dh} {w} {zh} {ch} {hh} {g} {m} {z} {b} {v}]}}} {ng}]}} {{[{ng} {{any_Cx_sh_n_ng {[{l} {d} {dh} {w} {zh} {ch} {hh} {g} {m} {z} {b} {v}]}}}]}}]} {sil}]}
rule 2 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: b
rule: {b {[{sil} {{[{[{b} {{any_Vx_y_b_p_noSlide {[{aa} {ah} {ao} {ax} {eh} {uh} {uw} {ae} {ih} {iy} {oh}]}}}]} {[{{any_Vx_y_b_p_noSlide {[{aa} {ah} {ao} {ax} {eh} {uh} {uw} {ae} {ih} {iy} {oh}]}}} {b}]}]}} {{[{[{b} {{any_Cx_y_b_p {[{ch} {m} {v} {w} {g} {l} {dh} {hh} {z} {d} {zh}]}}}]} {[{{any_Cx_y_b_p {[{ch} {m} {v} {w} {g} {l} {dh} {hh} {z} {d} {zh}]}}} {b}]}]}}]}}
Phoneme rule:
guard: zh phoneme: y
rule: {[{[{[{{[{{any_Vx_zh_p_b_y_uw_noSlide {[{ih} {iy} {ax} {ao} {oh} {ah} {uh} {ae} {eh} {aa}]}}} {zh}]}} {{[{zh} {{any_Vx_zh_p_b_y_uw_noSlide {[{ih} {iy} {ax} {ao} {oh} {ah} {uh} {ae} {eh} {aa}]}}}]}}]} {[{{[{{any_Cx_zh_p_b {[{w} {ch} {v} {z} {hh} {g} {d} {m} {dh} {l}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_p_b {[{w} {ch} {v} {z} {hh} {g} {d} {m} {dh} {l}]}}}]}}]}]} {[{y} {[{[{{any_Vx_zh_p_b_y_uw_noSlide {[{ih} {iy} {ax} {ao} {oh} {ah} {uh} {ae} {eh} {aa}]}}} {zh}]} {[{zh} {{any_Vx_zh_p_b_y_uw_noSlide {[{ih} {iy} {ax} {ao} {oh} {ah} {uh} {ae} {eh} {aa}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: uw
rule: {[{[{[{{[{{any_Vx_zh_zh_uw_y_noSlide {[{ae} {eh} {ih} {iy} {oh} {uh} {aa} {ah} {ao} {ax}]}}} {zh}]}} {{[{zh} {{any_Vx_zh_zh_uw_y_noSlide {[{ae} {eh} {ih} {iy} {oh} {uh} {aa} {ah} {ao} {ax}]}}}]}}]} {[{{[{{any_Cx_zh_zh_k {[{m} {l} {ch} {dh} {g} {v} {b} {w} {z} {d} {hh}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_k {[{m} {l} {ch} {dh} {g} {v} {b} {w} {z} {d} {hh}]}}}]}}]}]} {[{uw} {[{[{{any_Vx_zh_zh_uw_noSlide {[{aa} {ae} {ah} {ax} {eh} {ih} {iy} {ao} {oh} {uh} {y}]}}} {zh}]} {[{zh} {{any_Vx_zh_zh_uw_noSlide {[{aa} {ae} {ah} {ax} {eh} {ih} {iy} {ao} {oh} {uh} {y}]}}}]}]}]}]}
Phoneme rule:
guard: z phoneme: k
rule: {[{[{{[{{any_Cx_z_zh_k_oh {[{v} {b} {dh} {g} {w} {ch} {hh} {l} {m} {d}]}}} {z}]}} {{[{z} {{any_Cx_z_zh_k_oh {[{v} {b} {dh} {g} {w} {ch} {hh} {l} {m} {d}]}}}]}}]} {[{k} {[{[{{any_Cx_z_zh_k_oh {[{v} {b} {dh} {g} {w} {ch} {hh} {l} {m} {d}]}}} {z}]} {[{z} {{any_Cx_z_zh_k_oh {[{v} {b} {dh} {g} {w} {ch} {hh} {l} {m} {d}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: oh
rule: {[{[{{[{{any_Cx_zh_z_oh_k {[{v} {m} {l} {ch} {d} {dh} {hh} {w} {g} {b}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_z_oh_k {[{v} {m} {l} {ch} {d} {dh} {hh} {w} {g} {b}]}}}]}}]} {[{oh} {[{[{{any_Cx_zh_z_oh_n_k {[{w} {d} {g} {hh} {v} {m} {l} {b} {ch} {dh}]}}} {zh}]} {[{zh} {{any_Cx_zh_z_oh_n_k {[{w} {d} {g} {hh} {v} {m} {l} {b} {ch} {dh}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: n
rule: {[{[{{[{{any_Cx_sh_zh_n_oh {[{d} {l} {hh} {b} {ch} {w} {z} {dh} {g} {m} {v}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_zh_n_oh {[{d} {l} {hh} {b} {ch} {w} {z} {dh} {g} {m} {v}]}}}]}}]} {[{n} {[{[{{any_Cx_sh_zh_n_oh {[{d} {l} {hh} {b} {ch} {w} {z} {dh} {g} {m} {v}]}}} {sh}]} {[{sh} {{any_Cx_sh_zh_n_oh {[{d} {l} {hh} {b} {ch} {w} {z} {dh} {g} {m} {v}]}}}]}]}]}]}
Closing rule:
guard: ng
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {ng}]}} {{[{ng} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_n_ng {[{ch} {hh} {g} {zh} {d} {v} {z} {dh} {b} {l} {m} {w}]}}} {ng}]}} {{[{ng} {{any_Cx_sh_n_ng {[{ch} {hh} {g} {zh} {d} {v} {z} {dh} {b} {l} {m} {w}]}}}]}}]} {sil}]}
rule 3 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: b
rule: {b {[{sil} {{[{[{b} {{any_Vx_y_b_p_noSlide {[{oh} {uw} {ah} {iy} {ao} {aa} {ax} {ih} {uh} {ae} {eh}]}}}]} {[{{any_Vx_y_b_p_noSlide {[{oh} {uw} {ah} {iy} {ao} {aa} {ax} {ih} {uh} {ae} {eh}]}}} {b}]}]}} {{[{[{b} {{any_Cx_y_b_p {[{ch} {m} {g} {l} {zh} {dh} {z} {d} {hh} {w} {v}]}}}]} {[{{any_Cx_y_b_p {[{ch} {m} {g} {l} {zh} {dh} {z} {d} {hh} {w} {v}]}}} {b}]}]}}]}}
Phoneme rule:
guard: zh phoneme: y
rule: {[{[{[{{[{{any_Vx_zh_p_b_y_uw_noSlide {[{aa} {ax} {ae} {eh} {uh} {ah} {ao} {oh} {ih} {iy}]}}} {zh}]}} {{[{zh} {{any_Vx_zh_p_b_y_uw_noSlide {[{aa} {ax} {ae} {eh} {uh} {ah} {ao} {oh} {ih} {iy}]}}}]}}]} {[{{[{{any_Cx_zh_p_b {[{g} {l} {z} {d} {w} {ch} {dh} {hh} {m} {v}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_p_b {[{g} {l} {z} {d} {w} {ch} {dh} {hh} {m} {v}]}}}]}}]}]} {[{y} {[{[{{any_Vx_zh_p_b_y_uw_noSlide {[{aa} {ax} {ae} {eh} {uh} {ah} {ao} {oh} {ih} {iy}]}}} {zh}]} {[{zh} {{any_Vx_zh_p_b_y_uw_noSlide {[{aa} {ax} {ae} {eh} {uh} {ah} {ao} {oh} {ih} {iy}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: uw
rule: {[{[{[{{[{{any_Vx_zh_zh_uw_y_noSlide {[{ah} {ax} {iy} {oh} {aa} {ae} {ao} {eh} {ih} {uh}]}}} {zh}]}} {{[{zh} {{any_Vx_zh_zh_uw_y_noSlide {[{ah} {ax} {iy} {oh} {aa} {ae} {ao} {eh} {ih} {uh}]}}}]}}]} {[{{[{{any_Cx_zh_zh_k {[{g} {l} {z} {m} {ch} {d} {hh} {w} {b} {dh} {v}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_k {[{g} {l} {z} {m} {ch} {d} {hh} {w} {b} {dh} {v}]}}}]}}]}]} {[{uw} {[{[{{any_Vx_zh_zh_uw_noSlide {[{eh} {y} {aa} {ae} {ao} {iy} {oh} {uh} {ah} {ax} {ih}]}}} {zh}]} {[{zh} {{any_Vx_zh_zh_uw_noSlide {[{eh} {y} {aa} {ae} {ao} {iy} {oh} {uh} {ah} {ax} {ih}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: k
rule: {[{[{{[{{any_Cx_zh_zh_k_oh {[{b} {w} {dh} {m} {hh} {v} {z} {ch} {d} {g} {l}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_k_oh {[{b} {w} {dh} {m} {hh} {v} {z} {ch} {d} {g} {l}]}}}]}}]} {[{k} {[{[{{any_Cx_zh_zh_k_oh {[{b} {w} {dh} {m} {hh} {v} {z} {ch} {d} {g} {l}]}}} {zh}]} {[{zh} {{any_Cx_zh_zh_k_oh {[{b} {w} {dh} {m} {hh} {v} {z} {ch} {d} {g} {l}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: oh
rule: {[{[{{[{{any_Cx_zh_zh_oh_k {[{l} {z} {d} {g} {m} {v} {hh} {b} {w} {ch} {dh}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_oh_k {[{l} {z} {d} {g} {m} {v} {hh} {b} {w} {ch} {dh}]}}}]}}]} {[{oh} {[{[{{any_Cx_zh_zh_oh_n_k {[{w} {m} {l} {v} {z} {b} {ch} {d} {dh} {g} {hh}]}}} {zh}]} {[{zh} {{any_Cx_zh_zh_oh_n_k {[{w} {m} {l} {v} {z} {b} {ch} {d} {dh} {g} {hh}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: n
rule: {[{[{{[{{any_Cx_sh_zh_n_oh {[{v} {g} {m} {ch} {z} {d} {hh} {w} {b} {dh} {l}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_zh_n_oh {[{v} {g} {m} {ch} {z} {d} {hh} {w} {b} {dh} {l}]}}}]}}]} {[{n} {[{[{{any_Cx_sh_zh_n_oh {[{v} {g} {m} {ch} {z} {d} {hh} {w} {b} {dh} {l}]}}} {sh}]} {[{sh} {{any_Cx_sh_zh_n_oh {[{v} {g} {m} {ch} {z} {d} {hh} {w} {b} {dh} {l}]}}}]}]}]}]}
Closing rule:
guard: d
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {d}]}} {{[{d} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_n_d {[{z} {g} {hh} {zh} {dh} {w} {ch} {b} {v} {l} {m}]}}} {d}]}} {{[{d} {{any_Cx_sh_n_d {[{z} {g} {hh} {zh} {dh} {w} {ch} {b} {v} {l} {m}]}}}]}}]} {sil}]}
rule 4 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: b
rule: {b {[{sil} {{[{[{b} {{any_Vx_y_b_p_noSlide {[{ae} {ih} {uh} {aa} {iy} {uw} {ah} {ao} {ax} {eh} {oh}]}}}]} {[{{any_Vx_y_b_p_noSlide {[{ae} {ih} {uh} {aa} {iy} {uw} {ah} {ao} {ax} {eh} {oh}]}}} {b}]}]}} {{[{[{b} {{any_Cx_y_b_p {[{hh} {ch} {dh} {zh} {g} {d} {m} {z} {l} {v} {w}]}}}]} {[{{any_Cx_y_b_p {[{hh} {ch} {dh} {zh} {g} {d} {m} {z} {l} {v} {w}]}}} {b}]}]}}]}}
Phoneme rule:
guard: zh phoneme: y
rule: {[{[{[{{[{{any_Vx_zh_p_b_y_uw_noSlide {[{aa} {iy} {eh} {uh} {ae} {ah} {ih} {oh} {ao} {ax}]}}} {zh}]}} {{[{zh} {{any_Vx_zh_p_b_y_uw_noSlide {[{aa} {iy} {eh} {uh} {ae} {ah} {ih} {oh} {ao} {ax}]}}}]}}]} {[{{[{{any_Cx_zh_p_b {[{m} {g} {hh} {d} {ch} {dh} {w} {l} {v} {z}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_p_b {[{m} {g} {hh} {d} {ch} {dh} {w} {l} {v} {z}]}}}]}}]}]} {[{y} {[{[{{any_Vx_zh_p_b_y_uw_noSlide {[{aa} {iy} {eh} {uh} {ae} {ah} {ih} {oh} {ao} {ax}]}}} {zh}]} {[{zh} {{any_Vx_zh_p_b_y_uw_noSlide {[{aa} {iy} {eh} {uh} {ae} {ah} {ih} {oh} {ao} {ax}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: uw
rule: {[{[{[{{[{{any_Vx_zh_zh_uw_y_noSlide {[{uh} {aa} {ae} {ih} {iy} {oh} {ah} {ao} {ax} {eh}]}}} {zh}]}} {{[{zh} {{any_Vx_zh_zh_uw_y_noSlide {[{uh} {aa} {ae} {ih} {iy} {oh} {ah} {ao} {ax} {eh}]}}}]}}]} {[{{[{{any_Cx_zh_zh_k {[{b} {ch} {w} {dh} {hh} {z} {m} {g} {l} {v} {d}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_k {[{b} {ch} {w} {dh} {hh} {z} {m} {g} {l} {v} {d}]}}}]}}]}]} {[{uw} {[{[{{any_Vx_zh_zh_uw_noSlide {[{y} {ae} {ih} {oh} {eh} {iy} {uh} {aa} {ah} {ao} {ax}]}}} {zh}]} {[{zh} {{any_Vx_zh_zh_uw_noSlide {[{y} {ae} {ih} {oh} {eh} {iy} {uh} {aa} {ah} {ao} {ax}]}}}]}]}]}]}
Phoneme rule:
guard: z phoneme: k
rule: {[{[{{[{{any_Cx_z_zh_k_oh {[{g} {dh} {b} {ch} {w} {d} {l} {m} {v} {hh}]}}} {z}]}} {{[{z} {{any_Cx_z_zh_k_oh {[{g} {dh} {b} {ch} {w} {d} {l} {m} {v} {hh}]}}}]}}]} {[{k} {[{[{{any_Cx_z_zh_k_oh {[{g} {dh} {b} {ch} {w} {d} {l} {m} {v} {hh}]}}} {z}]} {[{z} {{any_Cx_z_zh_k_oh {[{g} {dh} {b} {ch} {w} {d} {l} {m} {v} {hh}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: oh
rule: {[{[{{[{{any_Cx_zh_z_oh_k {[{w} {v} {ch} {l} {g} {hh} {d} {b} {m} {dh}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_z_oh_k {[{w} {v} {ch} {l} {g} {hh} {d} {b} {m} {dh}]}}}]}}]} {[{oh} {[{[{{any_Cx_zh_z_oh_n_k {[{hh} {w} {ch} {m} {b} {l} {g} {v} {d} {dh}]}}} {zh}]} {[{zh} {{any_Cx_zh_z_oh_n_k {[{hh} {w} {ch} {m} {b} {l} {g} {v} {d} {dh}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: n
rule: {[{[{{[{{any_Cx_sh_zh_n_oh {[{dh} {hh} {b} {l} {z} {ch} {v} {d} {g} {m} {w}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_zh_n_oh {[{dh} {hh} {b} {l} {z} {ch} {v} {d} {g} {m} {w}]}}}]}}]} {[{n} {[{[{{any_Cx_sh_zh_n_oh {[{dh} {hh} {b} {l} {z} {ch} {v} {d} {g} {m} {w}]}}} {sh}]} {[{sh} {{any_Cx_sh_zh_n_oh {[{dh} {hh} {b} {l} {z} {ch} {v} {d} {g} {m} {w}]}}}]}]}]}]}
Closing rule:
guard: ng
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {ng}]}} {{[{ng} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_n_ng {[{z} {ch} {hh} {l} {w} {d} {dh} {v} {b} {zh} {g} {m}]}}} {ng}]}} {{[{ng} {{any_Cx_sh_n_ng {[{z} {ch} {hh} {l} {w} {d} {dh} {v} {b} {zh} {g} {m}]}}}]}}]} {sil}]}

parse: err = Parser error
ruleAligned = [{{y 0} [{0 1} {2 1} {3 1} {4 1}]} {{uw 0} [{0 2} {2 2} {3 2} {4 2}]} {{k 0} [{0 3} {2 3} {3 3} {4 3}]} {{oh 0} [{0 4} {2 4} {3 4} {4 4}]} {{n 0} [{0 5} {2 5} {3 5} {4 5}]} {{v 3} [{2 7} {3 7} {4 7}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {y 26 38} {uw 39 49} {k 50 64} {oh 65 83} {n 85 101} {sil 103 103}]}
{80 []}
{91 [{sil 0 0} {y 26 40} {uw 41 49} {k 51 65} {oh 66 86} {n 87 98} {ng 99 104} {v 105 123} {sil 124 124}]}
{105 [{sil 0 0} {y 27 40} {uw 41 50} {k 51 65} {oh 66 87} {n 88 109} {d 110 110} {v 116 129} {sil 130 130}]}
{125 [{sil 3 3} {y 27 37} {uw 38 52} {k 53 66} {oh 66 86} {n 87 99} {ng 100 107} {v 108 126} {sil 127 127}]}

timeAligned = [{{y 27 38} [{0 1} {2 1} {3 1} {4 1}]} {{uw 41 49} [{0 2} {2 2} {3 2} {4 2}]} {{k 51 65} [{0 3} {2 3} {3 3} {4 3}]} {{oh 66 86} [{0 4} {2 4} {3 4} {4 4}]} {{n 87 99} [{0 5} {2 5} {4 5} {3 5}]} {{v 116 123} [{2 7} {3 7} {4 7}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 37
i, iTime, newITime, timeStartFrom = 2 1 2 49
i, iTime, newITime, timeStartFrom = 3 2 3 64
i, iTime, newITime, timeStartFrom = 4 3 4 83
i, iTime, newITime, timeStartFrom = 5 4 5 98
combinedVerdict    = [{y 0} {uw 0} {k 0} {oh 0} {n 0} {v 3}]
ruleAlignedVerdict = [{y 0} {uw 0} {k 0} {oh 0} {n 0} {v 3}]

score->
+1 for y
+1 for uw
+1 for k
+1 for oh
+1 for n
-1 for v
score<-: 4
testPronounce yuw good k good oh good n good
publish->
Total: 289.108514ms
{
  "results": [],
  "err": "Phoneme translation failure, translating phoneme yuw in word, yukon"
}
