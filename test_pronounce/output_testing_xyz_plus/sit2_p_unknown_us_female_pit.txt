
 length of audio =  1.199125



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.38 0.56 0.9400000000000001

 start3, duration3, end3 =  0.52 0.28 0.8

 Initial start, duration, end =  0.28 0.66 0.9400000000000001

 Cut at: start, duration =  0.28 0.899125     guard_end =  1.179125 

Running scan for frate = 125
Considering guard jh with value 1 for p ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 3 for t ...
candidateGuards = map[r:true]
Picking guard, r

frate, target rule = 125 public <pit> = (((sil [((b <any_Cx_p_b_d>) | (<any_Cx_p_b_d> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]) | (sil d (sil [((b <any_Cx_p_b_d>) | (<any_Cx_p_b_d> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]))) (([(<any_Cx_jh_d_b_p> jh)] | [(jh <any_Cx_jh_d_b_p>)]) (p | ((<any_Cx_jh_d_b_p> jh) | (jh <any_Cx_jh_d_b_p>)))) ((([(<any_Vx_r_jh_ih_noSlide> r)] | [(r <any_Vx_r_jh_ih_noSlide>)]) ([(<any_Cx_r_jh_t_p> r)] | [(r <any_Cx_r_jh_t_p>)])) (ih | ((<any_Vx_r_jh_ih_noSlide> r) | (r <any_Vx_r_jh_ih_noSlide>)))) (([(<any_Cx_r_r_t> r)] | [(r <any_Cx_r_r_t>)]) (t | ((<any_Cx_r_r_t> r) | (r <any_Cx_r_r_t>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_r_t_thr> thr)] | [(thr <any_Cx_r_t_thr>)]) sil))
Running scan for frate = 105
Considering guard jh with value 1 for p ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 3 for t ...
candidateGuards = map[r:true]
Picking guard, r

frate, target rule = 105 public <pit> = (((sil [((sh <any_Cx_p_sh_d>) | (<any_Cx_p_sh_d> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil d (sil [((sh <any_Cx_p_sh_d>) | (<any_Cx_p_sh_d> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_jh_d_sh_p> jh)] | [(jh <any_Cx_jh_d_sh_p>)]) (p | ((<any_Cx_jh_d_sh_p> jh) | (jh <any_Cx_jh_d_sh_p>)))) ((([(<any_Vx_r_jh_ih_noSlide> r)] | [(r <any_Vx_r_jh_ih_noSlide>)]) ([(<any_Cx_r_jh_t_p> r)] | [(r <any_Cx_r_jh_t_p>)])) (ih | ((<any_Vx_r_jh_ih_noSlide> r) | (r <any_Vx_r_jh_ih_noSlide>)))) (([(<any_Cx_r_r_t> r)] | [(r <any_Cx_r_r_t>)]) (t | ((<any_Cx_r_r_t> r) | (r <any_Cx_r_r_t>)))) (([(<any_vowel_noSlide> ch)] | [(ch <any_vowel_noSlide>)]) ([(<any_Cx_r_t_ch> ch)] | [(ch <any_Cx_r_t_ch>)]) sil))
Running scan for frate = 91
Considering guard jh with value 1 for p ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 3 for t ...
candidateGuards = map[r:true]
Picking guard, r

frate, target rule = 91 public <pit> = (((sil [((sh <any_Cx_p_sh_d>) | (<any_Cx_p_sh_d> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil d (sil [((sh <any_Cx_p_sh_d>) | (<any_Cx_p_sh_d> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_jh_d_sh_p> jh)] | [(jh <any_Cx_jh_d_sh_p>)]) (p | ((<any_Cx_jh_d_sh_p> jh) | (jh <any_Cx_jh_d_sh_p>)))) ((([(<any_Vx_r_jh_ih_noSlide> r)] | [(r <any_Vx_r_jh_ih_noSlide>)]) ([(<any_Cx_r_jh_t_p> r)] | [(r <any_Cx_r_jh_t_p>)])) (ih | ((<any_Vx_r_jh_ih_noSlide> r) | (r <any_Vx_r_jh_ih_noSlide>)))) (([(<any_Cx_r_r_t> r)] | [(r <any_Cx_r_r_t>)]) (t | ((<any_Cx_r_r_t> r) | (r <any_Cx_r_r_t>)))) (([(<any_vowel_noSlide> ch)] | [(ch <any_vowel_noSlide>)]) ([(<any_Cx_r_t_ch> ch)] | [(ch <any_Cx_r_t_ch>)]) sil))
Running scan for frate = 80
Considering guard jh with value 1 for p ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 3 for t ...
candidateGuards = map[r:true]
Picking guard, r

frate, target rule = 80 public <pit> = (((sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil d (sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_jh_d_hh_p> jh)] | [(jh <any_Cx_jh_d_hh_p>)]) (p | ((<any_Cx_jh_d_hh_p> jh) | (jh <any_Cx_jh_d_hh_p>)))) ((([(<any_Vx_r_jh_ih_noSlide> r)] | [(r <any_Vx_r_jh_ih_noSlide>)]) ([(<any_Cx_r_jh_t_p> r)] | [(r <any_Cx_r_jh_t_p>)])) (ih | ((<any_Vx_r_jh_ih_noSlide> r) | (r <any_Vx_r_jh_ih_noSlide>)))) (([(<any_Cx_r_r_t> r)] | [(r <any_Cx_r_r_t>)]) (t | ((<any_Cx_r_r_t> r) | (r <any_Cx_r_r_t>)))) (([(<any_vowel_noSlide> ch)] | [(ch <any_vowel_noSlide>)]) ([(<any_Cx_r_t_ch> ch)] | [(ch <any_Cx_r_t_ch>)]) sil))
Running scan for frate = 72
Considering guard jh with value 1 for p ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 3 for t ...
candidateGuards = map[r:true]
Picking guard, r

frate, target rule = 72 public <pit> = (((sil [((b <any_Cx_p_b_d>) | (<any_Cx_p_b_d> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]) | (sil d (sil [((b <any_Cx_p_b_d>) | (<any_Cx_p_b_d> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]))) (([(<any_Cx_jh_d_b_p> jh)] | [(jh <any_Cx_jh_d_b_p>)]) (p | ((<any_Cx_jh_d_b_p> jh) | (jh <any_Cx_jh_d_b_p>)))) ((([(<any_Vx_r_jh_ih_noSlide> r)] | [(r <any_Vx_r_jh_ih_noSlide>)]) ([(<any_Cx_r_jh_t_p> r)] | [(r <any_Cx_r_jh_t_p>)])) (ih | ((<any_Vx_r_jh_ih_noSlide> r) | (r <any_Vx_r_jh_ih_noSlide>)))) (([(<any_Cx_r_r_t> r)] | [(r <any_Cx_r_r_t>)]) (t | ((<any_Cx_r_r_t> r) | (r <any_Cx_r_r_t>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_r_t_thr> thr)] | [(thr <any_Cx_r_t_thr>)]) sil))

results =
{72 [{sil 0 11} {z 12 21} {jh 22 24} {ih 25 34} {t 35 50} {sil 51 59}]}
{80 [{sil 0 13} {z 14 24} {jh 25 27} {ih 28 38} {t 39 55} {sil 56 65}]}
{91 [{sil 0 14} {z 15 28} {jh 29 31} {ih 32 44} {t 45 63} {sil 64 80}]}
{105 [{sil 0 15} {jh 16 19} {z 20 34} {ih 35 52} {t 53 72} {sil 73 89}]}
{125 [{sil 3 18} {b 19 21} {z 22 41} {p 42 44} {ih 45 63} {t 64 84} {sil 85 112}]}

normalised results =
{72 [{sil 0 11} {z 17 29} {jh 31 31} {ih 35 47} {t 49 69} {sil 71 82}]}
{80 [{sil 0 13} {z 18 30} {jh 31 31} {ih 35 48} {t 49 69} {sil 70 81}]}
{91 [{sil 0 14} {z 16 31} {jh 32 32} {ih 35 48} {t 49 69} {sil 70 88}]}
{105 [{sil 0 15} {jh 15 18} {z 19 32} {ih 33 50} {t 50 69} {sil 70 85}]}
{125 [{sil 3 18} {b 15 15} {z 18 33} {p 34 34} {ih 36 50} {t 51 67} {sil 68 90}]}

ruleAligned = [{{p 2} []} {{z 3} [{0 1} {1 1} {2 1} {3 2}]} {{ih 0} [{0 3} {1 3} {2 3} {3 3} {4 4}]} {{t 0} [{0 4} {1 4} {2 4} {3 4} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {z 17 29} {jh 31 31} {ih 35 47} {t 49 69} {sil 71 71}]}
{80 [{sil 0 0} {z 18 30} {jh 31 31} {ih 35 48} {t 49 69} {sil 70 70}]}
{91 [{sil 0 0} {z 16 31} {jh 32 32} {ih 35 48} {t 49 69} {sil 70 70}]}
{105 [{sil 0 0} {jh 15 15} {z 19 32} {ih 33 50} {t 50 69} {sil 70 70}]}
{125 [{sil 3 3} {b 15 15} {z 18 33} {p 34 34} {ih 36 50} {t 51 67} {sil 68 68}]}

timeAligned = [{{z 18 31} [{0 1} {1 1} {2 1} {4 2} {3 2}]} {{ih 35 48} [{0 3} {1 3} {2 3} {3 3} {4 4}]} {{t 49 69} [{0 4} {1 4} {2 4} {3 4} {4 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 -1 0
i, iTime, newITime, timeStartFrom = 1 0 0 0
i, iTime, newITime, timeStartFrom = 2 0 1 29
i, iTime, newITime, timeStartFrom = 3 1 2 47
combinedVerdict    = [{p 2} {z 3} {ih 0} {t 0}]
ruleAlignedVerdict = [{p 2} {z 3} {ih 0} {t 0}]

score->
-1 for p
-1 for z
+1 for ih
+1 for t
score<-: 0
bestResult = {0 [{p 2} {z 3} {ih 0} {t 0}] [p ih t]}
testPronounce p missing z surprise ih good t good
publish->
phonsToAlphas = [{[p] p} {[ih] i} {[t] t}]
getVerdict<-:new {p [p] 2}
getVerdict<-:new {i [ih] 0}
getVerdict<-:new {t [t] 0}
lettersVerdicts = [{p [p] 2} {z [z] 3} {i [ih] 0} {t [t] 0}]
publish<-
Total: 256.028471ms
{
  "results": [
    {
      "letters": "p",
      "phonemes": "p",
      "verdict": "missing"
    },
    {
      "letters": "z",
      "phonemes": "z",
      "verdict": "surprise"
    },
    {
      "letters": "i",
      "phonemes": "Éª",
      "verdict": "good"
    },
    {
      "letters": "t",
      "phonemes": "t",
      "verdict": "good"
    }
  ],
  "err": null
}
