
 length of audio =  2.413438



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.92 0.66 1.58

 start3, duration3, end3 =  0.9400000000000001 0.42000000000000004 1.36

 Initial start, duration, end =  0.8200000000000001 0.76 1.58

 Cut at: start, duration =  0.8200000000000001 1.21     guard_end =  2.0300000000000002 

Running scan for frate = 125
Considering guard aa with value 1 for s ...
candidateGuards = map[aa:true]
Picking guard, aa

Considering guard aa with value 2 for iy ...
candidateGuards = map[aa:true]
Picking guard, aa

Considering guard aa with value 1 for t ...
Considering guard ao with value 1 for t ...
candidateGuards = map[aa:true ao:true]
Picking guard, ao


frate, target rule = 125 public <seat> = (((sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil p (sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_aa_p_sh_s> aa)] | [(aa <any_Cx_aa_p_sh_s>)]) (s | z | ((<any_Cx_aa_p_sh_s> aa) | (aa <any_Cx_aa_p_sh_s>)))) ((([(<any_Vx_aa_aa_iy_noSlide> aa)] | [(aa <any_Vx_aa_aa_iy_noSlide>)]) ([(<any_Cx_aa_aa_t_s> aa)] | [(aa <any_Cx_aa_aa_t_s>)])) (iy | ((<any_Vx_aa_aa_iy_noSlide> aa) | (aa <any_Vx_aa_aa_iy_noSlide>)))) (([(<any_Cx_ao_aa_t> ao)] | [(ao <any_Cx_ao_aa_t>)]) (t | ((<any_Cx_ao_aa_t> ao) | (ao <any_Cx_ao_aa_t>)))) (([(<any_vowel_noSlide> k)] | [(k <any_vowel_noSlide>)]) ([(<any_Cx_ao_t_k> k)] | [(k <any_Cx_ao_t_k>)]) sil))
Running scan for frate = 105
Considering guard aa with value 1 for s ...
candidateGuards = map[aa:true]
Picking guard, aa

Considering guard aa with value 2 for iy ...
candidateGuards = map[aa:true]
Picking guard, aa

Considering guard aa with value 1 for t ...
Considering guard ao with value 1 for t ...
candidateGuards = map[aa:true ao:true]
Picking guard, ao


frate, target rule = 105 public <seat> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_aa_p_ch_s> aa)] | [(aa <any_Cx_aa_p_ch_s>)]) (s | z | ((<any_Cx_aa_p_ch_s> aa) | (aa <any_Cx_aa_p_ch_s>)))) ((([(<any_Vx_aa_aa_iy_noSlide> aa)] | [(aa <any_Vx_aa_aa_iy_noSlide>)]) ([(<any_Cx_aa_aa_t_s> aa)] | [(aa <any_Cx_aa_aa_t_s>)])) (iy | ((<any_Vx_aa_aa_iy_noSlide> aa) | (aa <any_Vx_aa_aa_iy_noSlide>)))) (([(<any_Cx_ao_aa_t> ao)] | [(ao <any_Cx_ao_aa_t>)]) (t | ((<any_Cx_ao_aa_t> ao) | (ao <any_Cx_ao_aa_t>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_ao_t_d> d)] | [(d <any_Cx_ao_t_d>)]) sil))
Running scan for frate = 91
Considering guard aa with value 1 for s ...
candidateGuards = map[aa:true]
Picking guard, aa

Considering guard aa with value 2 for iy ...
candidateGuards = map[aa:true]
Picking guard, aa

Considering guard aa with value 1 for t ...
Considering guard ao with value 1 for t ...
candidateGuards = map[aa:true ao:true]
Picking guard, aa


frate, target rule = 91 public <seat> = (((sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil p (sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_aa_p_t_s> aa)] | [(aa <any_Cx_aa_p_t_s>)]) (s | z | ((<any_Cx_aa_p_t_s> aa) | (aa <any_Cx_aa_p_t_s>)))) ((([(<any_Vx_aa_aa_iy_noSlide> aa)] | [(aa <any_Vx_aa_aa_iy_noSlide>)]) ([(<any_Cx_aa_aa_t_s> aa)] | [(aa <any_Cx_aa_aa_t_s>)])) (iy | ((<any_Vx_aa_aa_iy_noSlide> aa) | (aa <any_Vx_aa_aa_iy_noSlide>)))) (([(<any_Cx_aa_aa_t> aa)] | [(aa <any_Cx_aa_aa_t>)]) (t | ((<any_Cx_aa_aa_t> aa) | (aa <any_Cx_aa_aa_t>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_aa_t_thr> thr)] | [(thr <any_Cx_aa_t_thr>)]) sil))
Running scan for frate = 80
Considering guard aa with value 1 for s ...
candidateGuards = map[aa:true]
Picking guard, aa

Considering guard aa with value 2 for iy ...
candidateGuards = map[aa:true]
Picking guard, aa

Considering guard aa with value 1 for t ...
Considering guard ao with value 1 for t ...
candidateGuards = map[aa:true ao:true]
Picking guard, aa


frate, target rule = 80 public <seat> = (((sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_aa_p_z_s> aa)] | [(aa <any_Cx_aa_p_z_s>)]) (s | z | ((<any_Cx_aa_p_z_s> aa) | (aa <any_Cx_aa_p_z_s>)))) ((([(<any_Vx_aa_aa_iy_noSlide> aa)] | [(aa <any_Vx_aa_aa_iy_noSlide>)]) ([(<any_Cx_aa_aa_t_s> aa)] | [(aa <any_Cx_aa_aa_t_s>)])) (iy | ((<any_Vx_aa_aa_iy_noSlide> aa) | (aa <any_Vx_aa_aa_iy_noSlide>)))) (([(<any_Cx_aa_aa_t> aa)] | [(aa <any_Cx_aa_aa_t>)]) (t | ((<any_Cx_aa_aa_t> aa) | (aa <any_Cx_aa_aa_t>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_aa_t_d> d)] | [(d <any_Cx_aa_t_d>)]) sil))
Running scan for frate = 72
Considering guard aa with value 1 for s ...
candidateGuards = map[aa:true]
Picking guard, aa

Considering guard aa with value 2 for iy ...
candidateGuards = map[aa:true]
Picking guard, aa

Considering guard ao with value 1 for t ...
Considering guard aa with value 1 for t ...
candidateGuards = map[aa:true ao:true]
Picking guard, ao


frate, target rule = 72 public <seat> = (((sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]) | (sil p (sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]))) (([(<any_Cx_aa_p_th_s> aa)] | [(aa <any_Cx_aa_p_th_s>)]) (s | z | ((<any_Cx_aa_p_th_s> aa) | (aa <any_Cx_aa_p_th_s>)))) ((([(<any_Vx_aa_aa_iy_noSlide> aa)] | [(aa <any_Vx_aa_aa_iy_noSlide>)]) ([(<any_Cx_aa_aa_t_s> aa)] | [(aa <any_Cx_aa_aa_t_s>)])) (iy | ((<any_Vx_aa_aa_iy_noSlide> aa) | (aa <any_Vx_aa_aa_iy_noSlide>)))) (([(<any_Cx_ao_aa_t> ao)] | [(ao <any_Cx_ao_aa_t>)]) (t | ((<any_Cx_ao_aa_t> ao) | (ao <any_Cx_ao_aa_t>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_ao_t_g> g)] | [(g <any_Cx_ao_t_g>)]) sil))

results =
{72 [{sil 0 2} {s 3 15} {ih 16 28} {aa 29 31} {t 32 48} {sil 49 61}]}
{80 [{sil 0 2} {s 3 17} {ih 18 31} {aa 32 34} {t 35 54} {sil 55 66}]}
{91 [{sil 0 2} {s 3 19} {ih 20 37} {aa 38 40} {t 41 65} {sil 66 108}]}
{105 [{sil 0 2} {s 3 22} {ih 23 43} {aa 44 46} {t 47 75} {sil 76 122}]}
{125 [{sil 3 5} {s 6 28} {ih 29 54} {aa 55 57} {t 58 87} {sil 88 147}]}

normalised results =
{72 [{sil 0 2} {s 4 21} {ih 22 39} {aa 40 40} {t 44 67} {sil 68 85}]}
{80 [{sil 0 2} {s 4 21} {ih 23 39} {aa 40 40} {t 44 68} {sil 69 83}]}
{91 [{sil 0 2} {s 3 21} {ih 22 41} {aa 42 42} {t 45 71} {sil 73 119}]}
{105 [{sil 0 2} {s 3 21} {ih 22 41} {aa 42 42} {t 45 71} {sil 72 116}]}
{125 [{sil 3 5} {s 5 22} {ih 23 43} {aa 44 44} {t 46 70} {sil 70 118}]}

ruleAligned = [{{s 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{iy 2} []} {{ih 3} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{t 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {s 4 21} {ih 22 39} {aa 40 40} {t 44 67} {sil 68 68}]}
{80 [{sil 0 0} {s 4 21} {ih 23 39} {aa 40 40} {t 44 68} {sil 69 69}]}
{91 [{sil 0 0} {s 3 21} {ih 22 41} {aa 42 42} {t 45 71} {sil 73 73}]}
{105 [{sil 0 0} {s 3 21} {ih 22 41} {aa 42 42} {t 45 71} {sil 72 72}]}
{125 [{sil 3 3} {s 5 22} {ih 23 43} {aa 44 44} {t 46 70} {sil 70 70}]}

timeAligned = [{{s 4 21} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ih 22 41} [{0 2} {2 2} {3 2} {1 2} {4 2}]} {{t 45 70} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 -1 21
i, iTime, newITime, timeStartFrom = 2 0 1 21
i, iTime, newITime, timeStartFrom = 3 1 2 39
combinedVerdict    = [{s 0} {iy 2} {ih 3} {t 0}]
ruleAlignedVerdict = [{s 0} {iy 2} {ih 3} {t 0}]

score->
+1 for s
-1 for iy
-1 for ih
+1 for t
score<-: 0
bestResult = {0 [{s 0} {iy 2} {ih 3} {t 0}] [s iy t]}
testPronounce s good iy missing ih surprise t good
publish->
phonsToAlphas = [{[s] s} {[iy] ea} {[t] t}]
getVerdict<-:new {s [s] 0}
getVerdict<-:new {ea [iy] 2}
getVerdict<-:new {t [t] 0}
lettersVerdicts = [{s [s] 0} {ea [iy] 2} {ih [ih] 3} {t [t] 0}]
publish<-
{
  "results": [
    {
      "letters": "s",
      "phonemes": "s",
      "verdict": "good"
    },
    {
      "letters": "ea",
      "phonemes": "iː",
      "verdict": "missing"
    },
    {
      "letters": "ih",
      "phonemes": "ɪ",
      "verdict": "surprise"
    },
    {
      "letters": "t",
      "phonemes": "t",
      "verdict": "good"
    }
  ],
  "err": null
}
