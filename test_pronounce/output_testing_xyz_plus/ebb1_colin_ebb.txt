
 length of audio =  2.476313



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.68 0.66 1.34

 start3, duration3, end3 =  0.7000000000000001 0.56 1.2600000000000002

 Initial start, duration, end =  0.5800000000000001 0.76 1.34

 Cut at: start, duration =  0.5800000000000001 1.21     guard_end =  1.79 

Running scan for frate = 125
Considering guard s with value 1 for eh ...
Considering guard jh with value 1 for eh ...
Considering guard sh with value 1 for eh ...
Considering guard zh with value 1 for eh ...
candidateGuards = map[jh:true s:true sh:true zh:true]
Picking guard, s

Considering guard sh with value 1 for b ...
Considering guard s with value 1 for b ...
Considering guard jh with value 1 for b ...
Considering guard zh with value 1 for b ...
candidateGuards = map[jh:true s:true sh:true zh:true]
Picking guard, sh


frate, target rule = 125 public <ebb> = (((sil [((l <any_Vx_eh_l_p_noSlide>) | (<any_Vx_eh_l_p_noSlide> l))] [((l <any_Cx_eh_l_p>) | (<any_Cx_eh_l_p> l))]) | (sil p (sil [((l <any_Vx_eh_l_p_noSlide>) | (<any_Vx_eh_l_p_noSlide> l))] [((l <any_Cx_eh_l_p>) | (<any_Cx_eh_l_p> l))]))) ((([(<any_Vx_s_p_l_eh_noSlide> s)] | [(s <any_Vx_s_p_l_eh_noSlide>)]) ([(<any_Cx_s_p_l_b> s)] | [(s <any_Cx_s_p_l_b>)])) (eh | ((<any_Vx_s_p_l_eh_noSlide> s) | (s <any_Vx_s_p_l_eh_noSlide>)))) (([(<any_Cx_sh_s_b> sh)] | [(sh <any_Cx_sh_s_b>)]) (b | ((<any_Cx_sh_s_b> sh) | (sh <any_Cx_sh_s_b>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_sh_b_m> m)] | [(m <any_Cx_sh_b_m>)]) sil))
Running scan for frate = 105
Considering guard zh with value 1 for eh ...
Considering guard s with value 1 for eh ...
Considering guard jh with value 1 for eh ...
Considering guard sh with value 1 for eh ...
candidateGuards = map[jh:true s:true sh:true zh:true]
Picking guard, zh

Considering guard jh with value 1 for b ...
Considering guard s with value 1 for b ...
Considering guard zh with value 1 for b ...
Considering guard sh with value 1 for b ...
candidateGuards = map[jh:true s:true sh:true zh:true]
Picking guard, jh


frate, target rule = 105 public <ebb> = (((sil [((b <any_Vx_eh_b_p_noSlide>) | (<any_Vx_eh_b_p_noSlide> b))] [((b <any_Cx_eh_b_p>) | (<any_Cx_eh_b_p> b))]) | (sil p (sil [((b <any_Vx_eh_b_p_noSlide>) | (<any_Vx_eh_b_p_noSlide> b))] [((b <any_Cx_eh_b_p>) | (<any_Cx_eh_b_p> b))]))) ((([(<any_Vx_zh_p_b_eh_noSlide> zh)] | [(zh <any_Vx_zh_p_b_eh_noSlide>)]) ([(<any_Cx_zh_p_b_b> zh)] | [(zh <any_Cx_zh_p_b_b>)])) (eh | ((<any_Vx_zh_p_b_eh_noSlide> zh) | (zh <any_Vx_zh_p_b_eh_noSlide>)))) (([(<any_Cx_jh_zh_b> jh)] | [(jh <any_Cx_jh_zh_b>)]) (b | ((<any_Cx_jh_zh_b> jh) | (jh <any_Cx_jh_zh_b>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_jh_b_ng> ng)] | [(ng <any_Cx_jh_b_ng>)]) sil))
Running scan for frate = 91
Considering guard jh with value 1 for eh ...
Considering guard s with value 1 for eh ...
Considering guard zh with value 1 for eh ...
Considering guard sh with value 1 for eh ...
candidateGuards = map[jh:true s:true sh:true zh:true]
Picking guard, sh

Considering guard s with value 1 for b ...
Considering guard sh with value 1 for b ...
Considering guard zh with value 1 for b ...
Considering guard jh with value 1 for b ...
candidateGuards = map[jh:true s:true sh:true zh:true]
Picking guard, zh


frate, target rule = 91 public <ebb> = (((sil [((b <any_Vx_eh_b_p_noSlide>) | (<any_Vx_eh_b_p_noSlide> b))] [((b <any_Cx_eh_b_p>) | (<any_Cx_eh_b_p> b))]) | (sil p (sil [((b <any_Vx_eh_b_p_noSlide>) | (<any_Vx_eh_b_p_noSlide> b))] [((b <any_Cx_eh_b_p>) | (<any_Cx_eh_b_p> b))]))) ((([(<any_Vx_sh_p_b_eh_noSlide> sh)] | [(sh <any_Vx_sh_p_b_eh_noSlide>)]) ([(<any_Cx_sh_p_b_b> sh)] | [(sh <any_Cx_sh_p_b_b>)])) (eh | ((<any_Vx_sh_p_b_eh_noSlide> sh) | (sh <any_Vx_sh_p_b_eh_noSlide>)))) (([(<any_Cx_zh_sh_b> zh)] | [(zh <any_Cx_zh_sh_b>)]) (b | ((<any_Cx_zh_sh_b> zh) | (zh <any_Cx_zh_sh_b>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_zh_b_f> f)] | [(f <any_Cx_zh_b_f>)]) sil))
Running scan for frate = 80
Considering guard jh with value 1 for eh ...
Considering guard zh with value 1 for eh ...
Considering guard sh with value 1 for eh ...
Considering guard s with value 1 for eh ...
candidateGuards = map[jh:true s:true sh:true zh:true]
Picking guard, s

Considering guard zh with value 1 for b ...
Considering guard s with value 1 for b ...
Considering guard sh with value 1 for b ...
Considering guard jh with value 1 for b ...
candidateGuards = map[jh:true s:true sh:true zh:true]
Picking guard, zh


frate, target rule = 80 public <ebb> = (((sil [((r <any_Vx_eh_r_p_noSlide>) | (<any_Vx_eh_r_p_noSlide> r))] [((r <any_Cx_eh_r_p>) | (<any_Cx_eh_r_p> r))]) | (sil p (sil [((r <any_Vx_eh_r_p_noSlide>) | (<any_Vx_eh_r_p_noSlide> r))] [((r <any_Cx_eh_r_p>) | (<any_Cx_eh_r_p> r))]))) ((([(<any_Vx_s_p_r_eh_noSlide> s)] | [(s <any_Vx_s_p_r_eh_noSlide>)]) ([(<any_Cx_s_p_r_b> s)] | [(s <any_Cx_s_p_r_b>)])) (eh | ((<any_Vx_s_p_r_eh_noSlide> s) | (s <any_Vx_s_p_r_eh_noSlide>)))) (([(<any_Cx_zh_s_b> zh)] | [(zh <any_Cx_zh_s_b>)]) (b | ((<any_Cx_zh_s_b> zh) | (zh <any_Cx_zh_s_b>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_zh_b_n> n)] | [(n <any_Cx_zh_b_n>)]) sil))
Running scan for frate = 72
Considering guard zh with value 1 for eh ...
Considering guard sh with value 1 for eh ...
Considering guard jh with value 1 for eh ...
Considering guard s with value 1 for eh ...
candidateGuards = map[jh:true s:true sh:true zh:true]
Picking guard, zh

Considering guard jh with value 1 for b ...
Considering guard sh with value 1 for b ...
Considering guard s with value 1 for b ...
Considering guard zh with value 1 for b ...
candidateGuards = map[jh:true s:true sh:true zh:true]
Picking guard, s


frate, target rule = 72 public <ebb> = (((sil [((b <any_Vx_eh_b_p_noSlide>) | (<any_Vx_eh_b_p_noSlide> b))] [((b <any_Cx_eh_b_p>) | (<any_Cx_eh_b_p> b))]) | (sil p (sil [((b <any_Vx_eh_b_p_noSlide>) | (<any_Vx_eh_b_p_noSlide> b))] [((b <any_Cx_eh_b_p>) | (<any_Cx_eh_b_p> b))]))) ((([(<any_Vx_zh_p_b_eh_noSlide> zh)] | [(zh <any_Vx_zh_p_b_eh_noSlide>)]) ([(<any_Cx_zh_p_b_b> zh)] | [(zh <any_Cx_zh_p_b_b>)])) (eh | ((<any_Vx_zh_p_b_eh_noSlide> zh) | (zh <any_Vx_zh_p_b_eh_noSlide>)))) (([(<any_Cx_s_zh_b> s)] | [(s <any_Cx_s_zh_b>)]) (b | ((<any_Cx_s_zh_b> s) | (s <any_Cx_s_zh_b>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_s_b_thr> thr)] | [(thr <any_Cx_s_b_thr>)]) sil))

results =
{72 [{sil 0 13} {eh 14 31} {b 32 37} {sil 38 53}]}
{80 [{sil 0 14} {eh 15 35} {b 36 41} {sil 42 56}]}
{91 [{sil 0 17} {ih 18 41} {b 42 47} {eh 48 52} {b 53 55} {sil 56 108}]}
{105 [{sil 0 18} {b 19 22} {ih 23 37} {eh 38 48} {b 49 53} {g 54 57} {ng 58 65} {sil 66 122}]}
{125 [{sil 3 25} {ih 26 51} {l 52 54} {eh 55 59} {b 60 64} {g 65 73} {m 74 78} {sil 79 147}]}

normalised results =
{72 [{sil 0 13} {eh 19 43} {b 44 51} {sil 53 74}]}
{80 [{sil 0 14} {eh 19 44} {b 45 51} {sil 53 70}]}
{91 [{sil 0 17} {ih 20 45} {b 46 52} {eh 53 57} {b 58 58} {sil 62 119}]}
{105 [{sil 0 18} {b 18 21} {ih 22 35} {eh 36 46} {b 47 50} {g 51 54} {ng 55 62} {sil 63 116}]}
{125 [{sil 3 25} {ih 21 41} {l 42 42} {eh 44 47} {b 48 51} {g 52 58} {m 59 62} {sil 63 118}]}

ruleAligned = [{{ih 3} [{2 1} {3 2} {4 1}]} {{eh 0} [{0 1} {1 1} {2 3} {3 3} {4 3}]} {{b 0} [{0 2} {1 2} {3 4} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {eh 19 43} {b 44 51} {sil 53 53}]}
{80 [{sil 0 0} {eh 19 44} {b 45 51} {sil 53 53}]}
{91 [{sil 0 0} {ih 20 45} {b 46 46} {eh 53 57} {b 58 58} {sil 62 62}]}
{105 [{sil 0 0} {b 18 18} {ih 22 35} {eh 36 46} {b 47 50} {g 51 51} {ng 55 62} {sil 63 63}]}
{125 [{sil 3 3} {ih 21 41} {l 42 42} {eh 44 47} {b 48 51} {g 52 58} {m 59 59} {sil 63 63}]}

timeAligned = [{{ih 22 35} [{2 1} {3 2} {4 1}]} {{eh 36 44} [{0 1} {1 1} {3 3} {4 3}]} {{b 47 51} [{0 2} {1 2} {3 4} {4 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 35
i, iTime, newITime, timeStartFrom = 2 1 2 46
combinedVerdict    = [{ih 3} {eh 2} {b 2}]
ruleAlignedVerdict = [{ih 3} {eh 0} {b 0}]

score->
-1 for ih
-1 for eh
-1 for b
score<-: -3
bestResult = {-3 [{ih 3} {eh 2} {b 2}] [eh b]}
testPronounce ih surprise eh missing b missing
publish->
phonsToAlphas = [{[eh] e} {[b] bb}]
getVerdict<-:new {e [eh] 2}
getVerdict<-:new {bb [b] 2}
lettersVerdicts = [{ih [ih] 3} {e [eh] 2} {bb [b] 2}]
publish<-
{
  "results": [
    {
      "letters": "ih",
      "phonemes": "ɪ",
      "verdict": "surprise"
    },
    {
      "letters": "e",
      "phonemes": "ɛ",
      "verdict": "missing"
    },
    {
      "letters": "bb",
      "phonemes": "b",
      "verdict": "missing"
    }
  ],
  "err": null
}
