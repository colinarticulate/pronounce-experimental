
 length of audio =  1.199125



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.38 0.56 0.9400000000000001

 start3, duration3, end3 =  0.52 0.28 0.8

 Initial start, duration, end =  0.28 0.66 0.9400000000000001

 Cut at: start, duration =  0.28 0.899125     guard_end =  1.179125 

Running scan for frate = 125
Considering guard jh with value 1 for p ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard jh with value 2 for ih ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard jh with value 1 for p ...
candidateGuards = map[jh:true]
Picking guard, jh

frate, target rule = 125 public <pip> = (((sil [((b <any_Cx_p_b_d>) | (<any_Cx_p_b_d> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]) | (sil d (sil [((b <any_Cx_p_b_d>) | (<any_Cx_p_b_d> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]))) (([(<any_Cx_jh_d_b_p> jh)] | [(jh <any_Cx_jh_d_b_p>)]) (p | ((<any_Cx_jh_d_b_p> jh) | (jh <any_Cx_jh_d_b_p>)))) ((([(<any_Vx_jh_jh_ih_noSlide> jh)] | [(jh <any_Vx_jh_jh_ih_noSlide>)]) ([(<any_Cx_jh_jh_p_p> jh)] | [(jh <any_Cx_jh_jh_p_p>)])) (ih | ((<any_Vx_jh_jh_ih_noSlide> jh) | (jh <any_Vx_jh_jh_ih_noSlide>)))) (([(<any_Cx_jh_jh_p> jh)] | [(jh <any_Cx_jh_jh_p>)]) (p | ((<any_Cx_jh_jh_p> jh) | (jh <any_Cx_jh_jh_p>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_jh_p_hh> hh)] | [(hh <any_Cx_jh_p_hh>)]) sil))
Running scan for frate = 105
Considering guard jh with value 1 for p ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard jh with value 2 for ih ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard jh with value 1 for p ...
candidateGuards = map[jh:true]
Picking guard, jh

frate, target rule = 105 public <pip> = (((sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil d (sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_jh_d_hh_p> jh)] | [(jh <any_Cx_jh_d_hh_p>)]) (p | ((<any_Cx_jh_d_hh_p> jh) | (jh <any_Cx_jh_d_hh_p>)))) ((([(<any_Vx_jh_jh_ih_noSlide> jh)] | [(jh <any_Vx_jh_jh_ih_noSlide>)]) ([(<any_Cx_jh_jh_p_p> jh)] | [(jh <any_Cx_jh_jh_p_p>)])) (ih | ((<any_Vx_jh_jh_ih_noSlide> jh) | (jh <any_Vx_jh_jh_ih_noSlide>)))) (([(<any_Cx_jh_jh_p> jh)] | [(jh <any_Cx_jh_jh_p>)]) (p | ((<any_Cx_jh_jh_p> jh) | (jh <any_Cx_jh_jh_p>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_jh_p_b> b)] | [(b <any_Cx_jh_p_b>)]) sil))
Running scan for frate = 91
Considering guard jh with value 1 for p ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard jh with value 2 for ih ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard jh with value 1 for p ...
candidateGuards = map[jh:true]
Picking guard, jh

frate, target rule = 91 public <pip> = (((sil [((sh <any_Cx_p_sh_d>) | (<any_Cx_p_sh_d> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil d (sil [((sh <any_Cx_p_sh_d>) | (<any_Cx_p_sh_d> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_jh_d_sh_p> jh)] | [(jh <any_Cx_jh_d_sh_p>)]) (p | ((<any_Cx_jh_d_sh_p> jh) | (jh <any_Cx_jh_d_sh_p>)))) ((([(<any_Vx_jh_jh_ih_noSlide> jh)] | [(jh <any_Vx_jh_jh_ih_noSlide>)]) ([(<any_Cx_jh_jh_p_p> jh)] | [(jh <any_Cx_jh_jh_p_p>)])) (ih | ((<any_Vx_jh_jh_ih_noSlide> jh) | (jh <any_Vx_jh_jh_ih_noSlide>)))) (([(<any_Cx_jh_jh_p> jh)] | [(jh <any_Cx_jh_jh_p>)]) (p | ((<any_Cx_jh_jh_p> jh) | (jh <any_Cx_jh_jh_p>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_jh_p_m> m)] | [(m <any_Cx_jh_p_m>)]) sil))
Running scan for frate = 80
Considering guard jh with value 1 for p ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard jh with value 2 for ih ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard jh with value 1 for p ...
candidateGuards = map[jh:true]
Picking guard, jh

frate, target rule = 80 public <pip> = (((sil [((b <any_Cx_p_b_d>) | (<any_Cx_p_b_d> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]) | (sil d (sil [((b <any_Cx_p_b_d>) | (<any_Cx_p_b_d> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]))) (([(<any_Cx_jh_d_b_p> jh)] | [(jh <any_Cx_jh_d_b_p>)]) (p | ((<any_Cx_jh_d_b_p> jh) | (jh <any_Cx_jh_d_b_p>)))) ((([(<any_Vx_jh_jh_ih_noSlide> jh)] | [(jh <any_Vx_jh_jh_ih_noSlide>)]) ([(<any_Cx_jh_jh_p_p> jh)] | [(jh <any_Cx_jh_jh_p_p>)])) (ih | ((<any_Vx_jh_jh_ih_noSlide> jh) | (jh <any_Vx_jh_jh_ih_noSlide>)))) (([(<any_Cx_jh_jh_p> jh)] | [(jh <any_Cx_jh_jh_p>)]) (p | ((<any_Cx_jh_jh_p> jh) | (jh <any_Cx_jh_jh_p>)))) (([(<any_vowel_noSlide> k)] | [(k <any_vowel_noSlide>)]) ([(<any_Cx_jh_p_k> k)] | [(k <any_Cx_jh_p_k>)]) sil))
Running scan for frate = 72
Considering guard jh with value 1 for p ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard jh with value 2 for ih ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard jh with value 1 for p ...
candidateGuards = map[jh:true]
Picking guard, jh

frate, target rule = 72 public <pip> = (((sil [((sh <any_Cx_p_sh_d>) | (<any_Cx_p_sh_d> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil d (sil [((sh <any_Cx_p_sh_d>) | (<any_Cx_p_sh_d> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_jh_d_sh_p> jh)] | [(jh <any_Cx_jh_d_sh_p>)]) (p | ((<any_Cx_jh_d_sh_p> jh) | (jh <any_Cx_jh_d_sh_p>)))) ((([(<any_Vx_jh_jh_ih_noSlide> jh)] | [(jh <any_Vx_jh_jh_ih_noSlide>)]) ([(<any_Cx_jh_jh_p_p> jh)] | [(jh <any_Cx_jh_jh_p_p>)])) (ih | ((<any_Vx_jh_jh_ih_noSlide> jh) | (jh <any_Vx_jh_jh_ih_noSlide>)))) (([(<any_Cx_jh_jh_p> jh)] | [(jh <any_Cx_jh_jh_p>)]) (p | ((<any_Cx_jh_jh_p> jh) | (jh <any_Cx_jh_jh_p>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_jh_p_hh> hh)] | [(hh <any_Cx_jh_p_hh>)]) sil))

results =
{72 [{sil 0 11} {z 12 21} {jh 22 24} {ih 25 32} {jh 33 35} {d 36 49} {sil 50 59}]}
{80 [{sil 0 13} {z 14 24} {jh 25 27} {ih 28 37} {p 38 40} {k 41 43} {d 44 55} {sil 56 65}]}
{91 [{sil 0 14} {z 15 28} {jh 29 31} {ih 32 45} {p 46 48} {d 49 60} {m 61 63} {sil 64 80}]}
{105 [{sil 0 15} {jh 16 19} {z 20 34} {ih 35 51} {p 52 54} {b 55 59} {v 60 71} {sil 72 89}]}
{125 [{sil 3 18} {b 19 21} {z 22 41} {p 42 44} {ih 45 63} {p 64 84} {sil 85 112}]}

normalised results =
{72 [{sil 0 11} {z 17 29} {jh 31 31} {ih 35 44} {jh 46 46} {d 50 68} {sil 69 82}]}
{80 [{sil 0 13} {z 18 30} {jh 31 31} {ih 35 46} {p 48 48} {k 51 51} {d 55 69} {sil 70 81}]}
{91 [{sil 0 14} {z 16 31} {jh 32 32} {ih 35 49} {p 51 51} {d 54 66} {m 67 67} {sil 70 88}]}
{105 [{sil 0 15} {jh 15 18} {z 19 32} {ih 33 49} {p 50 50} {b 52 56} {v 57 68} {sil 69 85}]}
{125 [{sil 3 18} {b 15 15} {z 18 33} {p 34 34} {ih 36 50} {p 51 67} {sil 68 90}]}

ruleAligned = [{{p 2} []} {{z 3} [{0 1} {1 1} {2 1} {3 2}]} {{ih 0} [{0 3} {1 3} {2 3} {3 3} {4 4}]} {{p 2} [{4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {z 17 29} {jh 31 31} {ih 35 44} {jh 46 46} {d 50 68} {sil 69 69}]}
{80 [{sil 0 0} {z 18 30} {jh 31 31} {ih 35 46} {p 48 48} {k 51 51} {d 55 69} {sil 70 70}]}
{91 [{sil 0 0} {z 16 31} {jh 32 32} {ih 35 49} {p 51 51} {d 54 66} {m 67 67} {sil 70 70}]}
{105 [{sil 0 0} {jh 15 15} {z 19 32} {ih 33 49} {p 50 50} {b 52 56} {v 57 68} {sil 69 69}]}
{125 [{sil 3 3} {b 15 15} {z 18 33} {p 34 34} {ih 36 50} {p 51 67} {sil 68 68}]}

timeAligned = [{{z 18 31} [{0 1} {1 1} {2 1} {4 2} {3 2}]} {{ih 35 49} [{0 3} {1 3} {2 3} {3 3} {4 4}]} {{d 55 66} [{0 5} {1 6} {2 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 -1 0
i, iTime, newITime, timeStartFrom = 1 0 0 0
i, iTime, newITime, timeStartFrom = 2 0 1 29
i, iTime, newITime, timeStartFrom = 3 1 -1 44
combinedVerdict    = [{p 2} {z 3} {ih 0} {p 2} {d 3}]
ruleAlignedVerdict = [{p 2} {z 3} {ih 0} {p 2}]

score->
-1 for p
-1 for z
+1 for ih
-1 for p
-1 for d
score<-: -3
bestResult = {-3 [{p 2} {z 3} {ih 0} {p 2} {d 3}] [p ih p]}
testPronounce p missing z surprise ih good p missing d surprise
publish->
phonsToAlphas = [{[p] p} {[ih] i} {[p] p}]
getVerdict<-:new {p [p] 2}
getVerdict<-:new {i [ih] 0}
getVerdict<-:new {p [p] 2}
lettersVerdicts = [{p [p] 2} {z [z] 3} {i [ih] 0} {p [p] 2} {d [d] 3}]
publish<-
Total: 202.305605ms
{
  "results": [
    {
      "letters": "p",
      "phonemes": "p",
      "verdict": "missing"
    },
    {
      "letters": "z",
      "phonemes": "z",
      "verdict": "surprise"
    },
    {
      "letters": "i",
      "phonemes": "Éª",
      "verdict": "good"
    },
    {
      "letters": "p",
      "phonemes": "p",
      "verdict": "missing"
    },
    {
      "letters": "d",
      "phonemes": "d",
      "verdict": "surprise"
    }
  ],
  "err": null
}
