
 length of audio =  1.346375



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.24000000000000002 1.1 1.34

 start3, duration3, end3 =  0.44000000000000006 0.74 1.1800000000000002

 Initial start, duration, end =  0.14 1.2000000000000002 1.34

 Cut at: start, duration =  0.14 1.186375     guard_end =  1.326375 

Running scan for frate = 125
Considering guard zh with value 1 for v ...
Considering guard oy with value 1 for v ...
candidateGuards = map[oy:true zh:true]
Picking guard, zh

Considering guard oy with value 2 for aw ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard oy with value 1 for z ...
candidateGuards = map[oy:true]
Picking guard, oy


frate, target rule = 125 public <vows> = (((sil [((r <any_Cx_v_r_p>) | (<any_Cx_v_r_p> r))] [((r <any_vowel_noSlide>) | (<any_vowel_noSlide> r))]) | (sil p (sil [((r <any_Cx_v_r_p>) | (<any_Cx_v_r_p> r))] [((r <any_vowel_noSlide>) | (<any_vowel_noSlide> r))]))) (([(<any_Cx_zh_p_r_v> zh)] | [(zh <any_Cx_zh_p_r_v>)]) (v | ((<any_Cx_zh_p_r_v> zh) | (zh <any_Cx_zh_p_r_v>)))) ((([(<any_Vx_oy_zh_aw_noSlide> oy)] | [(oy <any_Vx_oy_zh_aw_noSlide>)]) ([(<any_Cx_oy_zh_z_v> oy)] | [(oy <any_Cx_oy_zh_z_v>)])) (aw | ((<any_Vx_oy_zh_aw_noSlide> oy) | (oy <any_Vx_oy_zh_aw_noSlide>)))) (([(<any_Cx_oy_oy_z> oy)] | [(oy <any_Cx_oy_oy_z>)]) (z | ((<any_Cx_oy_oy_z> oy) | (oy <any_Cx_oy_oy_z>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_oy_z_b> b)] | [(b <any_Cx_oy_z_b>)]) sil))
Running scan for frate = 105
Considering guard zh with value 1 for v ...
Considering guard oy with value 1 for v ...
candidateGuards = map[oy:true zh:true]
Picking guard, oy

Considering guard oy with value 2 for aw ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard oy with value 1 for z ...
candidateGuards = map[oy:true]
Picking guard, oy


frate, target rule = 105 public <vows> = (((sil [((l <any_Cx_v_l_p>) | (<any_Cx_v_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]) | (sil p (sil [((l <any_Cx_v_l_p>) | (<any_Cx_v_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]))) (([(<any_Cx_oy_p_l_v> oy)] | [(oy <any_Cx_oy_p_l_v>)]) (v | ((<any_Cx_oy_p_l_v> oy) | (oy <any_Cx_oy_p_l_v>)))) ((([(<any_Vx_oy_oy_aw_noSlide> oy)] | [(oy <any_Vx_oy_oy_aw_noSlide>)]) ([(<any_Cx_oy_oy_z_v> oy)] | [(oy <any_Cx_oy_oy_z_v>)])) (aw | ((<any_Vx_oy_oy_aw_noSlide> oy) | (oy <any_Vx_oy_oy_aw_noSlide>)))) (([(<any_Cx_oy_oy_z> oy)] | [(oy <any_Cx_oy_oy_z>)]) (z | ((<any_Cx_oy_oy_z> oy) | (oy <any_Cx_oy_oy_z>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_oy_z_v> v)] | [(v <any_Cx_oy_z_v>)]) sil))
Running scan for frate = 91
Considering guard zh with value 1 for v ...
Considering guard oy with value 1 for v ...
candidateGuards = map[oy:true zh:true]
Picking guard, zh

Considering guard oy with value 2 for aw ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard oy with value 1 for z ...
candidateGuards = map[oy:true]
Picking guard, oy


frate, target rule = 91 public <vows> = (((sil [((m <any_Cx_v_m_p>) | (<any_Cx_v_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]) | (sil p (sil [((m <any_Cx_v_m_p>) | (<any_Cx_v_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]))) (([(<any_Cx_zh_p_m_v> zh)] | [(zh <any_Cx_zh_p_m_v>)]) (v | ((<any_Cx_zh_p_m_v> zh) | (zh <any_Cx_zh_p_m_v>)))) ((([(<any_Vx_oy_zh_aw_noSlide> oy)] | [(oy <any_Vx_oy_zh_aw_noSlide>)]) ([(<any_Cx_oy_zh_z_v> oy)] | [(oy <any_Cx_oy_zh_z_v>)])) (aw | ((<any_Vx_oy_zh_aw_noSlide> oy) | (oy <any_Vx_oy_zh_aw_noSlide>)))) (([(<any_Cx_oy_oy_z> oy)] | [(oy <any_Cx_oy_oy_z>)]) (z | ((<any_Cx_oy_oy_z> oy) | (oy <any_Cx_oy_oy_z>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_oy_z_v> v)] | [(v <any_Cx_oy_z_v>)]) sil))
Running scan for frate = 80
Considering guard oy with value 1 for v ...
Considering guard zh with value 1 for v ...
candidateGuards = map[oy:true zh:true]
Picking guard, oy

Considering guard oy with value 2 for aw ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard oy with value 1 for z ...
candidateGuards = map[oy:true]
Picking guard, oy


frate, target rule = 80 public <vows> = (((sil [((l <any_Cx_v_l_p>) | (<any_Cx_v_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]) | (sil p (sil [((l <any_Cx_v_l_p>) | (<any_Cx_v_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]))) (([(<any_Cx_oy_p_l_v> oy)] | [(oy <any_Cx_oy_p_l_v>)]) (v | ((<any_Cx_oy_p_l_v> oy) | (oy <any_Cx_oy_p_l_v>)))) ((([(<any_Vx_oy_oy_aw_noSlide> oy)] | [(oy <any_Vx_oy_oy_aw_noSlide>)]) ([(<any_Cx_oy_oy_z_v> oy)] | [(oy <any_Cx_oy_oy_z_v>)])) (aw | ((<any_Vx_oy_oy_aw_noSlide> oy) | (oy <any_Vx_oy_oy_aw_noSlide>)))) (([(<any_Cx_oy_oy_z> oy)] | [(oy <any_Cx_oy_oy_z>)]) (z | ((<any_Cx_oy_oy_z> oy) | (oy <any_Cx_oy_oy_z>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_oy_z_thr> thr)] | [(thr <any_Cx_oy_z_thr>)]) sil))
Running scan for frate = 72
Considering guard zh with value 1 for v ...
Considering guard oy with value 1 for v ...
candidateGuards = map[oy:true zh:true]
Picking guard, zh

Considering guard oy with value 2 for aw ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard oy with value 1 for z ...
candidateGuards = map[oy:true]
Picking guard, oy


frate, target rule = 72 public <vows> = (((sil [((l <any_Cx_v_l_p>) | (<any_Cx_v_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]) | (sil p (sil [((l <any_Cx_v_l_p>) | (<any_Cx_v_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]))) (([(<any_Cx_zh_p_l_v> zh)] | [(zh <any_Cx_zh_p_l_v>)]) (v | ((<any_Cx_zh_p_l_v> zh) | (zh <any_Cx_zh_p_l_v>)))) ((([(<any_Vx_oy_zh_aw_noSlide> oy)] | [(oy <any_Vx_oy_zh_aw_noSlide>)]) ([(<any_Cx_oy_zh_z_v> oy)] | [(oy <any_Cx_oy_zh_z_v>)])) (aw | ((<any_Vx_oy_zh_aw_noSlide> oy) | (oy <any_Vx_oy_zh_aw_noSlide>)))) (([(<any_Cx_oy_oy_z> oy)] | [(oy <any_Cx_oy_oy_z>)]) (z | ((<any_Cx_oy_oy_z> oy) | (oy <any_Cx_oy_oy_z>)))) (([(<any_vowel_noSlide> s)] | [(s <any_vowel_noSlide>)]) ([(<any_Cx_oy_z_s> s)] | [(s <any_Cx_oy_z_s>)]) sil))

results =
{72 [{sil 0 26} {v 27 35} {aw 36 58} {z 59 74} {sil 75 80}]}
{80 [{sil 0 29} {v 30 39} {aw 40 65} {z 66 83} {sil 84 89}]}
{91 [{sil 0 34} {v 35 45} {aw 46 75} {z 76 94} {sil 95 102}]}
{105 [{sil 0 40} {v 41 52} {aw 53 87} {z 88 109} {sil 110 123}]}
{125 [{sil 3 49} {v 50 62} {aw 63 105} {z 106 131} {sil 132 148}]}

normalised results =
{72 [{sil 0 26} {v 38 49} {aw 50 81} {z 82 103} {sil 104 111}]}
{80 [{sil 0 29} {v 38 49} {aw 50 81} {z 83 104} {sil 105 111}]}
{91 [{sil 0 34} {v 38 49} {aw 51 82} {z 84 103} {sil 104 112}]}
{105 [{sil 0 40} {v 39 50} {aw 50 83} {z 84 104} {sil 105 117}]}
{125 [{sil 3 49} {v 40 50} {aw 50 84} {z 85 105} {sil 106 118}]}

ruleAligned = [{{v 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{aw 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{z 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {v 38 49} {aw 50 81} {z 82 103} {sil 104 104}]}
{80 [{sil 0 0} {v 38 49} {aw 50 81} {z 83 104} {sil 105 105}]}
{91 [{sil 0 0} {v 38 49} {aw 51 82} {z 84 103} {sil 104 104}]}
{105 [{sil 0 0} {v 39 50} {aw 50 83} {z 84 104} {sil 105 105}]}
{125 [{sil 3 3} {v 40 50} {aw 50 84} {z 85 105} {sil 106 106}]}

timeAligned = [{{v 38 49} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{aw 50 82} [{0 2} {1 2} {3 2} {4 2} {2 2}]} {{z 84 104} [{0 3} {1 3} {2 3} {3 3} {4 3}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 49
i, iTime, newITime, timeStartFrom = 2 1 2 81
combinedVerdict    = [{v 0} {aw 0} {z 0}]
ruleAlignedVerdict = [{v 0} {aw 0} {z 0}]

score->
+1 for v
+1 for aw
+1 for z
score<-: 8
testPronounce v good aw good z good
publish->
phonsToAlphas = [{[v] v} {[aw] ow} {[z] s}]
getVerdict<-:new {v [v] 0}
getVerdict<-:new {ow [aw] 0}
getVerdict<-:new {s [z] 0}
lettersVerdicts = [{v [v] 0} {ow [aw] 0} {s [z] 0}]
publish<-
{
  "results": [
    {
      "letters": "v",
      "phonemes": "v",
      "verdict": "good"
    },
    {
      "letters": "ow",
      "phonemes": "ɑʊ",
      "verdict": "good"
    },
    {
      "letters": "s",
      "phonemes": "z",
      "verdict": "good"
    }
  ],
  "err": null
}
