
 length of audio =  2.282313



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.76 0.94 1.7

 start3, duration3, end3 =  0.86 0.76 1.62

 Initial start, duration, end =  0.66 1.04 1.7

 Cut at: start, duration =  0.66 1.49     guard_end =  2.15 

Running scan for frate = 125
Running scan for frate = 125
Considering guard n with value 3 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard w with value 2 for kl ...
candidateGuards = map[w:true]
Picking guard, w

Considering guard y with value 7.200000000000001 for l ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard w with value 2 for ey ...
candidateGuards = map[w:true]
Picking guard, w

Considering guard sh with value 1.6 for ey ...
candidateGuards = map[sh:true]
Picking guard, sh



frate, target rule = 125 public <clay> = (((sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_w_p_z_kl> w)] | [(w <any_Cx_w_p_z_kl>)]) (kl | ((<any_Cx_w_p_z_kl> w) | (w <any_Cx_w_p_z_kl>)))) ((([(<any_Vx_w_w_ey_noSlide> w)] | [(w <any_Vx_w_w_ey_noSlide>)]) ([(<any_Cx_w_w_kl> w)] | [(w <any_Cx_w_w_kl>)])) (ey | ((<any_Vx_w_w_ey_noSlide> w) | (w <any_Vx_w_w_ey_noSlide>)))) (([(<any_Cx_w_ey_hh> hh)] | [(hh <any_Cx_w_ey_hh>)]) ([(<any_Vx_w_ey_hh> hh)] | [(hh <any_Vx_w_ey_hh>)]) sil))
Running scan for frate = 105
frate, target rule = 125 public <clay> = (((sil [((p <any_Cx_k_p_b>) | (<any_Cx_k_p_b> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]) | (sil b (sil [((p <any_Cx_k_p_b>) | (<any_Cx_k_p_b> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]))) (([(<any_Cx_n_b_p_k_l> n)] | [(n <any_Cx_n_b_p_k_l>)]) (k | ((<any_Cx_n_b_p_k_l> n) | (n <any_Cx_n_b_p_k_l>)))) (([(<any_Cx_y_n_l_k> y)] | [(y <any_Cx_y_n_l_k>)]) (l | ((<any_Cx_y_n_l> y) | (y <any_Cx_y_n_l>)))) ((([(<any_Vx_sh_y_ey_noSlide> sh)] | [(sh <any_Vx_sh_y_ey_noSlide>)]) ([(<any_Cx_sh_y_l> sh)] | [(sh <any_Cx_sh_y_l>)])) (ey | ((<any_Vx_sh_y_ey_noSlide> sh) | (sh <any_Vx_sh_y_ey_noSlide>)))) (([(<any_Cx_sh_ey_f> f)] | [(f <any_Cx_sh_ey_f>)]) ([(<any_Vx_sh_ey_f> f)] | [(f <any_Vx_sh_ey_f>)]) sil))
Running scan for frate = 105
Considering guard w with value 2 for kl ...
candidateGuards = map[w:true]
Picking guard, w

Considering guard n with value 3 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard w with value 2 for ey ...
candidateGuards = map[w:true]
Picking guard, w

Considering guard y with value 7.200000000000001 for l ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 1.6 for ey ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 105 public <clay> = (((sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_w_p_z_kl> w)] | [(w <any_Cx_w_p_z_kl>)]) (kl | ((<any_Cx_w_p_z_kl> w) | (w <any_Cx_w_p_z_kl>)))) ((([(<any_Vx_w_w_ey_noSlide> w)] | [(w <any_Vx_w_w_ey_noSlide>)]) ([(<any_Cx_w_w_kl> w)] | [(w <any_Cx_w_w_kl>)])) (ey | ((<any_Vx_w_w_ey_noSlide> w) | (w <any_Vx_w_w_ey_noSlide>)))) (([(<any_Cx_w_ey_n> n)] | [(n <any_Cx_w_ey_n>)]) ([(<any_Vx_w_ey_n> n)] | [(n <any_Vx_w_ey_n>)]) sil))
Running scan for frate = 91

Considering guard w with value 2 for kl ...
candidateGuards = map[w:true]
Picking guard, w

frate, target rule = 105 public <clay> = (((sil [((ch <any_Cx_k_ch_b>) | (<any_Cx_k_ch_b> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil b (sil [((ch <any_Cx_k_ch_b>) | (<any_Cx_k_ch_b> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_n_b_ch_k_l> n)] | [(n <any_Cx_n_b_ch_k_l>)]) (k | ((<any_Cx_n_b_ch_k_l> n) | (n <any_Cx_n_b_ch_k_l>)))) (([(<any_Cx_y_n_l_k> y)] | [(y <any_Cx_y_n_l_k>)]) (l | ((<any_Cx_y_n_l> y) | (y <any_Cx_y_n_l>)))) ((([(<any_Vx_sh_y_ey_noSlide> sh)] | [(sh <any_Vx_sh_y_ey_noSlide>)]) ([(<any_Cx_sh_y_l> sh)] | [(sh <any_Cx_sh_y_l>)])) (ey | ((<any_Vx_sh_y_ey_noSlide> sh) | (sh <any_Vx_sh_y_ey_noSlide>)))) (([(<any_Cx_sh_ey_f> f)] | [(f <any_Cx_sh_ey_f>)]) ([(<any_Vx_sh_ey_f> f)] | [(f <any_Vx_sh_ey_f>)]) sil))
Considering guard w with value 2 for ey ...
candidateGuards = map[w:true]
Picking guard, w

Running scan for frate = 91
Considering guard n with value 3 for k ...
candidateGuards = map[n:true]
Picking guard, n


Considering guard y with value 7.200000000000001 for l ...
candidateGuards = map[y:true]
Picking guard, y

frate, target rule = 91 public <clay> = (((sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_w_p_z_kl> w)] | [(w <any_Cx_w_p_z_kl>)]) (kl | ((<any_Cx_w_p_z_kl> w) | (w <any_Cx_w_p_z_kl>)))) ((([(<any_Vx_w_w_ey_noSlide> w)] | [(w <any_Vx_w_w_ey_noSlide>)]) ([(<any_Cx_w_w_kl> w)] | [(w <any_Cx_w_w_kl>)])) (ey | ((<any_Vx_w_w_ey_noSlide> w) | (w <any_Vx_w_w_ey_noSlide>)))) (([(<any_Cx_w_ey_r> r)] | [(r <any_Cx_w_ey_r>)]) ([(<any_Vx_w_ey_r> r)] | [(r <any_Vx_w_ey_r>)]) sil))
Running scan for frate = 80
Considering guard sh with value 1.6 for ey ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard w with value 2 for kl ...
candidateGuards = map[w:true]
Picking guard, w

Considering guard w with value 2 for ey ...
candidateGuards = map[w:true]
Picking guard, w


frate, target rule = 91 public <clay> = (((sil [((d <any_Cx_k_d_b>) | (<any_Cx_k_d_b> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil b (sil [((d <any_Cx_k_d_b>) | (<any_Cx_k_d_b> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_n_b_d_k_l> n)] | [(n <any_Cx_n_b_d_k_l>)]) (k | ((<any_Cx_n_b_d_k_l> n) | (n <any_Cx_n_b_d_k_l>)))) (([(<any_Cx_y_n_l_k> y)] | [(y <any_Cx_y_n_l_k>)]) (l | ((<any_Cx_y_n_l> y) | (y <any_Cx_y_n_l>)))) ((([(<any_Vx_sh_y_ey_noSlide> sh)] | [(sh <any_Vx_sh_y_ey_noSlide>)]) ([(<any_Cx_sh_y_l> sh)] | [(sh <any_Cx_sh_y_l>)])) (ey | ((<any_Vx_sh_y_ey_noSlide> sh) | (sh <any_Vx_sh_y_ey_noSlide>)))) (([(<any_Cx_sh_ey_thr> thr)] | [(thr <any_Cx_sh_ey_thr>)]) ([(<any_Vx_sh_ey_thr> thr)] | [(thr <any_Vx_sh_ey_thr>)]) sil))
Running scan for frate = 80
Considering guard n with value 3 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard y with value 7.200000000000001 for l ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 1.6 for ey ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 80 public <clay> = (((sil [((d <any_Cx_k_d_b>) | (<any_Cx_k_d_b> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil b (sil [((d <any_Cx_k_d_b>) | (<any_Cx_k_d_b> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_n_b_d_k_l> n)] | [(n <any_Cx_n_b_d_k_l>)]) (k | ((<any_Cx_n_b_d_k_l> n) | (n <any_Cx_n_b_d_k_l>)))) (([(<any_Cx_y_n_l_k> y)] | [(y <any_Cx_y_n_l_k>)]) (l | ((<any_Cx_y_n_l> y) | (y <any_Cx_y_n_l>)))) ((([(<any_Vx_sh_y_ey_noSlide> sh)] | [(sh <any_Vx_sh_y_ey_noSlide>)]) ([(<any_Cx_sh_y_l> sh)] | [(sh <any_Cx_sh_y_l>)])) (ey | ((<any_Vx_sh_y_ey_noSlide> sh) | (sh <any_Vx_sh_y_ey_noSlide>)))) (([(<any_Cx_sh_ey_hh> hh)] | [(hh <any_Cx_sh_ey_hh>)]) ([(<any_Vx_sh_ey_hh> hh)] | [(hh <any_Vx_sh_ey_hh>)]) sil))
Running scan for frate = 72
Considering guard n with value 3 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard y with value 7.200000000000001 for l ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 1.6 for ey ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 80 public <clay> = (((sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_w_p_z_kl> w)] | [(w <any_Cx_w_p_z_kl>)]) (kl | ((<any_Cx_w_p_z_kl> w) | (w <any_Cx_w_p_z_kl>)))) ((([(<any_Vx_w_w_ey_noSlide> w)] | [(w <any_Vx_w_w_ey_noSlide>)]) ([(<any_Cx_w_w_kl> w)] | [(w <any_Cx_w_w_kl>)])) (ey | ((<any_Vx_w_w_ey_noSlide> w) | (w <any_Vx_w_w_ey_noSlide>)))) (([(<any_Cx_w_ey_hh> hh)] | [(hh <any_Cx_w_ey_hh>)]) ([(<any_Vx_w_ey_hh> hh)] | [(hh <any_Vx_w_ey_hh>)]) sil))
Running scan for frate = 72

frate, target rule = 72 public <clay> = (((sil [((ch <any_Cx_k_ch_b>) | (<any_Cx_k_ch_b> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil b (sil [((ch <any_Cx_k_ch_b>) | (<any_Cx_k_ch_b> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_n_b_ch_k_l> n)] | [(n <any_Cx_n_b_ch_k_l>)]) (k | ((<any_Cx_n_b_ch_k_l> n) | (n <any_Cx_n_b_ch_k_l>)))) (([(<any_Cx_y_n_l_k> y)] | [(y <any_Cx_y_n_l_k>)]) (l | ((<any_Cx_y_n_l> y) | (y <any_Cx_y_n_l>)))) ((([(<any_Vx_sh_y_ey_noSlide> sh)] | [(sh <any_Vx_sh_y_ey_noSlide>)]) ([(<any_Cx_sh_y_l> sh)] | [(sh <any_Cx_sh_y_l>)])) (ey | ((<any_Vx_sh_y_ey_noSlide> sh) | (sh <any_Vx_sh_y_ey_noSlide>)))) (([(<any_Cx_sh_ey_n> n)] | [(n <any_Cx_sh_ey_n>)]) ([(<any_Vx_sh_ey_n> n)] | [(n <any_Vx_sh_ey_n>)]) sil))
Considering guard w with value 2 for kl ...
candidateGuards = map[w:true]
Picking guard, w

Considering guard w with value 2 for ey ...
candidateGuards = map[w:true]
Picking guard, w


frate, target rule = 72 public <clay> = (((sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_w_p_z_kl> w)] | [(w <any_Cx_w_p_z_kl>)]) (kl | ((<any_Cx_w_p_z_kl> w) | (w <any_Cx_w_p_z_kl>)))) ((([(<any_Vx_w_w_ey_noSlide> w)] | [(w <any_Vx_w_w_ey_noSlide>)]) ([(<any_Cx_w_w_kl> w)] | [(w <any_Cx_w_w_kl>)])) (ey | ((<any_Vx_w_w_ey_noSlide> w) | (w <any_Vx_w_w_ey_noSlide>)))) (([(<any_Cx_w_ey_hh> hh)] | [(hh <any_Cx_w_ey_hh>)]) ([(<any_Vx_w_ey_hh> hh)] | [(hh <any_Vx_w_ey_hh>)]) sil))

results =
{72 [{sil 0 8} {k 9 21} {l 22 30} {ey 31 33} {ow 34 47} {n 48 60} {sil 61 63}]}
{80 [{sil 0 9} {k 10 22} {l 23 33} {ey 34 60} {sil 61 68}]}
{91 [{sil 0 11} {k 12 26} {l 27 37} {eh 38 54} {sh 55 57} {iy 58 76} {sh 77 79} {sil 80 130}]}
{105 [{sil 0 14} {k 15 30} {l 31 43} {eh 44 64} {sh 65 67} {iy 68 88} {f 89 91} {sil 92 151}]}
{125 [{sil 3 20} {k 21 39} {l 40 51} {eh 52 77} {sh 78 80} {iy 81 109} {f 110 112} {sil 113 182}]}

normalised results =
{72 [{sil 0 8} {k 13 29} {l 31 42} {ey 43 43} {ow 47 65} {n 67 83} {sil 85 85}]}
{80 [{sil 0 9} {k 13 28} {l 29 41} {ey 43 75} {sil 76 85}]}
{91 [{sil 0 11} {k 13 29} {l 30 41} {eh 42 59} {sh 60 60} {iy 64 84} {sh 85 85} {sil 88 143}]}
{105 [{sil 0 14} {k 14 29} {l 30 41} {eh 42 61} {sh 62 62} {iy 65 84} {f 85 85} {sil 88 144}]}
{125 [{sil 3 20} {k 17 31} {l 32 41} {eh 42 62} {sh 62 62} {iy 65 87} {f 88 88} {sil 90 146}]}

ruleAligned = [{{k 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{l 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{ey 2} [{1 3}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {k 13 29} {l 31 42} {ey 43 43} {ow 47 65} {n 67 83} {sil 85 85}]}
{80 [{sil 0 0} {k 13 28} {l 29 41} {ey 43 75} {sil 76 76}]}
{91 [{sil 0 0} {k 13 29} {l 30 41} {eh 42 59} {sh 60 60} {iy 64 84} {sh 85 85} {sil 88 88}]}
{105 [{sil 0 0} {k 14 29} {l 30 41} {eh 42 61} {sh 62 62} {iy 65 84} {f 85 85} {sil 88 88}]}
{125 [{sil 3 3} {k 17 31} {l 32 41} {eh 42 62} {sh 62 62} {iy 65 87} {f 88 88} {sil 90 90}]}

timeAligned = [{{k 13 29} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{l 30 41} [{1 2} {2 2} {3 2} {0 2} {4 2}]} {{eh 42 59} [{2 3} {3 3} {4 3}]} {{iy 65 84} [{2 5} {3 5} {4 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 28
i, iTime, newITime, timeStartFrom = 2 1 -1 41
combinedVerdict    = [{k 0} {l 0} {ey 2} {eh 3} {iy 3}]
ruleAlignedVerdict = [{k 0} {l 0} {ey 2}]

score->
+1 for k
+1 for l
-1 for ey
-1 for eh
-1 for iy
score<-: -1

results =
{72 [{sil 0 9} {g 10 17} {w 18 24} {w 25 29} {eh 30 43} {ey 44 54} {sil 55 63}]}
{80 [{sil 0 11} {g 12 20} {w 21 28} {w 29 32} {eh 33 48} {ey 49 60} {sil 61 68}]}
{91 [{sil 0 11} {g 12 18} {z 19 21} {kl 22 29} {w 30 36} {eh 37 47} {r 48 53} {iy 54 77} {sil 78 130}]}
{105 [{sil 0 14} {g 15 22} {z 23 25} {kl 26 33} {uw 34 37} {w 38 42} {er 43 69} {n 70 89} {sil 90 151}]}
{125 [{sil 3 19} {g 20 28} {z 29 31} {kl 32 42} {w 43 51} {eh 52 77} {iy 78 106} {hh 107 110} {sil 111 182}]}

normalised results =
{72 [{sil 0 9} {g 14 24} {w 25 33} {w 35 40} {eh 42 60} {ey 61 75} {sil 76 88}]}
{80 [{sil 0 11} {g 15 25} {w 26 35} {w 36 40} {eh 41 60} {ey 61 75} {sil 76 85}]}
{91 [{sil 0 11} {g 13 20} {z 21 21} {kl 24 32} {w 33 40} {eh 41 52} {r 53 58} {iy 59 85} {sil 86 143}]}
{105 [{sil 0 14} {g 14 21} {z 22 22} {kl 25 31} {uw 32 35} {w 36 40} {er 41 66} {n 67 85} {sil 86 144}]}
{125 [{sil 3 19} {g 16 22} {z 23 23} {kl 26 34} {w 34 41} {eh 42 62} {iy 62 85} {hh 86 88} {sil 89 146}]}

ruleAligned = [{{g 3} [{2 1} {3 1} {4 1}]} {{kl 1} [{2 3} {3 3} {4 3}]} {{ey 2} [{0 5} {1 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {g 14 24} {w 25 33} {w 35 40} {eh 42 60} {ey 61 75} {sil 76 76}]}
{80 [{sil 0 0} {g 15 25} {w 26 35} {w 36 36} {eh 41 60} {ey 61 75} {sil 76 76}]}
{91 [{sil 0 0} {g 13 20} {z 21 21} {kl 24 32} {w 33 40} {eh 41 52} {r 53 58} {iy 59 85} {sil 86 86}]}
{105 [{sil 0 0} {g 14 21} {z 22 22} {kl 25 31} {uw 32 32} {w 36 36} {er 41 66} {n 67 85} {sil 86 86}]}
{125 [{sil 3 3} {g 16 22} {z 23 23} {kl 26 34} {w 34 41} {eh 42 62} {iy 62 85} {hh 86 86} {sil 89 89}]}

timeAligned = [{{g 14 22} [{0 1} {2 1} {3 1} {1 1} {4 1}]} {{kl 26 31} [{2 3} {3 3} {4 3}]} {{w 33 40} [{0 2} {1 2} {2 4} {4 4} {0 3}]} {{eh 42 60} [{0 4} {1 4} {2 5} {4 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 20
i, iTime, newITime, timeStartFrom = 2 1 -1 31
combinedVerdict    = [{g 3} {kl 1} {ey 2} {w 3} {eh 3}]
ruleAlignedVerdict = [{g 3} {kl 1} {ey 2}]

score->
-1 for g
+1 for kl
-1 for ey
-1 for w
-1 for eh
score<-: -3
bestResult = {-1 [{k 0} {l 0} {ey 2} {eh 3} {iy 3}] [k l ey]}
testPronounce k good l good ey missing eh surprise iy surprise
publish->
phonsToAlphas = [{[k] c} {[l] l} {[ey] ay}]
getVerdict<-:new {c [k] 0}
getVerdict<-:new {l [l] 0}
getVerdict<-:new {ay [ey] 2}
lettersVerdicts = [{c [k] 0} {l [l] 0} {ay [ey] 2} {eh [eh] 3} {iy [iy] 3}]
publish<-
{
  "results": [
    {
      "letters": "c",
      "phonemes": "k",
      "verdict": "good"
    },
    {
      "letters": "l",
      "phonemes": "l",
      "verdict": "good"
    },
    {
      "letters": "ay",
      "phonemes": "eɪ",
      "verdict": "missing"
    },
    {
      "letters": "eh",
      "phonemes": "ɛ",
      "verdict": "surprise"
    },
    {
      "letters": "iy",
      "phonemes": "iː",
      "verdict": "surprise"
    }
  ],
  "err": null
}
