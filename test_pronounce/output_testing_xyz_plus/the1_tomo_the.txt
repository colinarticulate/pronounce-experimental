
 length of audio =  1.33125



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.52 0.44000000000000006 0.9600000000000001

 start3, duration3, end3 =  0.56 0.36 0.92

 Initial start, duration, end =  0.42000000000000004 0.54 0.9600000000000001

 Cut at: start, duration =  0.42000000000000004 0.89125     guard_end =  1.31125 

Running scan for frate = 125
Running scan for frate = 125
Considering guard ch with value 3 for dh ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 3 for iy ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard zh with value 1 for dh ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 125 public <the> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ch_p_z_dh> ch)] | [(ch <any_Cx_ch_p_z_dh>)]) (dh | t | ((<any_Cx_ch_p_z_dh> ch) | (ch <any_Cx_ch_p_z_dh>)))) ((([(<any_Vx_ch_ch_iy_noSlide> ch)] | [(ch <any_Vx_ch_ch_iy_noSlide>)]) ([(<any_Cx_ch_ch_dh> ch)] | [(ch <any_Cx_ch_ch_dh>)])) (iy | ((<any_Vx_ch_ch_iy_noSlide> ch) | (ch <any_Vx_ch_ch_iy_noSlide>)))) (([(<any_Cx_ch_iy_p> p)] | [(p <any_Cx_ch_iy_p>)]) ([(<any_Vx_ch_iy_p> p)] | [(p <any_Vx_ch_iy_p>)]) sil))
Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

Running scan for frate = 105
Considering guard ch with value 3 for dh ...
candidateGuards = map[ch:true]
Picking guard, ch

frate, target rule = 125 public <the> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_dh> zh)] | [(zh <any_Cx_zh_p_z_dh>)]) (dh | t | ((<any_Cx_zh_p_z_dh_axr> zh) | (zh <any_Cx_zh_p_z_dh_axr>)))) (([(<any_Cx_zh_zh_axr_dh> zh)] | [(zh <any_Cx_zh_zh_axr_dh>)]) (axr | ((<any_Cx_zh_zh_axr> zh) | (zh <any_Cx_zh_zh_axr>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_thr> thr)] | [(thr <any_Cx_zh_axr_thr>)]) sil))
Considering guard ch with value 3 for iy ...
candidateGuards = map[ch:true]
Picking guard, ch

frate, target rule = 105 public <the> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ch_p_z_dh> ch)] | [(ch <any_Cx_ch_p_z_dh>)]) (dh | t | ((<any_Cx_ch_p_z_dh> ch) | (ch <any_Cx_ch_p_z_dh>)))) ((([(<any_Vx_ch_ch_iy_noSlide> ch)] | [(ch <any_Vx_ch_ch_iy_noSlide>)]) ([(<any_Cx_ch_ch_dh> ch)] | [(ch <any_Cx_ch_ch_dh>)])) (iy | ((<any_Vx_ch_ch_iy_noSlide> ch) | (ch <any_Vx_ch_ch_iy_noSlide>)))) (([(<any_Cx_ch_iy_thr> thr)] | [(thr <any_Cx_ch_iy_thr>)]) ([(<any_Vx_ch_iy_thr> thr)] | [(thr <any_Vx_ch_iy_thr>)]) sil))
Running scan for frate = 105
Running scan for frate = 91
Considering guard zh with value 1 for dh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 3 for dh ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 3 for iy ...
candidateGuards = map[ch:true]
Picking guard, ch

frate, target rule = 105 public <the> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_dh> zh)] | [(zh <any_Cx_zh_p_z_dh>)]) (dh | t | ((<any_Cx_zh_p_z_dh_axr> zh) | (zh <any_Cx_zh_p_z_dh_axr>)))) (([(<any_Cx_zh_zh_axr_dh> zh)] | [(zh <any_Cx_zh_zh_axr_dh>)]) (axr | ((<any_Cx_zh_zh_axr> zh) | (zh <any_Cx_zh_zh_axr>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_f> f)] | [(f <any_Cx_zh_axr_f>)]) sil))
frate, target rule = 91 public <the> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ch_p_z_dh> ch)] | [(ch <any_Cx_ch_p_z_dh>)]) (dh | t | ((<any_Cx_ch_p_z_dh> ch) | (ch <any_Cx_ch_p_z_dh>)))) ((([(<any_Vx_ch_ch_iy_noSlide> ch)] | [(ch <any_Vx_ch_ch_iy_noSlide>)]) ([(<any_Cx_ch_ch_dh> ch)] | [(ch <any_Cx_ch_ch_dh>)])) (iy | ((<any_Vx_ch_ch_iy_noSlide> ch) | (ch <any_Vx_ch_ch_iy_noSlide>)))) (([(<any_Cx_ch_iy_f> f)] | [(f <any_Cx_ch_iy_f>)]) ([(<any_Vx_ch_iy_f> f)] | [(f <any_Vx_ch_iy_f>)]) sil))
Running scan for frate = 91
Running scan for frate = 80
Considering guard zh with value 1 for dh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 3 for dh ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 3 for iy ...
candidateGuards = map[ch:true]
Picking guard, ch

frate, target rule = 91 public <the> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_dh> zh)] | [(zh <any_Cx_zh_p_z_dh>)]) (dh | t | ((<any_Cx_zh_p_z_dh_axr> zh) | (zh <any_Cx_zh_p_z_dh_axr>)))) (([(<any_Cx_zh_zh_axr_dh> zh)] | [(zh <any_Cx_zh_zh_axr_dh>)]) (axr | ((<any_Cx_zh_zh_axr> zh) | (zh <any_Cx_zh_zh_axr>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_thr> thr)] | [(thr <any_Cx_zh_axr_thr>)]) sil))
frate, target rule = 80 public <the> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ch_p_z_dh> ch)] | [(ch <any_Cx_ch_p_z_dh>)]) (dh | t | ((<any_Cx_ch_p_z_dh> ch) | (ch <any_Cx_ch_p_z_dh>)))) ((([(<any_Vx_ch_ch_iy_noSlide> ch)] | [(ch <any_Vx_ch_ch_iy_noSlide>)]) ([(<any_Cx_ch_ch_dh> ch)] | [(ch <any_Cx_ch_ch_dh>)])) (iy | ((<any_Vx_ch_ch_iy_noSlide> ch) | (ch <any_Vx_ch_ch_iy_noSlide>)))) (([(<any_Cx_ch_iy_p> p)] | [(p <any_Cx_ch_iy_p>)]) ([(<any_Vx_ch_iy_p> p)] | [(p <any_Vx_ch_iy_p>)]) sil))
Running scan for frate = 80
Considering guard zh with value 1 for dh ...
candidateGuards = map[zh:true]
Picking guard, zh

Running scan for frate = 72
Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 3 for dh ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 3 for iy ...
candidateGuards = map[ch:true]
Picking guard, ch

frate, target rule = 80 public <the> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_dh> zh)] | [(zh <any_Cx_zh_p_z_dh>)]) (dh | t | ((<any_Cx_zh_p_z_dh_axr> zh) | (zh <any_Cx_zh_p_z_dh_axr>)))) (([(<any_Cx_zh_zh_axr_dh> zh)] | [(zh <any_Cx_zh_zh_axr_dh>)]) (axr | ((<any_Cx_zh_zh_axr> zh) | (zh <any_Cx_zh_zh_axr>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_hh> hh)] | [(hh <any_Cx_zh_axr_hh>)]) sil))
frate, target rule = 72 public <the> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ch_p_z_dh> ch)] | [(ch <any_Cx_ch_p_z_dh>)]) (dh | t | ((<any_Cx_ch_p_z_dh> ch) | (ch <any_Cx_ch_p_z_dh>)))) ((([(<any_Vx_ch_ch_iy_noSlide> ch)] | [(ch <any_Vx_ch_ch_iy_noSlide>)]) ([(<any_Cx_ch_ch_dh> ch)] | [(ch <any_Cx_ch_ch_dh>)])) (iy | ((<any_Vx_ch_ch_iy_noSlide> ch) | (ch <any_Vx_ch_ch_iy_noSlide>)))) (([(<any_Cx_ch_iy_p> p)] | [(p <any_Cx_ch_iy_p>)]) ([(<any_Vx_ch_iy_p> p)] | [(p <any_Vx_ch_iy_p>)]) sil))
Running scan for frate = 72
Considering guard zh with value 1 for dh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 72 public <the> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_dh> zh)] | [(zh <any_Cx_zh_p_z_dh>)]) (dh | t | ((<any_Cx_zh_p_z_dh_axr> zh) | (zh <any_Cx_zh_p_z_dh_axr>)))) (([(<any_Cx_zh_zh_axr_dh> zh)] | [(zh <any_Cx_zh_zh_axr_dh>)]) (axr | ((<any_Cx_zh_zh_axr> zh) | (zh <any_Cx_zh_zh_axr>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_p> p)] | [(p <any_Cx_zh_axr_p>)]) sil))

results =
{72 [{sil 0 12} {t 13 25} {axr 26 30} {sil 31 43}]}
{80 [{sil 0 13} {t 14 28} {axr 29 31} {sil 32 45}]}
{91 [{sil 0 14} {z 15 17} {ih 18 30} {t 31 33} {axr 34 63} {sil 64 75}]}
{105 [{sil 0 17} {z 18 20} {d 21 26} {ih 27 37} {z 38 40} {t 41 44} {axr 45 74} {sil 75 88}]}
{125 [{sil 3 21} {z 22 24} {g 25 32} {ih 33 46} {z 47 49} {t 50 55} {axr 56 89} {sil 90 111}]}

normalised results =
{72 [{sil 0 12} {t 18 35} {axr 36 42} {sil 43 60}]}
{80 [{sil 0 13} {t 18 35} {axr 36 36} {sil 40 56}]}
{91 [{sil 0 14} {z 16 16} {ih 20 33} {t 34 34} {axr 37 69} {sil 70 82}]}
{105 [{sil 0 17} {z 17 17} {d 20 25} {ih 26 35} {z 36 36} {t 39 42} {axr 43 70} {sil 71 84}]}
{125 [{sil 3 21} {z 18 18} {g 20 26} {ih 26 37} {z 38 38} {t 40 44} {axr 45 71} {sil 72 89}]}

ruleAligned = [{{ih 3} [{2 2} {3 3} {4 3}]} {{dh 2} []} {{t 3} [{0 1} {1 1} {4 5}]} {{axr 0} [{0 2} {2 4} {3 6} {4 6}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {t 18 35} {axr 36 42} {sil 43 43}]}
{80 [{sil 0 0} {t 18 35} {axr 36 36} {sil 40 40}]}
{91 [{sil 0 0} {z 16 16} {ih 20 33} {t 34 34} {axr 37 69} {sil 70 70}]}
{105 [{sil 0 0} {z 17 17} {d 20 25} {ih 26 35} {z 36 36} {t 39 39} {axr 43 70} {sil 71 71}]}
{125 [{sil 3 3} {z 18 18} {g 20 26} {ih 26 37} {z 38 38} {t 40 44} {axr 45 71} {sil 72 72}]}

timeAligned = [{{ih 26 33} [{2 2} {3 3} {4 3}]} {{axr 45 69} [{2 4} {3 6} {4 6}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 -1 33
i, iTime, newITime, timeStartFrom = 2 0 -1 33
i, iTime, newITime, timeStartFrom = 3 0 1 33
combinedVerdict    = [{ih 3} {dh 2} {axr 0}]
ruleAlignedVerdict = [{ih 3} {dh 2} {t 3} {axr 0}]

score->
-1 for ih
-1 for dh
+1 for axr
score<-: -1

results =
{72 [{sil 0 12} {t 13 18} {iy 19 28} {sil 29 43}]}
{80 [{sil 0 13} {t 14 19} {iy 20 31} {sil 32 45}]}
{91 [{sil 0 13} {t 14 22} {ih 23 34} {ch 35 37} {sil 38 75}]}
{105 [{sil 0 18} {t 19 25} {ih 26 38} {ch 39 41} {sil 42 88}]}
{125 [{sil 3 19} {t 20 23} {iy 24 27} {ih 28 45} {p 46 52} {sil 53 111}]}

normalised results =
{72 [{sil 0 12} {t 18 25} {iy 26 39} {sil 40 60}]}
{80 [{sil 0 13} {t 18 24} {iy 25 39} {sil 40 56}]}
{91 [{sil 0 13} {t 15 24} {ih 25 37} {ch 38 38} {sil 42 82}]}
{105 [{sil 0 18} {t 18 24} {ih 25 36} {ch 37 37} {sil 40 84}]}
{125 [{sil 3 19} {t 16 18} {iy 19 22} {ih 22 36} {p 37 42} {sil 42 89}]}

ruleAligned = [{{dh 2} []} {{t 3} [{0 1} {1 1} {2 1} {3 1}]} {{iy 2} [{0 2} {1 2}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {t 18 25} {iy 26 39} {sil 40 40}]}
{80 [{sil 0 0} {t 18 24} {iy 25 39} {sil 40 40}]}
{91 [{sil 0 0} {t 15 24} {ih 25 37} {ch 38 38} {sil 42 42}]}
{105 [{sil 0 0} {t 18 24} {ih 25 36} {ch 37 37} {sil 40 40}]}
{125 [{sil 3 3} {t 16 16} {iy 19 19} {ih 22 36} {p 37 37} {sil 42 42}]}

timeAligned = [{{t 18 24} [{0 1} {1 1} {2 1} {3 1}]} {{ih 25 36} [{2 2} {3 2} {4 3}]}]

i, iTime, newITime, timeStartFrom = 0 0 -1 0
i, iTime, newITime, timeStartFrom = 1 0 0 0
i, iTime, newITime, timeStartFrom = 2 0 -1 24
combinedVerdict    = [{dh 2} {t 3} {iy 2} {ih 3}]
ruleAlignedVerdict = [{dh 2} {t 3} {iy 2}]

score->
-1 for dh
-1 for t
-1 for iy
-1 for ih
score<-: -4
bestResult = {-1 [{ih 3} {dh 2} {axr 0}] [dh axr]}
testPronounce ih surprise dh missing axr good
publish->
phonsToAlphas = [{[dh] th} {[axr] e}]
getVerdict<-:new {th [dh] 2}
getVerdict<-:new {e [axr] 0}
lettersVerdicts = [{ih [ih] 3} {th [dh] 2} {e [axr] 0}]
publish<-
Total: 279.973432ms
{
  "results": [
    {
      "letters": "ih",
      "phonemes": "ɪ",
      "verdict": "surprise"
    },
    {
      "letters": "th",
      "phonemes": "ð",
      "verdict": "missing"
    },
    {
      "letters": "e",
      "phonemes": "əɹ",
      "verdict": "good"
    }
  ],
  "err": null
}
