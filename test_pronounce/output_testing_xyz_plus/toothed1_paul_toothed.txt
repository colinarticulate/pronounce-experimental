
 length of audio =  1.880437



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.72 0.88 1.6

 start3, duration3, end3 =  0.72 0.45999999999999996 1.18

 Initial start, duration, end =  0.62 0.9800000000000001 1.6

 Cut at: start, duration =  0.62 1.240437     guard_end =  1.8604370000000001 

Running scan for frate = 125
Considering guard zh with value 1 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for uw ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for th ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 125 public <toothed> = (((sil [((g <any_Cx_t_g_p>) | (<any_Cx_t_g_p> g))] [((g <any_vowel_noSlide>) | (<any_vowel_noSlide> g))]) | (sil p (sil [((g <any_Cx_t_g_p>) | (<any_Cx_t_g_p> g))] [((g <any_vowel_noSlide>) | (<any_vowel_noSlide> g))]))) (([(<any_Cx_zh_p_g_t> zh)] | [(zh <any_Cx_zh_p_g_t>)]) (t | ((<any_Cx_zh_p_g_t> zh) | (zh <any_Cx_zh_p_g_t>)))) ((([(<any_Vx_zh_zh_uw_noSlide> zh)] | [(zh <any_Vx_zh_zh_uw_noSlide>)]) ([(<any_Cx_zh_zh_th_t> zh)] | [(zh <any_Cx_zh_zh_th_t>)])) (uw | ((<any_Vx_zh_zh_uw_noSlide> zh) | (zh <any_Vx_zh_zh_uw_noSlide>)))) (([(<any_Cx_zh_zh_th> zh)] | [(zh <any_Cx_zh_zh_th>)]) (th | ((<any_Cx_zh_zh_th_t> zh) | (zh <any_Cx_zh_zh_th_t>)))) (([(<any_Cx_zh_zh_t_th> zh)] | [(zh <any_Cx_zh_zh_t_th>)]) (t | ((<any_Cx_zh_zh_t_th> zh) | (zh <any_Cx_zh_zh_t_th>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_p> p)] | [(p <any_Cx_zh_t_p>)]) sil))
Running scan for frate = 105
Considering guard zh with value 1 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for uw ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for th ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 105 public <toothed> = (((sil [((f <any_Cx_t_f_p>) | (<any_Cx_t_f_p> f))] [((f <any_vowel_noSlide>) | (<any_vowel_noSlide> f))]) | (sil p (sil [((f <any_Cx_t_f_p>) | (<any_Cx_t_f_p> f))] [((f <any_vowel_noSlide>) | (<any_vowel_noSlide> f))]))) (([(<any_Cx_zh_p_f_t> zh)] | [(zh <any_Cx_zh_p_f_t>)]) (t | ((<any_Cx_zh_p_f_t> zh) | (zh <any_Cx_zh_p_f_t>)))) ((([(<any_Vx_zh_zh_uw_noSlide> zh)] | [(zh <any_Vx_zh_zh_uw_noSlide>)]) ([(<any_Cx_zh_zh_th_t> zh)] | [(zh <any_Cx_zh_zh_th_t>)])) (uw | ((<any_Vx_zh_zh_uw_noSlide> zh) | (zh <any_Vx_zh_zh_uw_noSlide>)))) (([(<any_Cx_zh_zh_th> zh)] | [(zh <any_Cx_zh_zh_th>)]) (th | ((<any_Cx_zh_zh_th_t> zh) | (zh <any_Cx_zh_zh_th_t>)))) (([(<any_Cx_zh_zh_t_th> zh)] | [(zh <any_Cx_zh_zh_t_th>)]) (t | ((<any_Cx_zh_zh_t_th> zh) | (zh <any_Cx_zh_zh_t_th>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_d> d)] | [(d <any_Cx_zh_t_d>)]) sil))
Running scan for frate = 91
Considering guard zh with value 1 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for uw ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for th ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 91 public <toothed> = (((sil [((k <any_Cx_t_k_p>) | (<any_Cx_t_k_p> k))] [((k <any_vowel_noSlide>) | (<any_vowel_noSlide> k))]) | (sil p (sil [((k <any_Cx_t_k_p>) | (<any_Cx_t_k_p> k))] [((k <any_vowel_noSlide>) | (<any_vowel_noSlide> k))]))) (([(<any_Cx_zh_p_k_t> zh)] | [(zh <any_Cx_zh_p_k_t>)]) (t | ((<any_Cx_zh_p_k_t> zh) | (zh <any_Cx_zh_p_k_t>)))) ((([(<any_Vx_zh_zh_uw_noSlide> zh)] | [(zh <any_Vx_zh_zh_uw_noSlide>)]) ([(<any_Cx_zh_zh_th_t> zh)] | [(zh <any_Cx_zh_zh_th_t>)])) (uw | ((<any_Vx_zh_zh_uw_noSlide> zh) | (zh <any_Vx_zh_zh_uw_noSlide>)))) (([(<any_Cx_zh_zh_th> zh)] | [(zh <any_Cx_zh_zh_th>)]) (th | ((<any_Cx_zh_zh_th_t> zh) | (zh <any_Cx_zh_zh_th_t>)))) (([(<any_Cx_zh_zh_t_th> zh)] | [(zh <any_Cx_zh_zh_t_th>)]) (t | ((<any_Cx_zh_zh_t_th> zh) | (zh <any_Cx_zh_zh_t_th>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_thr> thr)] | [(thr <any_Cx_zh_t_thr>)]) sil))
Running scan for frate = 80
Considering guard zh with value 1 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for uw ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for th ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 80 public <toothed> = (((sil [((g <any_Cx_t_g_p>) | (<any_Cx_t_g_p> g))] [((g <any_vowel_noSlide>) | (<any_vowel_noSlide> g))]) | (sil p (sil [((g <any_Cx_t_g_p>) | (<any_Cx_t_g_p> g))] [((g <any_vowel_noSlide>) | (<any_vowel_noSlide> g))]))) (([(<any_Cx_zh_p_g_t> zh)] | [(zh <any_Cx_zh_p_g_t>)]) (t | ((<any_Cx_zh_p_g_t> zh) | (zh <any_Cx_zh_p_g_t>)))) ((([(<any_Vx_zh_zh_uw_noSlide> zh)] | [(zh <any_Vx_zh_zh_uw_noSlide>)]) ([(<any_Cx_zh_zh_th_t> zh)] | [(zh <any_Cx_zh_zh_th_t>)])) (uw | ((<any_Vx_zh_zh_uw_noSlide> zh) | (zh <any_Vx_zh_zh_uw_noSlide>)))) (([(<any_Cx_zh_zh_th> zh)] | [(zh <any_Cx_zh_zh_th>)]) (th | ((<any_Cx_zh_zh_th_t> zh) | (zh <any_Cx_zh_zh_th_t>)))) (([(<any_Cx_zh_zh_t_th> zh)] | [(zh <any_Cx_zh_zh_t_th>)]) (t | ((<any_Cx_zh_zh_t_th> zh) | (zh <any_Cx_zh_zh_t_th>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_d> d)] | [(d <any_Cx_zh_t_d>)]) sil))
Running scan for frate = 72
Considering guard zh with value 1 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for uw ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for th ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 72 public <toothed> = (((sil [((ch <any_Cx_t_ch_p>) | (<any_Cx_t_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_t_ch_p>) | (<any_Cx_t_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_zh_p_ch_t> zh)] | [(zh <any_Cx_zh_p_ch_t>)]) (t | ((<any_Cx_zh_p_ch_t> zh) | (zh <any_Cx_zh_p_ch_t>)))) ((([(<any_Vx_zh_zh_uw_noSlide> zh)] | [(zh <any_Vx_zh_zh_uw_noSlide>)]) ([(<any_Cx_zh_zh_th_t> zh)] | [(zh <any_Cx_zh_zh_th_t>)])) (uw | ((<any_Vx_zh_zh_uw_noSlide> zh) | (zh <any_Vx_zh_zh_uw_noSlide>)))) (([(<any_Cx_zh_zh_th> zh)] | [(zh <any_Cx_zh_zh_th>)]) (th | ((<any_Cx_zh_zh_th_t> zh) | (zh <any_Cx_zh_zh_th_t>)))) (([(<any_Cx_zh_zh_t_th> zh)] | [(zh <any_Cx_zh_zh_t_th>)]) (t | ((<any_Cx_zh_zh_t_th> zh) | (zh <any_Cx_zh_zh_t_th>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_g> g)] | [(g <any_Cx_zh_t_g>)]) sil))

results =
{72 [{sil 0 11} {t 12 19} {uw 20 31} {th 32 46} {t 47 60} {sil 61 88}]}
{80 [{sil 0 13} {t 14 21} {uw 22 34} {th 35 53} {t 54 66} {sil 67 81}]}
{91 [{sil 0 15} {t 16 24} {uw 25 44} {zh 45 47} {z 48 61} {t 62 76} {sil 77 111}]}
{105 [{sil 0 18} {t 19 29} {uw 30 52} {zh 53 55} {z 56 72} {t 73 86} {sil 87 129}]}
{125 [{sil 3 22} {t 23 35} {uw 36 63} {zh 64 66} {z 67 86} {t 87 103} {sil 104 155}]}

normalised results =
{72 [{sil 0 11} {t 17 26} {uw 28 43} {th 44 64} {t 65 83} {sil 85 122}]}
{80 [{sil 0 13} {t 18 26} {uw 28 43} {th 44 66} {t 68 83} {sil 84 101}]}
{91 [{sil 0 15} {t 18 26} {uw 27 48} {zh 49 49} {z 53 67} {t 68 84} {sil 85 122}]}
{105 [{sil 0 18} {t 18 28} {uw 29 50} {zh 50 50} {z 53 69} {t 70 82} {sil 83 123}]}
{125 [{sil 3 22} {t 18 28} {uw 29 50} {zh 51 51} {z 54 69} {t 70 82} {sil 83 124}]}

ruleAligned = [{{t 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{uw 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{th 2} [{0 3} {1 3}]} {{z 3} [{2 4} {3 4} {4 4}]} {{t 0} [{0 4} {1 4} {2 5} {3 5} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {t 17 26} {uw 28 43} {th 44 64} {t 65 83} {sil 85 85}]}
{80 [{sil 0 0} {t 18 26} {uw 28 43} {th 44 66} {t 68 83} {sil 84 84}]}
{91 [{sil 0 0} {t 18 26} {uw 27 48} {zh 49 49} {z 53 67} {t 68 84} {sil 85 85}]}
{105 [{sil 0 0} {t 18 28} {uw 29 50} {zh 50 50} {z 53 69} {t 70 82} {sil 83 83}]}
{125 [{sil 3 3} {t 18 28} {uw 29 50} {zh 51 51} {z 54 69} {t 70 82} {sil 83 83}]}

timeAligned = [{{t 18 26} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{uw 28 48} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{z 54 67} [{2 4} {3 4} {4 4}]} {{t 68 83} [{0 4} {1 4} {2 5} {3 5} {4 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 26
i, iTime, newITime, timeStartFrom = 2 1 -1 43
i, iTime, newITime, timeStartFrom = 3 1 2 43
i, iTime, newITime, timeStartFrom = 4 2 3 67
combinedVerdict    = [{t 0} {uw 0} {th 2} {z 3} {t 0}]
ruleAlignedVerdict = [{t 0} {uw 0} {th 2} {z 3} {t 0}]

score->
+1 for t
+1 for uw
-1 for th
-1 for z
+1 for t
score<-: 1
bestResult = {1 [{t 0} {uw 0} {th 2} {z 3} {t 0}] [t uw th t]}
testPronounce t good uw good th missing z surprise t good
publish->
phonsToAlphas = [{[t] t} {[uw] oo} {[th] the} {[t] d}]
getVerdict<-:new {t [t] 0}
getVerdict<-:new {oo [uw] 0}
getVerdict<-:new {the [th] 2}
getVerdict<-:new {d [t] 0}
lettersVerdicts = [{t [t] 0} {oo [uw] 0} {the [th] 2} {z [z] 3} {d [t] 0}]
publish<-
Total: 269.98427ms
{
  "results": [
    {
      "letters": "t",
      "phonemes": "t",
      "verdict": "good"
    },
    {
      "letters": "oo",
      "phonemes": "u",
      "verdict": "good"
    },
    {
      "letters": "the",
      "phonemes": "Î¸",
      "verdict": "missing"
    },
    {
      "letters": "z",
      "phonemes": "z",
      "verdict": "surprise"
    },
    {
      "letters": "d",
      "phonemes": "t",
      "verdict": "good"
    }
  ],
  "err": null
}
