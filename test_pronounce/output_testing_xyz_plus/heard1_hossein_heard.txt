
 length of audio =  1.749



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.66 0.62 1.28

 start3, duration3, end3 =  0.66 0.54 1.2000000000000002

 Initial start, duration, end =  0.56 0.72 1.28

 Cut at: start, duration =  0.56 1.17     guard_end =  1.73 

Running scan for frate = 125
Considering guard s with value 4 for hh ...
Considering guard sh with value 4 for hh ...
Considering guard w with value 4 for hh ...
Considering guard dh with value 4 for hh ...
Considering guard ch with value 4 for hh ...
Considering guard zh with value 4 for hh ...
Considering guard y with value 4 for hh ...
Considering guard ng with value 4 for hh ...
Considering guard jh with value 4 for hh ...
candidateGuards = map[ch:true dh:true jh:true ng:true s:true sh:true w:true y:true zh:true]
Picking guard, w

Considering guard sh with value 8 for er ...
Considering guard s with value 8 for er ...
Considering guard ch with value 8 for er ...
Considering guard zh with value 8 for er ...
Considering guard ng with value 8 for er ...
Considering guard w with value 8 for er ...
candidateGuards = map[ch:true ng:true s:true sh:true w:true zh:true]
Picking guard, ng

Considering guard w with value 2 for d ...
candidateGuards = map[w:true]
Picking guard, w

frate, target rule = 125 public <heard> = (((sil [((b <any_Cx_hh_b_b>) | (<any_Cx_hh_b_b> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]) | (sil b (sil [((b <any_Cx_hh_b_b>) | (<any_Cx_hh_b_b> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]))) (([(<any_Cx_w_b_b_hh> w)] | [(w <any_Cx_w_b_b_hh>)]) (hh | ((<any_Cx_w_b_b_hh> w) | (w <any_Cx_w_b_b_hh>)))) ((([(<any_Vx_ng_w_er_noSlide> ng)] | [(ng <any_Vx_ng_w_er_noSlide>)]) ([(<any_Cx_ng_w_d_hh> ng)] | [(ng <any_Cx_ng_w_d_hh>)])) (er | ((<any_Vx_ng_w_er_noSlide> ng) | (ng <any_Vx_ng_w_er_noSlide>)))) (([(<any_Cx_w_ng_d> w)] | [(w <any_Cx_w_ng_d>)]) (d | ((<any_Cx_w_ng_d> w) | (w <any_Cx_w_ng_d>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_w_d_thr> thr)] | [(thr <any_Cx_w_d_thr>)]) sil))
Running scan for frate = 105
Considering guard y with value 4 for hh ...
Considering guard ng with value 4 for hh ...
Considering guard s with value 4 for hh ...
Considering guard ch with value 4 for hh ...
Considering guard dh with value 4 for hh ...
Considering guard zh with value 4 for hh ...
Considering guard jh with value 4 for hh ...
Considering guard sh with value 4 for hh ...
Considering guard w with value 4 for hh ...
candidateGuards = map[ch:true dh:true jh:true ng:true s:true sh:true w:true y:true zh:true]
Picking guard, ng

Considering guard ch with value 8 for er ...
Considering guard zh with value 8 for er ...
Considering guard w with value 8 for er ...
Considering guard ng with value 8 for er ...
Considering guard sh with value 8 for er ...
Considering guard s with value 8 for er ...
candidateGuards = map[ch:true ng:true s:true sh:true w:true zh:true]
Picking guard, sh

Considering guard w with value 2 for d ...
candidateGuards = map[w:true]
Picking guard, w

frate, target rule = 105 public <heard> = (((sil [((z <any_Cx_hh_z_b>) | (<any_Cx_hh_z_b> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil b (sil [((z <any_Cx_hh_z_b>) | (<any_Cx_hh_z_b> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ng_b_z_hh> ng)] | [(ng <any_Cx_ng_b_z_hh>)]) (hh | ((<any_Cx_ng_b_z_hh> ng) | (ng <any_Cx_ng_b_z_hh>)))) ((([(<any_Vx_sh_ng_er_noSlide> sh)] | [(sh <any_Vx_sh_ng_er_noSlide>)]) ([(<any_Cx_sh_ng_d_hh> sh)] | [(sh <any_Cx_sh_ng_d_hh>)])) (er | ((<any_Vx_sh_ng_er_noSlide> sh) | (sh <any_Vx_sh_ng_er_noSlide>)))) (([(<any_Cx_w_sh_d> w)] | [(w <any_Cx_w_sh_d>)]) (d | ((<any_Cx_w_sh_d> w) | (w <any_Cx_w_sh_d>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_w_d_v> v)] | [(v <any_Cx_w_d_v>)]) sil))
Running scan for frate = 91
Considering guard jh with value 4 for hh ...
Considering guard ng with value 4 for hh ...
Considering guard dh with value 4 for hh ...
Considering guard s with value 4 for hh ...
Considering guard sh with value 4 for hh ...
Considering guard w with value 4 for hh ...
Considering guard y with value 4 for hh ...
Considering guard ch with value 4 for hh ...
Considering guard zh with value 4 for hh ...
candidateGuards = map[ch:true dh:true jh:true ng:true s:true sh:true w:true y:true zh:true]
Picking guard, s

Considering guard ng with value 8 for er ...
Considering guard s with value 8 for er ...
Considering guard sh with value 8 for er ...
Considering guard ch with value 8 for er ...
Considering guard zh with value 8 for er ...
Considering guard w with value 8 for er ...
candidateGuards = map[ch:true ng:true s:true sh:true w:true zh:true]
Picking guard, sh

Considering guard w with value 2 for d ...
candidateGuards = map[w:true]
Picking guard, w

frate, target rule = 91 public <heard> = (((sil [((iy <any_Cx_hh_iy_b>) | (<any_Cx_hh_iy_b> iy))] [((iy <any_vowel_noSlide>) | (<any_vowel_noSlide> iy))]) | (sil b (sil [((iy <any_Cx_hh_iy_b>) | (<any_Cx_hh_iy_b> iy))] [((iy <any_vowel_noSlide>) | (<any_vowel_noSlide> iy))]))) (([(<any_Cx_s_b_iy_hh> s)] | [(s <any_Cx_s_b_iy_hh>)]) (hh | ((<any_Cx_s_b_iy_hh> s) | (s <any_Cx_s_b_iy_hh>)))) ((([(<any_Vx_sh_s_er_noSlide> sh)] | [(sh <any_Vx_sh_s_er_noSlide>)]) ([(<any_Cx_sh_s_d_hh> sh)] | [(sh <any_Cx_sh_s_d_hh>)])) (er | ((<any_Vx_sh_s_er_noSlide> sh) | (sh <any_Vx_sh_s_er_noSlide>)))) (([(<any_Cx_w_sh_d> w)] | [(w <any_Cx_w_sh_d>)]) (d | ((<any_Cx_w_sh_d> w) | (w <any_Cx_w_sh_d>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_w_d_thr> thr)] | [(thr <any_Cx_w_d_thr>)]) sil))
Running scan for frate = 80
Considering guard zh with value 4 for hh ...
Considering guard sh with value 4 for hh ...
Considering guard s with value 4 for hh ...
Considering guard ch with value 4 for hh ...
Considering guard y with value 4 for hh ...
Considering guard dh with value 4 for hh ...
Considering guard w with value 4 for hh ...
Considering guard jh with value 4 for hh ...
Considering guard ng with value 4 for hh ...
candidateGuards = map[ch:true dh:true jh:true ng:true s:true sh:true w:true y:true zh:true]
Picking guard, sh

Considering guard ng with value 8 for er ...
Considering guard sh with value 8 for er ...
Considering guard s with value 8 for er ...
Considering guard zh with value 8 for er ...
Considering guard w with value 8 for er ...
Considering guard ch with value 8 for er ...
candidateGuards = map[ch:true ng:true s:true sh:true w:true zh:true]
Picking guard, ng

Considering guard w with value 2 for d ...
candidateGuards = map[w:true]
Picking guard, w

frate, target rule = 80 public <heard> = (((sil [((b <any_Cx_hh_b_b>) | (<any_Cx_hh_b_b> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]) | (sil b (sil [((b <any_Cx_hh_b_b>) | (<any_Cx_hh_b_b> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]))) (([(<any_Cx_sh_b_b_hh> sh)] | [(sh <any_Cx_sh_b_b_hh>)]) (hh | ((<any_Cx_sh_b_b_hh> sh) | (sh <any_Cx_sh_b_b_hh>)))) ((([(<any_Vx_ng_sh_er_noSlide> ng)] | [(ng <any_Vx_ng_sh_er_noSlide>)]) ([(<any_Cx_ng_sh_d_hh> ng)] | [(ng <any_Cx_ng_sh_d_hh>)])) (er | ((<any_Vx_ng_sh_er_noSlide> ng) | (ng <any_Vx_ng_sh_er_noSlide>)))) (([(<any_Cx_w_ng_d> w)] | [(w <any_Cx_w_ng_d>)]) (d | ((<any_Cx_w_ng_d> w) | (w <any_Cx_w_ng_d>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_w_d_b> b)] | [(b <any_Cx_w_d_b>)]) sil))
Running scan for frate = 72
Considering guard w with value 4 for hh ...
Considering guard y with value 4 for hh ...
Considering guard ch with value 4 for hh ...
Considering guard sh with value 4 for hh ...
Considering guard dh with value 4 for hh ...
Considering guard jh with value 4 for hh ...
Considering guard ng with value 4 for hh ...
Considering guard s with value 4 for hh ...
Considering guard zh with value 4 for hh ...
candidateGuards = map[ch:true dh:true jh:true ng:true s:true sh:true w:true y:true zh:true]
Picking guard, w

Considering guard sh with value 8 for er ...
Considering guard ng with value 8 for er ...
Considering guard ch with value 8 for er ...
Considering guard s with value 8 for er ...
Considering guard zh with value 8 for er ...
Considering guard w with value 8 for er ...
candidateGuards = map[ch:true ng:true s:true sh:true w:true zh:true]
Picking guard, zh

Considering guard w with value 2 for d ...
candidateGuards = map[w:true]
Picking guard, w

frate, target rule = 72 public <heard> = (((sil [((b <any_Cx_hh_b_b>) | (<any_Cx_hh_b_b> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]) | (sil b (sil [((b <any_Cx_hh_b_b>) | (<any_Cx_hh_b_b> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]))) (([(<any_Cx_w_b_b_hh> w)] | [(w <any_Cx_w_b_b_hh>)]) (hh | ((<any_Cx_w_b_b_hh> w) | (w <any_Cx_w_b_b_hh>)))) ((([(<any_Vx_zh_w_er_noSlide> zh)] | [(zh <any_Vx_zh_w_er_noSlide>)]) ([(<any_Cx_zh_w_d_hh> zh)] | [(zh <any_Cx_zh_w_d_hh>)])) (er | ((<any_Vx_zh_w_er_noSlide> zh) | (zh <any_Vx_zh_w_er_noSlide>)))) (([(<any_Cx_w_zh_d> w)] | [(w <any_Cx_w_zh_d>)]) (d | ((<any_Cx_w_zh_d> w) | (w <any_Cx_w_zh_d>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_w_d_thr> thr)] | [(thr <any_Cx_w_d_thr>)]) sil))

results =
{72 [{sil 0 7} {hh 8 22} {er 23 36} {d 37 44} {sil 45 58}]}
{80 [{sil 0 10} {hh 11 25} {er 26 40} {d 41 48} {sil 49 63}]}
{91 [{sil 0 10} {hh 11 18} {er 19 46} {d 47 55} {sil 56 101}]}
{105 [{sil 0 12} {hh 13 21} {er 22 54} {d 55 67} {sil 68 122}]}
{125 [{sil 3 16} {hh 17 26} {ae 27 64} {ng 65 67} {d 68 81} {sil 82 146}]}

normalised results =
{72 [{sil 0 7} {hh 11 31} {er 32 50} {d 51 61} {sil 63 81}]}
{80 [{sil 0 10} {hh 14 31} {er 33 50} {d 51 60} {sil 61 79}]}
{91 [{sil 0 10} {hh 12 20} {er 21 51} {d 52 60} {sil 62 111}]}
{105 [{sil 0 12} {hh 12 20} {er 21 51} {d 52 64} {sil 65 116}]}
{125 [{sil 3 16} {hh 14 21} {ae 22 51} {ng 52 52} {d 54 65} {sil 66 117}]}

ruleAligned = [{{hh 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{er 0} [{0 2} {1 2} {2 2} {3 2}]} {{d 0} [{0 3} {1 3} {2 3} {3 3} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {hh 11 31} {er 32 50} {d 51 61} {sil 63 63}]}
{80 [{sil 0 0} {hh 14 31} {er 33 50} {d 51 60} {sil 61 61}]}
{91 [{sil 0 0} {hh 12 20} {er 21 51} {d 52 60} {sil 62 62}]}
{105 [{sil 0 0} {hh 12 20} {er 21 51} {d 52 64} {sil 65 65}]}
{125 [{sil 3 3} {hh 14 21} {ae 22 51} {ng 52 52} {d 54 65} {sil 66 66}]}

timeAligned = [{{hh 12 21} [{0 1} {2 1} {3 1} {1 1} {4 1}]} {{er 32 50} [{0 2} {2 2} {3 2} {1 2}]} {{d 52 61} [{0 3} {1 3} {2 3} {3 3} {4 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 20
i, iTime, newITime, timeStartFrom = 2 1 2 50
combinedVerdict    = [{hh 0} {er 0} {d 0}]
ruleAlignedVerdict = [{hh 0} {er 0} {d 0}]

score->
+1 for hh
+1 for er
+1 for d
score<-: 8
testPronounce hh good er good d good
publish->
phonsToAlphas = [{[hh] h} {[er] ear} {[d] d}]
getVerdict<-:new {h [hh] 0}
getVerdict<-:new {ear [er] 0}
getVerdict<-:new {d [d] 0}
lettersVerdicts = [{h [hh] 0} {ear [er] 0} {d [d] 0}]
publish<-
Total: 214.075618ms
{
  "results": [
    {
      "letters": "h",
      "phonemes": "h",
      "verdict": "good"
    },
    {
      "letters": "ear",
      "phonemes": "ɜɹ",
      "verdict": "good"
    },
    {
      "letters": "d",
      "phonemes": "d",
      "verdict": "good"
    }
  ],
  "err": null
}
