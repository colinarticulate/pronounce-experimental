
 length of audio =  2.08525



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.74 0.78 1.52

 start3, duration3, end3 =  0.74 0.74 1.48

 Initial start, duration, end =  0.64 0.88 1.52

 Cut at: start, duration =  0.64 1.33     guard_end =  1.9700000000000002 

Running scan for frate = 125
Running scan for frate = 125
Considering guard sh with value 0.8 for ae ...
Considering guard zh with value 0.8 for ae ...
candidateGuards = map[sh:true zh:true]
Picking guard, sh

Considering guard zh with value 1.6 for n ...
Considering guard sh with value 1.6 for n ...
candidateGuards = map[sh:true zh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for axl ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 125 public <animal> = (((sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]) | (sil p (sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]))) ((([(<any_Vx_sh_p_z_ae_noSlide> sh)] | [(sh <any_Vx_sh_p_z_ae_noSlide>)]) ([(<any_Cx_sh_p_z_n> sh)] | [(sh <any_Cx_sh_p_z_n>)])) (ae | ((<any_Vx_sh_p_z_ae_noSlide> sh) | (sh <any_Vx_sh_p_z_ae_noSlide>)))) (([(<any_Cx_sh_sh_n_ax> sh)] | [(sh <any_Cx_sh_sh_n_ax>)]) (n | ((<any_Cx_sh_sh_n_ax> sh) | (sh <any_Cx_sh_sh_n_ax>)))) (([(<any_Cx_sh_sh_ax_m_n> sh)] | [(sh <any_Cx_sh_sh_ax_m_n>)]) (ax | ((<any_Cx_sh_sh_ax_m_n> sh) | (sh <any_Cx_sh_sh_ax_m_n>)))) (([(<any_Cx_sh_sh_m_ax> sh)] | [(sh <any_Cx_sh_sh_m_ax>)]) (m | ((<any_Cx_sh_sh_m_axl_ax> sh) | (sh <any_Cx_sh_sh_m_axl_ax>)))) (([(<any_Cx_sh_sh_axl_m> sh)] | [(sh <any_Cx_sh_sh_axl_m>)]) (axl | ((<any_Cx_sh_sh_axl_m> sh) | (sh <any_Cx_sh_sh_axl_m>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_sh_axl_p> p)] | [(p <any_Cx_sh_axl_p>)]) sil))
Running scan for frate = 105
Considering guard sh with value 0.8 for ae ...
Considering guard zh with value 0.8 for ae ...
candidateGuards = map[sh:true zh:true]
Picking guard, sh

Considering guard zh with value 1.6 for n ...
Considering guard sh with value 1.6 for n ...
candidateGuards = map[sh:true zh:true]
Picking guard, zh

Considering guard sh with value 1.6 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for axl ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 105 public <animal> = (((sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]) | (sil p (sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]))) ((([(<any_Vx_sh_p_z_ae_noSlide> sh)] | [(sh <any_Vx_sh_p_z_ae_noSlide>)]) ([(<any_Cx_sh_p_z_n> sh)] | [(sh <any_Cx_sh_p_z_n>)])) (ae | ((<any_Vx_sh_p_z_ae_noSlide> sh) | (sh <any_Vx_sh_p_z_ae_noSlide>)))) (([(<any_Cx_zh_sh_n_ax> zh)] | [(zh <any_Cx_zh_sh_n_ax>)]) (n | ((<any_Cx_zh_sh_n_ax> zh) | (zh <any_Cx_zh_sh_n_ax>)))) (([(<any_Cx_sh_zh_ax_m_n> sh)] | [(sh <any_Cx_sh_zh_ax_m_n>)]) (ax | ((<any_Cx_sh_zh_ax_m_n> sh) | (sh <any_Cx_sh_zh_ax_m_n>)))) (([(<any_Cx_sh_sh_m_ax> sh)] | [(sh <any_Cx_sh_sh_m_ax>)]) (m | ((<any_Cx_sh_sh_m_axl_ax> sh) | (sh <any_Cx_sh_sh_m_axl_ax>)))) (([(<any_Cx_sh_sh_axl_m> sh)] | [(sh <any_Cx_sh_sh_axl_m>)]) (axl | ((<any_Cx_sh_sh_axl_m> sh) | (sh <any_Cx_sh_sh_axl_m>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_sh_axl_m> m)] | [(m <any_Cx_sh_axl_m>)]) sil))
Running scan for frate = 91
Considering guard zh with value 0.8 for ae ...
Considering guard sh with value 0.8 for ae ...
candidateGuards = map[sh:true zh:true]
Picking guard, zh

Considering guard sh with value 1.6 for n ...
Considering guard zh with value 1.6 for n ...
candidateGuards = map[sh:true zh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for axl ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 91 public <animal> = (((sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]) | (sil p (sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]))) ((([(<any_Vx_zh_p_z_ae_noSlide> zh)] | [(zh <any_Vx_zh_p_z_ae_noSlide>)]) ([(<any_Cx_zh_p_z_n> zh)] | [(zh <any_Cx_zh_p_z_n>)])) (ae | ((<any_Vx_zh_p_z_ae_noSlide> zh) | (zh <any_Vx_zh_p_z_ae_noSlide>)))) (([(<any_Cx_sh_zh_n_ax> sh)] | [(sh <any_Cx_sh_zh_n_ax>)]) (n | ((<any_Cx_sh_zh_n_ax> sh) | (sh <any_Cx_sh_zh_n_ax>)))) (([(<any_Cx_sh_sh_ax_m_n> sh)] | [(sh <any_Cx_sh_sh_ax_m_n>)]) (ax | ((<any_Cx_sh_sh_ax_m_n> sh) | (sh <any_Cx_sh_sh_ax_m_n>)))) (([(<any_Cx_sh_sh_m_ax> sh)] | [(sh <any_Cx_sh_sh_m_ax>)]) (m | ((<any_Cx_sh_sh_m_axl_ax> sh) | (sh <any_Cx_sh_sh_m_axl_ax>)))) (([(<any_Cx_sh_sh_axl_m> sh)] | [(sh <any_Cx_sh_sh_axl_m>)]) (axl | ((<any_Cx_sh_sh_axl_m> sh) | (sh <any_Cx_sh_sh_axl_m>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_sh_axl_n> n)] | [(n <any_Cx_sh_axl_n>)]) sil))
Running scan for frate = 80
Considering guard zh with value 0.8 for ae ...
Considering guard sh with value 0.8 for ae ...
candidateGuards = map[sh:true zh:true]
Picking guard, zh

Considering guard zh with value 1.6 for n ...
Considering guard sh with value 1.6 for n ...
candidateGuards = map[sh:true zh:true]
Picking guard, zh

Considering guard sh with value 1.6 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for axl ...
candidateGuards = map[sh:true]
Picking guard, sh


Running scan for frate = 125
Running scan for frate = 125
Running scan for frate = 125
Considering guard zh with value 0.8 for ae ...
Considering guard sh with value 0.8 for ae ...
candidateGuards = map[sh:true zh:true]
Picking guard, sh

Considering guard sh with value 0.8 for ae ...
Considering guard zh with value 0.8 for ae ...
candidateGuards = map[sh:true zh:true]
Picking guard, sh

Considering guard sh with value 1.6 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 1.6 for n ...
Considering guard sh with value 1.6 for n ...
candidateGuards = map[sh:true zh:true]
Picking guard, zh

Considering guard zh with value 0.8 for ae ...
Considering guard sh with value 0.8 for ae ...
candidateGuards = map[sh:true zh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for axl ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 2.8 for axm ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard sh with value 3.2 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 125 public <animal> = (((sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]) | (sil p (sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]))) ((([(<any_Vx_sh_p_z_ae_noSlide> sh)] | [(sh <any_Vx_sh_p_z_ae_noSlide>)]) ([(<any_Cx_sh_p_z_n> sh)] | [(sh <any_Cx_sh_p_z_n>)])) (ae | ((<any_Vx_sh_p_z_ae_noSlide> sh) | (sh <any_Vx_sh_p_z_ae_noSlide>)))) (([(<any_Cx_sh_sh_n> sh)] | [(sh <any_Cx_sh_sh_n>)]) (n | ((<any_Cx_sh_sh_n> sh) | (sh <any_Cx_sh_sh_n>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_m_n> sh)] | [(sh <any_Cx_sh_sh_m_n>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)]) (m | ((<any_Cx_sh_sh_m_axl> sh) | (sh <any_Cx_sh_sh_m_axl>)))) (([(<any_Cx_sh_sh_axl_m> sh)] | [(sh <any_Cx_sh_sh_axl_m>)]) (axl | ((<any_Cx_sh_sh_axl_m> sh) | (sh <any_Cx_sh_sh_axl_m>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_sh_axl_ng> ng)] | [(ng <any_Cx_sh_axl_ng>)]) sil))
Running scan for frate = 105

Considering guard zh with value 0.8 for ae ...
Considering guard sh with value 0.8 for ae ...
candidateGuards = map[sh:true zh:true]
Picking guard, zh


frate, target rule = 125 public <animal> = (((sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]) | (sil p (sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]))) ((([(<any_Vx_sh_p_z_ae_noSlide> sh)] | [(sh <any_Vx_sh_p_z_ae_noSlide>)]) ([(<any_Cx_sh_p_z_n> sh)] | [(sh <any_Cx_sh_p_z_n>)])) (ae | ((<any_Vx_sh_p_z_ae_noSlide> sh) | (sh <any_Vx_sh_p_z_ae_noSlide>)))) (([(<any_Cx_zh_sh_n_ax> zh)] | [(zh <any_Cx_zh_sh_n_ax>)]) (n | ((<any_Cx_zh_sh_n_ax> zh) | (zh <any_Cx_zh_sh_n_ax>)))) (([(<any_Cx_sh_zh_ax_m_n> sh)] | [(sh <any_Cx_sh_zh_ax_m_n>)]) (ax | ((<any_Cx_sh_zh_ax_m_n> sh) | (sh <any_Cx_sh_zh_ax_m_n>)))) (([(<any_Cx_sh_sh_m_ax_ax> sh)] | [(sh <any_Cx_sh_sh_m_ax_ax>)]) (m | ((<any_Cx_sh_sh_m_ax_ax> sh) | (sh <any_Cx_sh_sh_m_ax_ax>)))) (([(<any_Cx_sh_sh_ax_m> sh)] | [(sh <any_Cx_sh_sh_ax_m>)]) (ax | ((<any_Cx_sh_sh_ax_l_m> sh) | (sh <any_Cx_sh_sh_ax_l_m>)))) (([(<any_Cx_sh_sh_l_ax> sh)] | [(sh <any_Cx_sh_sh_l_ax>)]) (l | ((<any_Cx_sh_sh_l_ax> sh) | (sh <any_Cx_sh_sh_l_ax>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_f> f)] | [(f <any_Cx_sh_l_f>)]) sil))
Running scan for frate = 105
frate, target rule = 125 public <animal> = (((sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]) | (sil p (sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]))) ((([(<any_Vx_sh_p_z_ae_noSlide> sh)] | [(sh <any_Vx_sh_p_z_ae_noSlide>)]) ([(<any_Cx_sh_p_z_n> sh)] | [(sh <any_Cx_sh_p_z_n>)])) (ae | ((<any_Vx_sh_p_z_ae_noSlide> sh) | (sh <any_Vx_sh_p_z_ae_noSlide>)))) (([(<any_Cx_sh_sh_n_axm> sh)] | [(sh <any_Cx_sh_sh_n_axm>)]) (n | ((<any_Cx_sh_sh_n_axm> sh) | (sh <any_Cx_sh_sh_n_axm>)))) (([(<any_Cx_ch_sh_axm_ax_n> ch)] | [(ch <any_Cx_ch_sh_axm_ax_n>)]) (axm | ((<any_Cx_ch_sh_axm_ax_n> ch) | (ch <any_Cx_ch_sh_axm_ax_n>)))) (([(<any_Cx_sh_ch_ax_axm> sh)] | [(sh <any_Cx_sh_ch_ax_axm>)]) (ax | ((<any_Cx_sh_ch_ax_l_axm> sh) | (sh <any_Cx_sh_ch_ax_l_axm>)))) (([(<any_Cx_sh_sh_l_ax> sh)] | [(sh <any_Cx_sh_sh_l_ax>)]) (l | ((<any_Cx_sh_sh_l_ax> sh) | (sh <any_Cx_sh_sh_l_ax>)))) (([(<any_vowel_noSlide> r)] | [(r <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_r> r)] | [(r <any_Cx_sh_l_r>)]) sil))
Considering guard sh with value 1.6 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 105
Considering guard sh with value 0.8 for ae ...
Considering guard zh with value 0.8 for ae ...
candidateGuards = map[sh:true zh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 0.8 for ae ...
Considering guard sh with value 0.8 for ae ...
candidateGuards = map[sh:true zh:true]
Picking guard, sh

Considering guard sh with value 1.6 for n ...
Considering guard zh with value 1.6 for n ...
candidateGuards = map[sh:true zh:true]
Picking guard, sh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for axl ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 2.8 for axm ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


Considering guard zh with value 0.8 for ae ...
Considering guard sh with value 0.8 for ae ...
candidateGuards = map[sh:true zh:true]
Picking guard, zh

Considering guard sh with value 1.6 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 125 public <animal> = (((sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]) | (sil p (sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]))) ((([(<any_Vx_zh_p_z_ae_noSlide> zh)] | [(zh <any_Vx_zh_p_z_ae_noSlide>)]) ([(<any_Cx_zh_p_z_n> zh)] | [(zh <any_Cx_zh_p_z_n>)])) (ae | ((<any_Vx_zh_p_z_ae_noSlide> zh) | (zh <any_Vx_zh_p_z_ae_noSlide>)))) (([(<any_Cx_sh_zh_n> sh)] | [(sh <any_Cx_sh_zh_n>)]) (n | ((<any_Cx_sh_zh_n> sh) | (sh <any_Cx_sh_zh_n>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_m_n> sh)] | [(sh <any_Cx_sh_sh_m_n>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_sh_sh_m_ax> sh)] | [(sh <any_Cx_sh_sh_m_ax>)]) (m | ((<any_Cx_sh_sh_m_ax> sh) | (sh <any_Cx_sh_sh_m_ax>)))) (([(<any_Cx_sh_sh_ax_m> sh)] | [(sh <any_Cx_sh_sh_ax_m>)]) (ax | ((<any_Cx_sh_sh_ax_l_m> sh) | (sh <any_Cx_sh_sh_ax_l_m>)))) (([(<any_Cx_sh_sh_l_ax> sh)] | [(sh <any_Cx_sh_sh_l_ax>)]) (l | ((<any_Cx_sh_sh_l_ax> sh) | (sh <any_Cx_sh_sh_l_ax>)))) (([(<any_vowel_noSlide> r)] | [(r <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_r> r)] | [(r <any_Cx_sh_l_r>)]) sil))
Running scan for frate = 105
Running scan for frate = 125
Considering guard sh with value 0.8 for ae ...
Considering guard zh with value 0.8 for ae ...
candidateGuards = map[sh:true zh:true]
Picking guard, sh

Considering guard sh with value 1.6 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 0.8 for ae ...
Considering guard zh with value 0.8 for ae ...
candidateGuards = map[sh:true zh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 2.8 for axm ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard sh with value 1.6 for axl ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 105 public <animal> = (((sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]) | (sil p (sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]))) ((([(<any_Vx_zh_p_z_ae_noSlide> zh)] | [(zh <any_Vx_zh_p_z_ae_noSlide>)]) ([(<any_Cx_zh_p_z_n> zh)] | [(zh <any_Cx_zh_p_z_n>)])) (ae | ((<any_Vx_zh_p_z_ae_noSlide> zh) | (zh <any_Vx_zh_p_z_ae_noSlide>)))) (([(<any_Cx_sh_zh_n> sh)] | [(sh <any_Cx_sh_zh_n>)]) (n | ((<any_Cx_sh_zh_n> sh) | (sh <any_Cx_sh_zh_n>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_m_n> sh)] | [(sh <any_Cx_sh_sh_m_n>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)]) (m | ((<any_Cx_sh_sh_m_axl> sh) | (sh <any_Cx_sh_sh_m_axl>)))) (([(<any_Cx_sh_sh_axl_m> sh)] | [(sh <any_Cx_sh_sh_axl_m>)]) (axl | ((<any_Cx_sh_sh_axl_m> sh) | (sh <any_Cx_sh_sh_axl_m>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_sh_axl_thr> thr)] | [(thr <any_Cx_sh_axl_thr>)]) sil))
Running scan for frate = 91
Considering guard zh with value 0.8 for ae ...
Considering guard sh with value 0.8 for ae ...
candidateGuards = map[sh:true zh:true]
Picking guard, zh

frate, target rule = 105 public <animal> = (((sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]) | (sil p (sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]))) ((([(<any_Vx_sh_p_z_ae_noSlide> sh)] | [(sh <any_Vx_sh_p_z_ae_noSlide>)]) ([(<any_Cx_sh_p_z_n> sh)] | [(sh <any_Cx_sh_p_z_n>)])) (ae | ((<any_Vx_sh_p_z_ae_noSlide> sh) | (sh <any_Vx_sh_p_z_ae_noSlide>)))) (([(<any_Cx_sh_sh_n_axm> sh)] | [(sh <any_Cx_sh_sh_n_axm>)]) (n | ((<any_Cx_sh_sh_n_axm> sh) | (sh <any_Cx_sh_sh_n_axm>)))) (([(<any_Cx_ch_sh_axm_ax_n> ch)] | [(ch <any_Cx_ch_sh_axm_ax_n>)]) (axm | ((<any_Cx_ch_sh_axm_ax_n> ch) | (ch <any_Cx_ch_sh_axm_ax_n>)))) (([(<any_Cx_sh_ch_ax_axm> sh)] | [(sh <any_Cx_sh_ch_ax_axm>)]) (ax | ((<any_Cx_sh_ch_ax_l_axm> sh) | (sh <any_Cx_sh_ch_ax_l_axm>)))) (([(<any_Cx_sh_sh_l_ax> sh)] | [(sh <any_Cx_sh_sh_l_ax>)]) (l | ((<any_Cx_sh_sh_l_ax> sh) | (sh <any_Cx_sh_sh_l_ax>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_f> f)] | [(f <any_Cx_sh_l_f>)]) sil))
Considering guard sh with value 1.6 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 91
Considering guard sh with value 1.6 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 0.8 for ae ...
Considering guard sh with value 0.8 for ae ...
candidateGuards = map[sh:true zh:true]
Picking guard, sh

Considering guard sh with value 1.6 for axl ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 2.8 for axm ...
candidateGuards = map[ch:true]
Picking guard, ch


Considering guard sh with value 3.2 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 91 public <animal> = (((sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]) | (sil p (sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]))) ((([(<any_Vx_zh_p_z_ae_noSlide> zh)] | [(zh <any_Vx_zh_p_z_ae_noSlide>)]) ([(<any_Cx_zh_p_z_n> zh)] | [(zh <any_Cx_zh_p_z_n>)])) (ae | ((<any_Vx_zh_p_z_ae_noSlide> zh) | (zh <any_Vx_zh_p_z_ae_noSlide>)))) (([(<any_Cx_sh_zh_n> sh)] | [(sh <any_Cx_sh_zh_n>)]) (n | ((<any_Cx_sh_zh_n> sh) | (sh <any_Cx_sh_zh_n>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_m_n> sh)] | [(sh <any_Cx_sh_sh_m_n>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)]) (m | ((<any_Cx_sh_sh_m_axl> sh) | (sh <any_Cx_sh_sh_m_axl>)))) (([(<any_Cx_sh_sh_axl_m> sh)] | [(sh <any_Cx_sh_sh_axl_m>)]) (axl | ((<any_Cx_sh_sh_axl_m> sh) | (sh <any_Cx_sh_sh_axl_m>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_sh_axl_p> p)] | [(p <any_Cx_sh_axl_p>)]) sil))
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 80
Considering guard zh with value 0.8 for ae ...
Considering guard sh with value 0.8 for ae ...
candidateGuards = map[sh:true zh:true]
Picking guard, sh

Considering guard sh with value 1.6 for n ...
candidateGuards = map[sh:true]
Picking guard, sh


Considering guard sh with value 1.6 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 91 public <animal> = (((sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]) | (sil p (sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]))) ((([(<any_Vx_sh_p_z_ae_noSlide> sh)] | [(sh <any_Vx_sh_p_z_ae_noSlide>)]) ([(<any_Cx_sh_p_z_n> sh)] | [(sh <any_Cx_sh_p_z_n>)])) (ae | ((<any_Vx_sh_p_z_ae_noSlide> sh) | (sh <any_Vx_sh_p_z_ae_noSlide>)))) (([(<any_Cx_sh_sh_n_axm> sh)] | [(sh <any_Cx_sh_sh_n_axm>)]) (n | ((<any_Cx_sh_sh_n_axm> sh) | (sh <any_Cx_sh_sh_n_axm>)))) (([(<any_Cx_ch_sh_axm_ax_n> ch)] | [(ch <any_Cx_ch_sh_axm_ax_n>)]) (axm | ((<any_Cx_ch_sh_axm_ax_n> ch) | (ch <any_Cx_ch_sh_axm_ax_n>)))) (([(<any_Cx_sh_ch_ax_axm> sh)] | [(sh <any_Cx_sh_ch_ax_axm>)]) (ax | ((<any_Cx_sh_ch_ax_l_axm> sh) | (sh <any_Cx_sh_ch_ax_l_axm>)))) (([(<any_Cx_sh_sh_l_ax> sh)] | [(sh <any_Cx_sh_sh_l_ax>)]) (l | ((<any_Cx_sh_sh_l_ax> sh) | (sh <any_Cx_sh_sh_l_ax>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_d> d)] | [(d <any_Cx_sh_l_d>)]) sil))
Running scan for frate = 80
Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 0.8 for ae ...
Considering guard zh with value 0.8 for ae ...
candidateGuards = map[sh:true zh:true]
Picking guard, sh

Considering guard sh with value 1.6 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 2.8 for axm ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard sh with value 3.2 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 80 public <animal> = (((sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]) | (sil p (sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]))) ((([(<any_Vx_sh_p_z_ae_noSlide> sh)] | [(sh <any_Vx_sh_p_z_ae_noSlide>)]) ([(<any_Cx_sh_p_z_n> sh)] | [(sh <any_Cx_sh_p_z_n>)])) (ae | ((<any_Vx_sh_p_z_ae_noSlide> sh) | (sh <any_Vx_sh_p_z_ae_noSlide>)))) (([(<any_Cx_sh_sh_n_axm> sh)] | [(sh <any_Cx_sh_sh_n_axm>)]) (n | ((<any_Cx_sh_sh_n_axm> sh) | (sh <any_Cx_sh_sh_n_axm>)))) (([(<any_Cx_ch_sh_axm_ax_n> ch)] | [(ch <any_Cx_ch_sh_axm_ax_n>)]) (axm | ((<any_Cx_ch_sh_axm_ax_n> ch) | (ch <any_Cx_ch_sh_axm_ax_n>)))) (([(<any_Cx_sh_ch_ax_axm> sh)] | [(sh <any_Cx_sh_ch_ax_axm>)]) (ax | ((<any_Cx_sh_ch_ax_l_axm> sh) | (sh <any_Cx_sh_ch_ax_l_axm>)))) (([(<any_Cx_sh_sh_l_ax> sh)] | [(sh <any_Cx_sh_sh_l_ax>)]) (l | ((<any_Cx_sh_sh_l_ax> sh) | (sh <any_Cx_sh_sh_l_ax>)))) (([(<any_vowel_noSlide> r)] | [(r <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_r> r)] | [(r <any_Cx_sh_l_r>)]) sil))
frate, target rule = 80 public <animal> = (((sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]) | (sil p (sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]))) ((([(<any_Vx_zh_p_z_ae_noSlide> zh)] | [(zh <any_Vx_zh_p_z_ae_noSlide>)]) ([(<any_Cx_zh_p_z_n> zh)] | [(zh <any_Cx_zh_p_z_n>)])) (ae | ((<any_Vx_zh_p_z_ae_noSlide> zh) | (zh <any_Vx_zh_p_z_ae_noSlide>)))) (([(<any_Cx_zh_zh_n_ax> zh)] | [(zh <any_Cx_zh_zh_n_ax>)]) (n | ((<any_Cx_zh_zh_n_ax> zh) | (zh <any_Cx_zh_zh_n_ax>)))) (([(<any_Cx_sh_zh_ax_m_n> sh)] | [(sh <any_Cx_sh_zh_ax_m_n>)]) (ax | ((<any_Cx_sh_zh_ax_m_n> sh) | (sh <any_Cx_sh_zh_ax_m_n>)))) (([(<any_Cx_sh_sh_m_ax> sh)] | [(sh <any_Cx_sh_sh_m_ax>)]) (m | ((<any_Cx_sh_sh_m_axl_ax> sh) | (sh <any_Cx_sh_sh_m_axl_ax>)))) (([(<any_Cx_sh_sh_axl_m> sh)] | [(sh <any_Cx_sh_sh_axl_m>)]) (axl | ((<any_Cx_sh_sh_axl_m> sh) | (sh <any_Cx_sh_sh_axl_m>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_sh_axl_f> f)] | [(f <any_Cx_sh_axl_f>)]) sil))
Running scan for frate = 72
Running scan for frate = 72
Considering guard zh with value 0.8 for ae ...
Considering guard sh with value 0.8 for ae ...
candidateGuards = map[sh:true zh:true]
Picking guard, zh

Considering guard zh with value 1.6 for n ...
Considering guard sh with value 1.6 for n ...
candidateGuards = map[sh:true zh:true]
Picking guard, zh

Considering guard sh with value 1.6 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for axl ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh


Considering guard sh with value 1.6 for axl ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 80 public <animal> = (((sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]) | (sil p (sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]))) ((([(<any_Vx_sh_p_z_ae_noSlide> sh)] | [(sh <any_Vx_sh_p_z_ae_noSlide>)]) ([(<any_Cx_sh_p_z_n> sh)] | [(sh <any_Cx_sh_p_z_n>)])) (ae | ((<any_Vx_sh_p_z_ae_noSlide> sh) | (sh <any_Vx_sh_p_z_ae_noSlide>)))) (([(<any_Cx_sh_sh_n> sh)] | [(sh <any_Cx_sh_sh_n>)]) (n | ((<any_Cx_sh_sh_n> sh) | (sh <any_Cx_sh_sh_n>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_m_n> sh)] | [(sh <any_Cx_sh_sh_m_n>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)]) (m | ((<any_Cx_sh_sh_m_axl> sh) | (sh <any_Cx_sh_sh_m_axl>)))) (([(<any_Cx_sh_sh_axl_m> sh)] | [(sh <any_Cx_sh_sh_axl_m>)]) (axl | ((<any_Cx_sh_sh_axl_m> sh) | (sh <any_Cx_sh_sh_axl_m>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_sh_axl_thr> thr)] | [(thr <any_Cx_sh_axl_thr>)]) sil))
Running scan for frate = 72
Considering guard sh with value 0.8 for ae ...
Considering guard zh with value 0.8 for ae ...
candidateGuards = map[sh:true zh:true]
Picking guard, sh

Considering guard sh with value 1.6 for n ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 72 public <animal> = (((sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]) | (sil p (sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]))) ((([(<any_Vx_zh_p_z_ae_noSlide> zh)] | [(zh <any_Vx_zh_p_z_ae_noSlide>)]) ([(<any_Cx_zh_p_z_n> zh)] | [(zh <any_Cx_zh_p_z_n>)])) (ae | ((<any_Vx_zh_p_z_ae_noSlide> zh) | (zh <any_Vx_zh_p_z_ae_noSlide>)))) (([(<any_Cx_zh_zh_n_ax> zh)] | [(zh <any_Cx_zh_zh_n_ax>)]) (n | ((<any_Cx_zh_zh_n_ax> zh) | (zh <any_Cx_zh_zh_n_ax>)))) (([(<any_Cx_sh_zh_ax_m_n> sh)] | [(sh <any_Cx_sh_zh_ax_m_n>)]) (ax | ((<any_Cx_sh_zh_ax_m_n> sh) | (sh <any_Cx_sh_zh_ax_m_n>)))) (([(<any_Cx_sh_sh_m_ax> sh)] | [(sh <any_Cx_sh_sh_m_ax>)]) (m | ((<any_Cx_sh_sh_m_axl_ax> sh) | (sh <any_Cx_sh_sh_m_axl_ax>)))) (([(<any_Cx_sh_sh_axl_m> sh)] | [(sh <any_Cx_sh_sh_axl_m>)]) (axl | ((<any_Cx_sh_sh_axl_m> sh) | (sh <any_Cx_sh_sh_axl_m>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_sh_axl_ng> ng)] | [(ng <any_Cx_sh_axl_ng>)]) sil))
Considering guard sh with value 1.6 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 0.8 for ae ...
Considering guard zh with value 0.8 for ae ...
candidateGuards = map[sh:true zh:true]
Picking guard, zh

Considering guard sh with value 1.6 for axl ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 2.8 for axm ...
candidateGuards = map[ch:true]
Picking guard, ch




frate, target rule = 105 public <animal> = (((sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]) | (sil p (sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]))) ((([(<any_Vx_sh_p_z_ae_noSlide> sh)] | [(sh <any_Vx_sh_p_z_ae_noSlide>)]) ([(<any_Cx_sh_p_z_n> sh)] | [(sh <any_Cx_sh_p_z_n>)])) (ae | ((<any_Vx_sh_p_z_ae_noSlide> sh) | (sh <any_Vx_sh_p_z_ae_noSlide>)))) (([(<any_Cx_sh_sh_n_ax> sh)] | [(sh <any_Cx_sh_sh_n_ax>)]) (n | ((<any_Cx_sh_sh_n_ax> sh) | (sh <any_Cx_sh_sh_n_ax>)))) (([(<any_Cx_sh_sh_ax_m_n> sh)] | [(sh <any_Cx_sh_sh_ax_m_n>)]) (ax | ((<any_Cx_sh_sh_ax_m_n> sh) | (sh <any_Cx_sh_sh_ax_m_n>)))) (([(<any_Cx_sh_sh_m_ax_ax> sh)] | [(sh <any_Cx_sh_sh_m_ax_ax>)]) (m | ((<any_Cx_sh_sh_m_ax_ax> sh) | (sh <any_Cx_sh_sh_m_ax_ax>)))) (([(<any_Cx_sh_sh_ax_m> sh)] | [(sh <any_Cx_sh_sh_ax_m>)]) (ax | ((<any_Cx_sh_sh_ax_l_m> sh) | (sh <any_Cx_sh_sh_ax_l_m>)))) (([(<any_Cx_sh_sh_l_ax> sh)] | [(sh <any_Cx_sh_sh_l_ax>)]) (l | ((<any_Cx_sh_sh_l_ax> sh) | (sh <any_Cx_sh_sh_l_ax>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_b> b)] | [(b <any_Cx_sh_l_b>)]) sil))
Running scan for frate = 91
frate, target rule = 72 public <animal> = (((sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]) | (sil p (sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]))) ((([(<any_Vx_sh_p_z_ae_noSlide> sh)] | [(sh <any_Vx_sh_p_z_ae_noSlide>)]) ([(<any_Cx_sh_p_z_n> sh)] | [(sh <any_Cx_sh_p_z_n>)])) (ae | ((<any_Vx_sh_p_z_ae_noSlide> sh) | (sh <any_Vx_sh_p_z_ae_noSlide>)))) (([(<any_Cx_sh_sh_n> sh)] | [(sh <any_Cx_sh_sh_n>)]) (n | ((<any_Cx_sh_sh_n> sh) | (sh <any_Cx_sh_sh_n>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_m_n> sh)] | [(sh <any_Cx_sh_sh_m_n>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)]) (m | ((<any_Cx_sh_sh_m_axl> sh) | (sh <any_Cx_sh_sh_m_axl>)))) (([(<any_Cx_sh_sh_axl_m> sh)] | [(sh <any_Cx_sh_sh_axl_m>)]) (axl | ((<any_Cx_sh_sh_axl_m> sh) | (sh <any_Cx_sh_sh_axl_m>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_sh_axl_n> n)] | [(n <any_Cx_sh_axl_n>)]) sil))
Considering guard zh with value 0.8 for ae ...
Considering guard sh with value 0.8 for ae ...
candidateGuards = map[sh:true zh:true]
Picking guard, zh

Considering guard zh with value 1.6 for n ...
Considering guard sh with value 1.6 for n ...
candidateGuards = map[sh:true zh:true]
Picking guard, zh

Considering guard sh with value 1.6 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 91 public <animal> = (((sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]) | (sil p (sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]))) ((([(<any_Vx_zh_p_z_ae_noSlide> zh)] | [(zh <any_Vx_zh_p_z_ae_noSlide>)]) ([(<any_Cx_zh_p_z_n> zh)] | [(zh <any_Cx_zh_p_z_n>)])) (ae | ((<any_Vx_zh_p_z_ae_noSlide> zh) | (zh <any_Vx_zh_p_z_ae_noSlide>)))) (([(<any_Cx_zh_zh_n_ax> zh)] | [(zh <any_Cx_zh_zh_n_ax>)]) (n | ((<any_Cx_zh_zh_n_ax> zh) | (zh <any_Cx_zh_zh_n_ax>)))) (([(<any_Cx_sh_zh_ax_m_n> sh)] | [(sh <any_Cx_sh_zh_ax_m_n>)]) (ax | ((<any_Cx_sh_zh_ax_m_n> sh) | (sh <any_Cx_sh_zh_ax_m_n>)))) (([(<any_Cx_sh_sh_m_ax_ax> sh)] | [(sh <any_Cx_sh_sh_m_ax_ax>)]) (m | ((<any_Cx_sh_sh_m_ax_ax> sh) | (sh <any_Cx_sh_sh_m_ax_ax>)))) (([(<any_Cx_sh_sh_ax_m> sh)] | [(sh <any_Cx_sh_sh_ax_m>)]) (ax | ((<any_Cx_sh_sh_ax_l_m> sh) | (sh <any_Cx_sh_sh_ax_l_m>)))) (([(<any_Cx_sh_sh_l_ax> sh)] | [(sh <any_Cx_sh_sh_l_ax>)]) (l | ((<any_Cx_sh_sh_l_ax> sh) | (sh <any_Cx_sh_sh_l_ax>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_d> d)] | [(d <any_Cx_sh_l_d>)]) sil))
Running scan for frate = 80
Considering guard zh with value 0.8 for ae ...
Considering guard sh with value 0.8 for ae ...
candidateGuards = map[sh:true zh:true]
Picking guard, zh


frate, target rule = 72 public <animal> = (((sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]) | (sil p (sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]))) ((([(<any_Vx_zh_p_z_ae_noSlide> zh)] | [(zh <any_Vx_zh_p_z_ae_noSlide>)]) ([(<any_Cx_zh_p_z_n> zh)] | [(zh <any_Cx_zh_p_z_n>)])) (ae | ((<any_Vx_zh_p_z_ae_noSlide> zh) | (zh <any_Vx_zh_p_z_ae_noSlide>)))) (([(<any_Cx_sh_zh_n_axm> sh)] | [(sh <any_Cx_sh_zh_n_axm>)]) (n | ((<any_Cx_sh_zh_n_axm> sh) | (sh <any_Cx_sh_zh_n_axm>)))) (([(<any_Cx_ch_sh_axm_ax_n> ch)] | [(ch <any_Cx_ch_sh_axm_ax_n>)]) (axm | ((<any_Cx_ch_sh_axm_ax_n> ch) | (ch <any_Cx_ch_sh_axm_ax_n>)))) (([(<any_Cx_sh_ch_ax_axm> sh)] | [(sh <any_Cx_sh_ch_ax_axm>)]) (ax | ((<any_Cx_sh_ch_ax_l_axm> sh) | (sh <any_Cx_sh_ch_ax_l_axm>)))) (([(<any_Cx_sh_sh_l_ax> sh)] | [(sh <any_Cx_sh_sh_l_ax>)]) (l | ((<any_Cx_sh_sh_l_ax> sh) | (sh <any_Cx_sh_sh_l_ax>)))) (([(<any_vowel_noSlide> r)] | [(r <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_r> r)] | [(r <any_Cx_sh_l_r>)]) sil))
Considering guard zh with value 1.6 for n ...
Considering guard sh with value 1.6 for n ...
candidateGuards = map[sh:true zh:true]
Picking guard, zh

Considering guard sh with value 1.6 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 80 public <animal> = (((sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]) | (sil p (sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]))) ((([(<any_Vx_zh_p_z_ae_noSlide> zh)] | [(zh <any_Vx_zh_p_z_ae_noSlide>)]) ([(<any_Cx_zh_p_z_n> zh)] | [(zh <any_Cx_zh_p_z_n>)])) (ae | ((<any_Vx_zh_p_z_ae_noSlide> zh) | (zh <any_Vx_zh_p_z_ae_noSlide>)))) (([(<any_Cx_zh_zh_n_ax> zh)] | [(zh <any_Cx_zh_zh_n_ax>)]) (n | ((<any_Cx_zh_zh_n_ax> zh) | (zh <any_Cx_zh_zh_n_ax>)))) (([(<any_Cx_sh_zh_ax_m_n> sh)] | [(sh <any_Cx_sh_zh_ax_m_n>)]) (ax | ((<any_Cx_sh_zh_ax_m_n> sh) | (sh <any_Cx_sh_zh_ax_m_n>)))) (([(<any_Cx_sh_sh_m_ax_ax> sh)] | [(sh <any_Cx_sh_sh_m_ax_ax>)]) (m | ((<any_Cx_sh_sh_m_ax_ax> sh) | (sh <any_Cx_sh_sh_m_ax_ax>)))) (([(<any_Cx_sh_sh_ax_m> sh)] | [(sh <any_Cx_sh_sh_ax_m>)]) (ax | ((<any_Cx_sh_sh_ax_l_m> sh) | (sh <any_Cx_sh_sh_ax_l_m>)))) (([(<any_Cx_sh_sh_l_ax> sh)] | [(sh <any_Cx_sh_sh_l_ax>)]) (l | ((<any_Cx_sh_sh_l_ax> sh) | (sh <any_Cx_sh_sh_l_ax>)))) (([(<any_vowel_noSlide> w)] | [(w <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_w> w)] | [(w <any_Cx_sh_l_w>)]) sil))
Running scan for frate = 72
Considering guard sh with value 0.8 for ae ...
Considering guard zh with value 0.8 for ae ...
candidateGuards = map[sh:true zh:true]
Picking guard, sh

Considering guard zh with value 1.6 for n ...
Considering guard sh with value 1.6 for n ...
candidateGuards = map[sh:true zh:true]
Picking guard, zh

Considering guard sh with value 1.6 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 72 public <animal> = (((sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]) | (sil p (sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]))) ((([(<any_Vx_sh_p_z_ae_noSlide> sh)] | [(sh <any_Vx_sh_p_z_ae_noSlide>)]) ([(<any_Cx_sh_p_z_n> sh)] | [(sh <any_Cx_sh_p_z_n>)])) (ae | ((<any_Vx_sh_p_z_ae_noSlide> sh) | (sh <any_Vx_sh_p_z_ae_noSlide>)))) (([(<any_Cx_zh_sh_n_ax> zh)] | [(zh <any_Cx_zh_sh_n_ax>)]) (n | ((<any_Cx_zh_sh_n_ax> zh) | (zh <any_Cx_zh_sh_n_ax>)))) (([(<any_Cx_sh_zh_ax_m_n> sh)] | [(sh <any_Cx_sh_zh_ax_m_n>)]) (ax | ((<any_Cx_sh_zh_ax_m_n> sh) | (sh <any_Cx_sh_zh_ax_m_n>)))) (([(<any_Cx_sh_sh_m_ax_ax> sh)] | [(sh <any_Cx_sh_sh_m_ax_ax>)]) (m | ((<any_Cx_sh_sh_m_ax_ax> sh) | (sh <any_Cx_sh_sh_m_ax_ax>)))) (([(<any_Cx_sh_sh_ax_m> sh)] | [(sh <any_Cx_sh_sh_ax_m>)]) (ax | ((<any_Cx_sh_sh_ax_l_m> sh) | (sh <any_Cx_sh_sh_ax_l_m>)))) (([(<any_Cx_sh_sh_l_ax> sh)] | [(sh <any_Cx_sh_sh_l_ax>)]) (l | ((<any_Cx_sh_sh_l_ax> sh) | (sh <any_Cx_sh_sh_l_ax>)))) (([(<any_vowel_noSlide> w)] | [(w <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_w> w)] | [(w <any_Cx_sh_l_w>)]) sil))
Considering guard sh with value 3.2 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 105 public <animal> = (((sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]) | (sil p (sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]))) ((([(<any_Vx_sh_p_z_ae_noSlide> sh)] | [(sh <any_Vx_sh_p_z_ae_noSlide>)]) ([(<any_Cx_sh_p_z_n> sh)] | [(sh <any_Cx_sh_p_z_n>)])) (ae | ((<any_Vx_sh_p_z_ae_noSlide> sh) | (sh <any_Vx_sh_p_z_ae_noSlide>)))) (([(<any_Cx_sh_sh_n> sh)] | [(sh <any_Cx_sh_sh_n>)]) (n | ((<any_Cx_sh_sh_n> sh) | (sh <any_Cx_sh_sh_n>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_m_n> sh)] | [(sh <any_Cx_sh_sh_m_n>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_sh_sh_m_ax> sh)] | [(sh <any_Cx_sh_sh_m_ax>)]) (m | ((<any_Cx_sh_sh_m_ax> sh) | (sh <any_Cx_sh_sh_m_ax>)))) (([(<any_Cx_sh_sh_ax_m> sh)] | [(sh <any_Cx_sh_sh_ax_m>)]) (ax | ((<any_Cx_sh_sh_ax_l_m> sh) | (sh <any_Cx_sh_sh_ax_l_m>)))) (([(<any_Cx_sh_sh_l_ax> sh)] | [(sh <any_Cx_sh_sh_l_ax>)]) (l | ((<any_Cx_sh_sh_l_ax> sh) | (sh <any_Cx_sh_sh_l_ax>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_d> d)] | [(d <any_Cx_sh_l_d>)]) sil))
Running scan for frate = 91
Considering guard zh with value 0.8 for ae ...
Considering guard sh with value 0.8 for ae ...
candidateGuards = map[sh:true zh:true]
Picking guard, zh

Considering guard sh with value 1.6 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 91 public <animal> = (((sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]) | (sil p (sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]))) ((([(<any_Vx_zh_p_z_ae_noSlide> zh)] | [(zh <any_Vx_zh_p_z_ae_noSlide>)]) ([(<any_Cx_zh_p_z_n> zh)] | [(zh <any_Cx_zh_p_z_n>)])) (ae | ((<any_Vx_zh_p_z_ae_noSlide> zh) | (zh <any_Vx_zh_p_z_ae_noSlide>)))) (([(<any_Cx_sh_zh_n> sh)] | [(sh <any_Cx_sh_zh_n>)]) (n | ((<any_Cx_sh_zh_n> sh) | (sh <any_Cx_sh_zh_n>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_m_n> sh)] | [(sh <any_Cx_sh_sh_m_n>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_sh_sh_m_ax> sh)] | [(sh <any_Cx_sh_sh_m_ax>)]) (m | ((<any_Cx_sh_sh_m_ax> sh) | (sh <any_Cx_sh_sh_m_ax>)))) (([(<any_Cx_sh_sh_ax_m> sh)] | [(sh <any_Cx_sh_sh_ax_m>)]) (ax | ((<any_Cx_sh_sh_ax_l_m> sh) | (sh <any_Cx_sh_sh_ax_l_m>)))) (([(<any_Cx_sh_sh_l_ax> sh)] | [(sh <any_Cx_sh_sh_l_ax>)]) (l | ((<any_Cx_sh_sh_l_ax> sh) | (sh <any_Cx_sh_sh_l_ax>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_thr> thr)] | [(thr <any_Cx_sh_l_thr>)]) sil))
Running scan for frate = 80
Considering guard zh with value 0.8 for ae ...
Considering guard sh with value 0.8 for ae ...
candidateGuards = map[sh:true zh:true]
Picking guard, zh

Considering guard sh with value 1.6 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 80 public <animal> = (((sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]) | (sil p (sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]))) ((([(<any_Vx_zh_p_z_ae_noSlide> zh)] | [(zh <any_Vx_zh_p_z_ae_noSlide>)]) ([(<any_Cx_zh_p_z_n> zh)] | [(zh <any_Cx_zh_p_z_n>)])) (ae | ((<any_Vx_zh_p_z_ae_noSlide> zh) | (zh <any_Vx_zh_p_z_ae_noSlide>)))) (([(<any_Cx_sh_zh_n> sh)] | [(sh <any_Cx_sh_zh_n>)]) (n | ((<any_Cx_sh_zh_n> sh) | (sh <any_Cx_sh_zh_n>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_m_n> sh)] | [(sh <any_Cx_sh_sh_m_n>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_sh_sh_m_ax> sh)] | [(sh <any_Cx_sh_sh_m_ax>)]) (m | ((<any_Cx_sh_sh_m_ax> sh) | (sh <any_Cx_sh_sh_m_ax>)))) (([(<any_Cx_sh_sh_ax_m> sh)] | [(sh <any_Cx_sh_sh_ax_m>)]) (ax | ((<any_Cx_sh_sh_ax_l_m> sh) | (sh <any_Cx_sh_sh_ax_l_m>)))) (([(<any_Cx_sh_sh_l_ax> sh)] | [(sh <any_Cx_sh_sh_l_ax>)]) (l | ((<any_Cx_sh_sh_l_ax> sh) | (sh <any_Cx_sh_sh_l_ax>)))) (([(<any_vowel_noSlide> w)] | [(w <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_w> w)] | [(w <any_Cx_sh_l_w>)]) sil))
Running scan for frate = 72
Considering guard zh with value 0.8 for ae ...
Considering guard sh with value 0.8 for ae ...
candidateGuards = map[sh:true zh:true]
Picking guard, sh

Considering guard sh with value 1.6 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 72 public <animal> = (((sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]) | (sil p (sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]))) ((([(<any_Vx_sh_p_z_ae_noSlide> sh)] | [(sh <any_Vx_sh_p_z_ae_noSlide>)]) ([(<any_Cx_sh_p_z_n> sh)] | [(sh <any_Cx_sh_p_z_n>)])) (ae | ((<any_Vx_sh_p_z_ae_noSlide> sh) | (sh <any_Vx_sh_p_z_ae_noSlide>)))) (([(<any_Cx_sh_sh_n> sh)] | [(sh <any_Cx_sh_sh_n>)]) (n | ((<any_Cx_sh_sh_n> sh) | (sh <any_Cx_sh_sh_n>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_m_n> sh)] | [(sh <any_Cx_sh_sh_m_n>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_sh_sh_m_ax> sh)] | [(sh <any_Cx_sh_sh_m_ax>)]) (m | ((<any_Cx_sh_sh_m_ax> sh) | (sh <any_Cx_sh_sh_m_ax>)))) (([(<any_Cx_sh_sh_ax_m> sh)] | [(sh <any_Cx_sh_sh_ax_m>)]) (ax | ((<any_Cx_sh_sh_ax_l_m> sh) | (sh <any_Cx_sh_sh_ax_l_m>)))) (([(<any_Cx_sh_sh_l_ax> sh)] | [(sh <any_Cx_sh_sh_l_ax>)]) (l | ((<any_Cx_sh_sh_l_ax> sh) | (sh <any_Cx_sh_sh_l_ax>)))) (([(<any_vowel_noSlide> w)] | [(w <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_w> w)] | [(w <any_Cx_sh_l_w>)]) sil))
frate, target rule = 125 public <animal> = (((sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]) | (sil p (sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]))) ((([(<any_Vx_sh_p_z_ae_noSlide> sh)] | [(sh <any_Vx_sh_p_z_ae_noSlide>)]) ([(<any_Cx_sh_p_z_n> sh)] | [(sh <any_Cx_sh_p_z_n>)])) (ae | ((<any_Vx_sh_p_z_ae_noSlide> sh) | (sh <any_Vx_sh_p_z_ae_noSlide>)))) (([(<any_Cx_sh_sh_n_axm> sh)] | [(sh <any_Cx_sh_sh_n_axm>)]) (n | ((<any_Cx_sh_sh_n_axm> sh) | (sh <any_Cx_sh_sh_n_axm>)))) (([(<any_Cx_ch_sh_axm_n> ch)] | [(ch <any_Cx_ch_sh_axm_n>)]) (axm | ((<any_Cx_ch_sh_axm_axl_n> ch) | (ch <any_Cx_ch_sh_axm_axl_n>)))) (([(<any_Cx_sh_ch_axl_axm> sh)] | [(sh <any_Cx_sh_ch_axl_axm>)]) (axl | ((<any_Cx_sh_ch_axl_axm> sh) | (sh <any_Cx_sh_ch_axl_axm>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_sh_axl_n> n)] | [(n <any_Cx_sh_axl_n>)]) sil))
Running scan for frate = 105
Considering guard zh with value 0.8 for ae ...
Considering guard sh with value 0.8 for ae ...
candidateGuards = map[sh:true zh:true]
Picking guard, zh

Considering guard sh with value 1.6 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 2.8 for axm ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard sh with value 1.6 for axl ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 105 public <animal> = (((sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]) | (sil p (sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]))) ((([(<any_Vx_zh_p_z_ae_noSlide> zh)] | [(zh <any_Vx_zh_p_z_ae_noSlide>)]) ([(<any_Cx_zh_p_z_n> zh)] | [(zh <any_Cx_zh_p_z_n>)])) (ae | ((<any_Vx_zh_p_z_ae_noSlide> zh) | (zh <any_Vx_zh_p_z_ae_noSlide>)))) (([(<any_Cx_sh_zh_n_axm> sh)] | [(sh <any_Cx_sh_zh_n_axm>)]) (n | ((<any_Cx_sh_zh_n_axm> sh) | (sh <any_Cx_sh_zh_n_axm>)))) (([(<any_Cx_ch_sh_axm_n> ch)] | [(ch <any_Cx_ch_sh_axm_n>)]) (axm | ((<any_Cx_ch_sh_axm_axl_n> ch) | (ch <any_Cx_ch_sh_axm_axl_n>)))) (([(<any_Cx_sh_ch_axl_axm> sh)] | [(sh <any_Cx_sh_ch_axl_axm>)]) (axl | ((<any_Cx_sh_ch_axl_axm> sh) | (sh <any_Cx_sh_ch_axl_axm>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_sh_axl_hh> hh)] | [(hh <any_Cx_sh_axl_hh>)]) sil))
Running scan for frate = 91
Considering guard zh with value 0.8 for ae ...
Considering guard sh with value 0.8 for ae ...
candidateGuards = map[sh:true zh:true]
Picking guard, zh

Considering guard sh with value 1.6 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 2.8 for axm ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard sh with value 1.6 for axl ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 91 public <animal> = (((sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]) | (sil p (sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]))) ((([(<any_Vx_zh_p_z_ae_noSlide> zh)] | [(zh <any_Vx_zh_p_z_ae_noSlide>)]) ([(<any_Cx_zh_p_z_n> zh)] | [(zh <any_Cx_zh_p_z_n>)])) (ae | ((<any_Vx_zh_p_z_ae_noSlide> zh) | (zh <any_Vx_zh_p_z_ae_noSlide>)))) (([(<any_Cx_sh_zh_n_axm> sh)] | [(sh <any_Cx_sh_zh_n_axm>)]) (n | ((<any_Cx_sh_zh_n_axm> sh) | (sh <any_Cx_sh_zh_n_axm>)))) (([(<any_Cx_ch_sh_axm_n> ch)] | [(ch <any_Cx_ch_sh_axm_n>)]) (axm | ((<any_Cx_ch_sh_axm_axl_n> ch) | (ch <any_Cx_ch_sh_axm_axl_n>)))) (([(<any_Cx_sh_ch_axl_axm> sh)] | [(sh <any_Cx_sh_ch_axl_axm>)]) (axl | ((<any_Cx_sh_ch_axl_axm> sh) | (sh <any_Cx_sh_ch_axl_axm>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_sh_axl_thr> thr)] | [(thr <any_Cx_sh_axl_thr>)]) sil))
Running scan for frate = 80
Considering guard zh with value 0.8 for ae ...
Considering guard sh with value 0.8 for ae ...
candidateGuards = map[sh:true zh:true]
Picking guard, zh

Considering guard sh with value 1.6 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 2.8 for axm ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard sh with value 1.6 for axl ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 80 public <animal> = (((sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]) | (sil p (sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]))) ((([(<any_Vx_zh_p_z_ae_noSlide> zh)] | [(zh <any_Vx_zh_p_z_ae_noSlide>)]) ([(<any_Cx_zh_p_z_n> zh)] | [(zh <any_Cx_zh_p_z_n>)])) (ae | ((<any_Vx_zh_p_z_ae_noSlide> zh) | (zh <any_Vx_zh_p_z_ae_noSlide>)))) (([(<any_Cx_sh_zh_n_axm> sh)] | [(sh <any_Cx_sh_zh_n_axm>)]) (n | ((<any_Cx_sh_zh_n_axm> sh) | (sh <any_Cx_sh_zh_n_axm>)))) (([(<any_Cx_ch_sh_axm_n> ch)] | [(ch <any_Cx_ch_sh_axm_n>)]) (axm | ((<any_Cx_ch_sh_axm_axl_n> ch) | (ch <any_Cx_ch_sh_axm_axl_n>)))) (([(<any_Cx_sh_ch_axl_axm> sh)] | [(sh <any_Cx_sh_ch_axl_axm>)]) (axl | ((<any_Cx_sh_ch_axl_axm> sh) | (sh <any_Cx_sh_ch_axl_axm>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_sh_axl_p> p)] | [(p <any_Cx_sh_axl_p>)]) sil))
Running scan for frate = 72
Considering guard zh with value 0.8 for ae ...
Considering guard sh with value 0.8 for ae ...
candidateGuards = map[sh:true zh:true]
Picking guard, zh

Considering guard sh with value 1.6 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 2.8 for axm ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard sh with value 1.6 for axl ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 72 public <animal> = (((sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]) | (sil p (sil [((z <any_Vx_ae_z_p_noSlide>) | (<any_Vx_ae_z_p_noSlide> z))] [((z <any_Cx_ae_z_p>) | (<any_Cx_ae_z_p> z))]))) ((([(<any_Vx_zh_p_z_ae_noSlide> zh)] | [(zh <any_Vx_zh_p_z_ae_noSlide>)]) ([(<any_Cx_zh_p_z_n> zh)] | [(zh <any_Cx_zh_p_z_n>)])) (ae | ((<any_Vx_zh_p_z_ae_noSlide> zh) | (zh <any_Vx_zh_p_z_ae_noSlide>)))) (([(<any_Cx_sh_zh_n_axm> sh)] | [(sh <any_Cx_sh_zh_n_axm>)]) (n | ((<any_Cx_sh_zh_n_axm> sh) | (sh <any_Cx_sh_zh_n_axm>)))) (([(<any_Cx_ch_sh_axm_n> ch)] | [(ch <any_Cx_ch_sh_axm_n>)]) (axm | ((<any_Cx_ch_sh_axm_axl_n> ch) | (ch <any_Cx_ch_sh_axm_axl_n>)))) (([(<any_Cx_sh_ch_axl_axm> sh)] | [(sh <any_Cx_sh_ch_axl_axm>)]) (axl | ((<any_Cx_sh_ch_axl_axm> sh) | (sh <any_Cx_sh_ch_axl_axm>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_sh_axl_p> p)] | [(p <any_Cx_sh_axl_p>)]) sil))

results =
{72 [{sil 73 83} {ae 84 99} {n 100 102} {ax 103 106} {m 107 110} {ax 111 113} {l 114 126} {sil 127 162}]}
{80 []}
{91 [{sil 0 14} {ae 15 33} {n 34 37} {ax 38 41} {m 42 47} {ax 48 50} {l 51 67} {sil 68 115}]}
{105 [{sil 0 18} {ae 19 39} {n 40 44} {ax 45 48} {m 49 55} {ax 56 58} {l 59 78} {sil 79 138}]}
{125 [{sil 3 23} {ae 24 48} {n 49 52} {ax 53 59} {m 60 67} {ax 68 70} {l 71 93} {sil 94 162}]}

normalised results =
{72 [{sil 73 83} {ae 117 138} {n 139 139} {ax 143 147} {m 149 153} {ax 154 154} {l 158 175} {sil 176 225}]}
{80 []}
{91 [{sil 0 14} {ae 16 36} {n 37 41} {ax 42 45} {m 46 52} {ax 53 53} {l 56 74} {sil 75 126}]}
{105 [{sil 0 18} {ae 18 37} {n 38 42} {ax 43 46} {m 47 52} {ax 53 53} {l 56 74} {sil 75 131}]}
{125 [{sil 3 23} {ae 19 38} {n 39 42} {ax 42 47} {m 48 54} {ax 54 54} {l 57 74} {sil 75 130}]}

Mapped result =
result 0 =
start: 0 end: 0 phonemeFound: false
start: 1 end: 1 phonemeFound: true
start: 2 end: 2 phonemeFound: true
start: 3 end: 3 phonemeFound: true
start: 4 end: 4 phonemeFound: true
start: 5 end: 5 phonemeFound: true
start: 6 end: 6 phonemeFound: true
start: 7 end: 7 phonemeFound: false
result 1 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 2 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 3 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 4 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false

Rules =
rule 0 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Vx_ae_z_p_noSlide {[{y} {ax} {ih} {uw} {aa} {iy} {oh} {ao} {eh} {uh} {ah}]}}}]} {[{{any_Vx_ae_z_p_noSlide {[{y} {ax} {ih} {uw} {aa} {iy} {oh} {ao} {eh} {uh} {ah}]}}} {z}]}]}} {{[{[{z} {{any_Cx_ae_z_p {[{d} {ch} {g} {l} {hh} {v} {b} {zh} {w} {dh} {m}]}}}]} {[{{any_Cx_ae_z_p {[{d} {ch} {g} {l} {hh} {v} {b} {zh} {w} {dh} {m}]}}} {z}]}]}}]}}
Phoneme rule:
guard: sh phoneme: ae
rule: {[{[{[{{[{{any_Vx_sh_p_z_ae_noSlide {[{ih} {iy} {oh} {uh} {aa} {ax} {y} {ao} {uw} {ah} {eh}]}}} {sh}]}} {{[{sh} {{any_Vx_sh_p_z_ae_noSlide {[{ih} {iy} {oh} {uh} {aa} {ax} {y} {ao} {uw} {ah} {eh}]}}}]}}]} {[{{[{{any_Cx_sh_p_z_n {[{d} {ch} {hh} {b} {dh} {w} {g} {l} {v} {zh} {m}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_p_z_n {[{d} {ch} {hh} {b} {dh} {w} {g} {l} {v} {zh} {m}]}}}]}}]}]} {[{ae} {[{[{{any_Vx_sh_p_z_ae_noSlide {[{ih} {iy} {oh} {uh} {aa} {ax} {y} {ao} {uw} {ah} {eh}]}}} {sh}]} {[{sh} {{any_Vx_sh_p_z_ae_noSlide {[{ih} {iy} {oh} {uh} {aa} {ax} {y} {ao} {uw} {ah} {eh}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: n
rule: {[{[{{[{{any_Cx_zh_sh_n_ax {[{ch} {w} {l} {hh} {m} {g} {dh} {b} {v} {z} {d}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_sh_n_ax {[{ch} {w} {l} {hh} {m} {g} {dh} {b} {v} {z} {d}]}}}]}}]} {[{n} {[{[{{any_Cx_zh_sh_n_ax {[{ch} {w} {l} {hh} {m} {g} {dh} {b} {v} {z} {d}]}}} {zh}]} {[{zh} {{any_Cx_zh_sh_n_ax {[{ch} {w} {l} {hh} {m} {g} {dh} {b} {v} {z} {d}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ax
rule: {[{[{{[{{any_Cx_sh_zh_ax_m_n {[{ch} {dh} {g} {l} {z} {d} {w} {v} {b} {hh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_zh_ax_m_n {[{ch} {dh} {g} {l} {z} {d} {w} {v} {b} {hh}]}}}]}}]} {[{ax} {[{[{{any_Cx_sh_zh_ax_m_n {[{ch} {dh} {g} {l} {z} {d} {w} {v} {b} {hh}]}}} {sh}]} {[{sh} {{any_Cx_sh_zh_ax_m_n {[{ch} {dh} {g} {l} {z} {d} {w} {v} {b} {hh}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: m
rule: {[{[{{[{{any_Cx_sh_sh_m_ax_ax {[{b} {dh} {l} {hh} {w} {v} {g} {zh} {ch} {d} {z}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_m_ax_ax {[{b} {dh} {l} {hh} {w} {v} {g} {zh} {ch} {d} {z}]}}}]}}]} {[{m} {[{[{{any_Cx_sh_sh_m_ax_ax {[{b} {dh} {l} {hh} {w} {v} {g} {zh} {ch} {d} {z}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_m_ax_ax {[{b} {dh} {l} {hh} {w} {v} {g} {zh} {ch} {d} {z}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ax
rule: {[{[{{[{{any_Cx_sh_sh_ax_m {[{zh} {ch} {d} {dh} {g} {b} {z} {hh} {v} {w} {l}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_ax_m {[{zh} {ch} {d} {dh} {g} {b} {z} {hh} {v} {w} {l}]}}}]}}]} {[{ax} {[{[{{any_Cx_sh_sh_ax_l_m {[{hh} {zh} {ch} {g} {v} {d} {b} {w} {z} {dh}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_ax_l_m {[{hh} {zh} {ch} {g} {v} {d} {b} {w} {z} {dh}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: l
rule: {[{[{{[{{any_Cx_sh_sh_l_ax {[{d} {z} {v} {m} {zh} {b} {w} {dh} {g} {ch} {hh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_l_ax {[{d} {z} {v} {m} {zh} {b} {w} {dh} {g} {ch} {hh}]}}}]}}]} {[{l} {[{[{{any_Cx_sh_sh_l_ax {[{d} {z} {v} {m} {zh} {b} {w} {dh} {g} {ch} {hh}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_l_ax {[{d} {z} {v} {m} {zh} {b} {w} {dh} {g} {ch} {hh}]}}}]}]}]}]}
Closing rule:
guard: w
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {w}]}} {{[{w} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_l_w {[{g} {b} {d} {ch} {z} {zh} {dh} {hh} {m} {v}]}}} {w}]}} {{[{w} {{any_Cx_sh_l_w {[{g} {b} {d} {ch} {z} {zh} {dh} {hh} {m} {v}]}}}]}}]} {sil}]}
rule 1 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Vx_ae_z_p_noSlide {[{iy} {ax} {oh} {y} {ah} {ih} {uh} {aa} {ao} {eh} {uw}]}}}]} {[{{any_Vx_ae_z_p_noSlide {[{iy} {ax} {oh} {y} {ah} {ih} {uh} {aa} {ao} {eh} {uw}]}}} {z}]}]}} {{[{[{z} {{any_Cx_ae_z_p {[{g} {w} {v} {zh} {b} {hh} {d} {l} {m} {ch} {dh}]}}}]} {[{{any_Cx_ae_z_p {[{g} {w} {v} {zh} {b} {hh} {d} {l} {m} {ch} {dh}]}}} {z}]}]}}]}}
Phoneme rule:
guard: zh phoneme: ae
rule: {[{[{[{{[{{any_Vx_zh_p_z_ae_noSlide {[{ax} {ih} {uh} {ao} {eh} {uw} {ah} {aa} {oh} {y} {iy}]}}} {zh}]}} {{[{zh} {{any_Vx_zh_p_z_ae_noSlide {[{ax} {ih} {uh} {ao} {eh} {uw} {ah} {aa} {oh} {y} {iy}]}}}]}}]} {[{{[{{any_Cx_zh_p_z_n {[{g} {b} {l} {w} {ch} {dh} {m} {d} {hh} {v}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_p_z_n {[{g} {b} {l} {w} {ch} {dh} {m} {d} {hh} {v}]}}}]}}]}]} {[{ae} {[{[{{any_Vx_zh_p_z_ae_noSlide {[{ax} {ih} {uh} {ao} {eh} {uw} {ah} {aa} {oh} {y} {iy}]}}} {zh}]} {[{zh} {{any_Vx_zh_p_z_ae_noSlide {[{ax} {ih} {uh} {ao} {eh} {uw} {ah} {aa} {oh} {y} {iy}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: n
rule: {[{[{{[{{any_Cx_zh_zh_n_ax {[{ch} {dh} {z} {d} {g} {l} {b} {m} {v} {w} {hh}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_n_ax {[{ch} {dh} {z} {d} {g} {l} {b} {m} {v} {w} {hh}]}}}]}}]} {[{n} {[{[{{any_Cx_zh_zh_n_ax {[{ch} {dh} {z} {d} {g} {l} {b} {m} {v} {w} {hh}]}}} {zh}]} {[{zh} {{any_Cx_zh_zh_n_ax {[{ch} {dh} {z} {d} {g} {l} {b} {m} {v} {w} {hh}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ax
rule: {[{[{{[{{any_Cx_sh_zh_ax_m_n {[{v} {hh} {l} {d} {g} {ch} {w} {z} {b} {dh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_zh_ax_m_n {[{v} {hh} {l} {d} {g} {ch} {w} {z} {b} {dh}]}}}]}}]} {[{ax} {[{[{{any_Cx_sh_zh_ax_m_n {[{v} {hh} {l} {d} {g} {ch} {w} {z} {b} {dh}]}}} {sh}]} {[{sh} {{any_Cx_sh_zh_ax_m_n {[{v} {hh} {l} {d} {g} {ch} {w} {z} {b} {dh}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: m
rule: {[{[{{[{{any_Cx_sh_sh_m_ax_ax {[{w} {zh} {d} {hh} {z} {ch} {dh} {g} {b} {v} {l}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_m_ax_ax {[{w} {zh} {d} {hh} {z} {ch} {dh} {g} {b} {v} {l}]}}}]}}]} {[{m} {[{[{{any_Cx_sh_sh_m_ax_ax {[{w} {zh} {d} {hh} {z} {ch} {dh} {g} {b} {v} {l}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_m_ax_ax {[{w} {zh} {d} {hh} {z} {ch} {dh} {g} {b} {v} {l}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ax
rule: {[{[{{[{{any_Cx_sh_sh_ax_m {[{z} {hh} {ch} {w} {dh} {v} {d} {g} {l} {zh} {b}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_ax_m {[{z} {hh} {ch} {w} {dh} {v} {d} {g} {l} {zh} {b}]}}}]}}]} {[{ax} {[{[{{any_Cx_sh_sh_ax_l_m {[{w} {z} {zh} {d} {g} {hh} {v} {b} {dh} {ch}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_ax_l_m {[{w} {z} {zh} {d} {g} {hh} {v} {b} {dh} {ch}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: l
rule: {[{[{{[{{any_Cx_sh_sh_l_ax {[{zh} {g} {w} {v} {z} {b} {hh} {dh} {ch} {d} {m}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_l_ax {[{zh} {g} {w} {v} {z} {b} {hh} {dh} {ch} {d} {m}]}}}]}}]} {[{l} {[{[{{any_Cx_sh_sh_l_ax {[{zh} {g} {w} {v} {z} {b} {hh} {dh} {ch} {d} {m}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_l_ax {[{zh} {g} {w} {v} {z} {b} {hh} {dh} {ch} {d} {m}]}}}]}]}]}]}
Closing rule:
guard: w
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {w}]}} {{[{w} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_l_w {[{dh} {z} {v} {hh} {g} {d} {b} {ch} {m} {zh}]}}} {w}]}} {{[{w} {{any_Cx_sh_l_w {[{dh} {z} {v} {hh} {g} {d} {b} {ch} {m} {zh}]}}}]}}]} {sil}]}
rule 2 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Vx_ae_z_p_noSlide {[{aa} {ao} {eh} {iy} {uh} {ah} {uw} {ax} {ih} {oh} {y}]}}}]} {[{{any_Vx_ae_z_p_noSlide {[{aa} {ao} {eh} {iy} {uh} {ah} {uw} {ax} {ih} {oh} {y}]}}} {z}]}]}} {{[{[{z} {{any_Cx_ae_z_p {[{g} {l} {v} {dh} {w} {hh} {m} {d} {zh} {b} {ch}]}}}]} {[{{any_Cx_ae_z_p {[{g} {l} {v} {dh} {w} {hh} {m} {d} {zh} {b} {ch}]}}} {z}]}]}}]}}
Phoneme rule:
guard: zh phoneme: ae
rule: {[{[{[{{[{{any_Vx_zh_p_z_ae_noSlide {[{uh} {y} {ax} {eh} {ih} {ah} {ao} {iy} {oh} {uw} {aa}]}}} {zh}]}} {{[{zh} {{any_Vx_zh_p_z_ae_noSlide {[{uh} {y} {ax} {eh} {ih} {ah} {ao} {iy} {oh} {uw} {aa}]}}}]}}]} {[{{[{{any_Cx_zh_p_z_n {[{dh} {v} {ch} {g} {hh} {m} {w} {b} {d} {l}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_p_z_n {[{dh} {v} {ch} {g} {hh} {m} {w} {b} {d} {l}]}}}]}}]}]} {[{ae} {[{[{{any_Vx_zh_p_z_ae_noSlide {[{uh} {y} {ax} {eh} {ih} {ah} {ao} {iy} {oh} {uw} {aa}]}}} {zh}]} {[{zh} {{any_Vx_zh_p_z_ae_noSlide {[{uh} {y} {ax} {eh} {ih} {ah} {ao} {iy} {oh} {uw} {aa}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: n
rule: {[{[{{[{{any_Cx_zh_zh_n_ax {[{v} {b} {l} {w} {g} {hh} {z} {m} {d} {dh} {ch}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_n_ax {[{v} {b} {l} {w} {g} {hh} {z} {m} {d} {dh} {ch}]}}}]}}]} {[{n} {[{[{{any_Cx_zh_zh_n_ax {[{v} {b} {l} {w} {g} {hh} {z} {m} {d} {dh} {ch}]}}} {zh}]} {[{zh} {{any_Cx_zh_zh_n_ax {[{v} {b} {l} {w} {g} {hh} {z} {m} {d} {dh} {ch}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ax
rule: {[{[{{[{{any_Cx_sh_zh_ax_m_n {[{dh} {z} {v} {w} {g} {hh} {l} {b} {ch} {d}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_zh_ax_m_n {[{dh} {z} {v} {w} {g} {hh} {l} {b} {ch} {d}]}}}]}}]} {[{ax} {[{[{{any_Cx_sh_zh_ax_m_n {[{dh} {z} {v} {w} {g} {hh} {l} {b} {ch} {d}]}}} {sh}]} {[{sh} {{any_Cx_sh_zh_ax_m_n {[{dh} {z} {v} {w} {g} {hh} {l} {b} {ch} {d}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: m
rule: {[{[{{[{{any_Cx_sh_sh_m_ax_ax {[{d} {dh} {l} {w} {g} {zh} {b} {v} {ch} {hh} {z}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_m_ax_ax {[{d} {dh} {l} {w} {g} {zh} {b} {v} {ch} {hh} {z}]}}}]}}]} {[{m} {[{[{{any_Cx_sh_sh_m_ax_ax {[{d} {dh} {l} {w} {g} {zh} {b} {v} {ch} {hh} {z}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_m_ax_ax {[{d} {dh} {l} {w} {g} {zh} {b} {v} {ch} {hh} {z}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ax
rule: {[{[{{[{{any_Cx_sh_sh_ax_m {[{b} {d} {hh} {g} {v} {l} {w} {ch} {dh} {zh} {z}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_ax_m {[{b} {d} {hh} {g} {v} {l} {w} {ch} {dh} {zh} {z}]}}}]}}]} {[{ax} {[{[{{any_Cx_sh_sh_ax_l_m {[{dh} {zh} {z} {ch} {g} {b} {v} {w} {d} {hh}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_ax_l_m {[{dh} {zh} {z} {ch} {g} {b} {v} {w} {d} {hh}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: l
rule: {[{[{{[{{any_Cx_sh_sh_l_ax {[{dh} {z} {b} {w} {zh} {hh} {d} {m} {v} {ch} {g}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_l_ax {[{dh} {z} {b} {w} {zh} {hh} {d} {m} {v} {ch} {g}]}}}]}}]} {[{l} {[{[{{any_Cx_sh_sh_l_ax {[{dh} {z} {b} {w} {zh} {hh} {d} {m} {v} {ch} {g}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_l_ax {[{dh} {z} {b} {w} {zh} {hh} {d} {m} {v} {ch} {g}]}}}]}]}]}]}
Closing rule:
guard: d
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {d}]}} {{[{d} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_l_d {[{m} {z} {ch} {dh} {g} {hh} {w} {v} {b} {zh}]}}} {d}]}} {{[{d} {{any_Cx_sh_l_d {[{m} {z} {ch} {dh} {g} {hh} {w} {v} {b} {zh}]}}}]}}]} {sil}]}
rule 3 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Vx_ae_z_p_noSlide {[{ao} {uh} {y} {ax} {eh} {iy} {oh} {uw} {aa} {ah} {ih}]}}}]} {[{{any_Vx_ae_z_p_noSlide {[{ao} {uh} {y} {ax} {eh} {iy} {oh} {uw} {aa} {ah} {ih}]}}} {z}]}]}} {{[{[{z} {{any_Cx_ae_z_p {[{dh} {d} {v} {l} {zh} {b} {w} {ch} {hh} {m} {g}]}}}]} {[{{any_Cx_ae_z_p {[{dh} {d} {v} {l} {zh} {b} {w} {ch} {hh} {m} {g}]}}} {z}]}]}}]}}
Phoneme rule:
guard: sh phoneme: ae
rule: {[{[{[{{[{{any_Vx_sh_p_z_ae_noSlide {[{uh} {ih} {iy} {oh} {y} {eh} {ah} {ao} {aa} {ax} {uw}]}}} {sh}]}} {{[{sh} {{any_Vx_sh_p_z_ae_noSlide {[{uh} {ih} {iy} {oh} {y} {eh} {ah} {ao} {aa} {ax} {uw}]}}}]}}]} {[{{[{{any_Cx_sh_p_z_n {[{hh} {w} {g} {l} {m} {d} {dh} {v} {ch} {zh} {b}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_p_z_n {[{hh} {w} {g} {l} {m} {d} {dh} {v} {ch} {zh} {b}]}}}]}}]}]} {[{ae} {[{[{{any_Vx_sh_p_z_ae_noSlide {[{uh} {ih} {iy} {oh} {y} {eh} {ah} {ao} {aa} {ax} {uw}]}}} {sh}]} {[{sh} {{any_Vx_sh_p_z_ae_noSlide {[{uh} {ih} {iy} {oh} {y} {eh} {ah} {ao} {aa} {ax} {uw}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: n
rule: {[{[{{[{{any_Cx_sh_sh_n_ax {[{l} {g} {hh} {z} {ch} {dh} {w} {v} {b} {d} {m} {zh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_n_ax {[{l} {g} {hh} {z} {ch} {dh} {w} {v} {b} {d} {m} {zh}]}}}]}}]} {[{n} {[{[{{any_Cx_sh_sh_n_ax {[{l} {g} {hh} {z} {ch} {dh} {w} {v} {b} {d} {m} {zh}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_n_ax {[{l} {g} {hh} {z} {ch} {dh} {w} {v} {b} {d} {m} {zh}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ax
rule: {[{[{{[{{any_Cx_sh_sh_ax_m_n {[{ch} {d} {l} {v} {dh} {g} {z} {b} {hh} {w} {zh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_ax_m_n {[{ch} {d} {l} {v} {dh} {g} {z} {b} {hh} {w} {zh}]}}}]}}]} {[{ax} {[{[{{any_Cx_sh_sh_ax_m_n {[{ch} {d} {l} {v} {dh} {g} {z} {b} {hh} {w} {zh}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_ax_m_n {[{ch} {d} {l} {v} {dh} {g} {z} {b} {hh} {w} {zh}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: m
rule: {[{[{{[{{any_Cx_sh_sh_m_ax_ax {[{b} {g} {w} {d} {dh} {v} {ch} {z} {l} {hh} {zh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_m_ax_ax {[{b} {g} {w} {d} {dh} {v} {ch} {z} {l} {hh} {zh}]}}}]}}]} {[{m} {[{[{{any_Cx_sh_sh_m_ax_ax {[{b} {g} {w} {d} {dh} {v} {ch} {z} {l} {hh} {zh}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_m_ax_ax {[{b} {g} {w} {d} {dh} {v} {ch} {z} {l} {hh} {zh}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ax
rule: {[{[{{[{{any_Cx_sh_sh_ax_m {[{ch} {d} {l} {w} {dh} {z} {g} {zh} {b} {hh} {v}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_ax_m {[{ch} {d} {l} {w} {dh} {z} {g} {zh} {b} {hh} {v}]}}}]}}]} {[{ax} {[{[{{any_Cx_sh_sh_ax_l_m {[{d} {z} {ch} {v} {b} {hh} {zh} {dh} {g} {w}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_ax_l_m {[{d} {z} {ch} {v} {b} {hh} {zh} {dh} {g} {w}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: l
rule: {[{[{{[{{any_Cx_sh_sh_l_ax {[{zh} {dh} {z} {b} {hh} {v} {ch} {w} {d} {g} {m}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_l_ax {[{zh} {dh} {z} {b} {hh} {v} {ch} {w} {d} {g} {m}]}}}]}}]} {[{l} {[{[{{any_Cx_sh_sh_l_ax {[{zh} {dh} {z} {b} {hh} {v} {ch} {w} {d} {g} {m}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_l_ax {[{zh} {dh} {z} {b} {hh} {v} {ch} {w} {d} {g} {m}]}}}]}]}]}]}
Closing rule:
guard: b
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {b}]}} {{[{b} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_l_b {[{v} {w} {m} {hh} {d} {zh} {dh} {z} {ch} {g}]}}} {b}]}} {{[{b} {{any_Cx_sh_l_b {[{v} {w} {m} {hh} {d} {zh} {dh} {z} {ch} {g}]}}}]}}]} {sil}]}
rule 4 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Vx_ae_z_p_noSlide {[{eh} {uh} {aa} {ah} {iy} {uw} {ao} {ih} {oh} {y} {ax}]}}}]} {[{{any_Vx_ae_z_p_noSlide {[{eh} {uh} {aa} {ah} {iy} {uw} {ao} {ih} {oh} {y} {ax}]}}} {z}]}]}} {{[{[{z} {{any_Cx_ae_z_p {[{b} {ch} {zh} {d} {w} {dh} {g} {hh} {v} {l} {m}]}}}]} {[{{any_Cx_ae_z_p {[{b} {ch} {zh} {d} {w} {dh} {g} {hh} {v} {l} {m}]}}} {z}]}]}}]}}
Phoneme rule:
guard: sh phoneme: ae
rule: {[{[{[{{[{{any_Vx_sh_p_z_ae_noSlide {[{uw} {ah} {eh} {oh} {uh} {ax} {ih} {ao} {iy} {y} {aa}]}}} {sh}]}} {{[{sh} {{any_Vx_sh_p_z_ae_noSlide {[{uw} {ah} {eh} {oh} {uh} {ax} {ih} {ao} {iy} {y} {aa}]}}}]}}]} {[{{[{{any_Cx_sh_p_z_n {[{b} {ch} {m} {w} {g} {l} {v} {d} {hh} {dh} {zh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_p_z_n {[{b} {ch} {m} {w} {g} {l} {v} {d} {hh} {dh} {zh}]}}}]}}]}]} {[{ae} {[{[{{any_Vx_sh_p_z_ae_noSlide {[{uw} {ah} {eh} {oh} {uh} {ax} {ih} {ao} {iy} {y} {aa}]}}} {sh}]} {[{sh} {{any_Vx_sh_p_z_ae_noSlide {[{uw} {ah} {eh} {oh} {uh} {ax} {ih} {ao} {iy} {y} {aa}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: n
rule: {[{[{{[{{any_Cx_zh_sh_n_ax {[{b} {g} {w} {dh} {m} {hh} {l} {z} {ch} {d} {v}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_sh_n_ax {[{b} {g} {w} {dh} {m} {hh} {l} {z} {ch} {d} {v}]}}}]}}]} {[{n} {[{[{{any_Cx_zh_sh_n_ax {[{b} {g} {w} {dh} {m} {hh} {l} {z} {ch} {d} {v}]}}} {zh}]} {[{zh} {{any_Cx_zh_sh_n_ax {[{b} {g} {w} {dh} {m} {hh} {l} {z} {ch} {d} {v}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ax
rule: {[{[{{[{{any_Cx_sh_zh_ax_m_n {[{hh} {ch} {d} {dh} {g} {l} {z} {b} {v} {w}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_zh_ax_m_n {[{hh} {ch} {d} {dh} {g} {l} {z} {b} {v} {w}]}}}]}}]} {[{ax} {[{[{{any_Cx_sh_zh_ax_m_n {[{hh} {ch} {d} {dh} {g} {l} {z} {b} {v} {w}]}}} {sh}]} {[{sh} {{any_Cx_sh_zh_ax_m_n {[{hh} {ch} {d} {dh} {g} {l} {z} {b} {v} {w}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: m
rule: {[{[{{[{{any_Cx_sh_sh_m_ax_ax {[{g} {ch} {l} {w} {dh} {z} {b} {zh} {d} {hh} {v}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_m_ax_ax {[{g} {ch} {l} {w} {dh} {z} {b} {zh} {d} {hh} {v}]}}}]}}]} {[{m} {[{[{{any_Cx_sh_sh_m_ax_ax {[{g} {ch} {l} {w} {dh} {z} {b} {zh} {d} {hh} {v}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_m_ax_ax {[{g} {ch} {l} {w} {dh} {z} {b} {zh} {d} {hh} {v}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ax
rule: {[{[{{[{{any_Cx_sh_sh_ax_m {[{zh} {d} {hh} {v} {z} {dh} {l} {ch} {b} {w} {g}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_ax_m {[{zh} {d} {hh} {v} {z} {dh} {l} {ch} {b} {w} {g}]}}}]}}]} {[{ax} {[{[{{any_Cx_sh_sh_ax_l_m {[{w} {b} {ch} {g} {v} {zh} {hh} {z} {dh} {d}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_ax_l_m {[{w} {b} {ch} {g} {v} {zh} {hh} {z} {dh} {d}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: l
rule: {[{[{{[{{any_Cx_sh_sh_l_ax {[{g} {v} {z} {ch} {b} {d} {m} {zh} {dh} {hh} {w}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_l_ax {[{g} {v} {z} {ch} {b} {d} {m} {zh} {dh} {hh} {w}]}}}]}}]} {[{l} {[{[{{any_Cx_sh_sh_l_ax {[{g} {v} {z} {ch} {b} {d} {m} {zh} {dh} {hh} {w}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_l_ax {[{g} {v} {z} {ch} {b} {d} {m} {zh} {dh} {hh} {w}]}}}]}]}]}]}
Closing rule:
guard: f
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {f}]}} {{[{f} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_l_f {[{w} {m} {dh} {v} {ch} {z} {zh} {d} {hh} {g} {b}]}}} {f}]}} {{[{f} {{any_Cx_sh_l_f {[{w} {m} {dh} {v} {ch} {z} {zh} {d} {hh} {g} {b}]}}}]}}]} {sil}]}

parse: err = Parser error
ruleAligned = [{{ae 0} [{0 1} {2 1} {3 1} {4 1}]} {{n 1} [{2 2} {3 2} {4 2}]} {{ax 0} [{0 3} {2 3} {3 3} {4 3}]} {{m 0} [{0 4} {2 4} {3 4} {4 4}]} {{ax 2} []} {{l 0} [{0 6} {2 6} {3 6} {4 6}]}]

results (after rule-alignment) =
{72 [{sil 73 73} {ae 117 138} {n 139 139} {ax 143 147} {m 149 153} {ax 154 154} {l 158 175} {sil 176 176}]}
{80 []}
{91 [{sil 0 0} {ae 16 36} {n 37 41} {ax 42 45} {m 46 52} {ax 53 53} {l 56 74} {sil 75 75}]}
{105 [{sil 0 0} {ae 18 37} {n 38 42} {ax 43 46} {m 47 52} {ax 53 53} {l 56 74} {sil 75 75}]}
{125 [{sil 3 3} {ae 19 38} {n 39 42} {ax 42 47} {m 48 54} {ax 54 54} {l 57 74} {sil 75 75}]}

timeAligned = [{{ae 19 36} [{2 1} {3 1} {4 1}]} {{n 39 41} [{2 2} {3 2} {4 2}]} {{ax 43 45} [{2 3} {3 3} {4 3}]} {{m 48 52} [{2 4} {3 4} {4 4}]} {{l 57 74} [{2 6} {3 6} {4 6}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 36
i, iTime, newITime, timeStartFrom = 2 1 2 41
i, iTime, newITime, timeStartFrom = 3 2 3 45
i, iTime, newITime, timeStartFrom = 4 3 -1 52
i, iTime, newITime, timeStartFrom = 5 3 4 52
combinedVerdict    = [{ae 0} {n 1} {ax 0} {m 0} {ax 2} {l 0}]
ruleAlignedVerdict = [{ae 0} {n 1} {ax 0} {m 0} {ax 2} {l 0}]

score->
+1 for ae
+1 for n
+1 for ax
+1 for m
-1 for ax
+1 for l
score<-: 4

results =
{72 [{sil 73 83} {ae 84 99} {n 100 102} {ax 103 106} {m 107 111} {axl 112 126} {sil 127 162}]}
{80 []}
{91 [{sil 0 14} {ae 15 33} {n 34 37} {ax 38 41} {m 42 49} {axl 50 67} {sil 68 115}]}
{105 [{sil 0 18} {ae 19 39} {n 40 44} {ax 45 48} {m 49 55} {l 56 77} {sh 78 80} {sil 81 138}]}
{125 [{sil 3 23} {ae 24 48} {n 49 52} {ax 53 59} {m 60 67} {l 68 92} {sh 93 95} {sil 96 162}]}

normalised results =
{72 [{sil 73 83} {ae 117 138} {n 139 139} {ax 143 147} {m 149 154} {axl 156 175} {sil 176 225}]}
{80 []}
{91 [{sil 0 14} {ae 16 36} {n 37 41} {ax 42 45} {m 46 54} {axl 55 74} {sil 75 126}]}
{105 [{sil 0 18} {ae 18 37} {n 38 42} {ax 43 46} {m 47 52} {l 53 73} {sh 74 74} {sil 77 131}]}
{125 [{sil 3 23} {ae 19 38} {n 39 42} {ax 42 47} {m 48 54} {l 54 74} {sh 74 74} {sil 77 130}]}

Mapped result =
result 0 =
start: 0 end: 0 phonemeFound: false
start: 1 end: 1 phonemeFound: true
start: 2 end: 2 phonemeFound: true
start: 3 end: 3 phonemeFound: true
start: 4 end: 4 phonemeFound: true
start: 5 end: 5 phonemeFound: true
start: 6 end: 6 phonemeFound: false
result 1 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 2 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 3 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 4 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false

Rules =
rule 0 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Vx_ae_z_p_noSlide {[{ao} {iy} {uh} {ah} {oh} {aa} {ax} {ih} {y} {uw} {eh}]}}}]} {[{{any_Vx_ae_z_p_noSlide {[{ao} {iy} {uh} {ah} {oh} {aa} {ax} {ih} {y} {uw} {eh}]}}} {z}]}]}} {{[{[{z} {{any_Cx_ae_z_p {[{d} {ch} {v} {g} {w} {zh} {dh} {hh} {l} {m} {b}]}}}]} {[{{any_Cx_ae_z_p {[{d} {ch} {v} {g} {w} {zh} {dh} {hh} {l} {m} {b}]}}} {z}]}]}}]}}
Phoneme rule:
guard: zh phoneme: ae
rule: {[{[{[{{[{{any_Vx_zh_p_z_ae_noSlide {[{ih} {uh} {y} {aa} {eh} {oh} {ax} {iy} {ah} {ao} {uw}]}}} {zh}]}} {{[{zh} {{any_Vx_zh_p_z_ae_noSlide {[{ih} {uh} {y} {aa} {eh} {oh} {ax} {iy} {ah} {ao} {uw}]}}}]}}]} {[{{[{{any_Cx_zh_p_z_n {[{ch} {b} {hh} {d} {g} {l} {dh} {w} {m} {v}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_p_z_n {[{ch} {b} {hh} {d} {g} {l} {dh} {w} {m} {v}]}}}]}}]}]} {[{ae} {[{[{{any_Vx_zh_p_z_ae_noSlide {[{ih} {uh} {y} {aa} {eh} {oh} {ax} {iy} {ah} {ao} {uw}]}}} {zh}]} {[{zh} {{any_Vx_zh_p_z_ae_noSlide {[{ih} {uh} {y} {aa} {eh} {oh} {ax} {iy} {ah} {ao} {uw}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: n
rule: {[{[{{[{{any_Cx_zh_zh_n_ax {[{b} {d} {g} {ch} {z} {w} {dh} {l} {hh} {m} {v}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_n_ax {[{b} {d} {g} {ch} {z} {w} {dh} {l} {hh} {m} {v}]}}}]}}]} {[{n} {[{[{{any_Cx_zh_zh_n_ax {[{b} {d} {g} {ch} {z} {w} {dh} {l} {hh} {m} {v}]}}} {zh}]} {[{zh} {{any_Cx_zh_zh_n_ax {[{b} {d} {g} {ch} {z} {w} {dh} {l} {hh} {m} {v}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ax
rule: {[{[{{[{{any_Cx_sh_zh_ax_m_n {[{d} {hh} {z} {b} {g} {w} {ch} {l} {dh} {v}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_zh_ax_m_n {[{d} {hh} {z} {b} {g} {w} {ch} {l} {dh} {v}]}}}]}}]} {[{ax} {[{[{{any_Cx_sh_zh_ax_m_n {[{d} {hh} {z} {b} {g} {w} {ch} {l} {dh} {v}]}}} {sh}]} {[{sh} {{any_Cx_sh_zh_ax_m_n {[{d} {hh} {z} {b} {g} {w} {ch} {l} {dh} {v}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: m
rule: {[{[{{[{{any_Cx_sh_sh_m_ax {[{g} {d} {b} {l} {z} {zh} {ch} {v} {w} {hh} {dh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_m_ax {[{g} {d} {b} {l} {z} {zh} {ch} {v} {w} {hh} {dh}]}}}]}}]} {[{m} {[{[{{any_Cx_sh_sh_m_axl_ax {[{z} {v} {zh} {b} {w} {dh} {l} {d} {g} {ch} {hh}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_m_axl_ax {[{z} {v} {zh} {b} {w} {dh} {l} {d} {g} {ch} {hh}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: axl
rule: {[{[{{[{{any_Cx_sh_sh_axl_m {[{l} {ch} {z} {b} {dh} {w} {zh} {hh} {v} {g} {d}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_axl_m {[{l} {ch} {z} {b} {dh} {w} {zh} {hh} {v} {g} {d}]}}}]}}]} {[{axl} {[{[{{any_Cx_sh_sh_axl_m {[{l} {ch} {z} {b} {dh} {w} {zh} {hh} {v} {g} {d}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_axl_m {[{l} {ch} {z} {b} {dh} {w} {zh} {hh} {v} {g} {d}]}}}]}]}]}]}
Closing rule:
guard: ng
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {ng}]}} {{[{ng} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_axl_ng {[{z} {dh} {v} {ch} {zh} {g} {w} {b} {d} {m} {l} {hh}]}}} {ng}]}} {{[{ng} {{any_Cx_sh_axl_ng {[{z} {dh} {v} {ch} {zh} {g} {w} {b} {d} {m} {l} {hh}]}}}]}}]} {sil}]}
rule 1 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Vx_ae_z_p_noSlide {[{uw} {ah} {ax} {ao} {oh} {y} {aa} {ih} {uh} {eh} {iy}]}}}]} {[{{any_Vx_ae_z_p_noSlide {[{uw} {ah} {ax} {ao} {oh} {y} {aa} {ih} {uh} {eh} {iy}]}}} {z}]}]}} {{[{[{z} {{any_Cx_ae_z_p {[{d} {b} {ch} {hh} {v} {l} {dh} {m} {zh} {g} {w}]}}}]} {[{{any_Cx_ae_z_p {[{d} {b} {ch} {hh} {v} {l} {dh} {m} {zh} {g} {w}]}}} {z}]}]}}]}}
Phoneme rule:
guard: zh phoneme: ae
rule: {[{[{[{{[{{any_Vx_zh_p_z_ae_noSlide {[{aa} {uh} {uw} {ah} {eh} {oh} {ao} {y} {ax} {ih} {iy}]}}} {zh}]}} {{[{zh} {{any_Vx_zh_p_z_ae_noSlide {[{aa} {uh} {uw} {ah} {eh} {oh} {ao} {y} {ax} {ih} {iy}]}}}]}}]} {[{{[{{any_Cx_zh_p_z_n {[{d} {dh} {b} {l} {ch} {hh} {w} {g} {m} {v}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_p_z_n {[{d} {dh} {b} {l} {ch} {hh} {w} {g} {m} {v}]}}}]}}]}]} {[{ae} {[{[{{any_Vx_zh_p_z_ae_noSlide {[{aa} {uh} {uw} {ah} {eh} {oh} {ao} {y} {ax} {ih} {iy}]}}} {zh}]} {[{zh} {{any_Vx_zh_p_z_ae_noSlide {[{aa} {uh} {uw} {ah} {eh} {oh} {ao} {y} {ax} {ih} {iy}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: n
rule: {[{[{{[{{any_Cx_zh_zh_n_ax {[{m} {z} {d} {g} {l} {w} {b} {dh} {hh} {ch} {v}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_n_ax {[{m} {z} {d} {g} {l} {w} {b} {dh} {hh} {ch} {v}]}}}]}}]} {[{n} {[{[{{any_Cx_zh_zh_n_ax {[{m} {z} {d} {g} {l} {w} {b} {dh} {hh} {ch} {v}]}}} {zh}]} {[{zh} {{any_Cx_zh_zh_n_ax {[{m} {z} {d} {g} {l} {w} {b} {dh} {hh} {ch} {v}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ax
rule: {[{[{{[{{any_Cx_sh_zh_ax_m_n {[{b} {w} {d} {ch} {hh} {z} {l} {g} {v} {dh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_zh_ax_m_n {[{b} {w} {d} {ch} {hh} {z} {l} {g} {v} {dh}]}}}]}}]} {[{ax} {[{[{{any_Cx_sh_zh_ax_m_n {[{b} {w} {d} {ch} {hh} {z} {l} {g} {v} {dh}]}}} {sh}]} {[{sh} {{any_Cx_sh_zh_ax_m_n {[{b} {w} {d} {ch} {hh} {z} {l} {g} {v} {dh}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: m
rule: {[{[{{[{{any_Cx_sh_sh_m_ax {[{g} {l} {v} {b} {z} {zh} {ch} {d} {dh} {w} {hh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_m_ax {[{g} {l} {v} {b} {z} {zh} {ch} {d} {dh} {w} {hh}]}}}]}}]} {[{m} {[{[{{any_Cx_sh_sh_m_axl_ax {[{z} {l} {dh} {g} {zh} {w} {hh} {v} {ch} {d} {b}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_m_axl_ax {[{z} {l} {dh} {g} {zh} {w} {hh} {v} {ch} {d} {b}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: axl
rule: {[{[{{[{{any_Cx_sh_sh_axl_m {[{w} {z} {d} {b} {ch} {dh} {l} {v} {hh} {g} {zh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_axl_m {[{w} {z} {d} {b} {ch} {dh} {l} {v} {hh} {g} {zh}]}}}]}}]} {[{axl} {[{[{{any_Cx_sh_sh_axl_m {[{w} {z} {d} {b} {ch} {dh} {l} {v} {hh} {g} {zh}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_axl_m {[{w} {z} {d} {b} {ch} {dh} {l} {v} {hh} {g} {zh}]}}}]}]}]}]}
Closing rule:
guard: f
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {f}]}} {{[{f} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_axl_f {[{w} {ch} {zh} {m} {hh} {v} {b} {d} {dh} {g} {l} {z}]}}} {f}]}} {{[{f} {{any_Cx_sh_axl_f {[{w} {ch} {zh} {m} {hh} {v} {b} {d} {dh} {g} {l} {z}]}}}]}}]} {sil}]}
rule 2 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Vx_ae_z_p_noSlide {[{iy} {oh} {uw} {uh} {ah} {ax} {eh} {ih} {aa} {ao} {y}]}}}]} {[{{any_Vx_ae_z_p_noSlide {[{iy} {oh} {uw} {uh} {ah} {ax} {eh} {ih} {aa} {ao} {y}]}}} {z}]}]}} {{[{[{z} {{any_Cx_ae_z_p {[{b} {ch} {dh} {g} {v} {w} {l} {hh} {m} {zh} {d}]}}}]} {[{{any_Cx_ae_z_p {[{b} {ch} {dh} {g} {v} {w} {l} {hh} {m} {zh} {d}]}}} {z}]}]}}]}}
Phoneme rule:
guard: zh phoneme: ae
rule: {[{[{[{{[{{any_Vx_zh_p_z_ae_noSlide {[{ao} {ax} {iy} {aa} {ah} {oh} {uw} {uh} {y} {eh} {ih}]}}} {zh}]}} {{[{zh} {{any_Vx_zh_p_z_ae_noSlide {[{ao} {ax} {iy} {aa} {ah} {oh} {uw} {uh} {y} {eh} {ih}]}}}]}}]} {[{{[{{any_Cx_zh_p_z_n {[{v} {w} {ch} {dh} {g} {l} {m} {hh} {b} {d}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_p_z_n {[{v} {w} {ch} {dh} {g} {l} {m} {hh} {b} {d}]}}}]}}]}]} {[{ae} {[{[{{any_Vx_zh_p_z_ae_noSlide {[{ao} {ax} {iy} {aa} {ah} {oh} {uw} {uh} {y} {eh} {ih}]}}} {zh}]} {[{zh} {{any_Vx_zh_p_z_ae_noSlide {[{ao} {ax} {iy} {aa} {ah} {oh} {uw} {uh} {y} {eh} {ih}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: n
rule: {[{[{{[{{any_Cx_sh_zh_n_ax {[{dh} {v} {z} {w} {b} {ch} {hh} {d} {l} {m} {g}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_zh_n_ax {[{dh} {v} {z} {w} {b} {ch} {hh} {d} {l} {m} {g}]}}}]}}]} {[{n} {[{[{{any_Cx_sh_zh_n_ax {[{dh} {v} {z} {w} {b} {ch} {hh} {d} {l} {m} {g}]}}} {sh}]} {[{sh} {{any_Cx_sh_zh_n_ax {[{dh} {v} {z} {w} {b} {ch} {hh} {d} {l} {m} {g}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ax
rule: {[{[{{[{{any_Cx_sh_sh_ax_m_n {[{ch} {w} {zh} {v} {dh} {hh} {l} {g} {z} {d} {b}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_ax_m_n {[{ch} {w} {zh} {v} {dh} {hh} {l} {g} {z} {d} {b}]}}}]}}]} {[{ax} {[{[{{any_Cx_sh_sh_ax_m_n {[{ch} {w} {zh} {v} {dh} {hh} {l} {g} {z} {d} {b}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_ax_m_n {[{ch} {w} {zh} {v} {dh} {hh} {l} {g} {z} {d} {b}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: m
rule: {[{[{{[{{any_Cx_sh_sh_m_ax {[{v} {ch} {w} {zh} {d} {b} {hh} {dh} {g} {l} {z}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_m_ax {[{v} {ch} {w} {zh} {d} {b} {hh} {dh} {g} {l} {z}]}}}]}}]} {[{m} {[{[{{any_Cx_sh_sh_m_axl_ax {[{z} {dh} {l} {b} {g} {hh} {ch} {d} {v} {w} {zh}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_m_axl_ax {[{z} {dh} {l} {b} {g} {hh} {ch} {d} {v} {w} {zh}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: axl
rule: {[{[{{[{{any_Cx_sh_sh_axl_m {[{hh} {zh} {d} {z} {ch} {w} {g} {dh} {b} {l} {v}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_axl_m {[{hh} {zh} {d} {z} {ch} {w} {g} {dh} {b} {l} {v}]}}}]}}]} {[{axl} {[{[{{any_Cx_sh_sh_axl_m {[{hh} {zh} {d} {z} {ch} {w} {g} {dh} {b} {l} {v}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_axl_m {[{hh} {zh} {d} {z} {ch} {w} {g} {dh} {b} {l} {v}]}}}]}]}]}]}
Closing rule:
guard: n
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {n}]}} {{[{n} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_axl_n {[{g} {z} {b} {zh} {m} {dh} {d} {l} {v} {ch} {hh} {w}]}}} {n}]}} {{[{n} {{any_Cx_sh_axl_n {[{g} {z} {b} {zh} {m} {dh} {d} {l} {v} {ch} {hh} {w}]}}}]}}]} {sil}]}
rule 3 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Vx_ae_z_p_noSlide {[{aa} {ao} {ax} {eh} {ih} {y} {oh} {uw} {ah} {iy} {uh}]}}}]} {[{{any_Vx_ae_z_p_noSlide {[{aa} {ao} {ax} {eh} {ih} {y} {oh} {uw} {ah} {iy} {uh}]}}} {z}]}]}} {{[{[{z} {{any_Cx_ae_z_p {[{b} {hh} {v} {zh} {m} {ch} {dh} {g} {l} {w} {d}]}}}]} {[{{any_Cx_ae_z_p {[{b} {hh} {v} {zh} {m} {ch} {dh} {g} {l} {w} {d}]}}} {z}]}]}}]}}
Phoneme rule:
guard: sh phoneme: ae
rule: {[{[{[{{[{{any_Vx_sh_p_z_ae_noSlide {[{ah} {ih} {y} {ao} {ax} {iy} {aa} {eh} {oh} {uw} {uh}]}}} {sh}]}} {{[{sh} {{any_Vx_sh_p_z_ae_noSlide {[{ah} {ih} {y} {ao} {ax} {iy} {aa} {eh} {oh} {uw} {uh}]}}}]}}]} {[{{[{{any_Cx_sh_p_z_n {[{hh} {dh} {l} {b} {w} {ch} {v} {zh} {g} {m} {d}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_p_z_n {[{hh} {dh} {l} {b} {w} {ch} {v} {zh} {g} {m} {d}]}}}]}}]}]} {[{ae} {[{[{{any_Vx_sh_p_z_ae_noSlide {[{ah} {ih} {y} {ao} {ax} {iy} {aa} {eh} {oh} {uw} {uh}]}}} {sh}]} {[{sh} {{any_Vx_sh_p_z_ae_noSlide {[{ah} {ih} {y} {ao} {ax} {iy} {aa} {eh} {oh} {uw} {uh}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: n
rule: {[{[{{[{{any_Cx_zh_sh_n_ax {[{hh} {v} {d} {dh} {m} {b} {z} {l} {w} {ch} {g}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_sh_n_ax {[{hh} {v} {d} {dh} {m} {b} {z} {l} {w} {ch} {g}]}}}]}}]} {[{n} {[{[{{any_Cx_zh_sh_n_ax {[{hh} {v} {d} {dh} {m} {b} {z} {l} {w} {ch} {g}]}}} {zh}]} {[{zh} {{any_Cx_zh_sh_n_ax {[{hh} {v} {d} {dh} {m} {b} {z} {l} {w} {ch} {g}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ax
rule: {[{[{{[{{any_Cx_sh_zh_ax_m_n {[{l} {dh} {g} {hh} {w} {ch} {d} {z} {b} {v}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_zh_ax_m_n {[{l} {dh} {g} {hh} {w} {ch} {d} {z} {b} {v}]}}}]}}]} {[{ax} {[{[{{any_Cx_sh_zh_ax_m_n {[{l} {dh} {g} {hh} {w} {ch} {d} {z} {b} {v}]}}} {sh}]} {[{sh} {{any_Cx_sh_zh_ax_m_n {[{l} {dh} {g} {hh} {w} {ch} {d} {z} {b} {v}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: m
rule: {[{[{{[{{any_Cx_sh_sh_m_ax {[{v} {dh} {g} {z} {b} {hh} {ch} {zh} {w} {d} {l}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_m_ax {[{v} {dh} {g} {z} {b} {hh} {ch} {zh} {w} {d} {l}]}}}]}}]} {[{m} {[{[{{any_Cx_sh_sh_m_axl_ax {[{ch} {z} {b} {g} {zh} {l} {w} {d} {dh} {hh} {v}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_m_axl_ax {[{ch} {z} {b} {g} {zh} {l} {w} {d} {dh} {hh} {v}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: axl
rule: {[{[{{[{{any_Cx_sh_sh_axl_m {[{b} {ch} {g} {l} {v} {w} {z} {hh} {zh} {d} {dh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_axl_m {[{b} {ch} {g} {l} {v} {w} {z} {hh} {zh} {d} {dh}]}}}]}}]} {[{axl} {[{[{{any_Cx_sh_sh_axl_m {[{b} {ch} {g} {l} {v} {w} {z} {hh} {zh} {d} {dh}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_axl_m {[{b} {ch} {g} {l} {v} {w} {z} {hh} {zh} {d} {dh}]}}}]}]}]}]}
Closing rule:
guard: m
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {m}]}} {{[{m} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_axl_m {[{ch} {d} {g} {v} {b} {dh} {zh} {w} {z} {hh} {l}]}}} {m}]}} {{[{m} {{any_Cx_sh_axl_m {[{ch} {d} {g} {v} {b} {dh} {zh} {w} {z} {hh} {l}]}}}]}}]} {sil}]}
rule 4 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Vx_ae_z_p_noSlide {[{ax} {oh} {ao} {ih} {uh} {y} {aa} {eh} {iy} {ah} {uw}]}}}]} {[{{any_Vx_ae_z_p_noSlide {[{ax} {oh} {ao} {ih} {uh} {y} {aa} {eh} {iy} {ah} {uw}]}}} {z}]}]}} {{[{[{z} {{any_Cx_ae_z_p {[{hh} {v} {g} {d} {w} {l} {b} {dh} {zh} {ch} {m}]}}}]} {[{{any_Cx_ae_z_p {[{hh} {v} {g} {d} {w} {l} {b} {dh} {zh} {ch} {m}]}}} {z}]}]}}]}}
Phoneme rule:
guard: sh phoneme: ae
rule: {[{[{[{{[{{any_Vx_sh_p_z_ae_noSlide {[{ao} {iy} {oh} {uw} {y} {eh} {aa} {ih} {uh} {ah} {ax}]}}} {sh}]}} {{[{sh} {{any_Vx_sh_p_z_ae_noSlide {[{ao} {iy} {oh} {uw} {y} {eh} {aa} {ih} {uh} {ah} {ax}]}}}]}}]} {[{{[{{any_Cx_sh_p_z_n {[{v} {w} {hh} {b} {d} {l} {m} {zh} {ch} {dh} {g}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_p_z_n {[{v} {w} {hh} {b} {d} {l} {m} {zh} {ch} {dh} {g}]}}}]}}]}]} {[{ae} {[{[{{any_Vx_sh_p_z_ae_noSlide {[{ao} {iy} {oh} {uw} {y} {eh} {aa} {ih} {uh} {ah} {ax}]}}} {sh}]} {[{sh} {{any_Vx_sh_p_z_ae_noSlide {[{ao} {iy} {oh} {uw} {y} {eh} {aa} {ih} {uh} {ah} {ax}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: n
rule: {[{[{{[{{any_Cx_sh_sh_n_ax {[{b} {d} {hh} {dh} {g} {w} {z} {ch} {l} {m} {zh} {v}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_n_ax {[{b} {d} {hh} {dh} {g} {w} {z} {ch} {l} {m} {zh} {v}]}}}]}}]} {[{n} {[{[{{any_Cx_sh_sh_n_ax {[{b} {d} {hh} {dh} {g} {w} {z} {ch} {l} {m} {zh} {v}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_n_ax {[{b} {d} {hh} {dh} {g} {w} {z} {ch} {l} {m} {zh} {v}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ax
rule: {[{[{{[{{any_Cx_sh_sh_ax_m_n {[{zh} {z} {ch} {g} {d} {w} {hh} {v} {dh} {l} {b}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_ax_m_n {[{zh} {z} {ch} {g} {d} {w} {hh} {v} {dh} {l} {b}]}}}]}}]} {[{ax} {[{[{{any_Cx_sh_sh_ax_m_n {[{zh} {z} {ch} {g} {d} {w} {hh} {v} {dh} {l} {b}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_ax_m_n {[{zh} {z} {ch} {g} {d} {w} {hh} {v} {dh} {l} {b}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: m
rule: {[{[{{[{{any_Cx_sh_sh_m_ax {[{ch} {v} {dh} {zh} {w} {l} {b} {hh} {z} {d} {g}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_m_ax {[{ch} {v} {dh} {zh} {w} {l} {b} {hh} {z} {d} {g}]}}}]}}]} {[{m} {[{[{{any_Cx_sh_sh_m_axl_ax {[{g} {b} {dh} {l} {w} {zh} {d} {hh} {ch} {v} {z}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_m_axl_ax {[{g} {b} {dh} {l} {w} {zh} {d} {hh} {ch} {v} {z}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: axl
rule: {[{[{{[{{any_Cx_sh_sh_axl_m {[{hh} {l} {b} {z} {v} {w} {ch} {dh} {g} {d} {zh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_axl_m {[{hh} {l} {b} {z} {v} {w} {ch} {dh} {g} {d} {zh}]}}}]}}]} {[{axl} {[{[{{any_Cx_sh_sh_axl_m {[{hh} {l} {b} {z} {v} {w} {ch} {dh} {g} {d} {zh}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_axl_m {[{hh} {l} {b} {z} {v} {w} {ch} {dh} {g} {d} {zh}]}}}]}]}]}]}
Closing rule:
guard: p
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {p}]}} {{[{p} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_axl_p {[{z} {v} {ch} {d} {zh} {dh} {g} {l} {b} {hh} {m} {w}]}}} {p}]}} {{[{p} {{any_Cx_sh_axl_p {[{z} {v} {ch} {d} {zh} {dh} {g} {l} {b} {hh} {m} {w}]}}}]}}]} {sil}]}

parse: err = Parser error
ruleAligned = [{{ae 0} [{0 1} {2 1} {3 1} {4 1}]} {{n 1} [{2 2} {3 2} {4 2}]} {{ax 0} [{0 3} {2 3} {3 3} {4 3}]} {{m 0} [{0 4} {2 4} {3 4} {4 4}]} {{axl 2} [{0 5} {2 5}]}]

results (after rule-alignment) =
{72 [{sil 73 73} {ae 117 138} {n 139 139} {ax 143 147} {m 149 154} {axl 156 175} {sil 176 176}]}
{80 []}
{91 [{sil 0 0} {ae 16 36} {n 37 41} {ax 42 45} {m 46 54} {axl 55 74} {sil 75 75}]}
{105 [{sil 0 0} {ae 18 37} {n 38 42} {ax 43 46} {m 47 52} {l 53 73} {sh 74 74} {sil 77 77}]}
{125 [{sil 3 3} {ae 19 38} {n 39 42} {ax 42 47} {m 48 54} {l 54 74} {sh 74 74} {sil 77 77}]}

timeAligned = [{{ae 19 36} [{2 1} {3 1} {4 1}]} {{n 39 41} [{2 2} {3 2} {4 2}]} {{ax 43 45} [{2 3} {3 3} {4 3}]} {{m 48 52} [{2 4} {3 4} {4 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 36
i, iTime, newITime, timeStartFrom = 2 1 2 41
i, iTime, newITime, timeStartFrom = 3 2 3 45
i, iTime, newITime, timeStartFrom = 4 3 -1 52
combinedVerdict    = [{ae 0} {n 1} {ax 0} {m 0} {axl 2}]
ruleAlignedVerdict = [{ae 0} {n 1} {ax 0} {m 0} {axl 2}]

score->
+1 for ae
+1 for n
+1 for ax
+1 for m
-1 for axl
score<-: 3

results =
{72 [{sil 73 83} {ae 84 99} {n 100 102} {ih 103 105} {m 106 110} {ax 111 113} {l 114 126} {sil 127 162}]}
{80 []}
{91 [{sil 0 14} {ae 15 33} {n 34 37} {ih 38 40} {m 41 47} {ax 48 50} {l 51 67} {sil 68 115}]}
{105 [{sil 0 18} {ae 19 39} {n 40 43} {ih 44 47} {m 48 55} {ax 56 58} {l 59 78} {sil 79 138}]}
{125 [{sil 3 23} {ae 24 48} {n 49 52} {ih 53 56} {m 57 67} {ax 68 70} {l 71 93} {sil 94 162}]}

normalised results =
{72 [{sil 73 83} {ae 117 138} {n 139 139} {ih 143 143} {m 147 153} {ax 154 154} {l 158 175} {sil 176 225}]}
{80 []}
{91 [{sil 0 14} {ae 16 36} {n 37 41} {ih 42 42} {m 45 52} {ax 53 53} {l 56 74} {sil 75 126}]}
{105 [{sil 0 18} {ae 18 37} {n 38 41} {ih 42 45} {m 46 52} {ax 53 53} {l 56 74} {sil 75 131}]}
{125 [{sil 3 23} {ae 19 38} {n 39 42} {ih 42 45} {m 46 54} {ax 54 54} {l 57 74} {sil 75 130}]}

Mapped result =
result 0 =
start: 0 end: 0 phonemeFound: false
start: 1 end: 1 phonemeFound: true
start: 2 end: 2 phonemeFound: true
start: 3 end: 3 phonemeFound: true
start: 4 end: 4 phonemeFound: true
start: 5 end: 5 phonemeFound: true
start: 6 end: 6 phonemeFound: true
start: 7 end: 7 phonemeFound: false
result 1 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 2 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 3 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 4 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false

Rules =
rule 0 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Vx_ae_z_p_noSlide {[{ax} {oh} {ah} {ih} {uw} {y} {ao} {eh} {uh} {aa} {iy}]}}}]} {[{{any_Vx_ae_z_p_noSlide {[{ax} {oh} {ah} {ih} {uw} {y} {ao} {eh} {uh} {aa} {iy}]}}} {z}]}]}} {{[{[{z} {{any_Cx_ae_z_p {[{m} {v} {b} {d} {hh} {l} {w} {dh} {ch} {zh} {g}]}}}]} {[{{any_Cx_ae_z_p {[{m} {v} {b} {d} {hh} {l} {w} {dh} {ch} {zh} {g}]}}} {z}]}]}}]}}
Phoneme rule:
guard: sh phoneme: ae
rule: {[{[{[{{[{{any_Vx_sh_p_z_ae_noSlide {[{ax} {oh} {ao} {uh} {y} {ih} {iy} {uw} {aa} {ah} {eh}]}}} {sh}]}} {{[{sh} {{any_Vx_sh_p_z_ae_noSlide {[{ax} {oh} {ao} {uh} {y} {ih} {iy} {uw} {aa} {ah} {eh}]}}}]}}]} {[{{[{{any_Cx_sh_p_z_n {[{w} {m} {v} {zh} {dh} {hh} {b} {ch} {d} {g} {l}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_p_z_n {[{w} {m} {v} {zh} {dh} {hh} {b} {ch} {d} {g} {l}]}}}]}}]}]} {[{ae} {[{[{{any_Vx_sh_p_z_ae_noSlide {[{ax} {oh} {ao} {uh} {y} {ih} {iy} {uw} {aa} {ah} {eh}]}}} {sh}]} {[{sh} {{any_Vx_sh_p_z_ae_noSlide {[{ax} {oh} {ao} {uh} {y} {ih} {iy} {uw} {aa} {ah} {eh}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: n
rule: {[{[{{[{{any_Cx_sh_sh_n {[{hh} {l} {zh} {v} {w} {ch} {d} {dh} {g} {b} {m} {z}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_n {[{hh} {l} {zh} {v} {w} {ch} {d} {dh} {g} {b} {m} {z}]}}}]}}]} {[{n} {[{[{{any_Cx_sh_sh_n {[{hh} {l} {zh} {v} {w} {ch} {d} {dh} {g} {b} {m} {z}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_n {[{hh} {l} {zh} {v} {w} {ch} {d} {dh} {g} {b} {m} {z}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ih
rule: {[{[{[{{[{{any_Vx_sh_sh_ih_noSlide {[{ah} {ax} {oh} {uw} {aa} {ae} {iy} {uh} {y} {ao} {eh}]}}} {sh}]}} {{[{sh} {{any_Vx_sh_sh_ih_noSlide {[{ah} {ax} {oh} {uw} {aa} {ae} {iy} {uh} {y} {ao} {eh}]}}}]}}]} {[{{[{{any_Cx_sh_sh_m_n {[{ch} {v} {b} {dh} {w} {g} {zh} {d} {hh} {z} {l}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_m_n {[{ch} {v} {b} {dh} {w} {g} {zh} {d} {hh} {z} {l}]}}}]}}]}]} {[{ih} {[{[{{any_Vx_sh_sh_ih_noSlide {[{ah} {ax} {oh} {uw} {aa} {ae} {iy} {uh} {y} {ao} {eh}]}}} {sh}]} {[{sh} {{any_Vx_sh_sh_ih_noSlide {[{ah} {ax} {oh} {uw} {aa} {ae} {iy} {uh} {y} {ao} {eh}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: m
rule: {[{[{{[{{any_Cx_sh_sh_m_ax {[{z} {b} {d} {g} {hh} {l} {ch} {dh} {v} {w} {zh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_m_ax {[{z} {b} {d} {g} {hh} {l} {ch} {dh} {v} {w} {zh}]}}}]}}]} {[{m} {[{[{{any_Cx_sh_sh_m_ax {[{z} {b} {d} {g} {hh} {l} {ch} {dh} {v} {w} {zh}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_m_ax {[{z} {b} {d} {g} {hh} {l} {ch} {dh} {v} {w} {zh}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ax
rule: {[{[{{[{{any_Cx_sh_sh_ax_m {[{b} {dh} {hh} {v} {g} {l} {w} {zh} {ch} {d} {z}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_ax_m {[{b} {dh} {hh} {v} {g} {l} {w} {zh} {ch} {d} {z}]}}}]}}]} {[{ax} {[{[{{any_Cx_sh_sh_ax_l_m {[{d} {dh} {hh} {v} {z} {zh} {b} {ch} {w} {g}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_ax_l_m {[{d} {dh} {hh} {v} {z} {zh} {b} {ch} {w} {g}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: l
rule: {[{[{{[{{any_Cx_sh_sh_l_ax {[{d} {hh} {ch} {m} {b} {dh} {g} {w} {z} {v} {zh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_l_ax {[{d} {hh} {ch} {m} {b} {dh} {g} {w} {z} {v} {zh}]}}}]}}]} {[{l} {[{[{{any_Cx_sh_sh_l_ax {[{d} {hh} {ch} {m} {b} {dh} {g} {w} {z} {v} {zh}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_l_ax {[{d} {hh} {ch} {m} {b} {dh} {g} {w} {z} {v} {zh}]}}}]}]}]}]}
Closing rule:
guard: w
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {w}]}} {{[{w} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_l_w {[{zh} {b} {g} {d} {hh} {dh} {m} {ch} {v} {z}]}}} {w}]}} {{[{w} {{any_Cx_sh_l_w {[{zh} {b} {g} {d} {hh} {dh} {m} {ch} {v} {z}]}}}]}}]} {sil}]}
rule 1 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Vx_ae_z_p_noSlide {[{eh} {oh} {ao} {ih} {uh} {ah} {ax} {iy} {uw} {aa} {y}]}}}]} {[{{any_Vx_ae_z_p_noSlide {[{eh} {oh} {ao} {ih} {uh} {ah} {ax} {iy} {uw} {aa} {y}]}}} {z}]}]}} {{[{[{z} {{any_Cx_ae_z_p {[{g} {hh} {v} {zh} {dh} {d} {m} {ch} {l} {b} {w}]}}}]} {[{{any_Cx_ae_z_p {[{g} {hh} {v} {zh} {dh} {d} {m} {ch} {l} {b} {w}]}}} {z}]}]}}]}}
Phoneme rule:
guard: zh phoneme: ae
rule: {[{[{[{{[{{any_Vx_zh_p_z_ae_noSlide {[{oh} {uw} {ih} {uh} {aa} {ax} {iy} {y} {ah} {ao} {eh}]}}} {zh}]}} {{[{zh} {{any_Vx_zh_p_z_ae_noSlide {[{oh} {uw} {ih} {uh} {aa} {ax} {iy} {y} {ah} {ao} {eh}]}}}]}}]} {[{{[{{any_Cx_zh_p_z_n {[{l} {v} {d} {g} {w} {ch} {dh} {m} {hh} {b}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_p_z_n {[{l} {v} {d} {g} {w} {ch} {dh} {m} {hh} {b}]}}}]}}]}]} {[{ae} {[{[{{any_Vx_zh_p_z_ae_noSlide {[{oh} {uw} {ih} {uh} {aa} {ax} {iy} {y} {ah} {ao} {eh}]}}} {zh}]} {[{zh} {{any_Vx_zh_p_z_ae_noSlide {[{oh} {uw} {ih} {uh} {aa} {ax} {iy} {y} {ah} {ao} {eh}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: n
rule: {[{[{{[{{any_Cx_sh_zh_n {[{ch} {dh} {m} {w} {hh} {z} {d} {g} {l} {v} {b}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_zh_n {[{ch} {dh} {m} {w} {hh} {z} {d} {g} {l} {v} {b}]}}}]}}]} {[{n} {[{[{{any_Cx_sh_zh_n {[{ch} {dh} {m} {w} {hh} {z} {d} {g} {l} {v} {b}]}}} {sh}]} {[{sh} {{any_Cx_sh_zh_n {[{ch} {dh} {m} {w} {hh} {z} {d} {g} {l} {v} {b}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ih
rule: {[{[{[{{[{{any_Vx_sh_sh_ih_noSlide {[{uw} {aa} {ae} {ao} {ax} {oh} {uh} {y} {ah} {eh} {iy}]}}} {sh}]}} {{[{sh} {{any_Vx_sh_sh_ih_noSlide {[{uw} {aa} {ae} {ao} {ax} {oh} {uh} {y} {ah} {eh} {iy}]}}}]}}]} {[{{[{{any_Cx_sh_sh_m_n {[{l} {v} {ch} {b} {dh} {zh} {hh} {w} {z} {d} {g}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_m_n {[{l} {v} {ch} {b} {dh} {zh} {hh} {w} {z} {d} {g}]}}}]}}]}]} {[{ih} {[{[{{any_Vx_sh_sh_ih_noSlide {[{uw} {aa} {ae} {ao} {ax} {oh} {uh} {y} {ah} {eh} {iy}]}}} {sh}]} {[{sh} {{any_Vx_sh_sh_ih_noSlide {[{uw} {aa} {ae} {ao} {ax} {oh} {uh} {y} {ah} {eh} {iy}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: m
rule: {[{[{{[{{any_Cx_sh_sh_m_ax {[{w} {z} {v} {ch} {g} {b} {zh} {hh} {d} {dh} {l}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_m_ax {[{w} {z} {v} {ch} {g} {b} {zh} {hh} {d} {dh} {l}]}}}]}}]} {[{m} {[{[{{any_Cx_sh_sh_m_ax {[{w} {z} {v} {ch} {g} {b} {zh} {hh} {d} {dh} {l}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_m_ax {[{w} {z} {v} {ch} {g} {b} {zh} {hh} {d} {dh} {l}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ax
rule: {[{[{{[{{any_Cx_sh_sh_ax_m {[{b} {v} {w} {d} {ch} {dh} {hh} {zh} {g} {l} {z}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_ax_m {[{b} {v} {w} {d} {ch} {dh} {hh} {zh} {g} {l} {z}]}}}]}}]} {[{ax} {[{[{{any_Cx_sh_sh_ax_l_m {[{z} {hh} {w} {g} {d} {ch} {dh} {b} {v} {zh}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_ax_l_m {[{z} {hh} {w} {g} {d} {ch} {dh} {b} {v} {zh}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: l
rule: {[{[{{[{{any_Cx_sh_sh_l_ax {[{w} {b} {d} {hh} {m} {dh} {v} {ch} {z} {zh} {g}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_l_ax {[{w} {b} {d} {hh} {m} {dh} {v} {ch} {z} {zh} {g}]}}}]}}]} {[{l} {[{[{{any_Cx_sh_sh_l_ax {[{w} {b} {d} {hh} {m} {dh} {v} {ch} {z} {zh} {g}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_l_ax {[{w} {b} {d} {hh} {m} {dh} {v} {ch} {z} {zh} {g}]}}}]}]}]}]}
Closing rule:
guard: w
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {w}]}} {{[{w} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_l_w {[{v} {z} {hh} {d} {g} {m} {dh} {ch} {b} {zh}]}}} {w}]}} {{[{w} {{any_Cx_sh_l_w {[{v} {z} {hh} {d} {g} {m} {dh} {ch} {b} {zh}]}}}]}}]} {sil}]}
rule 2 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Vx_ae_z_p_noSlide {[{aa} {ah} {uh} {ao} {iy} {oh} {uw} {ih} {y} {ax} {eh}]}}}]} {[{{any_Vx_ae_z_p_noSlide {[{aa} {ah} {uh} {ao} {iy} {oh} {uw} {ih} {y} {ax} {eh}]}}} {z}]}]}} {{[{[{z} {{any_Cx_ae_z_p {[{l} {zh} {g} {hh} {m} {w} {ch} {d} {v} {b} {dh}]}}}]} {[{{any_Cx_ae_z_p {[{l} {zh} {g} {hh} {m} {w} {ch} {d} {v} {b} {dh}]}}} {z}]}]}}]}}
Phoneme rule:
guard: zh phoneme: ae
rule: {[{[{[{{[{{any_Vx_zh_p_z_ae_noSlide {[{aa} {uw} {ax} {iy} {y} {ao} {ih} {oh} {uh} {ah} {eh}]}}} {zh}]}} {{[{zh} {{any_Vx_zh_p_z_ae_noSlide {[{aa} {uw} {ax} {iy} {y} {ao} {ih} {oh} {uh} {ah} {eh}]}}}]}}]} {[{{[{{any_Cx_zh_p_z_n {[{ch} {d} {dh} {m} {v} {w} {g} {hh} {l} {b}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_p_z_n {[{ch} {d} {dh} {m} {v} {w} {g} {hh} {l} {b}]}}}]}}]}]} {[{ae} {[{[{{any_Vx_zh_p_z_ae_noSlide {[{aa} {uw} {ax} {iy} {y} {ao} {ih} {oh} {uh} {ah} {eh}]}}} {zh}]} {[{zh} {{any_Vx_zh_p_z_ae_noSlide {[{aa} {uw} {ax} {iy} {y} {ao} {ih} {oh} {uh} {ah} {eh}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: n
rule: {[{[{{[{{any_Cx_sh_zh_n {[{d} {g} {z} {v} {b} {dh} {hh} {m} {w} {ch} {l}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_zh_n {[{d} {g} {z} {v} {b} {dh} {hh} {m} {w} {ch} {l}]}}}]}}]} {[{n} {[{[{{any_Cx_sh_zh_n {[{d} {g} {z} {v} {b} {dh} {hh} {m} {w} {ch} {l}]}}} {sh}]} {[{sh} {{any_Cx_sh_zh_n {[{d} {g} {z} {v} {b} {dh} {hh} {m} {w} {ch} {l}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ih
rule: {[{[{[{{[{{any_Vx_sh_sh_ih_noSlide {[{uh} {ax} {eh} {ao} {iy} {oh} {uw} {y} {aa} {ae} {ah}]}}} {sh}]}} {{[{sh} {{any_Vx_sh_sh_ih_noSlide {[{uh} {ax} {eh} {ao} {iy} {oh} {uw} {y} {aa} {ae} {ah}]}}}]}}]} {[{{[{{any_Cx_sh_sh_m_n {[{zh} {hh} {w} {g} {v} {dh} {l} {b} {d} {z} {ch}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_m_n {[{zh} {hh} {w} {g} {v} {dh} {l} {b} {d} {z} {ch}]}}}]}}]}]} {[{ih} {[{[{{any_Vx_sh_sh_ih_noSlide {[{uh} {ax} {eh} {ao} {iy} {oh} {uw} {y} {aa} {ae} {ah}]}}} {sh}]} {[{sh} {{any_Vx_sh_sh_ih_noSlide {[{uh} {ax} {eh} {ao} {iy} {oh} {uw} {y} {aa} {ae} {ah}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: m
rule: {[{[{{[{{any_Cx_sh_sh_m_ax {[{zh} {l} {d} {w} {ch} {dh} {v} {z} {g} {hh} {b}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_m_ax {[{zh} {l} {d} {w} {ch} {dh} {v} {z} {g} {hh} {b}]}}}]}}]} {[{m} {[{[{{any_Cx_sh_sh_m_ax {[{zh} {l} {d} {w} {ch} {dh} {v} {z} {g} {hh} {b}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_m_ax {[{zh} {l} {d} {w} {ch} {dh} {v} {z} {g} {hh} {b}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ax
rule: {[{[{{[{{any_Cx_sh_sh_ax_m {[{v} {ch} {d} {l} {dh} {g} {w} {b} {hh} {z} {zh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_ax_m {[{v} {ch} {d} {l} {dh} {g} {w} {b} {hh} {z} {zh}]}}}]}}]} {[{ax} {[{[{{any_Cx_sh_sh_ax_l_m {[{z} {w} {b} {zh} {g} {d} {hh} {v} {ch} {dh}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_ax_l_m {[{z} {w} {b} {zh} {g} {d} {hh} {v} {ch} {dh}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: l
rule: {[{[{{[{{any_Cx_sh_sh_l_ax {[{b} {w} {ch} {d} {g} {hh} {v} {m} {z} {dh} {zh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_l_ax {[{b} {w} {ch} {d} {g} {hh} {v} {m} {z} {dh} {zh}]}}}]}}]} {[{l} {[{[{{any_Cx_sh_sh_l_ax {[{b} {w} {ch} {d} {g} {hh} {v} {m} {z} {dh} {zh}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_l_ax {[{b} {w} {ch} {d} {g} {hh} {v} {m} {z} {dh} {zh}]}}}]}]}]}]}
Closing rule:
guard: thr
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {thr}]}} {{[{thr} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_l_thr {[{zh} {hh} {m} {b} {d} {g} {dh} {w} {v} {ch} {z}]}}} {thr}]}} {{[{thr} {{any_Cx_sh_l_thr {[{zh} {hh} {m} {b} {d} {g} {dh} {w} {v} {ch} {z}]}}}]}}]} {sil}]}
rule 3 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Vx_ae_z_p_noSlide {[{aa} {ah} {eh} {uh} {iy} {oh} {ao} {ax} {ih} {uw} {y}]}}}]} {[{{any_Vx_ae_z_p_noSlide {[{aa} {ah} {eh} {uh} {iy} {oh} {ao} {ax} {ih} {uw} {y}]}}} {z}]}]}} {{[{[{z} {{any_Cx_ae_z_p {[{d} {g} {l} {v} {w} {m} {ch} {b} {hh} {zh} {dh}]}}}]} {[{{any_Cx_ae_z_p {[{d} {g} {l} {v} {w} {m} {ch} {b} {hh} {zh} {dh}]}}} {z}]}]}}]}}
Phoneme rule:
guard: sh phoneme: ae
rule: {[{[{[{{[{{any_Vx_sh_p_z_ae_noSlide {[{eh} {ih} {iy} {aa} {uw} {uh} {ah} {ax} {oh} {ao} {y}]}}} {sh}]}} {{[{sh} {{any_Vx_sh_p_z_ae_noSlide {[{eh} {ih} {iy} {aa} {uw} {uh} {ah} {ax} {oh} {ao} {y}]}}}]}}]} {[{{[{{any_Cx_sh_p_z_n {[{ch} {zh} {dh} {v} {g} {m} {l} {d} {b} {hh} {w}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_p_z_n {[{ch} {zh} {dh} {v} {g} {m} {l} {d} {b} {hh} {w}]}}}]}}]}]} {[{ae} {[{[{{any_Vx_sh_p_z_ae_noSlide {[{eh} {ih} {iy} {aa} {uw} {uh} {ah} {ax} {oh} {ao} {y}]}}} {sh}]} {[{sh} {{any_Vx_sh_p_z_ae_noSlide {[{eh} {ih} {iy} {aa} {uw} {uh} {ah} {ax} {oh} {ao} {y}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: n
rule: {[{[{{[{{any_Cx_sh_sh_n {[{w} {zh} {b} {d} {hh} {z} {ch} {dh} {l} {v} {g} {m}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_n {[{w} {zh} {b} {d} {hh} {z} {ch} {dh} {l} {v} {g} {m}]}}}]}}]} {[{n} {[{[{{any_Cx_sh_sh_n {[{w} {zh} {b} {d} {hh} {z} {ch} {dh} {l} {v} {g} {m}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_n {[{w} {zh} {b} {d} {hh} {z} {ch} {dh} {l} {v} {g} {m}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ih
rule: {[{[{[{{[{{any_Vx_sh_sh_ih_noSlide {[{uh} {ae} {ah} {ax} {iy} {oh} {y} {aa} {ao} {eh} {uw}]}}} {sh}]}} {{[{sh} {{any_Vx_sh_sh_ih_noSlide {[{uh} {ae} {ah} {ax} {iy} {oh} {y} {aa} {ao} {eh} {uw}]}}}]}}]} {[{{[{{any_Cx_sh_sh_m_n {[{ch} {l} {hh} {v} {b} {w} {zh} {d} {z} {g} {dh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_m_n {[{ch} {l} {hh} {v} {b} {w} {zh} {d} {z} {g} {dh}]}}}]}}]}]} {[{ih} {[{[{{any_Vx_sh_sh_ih_noSlide {[{uh} {ae} {ah} {ax} {iy} {oh} {y} {aa} {ao} {eh} {uw}]}}} {sh}]} {[{sh} {{any_Vx_sh_sh_ih_noSlide {[{uh} {ae} {ah} {ax} {iy} {oh} {y} {aa} {ao} {eh} {uw}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: m
rule: {[{[{{[{{any_Cx_sh_sh_m_ax {[{zh} {z} {v} {ch} {d} {w} {b} {l} {dh} {hh} {g}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_m_ax {[{zh} {z} {v} {ch} {d} {w} {b} {l} {dh} {hh} {g}]}}}]}}]} {[{m} {[{[{{any_Cx_sh_sh_m_ax {[{zh} {z} {v} {ch} {d} {w} {b} {l} {dh} {hh} {g}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_m_ax {[{zh} {z} {v} {ch} {d} {w} {b} {l} {dh} {hh} {g}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ax
rule: {[{[{{[{{any_Cx_sh_sh_ax_m {[{hh} {g} {b} {v} {z} {ch} {d} {l} {w} {zh} {dh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_ax_m {[{hh} {g} {b} {v} {z} {ch} {d} {l} {w} {zh} {dh}]}}}]}}]} {[{ax} {[{[{{any_Cx_sh_sh_ax_l_m {[{dh} {z} {b} {ch} {d} {g} {hh} {w} {v} {zh}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_ax_l_m {[{dh} {z} {b} {ch} {d} {g} {hh} {w} {v} {zh}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: l
rule: {[{[{{[{{any_Cx_sh_sh_l_ax {[{b} {m} {d} {g} {hh} {z} {dh} {v} {ch} {w} {zh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_l_ax {[{b} {m} {d} {g} {hh} {z} {dh} {v} {ch} {w} {zh}]}}}]}}]} {[{l} {[{[{{any_Cx_sh_sh_l_ax {[{b} {m} {d} {g} {hh} {z} {dh} {v} {ch} {w} {zh}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_l_ax {[{b} {m} {d} {g} {hh} {z} {dh} {v} {ch} {w} {zh}]}}}]}]}]}]}
Closing rule:
guard: d
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {d}]}} {{[{d} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_l_d {[{dh} {g} {m} {ch} {v} {b} {w} {z} {hh} {zh}]}}} {d}]}} {{[{d} {{any_Cx_sh_l_d {[{dh} {g} {m} {ch} {v} {b} {w} {z} {hh} {zh}]}}}]}}]} {sil}]}
rule 4 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Vx_ae_z_p_noSlide {[{aa} {ih} {uw} {ah} {ao} {ax} {uh} {y} {iy} {eh} {oh}]}}}]} {[{{any_Vx_ae_z_p_noSlide {[{aa} {ih} {uw} {ah} {ao} {ax} {uh} {y} {iy} {eh} {oh}]}}} {z}]}]}} {{[{[{z} {{any_Cx_ae_z_p {[{zh} {dh} {g} {hh} {ch} {b} {m} {l} {w} {d} {v}]}}}]} {[{{any_Cx_ae_z_p {[{zh} {dh} {g} {hh} {ch} {b} {m} {l} {w} {d} {v}]}}} {z}]}]}}]}}
Phoneme rule:
guard: zh phoneme: ae
rule: {[{[{[{{[{{any_Vx_zh_p_z_ae_noSlide {[{iy} {aa} {ih} {ax} {eh} {y} {ah} {ao} {oh} {uw} {uh}]}}} {zh}]}} {{[{zh} {{any_Vx_zh_p_z_ae_noSlide {[{iy} {aa} {ih} {ax} {eh} {y} {ah} {ao} {oh} {uw} {uh}]}}}]}}]} {[{{[{{any_Cx_zh_p_z_n {[{g} {ch} {hh} {b} {w} {dh} {l} {m} {d} {v}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_p_z_n {[{g} {ch} {hh} {b} {w} {dh} {l} {m} {d} {v}]}}}]}}]}]} {[{ae} {[{[{{any_Vx_zh_p_z_ae_noSlide {[{iy} {aa} {ih} {ax} {eh} {y} {ah} {ao} {oh} {uw} {uh}]}}} {zh}]} {[{zh} {{any_Vx_zh_p_z_ae_noSlide {[{iy} {aa} {ih} {ax} {eh} {y} {ah} {ao} {oh} {uw} {uh}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: n
rule: {[{[{{[{{any_Cx_sh_zh_n {[{w} {dh} {ch} {m} {v} {b} {g} {hh} {z} {d} {l}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_zh_n {[{w} {dh} {ch} {m} {v} {b} {g} {hh} {z} {d} {l}]}}}]}}]} {[{n} {[{[{{any_Cx_sh_zh_n {[{w} {dh} {ch} {m} {v} {b} {g} {hh} {z} {d} {l}]}}} {sh}]} {[{sh} {{any_Cx_sh_zh_n {[{w} {dh} {ch} {m} {v} {b} {g} {hh} {z} {d} {l}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ih
rule: {[{[{[{{[{{any_Vx_sh_sh_ih_noSlide {[{ao} {ax} {iy} {uw} {uh} {y} {aa} {ah} {oh} {ae} {eh}]}}} {sh}]}} {{[{sh} {{any_Vx_sh_sh_ih_noSlide {[{ao} {ax} {iy} {uw} {uh} {y} {aa} {ah} {oh} {ae} {eh}]}}}]}}]} {[{{[{{any_Cx_sh_sh_m_n {[{dh} {hh} {ch} {z} {v} {zh} {b} {g} {w} {l} {d}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_m_n {[{dh} {hh} {ch} {z} {v} {zh} {b} {g} {w} {l} {d}]}}}]}}]}]} {[{ih} {[{[{{any_Vx_sh_sh_ih_noSlide {[{ao} {ax} {iy} {uw} {uh} {y} {aa} {ah} {oh} {ae} {eh}]}}} {sh}]} {[{sh} {{any_Vx_sh_sh_ih_noSlide {[{ao} {ax} {iy} {uw} {uh} {y} {aa} {ah} {oh} {ae} {eh}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: m
rule: {[{[{{[{{any_Cx_sh_sh_m_ax {[{dh} {hh} {l} {ch} {v} {d} {b} {g} {zh} {z} {w}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_m_ax {[{dh} {hh} {l} {ch} {v} {d} {b} {g} {zh} {z} {w}]}}}]}}]} {[{m} {[{[{{any_Cx_sh_sh_m_ax {[{dh} {hh} {l} {ch} {v} {d} {b} {g} {zh} {z} {w}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_m_ax {[{dh} {hh} {l} {ch} {v} {d} {b} {g} {zh} {z} {w}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ax
rule: {[{[{{[{{any_Cx_sh_sh_ax_m {[{g} {ch} {v} {dh} {z} {zh} {d} {w} {b} {l} {hh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_ax_m {[{g} {ch} {v} {dh} {z} {zh} {d} {w} {b} {l} {hh}]}}}]}}]} {[{ax} {[{[{{any_Cx_sh_sh_ax_l_m {[{d} {g} {hh} {z} {w} {zh} {b} {v} {ch} {dh}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_ax_l_m {[{d} {g} {hh} {z} {w} {zh} {b} {v} {ch} {dh}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: l
rule: {[{[{{[{{any_Cx_sh_sh_l_ax {[{w} {ch} {d} {dh} {hh} {zh} {v} {b} {g} {m} {z}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_l_ax {[{w} {ch} {d} {dh} {hh} {zh} {v} {b} {g} {m} {z}]}}}]}}]} {[{l} {[{[{{any_Cx_sh_sh_l_ax {[{w} {ch} {d} {dh} {hh} {zh} {v} {b} {g} {m} {z}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_l_ax {[{w} {ch} {d} {dh} {hh} {zh} {v} {b} {g} {m} {z}]}}}]}]}]}]}
Closing rule:
guard: r
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {r}]}} {{[{r} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_l_r {[{w} {d} {v} {zh} {g} {m} {b} {ch} {z} {dh} {hh}]}}} {r}]}} {{[{r} {{any_Cx_sh_l_r {[{w} {d} {v} {zh} {g} {m} {b} {ch} {z} {dh} {hh}]}}}]}}]} {sil}]}

parse: err = Parser error
ruleAligned = [{{ae 0} [{0 1} {2 1} {3 1} {4 1}]} {{n 1} [{2 2} {3 2} {4 2}]} {{ih 2} [{3 3} {4 3}]} {{m 0} [{0 4} {2 4} {3 4} {4 4}]} {{ax 2} []} {{l 0} [{0 6} {2 6} {3 6} {4 6}]}]

results (after rule-alignment) =
{72 [{sil 73 73} {ae 117 138} {n 139 139} {ih 143 143} {m 147 153} {ax 154 154} {l 158 175} {sil 176 176}]}
{80 []}
{91 [{sil 0 0} {ae 16 36} {n 37 41} {ih 42 42} {m 45 52} {ax 53 53} {l 56 74} {sil 75 75}]}
{105 [{sil 0 0} {ae 18 37} {n 38 41} {ih 42 45} {m 46 52} {ax 53 53} {l 56 74} {sil 75 75}]}
{125 [{sil 3 3} {ae 19 38} {n 39 42} {ih 42 45} {m 46 54} {ax 54 54} {l 57 74} {sil 75 75}]}

timeAligned = [{{ae 19 36} [{2 1} {3 1} {4 1}]} {{n 39 41} [{2 2} {3 2} {4 2}]} {{m 46 52} [{2 4} {3 4} {4 4}]} {{l 57 74} [{2 6} {3 6} {4 6}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 36
i, iTime, newITime, timeStartFrom = 2 1 -1 41
i, iTime, newITime, timeStartFrom = 3 1 2 41
i, iTime, newITime, timeStartFrom = 4 2 -1 52
i, iTime, newITime, timeStartFrom = 5 2 3 52
combinedVerdict    = [{ae 0} {n 1} {ih 2} {m 0} {ax 2} {l 0}]
ruleAlignedVerdict = [{ae 0} {n 1} {ih 2} {m 0} {ax 2} {l 0}]

score->
+1 for ae
+1 for n
-1 for ih
+1 for m
-1 for ax
+1 for l
score<-: 2

results =
{72 [{sil 73 83} {ae 84 99} {n 100 102} {ih 103 105} {m 106 111} {axl 112 126} {sil 127 162}]}
{80 []}
{91 [{sil 0 14} {ae 15 33} {n 34 37} {ih 38 40} {m 41 49} {axl 50 67} {sil 68 115}]}
{105 [{sil 0 18} {ae 19 39} {n 40 43} {ih 44 47} {m 48 55} {l 56 77} {sh 78 80} {sil 81 138}]}
{125 [{sil 3 23} {ae 24 48} {n 49 52} {ih 53 56} {m 57 67} {l 68 92} {sh 93 95} {sil 96 162}]}

normalised results =
{72 [{sil 73 83} {ae 117 138} {n 139 139} {ih 143 143} {m 147 154} {axl 156 175} {sil 176 225}]}
{80 []}
{91 [{sil 0 14} {ae 16 36} {n 37 41} {ih 42 42} {m 45 54} {axl 55 74} {sil 75 126}]}
{105 [{sil 0 18} {ae 18 37} {n 38 41} {ih 42 45} {m 46 52} {l 53 73} {sh 74 74} {sil 77 131}]}
{125 [{sil 3 23} {ae 19 38} {n 39 42} {ih 42 45} {m 46 54} {l 54 74} {sh 74 74} {sil 77 130}]}

Mapped result =
result 0 =
start: 0 end: 0 phonemeFound: false
start: 1 end: 1 phonemeFound: true
start: 2 end: 2 phonemeFound: true
start: 3 end: 3 phonemeFound: true
start: 4 end: 4 phonemeFound: true
start: 5 end: 5 phonemeFound: true
start: 6 end: 6 phonemeFound: false
result 1 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 2 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 3 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 4 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false

Rules =
rule 0 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Vx_ae_z_p_noSlide {[{aa} {ah} {ih} {oh} {uh} {eh} {y} {ao} {iy} {uw} {ax}]}}}]} {[{{any_Vx_ae_z_p_noSlide {[{aa} {ah} {ih} {oh} {uh} {eh} {y} {ao} {iy} {uw} {ax}]}}} {z}]}]}} {{[{[{z} {{any_Cx_ae_z_p {[{d} {ch} {zh} {b} {dh} {m} {w} {g} {v} {hh} {l}]}}}]} {[{{any_Cx_ae_z_p {[{d} {ch} {zh} {b} {dh} {m} {w} {g} {v} {hh} {l}]}}} {z}]}]}}]}}
Phoneme rule:
guard: sh phoneme: ae
rule: {[{[{[{{[{{any_Vx_sh_p_z_ae_noSlide {[{uh} {ah} {ax} {eh} {uw} {y} {aa} {ih} {iy} {oh} {ao}]}}} {sh}]}} {{[{sh} {{any_Vx_sh_p_z_ae_noSlide {[{uh} {ah} {ax} {eh} {uw} {y} {aa} {ih} {iy} {oh} {ao}]}}}]}}]} {[{{[{{any_Cx_sh_p_z_n {[{d} {dh} {w} {b} {g} {m} {v} {zh} {hh} {ch} {l}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_p_z_n {[{d} {dh} {w} {b} {g} {m} {v} {zh} {hh} {ch} {l}]}}}]}}]}]} {[{ae} {[{[{{any_Vx_sh_p_z_ae_noSlide {[{uh} {ah} {ax} {eh} {uw} {y} {aa} {ih} {iy} {oh} {ao}]}}} {sh}]} {[{sh} {{any_Vx_sh_p_z_ae_noSlide {[{uh} {ah} {ax} {eh} {uw} {y} {aa} {ih} {iy} {oh} {ao}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: n
rule: {[{[{{[{{any_Cx_sh_sh_n {[{dh} {ch} {d} {m} {w} {hh} {v} {l} {b} {zh} {g} {z}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_n {[{dh} {ch} {d} {m} {w} {hh} {v} {l} {b} {zh} {g} {z}]}}}]}}]} {[{n} {[{[{{any_Cx_sh_sh_n {[{dh} {ch} {d} {m} {w} {hh} {v} {l} {b} {zh} {g} {z}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_n {[{dh} {ch} {d} {m} {w} {hh} {v} {l} {b} {zh} {g} {z}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ih
rule: {[{[{[{{[{{any_Vx_sh_sh_ih_noSlide {[{uw} {uh} {ae} {ax} {eh} {iy} {oh} {y} {aa} {ah} {ao}]}}} {sh}]}} {{[{sh} {{any_Vx_sh_sh_ih_noSlide {[{uw} {uh} {ae} {ax} {eh} {iy} {oh} {y} {aa} {ah} {ao}]}}}]}}]} {[{{[{{any_Cx_sh_sh_m_n {[{g} {d} {dh} {hh} {z} {b} {ch} {l} {zh} {v} {w}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_m_n {[{g} {d} {dh} {hh} {z} {b} {ch} {l} {zh} {v} {w}]}}}]}}]}]} {[{ih} {[{[{{any_Vx_sh_sh_ih_noSlide {[{uw} {uh} {ae} {ax} {eh} {iy} {oh} {y} {aa} {ah} {ao}]}}} {sh}]} {[{sh} {{any_Vx_sh_sh_ih_noSlide {[{uw} {uh} {ae} {ax} {eh} {iy} {oh} {y} {aa} {ah} {ao}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: m
rule: {[{[{{[{{any_Cx_sh_sh_m {[{g} {b} {dh} {hh} {v} {l} {w} {d} {zh} {ch} {z}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_m {[{g} {b} {dh} {hh} {v} {l} {w} {d} {zh} {ch} {z}]}}}]}}]} {[{m} {[{[{{any_Cx_sh_sh_m_axl {[{l} {v} {b} {d} {w} {g} {hh} {dh} {zh} {ch} {z}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_m_axl {[{l} {v} {b} {d} {w} {g} {hh} {dh} {zh} {ch} {z}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: axl
rule: {[{[{{[{{any_Cx_sh_sh_axl_m {[{z} {b} {v} {d} {w} {l} {hh} {dh} {g} {zh} {ch}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_axl_m {[{z} {b} {v} {d} {w} {l} {hh} {dh} {g} {zh} {ch}]}}}]}}]} {[{axl} {[{[{{any_Cx_sh_sh_axl_m {[{z} {b} {v} {d} {w} {l} {hh} {dh} {g} {zh} {ch}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_axl_m {[{z} {b} {v} {d} {w} {l} {hh} {dh} {g} {zh} {ch}]}}}]}]}]}]}
Closing rule:
guard: n
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {n}]}} {{[{n} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_axl_n {[{l} {zh} {ch} {hh} {m} {v} {z} {b} {dh} {g} {d} {w}]}}} {n}]}} {{[{n} {{any_Cx_sh_axl_n {[{l} {zh} {ch} {hh} {m} {v} {z} {b} {dh} {g} {d} {w}]}}}]}}]} {sil}]}
rule 1 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Vx_ae_z_p_noSlide {[{aa} {eh} {uw} {y} {ah} {ao} {ax} {iy} {oh} {ih} {uh}]}}}]} {[{{any_Vx_ae_z_p_noSlide {[{aa} {eh} {uw} {y} {ah} {ao} {ax} {iy} {oh} {ih} {uh}]}}} {z}]}]}} {{[{[{z} {{any_Cx_ae_z_p {[{b} {zh} {d} {g} {m} {ch} {dh} {hh} {w} {v} {l}]}}}]} {[{{any_Cx_ae_z_p {[{b} {zh} {d} {g} {m} {ch} {dh} {hh} {w} {v} {l}]}}} {z}]}]}}]}}
Phoneme rule:
guard: sh phoneme: ae
rule: {[{[{[{{[{{any_Vx_sh_p_z_ae_noSlide {[{ih} {aa} {ax} {iy} {y} {ah} {ao} {eh} {uw} {oh} {uh}]}}} {sh}]}} {{[{sh} {{any_Vx_sh_p_z_ae_noSlide {[{ih} {aa} {ax} {iy} {y} {ah} {ao} {eh} {uw} {oh} {uh}]}}}]}}]} {[{{[{{any_Cx_sh_p_z_n {[{v} {zh} {l} {b} {d} {hh} {m} {ch} {w} {dh} {g}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_p_z_n {[{v} {zh} {l} {b} {d} {hh} {m} {ch} {w} {dh} {g}]}}}]}}]}]} {[{ae} {[{[{{any_Vx_sh_p_z_ae_noSlide {[{ih} {aa} {ax} {iy} {y} {ah} {ao} {eh} {uw} {oh} {uh}]}}} {sh}]} {[{sh} {{any_Vx_sh_p_z_ae_noSlide {[{ih} {aa} {ax} {iy} {y} {ah} {ao} {eh} {uw} {oh} {uh}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: n
rule: {[{[{{[{{any_Cx_sh_sh_n {[{d} {z} {zh} {g} {v} {w} {m} {dh} {hh} {b} {l} {ch}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_n {[{d} {z} {zh} {g} {v} {w} {m} {dh} {hh} {b} {l} {ch}]}}}]}}]} {[{n} {[{[{{any_Cx_sh_sh_n {[{d} {z} {zh} {g} {v} {w} {m} {dh} {hh} {b} {l} {ch}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_n {[{d} {z} {zh} {g} {v} {w} {m} {dh} {hh} {b} {l} {ch}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ih
rule: {[{[{[{{[{{any_Vx_sh_sh_ih_noSlide {[{ao} {uw} {aa} {ae} {ah} {ax} {eh} {iy} {oh} {uh} {y}]}}} {sh}]}} {{[{sh} {{any_Vx_sh_sh_ih_noSlide {[{ao} {uw} {aa} {ae} {ah} {ax} {eh} {iy} {oh} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_sh_m_n {[{b} {l} {w} {d} {dh} {ch} {hh} {zh} {g} {v} {z}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_m_n {[{b} {l} {w} {d} {dh} {ch} {hh} {zh} {g} {v} {z}]}}}]}}]}]} {[{ih} {[{[{{any_Vx_sh_sh_ih_noSlide {[{ao} {uw} {aa} {ae} {ah} {ax} {eh} {iy} {oh} {uh} {y}]}}} {sh}]} {[{sh} {{any_Vx_sh_sh_ih_noSlide {[{ao} {uw} {aa} {ae} {ah} {ax} {eh} {iy} {oh} {uh} {y}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: m
rule: {[{[{{[{{any_Cx_sh_sh_m {[{g} {v} {z} {l} {ch} {hh} {w} {b} {dh} {zh} {d}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_m {[{g} {v} {z} {l} {ch} {hh} {w} {b} {dh} {zh} {d}]}}}]}}]} {[{m} {[{[{{any_Cx_sh_sh_m_axl {[{b} {z} {dh} {hh} {v} {w} {zh} {ch} {g} {l} {d}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_m_axl {[{b} {z} {dh} {hh} {v} {w} {zh} {ch} {g} {l} {d}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: axl
rule: {[{[{{[{{any_Cx_sh_sh_axl_m {[{zh} {ch} {dh} {w} {v} {z} {l} {b} {d} {g} {hh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_axl_m {[{zh} {ch} {dh} {w} {v} {z} {l} {b} {d} {g} {hh}]}}}]}}]} {[{axl} {[{[{{any_Cx_sh_sh_axl_m {[{zh} {ch} {dh} {w} {v} {z} {l} {b} {d} {g} {hh}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_axl_m {[{zh} {ch} {dh} {w} {v} {z} {l} {b} {d} {g} {hh}]}}}]}]}]}]}
Closing rule:
guard: thr
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {thr}]}} {{[{thr} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_axl_thr {[{v} {dh} {g} {l} {zh} {hh} {w} {z} {b} {d} {ch} {m}]}}} {thr}]}} {{[{thr} {{any_Cx_sh_axl_thr {[{v} {dh} {g} {l} {zh} {hh} {w} {z} {b} {d} {ch} {m}]}}}]}}]} {sil}]}
rule 2 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Vx_ae_z_p_noSlide {[{iy} {y} {eh} {oh} {aa} {ah} {uw} {ao} {ax} {ih} {uh}]}}}]} {[{{any_Vx_ae_z_p_noSlide {[{iy} {y} {eh} {oh} {aa} {ah} {uw} {ao} {ax} {ih} {uh}]}}} {z}]}]}} {{[{[{z} {{any_Cx_ae_z_p {[{m} {v} {zh} {b} {dh} {g} {w} {d} {ch} {l} {hh}]}}}]} {[{{any_Cx_ae_z_p {[{m} {v} {zh} {b} {dh} {g} {w} {d} {ch} {l} {hh}]}}} {z}]}]}}]}}
Phoneme rule:
guard: zh phoneme: ae
rule: {[{[{[{{[{{any_Vx_zh_p_z_ae_noSlide {[{ah} {ih} {aa} {ax} {iy} {oh} {uw} {ao} {eh} {uh} {y}]}}} {zh}]}} {{[{zh} {{any_Vx_zh_p_z_ae_noSlide {[{ah} {ih} {aa} {ax} {iy} {oh} {uw} {ao} {eh} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_zh_p_z_n {[{v} {d} {m} {l} {b} {ch} {w} {g} {dh} {hh}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_p_z_n {[{v} {d} {m} {l} {b} {ch} {w} {g} {dh} {hh}]}}}]}}]}]} {[{ae} {[{[{{any_Vx_zh_p_z_ae_noSlide {[{ah} {ih} {aa} {ax} {iy} {oh} {uw} {ao} {eh} {uh} {y}]}}} {zh}]} {[{zh} {{any_Vx_zh_p_z_ae_noSlide {[{ah} {ih} {aa} {ax} {iy} {oh} {uw} {ao} {eh} {uh} {y}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: n
rule: {[{[{{[{{any_Cx_sh_zh_n {[{w} {z} {d} {dh} {b} {l} {m} {ch} {hh} {v} {g}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_zh_n {[{w} {z} {d} {dh} {b} {l} {m} {ch} {hh} {v} {g}]}}}]}}]} {[{n} {[{[{{any_Cx_sh_zh_n {[{w} {z} {d} {dh} {b} {l} {m} {ch} {hh} {v} {g}]}}} {sh}]} {[{sh} {{any_Cx_sh_zh_n {[{w} {z} {d} {dh} {b} {l} {m} {ch} {hh} {v} {g}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ih
rule: {[{[{[{{[{{any_Vx_sh_sh_ih_noSlide {[{uh} {aa} {ao} {ax} {iy} {oh} {uw} {y} {ae} {ah} {eh}]}}} {sh}]}} {{[{sh} {{any_Vx_sh_sh_ih_noSlide {[{uh} {aa} {ao} {ax} {iy} {oh} {uw} {y} {ae} {ah} {eh}]}}}]}}]} {[{{[{{any_Cx_sh_sh_m_n {[{v} {l} {g} {zh} {w} {z} {b} {d} {hh} {ch} {dh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_m_n {[{v} {l} {g} {zh} {w} {z} {b} {d} {hh} {ch} {dh}]}}}]}}]}]} {[{ih} {[{[{{any_Vx_sh_sh_ih_noSlide {[{uh} {aa} {ao} {ax} {iy} {oh} {uw} {y} {ae} {ah} {eh}]}}} {sh}]} {[{sh} {{any_Vx_sh_sh_ih_noSlide {[{uh} {aa} {ao} {ax} {iy} {oh} {uw} {y} {ae} {ah} {eh}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: m
rule: {[{[{{[{{any_Cx_sh_sh_m {[{dh} {b} {hh} {w} {g} {v} {z} {ch} {d} {l} {zh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_m {[{dh} {b} {hh} {w} {g} {v} {z} {ch} {d} {l} {zh}]}}}]}}]} {[{m} {[{[{{any_Cx_sh_sh_m_axl {[{w} {z} {v} {hh} {dh} {g} {l} {d} {zh} {b} {ch}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_m_axl {[{w} {z} {v} {hh} {dh} {g} {l} {d} {zh} {b} {ch}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: axl
rule: {[{[{{[{{any_Cx_sh_sh_axl_m {[{zh} {dh} {g} {hh} {d} {w} {z} {l} {b} {ch} {v}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_axl_m {[{zh} {dh} {g} {hh} {d} {w} {z} {l} {b} {ch} {v}]}}}]}}]} {[{axl} {[{[{{any_Cx_sh_sh_axl_m {[{zh} {dh} {g} {hh} {d} {w} {z} {l} {b} {ch} {v}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_axl_m {[{zh} {dh} {g} {hh} {d} {w} {z} {l} {b} {ch} {v}]}}}]}]}]}]}
Closing rule:
guard: p
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {p}]}} {{[{p} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_axl_p {[{g} {l} {b} {dh} {z} {zh} {ch} {m} {v} {w} {d} {hh}]}}} {p}]}} {{[{p} {{any_Cx_sh_axl_p {[{g} {l} {b} {dh} {z} {zh} {ch} {m} {v} {w} {d} {hh}]}}}]}}]} {sil}]}
rule 3 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Vx_ae_z_p_noSlide {[{iy} {aa} {ax} {ih} {uw} {y} {ao} {eh} {oh} {uh} {ah}]}}}]} {[{{any_Vx_ae_z_p_noSlide {[{iy} {aa} {ax} {ih} {uw} {y} {ao} {eh} {oh} {uh} {ah}]}}} {z}]}]}} {{[{[{z} {{any_Cx_ae_z_p {[{hh} {w} {g} {zh} {ch} {dh} {l} {v} {d} {m} {b}]}}}]} {[{{any_Cx_ae_z_p {[{hh} {w} {g} {zh} {ch} {dh} {l} {v} {d} {m} {b}]}}} {z}]}]}}]}}
Phoneme rule:
guard: zh phoneme: ae
rule: {[{[{[{{[{{any_Vx_zh_p_z_ae_noSlide {[{y} {ao} {ax} {eh} {aa} {ah} {ih} {oh} {uh} {iy} {uw}]}}} {zh}]}} {{[{zh} {{any_Vx_zh_p_z_ae_noSlide {[{y} {ao} {ax} {eh} {aa} {ah} {ih} {oh} {uh} {iy} {uw}]}}}]}}]} {[{{[{{any_Cx_zh_p_z_n {[{l} {b} {w} {ch} {d} {hh} {v} {dh} {g} {m}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_p_z_n {[{l} {b} {w} {ch} {d} {hh} {v} {dh} {g} {m}]}}}]}}]}]} {[{ae} {[{[{{any_Vx_zh_p_z_ae_noSlide {[{y} {ao} {ax} {eh} {aa} {ah} {ih} {oh} {uh} {iy} {uw}]}}} {zh}]} {[{zh} {{any_Vx_zh_p_z_ae_noSlide {[{y} {ao} {ax} {eh} {aa} {ah} {ih} {oh} {uh} {iy} {uw}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: n
rule: {[{[{{[{{any_Cx_sh_zh_n {[{w} {z} {ch} {d} {l} {dh} {hh} {v} {g} {b} {m}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_zh_n {[{w} {z} {ch} {d} {l} {dh} {hh} {v} {g} {b} {m}]}}}]}}]} {[{n} {[{[{{any_Cx_sh_zh_n {[{w} {z} {ch} {d} {l} {dh} {hh} {v} {g} {b} {m}]}}} {sh}]} {[{sh} {{any_Cx_sh_zh_n {[{w} {z} {ch} {d} {l} {dh} {hh} {v} {g} {b} {m}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ih
rule: {[{[{[{{[{{any_Vx_sh_sh_ih_noSlide {[{uw} {ae} {iy} {ax} {eh} {oh} {uh} {y} {aa} {ah} {ao}]}}} {sh}]}} {{[{sh} {{any_Vx_sh_sh_ih_noSlide {[{uw} {ae} {iy} {ax} {eh} {oh} {uh} {y} {aa} {ah} {ao}]}}}]}}]} {[{{[{{any_Cx_sh_sh_m_n {[{b} {ch} {l} {z} {d} {hh} {w} {zh} {v} {dh} {g}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_m_n {[{b} {ch} {l} {z} {d} {hh} {w} {zh} {v} {dh} {g}]}}}]}}]}]} {[{ih} {[{[{{any_Vx_sh_sh_ih_noSlide {[{uw} {ae} {iy} {ax} {eh} {oh} {uh} {y} {aa} {ah} {ao}]}}} {sh}]} {[{sh} {{any_Vx_sh_sh_ih_noSlide {[{uw} {ae} {iy} {ax} {eh} {oh} {uh} {y} {aa} {ah} {ao}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: m
rule: {[{[{{[{{any_Cx_sh_sh_m {[{d} {v} {zh} {dh} {z} {g} {ch} {w} {hh} {l} {b}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_m {[{d} {v} {zh} {dh} {z} {g} {ch} {w} {hh} {l} {b}]}}}]}}]} {[{m} {[{[{{any_Cx_sh_sh_m_axl {[{dh} {hh} {v} {z} {l} {ch} {w} {zh} {b} {d} {g}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_m_axl {[{dh} {hh} {v} {z} {l} {ch} {w} {zh} {b} {d} {g}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: axl
rule: {[{[{{[{{any_Cx_sh_sh_axl_m {[{zh} {hh} {g} {v} {b} {dh} {w} {ch} {z} {d} {l}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_axl_m {[{zh} {hh} {g} {v} {b} {dh} {w} {ch} {z} {d} {l}]}}}]}}]} {[{axl} {[{[{{any_Cx_sh_sh_axl_m {[{zh} {hh} {g} {v} {b} {dh} {w} {ch} {z} {d} {l}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_axl_m {[{zh} {hh} {g} {v} {b} {dh} {w} {ch} {z} {d} {l}]}}}]}]}]}]}
Closing rule:
guard: thr
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {thr}]}} {{[{thr} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_axl_thr {[{d} {g} {v} {zh} {dh} {m} {w} {b} {ch} {z} {hh} {l}]}}} {thr}]}} {{[{thr} {{any_Cx_sh_axl_thr {[{d} {g} {v} {zh} {dh} {m} {w} {b} {ch} {z} {hh} {l}]}}}]}}]} {sil}]}
rule 4 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Vx_ae_z_p_noSlide {[{ax} {eh} {y} {ah} {ih} {iy} {oh} {uw} {ao} {aa} {uh}]}}}]} {[{{any_Vx_ae_z_p_noSlide {[{ax} {eh} {y} {ah} {ih} {iy} {oh} {uw} {ao} {aa} {uh}]}}} {z}]}]}} {{[{[{z} {{any_Cx_ae_z_p {[{v} {w} {hh} {dh} {ch} {zh} {g} {d} {l} {m} {b}]}}}]} {[{{any_Cx_ae_z_p {[{v} {w} {hh} {dh} {ch} {zh} {g} {d} {l} {m} {b}]}}} {z}]}]}}]}}
Phoneme rule:
guard: sh phoneme: ae
rule: {[{[{[{{[{{any_Vx_sh_p_z_ae_noSlide {[{aa} {ah} {ih} {iy} {y} {eh} {uh} {ao} {ax} {oh} {uw}]}}} {sh}]}} {{[{sh} {{any_Vx_sh_p_z_ae_noSlide {[{aa} {ah} {ih} {iy} {y} {eh} {uh} {ao} {ax} {oh} {uw}]}}}]}}]} {[{{[{{any_Cx_sh_p_z_n {[{b} {g} {l} {v} {ch} {d} {hh} {zh} {dh} {m} {w}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_p_z_n {[{b} {g} {l} {v} {ch} {d} {hh} {zh} {dh} {m} {w}]}}}]}}]}]} {[{ae} {[{[{{any_Vx_sh_p_z_ae_noSlide {[{aa} {ah} {ih} {iy} {y} {eh} {uh} {ao} {ax} {oh} {uw}]}}} {sh}]} {[{sh} {{any_Vx_sh_p_z_ae_noSlide {[{aa} {ah} {ih} {iy} {y} {eh} {uh} {ao} {ax} {oh} {uw}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: n
rule: {[{[{{[{{any_Cx_sh_sh_n {[{ch} {l} {hh} {m} {d} {v} {w} {b} {zh} {g} {dh} {z}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_n {[{ch} {l} {hh} {m} {d} {v} {w} {b} {zh} {g} {dh} {z}]}}}]}}]} {[{n} {[{[{{any_Cx_sh_sh_n {[{ch} {l} {hh} {m} {d} {v} {w} {b} {zh} {g} {dh} {z}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_n {[{ch} {l} {hh} {m} {d} {v} {w} {b} {zh} {g} {dh} {z}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ih
rule: {[{[{[{{[{{any_Vx_sh_sh_ih_noSlide {[{ao} {ax} {eh} {uw} {y} {aa} {ae} {ah} {iy} {oh} {uh}]}}} {sh}]}} {{[{sh} {{any_Vx_sh_sh_ih_noSlide {[{ao} {ax} {eh} {uw} {y} {aa} {ae} {ah} {iy} {oh} {uh}]}}}]}}]} {[{{[{{any_Cx_sh_sh_m_n {[{b} {g} {ch} {w} {z} {dh} {l} {hh} {zh} {v} {d}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_m_n {[{b} {g} {ch} {w} {z} {dh} {l} {hh} {zh} {v} {d}]}}}]}}]}]} {[{ih} {[{[{{any_Vx_sh_sh_ih_noSlide {[{ao} {ax} {eh} {uw} {y} {aa} {ae} {ah} {iy} {oh} {uh}]}}} {sh}]} {[{sh} {{any_Vx_sh_sh_ih_noSlide {[{ao} {ax} {eh} {uw} {y} {aa} {ae} {ah} {iy} {oh} {uh}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: m
rule: {[{[{{[{{any_Cx_sh_sh_m {[{z} {dh} {w} {b} {l} {v} {g} {zh} {hh} {ch} {d}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_m {[{z} {dh} {w} {b} {l} {v} {g} {zh} {hh} {ch} {d}]}}}]}}]} {[{m} {[{[{{any_Cx_sh_sh_m_axl {[{dh} {w} {ch} {d} {zh} {b} {z} {hh} {g} {l} {v}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_m_axl {[{dh} {w} {ch} {d} {zh} {b} {z} {hh} {g} {l} {v}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: axl
rule: {[{[{{[{{any_Cx_sh_sh_axl_m {[{b} {zh} {l} {g} {hh} {dh} {w} {ch} {v} {d} {z}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_axl_m {[{b} {zh} {l} {g} {hh} {dh} {w} {ch} {v} {d} {z}]}}}]}}]} {[{axl} {[{[{{any_Cx_sh_sh_axl_m {[{b} {zh} {l} {g} {hh} {dh} {w} {ch} {v} {d} {z}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_axl_m {[{b} {zh} {l} {g} {hh} {dh} {w} {ch} {v} {d} {z}]}}}]}]}]}]}
Closing rule:
guard: ng
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {ng}]}} {{[{ng} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_axl_ng {[{ch} {dh} {v} {hh} {m} {d} {z} {b} {zh} {g} {w} {l}]}}} {ng}]}} {{[{ng} {{any_Cx_sh_axl_ng {[{ch} {dh} {v} {hh} {m} {d} {z} {b} {zh} {g} {w} {l}]}}}]}}]} {sil}]}

parse: err = Parser error
ruleAligned = [{{ae 0} [{0 1} {2 1} {3 1} {4 1}]} {{n 1} [{2 2} {3 2} {4 2}]} {{ih 2} [{3 3} {4 3}]} {{m 0} [{0 4} {2 4} {3 4} {4 4}]} {{axl 2} [{0 5} {2 5}]}]

results (after rule-alignment) =
{72 [{sil 73 73} {ae 117 138} {n 139 139} {ih 143 143} {m 147 154} {axl 156 175} {sil 176 176}]}
{80 []}
{91 [{sil 0 0} {ae 16 36} {n 37 41} {ih 42 42} {m 45 54} {axl 55 74} {sil 75 75}]}
{105 [{sil 0 0} {ae 18 37} {n 38 41} {ih 42 45} {m 46 52} {l 53 73} {sh 74 74} {sil 77 77}]}
{125 [{sil 3 3} {ae 19 38} {n 39 42} {ih 42 45} {m 46 54} {l 54 74} {sh 74 74} {sil 77 77}]}

timeAligned = [{{ae 19 36} [{2 1} {3 1} {4 1}]} {{n 39 41} [{2 2} {3 2} {4 2}]} {{m 46 52} [{2 4} {3 4} {4 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 36
i, iTime, newITime, timeStartFrom = 2 1 -1 41
i, iTime, newITime, timeStartFrom = 3 1 2 41
i, iTime, newITime, timeStartFrom = 4 2 -1 52
combinedVerdict    = [{ae 0} {n 1} {ih 2} {m 0} {axl 2}]
ruleAlignedVerdict = [{ae 0} {n 1} {ih 2} {m 0} {axl 2}]

score->
+1 for ae
+1 for n
-1 for ih
+1 for m
-1 for axl
score<-: 1

results =
{72 [{sil 73 83} {ae 84 99} {n 100 102} {axm 103 111} {ax 112 114} {l 115 126} {sil 127 162}]}
{80 []}
{91 [{sil 0 14} {ae 15 33} {n 34 38} {axm 39 46} {ax 47 49} {l 50 67} {sil 68 115}]}
{105 [{sil 0 18} {ae 19 39} {n 40 44} {axm 45 53} {ax 54 56} {l 57 78} {sil 79 138}]}
{125 [{sil 3 23} {ae 24 48} {n 49 53} {axm 54 62} {ax 63 65} {l 66 93} {sil 94 162}]}

normalised results =
{72 [{sil 73 83} {ae 117 138} {n 139 139} {axm 143 154} {ax 156 156} {l 160 175} {sil 176 225}]}
{80 []}
{91 [{sil 0 14} {ae 16 36} {n 37 42} {axm 43 51} {ax 52 52} {l 55 74} {sil 75 126}]}
{105 [{sil 0 18} {ae 18 37} {n 38 42} {axm 43 50} {ax 51 51} {l 54 74} {sil 75 131}]}
{125 [{sil 3 23} {ae 19 38} {n 39 42} {axm 43 50} {ax 50 50} {l 53 74} {sil 75 130}]}

Mapped result =
result 0 =
start: 0 end: 0 phonemeFound: false
start: 1 end: 1 phonemeFound: true
start: 2 end: 2 phonemeFound: true
start: 3 end: 3 phonemeFound: true
start: 4 end: 4 phonemeFound: true
start: 5 end: 5 phonemeFound: true
start: 6 end: 6 phonemeFound: false
result 1 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 2 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 3 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 4 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false

Rules =
rule 0 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Vx_ae_z_p_noSlide {[{uw} {uh} {y} {aa} {ah} {ax} {eh} {ao} {iy} {oh} {ih}]}}}]} {[{{any_Vx_ae_z_p_noSlide {[{uw} {uh} {y} {aa} {ah} {ax} {eh} {ao} {iy} {oh} {ih}]}}} {z}]}]}} {{[{[{z} {{any_Cx_ae_z_p {[{hh} {w} {d} {l} {v} {g} {zh} {b} {m} {ch} {dh}]}}}]} {[{{any_Cx_ae_z_p {[{hh} {w} {d} {l} {v} {g} {zh} {b} {m} {ch} {dh}]}}} {z}]}]}}]}}
Phoneme rule:
guard: zh phoneme: ae
rule: {[{[{[{{[{{any_Vx_zh_p_z_ae_noSlide {[{aa} {ah} {uw} {y} {ih} {iy} {oh} {uh} {ao} {eh} {ax}]}}} {zh}]}} {{[{zh} {{any_Vx_zh_p_z_ae_noSlide {[{aa} {ah} {uw} {y} {ih} {iy} {oh} {uh} {ao} {eh} {ax}]}}}]}}]} {[{{[{{any_Cx_zh_p_z_n {[{dh} {d} {l} {m} {b} {ch} {v} {w} {g} {hh}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_p_z_n {[{dh} {d} {l} {m} {b} {ch} {v} {w} {g} {hh}]}}}]}}]}]} {[{ae} {[{[{{any_Vx_zh_p_z_ae_noSlide {[{aa} {ah} {uw} {y} {ih} {iy} {oh} {uh} {ao} {eh} {ax}]}}} {zh}]} {[{zh} {{any_Vx_zh_p_z_ae_noSlide {[{aa} {ah} {uw} {y} {ih} {iy} {oh} {uh} {ao} {eh} {ax}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: n
rule: {[{[{{[{{any_Cx_sh_zh_n_axm {[{ch} {v} {z} {l} {m} {w} {b} {dh} {d} {g} {hh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_zh_n_axm {[{ch} {v} {z} {l} {m} {w} {b} {dh} {d} {g} {hh}]}}}]}}]} {[{n} {[{[{{any_Cx_sh_zh_n_axm {[{ch} {v} {z} {l} {m} {w} {b} {dh} {d} {g} {hh}]}}} {sh}]} {[{sh} {{any_Cx_sh_zh_n_axm {[{ch} {v} {z} {l} {m} {w} {b} {dh} {d} {g} {hh}]}}}]}]}]}]}
Phoneme rule:
guard: ch phoneme: axm
rule: {[{[{{[{{any_Cx_ch_sh_axm_ax_n {[{b} {z} {l} {m} {dh} {g} {d} {hh} {w} {zh} {v}]}}} {ch}]}} {{[{ch} {{any_Cx_ch_sh_axm_ax_n {[{b} {z} {l} {m} {dh} {g} {d} {hh} {w} {zh} {v}]}}}]}}]} {[{axm} {[{[{{any_Cx_ch_sh_axm_ax_n {[{b} {z} {l} {m} {dh} {g} {d} {hh} {w} {zh} {v}]}}} {ch}]} {[{ch} {{any_Cx_ch_sh_axm_ax_n {[{b} {z} {l} {m} {dh} {g} {d} {hh} {w} {zh} {v}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ax
rule: {[{[{{[{{any_Cx_sh_ch_ax_axm {[{z} {zh} {l} {b} {g} {hh} {v} {m} {d} {w} {dh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_ch_ax_axm {[{z} {zh} {l} {b} {g} {hh} {v} {m} {d} {w} {dh}]}}}]}}]} {[{ax} {[{[{{any_Cx_sh_ch_ax_l_axm {[{d} {dh} {v} {hh} {m} {z} {w} {b} {zh} {g}]}}} {sh}]} {[{sh} {{any_Cx_sh_ch_ax_l_axm {[{d} {dh} {v} {hh} {m} {z} {w} {b} {zh} {g}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: l
rule: {[{[{{[{{any_Cx_sh_sh_l_ax {[{v} {d} {dh} {hh} {w} {zh} {m} {g} {b} {z} {ch}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_l_ax {[{v} {d} {dh} {hh} {w} {zh} {m} {g} {b} {z} {ch}]}}}]}}]} {[{l} {[{[{{any_Cx_sh_sh_l_ax {[{v} {d} {dh} {hh} {w} {zh} {m} {g} {b} {z} {ch}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_l_ax {[{v} {d} {dh} {hh} {w} {zh} {m} {g} {b} {z} {ch}]}}}]}]}]}]}
Closing rule:
guard: r
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {r}]}} {{[{r} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_l_r {[{b} {d} {dh} {g} {zh} {z} {m} {hh} {v} {w} {ch}]}}} {r}]}} {{[{r} {{any_Cx_sh_l_r {[{b} {d} {dh} {g} {zh} {z} {m} {hh} {v} {w} {ch}]}}}]}}]} {sil}]}
rule 1 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Vx_ae_z_p_noSlide {[{ah} {ih} {iy} {uh} {ax} {eh} {oh} {aa} {ao} {uw} {y}]}}}]} {[{{any_Vx_ae_z_p_noSlide {[{ah} {ih} {iy} {uh} {ax} {eh} {oh} {aa} {ao} {uw} {y}]}}} {z}]}]}} {{[{[{z} {{any_Cx_ae_z_p {[{ch} {dh} {w} {d} {m} {v} {hh} {zh} {l} {g} {b}]}}}]} {[{{any_Cx_ae_z_p {[{ch} {dh} {w} {d} {m} {v} {hh} {zh} {l} {g} {b}]}}} {z}]}]}}]}}
Phoneme rule:
guard: sh phoneme: ae
rule: {[{[{[{{[{{any_Vx_sh_p_z_ae_noSlide {[{uw} {uh} {oh} {y} {ih} {iy} {ah} {ao} {ax} {eh} {aa}]}}} {sh}]}} {{[{sh} {{any_Vx_sh_p_z_ae_noSlide {[{uw} {uh} {oh} {y} {ih} {iy} {ah} {ao} {ax} {eh} {aa}]}}}]}}]} {[{{[{{any_Cx_sh_p_z_n {[{hh} {l} {m} {b} {g} {v} {dh} {w} {zh} {ch} {d}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_p_z_n {[{hh} {l} {m} {b} {g} {v} {dh} {w} {zh} {ch} {d}]}}}]}}]}]} {[{ae} {[{[{{any_Vx_sh_p_z_ae_noSlide {[{uw} {uh} {oh} {y} {ih} {iy} {ah} {ao} {ax} {eh} {aa}]}}} {sh}]} {[{sh} {{any_Vx_sh_p_z_ae_noSlide {[{uw} {uh} {oh} {y} {ih} {iy} {ah} {ao} {ax} {eh} {aa}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: n
rule: {[{[{{[{{any_Cx_sh_sh_n_axm {[{l} {v} {w} {ch} {hh} {z} {b} {m} {d} {g} {dh} {zh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_n_axm {[{l} {v} {w} {ch} {hh} {z} {b} {m} {d} {g} {dh} {zh}]}}}]}}]} {[{n} {[{[{{any_Cx_sh_sh_n_axm {[{l} {v} {w} {ch} {hh} {z} {b} {m} {d} {g} {dh} {zh}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_n_axm {[{l} {v} {w} {ch} {hh} {z} {b} {m} {d} {g} {dh} {zh}]}}}]}]}]}]}
Phoneme rule:
guard: ch phoneme: axm
rule: {[{[{{[{{any_Cx_ch_sh_axm_ax_n {[{w} {zh} {hh} {v} {d} {l} {m} {z} {b} {dh} {g}]}}} {ch}]}} {{[{ch} {{any_Cx_ch_sh_axm_ax_n {[{w} {zh} {hh} {v} {d} {l} {m} {z} {b} {dh} {g}]}}}]}}]} {[{axm} {[{[{{any_Cx_ch_sh_axm_ax_n {[{w} {zh} {hh} {v} {d} {l} {m} {z} {b} {dh} {g}]}}} {ch}]} {[{ch} {{any_Cx_ch_sh_axm_ax_n {[{w} {zh} {hh} {v} {d} {l} {m} {z} {b} {dh} {g}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ax
rule: {[{[{{[{{any_Cx_sh_ch_ax_axm {[{v} {g} {l} {m} {b} {d} {w} {zh} {dh} {hh} {z}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_ch_ax_axm {[{v} {g} {l} {m} {b} {d} {w} {zh} {dh} {hh} {z}]}}}]}}]} {[{ax} {[{[{{any_Cx_sh_ch_ax_l_axm {[{b} {w} {d} {zh} {hh} {z} {g} {v} {dh} {m}]}}} {sh}]} {[{sh} {{any_Cx_sh_ch_ax_l_axm {[{b} {w} {d} {zh} {hh} {z} {g} {v} {dh} {m}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: l
rule: {[{[{{[{{any_Cx_sh_sh_l_ax {[{g} {zh} {b} {m} {w} {d} {ch} {dh} {v} {hh} {z}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_l_ax {[{g} {zh} {b} {m} {w} {d} {ch} {dh} {v} {hh} {z}]}}}]}}]} {[{l} {[{[{{any_Cx_sh_sh_l_ax {[{g} {zh} {b} {m} {w} {d} {ch} {dh} {v} {hh} {z}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_l_ax {[{g} {zh} {b} {m} {w} {d} {ch} {dh} {v} {hh} {z}]}}}]}]}]}]}
Closing rule:
guard: r
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {r}]}} {{[{r} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_l_r {[{g} {m} {d} {dh} {hh} {z} {v} {zh} {b} {w} {ch}]}}} {r}]}} {{[{r} {{any_Cx_sh_l_r {[{g} {m} {d} {dh} {hh} {z} {v} {zh} {b} {w} {ch}]}}}]}}]} {sil}]}
rule 2 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Vx_ae_z_p_noSlide {[{ao} {uh} {ax} {eh} {ih} {iy} {oh} {aa} {ah} {uw} {y}]}}}]} {[{{any_Vx_ae_z_p_noSlide {[{ao} {uh} {ax} {eh} {ih} {iy} {oh} {aa} {ah} {uw} {y}]}}} {z}]}]}} {{[{[{z} {{any_Cx_ae_z_p {[{dh} {g} {v} {w} {hh} {zh} {l} {ch} {d} {m} {b}]}}}]} {[{{any_Cx_ae_z_p {[{dh} {g} {v} {w} {hh} {zh} {l} {ch} {d} {m} {b}]}}} {z}]}]}}]}}
Phoneme rule:
guard: sh phoneme: ae
rule: {[{[{[{{[{{any_Vx_sh_p_z_ae_noSlide {[{iy} {y} {ah} {ax} {ih} {uh} {aa} {ao} {eh} {oh} {uw}]}}} {sh}]}} {{[{sh} {{any_Vx_sh_p_z_ae_noSlide {[{iy} {y} {ah} {ax} {ih} {uh} {aa} {ao} {eh} {oh} {uw}]}}}]}}]} {[{{[{{any_Cx_sh_p_z_n {[{b} {d} {dh} {hh} {g} {l} {m} {v} {w} {zh} {ch}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_p_z_n {[{b} {d} {dh} {hh} {g} {l} {m} {v} {w} {zh} {ch}]}}}]}}]}]} {[{ae} {[{[{{any_Vx_sh_p_z_ae_noSlide {[{iy} {y} {ah} {ax} {ih} {uh} {aa} {ao} {eh} {oh} {uw}]}}} {sh}]} {[{sh} {{any_Vx_sh_p_z_ae_noSlide {[{iy} {y} {ah} {ax} {ih} {uh} {aa} {ao} {eh} {oh} {uw}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: n
rule: {[{[{{[{{any_Cx_sh_sh_n_axm {[{v} {zh} {g} {dh} {m} {b} {hh} {l} {d} {w} {z} {ch}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_n_axm {[{v} {zh} {g} {dh} {m} {b} {hh} {l} {d} {w} {z} {ch}]}}}]}}]} {[{n} {[{[{{any_Cx_sh_sh_n_axm {[{v} {zh} {g} {dh} {m} {b} {hh} {l} {d} {w} {z} {ch}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_n_axm {[{v} {zh} {g} {dh} {m} {b} {hh} {l} {d} {w} {z} {ch}]}}}]}]}]}]}
Phoneme rule:
guard: ch phoneme: axm
rule: {[{[{{[{{any_Cx_ch_sh_axm_ax_n {[{zh} {d} {b} {dh} {w} {l} {g} {hh} {v} {m} {z}]}}} {ch}]}} {{[{ch} {{any_Cx_ch_sh_axm_ax_n {[{zh} {d} {b} {dh} {w} {l} {g} {hh} {v} {m} {z}]}}}]}}]} {[{axm} {[{[{{any_Cx_ch_sh_axm_ax_n {[{zh} {d} {b} {dh} {w} {l} {g} {hh} {v} {m} {z}]}}} {ch}]} {[{ch} {{any_Cx_ch_sh_axm_ax_n {[{zh} {d} {b} {dh} {w} {l} {g} {hh} {v} {m} {z}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ax
rule: {[{[{{[{{any_Cx_sh_ch_ax_axm {[{g} {m} {b} {zh} {w} {dh} {v} {d} {hh} {l} {z}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_ch_ax_axm {[{g} {m} {b} {zh} {w} {dh} {v} {d} {hh} {l} {z}]}}}]}}]} {[{ax} {[{[{{any_Cx_sh_ch_ax_l_axm {[{b} {w} {zh} {dh} {hh} {g} {m} {z} {d} {v}]}}} {sh}]} {[{sh} {{any_Cx_sh_ch_ax_l_axm {[{b} {w} {zh} {dh} {hh} {g} {m} {z} {d} {v}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: l
rule: {[{[{{[{{any_Cx_sh_sh_l_ax {[{m} {w} {d} {dh} {hh} {v} {b} {zh} {ch} {z} {g}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_l_ax {[{m} {w} {d} {dh} {hh} {v} {b} {zh} {ch} {z} {g}]}}}]}}]} {[{l} {[{[{{any_Cx_sh_sh_l_ax {[{m} {w} {d} {dh} {hh} {v} {b} {zh} {ch} {z} {g}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_l_ax {[{m} {w} {d} {dh} {hh} {v} {b} {zh} {ch} {z} {g}]}}}]}]}]}]}
Closing rule:
guard: d
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {d}]}} {{[{d} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_l_d {[{ch} {dh} {hh} {w} {g} {v} {m} {zh} {z} {b}]}}} {d}]}} {{[{d} {{any_Cx_sh_l_d {[{ch} {dh} {hh} {w} {g} {v} {m} {zh} {z} {b}]}}}]}}]} {sil}]}
rule 3 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Vx_ae_z_p_noSlide {[{aa} {ah} {uh} {ih} {iy} {uw} {y} {ao} {eh} {oh} {ax}]}}}]} {[{{any_Vx_ae_z_p_noSlide {[{aa} {ah} {uh} {ih} {iy} {uw} {y} {ao} {eh} {oh} {ax}]}}} {z}]}]}} {{[{[{z} {{any_Cx_ae_z_p {[{ch} {m} {g} {w} {zh} {d} {b} {hh} {l} {dh} {v}]}}}]} {[{{any_Cx_ae_z_p {[{ch} {m} {g} {w} {zh} {d} {b} {hh} {l} {dh} {v}]}}} {z}]}]}}]}}
Phoneme rule:
guard: sh phoneme: ae
rule: {[{[{[{{[{{any_Vx_sh_p_z_ae_noSlide {[{aa} {ax} {eh} {y} {ah} {ao} {ih} {iy} {oh} {uw} {uh}]}}} {sh}]}} {{[{sh} {{any_Vx_sh_p_z_ae_noSlide {[{aa} {ax} {eh} {y} {ah} {ao} {ih} {iy} {oh} {uw} {uh}]}}}]}}]} {[{{[{{any_Cx_sh_p_z_n {[{dh} {zh} {ch} {g} {m} {hh} {v} {l} {w} {b} {d}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_p_z_n {[{dh} {zh} {ch} {g} {m} {hh} {v} {l} {w} {b} {d}]}}}]}}]}]} {[{ae} {[{[{{any_Vx_sh_p_z_ae_noSlide {[{aa} {ax} {eh} {y} {ah} {ao} {ih} {iy} {oh} {uw} {uh}]}}} {sh}]} {[{sh} {{any_Vx_sh_p_z_ae_noSlide {[{aa} {ax} {eh} {y} {ah} {ao} {ih} {iy} {oh} {uw} {uh}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: n
rule: {[{[{{[{{any_Cx_sh_sh_n_axm {[{d} {w} {zh} {v} {z} {b} {ch} {dh} {hh} {g} {l} {m}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_n_axm {[{d} {w} {zh} {v} {z} {b} {ch} {dh} {hh} {g} {l} {m}]}}}]}}]} {[{n} {[{[{{any_Cx_sh_sh_n_axm {[{d} {w} {zh} {v} {z} {b} {ch} {dh} {hh} {g} {l} {m}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_n_axm {[{d} {w} {zh} {v} {z} {b} {ch} {dh} {hh} {g} {l} {m}]}}}]}]}]}]}
Phoneme rule:
guard: ch phoneme: axm
rule: {[{[{{[{{any_Cx_ch_sh_axm_ax_n {[{b} {dh} {w} {zh} {l} {hh} {g} {m} {z} {d} {v}]}}} {ch}]}} {{[{ch} {{any_Cx_ch_sh_axm_ax_n {[{b} {dh} {w} {zh} {l} {hh} {g} {m} {z} {d} {v}]}}}]}}]} {[{axm} {[{[{{any_Cx_ch_sh_axm_ax_n {[{b} {dh} {w} {zh} {l} {hh} {g} {m} {z} {d} {v}]}}} {ch}]} {[{ch} {{any_Cx_ch_sh_axm_ax_n {[{b} {dh} {w} {zh} {l} {hh} {g} {m} {z} {d} {v}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ax
rule: {[{[{{[{{any_Cx_sh_ch_ax_axm {[{zh} {l} {m} {z} {dh} {g} {b} {w} {v} {d} {hh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_ch_ax_axm {[{zh} {l} {m} {z} {dh} {g} {b} {w} {v} {d} {hh}]}}}]}}]} {[{ax} {[{[{{any_Cx_sh_ch_ax_l_axm {[{dh} {w} {d} {g} {hh} {m} {z} {zh} {b} {v}]}}} {sh}]} {[{sh} {{any_Cx_sh_ch_ax_l_axm {[{dh} {w} {d} {g} {hh} {m} {z} {zh} {b} {v}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: l
rule: {[{[{{[{{any_Cx_sh_sh_l_ax {[{m} {zh} {ch} {g} {d} {dh} {hh} {z} {b} {v} {w}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_l_ax {[{m} {zh} {ch} {g} {d} {dh} {hh} {z} {b} {v} {w}]}}}]}}]} {[{l} {[{[{{any_Cx_sh_sh_l_ax {[{m} {zh} {ch} {g} {d} {dh} {hh} {z} {b} {v} {w}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_l_ax {[{m} {zh} {ch} {g} {d} {dh} {hh} {z} {b} {v} {w}]}}}]}]}]}]}
Closing rule:
guard: f
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {f}]}} {{[{f} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_l_f {[{d} {b} {g} {m} {v} {z} {ch} {zh} {dh} {hh} {w}]}}} {f}]}} {{[{f} {{any_Cx_sh_l_f {[{d} {b} {g} {m} {v} {z} {ch} {zh} {dh} {hh} {w}]}}}]}}]} {sil}]}
rule 4 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Vx_ae_z_p_noSlide {[{oh} {uw} {ah} {uh} {y} {aa} {ax} {eh} {ih} {iy} {ao}]}}}]} {[{{any_Vx_ae_z_p_noSlide {[{oh} {uw} {ah} {uh} {y} {aa} {ax} {eh} {ih} {iy} {ao}]}}} {z}]}]}} {{[{[{z} {{any_Cx_ae_z_p {[{dh} {d} {b} {ch} {g} {hh} {w} {zh} {v} {l} {m}]}}}]} {[{{any_Cx_ae_z_p {[{dh} {d} {b} {ch} {g} {hh} {w} {zh} {v} {l} {m}]}}} {z}]}]}}]}}
Phoneme rule:
guard: sh phoneme: ae
rule: {[{[{[{{[{{any_Vx_sh_p_z_ae_noSlide {[{ax} {uw} {ah} {oh} {eh} {uh} {y} {aa} {ao} {ih} {iy}]}}} {sh}]}} {{[{sh} {{any_Vx_sh_p_z_ae_noSlide {[{ax} {uw} {ah} {oh} {eh} {uh} {y} {aa} {ao} {ih} {iy}]}}}]}}]} {[{{[{{any_Cx_sh_p_z_n {[{g} {w} {l} {m} {v} {dh} {d} {b} {ch} {hh} {zh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_p_z_n {[{g} {w} {l} {m} {v} {dh} {d} {b} {ch} {hh} {zh}]}}}]}}]}]} {[{ae} {[{[{{any_Vx_sh_p_z_ae_noSlide {[{ax} {uw} {ah} {oh} {eh} {uh} {y} {aa} {ao} {ih} {iy}]}}} {sh}]} {[{sh} {{any_Vx_sh_p_z_ae_noSlide {[{ax} {uw} {ah} {oh} {eh} {uh} {y} {aa} {ao} {ih} {iy}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: n
rule: {[{[{{[{{any_Cx_sh_sh_n_axm {[{hh} {m} {b} {d} {v} {w} {g} {l} {z} {ch} {zh} {dh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_n_axm {[{hh} {m} {b} {d} {v} {w} {g} {l} {z} {ch} {zh} {dh}]}}}]}}]} {[{n} {[{[{{any_Cx_sh_sh_n_axm {[{hh} {m} {b} {d} {v} {w} {g} {l} {z} {ch} {zh} {dh}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_n_axm {[{hh} {m} {b} {d} {v} {w} {g} {l} {z} {ch} {zh} {dh}]}}}]}]}]}]}
Phoneme rule:
guard: ch phoneme: axm
rule: {[{[{{[{{any_Cx_ch_sh_axm_ax_n {[{b} {w} {hh} {m} {d} {dh} {v} {l} {zh} {g} {z}]}}} {ch}]}} {{[{ch} {{any_Cx_ch_sh_axm_ax_n {[{b} {w} {hh} {m} {d} {dh} {v} {l} {zh} {g} {z}]}}}]}}]} {[{axm} {[{[{{any_Cx_ch_sh_axm_ax_n {[{b} {w} {hh} {m} {d} {dh} {v} {l} {zh} {g} {z}]}}} {ch}]} {[{ch} {{any_Cx_ch_sh_axm_ax_n {[{b} {w} {hh} {m} {d} {dh} {v} {l} {zh} {g} {z}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ax
rule: {[{[{{[{{any_Cx_sh_ch_ax_axm {[{l} {hh} {m} {w} {z} {b} {v} {d} {dh} {g} {zh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_ch_ax_axm {[{l} {hh} {m} {w} {z} {b} {v} {d} {dh} {g} {zh}]}}}]}}]} {[{ax} {[{[{{any_Cx_sh_ch_ax_l_axm {[{zh} {d} {g} {b} {v} {w} {z} {dh} {hh} {m}]}}} {sh}]} {[{sh} {{any_Cx_sh_ch_ax_l_axm {[{zh} {d} {g} {b} {v} {w} {z} {dh} {hh} {m}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: l
rule: {[{[{{[{{any_Cx_sh_sh_l_ax {[{hh} {ch} {g} {w} {z} {b} {v} {d} {m} {zh} {dh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_l_ax {[{hh} {ch} {g} {w} {z} {b} {v} {d} {m} {zh} {dh}]}}}]}}]} {[{l} {[{[{{any_Cx_sh_sh_l_ax {[{hh} {ch} {g} {w} {z} {b} {v} {d} {m} {zh} {dh}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_l_ax {[{hh} {ch} {g} {w} {z} {b} {v} {d} {m} {zh} {dh}]}}}]}]}]}]}
Closing rule:
guard: r
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {r}]}} {{[{r} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_l_r {[{hh} {v} {d} {dh} {g} {z} {m} {b} {ch} {w} {zh}]}}} {r}]}} {{[{r} {{any_Cx_sh_l_r {[{hh} {v} {d} {dh} {g} {z} {m} {b} {ch} {w} {zh}]}}}]}}]} {sil}]}

parse: err = Parser error
ruleAligned = [{{ae 0} [{0 1} {2 1} {3 1} {4 1}]} {{n 1} [{2 2} {3 2} {4 2}]} {{axm 0} [{0 3} {2 3} {3 3} {4 3}]} {{ax 2} []} {{l 0} [{0 5} {2 5} {3 5} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 73 73} {ae 117 138} {n 139 139} {axm 143 154} {ax 156 156} {l 160 175} {sil 176 176}]}
{80 []}
{91 [{sil 0 0} {ae 16 36} {n 37 42} {axm 43 51} {ax 52 52} {l 55 74} {sil 75 75}]}
{105 [{sil 0 0} {ae 18 37} {n 38 42} {axm 43 50} {ax 51 51} {l 54 74} {sil 75 75}]}
{125 [{sil 3 3} {ae 19 38} {n 39 42} {axm 43 50} {ax 50 50} {l 53 74} {sil 75 75}]}

timeAligned = [{{ae 19 36} [{2 1} {3 1} {4 1}]} {{n 39 42} [{2 2} {3 2} {4 2}]} {{axm 43 50} [{2 3} {3 3} {4 3}]} {{l 55 74} [{2 5} {3 5} {4 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 36
i, iTime, newITime, timeStartFrom = 2 1 2 42
i, iTime, newITime, timeStartFrom = 3 2 -1 50
i, iTime, newITime, timeStartFrom = 4 2 3 50
combinedVerdict    = [{ae 0} {n 1} {axm 0} {ax 2} {l 0}]
ruleAlignedVerdict = [{ae 0} {n 1} {axm 0} {ax 2} {l 0}]

score->
+1 for ae
+1 for n
+1 for axm
-1 for ax
+1 for l
score<-: 3

results =
{72 [{sil 73 83} {ae 84 99} {n 100 102} {axm 103 111} {axl 112 126} {sil 127 162}]}
{80 [{sil 82 84} {ae 85 87} {n 88 90} {axm 91 93} {axl 94 96} {sil 97 101}]}
{91 [{sil 0 14} {ae 15 33} {n 34 38} {axm 39 49} {axl 50 67} {sil 68 115}]}
{105 [{sil 0 18} {ae 19 39} {n 40 44} {axm 45 53} {l 54 77} {sh 78 80} {sil 81 138}]}
{125 [{sil 3 23} {ae 24 48} {n 49 53} {axm 54 61} {l 62 92} {sh 93 95} {sil 96 162}]}

normalised results =
{72 [{sil 73 83} {ae 117 138} {n 139 139} {axm 143 154} {axl 156 175} {sil 176 225}]}
{80 [{sil 82 84} {ae 106 106} {n 110 110} {axm 114 114} {axl 118 118} {sil 121 126}]}
{91 [{sil 0 14} {ae 16 36} {n 37 42} {axm 43 54} {axl 55 74} {sil 75 126}]}
{105 [{sil 0 18} {ae 18 37} {n 38 42} {axm 43 50} {l 51 73} {sh 74 74} {sil 77 131}]}
{125 [{sil 3 23} {ae 19 38} {n 39 42} {axm 43 49} {l 50 74} {sh 74 74} {sil 77 130}]}

ruleAligned = [{{ae 0} [{0 1} {2 1} {3 1} {4 1}]} {{n 1} [{2 2} {3 2} {4 2}]} {{axm 0} [{0 3} {2 3} {3 3} {4 3}]} {{axl 2} [{0 4} {2 4}]}]

results (after rule-alignment) =
{72 [{sil 73 73} {ae 117 138} {n 139 139} {axm 143 154} {axl 156 175} {sil 176 176}]}
{80 [{sil 82 82} {ae 106 106} {n 110 110} {axm 114 114} {axl 118 118} {sil 121 121}]}
{91 [{sil 0 0} {ae 16 36} {n 37 42} {axm 43 54} {axl 55 74} {sil 75 75}]}
{105 [{sil 0 0} {ae 18 37} {n 38 42} {axm 43 50} {l 51 73} {sh 74 74} {sil 77 77}]}
{125 [{sil 3 3} {ae 19 38} {n 39 42} {axm 43 49} {l 50 74} {sh 74 74} {sil 77 77}]}

timeAligned = [{{ae 19 36} [{2 1} {3 1} {4 1}]} {{n 39 42} [{2 2} {3 2} {4 2}]} {{axm 43 49} [{2 3} {3 3} {4 3}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 36
i, iTime, newITime, timeStartFrom = 2 1 2 42
i, iTime, newITime, timeStartFrom = 3 2 -1 49
combinedVerdict    = [{ae 0} {n 1} {axm 0} {axl 2}]
ruleAlignedVerdict = [{ae 0} {n 1} {axm 0} {axl 2}]

score->
+1 for ae
+1 for n
+1 for axm
-1 for axl
score<-: 2
bestResult = {4 [{ae 0} {n 1} {ax 0} {m 0} {ax 2} {l 0}] [ae n ax m ax l]}
testPronounce ae good n possible ax good m good ax missing l good
publish->
phonsToAlphas = [{[ae] a} {[n] n} {[ax] i} {[m] m} {[ax] a} {[l] l}]
getVerdict<-:new {a [ae] 0}
getVerdict<-:new {n [n] 1}
getVerdict<-:new {i [ax] 0}
getVerdict<-:new {m [m] 0}
getVerdict<-:new {a [ax] 2}
getVerdict<-:new {l [l] 0}
lettersVerdicts = [{a [ae] 0} {n [n] 1} {i [ax] 0} {m [m] 0} {a [ax] 2} {l [l] 0}]
publish<-
{
  "results": [
    {
      "letters": "a",
      "phonemes": "æ",
      "verdict": "good"
    },
    {
      "letters": "n",
      "phonemes": "n",
      "verdict": "possible"
    },
    {
      "letters": "i",
      "phonemes": "ə",
      "verdict": "good"
    },
    {
      "letters": "m",
      "phonemes": "m",
      "verdict": "good"
    },
    {
      "letters": "a",
      "phonemes": "ə",
      "verdict": "missing"
    },
    {
      "letters": "l",
      "phonemes": "l",
      "verdict": "good"
    }
  ],
  "err": null
}
