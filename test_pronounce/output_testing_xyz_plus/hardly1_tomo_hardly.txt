
 length of audio =  1.312188



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.26 0.7999999999999999 1.06

 start3, duration3, end3 =  0.26 0.76 1.02

 Initial start, duration, end =  0.16 0.9 1.06

 Cut at: start, duration =  0.16 1.132188     guard_end =  1.292188 

Running scan for frate = 125
Considering guard z with value 1 for hh ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard s with value 8 for aa ...
Considering guard ch with value 8 for aa ...
Considering guard ng with value 8 for aa ...
Considering guard sh with value 8 for aa ...
Considering guard zh with value 8 for aa ...
candidateGuards = map[ch:true ng:true s:true sh:true zh:true]
Picking guard, sh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 125 public <hardly> = (((sil [((iy <any_Cx_hh_iy_b>) | (<any_Cx_hh_iy_b> iy))] [((iy <any_vowel_noSlide>) | (<any_vowel_noSlide> iy))]) | (sil b (sil [((iy <any_Cx_hh_iy_b>) | (<any_Cx_hh_iy_b> iy))] [((iy <any_vowel_noSlide>) | (<any_vowel_noSlide> iy))]))) (([(<any_Cx_z_b_iy_hh> z)] | [(z <any_Cx_z_b_iy_hh>)]) (hh | ((<any_Cx_z_b_iy_hh> z) | (z <any_Cx_z_b_iy_hh>)))) ((([(<any_Vx_sh_z_aa_noSlide> sh)] | [(sh <any_Vx_sh_z_aa_noSlide>)]) ([(<any_Cx_sh_z_d_hh> sh)] | [(sh <any_Cx_sh_z_d_hh>)])) (aa | ((<any_Vx_sh_z_aa_noSlide> sh) | (sh <any_Vx_sh_z_aa_noSlide>)))) (([(<any_Cx_sh_sh_d_l> sh)] | [(sh <any_Cx_sh_sh_d_l>)]) (d | ((<any_Cx_sh_sh_d_l> sh) | (sh <any_Cx_sh_sh_d_l>)))) (([(<any_Cx_sh_sh_l_d> sh)] | [(sh <any_Cx_sh_sh_l_d>)]) (l | ((<any_Cx_sh_sh_l_d> sh) | (sh <any_Cx_sh_sh_l_d>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_iy_n> n)] | [(n <any_Cx_sh_iy_n>)]) ([(<any_Vx_sh_iy_n> n)] | [(n <any_Vx_sh_iy_n>)]) sil))
Running scan for frate = 105
Considering guard z with value 1 for hh ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard s with value 8 for aa ...
Considering guard sh with value 8 for aa ...
Considering guard ng with value 8 for aa ...
Considering guard zh with value 8 for aa ...
Considering guard ch with value 8 for aa ...
candidateGuards = map[ch:true ng:true s:true sh:true zh:true]
Picking guard, s

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 105 public <hardly> = (((sil [((b <any_Cx_hh_b_b>) | (<any_Cx_hh_b_b> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]) | (sil b (sil [((b <any_Cx_hh_b_b>) | (<any_Cx_hh_b_b> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]))) (([(<any_Cx_z_b_b_hh> z)] | [(z <any_Cx_z_b_b_hh>)]) (hh | ((<any_Cx_z_b_b_hh> z) | (z <any_Cx_z_b_b_hh>)))) ((([(<any_Vx_s_z_aa_noSlide> s)] | [(s <any_Vx_s_z_aa_noSlide>)]) ([(<any_Cx_s_z_d_hh> s)] | [(s <any_Cx_s_z_d_hh>)])) (aa | ((<any_Vx_s_z_aa_noSlide> s) | (s <any_Vx_s_z_aa_noSlide>)))) (([(<any_Cx_sh_s_d_l> sh)] | [(sh <any_Cx_sh_s_d_l>)]) (d | ((<any_Cx_sh_s_d_l> sh) | (sh <any_Cx_sh_s_d_l>)))) (([(<any_Cx_sh_sh_l_d> sh)] | [(sh <any_Cx_sh_sh_l_d>)]) (l | ((<any_Cx_sh_sh_l_d> sh) | (sh <any_Cx_sh_sh_l_d>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_iy_thr> thr)] | [(thr <any_Cx_sh_iy_thr>)]) ([(<any_Vx_sh_iy_thr> thr)] | [(thr <any_Vx_sh_iy_thr>)]) sil))
Running scan for frate = 91
Considering guard z with value 1 for hh ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard s with value 8 for aa ...
Considering guard ch with value 8 for aa ...
Considering guard ng with value 8 for aa ...
Considering guard zh with value 8 for aa ...
Considering guard sh with value 8 for aa ...
candidateGuards = map[ch:true ng:true s:true sh:true zh:true]
Picking guard, ng

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 91 public <hardly> = (((sil [((iy <any_Cx_hh_iy_b>) | (<any_Cx_hh_iy_b> iy))] [((iy <any_vowel_noSlide>) | (<any_vowel_noSlide> iy))]) | (sil b (sil [((iy <any_Cx_hh_iy_b>) | (<any_Cx_hh_iy_b> iy))] [((iy <any_vowel_noSlide>) | (<any_vowel_noSlide> iy))]))) (([(<any_Cx_z_b_iy_hh> z)] | [(z <any_Cx_z_b_iy_hh>)]) (hh | ((<any_Cx_z_b_iy_hh> z) | (z <any_Cx_z_b_iy_hh>)))) ((([(<any_Vx_ng_z_aa_noSlide> ng)] | [(ng <any_Vx_ng_z_aa_noSlide>)]) ([(<any_Cx_ng_z_d_hh> ng)] | [(ng <any_Cx_ng_z_d_hh>)])) (aa | ((<any_Vx_ng_z_aa_noSlide> ng) | (ng <any_Vx_ng_z_aa_noSlide>)))) (([(<any_Cx_sh_ng_d_l> sh)] | [(sh <any_Cx_sh_ng_d_l>)]) (d | ((<any_Cx_sh_ng_d_l> sh) | (sh <any_Cx_sh_ng_d_l>)))) (([(<any_Cx_sh_sh_l_d> sh)] | [(sh <any_Cx_sh_sh_l_d>)]) (l | ((<any_Cx_sh_sh_l_d> sh) | (sh <any_Cx_sh_sh_l_d>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_iy_n> n)] | [(n <any_Cx_sh_iy_n>)]) ([(<any_Vx_sh_iy_n> n)] | [(n <any_Vx_sh_iy_n>)]) sil))
Running scan for frate = 80
Considering guard z with value 1 for hh ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard s with value 8 for aa ...
Considering guard zh with value 8 for aa ...
Considering guard sh with value 8 for aa ...
Considering guard ng with value 8 for aa ...
Considering guard ch with value 8 for aa ...
candidateGuards = map[ch:true ng:true s:true sh:true zh:true]
Picking guard, s

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 80 public <hardly> = (((sil [((b <any_Cx_hh_b_b>) | (<any_Cx_hh_b_b> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]) | (sil b (sil [((b <any_Cx_hh_b_b>) | (<any_Cx_hh_b_b> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]))) (([(<any_Cx_z_b_b_hh> z)] | [(z <any_Cx_z_b_b_hh>)]) (hh | ((<any_Cx_z_b_b_hh> z) | (z <any_Cx_z_b_b_hh>)))) ((([(<any_Vx_s_z_aa_noSlide> s)] | [(s <any_Vx_s_z_aa_noSlide>)]) ([(<any_Cx_s_z_d_hh> s)] | [(s <any_Cx_s_z_d_hh>)])) (aa | ((<any_Vx_s_z_aa_noSlide> s) | (s <any_Vx_s_z_aa_noSlide>)))) (([(<any_Cx_sh_s_d_l> sh)] | [(sh <any_Cx_sh_s_d_l>)]) (d | ((<any_Cx_sh_s_d_l> sh) | (sh <any_Cx_sh_s_d_l>)))) (([(<any_Cx_sh_sh_l_d> sh)] | [(sh <any_Cx_sh_sh_l_d>)]) (l | ((<any_Cx_sh_sh_l_d> sh) | (sh <any_Cx_sh_sh_l_d>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_iy_thr> thr)] | [(thr <any_Cx_sh_iy_thr>)]) ([(<any_Vx_sh_iy_thr> thr)] | [(thr <any_Vx_sh_iy_thr>)]) sil))
Running scan for frate = 72
Considering guard z with value 1 for hh ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard sh with value 8 for aa ...
Considering guard zh with value 8 for aa ...
Considering guard s with value 8 for aa ...
Considering guard ng with value 8 for aa ...
Considering guard ch with value 8 for aa ...
candidateGuards = map[ch:true ng:true s:true sh:true zh:true]
Picking guard, sh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 72 public <hardly> = (((sil [((z <any_Cx_hh_z_b>) | (<any_Cx_hh_z_b> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil b (sil [((z <any_Cx_hh_z_b>) | (<any_Cx_hh_z_b> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_z_b_z_hh> z)] | [(z <any_Cx_z_b_z_hh>)]) (hh | ((<any_Cx_z_b_z_hh> z) | (z <any_Cx_z_b_z_hh>)))) ((([(<any_Vx_sh_z_aa_noSlide> sh)] | [(sh <any_Vx_sh_z_aa_noSlide>)]) ([(<any_Cx_sh_z_d_hh> sh)] | [(sh <any_Cx_sh_z_d_hh>)])) (aa | ((<any_Vx_sh_z_aa_noSlide> sh) | (sh <any_Vx_sh_z_aa_noSlide>)))) (([(<any_Cx_sh_sh_d_l> sh)] | [(sh <any_Cx_sh_sh_d_l>)]) (d | ((<any_Cx_sh_sh_d_l> sh) | (sh <any_Cx_sh_sh_d_l>)))) (([(<any_Cx_sh_sh_l_d> sh)] | [(sh <any_Cx_sh_sh_l_d>)]) (l | ((<any_Cx_sh_sh_l_d> sh) | (sh <any_Cx_sh_sh_l_d>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_iy_thr> thr)] | [(thr <any_Cx_sh_iy_thr>)]) ([(<any_Vx_sh_iy_thr> thr)] | [(thr <any_Vx_sh_iy_thr>)]) sil))

results =
{72 [{sil 0 11} {hh 12 20} {aa 21 31} {d 32 34} {sh 35 40} {m 41 43} {iy 44 52} {sil 53 72}]}
{80 [{sil 0 14} {hh 15 22} {aa 23 31} {v 32 37} {sh 38 43} {l 44 46} {iy 47 58} {sil 59 78}]}
{91 [{sil 0 12} {hh 13 25} {aa 26 39} {d 40 42} {sh 43 51} {m 52 54} {iy 55 66} {n 67 69} {g 70 76} {sil 77 101}]}
{105 [{sil 0 20} {hh 21 29} {aa 30 46} {d 47 49} {sh 50 59} {m 60 62} {iy 63 83} {sil 84 118}]}
{125 [{sil 3 27} {hh 28 35} {aa 36 56} {d 57 59} {sh 60 71} {m 72 81} {iy 82 94} {sil 95 141}]}

normalised results =
{72 [{sil 0 11} {hh 17 28} {aa 29 43} {d 44 44} {sh 49 56} {m 57 57} {iy 61 72} {sil 74 100}]}
{80 [{sil 0 14} {hh 19 28} {aa 29 39} {v 40 46} {sh 48 54} {l 55 55} {iy 59 73} {sil 74 98}]}
{91 [{sil 0 12} {hh 14 27} {aa 29 43} {d 44 44} {sh 47 56} {m 57 57} {iy 60 73} {n 74 74} {g 77 84} {sil 85 111}]}
{105 [{sil 0 20} {hh 20 28} {aa 29 44} {d 45 45} {sh 48 56} {m 57 57} {iy 60 79} {sil 80 112}]}
{125 [{sil 3 27} {hh 22 28} {aa 29 45} {d 46 46} {sh 48 57} {m 58 65} {iy 66 75} {sil 76 113}]}

ruleAligned = [{{hh 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{aa 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{d 2} []} {{l 2} []} {{sh 3} [{0 4} {2 4} {3 4} {4 4}]} {{iy 0} [{0 6} {1 6} {2 6} {3 6} {4 6}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {hh 17 28} {aa 29 43} {d 44 44} {sh 49 56} {m 57 57} {iy 61 72} {sil 74 74}]}
{80 [{sil 0 0} {hh 19 28} {aa 29 39} {v 40 46} {sh 48 54} {l 55 55} {iy 59 73} {sil 74 74}]}
{91 [{sil 0 0} {hh 14 27} {aa 29 43} {d 44 44} {sh 47 56} {m 57 57} {iy 60 73} {n 74 74} {g 77 84} {sil 85 85}]}
{105 [{sil 0 0} {hh 20 28} {aa 29 44} {d 45 45} {sh 48 56} {m 57 57} {iy 60 79} {sil 80 80}]}
{125 [{sil 3 3} {hh 22 28} {aa 29 45} {d 46 46} {sh 48 57} {m 58 65} {iy 66 75} {sil 76 76}]}

timeAligned = [{{hh 19 28} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{aa 29 43} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{sh 48 56} [{1 4} {2 4} {3 4} {4 4} {0 4}]} {{iy 60 73} [{1 6} {2 6} {3 6} {0 6} {4 6}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 27
i, iTime, newITime, timeStartFrom = 2 1 -1 39
i, iTime, newITime, timeStartFrom = 3 1 -1 39
i, iTime, newITime, timeStartFrom = 4 1 2 39
i, iTime, newITime, timeStartFrom = 5 2 3 56
combinedVerdict    = [{hh 0} {aa 0} {d 2} {l 2} {sh 3} {iy 0}]
ruleAlignedVerdict = [{hh 0} {aa 0} {d 2} {l 2} {sh 3} {iy 0}]

score->
+1 for hh
+1 for aa
-1 for d
-1 for l
-1 for sh
+1 for iy
score<-: 0
bestResult = {0 [{hh 0} {aa 0} {d 2} {l 2} {sh 3} {iy 0}] [hh aa d l iy]}
testPronounce hh good aa good d missing l missing sh surprise iy good
publish->
phonsToAlphas = [{[hh] h} {[aa] ar} {[d] d} {[l] l} {[iy] y}]
getVerdict<-:new {h [hh] 0}
getVerdict<-:new {ar [aa] 0}
getVerdict<-:new {d [d] 2}
getVerdict<-:new {l [l] 2}
getVerdict<-:new {y [iy] 0}
lettersVerdicts = [{h [hh] 0} {ar [aa] 0} {d [d] 2} {l [l] 2} {sh [sh] 3} {y [iy] 0}]
publish<-
{
  "results": [
    {
      "letters": "h",
      "phonemes": "h",
      "verdict": "good"
    },
    {
      "letters": "ar",
      "phonemes": "ɑ",
      "verdict": "good"
    },
    {
      "letters": "d",
      "phonemes": "d",
      "verdict": "missing"
    },
    {
      "letters": "l",
      "phonemes": "l",
      "verdict": "missing"
    },
    {
      "letters": "sh",
      "phonemes": "ʃ",
      "verdict": "surprise"
    },
    {
      "letters": "y",
      "phonemes": "iː",
      "verdict": "good"
    }
  ],
  "err": null
}
