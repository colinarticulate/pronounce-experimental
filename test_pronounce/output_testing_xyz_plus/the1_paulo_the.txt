
 length of audio =  0.512



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.07999999999999999 0.42000000000000004 0.5

 start3, duration3, end3 =  0.1 0.33999999999999997 0.43999999999999995

 Initial start, duration, end =  0 0.5 0.5

 Cut at: start, duration =  0 0.492     guard_end =  0.492 

Running scan for frate = 125
Running scan for frate = 125
Considering guard zh with value 1 for dh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 3 for dh ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 3 for iy ...
candidateGuards = map[ch:true]
Picking guard, ch


frate, target rule = 125 public <the> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_dh> zh)] | [(zh <any_Cx_zh_p_z_dh>)]) (dh | t | ((<any_Cx_zh_p_z_dh_axr> zh) | (zh <any_Cx_zh_p_z_dh_axr>)))) (([(<any_Cx_zh_zh_axr_dh> zh)] | [(zh <any_Cx_zh_zh_axr_dh>)]) (axr | ((<any_Cx_zh_zh_axr> zh) | (zh <any_Cx_zh_zh_axr>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_p> p)] | [(p <any_Cx_zh_axr_p>)]) sil))

Running scan for frate = 105
frate, target rule = 125 public <the> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ch_p_z_dh> ch)] | [(ch <any_Cx_ch_p_z_dh>)]) (dh | t | ((<any_Cx_ch_p_z_dh> ch) | (ch <any_Cx_ch_p_z_dh>)))) ((([(<any_Vx_ch_ch_iy_noSlide> ch)] | [(ch <any_Vx_ch_ch_iy_noSlide>)]) ([(<any_Cx_ch_ch_dh> ch)] | [(ch <any_Cx_ch_ch_dh>)])) (iy | ((<any_Vx_ch_ch_iy_noSlide> ch) | (ch <any_Vx_ch_ch_iy_noSlide>)))) (([(<any_Cx_ch_iy_f> f)] | [(f <any_Cx_ch_iy_f>)]) ([(<any_Vx_ch_iy_f> f)] | [(f <any_Vx_ch_iy_f>)]) sil))
Running scan for frate = 105
Considering guard zh with value 1 for dh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 3 for dh ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 3 for iy ...
candidateGuards = map[ch:true]
Picking guard, ch



frate, target rule = 105 public <the> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_dh> zh)] | [(zh <any_Cx_zh_p_z_dh>)]) (dh | t | ((<any_Cx_zh_p_z_dh_axr> zh) | (zh <any_Cx_zh_p_z_dh_axr>)))) (([(<any_Cx_zh_zh_axr_dh> zh)] | [(zh <any_Cx_zh_zh_axr_dh>)]) (axr | ((<any_Cx_zh_zh_axr> zh) | (zh <any_Cx_zh_zh_axr>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_hh> hh)] | [(hh <any_Cx_zh_axr_hh>)]) sil))
Running scan for frate = 91
frate, target rule = 105 public <the> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ch_p_z_dh> ch)] | [(ch <any_Cx_ch_p_z_dh>)]) (dh | t | ((<any_Cx_ch_p_z_dh> ch) | (ch <any_Cx_ch_p_z_dh>)))) ((([(<any_Vx_ch_ch_iy_noSlide> ch)] | [(ch <any_Vx_ch_ch_iy_noSlide>)]) ([(<any_Cx_ch_ch_dh> ch)] | [(ch <any_Cx_ch_ch_dh>)])) (iy | ((<any_Vx_ch_ch_iy_noSlide> ch) | (ch <any_Vx_ch_ch_iy_noSlide>)))) (([(<any_Cx_ch_iy_m> m)] | [(m <any_Cx_ch_iy_m>)]) ([(<any_Vx_ch_iy_m> m)] | [(m <any_Vx_ch_iy_m>)]) sil))
Running scan for frate = 91
Considering guard zh with value 1 for dh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 3 for dh ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 3 for iy ...
candidateGuards = map[ch:true]
Picking guard, ch



frate, target rule = 91 public <the> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ch_p_z_dh> ch)] | [(ch <any_Cx_ch_p_z_dh>)]) (dh | t | ((<any_Cx_ch_p_z_dh> ch) | (ch <any_Cx_ch_p_z_dh>)))) ((([(<any_Vx_ch_ch_iy_noSlide> ch)] | [(ch <any_Vx_ch_ch_iy_noSlide>)]) ([(<any_Cx_ch_ch_dh> ch)] | [(ch <any_Cx_ch_ch_dh>)])) (iy | ((<any_Vx_ch_ch_iy_noSlide> ch) | (ch <any_Vx_ch_ch_iy_noSlide>)))) (([(<any_Cx_ch_iy_n> n)] | [(n <any_Cx_ch_iy_n>)]) ([(<any_Vx_ch_iy_n> n)] | [(n <any_Vx_ch_iy_n>)]) sil))
Running scan for frate = 80
frate, target rule = 91 public <the> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_dh> zh)] | [(zh <any_Cx_zh_p_z_dh>)]) (dh | t | ((<any_Cx_zh_p_z_dh_axr> zh) | (zh <any_Cx_zh_p_z_dh_axr>)))) (([(<any_Cx_zh_zh_axr_dh> zh)] | [(zh <any_Cx_zh_zh_axr_dh>)]) (axr | ((<any_Cx_zh_zh_axr> zh) | (zh <any_Cx_zh_zh_axr>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_n> n)] | [(n <any_Cx_zh_axr_n>)]) sil))
Running scan for frate = 80
Considering guard ch with value 3 for dh ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard zh with value 1 for dh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 3 for iy ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh



frate, target rule = 80 public <the> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ch_p_z_dh> ch)] | [(ch <any_Cx_ch_p_z_dh>)]) (dh | t | ((<any_Cx_ch_p_z_dh> ch) | (ch <any_Cx_ch_p_z_dh>)))) ((([(<any_Vx_ch_ch_iy_noSlide> ch)] | [(ch <any_Vx_ch_ch_iy_noSlide>)]) ([(<any_Cx_ch_ch_dh> ch)] | [(ch <any_Cx_ch_ch_dh>)])) (iy | ((<any_Vx_ch_ch_iy_noSlide> ch) | (ch <any_Vx_ch_ch_iy_noSlide>)))) (([(<any_Cx_ch_iy_n> n)] | [(n <any_Cx_ch_iy_n>)]) ([(<any_Vx_ch_iy_n> n)] | [(n <any_Vx_ch_iy_n>)]) sil))
Running scan for frate = 72
frate, target rule = 80 public <the> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_dh> zh)] | [(zh <any_Cx_zh_p_z_dh>)]) (dh | t | ((<any_Cx_zh_p_z_dh_axr> zh) | (zh <any_Cx_zh_p_z_dh_axr>)))) (([(<any_Cx_zh_zh_axr_dh> zh)] | [(zh <any_Cx_zh_zh_axr_dh>)]) (axr | ((<any_Cx_zh_zh_axr> zh) | (zh <any_Cx_zh_zh_axr>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_n> n)] | [(n <any_Cx_zh_axr_n>)]) sil))
Running scan for frate = 72
Considering guard ch with value 3 for dh ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard zh with value 1 for dh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 3 for iy ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh


frate, target rule = 72 public <the> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ch_p_z_dh> ch)] | [(ch <any_Cx_ch_p_z_dh>)]) (dh | t | ((<any_Cx_ch_p_z_dh> ch) | (ch <any_Cx_ch_p_z_dh>)))) ((([(<any_Vx_ch_ch_iy_noSlide> ch)] | [(ch <any_Vx_ch_ch_iy_noSlide>)]) ([(<any_Cx_ch_ch_dh> ch)] | [(ch <any_Cx_ch_ch_dh>)])) (iy | ((<any_Vx_ch_ch_iy_noSlide> ch) | (ch <any_Vx_ch_ch_iy_noSlide>)))) (([(<any_Cx_ch_iy_ng> ng)] | [(ng <any_Cx_ch_iy_ng>)]) ([(<any_Vx_ch_iy_ng> ng)] | [(ng <any_Vx_ch_iy_ng>)]) sil))

frate, target rule = 72 public <the> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_dh> zh)] | [(zh <any_Cx_zh_p_z_dh>)]) (dh | t | ((<any_Cx_zh_p_z_dh_axr> zh) | (zh <any_Cx_zh_p_z_dh_axr>)))) (([(<any_Cx_zh_zh_axr_dh> zh)] | [(zh <any_Cx_zh_zh_axr_dh>)]) (axr | ((<any_Cx_zh_zh_axr> zh) | (zh <any_Cx_zh_zh_axr>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_ng> ng)] | [(ng <any_Cx_zh_axr_ng>)]) sil))

results =
{72 [{sil 0 8} {dh 9 18} {ch 19 21} {ih 22 26} {sil 27 34}]}
{80 [{sil 0 9} {dh 10 19} {ch 20 22} {ae 23 28} {sil 29 38}]}
{91 [{sil 0 11} {dh 12 23} {ih 24 33} {ch 34 36} {sil 37 39}]}
{105 [{sil 0 14} {dh 15 20} {iy 21 23} {m 24 29} {ih 30 40} {sil 41 46}]}
{125 [{sil 3 19} {dh 20 31} {ch 32 34} {eh 35 43} {b 44 48} {f 49 51} {sil 52 57}]}

normalised results =
{72 [{sil 0 8} {dh 13 25} {ch 26 26} {ih 31 36} {sil 38 47}]}
{80 [{sil 0 9} {dh 13 24} {ch 25 25} {ae 29 35} {sil 36 48}]}
{91 [{sil 0 11} {dh 13 25} {ih 26 36} {ch 37 37} {sil 41 41}]}
{105 [{sil 0 14} {dh 14 19} {iy 20 20} {m 23 28} {ih 29 38} {sil 39 44}]}
{125 [{sil 3 19} {dh 16 25} {ch 26 26} {eh 28 34} {b 35 38} {f 39 39} {sil 42 46}]}

ruleAligned = [{{dh 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{iy 2} []}]

results (after rule-alignment) =
{72 [{sil 0 0} {dh 13 25} {ch 26 26} {ih 31 36} {sil 38 38}]}
{80 [{sil 0 0} {dh 13 24} {ch 25 25} {ae 29 35} {sil 36 36}]}
{91 [{sil 0 0} {dh 13 25} {ih 26 36} {ch 37 37} {sil 41 41}]}
{105 [{sil 0 0} {dh 14 19} {iy 20 20} {m 23 28} {ih 29 38} {sil 39 39}]}
{125 [{sil 3 3} {dh 16 25} {ch 26 26} {eh 28 34} {b 35 35} {f 39 39} {sil 42 42}]}

timeAligned = [{{dh 13 25} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ih 31 36} [{0 3} {2 2} {3 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 -1 19
combinedVerdict    = [{dh 0} {iy 2} {ih 3}]
ruleAlignedVerdict = [{dh 0} {iy 2}]

score->
+1 for dh
-1 for iy
-1 for ih
score<-: -1

results =
{72 [{sil 0 8} {dh 9 19} {axr 20 24} {sil 25 34}]}
{80 [{sil 0 9} {dh 10 21} {axr 22 26} {sil 27 38}]}
{91 [{sil 0 11} {t 12 14} {axr 15 17} {n 18 24} {ih 25 32} {sil 33 39}]}
{105 [{sil 0 14} {dh 15 20} {zh 21 23} {b 24 38} {sil 39 46}]}
{125 [{sil 3 19} {dh 20 25} {zh 26 28} {w 29 36} {eh 37 43} {p 44 51} {sil 52 57}]}

normalised results =
{72 [{sil 0 8} {dh 13 26} {axr 28 33} {sil 35 47}]}
{80 [{sil 0 9} {dh 13 26} {axr 28 33} {sil 34 48}]}
{91 [{sil 0 11} {t 13 13} {axr 16 16} {n 20 26} {ih 27 35} {sil 36 43}]}
{105 [{sil 0 14} {dh 14 19} {zh 20 20} {b 23 36} {sil 37 44}]}
{125 [{sil 3 19} {dh 16 20} {zh 21 21} {w 23 29} {eh 30 34} {p 35 41} {sil 42 46}]}

ruleAligned = [{{dh 0} [{0 1} {1 1} {3 1} {4 1}]} {{axr 2} [{0 2} {1 2}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {dh 13 26} {axr 28 33} {sil 35 35}]}
{80 [{sil 0 0} {dh 13 26} {axr 28 33} {sil 34 34}]}
{91 [{sil 0 0} {t 13 13} {axr 16 16} {n 20 26} {ih 27 35} {sil 36 36}]}
{105 [{sil 0 0} {dh 14 19} {zh 20 20} {b 23 36} {sil 37 37}]}
{125 [{sil 3 3} {dh 16 20} {zh 21 21} {w 23 29} {eh 30 34} {p 35 41} {sil 42 42}]}

timeAligned = [{{dh 14 20} [{0 1} {1 1} {3 1} {4 1}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 -1 19
combinedVerdict    = [{dh 0} {axr 2}]
ruleAlignedVerdict = [{dh 0} {axr 2}]

score->
+1 for dh
-1 for axr
score<-: 0
bestResult = {0 [{dh 0} {axr 2}] [dh axr]}
testPronounce dh good axr missing
publish->
phonsToAlphas = [{[dh] th} {[axr] e}]
getVerdict<-:new {th [dh] 0}
getVerdict<-:new {e [axr] 2}
lettersVerdicts = [{th [dh] 0} {e [axr] 2}]
publish<-
{
  "results": [
    {
      "letters": "th",
      "phonemes": "ð",
      "verdict": "good"
    },
    {
      "letters": "e",
      "phonemes": "əɹ",
      "verdict": "missing"
    }
  ],
  "err": null
}
