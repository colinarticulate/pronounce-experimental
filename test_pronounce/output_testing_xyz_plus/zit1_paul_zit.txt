
 length of audio =  2.111562



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.72 0.76 1.48

 start3, duration3, end3 =  0.72 0.66 1.38

 Initial start, duration, end =  0.62 0.86 1.48

 Cut at: start, duration =  0.62 1.31     guard_end =  1.9300000000000002 

Running scan for frate = 125
Considering guard r with value 3 for z ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 3 for t ...
candidateGuards = map[r:true]
Picking guard, r


frate, target rule = 125 public <zit> = (((sil [((v <any_Cx_z_v_p>) | (<any_Cx_z_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]) | (sil p (sil [((v <any_Cx_z_v_p>) | (<any_Cx_z_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]))) (([(<any_Cx_r_p_v_z> r)] | [(r <any_Cx_r_p_v_z>)]) (z | ((<any_Cx_r_p_v_z> r) | (r <any_Cx_r_p_v_z>)))) ((([(<any_Vx_r_r_ih_noSlide> r)] | [(r <any_Vx_r_r_ih_noSlide>)]) ([(<any_Cx_r_r_t_z> r)] | [(r <any_Cx_r_r_t_z>)])) (ih | ((<any_Vx_r_r_ih_noSlide> r) | (r <any_Vx_r_r_ih_noSlide>)))) (([(<any_Cx_r_r_t> r)] | [(r <any_Cx_r_r_t>)]) (t | ((<any_Cx_r_r_t> r) | (r <any_Cx_r_r_t>)))) (([(<any_vowel_noSlide> ch)] | [(ch <any_vowel_noSlide>)]) ([(<any_Cx_r_t_ch> ch)] | [(ch <any_Cx_r_t_ch>)]) sil))
Running scan for frate = 105
Considering guard r with value 3 for z ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 3 for t ...
candidateGuards = map[r:true]
Picking guard, r


frate, target rule = 105 public <zit> = (((sil [((b <any_Cx_z_b_p>) | (<any_Cx_z_b_p> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]) | (sil p (sil [((b <any_Cx_z_b_p>) | (<any_Cx_z_b_p> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]))) (([(<any_Cx_r_p_b_z> r)] | [(r <any_Cx_r_p_b_z>)]) (z | ((<any_Cx_r_p_b_z> r) | (r <any_Cx_r_p_b_z>)))) ((([(<any_Vx_r_r_ih_noSlide> r)] | [(r <any_Vx_r_r_ih_noSlide>)]) ([(<any_Cx_r_r_t_z> r)] | [(r <any_Cx_r_r_t_z>)])) (ih | ((<any_Vx_r_r_ih_noSlide> r) | (r <any_Vx_r_r_ih_noSlide>)))) (([(<any_Cx_r_r_t> r)] | [(r <any_Cx_r_r_t>)]) (t | ((<any_Cx_r_r_t> r) | (r <any_Cx_r_r_t>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_r_t_thr> thr)] | [(thr <any_Cx_r_t_thr>)]) sil))
Running scan for frate = 91
Considering guard r with value 3 for z ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 3 for t ...
candidateGuards = map[r:true]
Picking guard, r


frate, target rule = 91 public <zit> = (((sil [((v <any_Cx_z_v_p>) | (<any_Cx_z_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]) | (sil p (sil [((v <any_Cx_z_v_p>) | (<any_Cx_z_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]))) (([(<any_Cx_r_p_v_z> r)] | [(r <any_Cx_r_p_v_z>)]) (z | ((<any_Cx_r_p_v_z> r) | (r <any_Cx_r_p_v_z>)))) ((([(<any_Vx_r_r_ih_noSlide> r)] | [(r <any_Vx_r_r_ih_noSlide>)]) ([(<any_Cx_r_r_t_z> r)] | [(r <any_Cx_r_r_t_z>)])) (ih | ((<any_Vx_r_r_ih_noSlide> r) | (r <any_Vx_r_r_ih_noSlide>)))) (([(<any_Cx_r_r_t> r)] | [(r <any_Cx_r_r_t>)]) (t | ((<any_Cx_r_r_t> r) | (r <any_Cx_r_r_t>)))) (([(<any_vowel_noSlide> ch)] | [(ch <any_vowel_noSlide>)]) ([(<any_Cx_r_t_ch> ch)] | [(ch <any_Cx_r_t_ch>)]) sil))
Running scan for frate = 80
Considering guard r with value 3 for z ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 3 for t ...
candidateGuards = map[r:true]
Picking guard, r


frate, target rule = 80 public <zit> = (((sil [((s <any_Cx_z_s_p>) | (<any_Cx_z_s_p> s))] [((s <any_vowel_noSlide>) | (<any_vowel_noSlide> s))]) | (sil p (sil [((s <any_Cx_z_s_p>) | (<any_Cx_z_s_p> s))] [((s <any_vowel_noSlide>) | (<any_vowel_noSlide> s))]))) (([(<any_Cx_r_p_s_z> r)] | [(r <any_Cx_r_p_s_z>)]) (z | ((<any_Cx_r_p_s_z> r) | (r <any_Cx_r_p_s_z>)))) ((([(<any_Vx_r_r_ih_noSlide> r)] | [(r <any_Vx_r_r_ih_noSlide>)]) ([(<any_Cx_r_r_t_z> r)] | [(r <any_Cx_r_r_t_z>)])) (ih | ((<any_Vx_r_r_ih_noSlide> r) | (r <any_Vx_r_r_ih_noSlide>)))) (([(<any_Cx_r_r_t> r)] | [(r <any_Cx_r_r_t>)]) (t | ((<any_Cx_r_r_t> r) | (r <any_Cx_r_r_t>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_r_t_thr> thr)] | [(thr <any_Cx_r_t_thr>)]) sil))
Running scan for frate = 72
Considering guard r with value 3 for z ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 3 for t ...
candidateGuards = map[r:true]
Picking guard, r


frate, target rule = 72 public <zit> = (((sil [((b <any_Cx_z_b_p>) | (<any_Cx_z_b_p> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]) | (sil p (sil [((b <any_Cx_z_b_p>) | (<any_Cx_z_b_p> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]))) (([(<any_Cx_r_p_b_z> r)] | [(r <any_Cx_r_p_b_z>)]) (z | ((<any_Cx_r_p_b_z> r) | (r <any_Cx_r_p_b_z>)))) ((([(<any_Vx_r_r_ih_noSlide> r)] | [(r <any_Vx_r_r_ih_noSlide>)]) ([(<any_Cx_r_r_t_z> r)] | [(r <any_Cx_r_r_t_z>)])) (ih | ((<any_Vx_r_r_ih_noSlide> r) | (r <any_Vx_r_r_ih_noSlide>)))) (([(<any_Cx_r_r_t> r)] | [(r <any_Cx_r_r_t>)]) (t | ((<any_Cx_r_r_t> r) | (r <any_Cx_r_r_t>)))) (([(<any_vowel_noSlide> k)] | [(k <any_vowel_noSlide>)]) ([(<any_Cx_r_t_k> k)] | [(k <any_Cx_r_t_k>)]) sil))

results =
{72 [{sil 0 16} {z 17 26} {ih 27 42} {t 43 58} {sil 59 72}]}
{80 [{sil 0 15} {z 16 30} {ih 31 48} {t 49 62} {sil 63 78}]}
{91 [{sil 0 17} {z 18 34} {ih 35 55} {t 56 74} {sil 75 117}]}
{105 [{sil 0 20} {z 21 40} {ih 41 64} {t 65 87} {sil 88 136}]}
{125 [{sil 3 13} {d 14 22} {r 23 28} {z 29 49} {ih 50 78} {t 79 105} {sil 106 163}]}

normalised results =
{72 [{sil 0 16} {z 24 36} {ih 38 58} {t 60 81} {sil 82 100}]}
{80 [{sil 0 15} {z 20 38} {ih 39 60} {t 61 78} {sil 79 98}]}
{91 [{sil 0 17} {z 20 37} {ih 38 60} {t 62 81} {sil 82 129}]}
{105 [{sil 0 20} {z 20 38} {ih 39 61} {t 62 83} {sil 84 130}]}
{125 [{sil 3 13} {d 11 18} {r 18 22} {z 23 39} {ih 40 62} {t 63 84} {sil 85 130}]}

ruleAligned = [{{z 0} [{0 1} {1 1} {2 1} {3 1} {4 3}]} {{ih 0} [{0 2} {1 2} {2 2} {3 2} {4 4}]} {{t 0} [{0 3} {1 3} {2 3} {3 3} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {z 24 36} {ih 38 58} {t 60 81} {sil 82 82}]}
{80 [{sil 0 0} {z 20 38} {ih 39 60} {t 61 78} {sil 79 79}]}
{91 [{sil 0 0} {z 20 37} {ih 38 60} {t 62 81} {sil 82 82}]}
{105 [{sil 0 0} {z 20 38} {ih 39 61} {t 62 83} {sil 84 84}]}
{125 [{sil 3 3} {d 11 18} {r 18 18} {z 23 39} {ih 40 62} {t 63 84} {sil 85 85}]}

timeAligned = [{{z 20 38} [{1 1} {2 1} {3 1} {4 3} {0 1}]} {{ih 39 60} [{0 2} {1 2} {2 2} {3 2} {4 4}]} {{t 62 81} [{0 3} {1 3} {2 3} {3 3} {4 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 36
i, iTime, newITime, timeStartFrom = 2 1 2 58
combinedVerdict    = [{z 0} {ih 0} {t 0}]
ruleAlignedVerdict = [{z 0} {ih 0} {t 0}]

score->
+1 for z
+1 for ih
+1 for t
score<-: 8
testPronounce z good ih good t good
publish->
phonsToAlphas = [{[z] z} {[ih] i} {[t] t}]
getVerdict<-:new {z [z] 0}
getVerdict<-:new {i [ih] 0}
getVerdict<-:new {t [t] 0}
lettersVerdicts = [{z [z] 0} {i [ih] 0} {t [t] 0}]
publish<-
{
  "results": [
    {
      "letters": "z",
      "phonemes": "z",
      "verdict": "good"
    },
    {
      "letters": "i",
      "phonemes": "Éª",
      "verdict": "good"
    },
    {
      "letters": "t",
      "phonemes": "t",
      "verdict": "good"
    }
  ],
  "err": null
}
