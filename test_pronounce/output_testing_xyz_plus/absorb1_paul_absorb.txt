
 length of audio =  1.599625



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.38 1.02 1.4

 start3, duration3, end3 =  0.38 0.44000000000000006 0.8200000000000001

 Initial start, duration, end =  0.28 1.1199999999999999 1.4

 Cut at: start, duration =  0.28 1.299625     guard_end =  1.579625 

Running scan for frate = 125
Considering guard jh with value 1 for ax ...
Considering guard zh with value 1 for ax ...
Considering guard sh with value 1 for ax ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, jh

Considering guard jh with value 5.4 for b ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard ng with value 5.2 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 4 for ao ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard zh with value 1 for b ...
Considering guard jh with value 1 for b ...
Considering guard sh with value 1 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, zh

frate, target rule = 125 public <absorb> = (((sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_jh_p_z_ax_b> jh)] | [(jh <any_Cx_jh_p_z_ax_b>)]) (ax | ((<any_Cx_jh_p_z_ax_b> jh) | (jh <any_Cx_jh_p_z_ax_b>)))) (([(<any_Cx_jh_jh_b_s_ax> jh)] | [(jh <any_Cx_jh_jh_b_s_ax>)]) (b | ((<any_Cx_jh_jh_b_s> jh) | (jh <any_Cx_jh_jh_b_s>)))) (([(<any_Cx_ng_jh_s_b> ng)] | [(ng <any_Cx_ng_jh_s_b>)]) (s | ((<any_Cx_ng_jh_s_b> ng) | (ng <any_Cx_ng_jh_s_b>)))) ((([(<any_Vx_ng_ng_ao_noSlide> ng)] | [(ng <any_Vx_ng_ng_ao_noSlide>)]) ([(<any_Cx_ng_ng_b_s> ng)] | [(ng <any_Cx_ng_ng_b_s>)])) (ao | ((<any_Vx_ng_ng_ao_noSlide> ng) | (ng <any_Vx_ng_ng_ao_noSlide>)))) (([(<any_Cx_zh_ng_b> zh)] | [(zh <any_Cx_zh_ng_b>)]) (b | ((<any_Cx_zh_ng_b> zh) | (zh <any_Cx_zh_ng_b>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_zh_b_hh> hh)] | [(hh <any_Cx_zh_b_hh>)]) sil))
Running scan for frate = 105
Considering guard zh with value 1 for ax ...
Considering guard jh with value 1 for ax ...
Considering guard sh with value 1 for ax ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, zh

Considering guard jh with value 5.4 for b ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard ng with value 5.2 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 4 for ao ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard jh with value 1 for b ...
Considering guard zh with value 1 for b ...
Considering guard sh with value 1 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, jh

frate, target rule = 105 public <absorb> = (((sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_ax_b> zh)] | [(zh <any_Cx_zh_p_z_ax_b>)]) (ax | ((<any_Cx_zh_p_z_ax_b> zh) | (zh <any_Cx_zh_p_z_ax_b>)))) (([(<any_Cx_jh_zh_b_s_ax> jh)] | [(jh <any_Cx_jh_zh_b_s_ax>)]) (b | ((<any_Cx_jh_zh_b_s> jh) | (jh <any_Cx_jh_zh_b_s>)))) (([(<any_Cx_ng_jh_s_b> ng)] | [(ng <any_Cx_ng_jh_s_b>)]) (s | ((<any_Cx_ng_jh_s_b> ng) | (ng <any_Cx_ng_jh_s_b>)))) ((([(<any_Vx_ng_ng_ao_noSlide> ng)] | [(ng <any_Vx_ng_ng_ao_noSlide>)]) ([(<any_Cx_ng_ng_b_s> ng)] | [(ng <any_Cx_ng_ng_b_s>)])) (ao | ((<any_Vx_ng_ng_ao_noSlide> ng) | (ng <any_Vx_ng_ng_ao_noSlide>)))) (([(<any_Cx_jh_ng_b> jh)] | [(jh <any_Cx_jh_ng_b>)]) (b | ((<any_Cx_jh_ng_b> jh) | (jh <any_Cx_jh_ng_b>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_jh_b_thr> thr)] | [(thr <any_Cx_jh_b_thr>)]) sil))
Running scan for frate = 91
Considering guard zh with value 1 for ax ...
Considering guard jh with value 1 for ax ...
Considering guard sh with value 1 for ax ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, zh

Considering guard jh with value 5.4 for b ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard ng with value 5.2 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 4 for ao ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard sh with value 1 for b ...
Considering guard zh with value 1 for b ...
Considering guard jh with value 1 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, sh

frate, target rule = 91 public <absorb> = (((sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_ax_b> zh)] | [(zh <any_Cx_zh_p_z_ax_b>)]) (ax | ((<any_Cx_zh_p_z_ax_b> zh) | (zh <any_Cx_zh_p_z_ax_b>)))) (([(<any_Cx_jh_zh_b_s_ax> jh)] | [(jh <any_Cx_jh_zh_b_s_ax>)]) (b | ((<any_Cx_jh_zh_b_s> jh) | (jh <any_Cx_jh_zh_b_s>)))) (([(<any_Cx_ng_jh_s_b> ng)] | [(ng <any_Cx_ng_jh_s_b>)]) (s | ((<any_Cx_ng_jh_s_b> ng) | (ng <any_Cx_ng_jh_s_b>)))) ((([(<any_Vx_ng_ng_ao_noSlide> ng)] | [(ng <any_Vx_ng_ng_ao_noSlide>)]) ([(<any_Cx_ng_ng_b_s> ng)] | [(ng <any_Cx_ng_ng_b_s>)])) (ao | ((<any_Vx_ng_ng_ao_noSlide> ng) | (ng <any_Vx_ng_ng_ao_noSlide>)))) (([(<any_Cx_sh_ng_b> sh)] | [(sh <any_Cx_sh_ng_b>)]) (b | ((<any_Cx_sh_ng_b> sh) | (sh <any_Cx_sh_ng_b>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_sh_b_n> n)] | [(n <any_Cx_sh_b_n>)]) sil))
Running scan for frate = 80
Considering guard sh with value 1 for ax ...
Considering guard jh with value 1 for ax ...
Considering guard zh with value 1 for ax ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, sh

Considering guard jh with value 5.4 for b ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard ng with value 5.2 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 4 for ao ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard zh with value 1 for b ...
Considering guard jh with value 1 for b ...
Considering guard sh with value 1 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, zh

frate, target rule = 80 public <absorb> = (((sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_ax_b> sh)] | [(sh <any_Cx_sh_p_z_ax_b>)]) (ax | ((<any_Cx_sh_p_z_ax_b> sh) | (sh <any_Cx_sh_p_z_ax_b>)))) (([(<any_Cx_jh_sh_b_s_ax> jh)] | [(jh <any_Cx_jh_sh_b_s_ax>)]) (b | ((<any_Cx_jh_sh_b_s> jh) | (jh <any_Cx_jh_sh_b_s>)))) (([(<any_Cx_ng_jh_s_b> ng)] | [(ng <any_Cx_ng_jh_s_b>)]) (s | ((<any_Cx_ng_jh_s_b> ng) | (ng <any_Cx_ng_jh_s_b>)))) ((([(<any_Vx_ng_ng_ao_noSlide> ng)] | [(ng <any_Vx_ng_ng_ao_noSlide>)]) ([(<any_Cx_ng_ng_b_s> ng)] | [(ng <any_Cx_ng_ng_b_s>)])) (ao | ((<any_Vx_ng_ng_ao_noSlide> ng) | (ng <any_Vx_ng_ng_ao_noSlide>)))) (([(<any_Cx_zh_ng_b> zh)] | [(zh <any_Cx_zh_ng_b>)]) (b | ((<any_Cx_zh_ng_b> zh) | (zh <any_Cx_zh_ng_b>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_zh_b_m> m)] | [(m <any_Cx_zh_b_m>)]) sil))
Running scan for frate = 72
Considering guard zh with value 1 for ax ...
Considering guard sh with value 1 for ax ...
Considering guard jh with value 1 for ax ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, zh

Considering guard jh with value 5.4 for b ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard ng with value 5.2 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 4 for ao ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard jh with value 1 for b ...
Considering guard sh with value 1 for b ...
Considering guard zh with value 1 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, jh

frate, target rule = 72 public <absorb> = (((sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_ax_b> zh)] | [(zh <any_Cx_zh_p_z_ax_b>)]) (ax | ((<any_Cx_zh_p_z_ax_b> zh) | (zh <any_Cx_zh_p_z_ax_b>)))) (([(<any_Cx_jh_zh_b_s_ax> jh)] | [(jh <any_Cx_jh_zh_b_s_ax>)]) (b | ((<any_Cx_jh_zh_b_s> jh) | (jh <any_Cx_jh_zh_b_s>)))) (([(<any_Cx_ng_jh_s_b> ng)] | [(ng <any_Cx_ng_jh_s_b>)]) (s | ((<any_Cx_ng_jh_s_b> ng) | (ng <any_Cx_ng_jh_s_b>)))) ((([(<any_Vx_ng_ng_ao_noSlide> ng)] | [(ng <any_Vx_ng_ng_ao_noSlide>)]) ([(<any_Cx_ng_ng_b_s> ng)] | [(ng <any_Cx_ng_ng_b_s>)])) (ao | ((<any_Vx_ng_ng_ao_noSlide> ng) | (ng <any_Vx_ng_ng_ao_noSlide>)))) (([(<any_Cx_jh_ng_b> jh)] | [(jh <any_Cx_jh_ng_b>)]) (b | ((<any_Cx_jh_ng_b> jh) | (jh <any_Cx_jh_ng_b>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_jh_b_hh> hh)] | [(hh <any_Cx_jh_b_hh>)]) sil))

results =
{72 [{sil 0 10} {ax 11 19} {b 20 23} {s 24 31} {ao 32 56} {b 57 63} {sil 64 71}]}
{80 [{sil 0 11} {ax 12 21} {b 22 25} {s 26 35} {ao 36 63} {b 64 70} {sil 71 77}]}
{91 [{sil 0 13} {ax 14 26} {b 27 29} {s 30 40} {ao 41 74} {b 75 80} {sil 81 116}]}
{105 [{sil 0 16} {ax 17 31} {b 32 34} {s 35 45} {ao 46 86} {b 87 92} {sil 93 131}]}
{125 [{sil 3 20} {ax 21 38} {b 39 41} {s 42 55} {ao 56 104} {b 105 110} {sil 111 162}]}

normalised results =
{72 [{sil 0 10} {ax 15 26} {b 28 32} {s 33 43} {ao 44 78} {b 79 88} {sil 89 99}]}
{80 [{sil 0 11} {ax 15 26} {b 28 31} {s 33 44} {ao 45 79} {b 80 88} {sil 89 96}]}
{91 [{sil 0 13} {ax 15 29} {b 30 30} {s 33 44} {ao 45 81} {b 82 88} {sil 89 127}]}
{105 [{sil 0 16} {ax 16 30} {b 30 30} {s 33 43} {ao 44 82} {b 83 88} {sil 89 125}]}
{125 [{sil 3 20} {ax 17 30} {b 31 31} {s 34 44} {ao 45 83} {b 84 88} {sil 89 130}]}

ruleAligned = [{{ax 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{b 2} [{0 2} {1 2}]} {{s 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{ao 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{b 0} [{0 5} {1 5} {2 5} {3 5} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {ax 15 26} {b 28 32} {s 33 43} {ao 44 78} {b 79 88} {sil 89 89}]}
{80 [{sil 0 0} {ax 15 26} {b 28 31} {s 33 44} {ao 45 79} {b 80 88} {sil 89 89}]}
{91 [{sil 0 0} {ax 15 29} {b 30 30} {s 33 44} {ao 45 81} {b 82 88} {sil 89 89}]}
{105 [{sil 0 0} {ax 16 30} {b 30 30} {s 33 43} {ao 44 82} {b 83 88} {sil 89 89}]}
{125 [{sil 3 3} {ax 17 30} {b 31 31} {s 34 44} {ao 45 83} {b 84 88} {sil 89 89}]}

timeAligned = [{{ax 15 29} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{s 33 44} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{ao 45 81} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{b 82 88} [{0 5} {1 5} {2 5} {3 5} {4 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 -1 26
i, iTime, newITime, timeStartFrom = 2 0 1 26
i, iTime, newITime, timeStartFrom = 3 1 2 43
i, iTime, newITime, timeStartFrom = 4 2 3 78
combinedVerdict    = [{ax 0} {b 2} {s 0} {ao 0} {b 0}]
ruleAlignedVerdict = [{ax 0} {b 2} {s 0} {ao 0} {b 0}]

score->
+1 for ax
-1 for b
+1 for s
+1 for ao
+1 for b
score<-: 3
bestResult = {3 [{ax 0} {b 2} {s 0} {ao 0} {b 0}] [ax b s ao b]}
testPronounce ax good b missing s good ao good b good
publish->
phonsToAlphas = [{[ax] a} {[b] b} {[s] s} {[ao] or} {[b] b}]
getVerdict<-:new {a [ax] 0}
getVerdict<-:new {b [b] 2}
getVerdict<-:new {s [s] 0}
getVerdict<-:new {or [ao] 0}
getVerdict<-:new {b [b] 0}
lettersVerdicts = [{a [ax] 0} {b [b] 2} {s [s] 0} {or [ao] 0} {b [b] 0}]
publish<-
Total: 187.716297ms
{
  "results": [
    {
      "letters": "a",
      "phonemes": "ə",
      "verdict": "good"
    },
    {
      "letters": "b",
      "phonemes": "b",
      "verdict": "missing"
    },
    {
      "letters": "s",
      "phonemes": "s",
      "verdict": "good"
    },
    {
      "letters": "or",
      "phonemes": "ɔ",
      "verdict": "good"
    },
    {
      "letters": "b",
      "phonemes": "b",
      "verdict": "good"
    }
  ],
  "err": null
}
