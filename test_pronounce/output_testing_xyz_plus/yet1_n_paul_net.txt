
 length of audio =  2.042937



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.9600000000000001 1.08 2.04

 start3, duration3, end3 =  1.0799999999999998 0.52 1.5999999999999999

 Initial start, duration, end =  0.8600000000000001 1.18 2.04

 Cut at: start, duration =  0.8600000000000001 1.1629369999999997     guard_end =  2.0229369999999998 

Running scan for frate = 125
Considering guard zh with value 1 for n ...
Considering guard jh with value 1 for n ...
Considering guard ch with value 1 for n ...
Considering guard sh with value 1 for n ...
candidateGuards = map[ch:true jh:true sh:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for eh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for t ...
Considering guard oy with value 1 for t ...
candidateGuards = map[oy:true zh:true]
Picking guard, zh


frate, target rule = 125 public <net> = (((sil [((z <any_Cx_n_z_p>) | (<any_Cx_n_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_n_z_p>) | (<any_Cx_n_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_n> zh)] | [(zh <any_Cx_zh_p_z_n>)]) (n | ((<any_Cx_zh_p_z_n> zh) | (zh <any_Cx_zh_p_z_n>)))) ((([(<any_Vx_zh_zh_eh_noSlide> zh)] | [(zh <any_Vx_zh_zh_eh_noSlide>)]) ([(<any_Cx_zh_zh_t_n> zh)] | [(zh <any_Cx_zh_zh_t_n>)])) (eh | ((<any_Vx_zh_zh_eh_noSlide> zh) | (zh <any_Vx_zh_zh_eh_noSlide>)))) (([(<any_Cx_zh_zh_t> zh)] | [(zh <any_Cx_zh_zh_t>)]) (t | ((<any_Cx_zh_zh_t> zh) | (zh <any_Cx_zh_zh_t>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_p> p)] | [(p <any_Cx_zh_t_p>)]) sil))
Running scan for frate = 105
Considering guard jh with value 1 for n ...
Considering guard zh with value 1 for n ...
Considering guard sh with value 1 for n ...
Considering guard ch with value 1 for n ...
candidateGuards = map[ch:true jh:true sh:true zh:true]
Picking guard, jh

Considering guard zh with value 2 for eh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for t ...
Considering guard oy with value 1 for t ...
candidateGuards = map[oy:true zh:true]
Picking guard, zh


frate, target rule = 105 public <net> = (((sil [((z <any_Cx_n_z_p>) | (<any_Cx_n_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_n_z_p>) | (<any_Cx_n_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_jh_p_z_n> jh)] | [(jh <any_Cx_jh_p_z_n>)]) (n | ((<any_Cx_jh_p_z_n> jh) | (jh <any_Cx_jh_p_z_n>)))) ((([(<any_Vx_zh_jh_eh_noSlide> zh)] | [(zh <any_Vx_zh_jh_eh_noSlide>)]) ([(<any_Cx_zh_jh_t_n> zh)] | [(zh <any_Cx_zh_jh_t_n>)])) (eh | ((<any_Vx_zh_jh_eh_noSlide> zh) | (zh <any_Vx_zh_jh_eh_noSlide>)))) (([(<any_Cx_zh_zh_t> zh)] | [(zh <any_Cx_zh_zh_t>)]) (t | ((<any_Cx_zh_zh_t> zh) | (zh <any_Cx_zh_zh_t>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_g> g)] | [(g <any_Cx_zh_t_g>)]) sil))
Running scan for frate = 91
Considering guard sh with value 1 for n ...
Considering guard ch with value 1 for n ...
Considering guard jh with value 1 for n ...
Considering guard zh with value 1 for n ...
candidateGuards = map[ch:true jh:true sh:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for eh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard oy with value 1 for t ...
Considering guard zh with value 1 for t ...
candidateGuards = map[oy:true zh:true]
Picking guard, oy


frate, target rule = 91 public <net> = (((sil [((z <any_Cx_n_z_p>) | (<any_Cx_n_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_n_z_p>) | (<any_Cx_n_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_n> zh)] | [(zh <any_Cx_zh_p_z_n>)]) (n | ((<any_Cx_zh_p_z_n> zh) | (zh <any_Cx_zh_p_z_n>)))) ((([(<any_Vx_zh_zh_eh_noSlide> zh)] | [(zh <any_Vx_zh_zh_eh_noSlide>)]) ([(<any_Cx_zh_zh_t_n> zh)] | [(zh <any_Cx_zh_zh_t_n>)])) (eh | ((<any_Vx_zh_zh_eh_noSlide> zh) | (zh <any_Vx_zh_zh_eh_noSlide>)))) (([(<any_Cx_oy_zh_t> oy)] | [(oy <any_Cx_oy_zh_t>)]) (t | ((<any_Cx_oy_zh_t> oy) | (oy <any_Cx_oy_zh_t>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_oy_t_thr> thr)] | [(thr <any_Cx_oy_t_thr>)]) sil))
Running scan for frate = 80
Considering guard ch with value 1 for n ...
Considering guard zh with value 1 for n ...
Considering guard sh with value 1 for n ...
Considering guard jh with value 1 for n ...
candidateGuards = map[ch:true jh:true sh:true zh:true]
Picking guard, ch

Considering guard zh with value 2 for eh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for t ...
Considering guard oy with value 1 for t ...
candidateGuards = map[oy:true zh:true]
Picking guard, zh


frate, target rule = 80 public <net> = (((sil [((z <any_Cx_n_z_p>) | (<any_Cx_n_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_n_z_p>) | (<any_Cx_n_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ch_p_z_n> ch)] | [(ch <any_Cx_ch_p_z_n>)]) (n | ((<any_Cx_ch_p_z_n> ch) | (ch <any_Cx_ch_p_z_n>)))) ((([(<any_Vx_zh_ch_eh_noSlide> zh)] | [(zh <any_Vx_zh_ch_eh_noSlide>)]) ([(<any_Cx_zh_ch_t_n> zh)] | [(zh <any_Cx_zh_ch_t_n>)])) (eh | ((<any_Vx_zh_ch_eh_noSlide> zh) | (zh <any_Vx_zh_ch_eh_noSlide>)))) (([(<any_Cx_zh_zh_t> zh)] | [(zh <any_Cx_zh_zh_t>)]) (t | ((<any_Cx_zh_zh_t> zh) | (zh <any_Cx_zh_zh_t>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_g> g)] | [(g <any_Cx_zh_t_g>)]) sil))
Running scan for frate = 72
Considering guard ch with value 1 for n ...
Considering guard sh with value 1 for n ...
Considering guard jh with value 1 for n ...
Considering guard zh with value 1 for n ...
candidateGuards = map[ch:true jh:true sh:true zh:true]
Picking guard, ch

Considering guard zh with value 2 for eh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard oy with value 1 for t ...
Considering guard zh with value 1 for t ...
candidateGuards = map[oy:true zh:true]
Picking guard, oy


frate, target rule = 72 public <net> = (((sil [((z <any_Cx_n_z_p>) | (<any_Cx_n_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_n_z_p>) | (<any_Cx_n_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ch_p_z_n> ch)] | [(ch <any_Cx_ch_p_z_n>)]) (n | ((<any_Cx_ch_p_z_n> ch) | (ch <any_Cx_ch_p_z_n>)))) ((([(<any_Vx_zh_ch_eh_noSlide> zh)] | [(zh <any_Vx_zh_ch_eh_noSlide>)]) ([(<any_Cx_zh_ch_t_n> zh)] | [(zh <any_Cx_zh_ch_t_n>)])) (eh | ((<any_Vx_zh_ch_eh_noSlide> zh) | (zh <any_Vx_zh_ch_eh_noSlide>)))) (([(<any_Cx_oy_zh_t> oy)] | [(oy <any_Cx_oy_zh_t>)]) (t | ((<any_Cx_oy_zh_t> oy) | (oy <any_Cx_oy_zh_t>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_oy_t_g> g)] | [(g <any_Cx_oy_t_g>)]) sil))

results =
{72 [{sil 0 15} {z 16 21} {y 22 27} {n 28 33} {eh 34 51} {t 52 68} {sil 69 82}]}
{80 [{sil 0 18} {z 19 23} {y 24 30} {n 31 36} {eh 37 57} {t 58 76} {sil 77 87}]}
{91 [{sil 0 19} {z 20 27} {y 28 40} {n 41 43} {eh 44 65} {t 66 87} {sil 88 104}]}
{105 [{sil 0 23} {z 24 32} {y 33 46} {n 47 49} {eh 50 76} {t 77 98} {sil 99 117}]}
{125 [{sil 3 28} {z 29 39} {y 40 56} {n 57 59} {eh 60 92} {t 93 117} {sil 118 141}]}

normalised results =
{72 [{sil 0 15} {z 22 29} {y 31 38} {n 39 46} {eh 47 71} {t 72 94} {sil 96 114}]}
{80 [{sil 0 18} {z 24 29} {y 30 38} {n 39 45} {eh 46 71} {t 73 95} {sil 96 109}]}
{91 [{sil 0 19} {z 22 30} {y 31 44} {n 45 45} {eh 48 71} {t 73 96} {sil 97 114}]}
{105 [{sil 0 23} {z 23 30} {y 31 44} {n 45 45} {eh 48 72} {t 73 93} {sil 94 111}]}
{125 [{sil 3 28} {z 23 31} {y 32 45} {n 46 46} {eh 48 74} {t 74 94} {sil 94 113}]}

ruleAligned = [{{y 3} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{n 2} [{0 3} {1 3}]} {{eh 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{t 0} [{0 5} {1 5} {2 5} {3 5} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {z 22 22} {y 31 38} {n 39 46} {eh 47 71} {t 72 94} {sil 96 96}]}
{80 [{sil 0 0} {z 24 24} {y 30 38} {n 39 45} {eh 46 71} {t 73 95} {sil 96 96}]}
{91 [{sil 0 0} {z 22 30} {y 31 44} {n 45 45} {eh 48 71} {t 73 96} {sil 97 97}]}
{105 [{sil 0 0} {z 23 23} {y 31 44} {n 45 45} {eh 48 72} {t 73 93} {sil 94 94}]}
{125 [{sil 3 3} {z 23 31} {y 32 45} {n 46 46} {eh 48 74} {t 74 94} {sil 94 94}]}

timeAligned = [{{y 31 44} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{eh 48 71} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{t 73 94} [{0 5} {1 5} {2 5} {3 5} {4 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 -1 38
i, iTime, newITime, timeStartFrom = 2 0 1 38
i, iTime, newITime, timeStartFrom = 3 1 2 71
combinedVerdict    = [{y 3} {n 2} {eh 0} {t 0}]
ruleAlignedVerdict = [{y 3} {n 2} {eh 0} {t 0}]

score->
-1 for y
-1 for n
+1 for eh
+1 for t
score<-: 0
bestResult = {0 [{y 3} {n 2} {eh 0} {t 0}] [n eh t]}
testPronounce y surprise n missing eh good t good
publish->
phonsToAlphas = [{[n] n} {[eh] e} {[t] t}]
getVerdict<-:new {n [n] 2}
getVerdict<-:new {e [eh] 0}
getVerdict<-:new {t [t] 0}
lettersVerdicts = [{y [y] 3} {n [n] 2} {e [eh] 0} {t [t] 0}]
publish<-
{
  "results": [
    {
      "letters": "y",
      "phonemes": "j",
      "verdict": "surprise"
    },
    {
      "letters": "n",
      "phonemes": "n",
      "verdict": "missing"
    },
    {
      "letters": "e",
      "phonemes": "É›",
      "verdict": "good"
    },
    {
      "letters": "t",
      "phonemes": "t",
      "verdict": "good"
    }
  ],
  "err": null
}
