
 length of audio =  3.007625



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.86 0.58 1.44

 start3, duration3, end3 =  0.86 0.44000000000000006 1.3

 Initial start, duration, end =  0.76 0.6799999999999999 1.44

 Cut at: start, duration =  0.76 1.13     guard_end =  1.89 

Running scan for frate = 125
Running scan for frate = 125
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 4.2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 4.2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 1 for v ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 4 for v ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 125 public <live> = (((sil [((z <any_Cx_l_z_p>) | (<any_Cx_l_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_l_z_p>) | (<any_Cx_l_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_l> sh)] | [(sh <any_Cx_sh_p_z_l>)]) (l | ((<any_Cx_sh_p_z_l> sh) | (sh <any_Cx_sh_p_z_l>)))) ((([(<any_Vx_sh_sh_ay_noSlide> sh)] | [(sh <any_Vx_sh_sh_ay_noSlide>)]) ([(<any_Cx_sh_sh_v_l> sh)] | [(sh <any_Cx_sh_sh_v_l>)])) (ay | ((<any_Vx_sh_sh_ay_noSlide> sh) | (sh <any_Vx_sh_sh_ay_noSlide>)))) (([(<any_Cx_zh_sh_v> zh)] | [(zh <any_Cx_zh_sh_v>)]) (v | ((<any_Cx_zh_sh_v> zh) | (zh <any_Cx_zh_sh_v>)))) (([(<any_vowel_noSlide> z)] | [(z <any_vowel_noSlide>)]) ([(<any_Cx_zh_v_z> z)] | [(z <any_Cx_zh_v_z>)]) sil))
frate, target rule = 125 public <live> = (((sil [((m <any_Cx_l_m_p>) | (<any_Cx_l_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]) | (sil p (sil [((m <any_Cx_l_m_p>) | (<any_Cx_l_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]))) (([(<any_Cx_sh_p_m_l> sh)] | [(sh <any_Cx_sh_p_m_l>)]) (l | ((<any_Cx_sh_p_m_l> sh) | (sh <any_Cx_sh_p_m_l>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_v_l> sh)] | [(sh <any_Cx_sh_sh_v_l>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_zh_sh_v> zh)] | [(zh <any_Cx_zh_sh_v>)]) (v | ((<any_Cx_zh_sh_v> zh) | (zh <any_Cx_zh_sh_v>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_zh_v_d> d)] | [(d <any_Cx_zh_v_d>)]) sil))
Running scan for frate = 105
Running scan for frate = 105
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 4.2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 4.2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 4 for v ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for v ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 105 public <live> = (((sil [((w <any_Cx_l_w_p>) | (<any_Cx_l_w_p> w))] [((w <any_vowel_noSlide>) | (<any_vowel_noSlide> w))]) | (sil p (sil [((w <any_Cx_l_w_p>) | (<any_Cx_l_w_p> w))] [((w <any_vowel_noSlide>) | (<any_vowel_noSlide> w))]))) (([(<any_Cx_sh_p_w_l> sh)] | [(sh <any_Cx_sh_p_w_l>)]) (l | ((<any_Cx_sh_p_w_l> sh) | (sh <any_Cx_sh_p_w_l>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_v_l> sh)] | [(sh <any_Cx_sh_sh_v_l>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_zh_sh_v> zh)] | [(zh <any_Cx_zh_sh_v>)]) (v | ((<any_Cx_zh_sh_v> zh) | (zh <any_Cx_zh_sh_v>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_zh_v_thr> thr)] | [(thr <any_Cx_zh_v_thr>)]) sil))
frate, target rule = 105 public <live> = (((sil [((r <any_Cx_l_r_p>) | (<any_Cx_l_r_p> r))] [((r <any_vowel_noSlide>) | (<any_vowel_noSlide> r))]) | (sil p (sil [((r <any_Cx_l_r_p>) | (<any_Cx_l_r_p> r))] [((r <any_vowel_noSlide>) | (<any_vowel_noSlide> r))]))) (([(<any_Cx_sh_p_r_l> sh)] | [(sh <any_Cx_sh_p_r_l>)]) (l | ((<any_Cx_sh_p_r_l> sh) | (sh <any_Cx_sh_p_r_l>)))) ((([(<any_Vx_sh_sh_ay_noSlide> sh)] | [(sh <any_Vx_sh_sh_ay_noSlide>)]) ([(<any_Cx_sh_sh_v_l> sh)] | [(sh <any_Cx_sh_sh_v_l>)])) (ay | ((<any_Vx_sh_sh_ay_noSlide> sh) | (sh <any_Vx_sh_sh_ay_noSlide>)))) (([(<any_Cx_zh_sh_v> zh)] | [(zh <any_Cx_zh_sh_v>)]) (v | ((<any_Cx_zh_sh_v> zh) | (zh <any_Cx_zh_sh_v>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_zh_v_d> d)] | [(d <any_Cx_zh_v_d>)]) sil))
Running scan for frate = 91
Running scan for frate = 91
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 4.2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 4.2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 4 for v ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for v ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 91 public <live> = (((sil [((v <any_Cx_l_v_p>) | (<any_Cx_l_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]) | (sil p (sil [((v <any_Cx_l_v_p>) | (<any_Cx_l_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]))) (([(<any_Cx_sh_p_v_l> sh)] | [(sh <any_Cx_sh_p_v_l>)]) (l | ((<any_Cx_sh_p_v_l> sh) | (sh <any_Cx_sh_p_v_l>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_v_l> sh)] | [(sh <any_Cx_sh_sh_v_l>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_zh_sh_v> zh)] | [(zh <any_Cx_zh_sh_v>)]) (v | ((<any_Cx_zh_sh_v> zh) | (zh <any_Cx_zh_sh_v>)))) (([(<any_vowel_noSlide> r)] | [(r <any_vowel_noSlide>)]) ([(<any_Cx_zh_v_r> r)] | [(r <any_Cx_zh_v_r>)]) sil))
frate, target rule = 91 public <live> = (((sil [((w <any_Cx_l_w_p>) | (<any_Cx_l_w_p> w))] [((w <any_vowel_noSlide>) | (<any_vowel_noSlide> w))]) | (sil p (sil [((w <any_Cx_l_w_p>) | (<any_Cx_l_w_p> w))] [((w <any_vowel_noSlide>) | (<any_vowel_noSlide> w))]))) (([(<any_Cx_sh_p_w_l> sh)] | [(sh <any_Cx_sh_p_w_l>)]) (l | ((<any_Cx_sh_p_w_l> sh) | (sh <any_Cx_sh_p_w_l>)))) ((([(<any_Vx_sh_sh_ay_noSlide> sh)] | [(sh <any_Vx_sh_sh_ay_noSlide>)]) ([(<any_Cx_sh_sh_v_l> sh)] | [(sh <any_Cx_sh_sh_v_l>)])) (ay | ((<any_Vx_sh_sh_ay_noSlide> sh) | (sh <any_Vx_sh_sh_ay_noSlide>)))) (([(<any_Cx_zh_sh_v> zh)] | [(zh <any_Cx_zh_sh_v>)]) (v | ((<any_Cx_zh_sh_v> zh) | (zh <any_Cx_zh_sh_v>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_zh_v_d> d)] | [(d <any_Cx_zh_v_d>)]) sil))
Running scan for frate = 80
Running scan for frate = 80
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 4.2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 4.2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 1 for v ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 4 for v ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 80 public <live> = (((sil [((m <any_Cx_l_m_p>) | (<any_Cx_l_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]) | (sil p (sil [((m <any_Cx_l_m_p>) | (<any_Cx_l_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]))) (([(<any_Cx_sh_p_m_l> sh)] | [(sh <any_Cx_sh_p_m_l>)]) (l | ((<any_Cx_sh_p_m_l> sh) | (sh <any_Cx_sh_p_m_l>)))) ((([(<any_Vx_sh_sh_ay_noSlide> sh)] | [(sh <any_Vx_sh_sh_ay_noSlide>)]) ([(<any_Cx_sh_sh_v_l> sh)] | [(sh <any_Cx_sh_sh_v_l>)])) (ay | ((<any_Vx_sh_sh_ay_noSlide> sh) | (sh <any_Vx_sh_sh_ay_noSlide>)))) (([(<any_Cx_zh_sh_v> zh)] | [(zh <any_Cx_zh_sh_v>)]) (v | ((<any_Cx_zh_sh_v> zh) | (zh <any_Cx_zh_sh_v>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_zh_v_thr> thr)] | [(thr <any_Cx_zh_v_thr>)]) sil))
frate, target rule = 80 public <live> = (((sil [((w <any_Cx_l_w_p>) | (<any_Cx_l_w_p> w))] [((w <any_vowel_noSlide>) | (<any_vowel_noSlide> w))]) | (sil p (sil [((w <any_Cx_l_w_p>) | (<any_Cx_l_w_p> w))] [((w <any_vowel_noSlide>) | (<any_vowel_noSlide> w))]))) (([(<any_Cx_sh_p_w_l> sh)] | [(sh <any_Cx_sh_p_w_l>)]) (l | ((<any_Cx_sh_p_w_l> sh) | (sh <any_Cx_sh_p_w_l>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_v_l> sh)] | [(sh <any_Cx_sh_sh_v_l>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_zh_sh_v> zh)] | [(zh <any_Cx_zh_sh_v>)]) (v | ((<any_Cx_zh_sh_v> zh) | (zh <any_Cx_zh_sh_v>)))) (([(<any_vowel_noSlide> l)] | [(l <any_vowel_noSlide>)]) ([(<any_Cx_zh_v_l> l)] | [(l <any_Cx_zh_v_l>)]) sil))
Running scan for frate = 72
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 4.2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 4 for v ...
candidateGuards = map[zh:true]
Picking guard, zh

Running scan for frate = 72
frate, target rule = 72 public <live> = (((sil [((w <any_Cx_l_w_p>) | (<any_Cx_l_w_p> w))] [((w <any_vowel_noSlide>) | (<any_vowel_noSlide> w))]) | (sil p (sil [((w <any_Cx_l_w_p>) | (<any_Cx_l_w_p> w))] [((w <any_vowel_noSlide>) | (<any_vowel_noSlide> w))]))) (([(<any_Cx_sh_p_w_l> sh)] | [(sh <any_Cx_sh_p_w_l>)]) (l | ((<any_Cx_sh_p_w_l> sh) | (sh <any_Cx_sh_p_w_l>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_v_l> sh)] | [(sh <any_Cx_sh_sh_v_l>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_zh_sh_v> zh)] | [(zh <any_Cx_zh_sh_v>)]) (v | ((<any_Cx_zh_sh_v> zh) | (zh <any_Cx_zh_sh_v>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_zh_v_thr> thr)] | [(thr <any_Cx_zh_v_thr>)]) sil))
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 4.2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 1 for v ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 72 public <live> = (((sil [((r <any_Cx_l_r_p>) | (<any_Cx_l_r_p> r))] [((r <any_vowel_noSlide>) | (<any_vowel_noSlide> r))]) | (sil p (sil [((r <any_Cx_l_r_p>) | (<any_Cx_l_r_p> r))] [((r <any_vowel_noSlide>) | (<any_vowel_noSlide> r))]))) (([(<any_Cx_sh_p_r_l> sh)] | [(sh <any_Cx_sh_p_r_l>)]) (l | ((<any_Cx_sh_p_r_l> sh) | (sh <any_Cx_sh_p_r_l>)))) ((([(<any_Vx_sh_sh_ay_noSlide> sh)] | [(sh <any_Vx_sh_sh_ay_noSlide>)]) ([(<any_Cx_sh_sh_v_l> sh)] | [(sh <any_Cx_sh_sh_v_l>)])) (ay | ((<any_Vx_sh_sh_ay_noSlide> sh) | (sh <any_Vx_sh_sh_ay_noSlide>)))) (([(<any_Cx_zh_sh_v> zh)] | [(zh <any_Cx_zh_sh_v>)]) (v | ((<any_Cx_zh_sh_v> zh) | (zh <any_Cx_zh_sh_v>)))) (([(<any_vowel_noSlide> l)] | [(l <any_vowel_noSlide>)]) ([(<any_Cx_zh_v_l> l)] | [(l <any_Cx_zh_v_l>)]) sil))

results =
{72 [{sil 62 64} {l 65 67} {ih 68 70} {v 71 73} {sil 74 80}]}
{80 [{sil 69 71} {l 72 74} {ih 75 77} {v 78 80} {sil 81 89}]}
{91 [{sil 0 15} {l 16 22} {ih 23 33} {v 34 52} {sil 53 101}]}
{105 [{sil 0 18} {l 19 26} {ih 27 39} {v 40 62} {sil 63 117}]}
{125 [{sil 3 24} {l 25 31} {ih 32 48} {v 49 71} {sil 72 141}]}

normalised results =
{72 [{sil 62 64} {l 90 90} {ih 94 94} {v 99 99} {sil 103 111}]}
{80 [{sil 69 71} {l 90 90} {ih 94 94} {v 98 98} {sil 101 111}]}
{91 [{sil 0 15} {l 18 24} {ih 25 36} {v 37 57} {sil 58 111}]}
{105 [{sil 0 18} {l 18 25} {ih 26 37} {v 38 59} {sil 60 111}]}
{125 [{sil 3 24} {l 20 25} {ih 26 38} {v 39 57} {sil 58 113}]}

ruleAligned = [{{l 1} [{2 1} {3 1} {4 1}]} {{ih 1} [{2 2} {3 2} {4 2}]} {{v 1} [{2 3} {3 3} {4 3}]}]

results (after rule-alignment) =
{72 [{sil 62 62} {l 90 90} {ih 94 94} {v 99 99} {sil 103 103}]}
{80 [{sil 69 69} {l 90 90} {ih 94 94} {v 98 98} {sil 101 101}]}
{91 [{sil 0 0} {l 18 24} {ih 25 36} {v 37 57} {sil 58 58}]}
{105 [{sil 0 0} {l 18 25} {ih 26 37} {v 38 59} {sil 60 60}]}
{125 [{sil 3 3} {l 20 25} {ih 26 38} {v 39 57} {sil 58 58}]}

timeAligned = [{{l 20 24} [{2 1} {3 1} {4 1}]} {{ih 26 36} [{2 2} {3 2} {4 2}]} {{v 39 57} [{2 3} {3 3} {4 3}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 24
i, iTime, newITime, timeStartFrom = 2 1 2 36
combinedVerdict    = [{l 1} {ih 1} {v 1}]
ruleAlignedVerdict = [{l 1} {ih 1} {v 1}]

score->
+1 for l
+1 for ih
+1 for v
score<-: 8

results =
{72 [{sil 62 64} {l 65 67} {ay 68 70} {v 71 73} {sil 74 80}]}
{80 [{sil 69 71} {l 72 74} {ay 75 77} {v 78 80} {sil 81 89}]}
{91 [{sil 0 15} {l 16 22} {iy 23 30} {sh 31 33} {v 34 52} {sil 53 101}]}
{105 [{sil 0 18} {l 19 25} {iy 26 35} {sh 36 38} {v 39 62} {sil 63 117}]}
{125 [{sil 3 24} {l 25 31} {uw 32 54} {sh 55 57} {v 58 71} {sil 72 141}]}

normalised results =
{72 [{sil 62 64} {l 90 90} {ay 94 94} {v 99 99} {sil 103 111}]}
{80 [{sil 69 71} {l 90 90} {ay 94 94} {v 98 98} {sil 101 111}]}
{91 [{sil 0 15} {l 18 24} {iy 25 33} {sh 34 34} {v 37 57} {sil 58 111}]}
{105 [{sil 0 18} {l 18 24} {iy 25 33} {sh 34 34} {v 37 59} {sil 60 111}]}
{125 [{sil 3 24} {l 20 25} {uw 26 43} {sh 44 44} {v 46 57} {sil 58 113}]}

ruleAligned = [{{l 1} [{2 1} {3 1} {4 1}]} {{ay 2} []} {{v 1} [{2 4} {3 4} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 62 62} {l 90 90} {ay 94 94} {v 99 99} {sil 103 103}]}
{80 [{sil 69 69} {l 90 90} {ay 94 94} {v 98 98} {sil 101 101}]}
{91 [{sil 0 0} {l 18 24} {iy 25 33} {sh 34 34} {v 37 57} {sil 58 58}]}
{105 [{sil 0 0} {l 18 24} {iy 25 33} {sh 34 34} {v 37 59} {sil 60 60}]}
{125 [{sil 3 3} {l 20 25} {uw 26 43} {sh 44 44} {v 46 57} {sil 58 58}]}

timeAligned = [{{l 20 24} [{2 1} {3 1} {4 1}]} {{v 46 57} [{2 4} {3 4} {4 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 -1 24
i, iTime, newITime, timeStartFrom = 2 0 1 24
combinedVerdict    = [{l 1} {ay 2} {v 1}]
ruleAlignedVerdict = [{l 1} {ay 2} {v 1}]

score->
+1 for l
-1 for ay
+1 for v
score<-: 1
testPronounce l possible ih possible v possible
publish->
phonsToAlphas = [{[l] l} {[ih] i} {[v] ve}]
getVerdict<-:new {l [l] 1}
getVerdict<-:new {i [ih] 1}
getVerdict<-:new {ve [v] 1}
lettersVerdicts = [{l [l] 1} {i [ih] 1} {ve [v] 1}]
publish<-
Total: 293.330624ms
{
  "results": [
    {
      "letters": "l",
      "phonemes": "l",
      "verdict": "possible"
    },
    {
      "letters": "i",
      "phonemes": "ɪ",
      "verdict": "possible"
    },
    {
      "letters": "ve",
      "phonemes": "v",
      "verdict": "possible"
    }
  ],
  "err": null
}
