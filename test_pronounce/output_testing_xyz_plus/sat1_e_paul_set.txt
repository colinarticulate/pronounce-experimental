
 length of audio =  2.111562



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.92 0.66 1.58

 start3, duration3, end3 =  0.9600000000000001 0.38 1.34

 Initial start, duration, end =  0.8200000000000001 0.76 1.58

 Cut at: start, duration =  0.8200000000000001 1.21     guard_end =  2.0300000000000002 

Running scan for frate = 125
Considering guard w with value 2 for s ...
Considering guard ng with value 2 for s ...
candidateGuards = map[ng:true w:true]
Picking guard, w

Considering guard ng with value 4 for eh ...
Considering guard w with value 4 for eh ...
candidateGuards = map[ng:true w:true]
Picking guard, ng

Considering guard oy with value 1 for t ...
Considering guard zh with value 1 for t ...
candidateGuards = map[oy:true zh:true]
Picking guard, oy


frate, target rule = 125 public <set> = (((sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil p (sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_w_p_sh_s> w)] | [(w <any_Cx_w_p_sh_s>)]) (s | z | ((<any_Cx_w_p_sh_s> w) | (w <any_Cx_w_p_sh_s>)))) ((([(<any_Vx_ng_w_eh_noSlide> ng)] | [(ng <any_Vx_ng_w_eh_noSlide>)]) ([(<any_Cx_ng_w_t_s> ng)] | [(ng <any_Cx_ng_w_t_s>)])) (eh | ((<any_Vx_ng_w_eh_noSlide> ng) | (ng <any_Vx_ng_w_eh_noSlide>)))) (([(<any_Cx_oy_ng_t> oy)] | [(oy <any_Cx_oy_ng_t>)]) (t | ((<any_Cx_oy_ng_t> oy) | (oy <any_Cx_oy_ng_t>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_oy_t_p> p)] | [(p <any_Cx_oy_t_p>)]) sil))
Running scan for frate = 105
Considering guard ng with value 2 for s ...
Considering guard w with value 2 for s ...
candidateGuards = map[ng:true w:true]
Picking guard, ng

Considering guard w with value 4 for eh ...
Considering guard ng with value 4 for eh ...
candidateGuards = map[ng:true w:true]
Picking guard, w

Considering guard zh with value 1 for t ...
Considering guard oy with value 1 for t ...
candidateGuards = map[oy:true zh:true]
Picking guard, zh


frate, target rule = 105 public <set> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_ng_p_ch_s> ng)] | [(ng <any_Cx_ng_p_ch_s>)]) (s | z | ((<any_Cx_ng_p_ch_s> ng) | (ng <any_Cx_ng_p_ch_s>)))) ((([(<any_Vx_w_ng_eh_noSlide> w)] | [(w <any_Vx_w_ng_eh_noSlide>)]) ([(<any_Cx_w_ng_t_s> w)] | [(w <any_Cx_w_ng_t_s>)])) (eh | ((<any_Vx_w_ng_eh_noSlide> w) | (w <any_Vx_w_ng_eh_noSlide>)))) (([(<any_Cx_zh_w_t> zh)] | [(zh <any_Cx_zh_w_t>)]) (t | ((<any_Cx_zh_w_t> zh) | (zh <any_Cx_zh_w_t>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_p> p)] | [(p <any_Cx_zh_t_p>)]) sil))
Running scan for frate = 91
Considering guard ng with value 2 for s ...
Considering guard w with value 2 for s ...
candidateGuards = map[ng:true w:true]
Picking guard, ng

Considering guard w with value 4 for eh ...
Considering guard ng with value 4 for eh ...
candidateGuards = map[ng:true w:true]
Picking guard, ng

Considering guard oy with value 1 for t ...
Considering guard zh with value 1 for t ...
candidateGuards = map[oy:true zh:true]
Picking guard, oy


frate, target rule = 91 public <set> = (((sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil p (sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_ng_p_t_s> ng)] | [(ng <any_Cx_ng_p_t_s>)]) (s | z | ((<any_Cx_ng_p_t_s> ng) | (ng <any_Cx_ng_p_t_s>)))) ((([(<any_Vx_ng_ng_eh_noSlide> ng)] | [(ng <any_Vx_ng_ng_eh_noSlide>)]) ([(<any_Cx_ng_ng_t_s> ng)] | [(ng <any_Cx_ng_ng_t_s>)])) (eh | ((<any_Vx_ng_ng_eh_noSlide> ng) | (ng <any_Vx_ng_ng_eh_noSlide>)))) (([(<any_Cx_oy_ng_t> oy)] | [(oy <any_Cx_oy_ng_t>)]) (t | ((<any_Cx_oy_ng_t> oy) | (oy <any_Cx_oy_ng_t>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_oy_t_thr> thr)] | [(thr <any_Cx_oy_t_thr>)]) sil))
Running scan for frate = 80
Considering guard ng with value 2 for s ...
Considering guard w with value 2 for s ...
candidateGuards = map[ng:true w:true]
Picking guard, ng

Considering guard ng with value 4 for eh ...
Considering guard w with value 4 for eh ...
candidateGuards = map[ng:true w:true]
Picking guard, ng

Considering guard oy with value 1 for t ...
Considering guard zh with value 1 for t ...
candidateGuards = map[oy:true zh:true]
Picking guard, oy


frate, target rule = 80 public <set> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_ng_p_ch_s> ng)] | [(ng <any_Cx_ng_p_ch_s>)]) (s | z | ((<any_Cx_ng_p_ch_s> ng) | (ng <any_Cx_ng_p_ch_s>)))) ((([(<any_Vx_ng_ng_eh_noSlide> ng)] | [(ng <any_Vx_ng_ng_eh_noSlide>)]) ([(<any_Cx_ng_ng_t_s> ng)] | [(ng <any_Cx_ng_ng_t_s>)])) (eh | ((<any_Vx_ng_ng_eh_noSlide> ng) | (ng <any_Vx_ng_ng_eh_noSlide>)))) (([(<any_Cx_oy_ng_t> oy)] | [(oy <any_Cx_oy_ng_t>)]) (t | ((<any_Cx_oy_ng_t> oy) | (oy <any_Cx_oy_ng_t>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_oy_t_g> g)] | [(g <any_Cx_oy_t_g>)]) sil))
Running scan for frate = 72
Considering guard w with value 2 for s ...
Considering guard ng with value 2 for s ...
candidateGuards = map[ng:true w:true]
Picking guard, w

Considering guard w with value 4 for eh ...
Considering guard ng with value 4 for eh ...
candidateGuards = map[ng:true w:true]
Picking guard, ng

Considering guard oy with value 1 for t ...
Considering guard zh with value 1 for t ...
candidateGuards = map[oy:true zh:true]
Picking guard, oy


frate, target rule = 72 public <set> = (((sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_w_p_z_s> w)] | [(w <any_Cx_w_p_z_s>)]) (s | z | ((<any_Cx_w_p_z_s> w) | (w <any_Cx_w_p_z_s>)))) ((([(<any_Vx_ng_w_eh_noSlide> ng)] | [(ng <any_Vx_ng_w_eh_noSlide>)]) ([(<any_Cx_ng_w_t_s> ng)] | [(ng <any_Cx_ng_w_t_s>)])) (eh | ((<any_Vx_ng_w_eh_noSlide> ng) | (ng <any_Vx_ng_w_eh_noSlide>)))) (([(<any_Cx_oy_ng_t> oy)] | [(oy <any_Cx_oy_ng_t>)]) (t | ((<any_Cx_oy_ng_t> oy) | (oy <any_Cx_oy_ng_t>)))) (([(<any_vowel_noSlide> ch)] | [(ch <any_vowel_noSlide>)]) ([(<any_Cx_oy_t_ch> ch)] | [(ch <any_Cx_oy_t_ch>)]) sil))

results =
{72 [{sil 0 2} {s 3 16} {ae 17 32} {ng 33 35} {t 36 47} {sil 48 63}]}
{80 [{sil 0 2} {s 3 19} {ae 20 36} {ng 37 39} {t 40 52} {sil 53 68}]}
{91 [{sil 0 2} {s 3 21} {ae 22 42} {ng 43 45} {t 46 60} {sil 61 108}]}
{105 [{sil 0 2} {s 3 23} {w 24 26} {ae 27 53} {t 54 74} {sil 75 122}]}
{125 [{sil 3 5} {s 6 30} {ae 31 66} {ng 67 69} {t 70 90} {sil 91 147}]}

normalised results =
{72 [{sil 0 2} {s 4 22} {ae 24 44} {ng 46 46} {t 50 65} {sil 67 88}]}
{80 [{sil 0 2} {s 4 24} {ae 25 45} {ng 46 46} {t 50 65} {sil 66 85}]}
{91 [{sil 0 2} {s 3 23} {ae 24 46} {ng 47 47} {t 51 66} {sil 67 119}]}
{105 [{sil 0 2} {s 3 22} {w 23 23} {ae 26 50} {t 51 70} {sil 71 116}]}
{125 [{sil 3 5} {s 5 24} {ae 25 53} {ng 54 54} {t 56 72} {sil 73 118}]}

ruleAligned = [{{s 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{eh 2} []} {{ae 3} [{0 2} {1 2} {2 2} {3 3} {4 2}]} {{t 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {s 4 22} {ae 24 44} {ng 46 46} {t 50 65} {sil 67 67}]}
{80 [{sil 0 0} {s 4 24} {ae 25 45} {ng 46 46} {t 50 65} {sil 66 66}]}
{91 [{sil 0 0} {s 3 23} {ae 24 46} {ng 47 47} {t 51 66} {sil 67 67}]}
{105 [{sil 0 0} {s 3 22} {w 23 23} {ae 26 50} {t 51 70} {sil 71 71}]}
{125 [{sil 3 3} {s 5 24} {ae 25 53} {ng 54 54} {t 56 72} {sil 73 73}]}

timeAligned = [{{s 4 23} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ae 25 46} [{0 2} {1 2} {2 2} {4 2} {3 3}]} {{t 51 66} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 -1 22
i, iTime, newITime, timeStartFrom = 2 0 1 22
i, iTime, newITime, timeStartFrom = 3 1 2 44
combinedVerdict    = [{s 0} {eh 2} {ae 3} {t 0}]
ruleAlignedVerdict = [{s 0} {eh 2} {ae 3} {t 0}]

score->
+1 for s
-1 for eh
-1 for ae
+1 for t
score<-: 0
bestResult = {0 [{s 0} {eh 2} {ae 3} {t 0}] [s eh t]}
testPronounce s good eh missing ae surprise t good
publish->
phonsToAlphas = [{[s] s} {[eh] e} {[t] t}]
getVerdict<-:new {s [s] 0}
getVerdict<-:new {e [eh] 2}
getVerdict<-:new {t [t] 0}
lettersVerdicts = [{s [s] 0} {e [eh] 2} {ae [ae] 3} {t [t] 0}]
publish<-
{
  "results": [
    {
      "letters": "s",
      "phonemes": "s",
      "verdict": "good"
    },
    {
      "letters": "e",
      "phonemes": "ɛ",
      "verdict": "missing"
    },
    {
      "letters": "ae",
      "phonemes": "æ",
      "verdict": "surprise"
    },
    {
      "letters": "t",
      "phonemes": "t",
      "verdict": "good"
    }
  ],
  "err": null
}
