
 length of audio =  1.407625



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.30000000000000004 0.84 1.1400000000000001

 start3, duration3, end3 =  0.30000000000000004 0.76 1.06

 Initial start, duration, end =  0.20000000000000004 0.9400000000000001 1.1400000000000001

 Cut at: start, duration =  0.20000000000000004 1.187625     guard_end =  1.3876249999999999 

Running scan for frate = 125
Running scan for frate = 125
Considering guard oy with value 1 for v ...
Considering guard zh with value 1 for v ...
candidateGuards = map[oy:true zh:true]
Picking guard, oy

Running scan for frate = 125
Considering guard ch with value 2.4000000000000004 for aw ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard oy with value 1 for v ...
Considering guard zh with value 1 for v ...
candidateGuards = map[oy:true zh:true]
Picking guard, oy

Considering guard ch with value 5 for l ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 2.4000000000000004 for aw ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard k with value 3.4000000000000004 for z ...
candidateGuards = map[k:true]
Picking guard, k

Considering guard ch with value 5 for axl ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard k with value 3.4000000000000004 for z ...
candidateGuards = map[k:true]
Picking guard, k


frate, target rule = 125 public <vowels> = (((sil [((m <any_Cx_v_m_p>) | (<any_Cx_v_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]) | (sil p (sil [((m <any_Cx_v_m_p>) | (<any_Cx_v_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]))) (([(<any_Cx_oy_p_m_v> oy)] | [(oy <any_Cx_oy_p_m_v>)]) (v | ((<any_Cx_oy_p_m_v> oy) | (oy <any_Cx_oy_p_m_v>)))) ((([(<any_Vx_ch_oy_aw_noSlide> ch)] | [(ch <any_Vx_ch_oy_aw_noSlide>)]) ([(<any_Cx_ch_oy_l_v> ch)] | [(ch <any_Cx_ch_oy_l_v>)])) (aw | ((<any_Vx_ch_oy_aw_noSlide> ch) | (ch <any_Vx_ch_oy_aw_noSlide>)))) (([(<any_Cx_ch_ch_l> ch)] | [(ch <any_Cx_ch_ch_l>)]) (l | ((<any_Cx_ch_ch_l_z> ch) | (ch <any_Cx_ch_ch_l_z>)))) (([(<any_Cx_k_ch_z_l> k)] | [(k <any_Cx_k_ch_z_l>)]) (z | ((<any_Cx_k_ch_z_l> k) | (k <any_Cx_k_ch_z_l>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_k_z_b> b)] | [(b <any_Cx_k_z_b>)]) sil))
Running scan for frate = 105

frate, target rule = 125 public <vowels> = (((sil [((l <any_Cx_v_l_p>) | (<any_Cx_v_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]) | (sil p (sil [((l <any_Cx_v_l_p>) | (<any_Cx_v_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]))) (([(<any_Cx_oy_p_l_v> oy)] | [(oy <any_Cx_oy_p_l_v>)]) (v | ((<any_Cx_oy_p_l_v> oy) | (oy <any_Cx_oy_p_l_v>)))) ((([(<any_Vx_ch_oy_aw_noSlide> ch)] | [(ch <any_Vx_ch_oy_aw_noSlide>)]) ([(<any_Cx_ch_oy_axl_v> ch)] | [(ch <any_Cx_ch_oy_axl_v>)])) (aw | ((<any_Vx_ch_oy_aw_noSlide> ch) | (ch <any_Vx_ch_oy_aw_noSlide>)))) (([(<any_Cx_ch_ch_axl> ch)] | [(ch <any_Cx_ch_ch_axl>)]) (axl | ((<any_Cx_ch_ch_axl_z> ch) | (ch <any_Cx_ch_ch_axl_z>)))) (([(<any_Cx_k_ch_z_axl> k)] | [(k <any_Cx_k_ch_z_axl>)]) (z | ((<any_Cx_k_ch_z_axl> k) | (k <any_Cx_k_ch_z_axl>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_k_z_thr> thr)] | [(thr <any_Cx_k_z_thr>)]) sil))
Running scan for frate = 105
Considering guard oy with value 1 for v ...
Considering guard zh with value 1 for v ...
candidateGuards = map[oy:true zh:true]
Picking guard, oy

Considering guard ch with value 2.4000000000000004 for aw ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard oy with value 1 for v ...
Considering guard zh with value 1 for v ...
candidateGuards = map[oy:true zh:true]
Picking guard, oy

Considering guard ch with value 5 for axl ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard k with value 3.4000000000000004 for z ...
candidateGuards = map[k:true]
Picking guard, k

Considering guard zh with value 2 for aw ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 1.6 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh


Considering guard ch with value 5 for l ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard k with value 3.4000000000000004 for z ...
candidateGuards = map[k:true]
Picking guard, k

frate, target rule = 105 public <vowels> = (((sil [((n <any_Cx_v_n_p>) | (<any_Cx_v_n_p> n))] [((n <any_vowel_noSlide>) | (<any_vowel_noSlide> n))]) | (sil p (sil [((n <any_Cx_v_n_p>) | (<any_Cx_v_n_p> n))] [((n <any_vowel_noSlide>) | (<any_vowel_noSlide> n))]))) (([(<any_Cx_oy_p_n_v> oy)] | [(oy <any_Cx_oy_p_n_v>)]) (v | ((<any_Cx_oy_p_n_v> oy) | (oy <any_Cx_oy_p_n_v>)))) ((([(<any_Vx_ch_oy_aw_noSlide> ch)] | [(ch <any_Vx_ch_oy_aw_noSlide>)]) ([(<any_Cx_ch_oy_axl_v> ch)] | [(ch <any_Cx_ch_oy_axl_v>)])) (aw | ((<any_Vx_ch_oy_aw_noSlide> ch) | (ch <any_Vx_ch_oy_aw_noSlide>)))) (([(<any_Cx_ch_ch_axl> ch)] | [(ch <any_Cx_ch_ch_axl>)]) (axl | ((<any_Cx_ch_ch_axl_z> ch) | (ch <any_Cx_ch_ch_axl_z>)))) (([(<any_Cx_k_ch_z_axl> k)] | [(k <any_Cx_k_ch_z_axl>)]) (z | ((<any_Cx_k_ch_z_axl> k) | (k <any_Cx_k_ch_z_axl>)))) (([(<any_vowel_noSlide> s)] | [(s <any_vowel_noSlide>)]) ([(<any_Cx_k_z_s> s)] | [(s <any_Cx_k_z_s>)]) sil))
Running scan for frate = 91
Considering guard zh with value 1 for v ...
Considering guard oy with value 1 for v ...
candidateGuards = map[oy:true zh:true]
Picking guard, zh


frate, target rule = 125 public <vowels> = (((sil [((m <any_Cx_v_m_p>) | (<any_Cx_v_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]) | (sil p (sil [((m <any_Cx_v_m_p>) | (<any_Cx_v_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]))) (([(<any_Cx_oy_p_m_v> oy)] | [(oy <any_Cx_oy_p_m_v>)]) (v | ((<any_Cx_oy_p_m_v> oy) | (oy <any_Cx_oy_p_m_v>)))) ((([(<any_Vx_zh_oy_aw_noSlide> zh)] | [(zh <any_Vx_zh_oy_aw_noSlide>)]) ([(<any_Cx_zh_oy_ax_v> zh)] | [(zh <any_Cx_zh_oy_ax_v>)])) (aw | ((<any_Vx_zh_oy_aw_noSlide> zh) | (zh <any_Vx_zh_oy_aw_noSlide>)))) (([(<any_Cx_sh_zh_ax_l> sh)] | [(sh <any_Cx_sh_zh_ax_l>)]) (ax | ((<any_Cx_sh_zh_ax_l> sh) | (sh <any_Cx_sh_zh_ax_l>)))) (([(<any_Cx_ch_sh_l_ax> ch)] | [(ch <any_Cx_ch_sh_l_ax>)]) (l | ((<any_Cx_ch_sh_l_z_ax> ch) | (ch <any_Cx_ch_sh_l_z_ax>)))) (([(<any_Cx_k_ch_z_l> k)] | [(k <any_Cx_k_ch_z_l>)]) (z | ((<any_Cx_k_ch_z_l> k) | (k <any_Cx_k_ch_z_l>)))) (([(<any_vowel_noSlide> s)] | [(s <any_vowel_noSlide>)]) ([(<any_Cx_k_z_s> s)] | [(s <any_Cx_k_z_s>)]) sil))
Running scan for frate = 105
Considering guard zh with value 1 for v ...
Considering guard oy with value 1 for v ...
candidateGuards = map[oy:true zh:true]
Picking guard, zh

Considering guard zh with value 1 for v ...
Considering guard oy with value 1 for v ...
candidateGuards = map[oy:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for aw ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 1.6 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 2.4000000000000004 for aw ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 5 for l ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard k with value 3.4000000000000004 for z ...
candidateGuards = map[k:true]
Picking guard, k

Considering guard ch with value 5 for axl ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard k with value 3.4000000000000004 for z ...
candidateGuards = map[k:true]
Picking guard, k


frate, target rule = 105 public <vowels> = (((sil [((n <any_Cx_v_n_p>) | (<any_Cx_v_n_p> n))] [((n <any_vowel_noSlide>) | (<any_vowel_noSlide> n))]) | (sil p (sil [((n <any_Cx_v_n_p>) | (<any_Cx_v_n_p> n))] [((n <any_vowel_noSlide>) | (<any_vowel_noSlide> n))]))) (([(<any_Cx_zh_p_n_v> zh)] | [(zh <any_Cx_zh_p_n_v>)]) (v | ((<any_Cx_zh_p_n_v> zh) | (zh <any_Cx_zh_p_n_v>)))) ((([(<any_Vx_zh_zh_aw_noSlide> zh)] | [(zh <any_Vx_zh_zh_aw_noSlide>)]) ([(<any_Cx_zh_zh_ax_v> zh)] | [(zh <any_Cx_zh_zh_ax_v>)])) (aw | ((<any_Vx_zh_zh_aw_noSlide> zh) | (zh <any_Vx_zh_zh_aw_noSlide>)))) (([(<any_Cx_sh_zh_ax_l> sh)] | [(sh <any_Cx_sh_zh_ax_l>)]) (ax | ((<any_Cx_sh_zh_ax_l> sh) | (sh <any_Cx_sh_zh_ax_l>)))) (([(<any_Cx_ch_sh_l_ax> ch)] | [(ch <any_Cx_ch_sh_l_ax>)]) (l | ((<any_Cx_ch_sh_l_z_ax> ch) | (ch <any_Cx_ch_sh_l_z_ax>)))) (([(<any_Cx_k_ch_z_l> k)] | [(k <any_Cx_k_ch_z_l>)]) (z | ((<any_Cx_k_ch_z_l> k) | (k <any_Cx_k_ch_z_l>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_k_z_thr> thr)] | [(thr <any_Cx_k_z_thr>)]) sil))
Running scan for frate = 91

Considering guard zh with value 1 for v ...
Considering guard oy with value 1 for v ...
candidateGuards = map[oy:true zh:true]
Picking guard, zh

frate, target rule = 91 public <vowels> = (((sil [((l <any_Cx_v_l_p>) | (<any_Cx_v_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]) | (sil p (sil [((l <any_Cx_v_l_p>) | (<any_Cx_v_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]))) (([(<any_Cx_zh_p_l_v> zh)] | [(zh <any_Cx_zh_p_l_v>)]) (v | ((<any_Cx_zh_p_l_v> zh) | (zh <any_Cx_zh_p_l_v>)))) ((([(<any_Vx_ch_zh_aw_noSlide> ch)] | [(ch <any_Vx_ch_zh_aw_noSlide>)]) ([(<any_Cx_ch_zh_axl_v> ch)] | [(ch <any_Cx_ch_zh_axl_v>)])) (aw | ((<any_Vx_ch_zh_aw_noSlide> ch) | (ch <any_Vx_ch_zh_aw_noSlide>)))) (([(<any_Cx_ch_ch_axl> ch)] | [(ch <any_Cx_ch_ch_axl>)]) (axl | ((<any_Cx_ch_ch_axl_z> ch) | (ch <any_Cx_ch_ch_axl_z>)))) (([(<any_Cx_k_ch_z_axl> k)] | [(k <any_Cx_k_ch_z_axl>)]) (z | ((<any_Cx_k_ch_z_axl> k) | (k <any_Cx_k_ch_z_axl>)))) (([(<any_vowel_noSlide> s)] | [(s <any_vowel_noSlide>)]) ([(<any_Cx_k_z_s> s)] | [(s <any_Cx_k_z_s>)]) sil))
Running scan for frate = 80
Considering guard zh with value 2 for aw ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for v ...
Considering guard oy with value 1 for v ...
candidateGuards = map[oy:true zh:true]
Picking guard, oy

Considering guard sh with value 1.6 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 2.4000000000000004 for aw ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 5 for l ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 5 for axl ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard k with value 3.4000000000000004 for z ...
candidateGuards = map[k:true]
Picking guard, k

Considering guard k with value 3.4000000000000004 for z ...
candidateGuards = map[k:true]
Picking guard, k


frate, target rule = 91 public <vowels> = (((sil [((l <any_Cx_v_l_p>) | (<any_Cx_v_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]) | (sil p (sil [((l <any_Cx_v_l_p>) | (<any_Cx_v_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]))) (([(<any_Cx_zh_p_l_v> zh)] | [(zh <any_Cx_zh_p_l_v>)]) (v | ((<any_Cx_zh_p_l_v> zh) | (zh <any_Cx_zh_p_l_v>)))) ((([(<any_Vx_zh_zh_aw_noSlide> zh)] | [(zh <any_Vx_zh_zh_aw_noSlide>)]) ([(<any_Cx_zh_zh_ax_v> zh)] | [(zh <any_Cx_zh_zh_ax_v>)])) (aw | ((<any_Vx_zh_zh_aw_noSlide> zh) | (zh <any_Vx_zh_zh_aw_noSlide>)))) (([(<any_Cx_sh_zh_ax_l> sh)] | [(sh <any_Cx_sh_zh_ax_l>)]) (ax | ((<any_Cx_sh_zh_ax_l> sh) | (sh <any_Cx_sh_zh_ax_l>)))) (([(<any_Cx_ch_sh_l_ax> ch)] | [(ch <any_Cx_ch_sh_l_ax>)]) (l | ((<any_Cx_ch_sh_l_z_ax> ch) | (ch <any_Cx_ch_sh_l_z_ax>)))) (([(<any_Cx_k_ch_z_l> k)] | [(k <any_Cx_k_ch_z_l>)]) (z | ((<any_Cx_k_ch_z_l> k) | (k <any_Cx_k_ch_z_l>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_k_z_v> v)] | [(v <any_Cx_k_z_v>)]) sil))

frate, target rule = 80 public <vowels> = (((sil [((r <any_Cx_v_r_p>) | (<any_Cx_v_r_p> r))] [((r <any_vowel_noSlide>) | (<any_vowel_noSlide> r))]) | (sil p (sil [((r <any_Cx_v_r_p>) | (<any_Cx_v_r_p> r))] [((r <any_vowel_noSlide>) | (<any_vowel_noSlide> r))]))) (([(<any_Cx_oy_p_r_v> oy)] | [(oy <any_Cx_oy_p_r_v>)]) (v | ((<any_Cx_oy_p_r_v> oy) | (oy <any_Cx_oy_p_r_v>)))) ((([(<any_Vx_ch_oy_aw_noSlide> ch)] | [(ch <any_Vx_ch_oy_aw_noSlide>)]) ([(<any_Cx_ch_oy_axl_v> ch)] | [(ch <any_Cx_ch_oy_axl_v>)])) (aw | ((<any_Vx_ch_oy_aw_noSlide> ch) | (ch <any_Vx_ch_oy_aw_noSlide>)))) (([(<any_Cx_ch_ch_axl> ch)] | [(ch <any_Cx_ch_ch_axl>)]) (axl | ((<any_Cx_ch_ch_axl_z> ch) | (ch <any_Cx_ch_ch_axl_z>)))) (([(<any_Cx_k_ch_z_axl> k)] | [(k <any_Cx_k_ch_z_axl>)]) (z | ((<any_Cx_k_ch_z_axl> k) | (k <any_Cx_k_ch_z_axl>)))) (([(<any_vowel_noSlide> s)] | [(s <any_vowel_noSlide>)]) ([(<any_Cx_k_z_s> s)] | [(s <any_Cx_k_z_s>)]) sil))
Running scan for frate = 72
Considering guard zh with value 1 for v ...
Considering guard oy with value 1 for v ...
candidateGuards = map[oy:true zh:true]
Picking guard, zh

Considering guard ch with value 2.4000000000000004 for aw ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 2.4000000000000004 for aw ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 5 for axl ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 5 for l ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard k with value 3.4000000000000004 for z ...
candidateGuards = map[k:true]
Picking guard, k

Considering guard k with value 3.4000000000000004 for z ...
candidateGuards = map[k:true]
Picking guard, k



frate, target rule = 72 public <vowels> = (((sil [((l <any_Cx_v_l_p>) | (<any_Cx_v_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]) | (sil p (sil [((l <any_Cx_v_l_p>) | (<any_Cx_v_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]))) (([(<any_Cx_zh_p_l_v> zh)] | [(zh <any_Cx_zh_p_l_v>)]) (v | ((<any_Cx_zh_p_l_v> zh) | (zh <any_Cx_zh_p_l_v>)))) ((([(<any_Vx_ch_zh_aw_noSlide> ch)] | [(ch <any_Vx_ch_zh_aw_noSlide>)]) ([(<any_Cx_ch_zh_axl_v> ch)] | [(ch <any_Cx_ch_zh_axl_v>)])) (aw | ((<any_Vx_ch_zh_aw_noSlide> ch) | (ch <any_Vx_ch_zh_aw_noSlide>)))) (([(<any_Cx_ch_ch_axl> ch)] | [(ch <any_Cx_ch_ch_axl>)]) (axl | ((<any_Cx_ch_ch_axl_z> ch) | (ch <any_Cx_ch_ch_axl_z>)))) (([(<any_Cx_k_ch_z_axl> k)] | [(k <any_Cx_k_ch_z_axl>)]) (z | ((<any_Cx_k_ch_z_axl> k) | (k <any_Cx_k_ch_z_axl>)))) (([(<any_vowel_noSlide> s)] | [(s <any_vowel_noSlide>)]) ([(<any_Cx_k_z_s> s)] | [(s <any_Cx_k_z_s>)]) sil))
frate, target rule = 105 public <vowels> = (((sil [((m <any_Cx_v_m_p>) | (<any_Cx_v_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]) | (sil p (sil [((m <any_Cx_v_m_p>) | (<any_Cx_v_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]))) (([(<any_Cx_zh_p_m_v> zh)] | [(zh <any_Cx_zh_p_m_v>)]) (v | ((<any_Cx_zh_p_m_v> zh) | (zh <any_Cx_zh_p_m_v>)))) ((([(<any_Vx_ch_zh_aw_noSlide> ch)] | [(ch <any_Vx_ch_zh_aw_noSlide>)]) ([(<any_Cx_ch_zh_l_v> ch)] | [(ch <any_Cx_ch_zh_l_v>)])) (aw | ((<any_Vx_ch_zh_aw_noSlide> ch) | (ch <any_Vx_ch_zh_aw_noSlide>)))) (([(<any_Cx_ch_ch_l> ch)] | [(ch <any_Cx_ch_ch_l>)]) (l | ((<any_Cx_ch_ch_l_z> ch) | (ch <any_Cx_ch_ch_l_z>)))) (([(<any_Cx_k_ch_z_l> k)] | [(k <any_Cx_k_ch_z_l>)]) (z | ((<any_Cx_k_ch_z_l> k) | (k <any_Cx_k_ch_z_l>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_k_z_b> b)] | [(b <any_Cx_k_z_b>)]) sil))
Running scan for frate = 91
Running scan for frate = 80
Considering guard oy with value 1 for v ...
Considering guard zh with value 1 for v ...
candidateGuards = map[oy:true zh:true]
Picking guard, oy

Considering guard oy with value 1 for v ...
Considering guard zh with value 1 for v ...
candidateGuards = map[oy:true zh:true]
Picking guard, oy

Considering guard ch with value 2.4000000000000004 for aw ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard zh with value 2 for aw ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 5 for l ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard sh with value 1.6 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard k with value 3.4000000000000004 for z ...
candidateGuards = map[k:true]
Picking guard, k

Considering guard ch with value 5 for l ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard k with value 3.4000000000000004 for z ...
candidateGuards = map[k:true]
Picking guard, k


frate, target rule = 91 public <vowels> = (((sil [((r <any_Cx_v_r_p>) | (<any_Cx_v_r_p> r))] [((r <any_vowel_noSlide>) | (<any_vowel_noSlide> r))]) | (sil p (sil [((r <any_Cx_v_r_p>) | (<any_Cx_v_r_p> r))] [((r <any_vowel_noSlide>) | (<any_vowel_noSlide> r))]))) (([(<any_Cx_oy_p_r_v> oy)] | [(oy <any_Cx_oy_p_r_v>)]) (v | ((<any_Cx_oy_p_r_v> oy) | (oy <any_Cx_oy_p_r_v>)))) ((([(<any_Vx_ch_oy_aw_noSlide> ch)] | [(ch <any_Vx_ch_oy_aw_noSlide>)]) ([(<any_Cx_ch_oy_l_v> ch)] | [(ch <any_Cx_ch_oy_l_v>)])) (aw | ((<any_Vx_ch_oy_aw_noSlide> ch) | (ch <any_Vx_ch_oy_aw_noSlide>)))) (([(<any_Cx_ch_ch_l> ch)] | [(ch <any_Cx_ch_ch_l>)]) (l | ((<any_Cx_ch_ch_l_z> ch) | (ch <any_Cx_ch_ch_l_z>)))) (([(<any_Cx_k_ch_z_l> k)] | [(k <any_Cx_k_ch_z_l>)]) (z | ((<any_Cx_k_ch_z_l> k) | (k <any_Cx_k_ch_z_l>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_k_z_b> b)] | [(b <any_Cx_k_z_b>)]) sil))
Running scan for frate = 80
Considering guard oy with value 1 for v ...
Considering guard zh with value 1 for v ...
candidateGuards = map[oy:true zh:true]
Picking guard, oy


frate, target rule = 80 public <vowels> = (((sil [((m <any_Cx_v_m_p>) | (<any_Cx_v_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]) | (sil p (sil [((m <any_Cx_v_m_p>) | (<any_Cx_v_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]))) (([(<any_Cx_oy_p_m_v> oy)] | [(oy <any_Cx_oy_p_m_v>)]) (v | ((<any_Cx_oy_p_m_v> oy) | (oy <any_Cx_oy_p_m_v>)))) ((([(<any_Vx_zh_oy_aw_noSlide> zh)] | [(zh <any_Vx_zh_oy_aw_noSlide>)]) ([(<any_Cx_zh_oy_ax_v> zh)] | [(zh <any_Cx_zh_oy_ax_v>)])) (aw | ((<any_Vx_zh_oy_aw_noSlide> zh) | (zh <any_Vx_zh_oy_aw_noSlide>)))) (([(<any_Cx_sh_zh_ax_l> sh)] | [(sh <any_Cx_sh_zh_ax_l>)]) (ax | ((<any_Cx_sh_zh_ax_l> sh) | (sh <any_Cx_sh_zh_ax_l>)))) (([(<any_Cx_ch_sh_l_ax> ch)] | [(ch <any_Cx_ch_sh_l_ax>)]) (l | ((<any_Cx_ch_sh_l_z_ax> ch) | (ch <any_Cx_ch_sh_l_z_ax>)))) (([(<any_Cx_k_ch_z_l> k)] | [(k <any_Cx_k_ch_z_l>)]) (z | ((<any_Cx_k_ch_z_l> k) | (k <any_Cx_k_ch_z_l>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_k_z_b> b)] | [(b <any_Cx_k_z_b>)]) sil))
Running scan for frate = 72
Considering guard oy with value 1 for v ...
Considering guard zh with value 1 for v ...
candidateGuards = map[oy:true zh:true]
Picking guard, oy

Considering guard zh with value 2 for aw ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 1.6 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 5 for l ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard k with value 3.4000000000000004 for z ...
candidateGuards = map[k:true]
Picking guard, k

Considering guard ch with value 2.4000000000000004 for aw ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 5 for l ...
candidateGuards = map[ch:true]
Picking guard, ch


Considering guard k with value 3.4000000000000004 for z ...
candidateGuards = map[k:true]
Picking guard, k

frate, target rule = 72 public <vowels> = (((sil [((r <any_Cx_v_r_p>) | (<any_Cx_v_r_p> r))] [((r <any_vowel_noSlide>) | (<any_vowel_noSlide> r))]) | (sil p (sil [((r <any_Cx_v_r_p>) | (<any_Cx_v_r_p> r))] [((r <any_vowel_noSlide>) | (<any_vowel_noSlide> r))]))) (([(<any_Cx_oy_p_r_v> oy)] | [(oy <any_Cx_oy_p_r_v>)]) (v | ((<any_Cx_oy_p_r_v> oy) | (oy <any_Cx_oy_p_r_v>)))) ((([(<any_Vx_zh_oy_aw_noSlide> zh)] | [(zh <any_Vx_zh_oy_aw_noSlide>)]) ([(<any_Cx_zh_oy_ax_v> zh)] | [(zh <any_Cx_zh_oy_ax_v>)])) (aw | ((<any_Vx_zh_oy_aw_noSlide> zh) | (zh <any_Vx_zh_oy_aw_noSlide>)))) (([(<any_Cx_sh_zh_ax_l> sh)] | [(sh <any_Cx_sh_zh_ax_l>)]) (ax | ((<any_Cx_sh_zh_ax_l> sh) | (sh <any_Cx_sh_zh_ax_l>)))) (([(<any_Cx_ch_sh_l_ax> ch)] | [(ch <any_Cx_ch_sh_l_ax>)]) (l | ((<any_Cx_ch_sh_l_z_ax> ch) | (ch <any_Cx_ch_sh_l_z_ax>)))) (([(<any_Cx_k_ch_z_l> k)] | [(k <any_Cx_k_ch_z_l>)]) (z | ((<any_Cx_k_ch_z_l> k) | (k <any_Cx_k_ch_z_l>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_k_z_thr> thr)] | [(thr <any_Cx_k_z_thr>)]) sil))

frate, target rule = 80 public <vowels> = (((sil [((z <any_Cx_v_z_p>) | (<any_Cx_v_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_v_z_p>) | (<any_Cx_v_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_oy_p_z_v> oy)] | [(oy <any_Cx_oy_p_z_v>)]) (v | ((<any_Cx_oy_p_z_v> oy) | (oy <any_Cx_oy_p_z_v>)))) ((([(<any_Vx_ch_oy_aw_noSlide> ch)] | [(ch <any_Vx_ch_oy_aw_noSlide>)]) ([(<any_Cx_ch_oy_l_v> ch)] | [(ch <any_Cx_ch_oy_l_v>)])) (aw | ((<any_Vx_ch_oy_aw_noSlide> ch) | (ch <any_Vx_ch_oy_aw_noSlide>)))) (([(<any_Cx_ch_ch_l> ch)] | [(ch <any_Cx_ch_ch_l>)]) (l | ((<any_Cx_ch_ch_l_z> ch) | (ch <any_Cx_ch_ch_l_z>)))) (([(<any_Cx_k_ch_z_l> k)] | [(k <any_Cx_k_ch_z_l>)]) (z | ((<any_Cx_k_ch_z_l> k) | (k <any_Cx_k_ch_z_l>)))) (([(<any_vowel_noSlide> s)] | [(s <any_vowel_noSlide>)]) ([(<any_Cx_k_z_s> s)] | [(s <any_Cx_k_z_s>)]) sil))
Running scan for frate = 72
Considering guard zh with value 1 for v ...
Considering guard oy with value 1 for v ...
candidateGuards = map[oy:true zh:true]
Picking guard, oy

Considering guard ch with value 2.4000000000000004 for aw ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 5 for l ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard k with value 3.4000000000000004 for z ...
candidateGuards = map[k:true]
Picking guard, k


frate, target rule = 72 public <vowels> = (((sil [((l <any_Cx_v_l_p>) | (<any_Cx_v_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]) | (sil p (sil [((l <any_Cx_v_l_p>) | (<any_Cx_v_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]))) (([(<any_Cx_oy_p_l_v> oy)] | [(oy <any_Cx_oy_p_l_v>)]) (v | ((<any_Cx_oy_p_l_v> oy) | (oy <any_Cx_oy_p_l_v>)))) ((([(<any_Vx_ch_oy_aw_noSlide> ch)] | [(ch <any_Vx_ch_oy_aw_noSlide>)]) ([(<any_Cx_ch_oy_l_v> ch)] | [(ch <any_Cx_ch_oy_l_v>)])) (aw | ((<any_Vx_ch_oy_aw_noSlide> ch) | (ch <any_Vx_ch_oy_aw_noSlide>)))) (([(<any_Cx_ch_ch_l> ch)] | [(ch <any_Cx_ch_ch_l>)]) (l | ((<any_Cx_ch_ch_l_z> ch) | (ch <any_Cx_ch_ch_l_z>)))) (([(<any_Cx_k_ch_z_l> k)] | [(k <any_Cx_k_ch_z_l>)]) (z | ((<any_Cx_k_ch_z_l> k) | (k <any_Cx_k_ch_z_l>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_k_z_v> v)] | [(v <any_Cx_k_z_v>)]) sil))

results =
{72 [{sil 0 11} {v 12 17} {aw 18 30} {axl 31 48} {z 49 63} {sil 64 79}]}
{80 [{sil 0 13} {v 14 19} {aw 20 33} {axl 34 54} {z 55 69} {sil 70 86}]}
{91 [{sil 0 16} {v 17 22} {aw 23 37} {axl 38 61} {z 62 80} {sil 81 102}]}
{105 [{sil 0 18} {v 19 26} {aw 27 43} {axl 44 71} {z 72 93} {sil 94 123}]}
{125 [{sil 3 23} {v 24 32} {aw 33 53} {axl 54 89} {z 90 109} {sil 110 148}]}

normalised results =
{72 [{sil 0 11} {v 17 24} {aw 25 42} {axl 43 67} {z 68 88} {sil 89 110}]}
{80 [{sil 0 13} {v 18 24} {aw 25 41} {axl 43 68} {z 69 86} {sil 88 108}]}
{91 [{sil 0 16} {v 19 24} {aw 25 41} {axl 42 67} {z 68 88} {sil 89 112}]}
{105 [{sil 0 18} {v 18 25} {aw 26 41} {axl 42 68} {z 69 89} {sil 90 117}]}
{125 [{sil 3 23} {v 19 26} {aw 26 42} {axl 43 71} {z 72 87} {sil 88 118}]}

ruleAligned = [{{v 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{aw 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{axl 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{z 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {v 17 24} {aw 25 42} {axl 43 67} {z 68 88} {sil 89 89}]}
{80 [{sil 0 0} {v 18 24} {aw 25 41} {axl 43 68} {z 69 86} {sil 88 88}]}
{91 [{sil 0 0} {v 19 24} {aw 25 41} {axl 42 67} {z 68 88} {sil 89 89}]}
{105 [{sil 0 0} {v 18 25} {aw 26 41} {axl 42 68} {z 69 89} {sil 90 90}]}
{125 [{sil 3 3} {v 19 26} {aw 26 42} {axl 43 71} {z 72 87} {sil 88 88}]}

timeAligned = [{{v 18 24} [{0 1} {1 1} {3 1} {2 1} {4 1}]} {{aw 25 41} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{axl 43 68} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{z 69 88} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 24
i, iTime, newITime, timeStartFrom = 2 1 2 41
i, iTime, newITime, timeStartFrom = 3 2 3 67
combinedVerdict    = [{v 0} {aw 0} {axl 0} {z 0}]
ruleAlignedVerdict = [{v 0} {aw 0} {axl 0} {z 0}]

score->
+1 for v
+1 for aw
+1 for axl
+1 for z
score<-: 9

results =
{72 [{sil 0 11} {v 12 17} {aw 18 30} {l 31 48} {z 49 63} {sil 64 79}]}
{80 [{sil 0 13} {v 14 19} {aw 20 39} {l 40 53} {z 54 69} {sil 70 86}]}
{91 [{sil 0 16} {v 17 22} {aw 23 37} {l 38 61} {z 62 80} {sil 81 102}]}
{105 [{sil 0 18} {v 19 26} {aw 27 43} {l 44 74} {z 75 93} {sil 94 123}]}
{125 [{sil 3 23} {v 24 32} {aw 33 53} {l 54 89} {z 90 109} {sil 110 148}]}

normalised results =
{72 [{sil 0 11} {v 17 24} {aw 25 42} {l 43 67} {z 68 88} {sil 89 110}]}
{80 [{sil 0 13} {v 18 24} {aw 25 49} {l 50 66} {z 68 86} {sil 88 108}]}
{91 [{sil 0 16} {v 19 24} {aw 25 41} {l 42 67} {z 68 88} {sil 89 112}]}
{105 [{sil 0 18} {v 18 25} {aw 26 41} {l 42 70} {z 71 89} {sil 90 117}]}
{125 [{sil 3 23} {v 19 26} {aw 26 42} {l 43 71} {z 72 87} {sil 88 118}]}

ruleAligned = [{{v 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{aw 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{l 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{z 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {v 17 24} {aw 25 42} {l 43 67} {z 68 88} {sil 89 89}]}
{80 [{sil 0 0} {v 18 24} {aw 25 49} {l 50 66} {z 68 86} {sil 88 88}]}
{91 [{sil 0 0} {v 19 24} {aw 25 41} {l 42 67} {z 68 88} {sil 89 89}]}
{105 [{sil 0 0} {v 18 25} {aw 26 41} {l 42 70} {z 71 89} {sil 90 90}]}
{125 [{sil 3 3} {v 19 26} {aw 26 42} {l 43 71} {z 72 87} {sil 88 88}]}

timeAligned = [{{v 18 24} [{0 1} {1 1} {3 1} {2 1} {4 1}]} {{aw 25 42} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{l 43 67} [{0 3} {2 3} {3 3} {4 3} {1 3}]} {{z 68 88} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 24
i, iTime, newITime, timeStartFrom = 2 1 2 41
i, iTime, newITime, timeStartFrom = 3 2 3 66
combinedVerdict    = [{v 0} {aw 0} {l 0} {z 0}]
ruleAlignedVerdict = [{v 0} {aw 0} {l 0} {z 0}]

score->
+1 for v
+1 for aw
+1 for l
+1 for z
score<-: 9

results =
{72 [{sil 0 11} {v 12 17} {aw 18 35} {ax 36 38} {l 39 48} {z 49 63} {sil 64 79}]}
{80 [{sil 0 13} {v 14 19} {aw 20 39} {ax 40 42} {l 43 53} {z 54 69} {sil 70 86}]}
{91 [{sil 0 16} {v 17 22} {aw 23 37} {ax 38 40} {l 41 61} {z 62 80} {sil 81 102}]}
{105 [{sil 0 18} {v 19 26} {aw 27 42} {ax 43 45} {l 46 74} {z 75 93} {sil 94 123}]}
{125 [{sil 3 23} {v 24 32} {aw 33 51} {ax 52 54} {l 55 89} {z 90 109} {sil 110 148}]}

normalised results =
{72 [{sil 0 11} {v 17 24} {aw 25 49} {ax 50 50} {l 54 67} {z 68 88} {sil 89 110}]}
{80 [{sil 0 13} {v 18 24} {aw 25 49} {ax 50 50} {l 54 66} {z 68 86} {sil 88 108}]}
{91 [{sil 0 16} {v 19 24} {aw 25 41} {ax 42 42} {l 45 67} {z 68 88} {sil 89 112}]}
{105 [{sil 0 18} {v 18 25} {aw 26 40} {ax 41 41} {l 44 70} {z 71 89} {sil 90 117}]}
{125 [{sil 3 23} {v 19 26} {aw 26 41} {ax 42 42} {l 44 71} {z 72 87} {sil 88 118}]}

ruleAligned = [{{v 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{aw 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{ax 2} []} {{l 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{z 0} [{0 5} {1 5} {2 5} {3 5} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {v 17 24} {aw 25 49} {ax 50 50} {l 54 67} {z 68 88} {sil 89 89}]}
{80 [{sil 0 0} {v 18 24} {aw 25 49} {ax 50 50} {l 54 66} {z 68 86} {sil 88 88}]}
{91 [{sil 0 0} {v 19 24} {aw 25 41} {ax 42 42} {l 45 67} {z 68 88} {sil 89 89}]}
{105 [{sil 0 0} {v 18 25} {aw 26 40} {ax 41 41} {l 44 70} {z 71 89} {sil 90 90}]}
{125 [{sil 3 3} {v 19 26} {aw 26 41} {ax 42 42} {l 44 71} {z 72 87} {sil 88 88}]}

timeAligned = [{{v 18 24} [{0 1} {1 1} {3 1} {2 1} {4 1}]} {{aw 25 41} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{l 45 67} [{2 4} {3 4} {4 4} {0 4} {1 4}]} {{z 68 88} [{0 5} {1 5} {2 5} {3 5} {4 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 24
i, iTime, newITime, timeStartFrom = 2 1 -1 40
i, iTime, newITime, timeStartFrom = 3 1 2 40
i, iTime, newITime, timeStartFrom = 4 2 3 66
combinedVerdict    = [{v 0} {aw 0} {ax 2} {l 0} {z 0}]
ruleAlignedVerdict = [{v 0} {aw 0} {ax 2} {l 0} {z 0}]

score->
+1 for v
+1 for aw
-1 for ax
+1 for l
+1 for z
score<-: 3
testPronounce v good aw good axl good z good
publish->
phonsToAlphas = [{[v] v} {[aw] ow} {[axl] el} {[z] s}]
getVerdict<-:new {v [v] 0}
getVerdict<-:new {ow [aw] 0}
getVerdict<-:new {el [axl] 0}
getVerdict<-:new {s [z] 0}
lettersVerdicts = [{v [v] 0} {ow [aw] 0} {el [axl] 0} {s [z] 0}]
publish<-
{
  "results": [
    {
      "letters": "v",
      "phonemes": "v",
      "verdict": "good"
    },
    {
      "letters": "ow",
      "phonemes": "ɑʊ",
      "verdict": "good"
    },
    {
      "letters": "el",
      "phonemes": "axl",
      "verdict": "good"
    },
    {
      "letters": "s",
      "phonemes": "z",
      "verdict": "good"
    }
  ],
  "err": null
}
