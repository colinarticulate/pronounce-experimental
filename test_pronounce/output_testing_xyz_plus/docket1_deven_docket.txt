
 length of audio =  3.135625



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.52 0.78 1.3

 start3, duration3, end3 =  0.52 0.33999999999999997 0.86

 Initial start, duration, end =  0.42000000000000004 0.88 1.3

 Cut at: start, duration =  0.42000000000000004 1.33     guard_end =  1.75 

Running scan for frate = 125
Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 7.800000000000001 for oh ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard z with value 2 for k ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 3 for t ...
candidateGuards = map[r:true]
Picking guard, r

frate, target rule = 125 public <docket> = (((sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_d_oh> sh)] | [(sh <any_Cx_sh_p_z_d_oh>)]) (d | ((<any_Cx_sh_p_z_d_oh> sh) | (sh <any_Cx_sh_p_z_d_oh>)))) (([(<any_Cx_sh_sh_oh_k_d> sh)] | [(sh <any_Cx_sh_sh_oh_k_d>)]) (oh | ((<any_Cx_sh_sh_oh_k> sh) | (sh <any_Cx_sh_sh_oh_k>)))) (([(<any_Cx_z_sh_k_oh> z)] | [(z <any_Cx_z_sh_k_oh>)]) (k | ((<any_Cx_z_sh_k_oh> z) | (z <any_Cx_z_sh_k_oh>)))) ((([(<any_Vx_r_z_ih_noSlide> r)] | [(r <any_Vx_r_z_ih_noSlide>)]) ([(<any_Cx_r_z_t_k> r)] | [(r <any_Cx_r_z_t_k>)])) (ih | ((<any_Vx_r_z_ih_noSlide> r) | (r <any_Vx_r_z_ih_noSlide>)))) (([(<any_Cx_r_r_t> r)] | [(r <any_Cx_r_r_t>)]) (t | ((<any_Cx_r_r_t> r) | (r <any_Cx_r_r_t>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_r_t_p> p)] | [(p <any_Cx_r_t_p>)]) sil))
Running scan for frate = 105
Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 7.800000000000001 for oh ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard z with value 2 for k ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 3 for t ...
candidateGuards = map[r:true]
Picking guard, r

frate, target rule = 105 public <docket> = (((sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_d_oh> sh)] | [(sh <any_Cx_sh_p_z_d_oh>)]) (d | ((<any_Cx_sh_p_z_d_oh> sh) | (sh <any_Cx_sh_p_z_d_oh>)))) (([(<any_Cx_sh_sh_oh_k_d> sh)] | [(sh <any_Cx_sh_sh_oh_k_d>)]) (oh | ((<any_Cx_sh_sh_oh_k> sh) | (sh <any_Cx_sh_sh_oh_k>)))) (([(<any_Cx_z_sh_k_oh> z)] | [(z <any_Cx_z_sh_k_oh>)]) (k | ((<any_Cx_z_sh_k_oh> z) | (z <any_Cx_z_sh_k_oh>)))) ((([(<any_Vx_r_z_ih_noSlide> r)] | [(r <any_Vx_r_z_ih_noSlide>)]) ([(<any_Cx_r_z_t_k> r)] | [(r <any_Cx_r_z_t_k>)])) (ih | ((<any_Vx_r_z_ih_noSlide> r) | (r <any_Vx_r_z_ih_noSlide>)))) (([(<any_Cx_r_r_t> r)] | [(r <any_Cx_r_r_t>)]) (t | ((<any_Cx_r_r_t> r) | (r <any_Cx_r_r_t>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_r_t_d> d)] | [(d <any_Cx_r_t_d>)]) sil))
Running scan for frate = 91
Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 7.800000000000001 for oh ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard z with value 2 for k ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 3 for t ...
candidateGuards = map[r:true]
Picking guard, r

frate, target rule = 91 public <docket> = (((sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_d_oh> sh)] | [(sh <any_Cx_sh_p_z_d_oh>)]) (d | ((<any_Cx_sh_p_z_d_oh> sh) | (sh <any_Cx_sh_p_z_d_oh>)))) (([(<any_Cx_sh_sh_oh_k_d> sh)] | [(sh <any_Cx_sh_sh_oh_k_d>)]) (oh | ((<any_Cx_sh_sh_oh_k> sh) | (sh <any_Cx_sh_sh_oh_k>)))) (([(<any_Cx_z_sh_k_oh> z)] | [(z <any_Cx_z_sh_k_oh>)]) (k | ((<any_Cx_z_sh_k_oh> z) | (z <any_Cx_z_sh_k_oh>)))) ((([(<any_Vx_r_z_ih_noSlide> r)] | [(r <any_Vx_r_z_ih_noSlide>)]) ([(<any_Cx_r_z_t_k> r)] | [(r <any_Cx_r_z_t_k>)])) (ih | ((<any_Vx_r_z_ih_noSlide> r) | (r <any_Vx_r_z_ih_noSlide>)))) (([(<any_Cx_r_r_t> r)] | [(r <any_Cx_r_r_t>)]) (t | ((<any_Cx_r_r_t> r) | (r <any_Cx_r_r_t>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_r_t_thr> thr)] | [(thr <any_Cx_r_t_thr>)]) sil))
Running scan for frate = 80
Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 7.800000000000001 for oh ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard z with value 2 for k ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 3 for t ...
candidateGuards = map[r:true]
Picking guard, r

frate, target rule = 80 public <docket> = (((sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_d_oh> sh)] | [(sh <any_Cx_sh_p_z_d_oh>)]) (d | ((<any_Cx_sh_p_z_d_oh> sh) | (sh <any_Cx_sh_p_z_d_oh>)))) (([(<any_Cx_sh_sh_oh_k_d> sh)] | [(sh <any_Cx_sh_sh_oh_k_d>)]) (oh | ((<any_Cx_sh_sh_oh_k> sh) | (sh <any_Cx_sh_sh_oh_k>)))) (([(<any_Cx_z_sh_k_oh> z)] | [(z <any_Cx_z_sh_k_oh>)]) (k | ((<any_Cx_z_sh_k_oh> z) | (z <any_Cx_z_sh_k_oh>)))) ((([(<any_Vx_r_z_ih_noSlide> r)] | [(r <any_Vx_r_z_ih_noSlide>)]) ([(<any_Cx_r_z_t_k> r)] | [(r <any_Cx_r_z_t_k>)])) (ih | ((<any_Vx_r_z_ih_noSlide> r) | (r <any_Vx_r_z_ih_noSlide>)))) (([(<any_Cx_r_r_t> r)] | [(r <any_Cx_r_r_t>)]) (t | ((<any_Cx_r_r_t> r) | (r <any_Cx_r_r_t>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_r_t_g> g)] | [(g <any_Cx_r_t_g>)]) sil))
Running scan for frate = 72
Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 7.800000000000001 for oh ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard z with value 2 for k ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 3 for t ...
candidateGuards = map[r:true]
Picking guard, r

frate, target rule = 72 public <docket> = (((sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_d_oh> sh)] | [(sh <any_Cx_sh_p_z_d_oh>)]) (d | ((<any_Cx_sh_p_z_d_oh> sh) | (sh <any_Cx_sh_p_z_d_oh>)))) (([(<any_Cx_sh_sh_oh_k_d> sh)] | [(sh <any_Cx_sh_sh_oh_k_d>)]) (oh | ((<any_Cx_sh_sh_oh_k> sh) | (sh <any_Cx_sh_sh_oh_k>)))) (([(<any_Cx_z_sh_k_oh> z)] | [(z <any_Cx_z_sh_k_oh>)]) (k | ((<any_Cx_z_sh_k_oh> z) | (z <any_Cx_z_sh_k_oh>)))) ((([(<any_Vx_r_z_ih_noSlide> r)] | [(r <any_Vx_r_z_ih_noSlide>)]) ([(<any_Cx_r_z_t_k> r)] | [(r <any_Cx_r_z_t_k>)])) (ih | ((<any_Vx_r_z_ih_noSlide> r) | (r <any_Vx_r_z_ih_noSlide>)))) (([(<any_Cx_r_r_t> r)] | [(r <any_Cx_r_r_t>)]) (t | ((<any_Cx_r_r_t> r) | (r <any_Cx_r_r_t>)))) (([(<any_vowel_noSlide> ch)] | [(ch <any_vowel_noSlide>)]) ([(<any_Cx_r_t_ch> ch)] | [(ch <any_Cx_r_t_ch>)]) sil))

results =
{72 [{sil 0 10} {d 11 14} {oh 15 29} {k 30 36} {ih 37 48} {t 49 66} {sil 67 80}]}
{80 [{sil 0 11} {d 12 16} {oh 17 31} {k 32 40} {ih 41 54} {t 55 73} {sil 74 87}]}
{91 [{sil 0 14} {d 15 19} {oh 20 35} {k 36 46} {ih 47 61} {t 62 83} {sil 84 115}]}
{105 [{sil 0 17} {d 18 22} {oh 23 42} {k 43 53} {ih 54 71} {t 72 96} {sil 97 138}]}
{125 [{sil 3 21} {d 22 28} {oh 29 52} {k 53 64} {ih 65 88} {t 89 115} {sil 116 162}]}

normalised results =
{72 [{sil 0 10} {d 15 19} {oh 21 40} {k 42 50} {ih 51 67} {t 68 92} {sil 93 111}]}
{80 [{sil 0 11} {d 15 20} {oh 21 39} {k 40 50} {ih 51 68} {t 69 91} {sil 93 109}]}
{91 [{sil 0 14} {d 16 21} {oh 22 38} {k 40 51} {ih 52 67} {t 68 91} {sil 92 126}]}
{105 [{sil 0 17} {d 17 21} {oh 22 40} {k 41 50} {ih 51 68} {t 69 91} {sil 92 131}]}
{125 [{sil 3 21} {d 18 22} {oh 23 42} {k 42 51} {ih 52 70} {t 71 92} {sil 93 130}]}

ruleAligned = [{{d 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{oh 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{k 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{ih 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{t 0} [{0 5} {1 5} {2 5} {3 5} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {d 15 19} {oh 21 40} {k 42 50} {ih 51 67} {t 68 92} {sil 93 93}]}
{80 [{sil 0 0} {d 15 20} {oh 21 39} {k 40 50} {ih 51 68} {t 69 91} {sil 93 93}]}
{91 [{sil 0 0} {d 16 21} {oh 22 38} {k 40 51} {ih 52 67} {t 68 91} {sil 92 92}]}
{105 [{sil 0 0} {d 17 21} {oh 22 40} {k 41 50} {ih 51 68} {t 69 91} {sil 92 92}]}
{125 [{sil 3 3} {d 18 22} {oh 23 42} {k 42 51} {ih 52 70} {t 71 92} {sil 93 93}]}

timeAligned = [{{d 16 21} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{oh 22 40} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{k 41 50} [{1 3} {2 3} {3 3} {0 3} {4 3}]} {{ih 51 68} [{0 4} {1 4} {3 4} {2 4} {4 4}]} {{t 69 91} [{0 5} {1 5} {2 5} {3 5} {4 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 19
i, iTime, newITime, timeStartFrom = 2 1 2 38
i, iTime, newITime, timeStartFrom = 3 2 3 50
i, iTime, newITime, timeStartFrom = 4 3 4 67
combinedVerdict    = [{d 0} {oh 0} {k 0} {ih 0} {t 0}]
ruleAlignedVerdict = [{d 0} {oh 0} {k 0} {ih 0} {t 0}]

score->
+1 for d
+1 for oh
+1 for k
+1 for ih
+1 for t
score<-: 10
testPronounce d good oh good k good ih good t good
publish->
phonsToAlphas = [{[d] d} {[oh] o} {[k] ck} {[ih] e} {[t] t}]
getVerdict<-:new {d [d] 0}
getVerdict<-:new {o [oh] 0}
getVerdict<-:new {ck [k] 0}
getVerdict<-:new {e [ih] 0}
getVerdict<-:new {t [t] 0}
lettersVerdicts = [{d [d] 0} {o [oh] 0} {ck [k] 0} {e [ih] 0} {t [t] 0}]
publish<-
Total: 244.029552ms
{
  "results": [
    {
      "letters": "d",
      "phonemes": "d",
      "verdict": "good"
    },
    {
      "letters": "o",
      "phonemes": "ɒ",
      "verdict": "good"
    },
    {
      "letters": "ck",
      "phonemes": "k",
      "verdict": "good"
    },
    {
      "letters": "e",
      "phonemes": "ɪ",
      "verdict": "good"
    },
    {
      "letters": "t",
      "phonemes": "t",
      "verdict": "good"
    }
  ],
  "err": null
}
