
 length of audio =  2.346312



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.66 0.9199999999999999 1.58

 start3, duration3, end3 =  1 0.48 1.48

 Initial start, duration, end =  0.56 1.02 1.58

 Cut at: start, duration =  0.56 1.47     guard_end =  2.0300000000000002 

Running scan for frate = 125
Running scan for frate = 125
Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard zh with value 5 for uw ...
Considering guard z with value 5 for uw ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard n with value 3 for uwl ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 125 public <school> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_oy_p_ch_s_k> oy)] | [(oy <any_Cx_oy_p_ch_s_k>)]) (s | z | ((<any_Cx_oy_p_ch_s_k> oy) | (oy <any_Cx_oy_p_ch_s_k>)))) (([(<any_Cx_n_oy_k_s> n)] | [(n <any_Cx_n_oy_k_s>)]) (k | ((<any_Cx_n_oy_k_uwl> n) | (n <any_Cx_n_oy_k_uwl>)))) (([(<any_Cx_n_n_uwl_k> n)] | [(n <any_Cx_n_n_uwl_k>)]) (uwl | ((<any_Cx_n_n_uwl_k> n) | (n <any_Cx_n_n_uwl_k>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_n_uwl_f> f)] | [(f <any_Cx_n_uwl_f>)]) sil))
frate, target rule = 125 public <school> = (((sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]) | (sil p (sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]))) (([(<any_Cx_oy_p_th_s_k> oy)] | [(oy <any_Cx_oy_p_th_s_k>)]) (s | z | ((<any_Cx_oy_p_th_s_k> oy) | (oy <any_Cx_oy_p_th_s_k>)))) (([(<any_Cx_n_oy_k_s> n)] | [(n <any_Cx_n_oy_k_s>)]) (k | ((<any_Cx_n_oy_k> n) | (n <any_Cx_n_oy_k>)))) ((([(<any_Vx_zh_n_uw_noSlide> zh)] | [(zh <any_Vx_zh_n_uw_noSlide>)]) ([(<any_Cx_zh_n_l_k> zh)] | [(zh <any_Cx_zh_n_l_k>)])) (uw | ((<any_Vx_zh_n_uw_noSlide> zh) | (zh <any_Vx_zh_n_uw_noSlide>)))) (([(<any_Cx_sh_zh_l> sh)] | [(sh <any_Cx_sh_zh_l>)]) (l | ((<any_Cx_sh_zh_l> sh) | (sh <any_Cx_sh_zh_l>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_b> b)] | [(b <any_Cx_sh_l_b>)]) sil))
Running scan for frate = 105
Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Running scan for frate = 105
Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard n with value 3 for uwl ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

frate, target rule = 105 public <school> = (((sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil p (sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_oy_p_t_s_k> oy)] | [(oy <any_Cx_oy_p_t_s_k>)]) (s | z | ((<any_Cx_oy_p_t_s_k> oy) | (oy <any_Cx_oy_p_t_s_k>)))) (([(<any_Cx_n_oy_k_s> n)] | [(n <any_Cx_n_oy_k_s>)]) (k | ((<any_Cx_n_oy_k_uwl> n) | (n <any_Cx_n_oy_k_uwl>)))) (([(<any_Cx_n_n_uwl_k> n)] | [(n <any_Cx_n_n_uwl_k>)]) (uwl | ((<any_Cx_n_n_uwl_k> n) | (n <any_Cx_n_n_uwl_k>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_n_uwl_m> m)] | [(m <any_Cx_n_uwl_m>)]) sil))
Considering guard zh with value 5 for uw ...
Considering guard z with value 5 for uw ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Running scan for frate = 91
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

frate, target rule = 105 public <school> = (((sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_oy_p_z_s_k> oy)] | [(oy <any_Cx_oy_p_z_s_k>)]) (s | z | ((<any_Cx_oy_p_z_s_k> oy) | (oy <any_Cx_oy_p_z_s_k>)))) (([(<any_Cx_n_oy_k_s> n)] | [(n <any_Cx_n_oy_k_s>)]) (k | ((<any_Cx_n_oy_k> n) | (n <any_Cx_n_oy_k>)))) ((([(<any_Vx_zh_n_uw_noSlide> zh)] | [(zh <any_Vx_zh_n_uw_noSlide>)]) ([(<any_Cx_zh_n_l_k> zh)] | [(zh <any_Cx_zh_n_l_k>)])) (uw | ((<any_Vx_zh_n_uw_noSlide> zh) | (zh <any_Vx_zh_n_uw_noSlide>)))) (([(<any_Cx_sh_zh_l> sh)] | [(sh <any_Cx_sh_zh_l>)]) (l | ((<any_Cx_sh_zh_l> sh) | (sh <any_Cx_sh_zh_l>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_d> d)] | [(d <any_Cx_sh_l_d>)]) sil))
Considering guard n with value 3 for uwl ...
candidateGuards = map[n:true]
Picking guard, n

Running scan for frate = 91
frate, target rule = 91 public <school> = (((sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]) | (sil p (sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]))) (([(<any_Cx_oy_p_th_s_k> oy)] | [(oy <any_Cx_oy_p_th_s_k>)]) (s | z | ((<any_Cx_oy_p_th_s_k> oy) | (oy <any_Cx_oy_p_th_s_k>)))) (([(<any_Cx_n_oy_k_s> n)] | [(n <any_Cx_n_oy_k_s>)]) (k | ((<any_Cx_n_oy_k_uwl> n) | (n <any_Cx_n_oy_k_uwl>)))) (([(<any_Cx_n_n_uwl_k> n)] | [(n <any_Cx_n_n_uwl_k>)]) (uwl | ((<any_Cx_n_n_uwl_k> n) | (n <any_Cx_n_n_uwl_k>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_n_uwl_p> p)] | [(p <any_Cx_n_uwl_p>)]) sil))
Running scan for frate = 80
Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard z with value 5 for uw ...
Considering guard zh with value 5 for uw ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard n with value 3 for uwl ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 80 public <school> = (((sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]) | (sil p (sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]))) (([(<any_Cx_oy_p_th_s_k> oy)] | [(oy <any_Cx_oy_p_th_s_k>)]) (s | z | ((<any_Cx_oy_p_th_s_k> oy) | (oy <any_Cx_oy_p_th_s_k>)))) (([(<any_Cx_n_oy_k_s> n)] | [(n <any_Cx_n_oy_k_s>)]) (k | ((<any_Cx_n_oy_k_uwl> n) | (n <any_Cx_n_oy_k_uwl>)))) (([(<any_Cx_n_n_uwl_k> n)] | [(n <any_Cx_n_n_uwl_k>)]) (uwl | ((<any_Cx_n_n_uwl_k> n) | (n <any_Cx_n_n_uwl_k>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_n_uwl_m> m)] | [(m <any_Cx_n_uwl_m>)]) sil))
frate, target rule = 91 public <school> = (((sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]) | (sil p (sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]))) (([(<any_Cx_oy_p_th_s_k> oy)] | [(oy <any_Cx_oy_p_th_s_k>)]) (s | z | ((<any_Cx_oy_p_th_s_k> oy) | (oy <any_Cx_oy_p_th_s_k>)))) (([(<any_Cx_n_oy_k_s> n)] | [(n <any_Cx_n_oy_k_s>)]) (k | ((<any_Cx_n_oy_k> n) | (n <any_Cx_n_oy_k>)))) ((([(<any_Vx_z_n_uw_noSlide> z)] | [(z <any_Vx_z_n_uw_noSlide>)]) ([(<any_Cx_z_n_l_k> z)] | [(z <any_Cx_z_n_l_k>)])) (uw | ((<any_Vx_z_n_uw_noSlide> z) | (z <any_Vx_z_n_uw_noSlide>)))) (([(<any_Cx_sh_z_l> sh)] | [(sh <any_Cx_sh_z_l>)]) (l | ((<any_Cx_sh_z_l> sh) | (sh <any_Cx_sh_z_l>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_b> b)] | [(b <any_Cx_sh_l_b>)]) sil))
Running scan for frate = 72
Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard n with value 3 for uwl ...
candidateGuards = map[n:true]
Picking guard, n

Running scan for frate = 80
frate, target rule = 72 public <school> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_oy_p_ch_s_k> oy)] | [(oy <any_Cx_oy_p_ch_s_k>)]) (s | z | ((<any_Cx_oy_p_ch_s_k> oy) | (oy <any_Cx_oy_p_ch_s_k>)))) (([(<any_Cx_n_oy_k_s> n)] | [(n <any_Cx_n_oy_k_s>)]) (k | ((<any_Cx_n_oy_k_uwl> n) | (n <any_Cx_n_oy_k_uwl>)))) (([(<any_Cx_n_n_uwl_k> n)] | [(n <any_Cx_n_n_uwl_k>)]) (uwl | ((<any_Cx_n_n_uwl_k> n) | (n <any_Cx_n_n_uwl_k>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_n_uwl_thr> thr)] | [(thr <any_Cx_n_uwl_thr>)]) sil))
Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard zh with value 5 for uw ...
Considering guard z with value 5 for uw ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 80 public <school> = (((sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_oy_p_z_s_k> oy)] | [(oy <any_Cx_oy_p_z_s_k>)]) (s | z | ((<any_Cx_oy_p_z_s_k> oy) | (oy <any_Cx_oy_p_z_s_k>)))) (([(<any_Cx_n_oy_k_s> n)] | [(n <any_Cx_n_oy_k_s>)]) (k | ((<any_Cx_n_oy_k> n) | (n <any_Cx_n_oy_k>)))) ((([(<any_Vx_zh_n_uw_noSlide> zh)] | [(zh <any_Vx_zh_n_uw_noSlide>)]) ([(<any_Cx_zh_n_l_k> zh)] | [(zh <any_Cx_zh_n_l_k>)])) (uw | ((<any_Vx_zh_n_uw_noSlide> zh) | (zh <any_Vx_zh_n_uw_noSlide>)))) (([(<any_Cx_sh_zh_l> sh)] | [(sh <any_Cx_sh_zh_l>)]) (l | ((<any_Cx_sh_zh_l> sh) | (sh <any_Cx_sh_zh_l>)))) (([(<any_vowel_noSlide> r)] | [(r <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_r> r)] | [(r <any_Cx_sh_l_r>)]) sil))
Running scan for frate = 72
Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard zh with value 5 for uw ...
Considering guard z with value 5 for uw ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 72 public <school> = (((sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil p (sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_oy_p_sh_s_k> oy)] | [(oy <any_Cx_oy_p_sh_s_k>)]) (s | z | ((<any_Cx_oy_p_sh_s_k> oy) | (oy <any_Cx_oy_p_sh_s_k>)))) (([(<any_Cx_n_oy_k_s> n)] | [(n <any_Cx_n_oy_k_s>)]) (k | ((<any_Cx_n_oy_k> n) | (n <any_Cx_n_oy_k>)))) ((([(<any_Vx_zh_n_uw_noSlide> zh)] | [(zh <any_Vx_zh_n_uw_noSlide>)]) ([(<any_Cx_zh_n_l_k> zh)] | [(zh <any_Cx_zh_n_l_k>)])) (uw | ((<any_Vx_zh_n_uw_noSlide> zh) | (zh <any_Vx_zh_n_uw_noSlide>)))) (([(<any_Cx_sh_zh_l> sh)] | [(sh <any_Cx_sh_zh_l>)]) (l | ((<any_Cx_sh_zh_l> sh) | (sh <any_Cx_sh_zh_l>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_f> f)] | [(f <any_Cx_sh_l_f>)]) sil))

results =
{72 [{sil 0 11} {eh 12 17} {sh 18 20} {z 21 33} {k 34 40} {uw 41 43} {l 44 59} {sil 60 71}]}
{80 [{sil 0 12} {eh 13 23} {z 24 32} {s 33 37} {k 38 45} {uw 46 48} {l 49 66} {sil 67 77}]}
{91 [{sil 0 14} {th 15 18} {eh 19 27} {z 28 42} {k 43 47} {z 48 50} {ao 51 67} {l 68 82} {sil 83 132}]}
{105 [{sil 0 16} {eh 17 31} {z 32 43} {s 44 51} {k 52 59} {uw 60 62} {l 63 90} {sil 91 153}]}
{125 [{sil 3 19} {th 20 22} {eh 23 39} {z 40 59} {k 60 71} {ao 72 101} {zh 102 104} {l 105 110} {sil 111 183}]}

normalised results =
{72 [{sil 0 11} {eh 17 24} {sh 25 25} {z 29 46} {k 47 56} {uw 57 57} {l 61 82} {sil 83 99}]}
{80 [{sil 0 12} {eh 16 29} {z 30 40} {s 41 46} {k 48 56} {uw 58 58} {l 61 83} {sil 84 96}]}
{91 [{sil 0 14} {th 16 20} {eh 21 30} {z 31 46} {k 47 52} {z 53 53} {ao 56 74} {l 75 90} {sil 91 145}]}
{105 [{sil 0 16} {eh 16 30} {z 30 41} {s 42 49} {k 50 56} {uw 57 57} {l 60 86} {sil 87 146}]}
{125 [{sil 3 19} {th 16 16} {eh 18 31} {z 32 47} {k 48 57} {ao 58 81} {zh 82 82} {l 84 88} {sil 89 146}]}

ruleAligned = [{{eh 3} [{0 1} {1 1} {2 2} {3 1} {4 2}]} {{z 3} [{0 3} {2 3} {4 3}]} {{s 2} [{3 3}]} {{k 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{uw 2} []} {{l 0} [{0 6} {1 6} {2 7} {3 6} {4 7}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {eh 17 24} {sh 25 25} {z 29 46} {k 47 56} {uw 57 57} {l 61 82} {sil 83 83}]}
{80 [{sil 0 0} {eh 16 29} {z 30 40} {s 41 41} {k 48 56} {uw 58 58} {l 61 83} {sil 84 84}]}
{91 [{sil 0 0} {th 16 20} {eh 21 30} {z 31 46} {k 47 52} {z 53 53} {ao 56 74} {l 75 90} {sil 91 91}]}
{105 [{sil 0 0} {eh 16 30} {z 30 41} {s 42 49} {k 50 56} {uw 57 57} {l 60 86} {sil 87 87}]}
{125 [{sil 3 3} {th 16 16} {eh 18 31} {z 32 47} {k 48 57} {ao 58 81} {zh 82 82} {l 84 88} {sil 89 89}]}

timeAligned = [{{eh 17 30} [{0 1} {1 1} {3 1} {4 2} {2 2}]} {{z 30 46} [{0 3} {1 2} {3 2} {2 3} {4 3}]} {{k 48 56} [{0 4} {1 4} {2 4} {4 4} {3 4}]} {{l 61 86} [{0 6} {1 6} {3 6} {2 7} {4 7}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 24
i, iTime, newITime, timeStartFrom = 2 1 -1 46
i, iTime, newITime, timeStartFrom = 3 1 2 46
i, iTime, newITime, timeStartFrom = 4 2 -1 52
i, iTime, newITime, timeStartFrom = 5 2 3 52
combinedVerdict    = [{eh 3} {z 3} {s 2} {k 0} {uw 2} {l 0}]
ruleAlignedVerdict = [{eh 3} {z 3} {s 2} {k 0} {uw 2} {l 0}]

score->
-1 for eh
-1 for z
-1 for s
+1 for k
-1 for uw
+1 for l
score<-: -2

results =
{72 [{sil 0 19} {z 20 33} {k 34 41} {l 42 58} {n 59 62} {sil 63 71}]}
{80 [{sil 0 13} {th 14 16} {eh 17 23} {z 24 36} {k 37 46} {l 47 57} {n 58 67} {sil 68 77}]}
{91 [{sil 0 14} {th 15 18} {eh 19 27} {z 28 42} {k 43 51} {l 52 73} {n 74 83} {sil 84 132}]}
{105 [{sil 0 15} {t 16 18} {eh 19 31} {z 32 48} {k 49 59} {l 60 85} {n 86 89} {sil 90 153}]}
{125 [{sil 3 19} {ch 20 22} {eh 23 39} {z 40 59} {k 60 71} {l 72 102} {n 103 108} {sil 109 183}]}

normalised results =
{72 [{sil 0 19} {z 28 46} {k 47 57} {l 58 81} {n 82 86} {sil 88 99}]}
{80 [{sil 0 13} {th 18 18} {eh 21 29} {z 30 45} {k 46 58} {l 59 71} {n 73 84} {sil 85 96}]}
{91 [{sil 0 14} {th 16 20} {eh 21 30} {z 31 46} {k 47 56} {l 57 80} {n 81 91} {sil 92 145}]}
{105 [{sil 0 15} {t 15 15} {eh 18 30} {z 30 46} {k 47 56} {l 57 81} {n 82 85} {sil 86 146}]}
{125 [{sil 3 19} {ch 16 16} {eh 18 31} {z 32 47} {k 48 57} {l 58 82} {n 82 86} {sil 87 146}]}

ruleAligned = [{{eh 3} [{1 2} {2 2} {3 2} {4 2}]} {{s 2} []} {{z 3} [{0 1} {1 3} {2 3} {3 3} {4 3}]} {{k 0} [{0 2} {1 4} {2 4} {3 4} {4 4}]} {{uwl 2} []} {{l 3} [{0 3} {1 5} {2 5} {3 5} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {z 28 46} {k 47 57} {l 58 81} {n 82 82} {sil 88 88}]}
{80 [{sil 0 0} {th 18 18} {eh 21 29} {z 30 45} {k 46 58} {l 59 71} {n 73 84} {sil 85 85}]}
{91 [{sil 0 0} {th 16 20} {eh 21 30} {z 31 46} {k 47 56} {l 57 80} {n 81 91} {sil 92 92}]}
{105 [{sil 0 0} {t 15 15} {eh 18 30} {z 30 46} {k 47 56} {l 57 81} {n 82 82} {sil 86 86}]}
{125 [{sil 3 3} {ch 16 16} {eh 18 31} {z 32 47} {k 48 57} {l 58 82} {n 82 82} {sil 87 87}]}

timeAligned = [{{eh 21 30} [{1 2} {2 2} {3 2} {4 2}]} {{z 30 46} [{0 1} {1 3} {3 3} {2 3} {4 3}]} {{k 47 57} [{0 2} {1 4} {2 4} {3 4} {4 4}]} {{l 58 81} [{0 3} {2 5} {3 5} {4 5} {1 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 -1 29
i, iTime, newITime, timeStartFrom = 2 0 1 29
i, iTime, newITime, timeStartFrom = 3 1 2 45
i, iTime, newITime, timeStartFrom = 4 2 -1 56
i, iTime, newITime, timeStartFrom = 5 2 3 56
combinedVerdict    = [{eh 3} {s 2} {z 3} {k 0} {uwl 2} {l 3}]
ruleAlignedVerdict = [{eh 3} {s 2} {z 3} {k 0} {uwl 2} {l 3}]

score->
-1 for eh
-1 for s
-1 for z
+1 for k
-1 for uwl
-1 for l
score<-: -4
bestResult = {-2 [{eh 3} {z 3} {s 2} {k 0} {uw 2} {l 0}] [s k uw l]}
testPronounce eh surprise z surprise s missing k good uw missing l good
publish->
phonsToAlphas = [{[s] s} {[k] ch} {[uw] oo} {[l] l}]
getVerdict<-:new {s [s] 2}
getVerdict<-:new {ch [k] 0}
getVerdict<-:new {oo [uw] 2}
getVerdict<-:new {l [l] 0}
lettersVerdicts = [{eh [eh] 3} {z [z] 3} {s [s] 2} {ch [k] 0} {oo [uw] 2} {l [l] 0}]
publish<-
Total: 297.587502ms
{
  "results": [
    {
      "letters": "eh",
      "phonemes": "ɛ",
      "verdict": "surprise"
    },
    {
      "letters": "z",
      "phonemes": "z",
      "verdict": "surprise"
    },
    {
      "letters": "s",
      "phonemes": "s",
      "verdict": "missing"
    },
    {
      "letters": "ch",
      "phonemes": "k",
      "verdict": "good"
    },
    {
      "letters": "oo",
      "phonemes": "u",
      "verdict": "missing"
    },
    {
      "letters": "l",
      "phonemes": "l",
      "verdict": "good"
    }
  ],
  "err": null
}
