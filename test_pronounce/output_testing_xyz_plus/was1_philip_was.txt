
 length of audio =  2.858312



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  1.0999999999999999 0.78 1.88

 start3, duration3, end3 =  1.0999999999999999 0.7 1.7999999999999998

 Initial start, duration, end =  0.9999999999999999 0.88 1.88

 Cut at: start, duration =  0.9999999999999999 1.33     guard_end =  2.33 

Running scan for frate = 125
Running scan for frate = 125
Considering guard sh with value 0.8 for w ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 5 for oh ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard sh with value 0.8 for w ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ng with value 1 for z ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ch with value 5 for ax ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard y with value 5 for z ...
Considering guard ch with value 5 for z ...
candidateGuards = map[ch:true y:true]
Picking guard, ch

frate, target rule = 125 public <was> = (((sil [((r <any_Cx_w_r_p>) | (<any_Cx_w_r_p> r))] [((r <any_vowel_noSlide>) | (<any_vowel_noSlide> r))]) | (sil p (sil [((r <any_Cx_w_r_p>) | (<any_Cx_w_r_p> r))] [((r <any_vowel_noSlide>) | (<any_vowel_noSlide> r))]))) (([(<any_Cx_sh_p_r_w_oh> sh)] | [(sh <any_Cx_sh_p_r_w_oh>)]) (w | v | ((<any_Cx_sh_p_r_w_oh> sh) | (sh <any_Cx_sh_p_r_w_oh>)))) (([(<any_Cx_ch_sh_oh_w> ch)] | [(ch <any_Cx_ch_sh_oh_w>)]) (oh | ((<any_Cx_ch_sh_oh_z> ch) | (ch <any_Cx_ch_sh_oh_z>)))) (([(<any_Cx_ng_ch_z_oh> ng)] | [(ng <any_Cx_ng_ch_z_oh>)]) (z | ((<any_Cx_ng_ch_z_oh> ng) | (ng <any_Cx_ng_ch_z_oh>)))) (([(<any_vowel_noSlide> s)] | [(s <any_vowel_noSlide>)]) ([(<any_Cx_ng_z_s> s)] | [(s <any_Cx_ng_z_s>)]) sil))
frate, target rule = 125 public <was> = (((sil [((d <any_Cx_w_d_p>) | (<any_Cx_w_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil p (sil [((d <any_Cx_w_d_p>) | (<any_Cx_w_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_sh_p_d_w_ax> sh)] | [(sh <any_Cx_sh_p_d_w_ax>)]) (w | v | ((<any_Cx_sh_p_d_w_ax> sh) | (sh <any_Cx_sh_p_d_w_ax>)))) (([(<any_Cx_ch_sh_ax_w> ch)] | [(ch <any_Cx_ch_sh_ax_w>)]) (ax | ((<any_Cx_ch_sh_ax_z> ch) | (ch <any_Cx_ch_sh_ax_z>)))) (([(<any_Cx_ch_ch_z_ax> ch)] | [(ch <any_Cx_ch_ch_z_ax>)]) (z | ((<any_Cx_ch_ch_z_ax> ch) | (ch <any_Cx_ch_ch_z_ax>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_ch_z_thr> thr)] | [(thr <any_Cx_ch_z_thr>)]) sil))
Running scan for frate = 105
Running scan for frate = 105
Considering guard sh with value 0.8 for w ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 0.8 for w ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 5 for ax ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 5 for z ...
Considering guard y with value 5 for z ...
candidateGuards = map[ch:true y:true]
Picking guard, ch

frate, target rule = 105 public <was> = (((sil [((l <any_Cx_w_l_p>) | (<any_Cx_w_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]) | (sil p (sil [((l <any_Cx_w_l_p>) | (<any_Cx_w_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]))) (([(<any_Cx_sh_p_l_w_ax> sh)] | [(sh <any_Cx_sh_p_l_w_ax>)]) (w | v | ((<any_Cx_sh_p_l_w_ax> sh) | (sh <any_Cx_sh_p_l_w_ax>)))) (([(<any_Cx_ch_sh_ax_w> ch)] | [(ch <any_Cx_ch_sh_ax_w>)]) (ax | ((<any_Cx_ch_sh_ax_z> ch) | (ch <any_Cx_ch_sh_ax_z>)))) (([(<any_Cx_ch_ch_z_ax> ch)] | [(ch <any_Cx_ch_ch_z_ax>)]) (z | ((<any_Cx_ch_ch_z_ax> ch) | (ch <any_Cx_ch_ch_z_ax>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_ch_z_b> b)] | [(b <any_Cx_ch_z_b>)]) sil))
Considering guard ch with value 5 for oh ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ng with value 1 for z ...
candidateGuards = map[ng:true]
Picking guard, ng

Running scan for frate = 91
frate, target rule = 105 public <was> = (((sil [((r <any_Cx_w_r_p>) | (<any_Cx_w_r_p> r))] [((r <any_vowel_noSlide>) | (<any_vowel_noSlide> r))]) | (sil p (sil [((r <any_Cx_w_r_p>) | (<any_Cx_w_r_p> r))] [((r <any_vowel_noSlide>) | (<any_vowel_noSlide> r))]))) (([(<any_Cx_sh_p_r_w_oh> sh)] | [(sh <any_Cx_sh_p_r_w_oh>)]) (w | v | ((<any_Cx_sh_p_r_w_oh> sh) | (sh <any_Cx_sh_p_r_w_oh>)))) (([(<any_Cx_ch_sh_oh_w> ch)] | [(ch <any_Cx_ch_sh_oh_w>)]) (oh | ((<any_Cx_ch_sh_oh_z> ch) | (ch <any_Cx_ch_sh_oh_z>)))) (([(<any_Cx_ng_ch_z_oh> ng)] | [(ng <any_Cx_ng_ch_z_oh>)]) (z | ((<any_Cx_ng_ch_z_oh> ng) | (ng <any_Cx_ng_ch_z_oh>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_ng_z_thr> thr)] | [(thr <any_Cx_ng_z_thr>)]) sil))
Considering guard sh with value 0.8 for w ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 91
Considering guard sh with value 0.8 for w ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 5 for oh ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ng with value 1 for z ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ch with value 5 for ax ...
candidateGuards = map[ch:true]
Picking guard, ch

frate, target rule = 91 public <was> = (((sil [((d <any_Cx_w_d_p>) | (<any_Cx_w_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil p (sil [((d <any_Cx_w_d_p>) | (<any_Cx_w_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_sh_p_d_w_oh> sh)] | [(sh <any_Cx_sh_p_d_w_oh>)]) (w | v | ((<any_Cx_sh_p_d_w_oh> sh) | (sh <any_Cx_sh_p_d_w_oh>)))) (([(<any_Cx_ch_sh_oh_w> ch)] | [(ch <any_Cx_ch_sh_oh_w>)]) (oh | ((<any_Cx_ch_sh_oh_z> ch) | (ch <any_Cx_ch_sh_oh_z>)))) (([(<any_Cx_ng_ch_z_oh> ng)] | [(ng <any_Cx_ng_ch_z_oh>)]) (z | ((<any_Cx_ng_ch_z_oh> ng) | (ng <any_Cx_ng_ch_z_oh>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_ng_z_thr> thr)] | [(thr <any_Cx_ng_z_thr>)]) sil))
Running scan for frate = 80
Considering guard y with value 5 for z ...
Considering guard ch with value 5 for z ...
candidateGuards = map[ch:true y:true]
Picking guard, ch

Considering guard sh with value 0.8 for w ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 5 for oh ...
candidateGuards = map[ch:true]
Picking guard, ch

frate, target rule = 91 public <was> = (((sil [((m <any_Cx_w_m_p>) | (<any_Cx_w_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]) | (sil p (sil [((m <any_Cx_w_m_p>) | (<any_Cx_w_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]))) (([(<any_Cx_sh_p_m_w_ax> sh)] | [(sh <any_Cx_sh_p_m_w_ax>)]) (w | v | ((<any_Cx_sh_p_m_w_ax> sh) | (sh <any_Cx_sh_p_m_w_ax>)))) (([(<any_Cx_ch_sh_ax_w> ch)] | [(ch <any_Cx_ch_sh_ax_w>)]) (ax | ((<any_Cx_ch_sh_ax_z> ch) | (ch <any_Cx_ch_sh_ax_z>)))) (([(<any_Cx_ch_ch_z_ax> ch)] | [(ch <any_Cx_ch_ch_z_ax>)]) (z | ((<any_Cx_ch_ch_z_ax> ch) | (ch <any_Cx_ch_ch_z_ax>)))) (([(<any_vowel_noSlide> s)] | [(s <any_vowel_noSlide>)]) ([(<any_Cx_ch_z_s> s)] | [(s <any_Cx_ch_z_s>)]) sil))
Considering guard ng with value 1 for z ...
candidateGuards = map[ng:true]
Picking guard, ng

Running scan for frate = 80
frate, target rule = 80 public <was> = (((sil [((r <any_Cx_w_r_p>) | (<any_Cx_w_r_p> r))] [((r <any_vowel_noSlide>) | (<any_vowel_noSlide> r))]) | (sil p (sil [((r <any_Cx_w_r_p>) | (<any_Cx_w_r_p> r))] [((r <any_vowel_noSlide>) | (<any_vowel_noSlide> r))]))) (([(<any_Cx_sh_p_r_w_oh> sh)] | [(sh <any_Cx_sh_p_r_w_oh>)]) (w | v | ((<any_Cx_sh_p_r_w_oh> sh) | (sh <any_Cx_sh_p_r_w_oh>)))) (([(<any_Cx_ch_sh_oh_w> ch)] | [(ch <any_Cx_ch_sh_oh_w>)]) (oh | ((<any_Cx_ch_sh_oh_z> ch) | (ch <any_Cx_ch_sh_oh_z>)))) (([(<any_Cx_ng_ch_z_oh> ng)] | [(ng <any_Cx_ng_ch_z_oh>)]) (z | ((<any_Cx_ng_ch_z_oh> ng) | (ng <any_Cx_ng_ch_z_oh>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_ng_z_v> v)] | [(v <any_Cx_ng_z_v>)]) sil))
Considering guard sh with value 0.8 for w ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 5 for ax ...
candidateGuards = map[ch:true]
Picking guard, ch

Running scan for frate = 72
Considering guard ch with value 5 for z ...
Considering guard y with value 5 for z ...
candidateGuards = map[ch:true y:true]
Picking guard, ch

Considering guard sh with value 0.8 for w ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 80 public <was> = (((sil [((m <any_Cx_w_m_p>) | (<any_Cx_w_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]) | (sil p (sil [((m <any_Cx_w_m_p>) | (<any_Cx_w_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]))) (([(<any_Cx_sh_p_m_w_ax> sh)] | [(sh <any_Cx_sh_p_m_w_ax>)]) (w | v | ((<any_Cx_sh_p_m_w_ax> sh) | (sh <any_Cx_sh_p_m_w_ax>)))) (([(<any_Cx_ch_sh_ax_w> ch)] | [(ch <any_Cx_ch_sh_ax_w>)]) (ax | ((<any_Cx_ch_sh_ax_z> ch) | (ch <any_Cx_ch_sh_ax_z>)))) (([(<any_Cx_ch_ch_z_ax> ch)] | [(ch <any_Cx_ch_ch_z_ax>)]) (z | ((<any_Cx_ch_ch_z_ax> ch) | (ch <any_Cx_ch_ch_z_ax>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_ch_z_thr> thr)] | [(thr <any_Cx_ch_z_thr>)]) sil))
Running scan for frate = 72
Considering guard ch with value 5 for oh ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard sh with value 0.8 for w ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ng with value 1 for z ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ch with value 5 for ax ...
candidateGuards = map[ch:true]
Picking guard, ch

frate, target rule = 72 public <was> = (((sil [((d <any_Cx_w_d_p>) | (<any_Cx_w_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil p (sil [((d <any_Cx_w_d_p>) | (<any_Cx_w_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_sh_p_d_w_oh> sh)] | [(sh <any_Cx_sh_p_d_w_oh>)]) (w | v | ((<any_Cx_sh_p_d_w_oh> sh) | (sh <any_Cx_sh_p_d_w_oh>)))) (([(<any_Cx_ch_sh_oh_w> ch)] | [(ch <any_Cx_ch_sh_oh_w>)]) (oh | ((<any_Cx_ch_sh_oh_z> ch) | (ch <any_Cx_ch_sh_oh_z>)))) (([(<any_Cx_ng_ch_z_oh> ng)] | [(ng <any_Cx_ng_ch_z_oh>)]) (z | ((<any_Cx_ng_ch_z_oh> ng) | (ng <any_Cx_ng_ch_z_oh>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_ng_z_b> b)] | [(b <any_Cx_ng_z_b>)]) sil))
Considering guard ch with value 5 for z ...
Considering guard y with value 5 for z ...
candidateGuards = map[ch:true y:true]
Picking guard, y

frate, target rule = 72 public <was> = (((sil [((z <any_Cx_w_z_p>) | (<any_Cx_w_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_w_z_p>) | (<any_Cx_w_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_w_ax> sh)] | [(sh <any_Cx_sh_p_z_w_ax>)]) (w | v | ((<any_Cx_sh_p_z_w_ax> sh) | (sh <any_Cx_sh_p_z_w_ax>)))) (([(<any_Cx_ch_sh_ax_w> ch)] | [(ch <any_Cx_ch_sh_ax_w>)]) (ax | ((<any_Cx_ch_sh_ax_z> ch) | (ch <any_Cx_ch_sh_ax_z>)))) (([(<any_Cx_y_ch_z_ax> y)] | [(y <any_Cx_y_ch_z_ax>)]) (z | ((<any_Cx_y_ch_z_ax> y) | (y <any_Cx_y_ch_z_ax>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_y_z_v> v)] | [(v <any_Cx_y_z_v>)]) sil))

results =
{72 [{sil 0 10} {w 11 23} {oh 24 38} {z 39 59} {sil 60 85}]}
{80 [{sil 0 12} {w 13 26} {oh 27 43} {z 44 64} {sil 65 92}]}
{91 [{sil 0 14} {w 15 29} {oh 30 49} {z 50 75} {sil 76 115}]}
{105 [{sil 0 17} {w 18 34} {oh 35 57} {z 58 87} {sil 88 138}]}
{125 [{sil 3 22} {w 23 41} {oh 42 67} {ng 68 70} {m 71 77} {z 78 99} {s 100 105} {g 106 148} {sil 149 162}]}

normalised results =
{72 [{sil 0 10} {w 15 32} {oh 33 53} {z 54 82} {sil 83 118}]}
{80 [{sil 0 12} {w 16 33} {oh 34 54} {z 55 80} {sil 81 115}]}
{91 [{sil 0 14} {w 16 32} {oh 33 54} {z 55 82} {sil 84 126}]}
{105 [{sil 0 17} {w 17 32} {oh 33 54} {z 55 83} {sil 84 131}]}
{125 [{sil 3 22} {w 18 33} {oh 34 54} {ng 54 54} {m 57 62} {z 62 79} {s 80 84} {g 85 118} {sil 119 130}]}

ruleAligned = [{{w 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{oh 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{z 0} [{0 3} {1 3} {2 3} {3 3} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {w 15 32} {oh 33 53} {z 54 82} {sil 83 83}]}
{80 [{sil 0 0} {w 16 33} {oh 34 54} {z 55 80} {sil 81 81}]}
{91 [{sil 0 0} {w 16 32} {oh 33 54} {z 55 82} {sil 84 84}]}
{105 [{sil 0 0} {w 17 32} {oh 33 54} {z 55 83} {sil 84 84}]}
{125 [{sil 3 3} {w 18 33} {oh 34 54} {ng 54 54} {m 57 62} {z 62 79} {s 80 84} {g 85 118} {sil 119 119}]}

timeAligned = [{{w 16 32} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{oh 33 54} [{0 2} {2 2} {3 2} {1 2} {4 2}]} {{z 55 82} [{0 3} {1 3} {2 3} {3 3} {4 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 32
i, iTime, newITime, timeStartFrom = 2 1 2 53
combinedVerdict    = [{w 0} {oh 0} {z 0}]
ruleAlignedVerdict = [{w 0} {oh 0} {z 0}]

score->
+1 for w
+1 for oh
+1 for z
score<-: 8

results =
{72 [{sil 0 10} {w 11 25} {ax 26 39} {z 40 59} {sil 60 85}]}
{80 [{sil 0 12} {w 13 28} {ax 29 43} {z 44 64} {sil 65 92}]}
{91 [{sil 0 14} {w 15 40} {ax 41 49} {z 50 76} {v 77 83} {s 84 89} {sil 90 115}]}
{105 [{sil 0 17} {l 18 33} {oh 34 57} {v 58 60} {ax 61 63} {z 64 86} {b 87 89} {g 90 124} {sil 125 138}]}
{125 [{sil 3 23} {d 24 26} {m 27 32} {d 33 36} {oh 37 68} {v 69 71} {ax 72 74} {z 75 105} {sil 106 162}]}

normalised results =
{72 [{sil 0 10} {w 15 35} {ax 36 54} {z 56 82} {sil 83 118}]}
{80 [{sil 0 12} {w 16 35} {ax 36 54} {z 55 80} {sil 81 115}]}
{91 [{sil 0 14} {w 16 44} {ax 45 54} {z 55 84} {v 85 91} {s 92 98} {sil 99 126}]}
{105 [{sil 0 17} {l 17 31} {oh 32 54} {v 55 55} {ax 58 58} {z 61 82} {b 83 83} {g 86 118} {sil 119 131}]}
{125 [{sil 3 23} {d 19 19} {m 22 26} {d 26 29} {oh 30 54} {v 55 55} {ax 58 58} {z 60 84} {sil 85 130}]}

ruleAligned = [{{w 1} [{0 1} {1 1} {2 1}]} {{ax 1} [{0 2} {1 2} {2 2}]} {{z 0} [{0 3} {1 3} {2 3} {3 5} {4 7}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {w 15 35} {ax 36 54} {z 56 82} {sil 83 83}]}
{80 [{sil 0 0} {w 16 35} {ax 36 54} {z 55 80} {sil 81 81}]}
{91 [{sil 0 0} {w 16 44} {ax 45 54} {z 55 84} {v 85 85} {s 92 98} {sil 99 99}]}
{105 [{sil 0 0} {l 17 31} {oh 32 54} {v 55 55} {ax 58 58} {z 61 82} {b 83 83} {g 86 118} {sil 119 119}]}
{125 [{sil 3 3} {d 19 19} {m 22 26} {d 26 26} {oh 30 54} {v 55 55} {ax 58 58} {z 60 84} {sil 85 85}]}

timeAligned = [{{w 16 35} [{0 1} {1 1} {2 1}]} {{ax 45 54} [{0 2} {1 2} {2 2}]} {{z 56 82} [{0 3} {1 3} {2 3} {4 7} {3 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 35
i, iTime, newITime, timeStartFrom = 2 1 2 54
combinedVerdict    = [{w 1} {ax 1} {z 0}]
ruleAlignedVerdict = [{w 1} {ax 1} {z 0}]

score->
+1 for w
+1 for ax
+1 for z
score<-: 8
testPronounce w good oh good z good
publish->
phonsToAlphas = [{[w] w} {[oh] a} {[z] s}]
getVerdict<-:new {w [w] 0}
getVerdict<-:new {a [oh] 0}
getVerdict<-:new {s [z] 0}
lettersVerdicts = [{w [w] 0} {a [oh] 0} {s [z] 0}]
publish<-
Total: 307.555117ms
{
  "results": [
    {
      "letters": "w",
      "phonemes": "w",
      "verdict": "good"
    },
    {
      "letters": "a",
      "phonemes": "ɒ",
      "verdict": "good"
    },
    {
      "letters": "s",
      "phonemes": "z",
      "verdict": "good"
    }
  ],
  "err": null
}
