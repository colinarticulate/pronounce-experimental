
 length of audio =  2.111562



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.8 0.88 1.6800000000000002

 start3, duration3, end3 =  0.9 0.74 1.6400000000000001

 Initial start, duration, end =  0.7000000000000001 0.9800000000000001 1.6800000000000002

 Cut at: start, duration =  0.7000000000000001 1.391562     guard_end =  2.091562 

Running scan for frate = 125
Running scan for frate = 125
Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard n with value 3 for uwl ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard z with value 5 for uw ...
Considering guard zh with value 5 for uw ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 125 public <school> = (((sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil p (sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_oy_p_sh_s_k> oy)] | [(oy <any_Cx_oy_p_sh_s_k>)]) (s | z | ((<any_Cx_oy_p_sh_s_k> oy) | (oy <any_Cx_oy_p_sh_s_k>)))) (([(<any_Cx_n_oy_k_s> n)] | [(n <any_Cx_n_oy_k_s>)]) (k | ((<any_Cx_n_oy_k_uwl> n) | (n <any_Cx_n_oy_k_uwl>)))) (([(<any_Cx_n_n_uwl_k> n)] | [(n <any_Cx_n_n_uwl_k>)]) (uwl | ((<any_Cx_n_n_uwl_k> n) | (n <any_Cx_n_n_uwl_k>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_n_uwl_ng> ng)] | [(ng <any_Cx_n_uwl_ng>)]) sil))
frate, target rule = 125 public <school> = (((sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil p (sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_oy_p_sh_s_k> oy)] | [(oy <any_Cx_oy_p_sh_s_k>)]) (s | z | ((<any_Cx_oy_p_sh_s_k> oy) | (oy <any_Cx_oy_p_sh_s_k>)))) (([(<any_Cx_n_oy_k_s> n)] | [(n <any_Cx_n_oy_k_s>)]) (k | ((<any_Cx_n_oy_k> n) | (n <any_Cx_n_oy_k>)))) ((([(<any_Vx_zh_n_uw_noSlide> zh)] | [(zh <any_Vx_zh_n_uw_noSlide>)]) ([(<any_Cx_zh_n_l_k> zh)] | [(zh <any_Cx_zh_n_l_k>)])) (uw | ((<any_Vx_zh_n_uw_noSlide> zh) | (zh <any_Vx_zh_n_uw_noSlide>)))) (([(<any_Cx_sh_zh_l> sh)] | [(sh <any_Cx_sh_zh_l>)]) (l | ((<any_Cx_sh_zh_l> sh) | (sh <any_Cx_sh_zh_l>)))) (([(<any_vowel_noSlide> r)] | [(r <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_r> r)] | [(r <any_Cx_sh_l_r>)]) sil))
Running scan for frate = 105
Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Running scan for frate = 105
Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard n with value 3 for uwl ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

frate, target rule = 105 public <school> = (((sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil p (sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_oy_p_t_s_k> oy)] | [(oy <any_Cx_oy_p_t_s_k>)]) (s | z | ((<any_Cx_oy_p_t_s_k> oy) | (oy <any_Cx_oy_p_t_s_k>)))) (([(<any_Cx_n_oy_k_s> n)] | [(n <any_Cx_n_oy_k_s>)]) (k | ((<any_Cx_n_oy_k_uwl> n) | (n <any_Cx_n_oy_k_uwl>)))) (([(<any_Cx_n_n_uwl_k> n)] | [(n <any_Cx_n_n_uwl_k>)]) (uwl | ((<any_Cx_n_n_uwl_k> n) | (n <any_Cx_n_n_uwl_k>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_n_uwl_f> f)] | [(f <any_Cx_n_uwl_f>)]) sil))
Considering guard z with value 5 for uw ...
Considering guard zh with value 5 for uw ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Running scan for frate = 91
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

frate, target rule = 105 public <school> = (((sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil p (sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_oy_p_sh_s_k> oy)] | [(oy <any_Cx_oy_p_sh_s_k>)]) (s | z | ((<any_Cx_oy_p_sh_s_k> oy) | (oy <any_Cx_oy_p_sh_s_k>)))) (([(<any_Cx_n_oy_k_s> n)] | [(n <any_Cx_n_oy_k_s>)]) (k | ((<any_Cx_n_oy_k> n) | (n <any_Cx_n_oy_k>)))) ((([(<any_Vx_z_n_uw_noSlide> z)] | [(z <any_Vx_z_n_uw_noSlide>)]) ([(<any_Cx_z_n_l_k> z)] | [(z <any_Cx_z_n_l_k>)])) (uw | ((<any_Vx_z_n_uw_noSlide> z) | (z <any_Vx_z_n_uw_noSlide>)))) (([(<any_Cx_sh_z_l> sh)] | [(sh <any_Cx_sh_z_l>)]) (l | ((<any_Cx_sh_z_l> sh) | (sh <any_Cx_sh_z_l>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_thr> thr)] | [(thr <any_Cx_sh_l_thr>)]) sil))
Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Running scan for frate = 91
Considering guard n with value 3 for uwl ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

frate, target rule = 91 public <school> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_oy_p_ch_s_k> oy)] | [(oy <any_Cx_oy_p_ch_s_k>)]) (s | z | ((<any_Cx_oy_p_ch_s_k> oy) | (oy <any_Cx_oy_p_ch_s_k>)))) (([(<any_Cx_n_oy_k_s> n)] | [(n <any_Cx_n_oy_k_s>)]) (k | ((<any_Cx_n_oy_k_uwl> n) | (n <any_Cx_n_oy_k_uwl>)))) (([(<any_Cx_n_n_uwl_k> n)] | [(n <any_Cx_n_n_uwl_k>)]) (uwl | ((<any_Cx_n_n_uwl_k> n) | (n <any_Cx_n_n_uwl_k>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_n_uwl_hh> hh)] | [(hh <any_Cx_n_uwl_hh>)]) sil))
Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Running scan for frate = 80
Considering guard zh with value 5 for uw ...
Considering guard z with value 5 for uw ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

frate, target rule = 91 public <school> = (((sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_oy_p_z_s_k> oy)] | [(oy <any_Cx_oy_p_z_s_k>)]) (s | z | ((<any_Cx_oy_p_z_s_k> oy) | (oy <any_Cx_oy_p_z_s_k>)))) (([(<any_Cx_n_oy_k_s> n)] | [(n <any_Cx_n_oy_k_s>)]) (k | ((<any_Cx_n_oy_k> n) | (n <any_Cx_n_oy_k>)))) ((([(<any_Vx_zh_n_uw_noSlide> zh)] | [(zh <any_Vx_zh_n_uw_noSlide>)]) ([(<any_Cx_zh_n_l_k> zh)] | [(zh <any_Cx_zh_n_l_k>)])) (uw | ((<any_Vx_zh_n_uw_noSlide> zh) | (zh <any_Vx_zh_n_uw_noSlide>)))) (([(<any_Cx_sh_zh_l> sh)] | [(sh <any_Cx_sh_zh_l>)]) (l | ((<any_Cx_sh_zh_l> sh) | (sh <any_Cx_sh_zh_l>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_b> b)] | [(b <any_Cx_sh_l_b>)]) sil))
Considering guard n with value 3 for uwl ...
candidateGuards = map[n:true]
Picking guard, n

frate, target rule = 80 public <school> = (((sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]) | (sil p (sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]))) (([(<any_Cx_oy_p_th_s_k> oy)] | [(oy <any_Cx_oy_p_th_s_k>)]) (s | z | ((<any_Cx_oy_p_th_s_k> oy) | (oy <any_Cx_oy_p_th_s_k>)))) (([(<any_Cx_n_oy_k_s> n)] | [(n <any_Cx_n_oy_k_s>)]) (k | ((<any_Cx_n_oy_k_uwl> n) | (n <any_Cx_n_oy_k_uwl>)))) (([(<any_Cx_n_n_uwl_k> n)] | [(n <any_Cx_n_n_uwl_k>)]) (uwl | ((<any_Cx_n_n_uwl_k> n) | (n <any_Cx_n_n_uwl_k>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_n_uwl_hh> hh)] | [(hh <any_Cx_n_uwl_hh>)]) sil))
Running scan for frate = 80
Running scan for frate = 72
Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard z with value 5 for uw ...
Considering guard zh with value 5 for uw ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard n with value 3 for uwl ...
candidateGuards = map[n:true]
Picking guard, n

frate, target rule = 80 public <school> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_oy_p_ch_s_k> oy)] | [(oy <any_Cx_oy_p_ch_s_k>)]) (s | z | ((<any_Cx_oy_p_ch_s_k> oy) | (oy <any_Cx_oy_p_ch_s_k>)))) (([(<any_Cx_n_oy_k_s> n)] | [(n <any_Cx_n_oy_k_s>)]) (k | ((<any_Cx_n_oy_k> n) | (n <any_Cx_n_oy_k>)))) ((([(<any_Vx_z_n_uw_noSlide> z)] | [(z <any_Vx_z_n_uw_noSlide>)]) ([(<any_Cx_z_n_l_k> z)] | [(z <any_Cx_z_n_l_k>)])) (uw | ((<any_Vx_z_n_uw_noSlide> z) | (z <any_Vx_z_n_uw_noSlide>)))) (([(<any_Cx_sh_z_l> sh)] | [(sh <any_Cx_sh_z_l>)]) (l | ((<any_Cx_sh_z_l> sh) | (sh <any_Cx_sh_z_l>)))) (([(<any_vowel_noSlide> w)] | [(w <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_w> w)] | [(w <any_Cx_sh_l_w>)]) sil))
frate, target rule = 72 public <school> = (((sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_oy_p_z_s_k> oy)] | [(oy <any_Cx_oy_p_z_s_k>)]) (s | z | ((<any_Cx_oy_p_z_s_k> oy) | (oy <any_Cx_oy_p_z_s_k>)))) (([(<any_Cx_n_oy_k_s> n)] | [(n <any_Cx_n_oy_k_s>)]) (k | ((<any_Cx_n_oy_k_uwl> n) | (n <any_Cx_n_oy_k_uwl>)))) (([(<any_Cx_n_n_uwl_k> n)] | [(n <any_Cx_n_n_uwl_k>)]) (uwl | ((<any_Cx_n_n_uwl_k> n) | (n <any_Cx_n_n_uwl_k>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_n_uwl_p> p)] | [(p <any_Cx_n_uwl_p>)]) sil))
Running scan for frate = 72
Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard zh with value 5 for uw ...
Considering guard z with value 5 for uw ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 72 public <school> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_oy_p_ch_s_k> oy)] | [(oy <any_Cx_oy_p_ch_s_k>)]) (s | z | ((<any_Cx_oy_p_ch_s_k> oy) | (oy <any_Cx_oy_p_ch_s_k>)))) (([(<any_Cx_n_oy_k_s> n)] | [(n <any_Cx_n_oy_k_s>)]) (k | ((<any_Cx_n_oy_k> n) | (n <any_Cx_n_oy_k>)))) ((([(<any_Vx_zh_n_uw_noSlide> zh)] | [(zh <any_Vx_zh_n_uw_noSlide>)]) ([(<any_Cx_zh_n_l_k> zh)] | [(zh <any_Cx_zh_n_l_k>)])) (uw | ((<any_Vx_zh_n_uw_noSlide> zh) | (zh <any_Vx_zh_n_uw_noSlide>)))) (([(<any_Cx_sh_zh_l> sh)] | [(sh <any_Cx_sh_zh_l>)]) (l | ((<any_Cx_sh_zh_l> sh) | (sh <any_Cx_sh_zh_l>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_b> b)] | [(b <any_Cx_sh_l_b>)]) sil))

results =
{72 [{sil 0 7} {s 8 25} {k 26 30} {uwl 31 42} {l 43 58} {p 59 61} {sil 62 64}]}
{80 [{sil 0 9} {s 10 27} {k 28 34} {n 35 40} {l 41 64} {sil 65 68}]}
{91 [{sil 0 10} {s 11 32} {k 33 40} {l 41 76} {n 77 82} {sil 83 125}]}
{105 [{sil 0 12} {s 13 37} {k 38 46} {l 47 88} {n 89 91} {sil 92 145}]}
{125 [{sil 3 16} {s 17 40} {k 41 44} {n 45 47} {g 48 54} {uh 55 107} {ng 108 111} {sil 112 169}]}

normalised results =
{72 [{sil 0 7} {s 11 35} {k 36 42} {uwl 43 58} {l 60 81} {p 82 82} {sil 86 86}]}
{80 [{sil 0 9} {s 13 34} {k 35 43} {n 44 50} {l 51 80} {sil 81 85}]}
{91 [{sil 0 10} {s 12 35} {k 36 44} {l 45 84} {n 85 90} {sil 91 137}]}
{105 [{sil 0 12} {s 12 35} {k 36 44} {l 45 84} {n 85 85} {sil 88 138}]}
{125 [{sil 3 16} {s 14 32} {k 33 35} {n 36 36} {g 38 43} {uh 44 86} {ng 86 89} {sil 90 135}]}

ruleAligned = [{{s 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{k 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{uwl 2} [{0 3}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {s 11 35} {k 36 42} {uwl 43 58} {l 60 81} {p 82 82} {sil 86 86}]}
{80 [{sil 0 0} {s 13 34} {k 35 43} {n 44 50} {l 51 80} {sil 81 81}]}
{91 [{sil 0 0} {s 12 35} {k 36 44} {l 45 45} {n 85 90} {sil 91 91}]}
{105 [{sil 0 0} {s 12 35} {k 36 44} {l 45 45} {n 85 85} {sil 88 88}]}
{125 [{sil 3 3} {s 14 32} {k 33 35} {n 36 36} {g 38 43} {uh 44 44} {ng 86 86} {sil 90 90}]}

timeAligned = [{{s 12 35} [{0 1} {2 1} {3 1} {1 1} {4 1}]} {{k 36 43} [{0 2} {1 2} {2 2} {3 2}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 32
i, iTime, newITime, timeStartFrom = 2 1 -1 42
combinedVerdict    = [{s 0} {k 0} {uwl 2}]
ruleAlignedVerdict = [{s 0} {k 0} {uwl 2}]

score->
+1 for s
+1 for k
-1 for uwl
score<-: 1

results =
{72 [{sil 0 7} {s 8 25} {k 26 30} {uw 31 45} {l 46 58} {sil 59 64}]}
{80 [{sil 0 9} {s 10 27} {k 28 34} {uw 35 53} {l 54 64} {sil 65 68}]}
{91 [{sil 0 10} {s 11 32} {k 33 39} {uw 40 47} {l 48 79} {sil 80 125}]}
{105 [{sil 0 12} {s 13 37} {k 38 42} {ao 43 77} {z 78 80} {l 81 92} {sil 93 145}]}
{125 [{sil 3 16} {s 17 45} {k 46 54} {uw 55 69} {l 70 106} {sil 107 169}]}

normalised results =
{72 [{sil 0 7} {s 11 35} {k 36 42} {uw 43 63} {l 64 81} {sil 82 89}]}
{80 [{sil 0 9} {s 13 34} {k 35 43} {uw 44 66} {l 68 80} {sil 81 85}]}
{91 [{sil 0 10} {s 12 35} {k 36 43} {uw 44 52} {l 53 87} {sil 88 137}]}
{105 [{sil 0 12} {s 12 35} {k 36 40} {ao 41 73} {z 74 74} {l 77 88} {sil 89 138}]}
{125 [{sil 3 16} {s 14 36} {k 37 43} {uw 44 55} {l 56 85} {sil 86 135}]}

ruleAligned = [{{s 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{k 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{uw 0} [{0 3} {1 3} {2 3} {4 3}]} {{l 0} [{0 4} {1 4} {2 4} {3 5} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {s 11 35} {k 36 42} {uw 43 63} {l 64 81} {sil 82 82}]}
{80 [{sil 0 0} {s 13 34} {k 35 43} {uw 44 66} {l 68 80} {sil 81 81}]}
{91 [{sil 0 0} {s 12 35} {k 36 43} {uw 44 52} {l 53 87} {sil 88 88}]}
{105 [{sil 0 0} {s 12 35} {k 36 40} {ao 41 73} {z 74 74} {l 77 88} {sil 89 89}]}
{125 [{sil 3 3} {s 14 36} {k 37 43} {uw 44 55} {l 56 85} {sil 86 86}]}

timeAligned = [{{s 12 35} [{0 1} {2 1} {3 1} {1 1} {4 1}]} {{k 36 43} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{uw 44 55} [{0 3} {1 3} {2 3} {4 3}]} {{l 64 85} [{0 4} {2 4} {4 4} {1 4} {3 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 34
i, iTime, newITime, timeStartFrom = 2 1 2 40
i, iTime, newITime, timeStartFrom = 3 2 3 52
combinedVerdict    = [{s 0} {k 0} {uw 0} {l 0}]
ruleAlignedVerdict = [{s 0} {k 0} {uw 0} {l 0}]

score->
+1 for s
+1 for k
+1 for uw
+1 for l
score<-: 9
testPronounce s good k good uw good l good
publish->
phonsToAlphas = [{[s] s} {[k] ch} {[uw] oo} {[l] l}]
getVerdict<-:new {s [s] 0}
getVerdict<-:new {ch [k] 0}
getVerdict<-:new {oo [uw] 0}
getVerdict<-:new {l [l] 0}
lettersVerdicts = [{s [s] 0} {ch [k] 0} {oo [uw] 0} {l [l] 0}]
publish<-
Total: 310.315047ms
{
  "results": [
    {
      "letters": "s",
      "phonemes": "s",
      "verdict": "good"
    },
    {
      "letters": "ch",
      "phonemes": "k",
      "verdict": "good"
    },
    {
      "letters": "oo",
      "phonemes": "u",
      "verdict": "good"
    },
    {
      "letters": "l",
      "phonemes": "l",
      "verdict": "good"
    }
  ],
  "err": null
}
