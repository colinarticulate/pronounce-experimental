
 length of audio =  1.902625



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.54 0.76 1.3

 start3, duration3, end3 =  0.54 0.54 1.08

 Initial start, duration, end =  0.44000000000000006 0.86 1.3

 Cut at: start, duration =  0.44000000000000006 1.31     guard_end =  1.75 

Running scan for frate = 125
Considering guard z with value 0.8 for k ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 3 for t ...
candidateGuards = map[r:true]
Picking guard, r


frate, target rule = 125 public <kit> = (((sil [((t <any_Cx_k_t_b>) | (<any_Cx_k_t_b> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil b (sil [((t <any_Cx_k_t_b>) | (<any_Cx_k_t_b> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_z_b_t_k> z)] | [(z <any_Cx_z_b_t_k>)]) (k | ((<any_Cx_z_b_t_k> z) | (z <any_Cx_z_b_t_k>)))) ((([(<any_Vx_r_z_ih_noSlide> r)] | [(r <any_Vx_r_z_ih_noSlide>)]) ([(<any_Cx_r_z_t_k> r)] | [(r <any_Cx_r_z_t_k>)])) (ih | ((<any_Vx_r_z_ih_noSlide> r) | (r <any_Vx_r_z_ih_noSlide>)))) (([(<any_Cx_r_r_t> r)] | [(r <any_Cx_r_r_t>)]) (t | ((<any_Cx_r_r_t> r) | (r <any_Cx_r_r_t>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_r_t_d> d)] | [(d <any_Cx_r_t_d>)]) sil))
Running scan for frate = 105
Considering guard z with value 0.8 for k ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 3 for t ...
candidateGuards = map[r:true]
Picking guard, r


frate, target rule = 105 public <kit> = (((sil [((p <any_Cx_k_p_b>) | (<any_Cx_k_p_b> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]) | (sil b (sil [((p <any_Cx_k_p_b>) | (<any_Cx_k_p_b> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]))) (([(<any_Cx_z_b_p_k> z)] | [(z <any_Cx_z_b_p_k>)]) (k | ((<any_Cx_z_b_p_k> z) | (z <any_Cx_z_b_p_k>)))) ((([(<any_Vx_r_z_ih_noSlide> r)] | [(r <any_Vx_r_z_ih_noSlide>)]) ([(<any_Cx_r_z_t_k> r)] | [(r <any_Cx_r_z_t_k>)])) (ih | ((<any_Vx_r_z_ih_noSlide> r) | (r <any_Vx_r_z_ih_noSlide>)))) (([(<any_Cx_r_r_t> r)] | [(r <any_Cx_r_r_t>)]) (t | ((<any_Cx_r_r_t> r) | (r <any_Cx_r_r_t>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_r_t_d> d)] | [(d <any_Cx_r_t_d>)]) sil))
Running scan for frate = 91
Considering guard z with value 0.8 for k ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 3 for t ...
candidateGuards = map[r:true]
Picking guard, r


frate, target rule = 91 public <kit> = (((sil [((p <any_Cx_k_p_b>) | (<any_Cx_k_p_b> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]) | (sil b (sil [((p <any_Cx_k_p_b>) | (<any_Cx_k_p_b> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]))) (([(<any_Cx_z_b_p_k> z)] | [(z <any_Cx_z_b_p_k>)]) (k | ((<any_Cx_z_b_p_k> z) | (z <any_Cx_z_b_p_k>)))) ((([(<any_Vx_r_z_ih_noSlide> r)] | [(r <any_Vx_r_z_ih_noSlide>)]) ([(<any_Cx_r_z_t_k> r)] | [(r <any_Cx_r_z_t_k>)])) (ih | ((<any_Vx_r_z_ih_noSlide> r) | (r <any_Vx_r_z_ih_noSlide>)))) (([(<any_Cx_r_r_t> r)] | [(r <any_Cx_r_r_t>)]) (t | ((<any_Cx_r_r_t> r) | (r <any_Cx_r_r_t>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_r_t_thr> thr)] | [(thr <any_Cx_r_t_thr>)]) sil))
Running scan for frate = 80
Considering guard z with value 0.8 for k ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 3 for t ...
candidateGuards = map[r:true]
Picking guard, r


frate, target rule = 80 public <kit> = (((sil [((p <any_Cx_k_p_b>) | (<any_Cx_k_p_b> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]) | (sil b (sil [((p <any_Cx_k_p_b>) | (<any_Cx_k_p_b> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]))) (([(<any_Cx_z_b_p_k> z)] | [(z <any_Cx_z_b_p_k>)]) (k | ((<any_Cx_z_b_p_k> z) | (z <any_Cx_z_b_p_k>)))) ((([(<any_Vx_r_z_ih_noSlide> r)] | [(r <any_Vx_r_z_ih_noSlide>)]) ([(<any_Cx_r_z_t_k> r)] | [(r <any_Cx_r_z_t_k>)])) (ih | ((<any_Vx_r_z_ih_noSlide> r) | (r <any_Vx_r_z_ih_noSlide>)))) (([(<any_Cx_r_r_t> r)] | [(r <any_Cx_r_r_t>)]) (t | ((<any_Cx_r_r_t> r) | (r <any_Cx_r_r_t>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_r_t_d> d)] | [(d <any_Cx_r_t_d>)]) sil))
Running scan for frate = 72
Considering guard z with value 0.8 for k ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 3 for t ...
candidateGuards = map[r:true]
Picking guard, r


frate, target rule = 72 public <kit> = (((sil [((p <any_Cx_k_p_b>) | (<any_Cx_k_p_b> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]) | (sil b (sil [((p <any_Cx_k_p_b>) | (<any_Cx_k_p_b> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]))) (([(<any_Cx_z_b_p_k> z)] | [(z <any_Cx_z_b_p_k>)]) (k | ((<any_Cx_z_b_p_k> z) | (z <any_Cx_z_b_p_k>)))) ((([(<any_Vx_r_z_ih_noSlide> r)] | [(r <any_Vx_r_z_ih_noSlide>)]) ([(<any_Cx_r_z_t_k> r)] | [(r <any_Cx_r_z_t_k>)])) (ih | ((<any_Vx_r_z_ih_noSlide> r) | (r <any_Vx_r_z_ih_noSlide>)))) (([(<any_Cx_r_r_t> r)] | [(r <any_Cx_r_r_t>)]) (t | ((<any_Cx_r_r_t> r) | (r <any_Cx_r_r_t>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_r_t_p> p)] | [(p <any_Cx_r_t_p>)]) sil))

results =
{72 [{sil 0 11} {k 12 20} {ih 21 35} {t 36 53} {sil 54 65}]}
{80 [{sil 0 13} {k 14 23} {ih 24 40} {t 41 58} {sil 59 70}]}
{91 [{sil 0 13} {k 14 27} {ih 28 45} {t 46 72} {sil 73 117}]}
{105 [{sil 0 18} {k 19 31} {ih 32 53} {t 54 80} {sil 81 136}]}
{125 [{sil 3 23} {k 24 37} {ih 38 63} {t 64 97} {sil 98 163}]}

normalised results =
{72 [{sil 0 11} {k 17 28} {ih 29 49} {t 50 74} {sil 75 90}]}
{80 [{sil 0 13} {k 18 29} {ih 30 50} {t 51 73} {sil 74 88}]}
{91 [{sil 0 13} {k 15 30} {ih 31 49} {t 51 79} {sil 80 129}]}
{105 [{sil 0 18} {k 18 30} {ih 30 50} {t 51 76} {sil 77 130}]}
{125 [{sil 3 23} {k 19 30} {ih 30 50} {t 51 78} {sil 78 130}]}

ruleAligned = [{{k 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ih 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{t 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {k 17 28} {ih 29 49} {t 50 74} {sil 75 75}]}
{80 [{sil 0 0} {k 18 29} {ih 30 50} {t 51 73} {sil 74 74}]}
{91 [{sil 0 0} {k 15 30} {ih 31 49} {t 51 79} {sil 80 80}]}
{105 [{sil 0 0} {k 18 30} {ih 30 50} {t 51 76} {sil 77 77}]}
{125 [{sil 3 3} {k 19 30} {ih 30 50} {t 51 78} {sil 78 78}]}

timeAligned = [{{k 18 30} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ih 30 50} [{0 2} {1 2} {3 2} {4 2} {2 2}]} {{t 51 76} [{0 3} {1 3} {2 3} {3 3} {4 3}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 28
i, iTime, newITime, timeStartFrom = 2 1 2 49
combinedVerdict    = [{k 0} {ih 0} {t 0}]
ruleAlignedVerdict = [{k 0} {ih 0} {t 0}]

score->
+1 for k
+1 for ih
+1 for t
score<-: 8
testPronounce k good ih good t good
publish->
phonsToAlphas = [{[k] k} {[ih] i} {[t] t}]
getVerdict<-:new {k [k] 0}
getVerdict<-:new {i [ih] 0}
getVerdict<-:new {t [t] 0}
lettersVerdicts = [{k [k] 0} {i [ih] 0} {t [t] 0}]
publish<-
{
  "results": [
    {
      "letters": "k",
      "phonemes": "k",
      "verdict": "good"
    },
    {
      "letters": "i",
      "phonemes": "Éª",
      "verdict": "good"
    },
    {
      "letters": "t",
      "phonemes": "t",
      "verdict": "good"
    }
  ],
  "err": null
}
