
 length of audio =  1.199125



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.38 0.56 0.9400000000000001

 start3, duration3, end3 =  0.52 0.28 0.8

 Initial start, duration, end =  0.28 0.66 0.9400000000000001

 Cut at: start, duration =  0.28 0.899125     guard_end =  1.179125 

Running scan for frate = 125
Considering guard l with value 3.3999999999999995 for s ...
candidateGuards = map[l:true]
Picking guard, l

Considering guard l with value 6.799999999999999 for ih ...
candidateGuards = map[l:true]
Picking guard, l

Considering guard jh with value 1 for p ...
candidateGuards = map[jh:true]
Picking guard, jh

frate, target rule = 125 public <sip> = (((sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil p (sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_l_p_sh_s> l)] | [(l <any_Cx_l_p_sh_s>)]) (s | z | ((<any_Cx_l_p_sh_s> l) | (l <any_Cx_l_p_sh_s>)))) ((([(<any_Vx_l_l_ih_noSlide> l)] | [(l <any_Vx_l_l_ih_noSlide>)]) ([(<any_Cx_l_l_p_s> l)] | [(l <any_Cx_l_l_p_s>)])) (ih | ((<any_Vx_l_l_ih_noSlide> l) | (l <any_Vx_l_l_ih_noSlide>)))) (([(<any_Cx_jh_l_p> jh)] | [(jh <any_Cx_jh_l_p>)]) (p | ((<any_Cx_jh_l_p> jh) | (jh <any_Cx_jh_l_p>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_jh_p_hh> hh)] | [(hh <any_Cx_jh_p_hh>)]) sil))
Running scan for frate = 105
Considering guard l with value 3.3999999999999995 for s ...
candidateGuards = map[l:true]
Picking guard, l

Considering guard l with value 6.799999999999999 for ih ...
candidateGuards = map[l:true]
Picking guard, l

Considering guard jh with value 1 for p ...
candidateGuards = map[jh:true]
Picking guard, jh

frate, target rule = 105 public <sip> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_l_p_ch_s> l)] | [(l <any_Cx_l_p_ch_s>)]) (s | z | ((<any_Cx_l_p_ch_s> l) | (l <any_Cx_l_p_ch_s>)))) ((([(<any_Vx_l_l_ih_noSlide> l)] | [(l <any_Vx_l_l_ih_noSlide>)]) ([(<any_Cx_l_l_p_s> l)] | [(l <any_Cx_l_l_p_s>)])) (ih | ((<any_Vx_l_l_ih_noSlide> l) | (l <any_Vx_l_l_ih_noSlide>)))) (([(<any_Cx_jh_l_p> jh)] | [(jh <any_Cx_jh_l_p>)]) (p | ((<any_Cx_jh_l_p> jh) | (jh <any_Cx_jh_l_p>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_jh_p_v> v)] | [(v <any_Cx_jh_p_v>)]) sil))
Running scan for frate = 91
Considering guard l with value 3.3999999999999995 for s ...
candidateGuards = map[l:true]
Picking guard, l

Considering guard l with value 6.799999999999999 for ih ...
candidateGuards = map[l:true]
Picking guard, l

Considering guard jh with value 1 for p ...
candidateGuards = map[jh:true]
Picking guard, jh

frate, target rule = 91 public <sip> = (((sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil p (sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_l_p_t_s> l)] | [(l <any_Cx_l_p_t_s>)]) (s | z | ((<any_Cx_l_p_t_s> l) | (l <any_Cx_l_p_t_s>)))) ((([(<any_Vx_l_l_ih_noSlide> l)] | [(l <any_Vx_l_l_ih_noSlide>)]) ([(<any_Cx_l_l_p_s> l)] | [(l <any_Cx_l_l_p_s>)])) (ih | ((<any_Vx_l_l_ih_noSlide> l) | (l <any_Vx_l_l_ih_noSlide>)))) (([(<any_Cx_jh_l_p> jh)] | [(jh <any_Cx_jh_l_p>)]) (p | ((<any_Cx_jh_l_p> jh) | (jh <any_Cx_jh_l_p>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_jh_p_hh> hh)] | [(hh <any_Cx_jh_p_hh>)]) sil))
Running scan for frate = 80
Considering guard l with value 3.3999999999999995 for s ...
candidateGuards = map[l:true]
Picking guard, l

Considering guard l with value 6.799999999999999 for ih ...
candidateGuards = map[l:true]
Picking guard, l

Considering guard jh with value 1 for p ...
candidateGuards = map[jh:true]
Picking guard, jh

frate, target rule = 80 public <sip> = (((sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]) | (sil p (sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]))) (([(<any_Cx_l_p_th_s> l)] | [(l <any_Cx_l_p_th_s>)]) (s | z | ((<any_Cx_l_p_th_s> l) | (l <any_Cx_l_p_th_s>)))) ((([(<any_Vx_l_l_ih_noSlide> l)] | [(l <any_Vx_l_l_ih_noSlide>)]) ([(<any_Cx_l_l_p_s> l)] | [(l <any_Cx_l_l_p_s>)])) (ih | ((<any_Vx_l_l_ih_noSlide> l) | (l <any_Vx_l_l_ih_noSlide>)))) (([(<any_Cx_jh_l_p> jh)] | [(jh <any_Cx_jh_l_p>)]) (p | ((<any_Cx_jh_l_p> jh) | (jh <any_Cx_jh_l_p>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_jh_p_b> b)] | [(b <any_Cx_jh_p_b>)]) sil))
Running scan for frate = 72
Considering guard l with value 3.3999999999999995 for s ...
candidateGuards = map[l:true]
Picking guard, l

Considering guard l with value 6.799999999999999 for ih ...
candidateGuards = map[l:true]
Picking guard, l

Considering guard jh with value 1 for p ...
candidateGuards = map[jh:true]
Picking guard, jh

frate, target rule = 72 public <sip> = (((sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]) | (sil p (sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]))) (([(<any_Cx_l_p_th_s> l)] | [(l <any_Cx_l_p_th_s>)]) (s | z | ((<any_Cx_l_p_th_s> l) | (l <any_Cx_l_p_th_s>)))) ((([(<any_Vx_l_l_ih_noSlide> l)] | [(l <any_Vx_l_l_ih_noSlide>)]) ([(<any_Cx_l_l_p_s> l)] | [(l <any_Cx_l_l_p_s>)])) (ih | ((<any_Vx_l_l_ih_noSlide> l) | (l <any_Vx_l_l_ih_noSlide>)))) (([(<any_Cx_jh_l_p> jh)] | [(jh <any_Cx_jh_l_p>)]) (p | ((<any_Cx_jh_l_p> jh) | (jh <any_Cx_jh_l_p>)))) (([(<any_vowel_noSlide> t)] | [(t <any_vowel_noSlide>)]) ([(<any_Cx_jh_p_t> t)] | [(t <any_Cx_jh_p_t>)]) sil))

results =
{72 [{sil 0 9} {s 10 23} {ih 24 33} {p 34 36} {t 37 41} {v 42 49} {sil 50 59}]}
{80 [{sil 0 10} {s 11 26} {ih 27 36} {p 37 39} {b 40 42} {d 43 55} {sil 56 65}]}
{91 [{sil 0 12} {s 13 30} {ih 31 40} {jh 41 45} {d 46 63} {sil 64 80}]}
{105 [{sil 0 14} {s 15 35} {ih 36 51} {p 52 54} {d 55 59} {v 60 71} {sil 72 89}]}
{125 [{sil 3 18} {s 19 43} {ih 44 63} {p 64 84} {sil 85 112}]}

normalised results =
{72 [{sil 0 9} {s 14 32} {ih 33 46} {p 47 47} {t 51 57} {v 58 68} {sil 69 82}]}
{80 [{sil 0 10} {s 14 33} {ih 34 45} {p 46 46} {b 50 50} {d 54 69} {sil 70 81}]}
{91 [{sil 0 12} {s 14 33} {ih 34 44} {jh 45 49} {d 51 69} {sil 70 88}]}
{105 [{sil 0 14} {s 14 33} {ih 34 49} {p 50 50} {d 52 56} {v 57 68} {sil 69 85}]}
{125 [{sil 3 18} {s 15 34} {ih 35 50} {p 51 67} {sil 68 90}]}

ruleAligned = [{{s 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ih 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{p 2} [{4 3}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {s 14 32} {ih 33 46} {p 47 47} {t 51 51} {v 58 68} {sil 69 69}]}
{80 [{sil 0 0} {s 14 33} {ih 34 45} {p 46 46} {b 50 50} {d 54 69} {sil 70 70}]}
{91 [{sil 0 0} {s 14 33} {ih 34 44} {jh 45 45} {d 51 69} {sil 70 70}]}
{105 [{sil 0 0} {s 14 33} {ih 34 49} {p 50 50} {d 52 56} {v 57 68} {sil 69 69}]}
{125 [{sil 3 3} {s 15 34} {ih 35 50} {p 51 67} {sil 68 68}]}

timeAligned = [{{s 14 33} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ih 34 46} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{d 54 56} [{1 5} {2 4} {3 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 32
i, iTime, newITime, timeStartFrom = 2 1 -1 44
combinedVerdict    = [{s 0} {ih 0} {p 2} {d 3}]
ruleAlignedVerdict = [{s 0} {ih 0} {p 2}]

score->
+1 for s
+1 for ih
-1 for p
-1 for d
score<-: 0
bestResult = {0 [{s 0} {ih 0} {p 2} {d 3}] [s ih p]}
testPronounce s good ih good p missing d surprise
publish->
phonsToAlphas = [{[s] s} {[ih] i} {[p] p}]
getVerdict<-:new {s [s] 0}
getVerdict<-:new {i [ih] 0}
getVerdict<-:new {p [p] 2}
lettersVerdicts = [{s [s] 0} {i [ih] 0} {p [p] 2} {d [d] 3}]
publish<-
Total: 214.708204ms
{
  "results": [
    {
      "letters": "s",
      "phonemes": "s",
      "verdict": "good"
    },
    {
      "letters": "i",
      "phonemes": "Éª",
      "verdict": "good"
    },
    {
      "letters": "p",
      "phonemes": "p",
      "verdict": "missing"
    },
    {
      "letters": "d",
      "phonemes": "d",
      "verdict": "surprise"
    }
  ],
  "err": null
}
