
 length of audio =  2.282313



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.76 0.94 1.7

 start3, duration3, end3 =  0.86 0.76 1.62

 Initial start, duration, end =  0.66 1.04 1.7

 Cut at: start, duration =  0.66 1.49     guard_end =  2.15 

Running scan for frate = 125
Considering guard g with value 2.6 for hh ...
candidateGuards = map[g:true]
Picking guard, g

Considering guard g with value 2.6 for ey ...
candidateGuards = map[g:true]
Picking guard, g


frate, target rule = 125 public <hay> = (((sil [((z <any_Cx_hh_z_b>) | (<any_Cx_hh_z_b> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil b (sil [((z <any_Cx_hh_z_b>) | (<any_Cx_hh_z_b> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_g_b_z_hh> g)] | [(g <any_Cx_g_b_z_hh>)]) (hh | ((<any_Cx_g_b_z_hh> g) | (g <any_Cx_g_b_z_hh>)))) ((([(<any_Vx_g_g_ey_noSlide> g)] | [(g <any_Vx_g_g_ey_noSlide>)]) ([(<any_Cx_g_g_hh> g)] | [(g <any_Cx_g_g_hh>)])) (ey | ((<any_Vx_g_g_ey_noSlide> g) | (g <any_Vx_g_g_ey_noSlide>)))) (([(<any_Cx_g_ey_f> f)] | [(f <any_Cx_g_ey_f>)]) ([(<any_Vx_g_ey_f> f)] | [(f <any_Vx_g_ey_f>)]) sil))
Running scan for frate = 105
Considering guard g with value 2.6 for hh ...
candidateGuards = map[g:true]
Picking guard, g

Considering guard g with value 2.6 for ey ...
candidateGuards = map[g:true]
Picking guard, g


frate, target rule = 105 public <hay> = (((sil [((z <any_Cx_hh_z_b>) | (<any_Cx_hh_z_b> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil b (sil [((z <any_Cx_hh_z_b>) | (<any_Cx_hh_z_b> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_g_b_z_hh> g)] | [(g <any_Cx_g_b_z_hh>)]) (hh | ((<any_Cx_g_b_z_hh> g) | (g <any_Cx_g_b_z_hh>)))) ((([(<any_Vx_g_g_ey_noSlide> g)] | [(g <any_Vx_g_g_ey_noSlide>)]) ([(<any_Cx_g_g_hh> g)] | [(g <any_Cx_g_g_hh>)])) (ey | ((<any_Vx_g_g_ey_noSlide> g) | (g <any_Vx_g_g_ey_noSlide>)))) (([(<any_Cx_g_ey_w> w)] | [(w <any_Cx_g_ey_w>)]) ([(<any_Vx_g_ey_w> w)] | [(w <any_Vx_g_ey_w>)]) sil))
Running scan for frate = 91
Considering guard g with value 2.6 for hh ...
candidateGuards = map[g:true]
Picking guard, g

Considering guard g with value 2.6 for ey ...
candidateGuards = map[g:true]
Picking guard, g


frate, target rule = 91 public <hay> = (((sil [((b <any_Cx_hh_b_b>) | (<any_Cx_hh_b_b> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]) | (sil b (sil [((b <any_Cx_hh_b_b>) | (<any_Cx_hh_b_b> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]))) (([(<any_Cx_g_b_b_hh> g)] | [(g <any_Cx_g_b_b_hh>)]) (hh | ((<any_Cx_g_b_b_hh> g) | (g <any_Cx_g_b_b_hh>)))) ((([(<any_Vx_g_g_ey_noSlide> g)] | [(g <any_Vx_g_g_ey_noSlide>)]) ([(<any_Cx_g_g_hh> g)] | [(g <any_Cx_g_g_hh>)])) (ey | ((<any_Vx_g_g_ey_noSlide> g) | (g <any_Vx_g_g_ey_noSlide>)))) (([(<any_Cx_g_ey_r> r)] | [(r <any_Cx_g_ey_r>)]) ([(<any_Vx_g_ey_r> r)] | [(r <any_Vx_g_ey_r>)]) sil))
Running scan for frate = 80
Considering guard g with value 2.6 for hh ...
candidateGuards = map[g:true]
Picking guard, g

Considering guard g with value 2.6 for ey ...
candidateGuards = map[g:true]
Picking guard, g


frate, target rule = 80 public <hay> = (((sil [((z <any_Cx_hh_z_b>) | (<any_Cx_hh_z_b> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil b (sil [((z <any_Cx_hh_z_b>) | (<any_Cx_hh_z_b> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_g_b_z_hh> g)] | [(g <any_Cx_g_b_z_hh>)]) (hh | ((<any_Cx_g_b_z_hh> g) | (g <any_Cx_g_b_z_hh>)))) ((([(<any_Vx_g_g_ey_noSlide> g)] | [(g <any_Vx_g_g_ey_noSlide>)]) ([(<any_Cx_g_g_hh> g)] | [(g <any_Cx_g_g_hh>)])) (ey | ((<any_Vx_g_g_ey_noSlide> g) | (g <any_Vx_g_g_ey_noSlide>)))) (([(<any_Cx_g_ey_n> n)] | [(n <any_Cx_g_ey_n>)]) ([(<any_Vx_g_ey_n> n)] | [(n <any_Vx_g_ey_n>)]) sil))
Running scan for frate = 72
Considering guard g with value 2.6 for hh ...
candidateGuards = map[g:true]
Picking guard, g

Considering guard g with value 2.6 for ey ...
candidateGuards = map[g:true]
Picking guard, g


frate, target rule = 72 public <hay> = (((sil [((b <any_Cx_hh_b_b>) | (<any_Cx_hh_b_b> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]) | (sil b (sil [((b <any_Cx_hh_b_b>) | (<any_Cx_hh_b_b> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]))) (([(<any_Cx_g_b_b_hh> g)] | [(g <any_Cx_g_b_b_hh>)]) (hh | ((<any_Cx_g_b_b_hh> g) | (g <any_Cx_g_b_b_hh>)))) ((([(<any_Vx_g_g_ey_noSlide> g)] | [(g <any_Vx_g_g_ey_noSlide>)]) ([(<any_Cx_g_g_hh> g)] | [(g <any_Cx_g_g_hh>)])) (ey | ((<any_Vx_g_g_ey_noSlide> g) | (g <any_Vx_g_g_ey_noSlide>)))) (([(<any_Cx_g_ey_hh> hh)] | [(hh <any_Cx_g_ey_hh>)]) ([(<any_Vx_g_ey_hh> hh)] | [(hh <any_Vx_g_ey_hh>)]) sil))

results =
{72 [{sil 0 9} {g 10 19} {l 20 30} {ey 31 54} {sil 55 63}]}
{80 [{sil 0 11} {g 12 22} {l 23 32} {ey 33 35} {ow 36 52} {n 53 65} {sil 66 68}]}
{91 [{sil 0 11} {g 12 26} {l 27 37} {eh 38 54} {g 55 57} {iy 58 74} {g 75 77} {sil 78 130}]}
{105 [{sil 0 14} {g 15 21} {v 22 26} {g 27 30} {l 31 43} {eh 44 64} {g 65 67} {iy 68 87} {g 88 90} {sil 91 151}]}
{125 [{sil 3 19} {g 20 25} {v 26 34} {g 35 37} {l 38 51} {eh 52 75} {g 76 78} {iy 79 109} {f 110 112} {sil 113 182}]}

normalised results =
{72 [{sil 0 9} {g 14 26} {l 28 42} {ey 43 75} {sil 76 88}]}
{80 [{sil 0 11} {g 15 28} {l 29 40} {ey 41 41} {ow 45 65} {n 66 81} {sil 83 83}]}
{91 [{sil 0 11} {g 13 29} {l 30 41} {eh 42 59} {g 60 60} {iy 64 81} {g 82 82} {sil 86 143}]}
{105 [{sil 0 14} {g 14 20} {v 21 25} {g 26 29} {l 30 41} {eh 42 61} {g 62 62} {iy 65 83} {g 84 84} {sil 87 144}]}
{125 [{sil 3 19} {g 16 20} {v 21 27} {g 28 28} {l 30 41} {eh 42 60} {g 61 61} {iy 63 87} {f 88 88} {sil 90 146}]}

ruleAligned = [{{hh 2} []} {{g 3} [{0 1} {1 1} {2 1} {3 1}]} {{l 3} [{0 2} {1 2} {2 2}]} {{ey 2} [{0 3}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {g 14 26} {l 28 42} {ey 43 75} {sil 76 76}]}
{80 [{sil 0 0} {g 15 28} {l 29 40} {ey 41 41} {ow 45 65} {n 66 81} {sil 83 83}]}
{91 [{sil 0 0} {g 13 29} {l 30 41} {eh 42 59} {g 60 60} {iy 64 81} {g 82 82} {sil 86 86}]}
{105 [{sil 0 0} {g 14 20} {v 21 25} {g 26 26} {l 30 41} {eh 42 61} {g 62 62} {iy 65 83} {g 84 84} {sil 87 87}]}
{125 [{sil 3 3} {g 16 16} {v 21 27} {g 28 28} {l 30 41} {eh 42 60} {g 61 61} {iy 63 87} {f 88 88} {sil 90 90}]}

timeAligned = [{{g 14 26} [{0 1} {2 1} {3 1} {1 1}]} {{l 30 41} [{0 2} {1 2} {2 2} {3 4} {4 4}]} {{eh 42 59} [{2 3} {3 5} {4 5}]} {{iy 65 81} [{2 5} {3 7} {4 7}]}]

i, iTime, newITime, timeStartFrom = 0 0 -1 0
i, iTime, newITime, timeStartFrom = 1 0 0 0
i, iTime, newITime, timeStartFrom = 2 0 1 20
i, iTime, newITime, timeStartFrom = 3 1 -1 40
combinedVerdict    = [{hh 2} {g 3} {l 3} {ey 2} {eh 3} {iy 3}]
ruleAlignedVerdict = [{hh 2} {g 3} {l 3} {ey 2}]

score->
-1 for hh
-1 for g
-1 for l
-1 for ey
-1 for eh
-1 for iy
score<-: -6
bestResult = {-6 [{hh 2} {g 3} {l 3} {ey 2} {eh 3} {iy 3}] [hh ey]}
testPronounce hh missing g surprise l surprise ey missing eh surprise iy surprise
publish->
phonsToAlphas = [{[hh] h} {[ey] ay}]
getVerdict<-:new {h [hh] 2}
getVerdict<-:new {ay [ey] 2}
lettersVerdicts = [{h [hh] 2} {g [g] 3} {l [l] 3} {ay [ey] 2} {eh [eh] 3} {iy [iy] 3}]
publish<-
{
  "results": [
    {
      "letters": "h",
      "phonemes": "h",
      "verdict": "missing"
    },
    {
      "letters": "g",
      "phonemes": "g",
      "verdict": "surprise"
    },
    {
      "letters": "l",
      "phonemes": "l",
      "verdict": "surprise"
    },
    {
      "letters": "ay",
      "phonemes": "eɪ",
      "verdict": "missing"
    },
    {
      "letters": "eh",
      "phonemes": "ɛ",
      "verdict": "surprise"
    },
    {
      "letters": "iy",
      "phonemes": "iː",
      "verdict": "surprise"
    }
  ],
  "err": null
}
