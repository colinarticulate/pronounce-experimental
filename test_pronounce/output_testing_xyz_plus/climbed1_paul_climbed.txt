
 length of audio =  2.413438



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.62 1.02 1.6400000000000001

 start3, duration3, end3 =  0.62 0.9 1.52

 Initial start, duration, end =  0.52 1.12 1.6400000000000001

 Cut at: start, duration =  0.52 1.57     guard_end =  2.09 

Running scan for frate = 125
Running scan for frate = 125
Considering guard zh with value 1 for kl ...
Considering guard z with value 1 for kl ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard zh with value 2.4000000000000004 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 125 public <climbed> = (((sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_z_p_z_kl> z)] | [(z <any_Cx_z_p_z_kl>)]) (kl | ((<any_Cx_z_p_z_kl> z) | (z <any_Cx_z_p_z_kl>)))) ((([(<any_Vx_zh_z_ay_noSlide> zh)] | [(zh <any_Vx_zh_z_ay_noSlide>)]) ([(<any_Cx_zh_z_m_kl> zh)] | [(zh <any_Cx_zh_z_m_kl>)])) (ay | ((<any_Vx_zh_z_ay_noSlide> zh) | (zh <any_Vx_zh_z_ay_noSlide>)))) (([(<any_Cx_sh_zh_m> sh)] | [(sh <any_Cx_sh_zh_m>)]) (m | ((<any_Cx_sh_zh_m_d> sh) | (sh <any_Cx_sh_zh_m_d>)))) (([(<any_Cx_sh_sh_d_m> sh)] | [(sh <any_Cx_sh_sh_d_m>)]) (d | ((<any_Cx_sh_sh_d_m> sh) | (sh <any_Cx_sh_sh_d_m>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_g> g)] | [(g <any_Cx_sh_d_g>)]) sil))
Running scan for frate = 105
Considering guard z with value 1 for kl ...
Considering guard zh with value 1 for kl ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard zh with value 2.4000000000000004 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 105 public <climbed> = (((sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_kl> zh)] | [(zh <any_Cx_zh_p_z_kl>)]) (kl | ((<any_Cx_zh_p_z_kl> zh) | (zh <any_Cx_zh_p_z_kl>)))) ((([(<any_Vx_zh_zh_ay_noSlide> zh)] | [(zh <any_Vx_zh_zh_ay_noSlide>)]) ([(<any_Cx_zh_zh_m_kl> zh)] | [(zh <any_Cx_zh_zh_m_kl>)])) (ay | ((<any_Vx_zh_zh_ay_noSlide> zh) | (zh <any_Vx_zh_zh_ay_noSlide>)))) (([(<any_Cx_sh_zh_m> sh)] | [(sh <any_Cx_sh_zh_m>)]) (m | ((<any_Cx_sh_zh_m_d> sh) | (sh <any_Cx_sh_zh_m_d>)))) (([(<any_Cx_sh_sh_d_m> sh)] | [(sh <any_Cx_sh_sh_d_m>)]) (d | ((<any_Cx_sh_sh_d_m> sh) | (sh <any_Cx_sh_sh_d_m>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_v> v)] | [(v <any_Cx_sh_d_v>)]) sil))
Running scan for frate = 91
Considering guard zh with value 1 for kl ...
Considering guard z with value 1 for kl ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard zh with value 2.4000000000000004 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 91 public <climbed> = (((sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_kl> zh)] | [(zh <any_Cx_zh_p_z_kl>)]) (kl | ((<any_Cx_zh_p_z_kl> zh) | (zh <any_Cx_zh_p_z_kl>)))) ((([(<any_Vx_zh_zh_ay_noSlide> zh)] | [(zh <any_Vx_zh_zh_ay_noSlide>)]) ([(<any_Cx_zh_zh_m_kl> zh)] | [(zh <any_Cx_zh_zh_m_kl>)])) (ay | ((<any_Vx_zh_zh_ay_noSlide> zh) | (zh <any_Vx_zh_zh_ay_noSlide>)))) (([(<any_Cx_sh_zh_m> sh)] | [(sh <any_Cx_sh_zh_m>)]) (m | ((<any_Cx_sh_zh_m_d> sh) | (sh <any_Cx_sh_zh_m_d>)))) (([(<any_Cx_sh_sh_d_m> sh)] | [(sh <any_Cx_sh_sh_d_m>)]) (d | ((<any_Cx_sh_sh_d_m> sh) | (sh <any_Cx_sh_sh_d_m>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_g> g)] | [(g <any_Cx_sh_d_g>)]) sil))
Running scan for frate = 80
Considering guard zh with value 1 for kl ...
Considering guard z with value 1 for kl ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard zh with value 2.4000000000000004 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 80 public <climbed> = (((sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_kl> zh)] | [(zh <any_Cx_zh_p_z_kl>)]) (kl | ((<any_Cx_zh_p_z_kl> zh) | (zh <any_Cx_zh_p_z_kl>)))) ((([(<any_Vx_zh_zh_ay_noSlide> zh)] | [(zh <any_Vx_zh_zh_ay_noSlide>)]) ([(<any_Cx_zh_zh_m_kl> zh)] | [(zh <any_Cx_zh_zh_m_kl>)])) (ay | ((<any_Vx_zh_zh_ay_noSlide> zh) | (zh <any_Vx_zh_zh_ay_noSlide>)))) (([(<any_Cx_sh_zh_m> sh)] | [(sh <any_Cx_sh_zh_m>)]) (m | ((<any_Cx_sh_zh_m_d> sh) | (sh <any_Cx_sh_zh_m_d>)))) (([(<any_Cx_sh_sh_d_m> sh)] | [(sh <any_Cx_sh_sh_d_m>)]) (d | ((<any_Cx_sh_sh_d_m> sh) | (sh <any_Cx_sh_sh_d_m>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_b> b)] | [(b <any_Cx_sh_d_b>)]) sil))
Running scan for frate = 72
Considering guard z with value 1 for kl ...
Considering guard zh with value 1 for kl ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard zh with value 2.4000000000000004 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 72 public <climbed> = (((sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_z_p_z_kl> z)] | [(z <any_Cx_z_p_z_kl>)]) (kl | ((<any_Cx_z_p_z_kl> z) | (z <any_Cx_z_p_z_kl>)))) ((([(<any_Vx_zh_z_ay_noSlide> zh)] | [(zh <any_Vx_zh_z_ay_noSlide>)]) ([(<any_Cx_zh_z_m_kl> zh)] | [(zh <any_Cx_zh_z_m_kl>)])) (ay | ((<any_Vx_zh_z_ay_noSlide> zh) | (zh <any_Vx_zh_z_ay_noSlide>)))) (([(<any_Cx_sh_zh_m> sh)] | [(sh <any_Cx_sh_zh_m>)]) (m | ((<any_Cx_sh_zh_m_d> sh) | (sh <any_Cx_sh_zh_m_d>)))) (([(<any_Cx_sh_sh_d_m> sh)] | [(sh <any_Cx_sh_sh_d_m>)]) (d | ((<any_Cx_sh_sh_d_m> sh) | (sh <any_Cx_sh_sh_d_m>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_g> g)] | [(g <any_Cx_sh_d_g>)]) sil))
Considering guard n with value 3 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard y with value 7.199999999999999 for l ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 125 public <climbed> = (((sil [((t <any_Cx_k_t_b>) | (<any_Cx_k_t_b> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil b (sil [((t <any_Cx_k_t_b>) | (<any_Cx_k_t_b> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_n_b_t_k_l> n)] | [(n <any_Cx_n_b_t_k_l>)]) (k | ((<any_Cx_n_b_t_k_l> n) | (n <any_Cx_n_b_t_k_l>)))) (([(<any_Cx_y_n_l_k> y)] | [(y <any_Cx_y_n_l_k>)]) (l | ((<any_Cx_y_n_l> y) | (y <any_Cx_y_n_l>)))) ((([(<any_Vx_sh_y_ay_noSlide> sh)] | [(sh <any_Vx_sh_y_ay_noSlide>)]) ([(<any_Cx_sh_y_m_l> sh)] | [(sh <any_Cx_sh_y_m_l>)])) (ay | ((<any_Vx_sh_y_ay_noSlide> sh) | (sh <any_Vx_sh_y_ay_noSlide>)))) (([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)]) (m | ((<any_Cx_sh_sh_m_d> sh) | (sh <any_Cx_sh_sh_m_d>)))) (([(<any_Cx_sh_sh_d_m> sh)] | [(sh <any_Cx_sh_sh_d_m>)]) (d | ((<any_Cx_sh_sh_d_m> sh) | (sh <any_Cx_sh_sh_d_m>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_g> g)] | [(g <any_Cx_sh_d_g>)]) sil))
Running scan for frate = 105
Considering guard n with value 3 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard y with value 7.199999999999999 for l ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 105 public <climbed> = (((sil [((ch <any_Cx_k_ch_b>) | (<any_Cx_k_ch_b> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil b (sil [((ch <any_Cx_k_ch_b>) | (<any_Cx_k_ch_b> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_n_b_ch_k_l> n)] | [(n <any_Cx_n_b_ch_k_l>)]) (k | ((<any_Cx_n_b_ch_k_l> n) | (n <any_Cx_n_b_ch_k_l>)))) (([(<any_Cx_y_n_l_k> y)] | [(y <any_Cx_y_n_l_k>)]) (l | ((<any_Cx_y_n_l> y) | (y <any_Cx_y_n_l>)))) ((([(<any_Vx_sh_y_ay_noSlide> sh)] | [(sh <any_Vx_sh_y_ay_noSlide>)]) ([(<any_Cx_sh_y_m_l> sh)] | [(sh <any_Cx_sh_y_m_l>)])) (ay | ((<any_Vx_sh_y_ay_noSlide> sh) | (sh <any_Vx_sh_y_ay_noSlide>)))) (([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)]) (m | ((<any_Cx_sh_sh_m_d> sh) | (sh <any_Cx_sh_sh_m_d>)))) (([(<any_Cx_sh_sh_d_m> sh)] | [(sh <any_Cx_sh_sh_d_m>)]) (d | ((<any_Cx_sh_sh_d_m> sh) | (sh <any_Cx_sh_sh_d_m>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_g> g)] | [(g <any_Cx_sh_d_g>)]) sil))
Running scan for frate = 91
Considering guard n with value 3 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard y with value 7.199999999999999 for l ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 91 public <climbed> = (((sil [((p <any_Cx_k_p_b>) | (<any_Cx_k_p_b> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]) | (sil b (sil [((p <any_Cx_k_p_b>) | (<any_Cx_k_p_b> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]))) (([(<any_Cx_n_b_p_k_l> n)] | [(n <any_Cx_n_b_p_k_l>)]) (k | ((<any_Cx_n_b_p_k_l> n) | (n <any_Cx_n_b_p_k_l>)))) (([(<any_Cx_y_n_l_k> y)] | [(y <any_Cx_y_n_l_k>)]) (l | ((<any_Cx_y_n_l> y) | (y <any_Cx_y_n_l>)))) ((([(<any_Vx_sh_y_ay_noSlide> sh)] | [(sh <any_Vx_sh_y_ay_noSlide>)]) ([(<any_Cx_sh_y_m_l> sh)] | [(sh <any_Cx_sh_y_m_l>)])) (ay | ((<any_Vx_sh_y_ay_noSlide> sh) | (sh <any_Vx_sh_y_ay_noSlide>)))) (([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)]) (m | ((<any_Cx_sh_sh_m_d> sh) | (sh <any_Cx_sh_sh_m_d>)))) (([(<any_Cx_sh_sh_d_m> sh)] | [(sh <any_Cx_sh_sh_d_m>)]) (d | ((<any_Cx_sh_sh_d_m> sh) | (sh <any_Cx_sh_sh_d_m>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_b> b)] | [(b <any_Cx_sh_d_b>)]) sil))
Running scan for frate = 80
Considering guard n with value 3 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard y with value 7.199999999999999 for l ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 80 public <climbed> = (((sil [((ch <any_Cx_k_ch_b>) | (<any_Cx_k_ch_b> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil b (sil [((ch <any_Cx_k_ch_b>) | (<any_Cx_k_ch_b> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_n_b_ch_k_l> n)] | [(n <any_Cx_n_b_ch_k_l>)]) (k | ((<any_Cx_n_b_ch_k_l> n) | (n <any_Cx_n_b_ch_k_l>)))) (([(<any_Cx_y_n_l_k> y)] | [(y <any_Cx_y_n_l_k>)]) (l | ((<any_Cx_y_n_l> y) | (y <any_Cx_y_n_l>)))) ((([(<any_Vx_sh_y_ay_noSlide> sh)] | [(sh <any_Vx_sh_y_ay_noSlide>)]) ([(<any_Cx_sh_y_m_l> sh)] | [(sh <any_Cx_sh_y_m_l>)])) (ay | ((<any_Vx_sh_y_ay_noSlide> sh) | (sh <any_Vx_sh_y_ay_noSlide>)))) (([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)]) (m | ((<any_Cx_sh_sh_m_d> sh) | (sh <any_Cx_sh_sh_m_d>)))) (([(<any_Cx_sh_sh_d_m> sh)] | [(sh <any_Cx_sh_sh_d_m>)]) (d | ((<any_Cx_sh_sh_d_m> sh) | (sh <any_Cx_sh_sh_d_m>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_v> v)] | [(v <any_Cx_sh_d_v>)]) sil))
Running scan for frate = 72
Considering guard n with value 3 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard y with value 7.199999999999999 for l ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 72 public <climbed> = (((sil [((p <any_Cx_k_p_b>) | (<any_Cx_k_p_b> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]) | (sil b (sil [((p <any_Cx_k_p_b>) | (<any_Cx_k_p_b> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]))) (([(<any_Cx_n_b_p_k_l> n)] | [(n <any_Cx_n_b_p_k_l>)]) (k | ((<any_Cx_n_b_p_k_l> n) | (n <any_Cx_n_b_p_k_l>)))) (([(<any_Cx_y_n_l_k> y)] | [(y <any_Cx_y_n_l_k>)]) (l | ((<any_Cx_y_n_l> y) | (y <any_Cx_y_n_l>)))) ((([(<any_Vx_sh_y_ay_noSlide> sh)] | [(sh <any_Vx_sh_y_ay_noSlide>)]) ([(<any_Cx_sh_y_m_l> sh)] | [(sh <any_Cx_sh_y_m_l>)])) (ay | ((<any_Vx_sh_y_ay_noSlide> sh) | (sh <any_Vx_sh_y_ay_noSlide>)))) (([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)]) (m | ((<any_Cx_sh_sh_m_d> sh) | (sh <any_Cx_sh_sh_m_d>)))) (([(<any_Cx_sh_sh_d_m> sh)] | [(sh <any_Cx_sh_sh_d_m>)]) (d | ((<any_Cx_sh_sh_d_m> sh) | (sh <any_Cx_sh_sh_d_m>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_b> b)] | [(b <any_Cx_sh_d_b>)]) sil))

results =
{72 [{sil 0 10} {kl 11 26} {ay 27 45} {m 46 55} {d 56 69} {sil 70 87}]}
{80 [{sil 0 12} {kl 13 29} {ay 30 50} {m 51 61} {d 62 77} {sil 78 94}]}
{91 [{sil 0 14} {kl 15 33} {ay 34 57} {m 58 73} {d 74 93} {sil 94 137}]}
{105 [{sil 0 18} {kl 19 38} {ay 39 66} {m 67 84} {d 85 108} {sil 109 164}]}
{125 [{sil 3 23} {kl 24 46} {ay 47 79} {m 80 101} {d 102 130} {sil 131 196}]}

normalised results =
{72 [{sil 0 10} {kl 15 36} {ay 38 63} {m 64 76} {d 78 96} {sil 97 121}]}
{80 [{sil 0 12} {kl 16 36} {ay 38 63} {m 64 76} {d 78 96} {sil 98 118}]}
{91 [{sil 0 14} {kl 16 36} {ay 37 63} {m 64 80} {d 81 102} {sil 103 151}]}
{105 [{sil 0 18} {kl 18 36} {ay 37 63} {m 64 80} {d 81 103} {sil 104 156}]}
{125 [{sil 3 23} {kl 19 37} {ay 38 63} {m 64 81} {d 82 104} {sil 105 157}]}

ruleAligned = [{{kl 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ay 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{m 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{d 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {kl 15 36} {ay 38 63} {m 64 76} {d 78 96} {sil 97 97}]}
{80 [{sil 0 0} {kl 16 36} {ay 38 63} {m 64 76} {d 78 96} {sil 98 98}]}
{91 [{sil 0 0} {kl 16 36} {ay 37 63} {m 64 80} {d 81 102} {sil 103 103}]}
{105 [{sil 0 0} {kl 18 36} {ay 37 63} {m 64 80} {d 81 103} {sil 104 104}]}
{125 [{sil 3 3} {kl 19 37} {ay 38 63} {m 64 81} {d 82 104} {sil 105 105}]}

timeAligned = [{{kl 16 36} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ay 38 63} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{m 64 80} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{d 81 102} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 36
i, iTime, newITime, timeStartFrom = 2 1 2 63
i, iTime, newITime, timeStartFrom = 3 2 3 76
combinedVerdict    = [{kl 0} {ay 0} {m 0} {d 0}]
ruleAlignedVerdict = [{kl 0} {ay 0} {m 0} {d 0}]

score->
+1 for kl
+1 for ay
+1 for m
+1 for d
score<-: 9

results =
{72 [{sil 0 10} {k 11 21} {l 22 25} {ay 26 45} {m 46 55} {d 56 69} {sil 70 87}]}
{80 [{sil 0 12} {k 13 24} {l 25 28} {ay 29 50} {m 51 61} {d 62 77} {sil 78 94}]}
{91 [{sil 0 14} {k 15 27} {l 28 32} {ay 33 57} {m 58 73} {d 74 93} {sil 94 137}]}
{105 [{sil 0 18} {k 19 32} {l 33 37} {ay 38 66} {m 67 84} {d 85 108} {sil 109 164}]}
{125 [{sil 3 22} {k 23 39} {l 40 46} {ay 47 79} {m 80 101} {d 102 130} {sil 131 196}]}

normalised results =
{72 [{sil 0 10} {k 15 29} {l 31 35} {ay 36 63} {m 64 76} {d 78 96} {sil 97 121}]}
{80 [{sil 0 12} {k 16 30} {l 31 35} {ay 36 63} {m 64 76} {d 78 96} {sil 98 118}]}
{91 [{sil 0 14} {k 16 30} {l 31 35} {ay 36 63} {m 64 80} {d 81 102} {sil 103 151}]}
{105 [{sil 0 18} {k 18 30} {l 31 35} {ay 36 63} {m 64 80} {d 81 103} {sil 104 156}]}
{125 [{sil 3 22} {k 18 31} {l 32 37} {ay 38 63} {m 64 81} {d 82 104} {sil 105 157}]}

ruleAligned = [{{k 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{l 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{ay 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{m 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{d 0} [{0 5} {1 5} {2 5} {3 5} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {k 15 29} {l 31 35} {ay 36 63} {m 64 76} {d 78 96} {sil 97 97}]}
{80 [{sil 0 0} {k 16 30} {l 31 35} {ay 36 63} {m 64 76} {d 78 96} {sil 98 98}]}
{91 [{sil 0 0} {k 16 30} {l 31 35} {ay 36 63} {m 64 80} {d 81 102} {sil 103 103}]}
{105 [{sil 0 0} {k 18 30} {l 31 35} {ay 36 63} {m 64 80} {d 81 103} {sil 104 104}]}
{125 [{sil 3 3} {k 18 31} {l 32 37} {ay 38 63} {m 64 81} {d 82 104} {sil 105 105}]}

timeAligned = [{{k 16 30} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{l 31 35} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{ay 36 63} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{m 64 80} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{d 81 102} [{0 5} {1 5} {2 5} {3 5} {4 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 29
i, iTime, newITime, timeStartFrom = 2 1 2 35
i, iTime, newITime, timeStartFrom = 3 2 3 63
i, iTime, newITime, timeStartFrom = 4 3 4 76
combinedVerdict    = [{k 0} {l 0} {ay 0} {m 0} {d 0}]
ruleAlignedVerdict = [{k 0} {l 0} {ay 0} {m 0} {d 0}]

score->
+1 for k
+1 for l
+1 for ay
+1 for m
+1 for d
score<-: 10
testPronounce k good l good ay good m good d good
publish->
phonsToAlphas = [{[k] c} {[l] l} {[ay] i} {[m] mbe} {[d] d}]
getVerdict<-:new {c [k] 0}
getVerdict<-:new {l [l] 0}
getVerdict<-:new {i [ay] 0}
getVerdict<-:new {mbe [m] 0}
getVerdict<-:new {d [d] 0}
lettersVerdicts = [{c [k] 0} {l [l] 0} {i [ay] 0} {mbe [m] 0} {d [d] 0}]
publish<-
{
  "results": [
    {
      "letters": "c",
      "phonemes": "k",
      "verdict": "good"
    },
    {
      "letters": "l",
      "phonemes": "l",
      "verdict": "good"
    },
    {
      "letters": "i",
      "phonemes": "ɑɪ",
      "verdict": "good"
    },
    {
      "letters": "mbe",
      "phonemes": "m",
      "verdict": "good"
    },
    {
      "letters": "d",
      "phonemes": "d",
      "verdict": "good"
    }
  ],
  "err": null
}
