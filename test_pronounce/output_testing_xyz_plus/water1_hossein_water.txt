
 length of audio =  2.090313



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.16 1.78 1.94

 start3, duration3, end3 =  0.92 0.48 1.4

 Initial start, duration, end =  0 1.94 1.94

 Cut at: start, duration =  0 2.070313     guard_end =  2.070313 

Running scan for frate = 125
Considering guard sh with value 0.8 for w ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 4 for ao ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 125 public <water> = (((sil [((d <any_Cx_w_d_p>) | (<any_Cx_w_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil p (sil [((d <any_Cx_w_d_p>) | (<any_Cx_w_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_sh_p_d_w> sh)] | [(sh <any_Cx_sh_p_d_w>)]) (w | v | ((<any_Cx_sh_p_d_w> sh) | (sh <any_Cx_sh_p_d_w>)))) ((([(<any_Vx_zh_sh_ao_noSlide> zh)] | [(zh <any_Vx_zh_sh_ao_noSlide>)]) ([(<any_Cx_zh_sh_t_w> zh)] | [(zh <any_Cx_zh_sh_t_w>)])) (ao | ((<any_Vx_zh_sh_ao_noSlide> zh) | (zh <any_Vx_zh_sh_ao_noSlide>)))) (([(<any_Cx_zh_zh_t> zh)] | [(zh <any_Cx_zh_zh_t>)]) (t | ((<any_Cx_zh_zh_t_axr> zh) | (zh <any_Cx_zh_zh_t_axr>)))) (([(<any_Cx_zh_zh_axr_t> zh)] | [(zh <any_Cx_zh_zh_axr_t>)]) (axr | ((<any_Cx_zh_zh_axr_t> zh) | (zh <any_Cx_zh_zh_axr_t>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_f> f)] | [(f <any_Cx_zh_axr_f>)]) sil))
Running scan for frate = 105
Considering guard sh with value 0.8 for w ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 4 for ao ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 105 public <water> = (((sil [((m <any_Cx_w_m_p>) | (<any_Cx_w_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]) | (sil p (sil [((m <any_Cx_w_m_p>) | (<any_Cx_w_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]))) (([(<any_Cx_sh_p_m_w> sh)] | [(sh <any_Cx_sh_p_m_w>)]) (w | v | ((<any_Cx_sh_p_m_w> sh) | (sh <any_Cx_sh_p_m_w>)))) ((([(<any_Vx_zh_sh_ao_noSlide> zh)] | [(zh <any_Vx_zh_sh_ao_noSlide>)]) ([(<any_Cx_zh_sh_t_w> zh)] | [(zh <any_Cx_zh_sh_t_w>)])) (ao | ((<any_Vx_zh_sh_ao_noSlide> zh) | (zh <any_Vx_zh_sh_ao_noSlide>)))) (([(<any_Cx_zh_zh_t> zh)] | [(zh <any_Cx_zh_zh_t>)]) (t | ((<any_Cx_zh_zh_t_axr> zh) | (zh <any_Cx_zh_zh_t_axr>)))) (([(<any_Cx_zh_zh_axr_t> zh)] | [(zh <any_Cx_zh_zh_axr_t>)]) (axr | ((<any_Cx_zh_zh_axr_t> zh) | (zh <any_Cx_zh_zh_axr_t>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_hh> hh)] | [(hh <any_Cx_zh_axr_hh>)]) sil))
Running scan for frate = 91
Considering guard sh with value 0.8 for w ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 4 for ao ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 91 public <water> = (((sil [((r <any_Cx_w_r_p>) | (<any_Cx_w_r_p> r))] [((r <any_vowel_noSlide>) | (<any_vowel_noSlide> r))]) | (sil p (sil [((r <any_Cx_w_r_p>) | (<any_Cx_w_r_p> r))] [((r <any_vowel_noSlide>) | (<any_vowel_noSlide> r))]))) (([(<any_Cx_sh_p_r_w> sh)] | [(sh <any_Cx_sh_p_r_w>)]) (w | v | ((<any_Cx_sh_p_r_w> sh) | (sh <any_Cx_sh_p_r_w>)))) ((([(<any_Vx_zh_sh_ao_noSlide> zh)] | [(zh <any_Vx_zh_sh_ao_noSlide>)]) ([(<any_Cx_zh_sh_t_w> zh)] | [(zh <any_Cx_zh_sh_t_w>)])) (ao | ((<any_Vx_zh_sh_ao_noSlide> zh) | (zh <any_Vx_zh_sh_ao_noSlide>)))) (([(<any_Cx_zh_zh_t> zh)] | [(zh <any_Cx_zh_zh_t>)]) (t | ((<any_Cx_zh_zh_t_axr> zh) | (zh <any_Cx_zh_zh_t_axr>)))) (([(<any_Cx_zh_zh_axr_t> zh)] | [(zh <any_Cx_zh_zh_axr_t>)]) (axr | ((<any_Cx_zh_zh_axr_t> zh) | (zh <any_Cx_zh_zh_axr_t>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_p> p)] | [(p <any_Cx_zh_axr_p>)]) sil))
Running scan for frate = 80
Considering guard sh with value 0.8 for w ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 4 for ao ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 80 public <water> = (((sil [((d <any_Cx_w_d_p>) | (<any_Cx_w_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil p (sil [((d <any_Cx_w_d_p>) | (<any_Cx_w_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_sh_p_d_w> sh)] | [(sh <any_Cx_sh_p_d_w>)]) (w | v | ((<any_Cx_sh_p_d_w> sh) | (sh <any_Cx_sh_p_d_w>)))) ((([(<any_Vx_zh_sh_ao_noSlide> zh)] | [(zh <any_Vx_zh_sh_ao_noSlide>)]) ([(<any_Cx_zh_sh_t_w> zh)] | [(zh <any_Cx_zh_sh_t_w>)])) (ao | ((<any_Vx_zh_sh_ao_noSlide> zh) | (zh <any_Vx_zh_sh_ao_noSlide>)))) (([(<any_Cx_zh_zh_t> zh)] | [(zh <any_Cx_zh_zh_t>)]) (t | ((<any_Cx_zh_zh_t_axr> zh) | (zh <any_Cx_zh_zh_t_axr>)))) (([(<any_Cx_zh_zh_axr_t> zh)] | [(zh <any_Cx_zh_zh_axr_t>)]) (axr | ((<any_Cx_zh_zh_axr_t> zh) | (zh <any_Cx_zh_zh_axr_t>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_p> p)] | [(p <any_Cx_zh_axr_p>)]) sil))
Running scan for frate = 72
Considering guard sh with value 0.8 for w ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 4 for ao ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 72 public <water> = (((sil [((m <any_Cx_w_m_p>) | (<any_Cx_w_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]) | (sil p (sil [((m <any_Cx_w_m_p>) | (<any_Cx_w_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]))) (([(<any_Cx_sh_p_m_w> sh)] | [(sh <any_Cx_sh_p_m_w>)]) (w | v | ((<any_Cx_sh_p_m_w> sh) | (sh <any_Cx_sh_p_m_w>)))) ((([(<any_Vx_zh_sh_ao_noSlide> zh)] | [(zh <any_Vx_zh_sh_ao_noSlide>)]) ([(<any_Cx_zh_sh_t_w> zh)] | [(zh <any_Cx_zh_sh_t_w>)])) (ao | ((<any_Vx_zh_sh_ao_noSlide> zh) | (zh <any_Vx_zh_sh_ao_noSlide>)))) (([(<any_Cx_zh_zh_t> zh)] | [(zh <any_Cx_zh_zh_t>)]) (t | ((<any_Cx_zh_zh_t_axr> zh) | (zh <any_Cx_zh_zh_t_axr>)))) (([(<any_Cx_zh_zh_axr_t> zh)] | [(zh <any_Cx_zh_zh_axr_t>)]) (axr | ((<any_Cx_zh_zh_axr_t> zh) | (zh <any_Cx_zh_zh_axr_t>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_m> m)] | [(m <any_Cx_zh_axr_m>)]) sil))

results =
{72 [{sil 121 123} {v 124 128} {ao 129 133} {t 134 138} {axr 139 142} {sil 143 148}]}
{80 [{sil 134 136} {v 137 141} {ao 142 144} {t 145 147} {axr 148 156} {sil 157 165}]}
{91 [{sil 0 33} {p 34 66} {sil 67 69} {v 70 78} {ao 79 84} {t 85 96} {axr 97 109} {p 110 112} {iy 113 150} {g 151 171} {p 172 177} {sil 178 187}]}
{105 [{sil 0 7} {p 8 16} {sil 17 36} {m 37 40} {v 41 54} {m 55 58} {ae 59 75} {v 76 87} {aa 88 106} {zh 107 110} {t 111 114} {axr 115 128} {hh 129 131} {iy 132 176} {hh 177 181} {g 182 204} {sil 205 216}]}
{125 [{sil 3 9} {p 10 20} {sil 21 44} {d 45 49} {v 50 72} {ae 73 90} {d 91 99} {v 100 105} {ae 106 127} {zh 128 131} {t 132 136} {axr 137 155} {f 156 158} {iy 159 207} {g 208 244} {f 245 247} {sil 248 258}]}

normalised results =
{72 [{sil 121 123} {v 172 178} {ao 179 185} {t 186 192} {axr 193 197} {sil 199 206}]}
{80 [{sil 134 136} {v 171 176} {ao 178 178} {t 181 181} {axr 185 195} {sil 196 206}]}
{91 [{sil 0 33} {p 37 73} {sil 74 74} {v 77 86} {ao 87 92} {t 93 105} {axr 107 120} {p 121 121} {iy 124 165} {g 166 188} {p 189 195} {sil 196 205}]}
{105 [{sil 0 7} {p 8 15} {sil 16 34} {m 35 38} {v 39 51} {m 52 55} {ae 56 71} {v 72 83} {aa 84 101} {zh 102 105} {t 106 109} {axr 110 122} {hh 123 123} {iy 126 168} {hh 169 172} {g 173 194} {sil 195 206}]}
{125 [{sil 3 9} {p 8 16} {sil 17 35} {d 36 39} {v 40 58} {ae 58 72} {d 73 79} {v 80 84} {ae 85 102} {zh 102 105} {t 106 109} {axr 110 124} {f 125 125} {iy 127 166} {g 166 195} {f 196 196} {sil 198 206}]}

ruleAligned = [{{w 2} []} {{v 3} [{0 1} {1 1} {2 3} {3 7} {4 7}]} {{ao 2} [{0 2}]} {{t 2} [{0 3} {2 5}]} {{axr 0} [{0 4} {1 4} {2 6} {3 11} {4 11}]} {{g 3} [{2 9} {3 15} {4 14}]}]

results (after rule-alignment) =
{72 [{sil 121 121} {v 172 178} {ao 179 185} {t 186 192} {axr 193 197} {sil 199 199}]}
{80 [{sil 134 134} {v 171 176} {ao 178 178} {t 181 181} {axr 185 195} {sil 196 196}]}
{91 [{sil 0 0} {p 37 37} {sil 74 74} {v 77 86} {ao 87 87} {t 93 105} {axr 107 120} {p 121 121} {iy 124 124} {g 166 188} {p 189 195} {sil 196 196}]}
{105 [{sil 0 0} {p 8 8} {sil 16 16} {m 35 35} {v 39 51} {m 52 52} {ae 56 71} {v 72 83} {aa 84 101} {zh 102 102} {t 106 106} {axr 110 122} {hh 123 123} {iy 126 126} {hh 169 169} {g 173 194} {sil 195 195}]}
{125 [{sil 3 3} {p 8 8} {sil 17 17} {d 36 36} {v 40 58} {ae 58 72} {d 73 79} {v 80 84} {ae 85 102} {zh 102 102} {t 106 106} {axr 110 124} {f 125 125} {iy 127 127} {g 166 195} {f 196 196} {sil 198 198}]}

timeAligned = [{{v 80 83} [{2 3} {3 7} {4 7}]} {{axr 110 120} [{2 6} {3 11} {4 11}]} {{g 173 188} [{2 9} {3 15} {4 14}]}]

i, iTime, newITime, timeStartFrom = 0 0 -1 0
i, iTime, newITime, timeStartFrom = 1 0 0 0
i, iTime, newITime, timeStartFrom = 2 0 -1 83
i, iTime, newITime, timeStartFrom = 3 0 -1 83
i, iTime, newITime, timeStartFrom = 4 0 1 83
i, iTime, newITime, timeStartFrom = 5 1 2 120
combinedVerdict    = [{w 2} {v 3} {ao 2} {t 2} {axr 0} {g 3}]
ruleAlignedVerdict = [{w 2} {v 3} {ao 2} {t 2} {axr 0} {g 3}]

score->
-1 for w
-1 for v
-1 for ao
-1 for t
+1 for axr
-1 for g
score<-: -4
bestResult = {-4 [{w 2} {v 3} {ao 2} {t 2} {axr 0} {g 3}] [w ao t axr]}
testPronounce w missing v surprise ao missing t missing axr good g surprise
publish->
phonsToAlphas = [{[w] w} {[ao] a} {[t] t} {[axr] er}]
getVerdict<-:new {w [w] 2}
getVerdict<-:new {a [ao] 2}
getVerdict<-:new {t [t] 2}
getVerdict<-:new {er [axr] 0}
lettersVerdicts = [{w [w] 2} {v [v] 3} {a [ao] 2} {t [t] 2} {er [axr] 0} {g [g] 3}]
publish<-
Total: 238.88853ms
{
  "results": [
    {
      "letters": "w",
      "phonemes": "w",
      "verdict": "missing"
    },
    {
      "letters": "v",
      "phonemes": "v",
      "verdict": "surprise"
    },
    {
      "letters": "a",
      "phonemes": "ɔ",
      "verdict": "missing"
    },
    {
      "letters": "t",
      "phonemes": "t",
      "verdict": "missing"
    },
    {
      "letters": "er",
      "phonemes": "əɹ",
      "verdict": "good"
    },
    {
      "letters": "g",
      "phonemes": "g",
      "verdict": "surprise"
    }
  ],
  "err": null
}
