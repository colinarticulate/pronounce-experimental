
 length of audio =  2.012062



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.64 0.94 1.58

 start3, duration3, end3 =  0.66 0.4 1.06

 Initial start, duration, end =  0.54 1.04 1.58

 Cut at: start, duration =  0.54 1.4520619999999997     guard_end =  1.9920619999999998 

Running scan for frate = 125
Running scan for frate = 125
Considering guard n with value 3 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard zh with value 1 for kl ...
Considering guard z with value 1 for kl ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard y with value 7.199999999999999 for l ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard zh with value 2.4000000000000004 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 1.4 for m ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 1.4 for m ...
candidateGuards = map[ch:true]
Picking guard, ch

frate, target rule = 125 public <climb> = (((sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_kl> zh)] | [(zh <any_Cx_zh_p_z_kl>)]) (kl | ((<any_Cx_zh_p_z_kl> zh) | (zh <any_Cx_zh_p_z_kl>)))) ((([(<any_Vx_zh_zh_ay_noSlide> zh)] | [(zh <any_Vx_zh_zh_ay_noSlide>)]) ([(<any_Cx_zh_zh_m_kl> zh)] | [(zh <any_Cx_zh_zh_m_kl>)])) (ay | ((<any_Vx_zh_zh_ay_noSlide> zh) | (zh <any_Vx_zh_zh_ay_noSlide>)))) (([(<any_Cx_ch_zh_m> ch)] | [(ch <any_Cx_ch_zh_m>)]) (m | ((<any_Cx_ch_zh_m> ch) | (ch <any_Cx_ch_zh_m>)))) (([(<any_vowel_noSlide> l)] | [(l <any_vowel_noSlide>)]) ([(<any_Cx_ch_m_l> l)] | [(l <any_Cx_ch_m_l>)]) sil))
frate, target rule = 125 public <climb> = (((sil [((d <any_Cx_k_d_b>) | (<any_Cx_k_d_b> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil b (sil [((d <any_Cx_k_d_b>) | (<any_Cx_k_d_b> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_n_b_d_k_l> n)] | [(n <any_Cx_n_b_d_k_l>)]) (k | d | ((<any_Cx_n_b_d_k_l> n) | (n <any_Cx_n_b_d_k_l>)))) (([(<any_Cx_y_n_l_k> y)] | [(y <any_Cx_y_n_l_k>)]) (l | ((<any_Cx_y_n_l> y) | (y <any_Cx_y_n_l>)))) ((([(<any_Vx_sh_y_ay_noSlide> sh)] | [(sh <any_Vx_sh_y_ay_noSlide>)]) ([(<any_Cx_sh_y_m_l> sh)] | [(sh <any_Cx_sh_y_m_l>)])) (ay | ((<any_Vx_sh_y_ay_noSlide> sh) | (sh <any_Vx_sh_y_ay_noSlide>)))) (([(<any_Cx_ch_sh_m> ch)] | [(ch <any_Cx_ch_sh_m>)]) (m | ((<any_Cx_ch_sh_m> ch) | (ch <any_Cx_ch_sh_m>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_ch_m_b> b)] | [(b <any_Cx_ch_m_b>)]) sil))
Running scan for frate = 105
Running scan for frate = 105
Considering guard zh with value 1 for kl ...
Considering guard z with value 1 for kl ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard n with value 3 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard zh with value 2.4000000000000004 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard y with value 7.199999999999999 for l ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard ch with value 1.4 for m ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 105 public <climb> = (((sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_kl> zh)] | [(zh <any_Cx_zh_p_z_kl>)]) (kl | ((<any_Cx_zh_p_z_kl> zh) | (zh <any_Cx_zh_p_z_kl>)))) ((([(<any_Vx_zh_zh_ay_noSlide> zh)] | [(zh <any_Vx_zh_zh_ay_noSlide>)]) ([(<any_Cx_zh_zh_m_kl> zh)] | [(zh <any_Cx_zh_zh_m_kl>)])) (ay | ((<any_Vx_zh_zh_ay_noSlide> zh) | (zh <any_Vx_zh_zh_ay_noSlide>)))) (([(<any_Cx_ch_zh_m> ch)] | [(ch <any_Cx_ch_zh_m>)]) (m | ((<any_Cx_ch_zh_m> ch) | (ch <any_Cx_ch_zh_m>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_ch_m_b> b)] | [(b <any_Cx_ch_m_b>)]) sil))
Considering guard ch with value 1.4 for m ...
candidateGuards = map[ch:true]
Picking guard, ch

Running scan for frate = 91
frate, target rule = 105 public <climb> = (((sil [((ch <any_Cx_k_ch_b>) | (<any_Cx_k_ch_b> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil b (sil [((ch <any_Cx_k_ch_b>) | (<any_Cx_k_ch_b> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_n_b_ch_k_l> n)] | [(n <any_Cx_n_b_ch_k_l>)]) (k | d | ((<any_Cx_n_b_ch_k_l> n) | (n <any_Cx_n_b_ch_k_l>)))) (([(<any_Cx_y_n_l_k> y)] | [(y <any_Cx_y_n_l_k>)]) (l | ((<any_Cx_y_n_l> y) | (y <any_Cx_y_n_l>)))) ((([(<any_Vx_sh_y_ay_noSlide> sh)] | [(sh <any_Vx_sh_y_ay_noSlide>)]) ([(<any_Cx_sh_y_m_l> sh)] | [(sh <any_Cx_sh_y_m_l>)])) (ay | ((<any_Vx_sh_y_ay_noSlide> sh) | (sh <any_Vx_sh_y_ay_noSlide>)))) (([(<any_Cx_ch_sh_m> ch)] | [(ch <any_Cx_ch_sh_m>)]) (m | ((<any_Cx_ch_sh_m> ch) | (ch <any_Cx_ch_sh_m>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_ch_m_thr> thr)] | [(thr <any_Cx_ch_m_thr>)]) sil))
Considering guard z with value 1 for kl ...
Considering guard zh with value 1 for kl ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Running scan for frate = 91
Considering guard zh with value 2.4000000000000004 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 1.4 for m ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard n with value 3 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard y with value 7.199999999999999 for l ...
candidateGuards = map[y:true]
Picking guard, y

frate, target rule = 91 public <climb> = (((sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_z_p_z_kl> z)] | [(z <any_Cx_z_p_z_kl>)]) (kl | ((<any_Cx_z_p_z_kl> z) | (z <any_Cx_z_p_z_kl>)))) ((([(<any_Vx_zh_z_ay_noSlide> zh)] | [(zh <any_Vx_zh_z_ay_noSlide>)]) ([(<any_Cx_zh_z_m_kl> zh)] | [(zh <any_Cx_zh_z_m_kl>)])) (ay | ((<any_Vx_zh_z_ay_noSlide> zh) | (zh <any_Vx_zh_z_ay_noSlide>)))) (([(<any_Cx_ch_zh_m> ch)] | [(ch <any_Cx_ch_zh_m>)]) (m | ((<any_Cx_ch_zh_m> ch) | (ch <any_Cx_ch_zh_m>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_ch_m_n> n)] | [(n <any_Cx_ch_m_n>)]) sil))
Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 80
Considering guard ch with value 1.4 for m ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard z with value 1 for kl ...
Considering guard zh with value 1 for kl ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

frate, target rule = 91 public <climb> = (((sil [((g <any_Cx_k_g_b>) | (<any_Cx_k_g_b> g))] [((g <any_vowel_noSlide>) | (<any_vowel_noSlide> g))]) | (sil b (sil [((g <any_Cx_k_g_b>) | (<any_Cx_k_g_b> g))] [((g <any_vowel_noSlide>) | (<any_vowel_noSlide> g))]))) (([(<any_Cx_n_b_g_k_l> n)] | [(n <any_Cx_n_b_g_k_l>)]) (k | d | ((<any_Cx_n_b_g_k_l> n) | (n <any_Cx_n_b_g_k_l>)))) (([(<any_Cx_y_n_l_k> y)] | [(y <any_Cx_y_n_l_k>)]) (l | ((<any_Cx_y_n_l> y) | (y <any_Cx_y_n_l>)))) ((([(<any_Vx_sh_y_ay_noSlide> sh)] | [(sh <any_Vx_sh_y_ay_noSlide>)]) ([(<any_Cx_sh_y_m_l> sh)] | [(sh <any_Cx_sh_y_m_l>)])) (ay | ((<any_Vx_sh_y_ay_noSlide> sh) | (sh <any_Vx_sh_y_ay_noSlide>)))) (([(<any_Cx_ch_sh_m> ch)] | [(ch <any_Cx_ch_sh_m>)]) (m | ((<any_Cx_ch_sh_m> ch) | (ch <any_Cx_ch_sh_m>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_ch_m_thr> thr)] | [(thr <any_Cx_ch_m_thr>)]) sil))
Considering guard zh with value 2.4000000000000004 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 1.4 for m ...
candidateGuards = map[ch:true]
Picking guard, ch

Running scan for frate = 80
frate, target rule = 80 public <climb> = (((sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_kl> zh)] | [(zh <any_Cx_zh_p_z_kl>)]) (kl | ((<any_Cx_zh_p_z_kl> zh) | (zh <any_Cx_zh_p_z_kl>)))) ((([(<any_Vx_zh_zh_ay_noSlide> zh)] | [(zh <any_Vx_zh_zh_ay_noSlide>)]) ([(<any_Cx_zh_zh_m_kl> zh)] | [(zh <any_Cx_zh_zh_m_kl>)])) (ay | ((<any_Vx_zh_zh_ay_noSlide> zh) | (zh <any_Vx_zh_zh_ay_noSlide>)))) (([(<any_Cx_ch_zh_m> ch)] | [(ch <any_Cx_ch_zh_m>)]) (m | ((<any_Cx_ch_zh_m> ch) | (ch <any_Cx_ch_zh_m>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_ch_m_thr> thr)] | [(thr <any_Cx_ch_m_thr>)]) sil))
Considering guard n with value 3 for k ...
candidateGuards = map[n:true]
Picking guard, n

Running scan for frate = 72
Considering guard y with value 7.199999999999999 for l ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard z with value 1 for kl ...
Considering guard zh with value 1 for kl ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 2.4000000000000004 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 1.4 for m ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 1.4 for m ...
candidateGuards = map[ch:true]
Picking guard, ch

frate, target rule = 80 public <climb> = (((sil [((d <any_Cx_k_d_b>) | (<any_Cx_k_d_b> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil b (sil [((d <any_Cx_k_d_b>) | (<any_Cx_k_d_b> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_n_b_d_k_l> n)] | [(n <any_Cx_n_b_d_k_l>)]) (k | d | ((<any_Cx_n_b_d_k_l> n) | (n <any_Cx_n_b_d_k_l>)))) (([(<any_Cx_y_n_l_k> y)] | [(y <any_Cx_y_n_l_k>)]) (l | ((<any_Cx_y_n_l> y) | (y <any_Cx_y_n_l>)))) ((([(<any_Vx_sh_y_ay_noSlide> sh)] | [(sh <any_Vx_sh_y_ay_noSlide>)]) ([(<any_Cx_sh_y_m_l> sh)] | [(sh <any_Cx_sh_y_m_l>)])) (ay | ((<any_Vx_sh_y_ay_noSlide> sh) | (sh <any_Vx_sh_y_ay_noSlide>)))) (([(<any_Cx_ch_sh_m> ch)] | [(ch <any_Cx_ch_sh_m>)]) (m | ((<any_Cx_ch_sh_m> ch) | (ch <any_Cx_ch_sh_m>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_ch_m_n> n)] | [(n <any_Cx_ch_m_n>)]) sil))
frate, target rule = 72 public <climb> = (((sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_z_p_z_kl> z)] | [(z <any_Cx_z_p_z_kl>)]) (kl | ((<any_Cx_z_p_z_kl> z) | (z <any_Cx_z_p_z_kl>)))) ((([(<any_Vx_zh_z_ay_noSlide> zh)] | [(zh <any_Vx_zh_z_ay_noSlide>)]) ([(<any_Cx_zh_z_m_kl> zh)] | [(zh <any_Cx_zh_z_m_kl>)])) (ay | ((<any_Vx_zh_z_ay_noSlide> zh) | (zh <any_Vx_zh_z_ay_noSlide>)))) (([(<any_Cx_ch_zh_m> ch)] | [(ch <any_Cx_ch_zh_m>)]) (m | ((<any_Cx_ch_zh_m> ch) | (ch <any_Cx_ch_zh_m>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_ch_m_v> v)] | [(v <any_Cx_ch_m_v>)]) sil))
Running scan for frate = 72
Considering guard n with value 3 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard y with value 7.199999999999999 for l ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 1.4 for m ...
candidateGuards = map[ch:true]
Picking guard, ch

frate, target rule = 72 public <climb> = (((sil [((ch <any_Cx_k_ch_b>) | (<any_Cx_k_ch_b> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil b (sil [((ch <any_Cx_k_ch_b>) | (<any_Cx_k_ch_b> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_n_b_ch_k_l> n)] | [(n <any_Cx_n_b_ch_k_l>)]) (k | d | ((<any_Cx_n_b_ch_k_l> n) | (n <any_Cx_n_b_ch_k_l>)))) (([(<any_Cx_y_n_l_k> y)] | [(y <any_Cx_y_n_l_k>)]) (l | ((<any_Cx_y_n_l> y) | (y <any_Cx_y_n_l>)))) ((([(<any_Vx_sh_y_ay_noSlide> sh)] | [(sh <any_Vx_sh_y_ay_noSlide>)]) ([(<any_Cx_sh_y_m_l> sh)] | [(sh <any_Cx_sh_y_m_l>)])) (ay | ((<any_Vx_sh_y_ay_noSlide> sh) | (sh <any_Vx_sh_y_ay_noSlide>)))) (([(<any_Cx_ch_sh_m> ch)] | [(ch <any_Cx_ch_sh_m>)]) (m | ((<any_Cx_ch_sh_m> ch) | (ch <any_Cx_ch_sh_m>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_ch_m_v> v)] | [(v <any_Cx_ch_m_v>)]) sil))

results =
{72 [{sil 0 10} {k 11 21} {l 22 24} {ay 25 46} {m 47 55} {sil 56 76}]}
{80 [{sil 0 12} {k 13 23} {l 24 27} {ay 28 50} {m 51 53} {n 54 60} {v 61 66} {sil 67 83}]}
{91 [{sil 0 14} {k 15 26} {l 27 30} {ay 31 59} {m 60 80} {sil 81 130}]}
{105 [{sil 0 17} {k 18 30} {l 31 35} {ay 36 68} {m 69 92} {sil 93 151}]}
{125 [{sil 3 22} {k 23 37} {l 38 43} {ay 44 86} {m 87 110} {sil 111 181}]}

normalised results =
{72 [{sil 0 10} {k 15 29} {l 31 31} {ay 35 64} {m 65 76} {sil 78 106}]}
{80 [{sil 0 12} {k 16 29} {l 30 34} {ay 35 63} {m 64 64} {n 68 75} {v 76 83} {sil 84 104}]}
{91 [{sil 0 14} {k 16 29} {l 30 33} {ay 34 65} {m 66 88} {sil 89 143}]}
{105 [{sil 0 17} {k 17 29} {l 30 33} {ay 34 65} {m 66 88} {sil 89 144}]}
{125 [{sil 3 22} {k 18 30} {l 30 34} {ay 35 69} {m 70 88} {sil 89 145}]}

ruleAligned = [{{k 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{l 0} [{1 2} {2 2} {3 2} {4 2}]} {{ay 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{m 0} [{0 4} {2 4} {3 4} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {k 15 29} {l 31 31} {ay 35 64} {m 65 76} {sil 78 78}]}
{80 [{sil 0 0} {k 16 29} {l 30 34} {ay 35 63} {m 64 64} {n 68 75} {v 76 83} {sil 84 84}]}
{91 [{sil 0 0} {k 16 29} {l 30 33} {ay 34 65} {m 66 88} {sil 89 89}]}
{105 [{sil 0 0} {k 17 29} {l 30 33} {ay 34 65} {m 66 88} {sil 89 89}]}
{125 [{sil 3 3} {k 18 30} {l 30 34} {ay 35 69} {m 70 88} {sil 89 89}]}

timeAligned = [{{k 16 29} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{l 30 33} [{1 2} {2 2} {3 2} {4 2}]} {{ay 35 65} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{m 66 88} [{0 4} {2 4} {3 4} {4 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 29
i, iTime, newITime, timeStartFrom = 2 1 2 33
i, iTime, newITime, timeStartFrom = 3 2 3 63
combinedVerdict    = [{k 0} {l 0} {ay 0} {m 0}]
ruleAlignedVerdict = [{k 0} {l 0} {ay 0} {m 0}]

score->
+1 for k
+1 for l
+1 for ay
+1 for m
score<-: 9

results =
{72 [{sil 0 12} {kl 13 24} {ay 25 46} {m 47 55} {sil 56 76}]}
{80 [{sil 0 13} {kl 14 26} {ay 27 51} {m 52 60} {sil 61 83}]}
{91 [{sil 0 16} {kl 17 30} {ay 31 59} {m 60 65} {eh 66 71} {n 72 80} {sil 81 130}]}
{105 [{sil 0 19} {kl 20 35} {ay 36 68} {m 69 92} {sil 93 151}]}
{125 [{sil 3 24} {kl 25 43} {ay 44 86} {m 87 110} {sil 111 181}]}

normalised results =
{72 [{sil 0 12} {kl 18 33} {ay 35 64} {m 65 76} {sil 78 106}]}
{80 [{sil 0 13} {kl 18 33} {ay 34 64} {m 65 75} {sil 76 104}]}
{91 [{sil 0 16} {kl 19 33} {ay 34 65} {m 66 71} {eh 73 78} {n 79 88} {sil 89 143}]}
{105 [{sil 0 19} {kl 19 33} {ay 34 65} {m 66 88} {sil 89 144}]}
{125 [{sil 3 24} {kl 20 34} {ay 35 69} {m 70 88} {sil 89 145}]}

ruleAligned = [{{kl 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ay 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{m 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {kl 18 33} {ay 35 64} {m 65 76} {sil 78 78}]}
{80 [{sil 0 0} {kl 18 33} {ay 34 64} {m 65 75} {sil 76 76}]}
{91 [{sil 0 0} {kl 19 33} {ay 34 65} {m 66 71} {eh 73 78} {n 79 88} {sil 89 89}]}
{105 [{sil 0 0} {kl 19 33} {ay 34 65} {m 66 88} {sil 89 89}]}
{125 [{sil 3 3} {kl 20 34} {ay 35 69} {m 70 88} {sil 89 89}]}

timeAligned = [{{kl 19 33} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ay 34 65} [{1 2} {2 2} {3 2} {0 2} {4 2}]} {{m 66 76} [{0 3} {1 3} {2 3} {3 3} {4 3}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 33
i, iTime, newITime, timeStartFrom = 2 1 2 64
combinedVerdict    = [{kl 0} {ay 0} {m 0}]
ruleAlignedVerdict = [{kl 0} {ay 0} {m 0}]

score->
+1 for kl
+1 for ay
+1 for m
score<-: 8
testPronounce k good l good ay good m good
publish->
phonsToAlphas = [{[k] c} {[l] l} {[ay] i} {[m] mb}]
getVerdict<-:new {c [k] 0}
getVerdict<-:new {l [l] 0}
getVerdict<-:new {i [ay] 0}
getVerdict<-:new {mb [m] 0}
lettersVerdicts = [{c [k] 0} {l [l] 0} {i [ay] 0} {mb [m] 0}]
publish<-
Total: 275.353711ms
{
  "results": [
    {
      "letters": "c",
      "phonemes": "k",
      "verdict": "good"
    },
    {
      "letters": "l",
      "phonemes": "l",
      "verdict": "good"
    },
    {
      "letters": "i",
      "phonemes": "ɑɪ",
      "verdict": "good"
    },
    {
      "letters": "mb",
      "phonemes": "m",
      "verdict": "good"
    }
  ],
  "err": null
}
