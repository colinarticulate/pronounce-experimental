
 length of audio =  1.983625



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.56 0.98 1.54

 start3, duration3, end3 =  0.92 0.56 1.48

 Initial start, duration, end =  0.4600000000000001 1.08 1.54

 Cut at: start, duration =  0.4600000000000001 1.503625     guard_end =  1.963625 

Running scan for frate = 125
Considering guard zh with value 2 for f ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 4 for y ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 5 for uw ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 10 for z ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 3 for z ...
candidateGuards = map[r:true]
Picking guard, r

Running scan for frate = 125
Considering guard zh with value 2 for f ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ng with value 4.8 for yuw ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 4 for z ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 3 for z ...
candidateGuards = map[r:true]
Picking guard, r


frate, target rule = 125 public <fuses> = (((sil [((th <any_Cx_f_th_p>) | (<any_Cx_f_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]) | (sil p (sil [((th <any_Cx_f_th_p>) | (<any_Cx_f_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]))) (([(<any_Cx_zh_p_th_f_yuw> zh)] | [(zh <any_Cx_zh_p_th_f_yuw>)]) (f | s | ((<any_Cx_zh_p_th_f_yuw> zh) | (zh <any_Cx_zh_p_th_f_yuw>)))) (([(<any_Cx_ng_zh_yuw_z_f> ng)] | [(ng <any_Cx_ng_zh_yuw_z_f>)]) (yuw | ((<any_Cx_ng_zh_yuw_z> ng) | (ng <any_Cx_ng_zh_yuw_z>)))) (([(<any_Cx_ng_ng_z_yuw> ng)] | [(ng <any_Cx_ng_ng_z_yuw>)]) (z | ((<any_Cx_ng_ng_z_yuw> ng) | (ng <any_Cx_ng_ng_z_yuw>)))) ((([(<any_Vx_r_ng_ih_noSlide> r)] | [(r <any_Vx_r_ng_ih_noSlide>)]) ([(<any_Cx_r_ng_z_z> r)] | [(r <any_Cx_r_ng_z_z>)])) (ih | ((<any_Vx_r_ng_ih_noSlide> r) | (r <any_Vx_r_ng_ih_noSlide>)))) (([(<any_Cx_r_r_z> r)] | [(r <any_Cx_r_r_z>)]) (z | ((<any_Cx_r_r_z> r) | (r <any_Cx_r_r_z>)))) (([(<any_vowel_noSlide> s)] | [(s <any_vowel_noSlide>)]) ([(<any_Cx_r_z_s> s)] | [(s <any_Cx_r_z_s>)]) sil))
Running scan for frate = 105
Considering guard zh with value 2 for f ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ng with value 4.8 for yuw ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 4 for z ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 3 for z ...
candidateGuards = map[r:true]
Picking guard, r


frate, target rule = 105 public <fuses> = (((sil [((s <any_Cx_f_s_p>) | (<any_Cx_f_s_p> s))] [((s <any_vowel_noSlide>) | (<any_vowel_noSlide> s))]) | (sil p (sil [((s <any_Cx_f_s_p>) | (<any_Cx_f_s_p> s))] [((s <any_vowel_noSlide>) | (<any_vowel_noSlide> s))]))) (([(<any_Cx_zh_p_s_f_yuw> zh)] | [(zh <any_Cx_zh_p_s_f_yuw>)]) (f | s | ((<any_Cx_zh_p_s_f_yuw> zh) | (zh <any_Cx_zh_p_s_f_yuw>)))) (([(<any_Cx_ng_zh_yuw_z_f> ng)] | [(ng <any_Cx_ng_zh_yuw_z_f>)]) (yuw | ((<any_Cx_ng_zh_yuw_z> ng) | (ng <any_Cx_ng_zh_yuw_z>)))) (([(<any_Cx_ng_ng_z_yuw> ng)] | [(ng <any_Cx_ng_ng_z_yuw>)]) (z | ((<any_Cx_ng_ng_z_yuw> ng) | (ng <any_Cx_ng_ng_z_yuw>)))) ((([(<any_Vx_r_ng_ih_noSlide> r)] | [(r <any_Vx_r_ng_ih_noSlide>)]) ([(<any_Cx_r_ng_z_z> r)] | [(r <any_Cx_r_ng_z_z>)])) (ih | ((<any_Vx_r_ng_ih_noSlide> r) | (r <any_Vx_r_ng_ih_noSlide>)))) (([(<any_Cx_r_r_z> r)] | [(r <any_Cx_r_r_z>)]) (z | ((<any_Cx_r_r_z> r) | (r <any_Cx_r_r_z>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_r_z_thr> thr)] | [(thr <any_Cx_r_z_thr>)]) sil))
Running scan for frate = 91
Considering guard zh with value 2 for f ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ng with value 4.8 for yuw ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 4 for z ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 3 for z ...
candidateGuards = map[r:true]
Picking guard, r


frate, target rule = 91 public <fuses> = (((sil [((s <any_Cx_f_s_p>) | (<any_Cx_f_s_p> s))] [((s <any_vowel_noSlide>) | (<any_vowel_noSlide> s))]) | (sil p (sil [((s <any_Cx_f_s_p>) | (<any_Cx_f_s_p> s))] [((s <any_vowel_noSlide>) | (<any_vowel_noSlide> s))]))) (([(<any_Cx_zh_p_s_f_yuw> zh)] | [(zh <any_Cx_zh_p_s_f_yuw>)]) (f | s | ((<any_Cx_zh_p_s_f_yuw> zh) | (zh <any_Cx_zh_p_s_f_yuw>)))) (([(<any_Cx_ng_zh_yuw_z_f> ng)] | [(ng <any_Cx_ng_zh_yuw_z_f>)]) (yuw | ((<any_Cx_ng_zh_yuw_z> ng) | (ng <any_Cx_ng_zh_yuw_z>)))) (([(<any_Cx_ng_ng_z_yuw> ng)] | [(ng <any_Cx_ng_ng_z_yuw>)]) (z | ((<any_Cx_ng_ng_z_yuw> ng) | (ng <any_Cx_ng_ng_z_yuw>)))) ((([(<any_Vx_r_ng_ih_noSlide> r)] | [(r <any_Vx_r_ng_ih_noSlide>)]) ([(<any_Cx_r_ng_z_z> r)] | [(r <any_Cx_r_ng_z_z>)])) (ih | ((<any_Vx_r_ng_ih_noSlide> r) | (r <any_Vx_r_ng_ih_noSlide>)))) (([(<any_Cx_r_r_z> r)] | [(r <any_Cx_r_r_z>)]) (z | ((<any_Cx_r_r_z> r) | (r <any_Cx_r_r_z>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_r_z_thr> thr)] | [(thr <any_Cx_r_z_thr>)]) sil))
Running scan for frate = 80
Considering guard zh with value 2 for f ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ng with value 4.8 for yuw ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 4 for z ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 3 for z ...
candidateGuards = map[r:true]
Picking guard, r


frate, target rule = 80 public <fuses> = (((sil [((dh <any_Cx_f_dh_p>) | (<any_Cx_f_dh_p> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]) | (sil p (sil [((dh <any_Cx_f_dh_p>) | (<any_Cx_f_dh_p> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]))) (([(<any_Cx_zh_p_dh_f_yuw> zh)] | [(zh <any_Cx_zh_p_dh_f_yuw>)]) (f | s | ((<any_Cx_zh_p_dh_f_yuw> zh) | (zh <any_Cx_zh_p_dh_f_yuw>)))) (([(<any_Cx_ng_zh_yuw_z_f> ng)] | [(ng <any_Cx_ng_zh_yuw_z_f>)]) (yuw | ((<any_Cx_ng_zh_yuw_z> ng) | (ng <any_Cx_ng_zh_yuw_z>)))) (([(<any_Cx_ng_ng_z_yuw> ng)] | [(ng <any_Cx_ng_ng_z_yuw>)]) (z | ((<any_Cx_ng_ng_z_yuw> ng) | (ng <any_Cx_ng_ng_z_yuw>)))) ((([(<any_Vx_r_ng_ih_noSlide> r)] | [(r <any_Vx_r_ng_ih_noSlide>)]) ([(<any_Cx_r_ng_z_z> r)] | [(r <any_Cx_r_ng_z_z>)])) (ih | ((<any_Vx_r_ng_ih_noSlide> r) | (r <any_Vx_r_ng_ih_noSlide>)))) (([(<any_Cx_r_r_z> r)] | [(r <any_Cx_r_r_z>)]) (z | ((<any_Cx_r_r_z> r) | (r <any_Cx_r_r_z>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_r_z_thr> thr)] | [(thr <any_Cx_r_z_thr>)]) sil))
Running scan for frate = 72
Considering guard zh with value 2 for f ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ng with value 4.8 for yuw ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 4 for z ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 3 for z ...
candidateGuards = map[r:true]
Picking guard, r


frate, target rule = 72 public <fuses> = (((sil [((z <any_Cx_f_z_p>) | (<any_Cx_f_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_f_z_p>) | (<any_Cx_f_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_f_yuw> zh)] | [(zh <any_Cx_zh_p_z_f_yuw>)]) (f | s | ((<any_Cx_zh_p_z_f_yuw> zh) | (zh <any_Cx_zh_p_z_f_yuw>)))) (([(<any_Cx_ng_zh_yuw_z_f> ng)] | [(ng <any_Cx_ng_zh_yuw_z_f>)]) (yuw | ((<any_Cx_ng_zh_yuw_z> ng) | (ng <any_Cx_ng_zh_yuw_z>)))) (([(<any_Cx_ng_ng_z_yuw> ng)] | [(ng <any_Cx_ng_ng_z_yuw>)]) (z | ((<any_Cx_ng_ng_z_yuw> ng) | (ng <any_Cx_ng_ng_z_yuw>)))) ((([(<any_Vx_r_ng_ih_noSlide> r)] | [(r <any_Vx_r_ng_ih_noSlide>)]) ([(<any_Cx_r_ng_z_z> r)] | [(r <any_Cx_r_ng_z_z>)])) (ih | ((<any_Vx_r_ng_ih_noSlide> r) | (r <any_Vx_r_ng_ih_noSlide>)))) (([(<any_Cx_r_r_z> r)] | [(r <any_Cx_r_r_z>)]) (z | ((<any_Cx_r_r_z> r) | (r <any_Cx_r_r_z>)))) (([(<any_vowel_noSlide> s)] | [(s <any_vowel_noSlide>)]) ([(<any_Cx_r_z_s> s)] | [(s <any_Cx_r_z_s>)]) sil))

frate, target rule = 125 public <fuses> = (((sil [((s <any_Cx_f_s_p>) | (<any_Cx_f_s_p> s))] [((s <any_vowel_noSlide>) | (<any_vowel_noSlide> s))]) | (sil p (sil [((s <any_Cx_f_s_p>) | (<any_Cx_f_s_p> s))] [((s <any_vowel_noSlide>) | (<any_vowel_noSlide> s))]))) (([(<any_Cx_zh_p_s_f> zh)] | [(zh <any_Cx_zh_p_s_f>)]) (f | s | ((<any_Cx_zh_p_s_f> zh) | (zh <any_Cx_zh_p_s_f>)))) ((([(<any_Vx_zh_zh_y_uw_noSlide> zh)] | [(zh <any_Vx_zh_zh_y_uw_noSlide>)]) ([(<any_Cx_zh_zh_f> zh)] | [(zh <any_Cx_zh_zh_f>)])) (y | ((<any_Vx_zh_zh_y_uw_noSlide> zh) | (zh <any_Vx_zh_zh_y_uw_noSlide>)))) ((([(<any_Vx_ch_zh_uw_y_noSlide> ch)] | [(ch <any_Vx_ch_zh_uw_y_noSlide>)]) ([(<any_Cx_ch_zh_z> ch)] | [(ch <any_Cx_ch_zh_z>)])) (uw | ((<any_Vx_ch_zh_uw_y_noSlide> ch) | (ch <any_Vx_ch_zh_uw_y_noSlide>)))) (([(<any_Cx_ch_ch_z> ch)] | [(ch <any_Cx_ch_ch_z>)]) (z | ((<any_Cx_ch_ch_z> ch) | (ch <any_Cx_ch_ch_z>)))) ((([(<any_Vx_r_ch_ih_noSlide> r)] | [(r <any_Vx_r_ch_ih_noSlide>)]) ([(<any_Cx_r_ch_z_z> r)] | [(r <any_Cx_r_ch_z_z>)])) (ih | ((<any_Vx_r_ch_ih_noSlide> r) | (r <any_Vx_r_ch_ih_noSlide>)))) (([(<any_Cx_r_r_z> r)] | [(r <any_Cx_r_r_z>)]) (z | ((<any_Cx_r_r_z> r) | (r <any_Cx_r_r_z>)))) (([(<any_vowel_noSlide> s)] | [(s <any_vowel_noSlide>)]) ([(<any_Cx_r_z_s> s)] | [(s <any_Cx_r_z_s>)]) sil))
Running scan for frate = 105
Considering guard zh with value 2 for f ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 4 for y ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 5 for uw ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 10 for z ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 3 for z ...
candidateGuards = map[r:true]
Picking guard, r


frate, target rule = 105 public <fuses> = (((sil [((dh <any_Cx_f_dh_p>) | (<any_Cx_f_dh_p> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]) | (sil p (sil [((dh <any_Cx_f_dh_p>) | (<any_Cx_f_dh_p> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]))) (([(<any_Cx_zh_p_dh_f> zh)] | [(zh <any_Cx_zh_p_dh_f>)]) (f | s | ((<any_Cx_zh_p_dh_f> zh) | (zh <any_Cx_zh_p_dh_f>)))) ((([(<any_Vx_zh_zh_y_uw_noSlide> zh)] | [(zh <any_Vx_zh_zh_y_uw_noSlide>)]) ([(<any_Cx_zh_zh_f> zh)] | [(zh <any_Cx_zh_zh_f>)])) (y | ((<any_Vx_zh_zh_y_uw_noSlide> zh) | (zh <any_Vx_zh_zh_y_uw_noSlide>)))) ((([(<any_Vx_ch_zh_uw_y_noSlide> ch)] | [(ch <any_Vx_ch_zh_uw_y_noSlide>)]) ([(<any_Cx_ch_zh_z> ch)] | [(ch <any_Cx_ch_zh_z>)])) (uw | ((<any_Vx_ch_zh_uw_y_noSlide> ch) | (ch <any_Vx_ch_zh_uw_y_noSlide>)))) (([(<any_Cx_ch_ch_z> ch)] | [(ch <any_Cx_ch_ch_z>)]) (z | ((<any_Cx_ch_ch_z> ch) | (ch <any_Cx_ch_ch_z>)))) ((([(<any_Vx_r_ch_ih_noSlide> r)] | [(r <any_Vx_r_ch_ih_noSlide>)]) ([(<any_Cx_r_ch_z_z> r)] | [(r <any_Cx_r_ch_z_z>)])) (ih | ((<any_Vx_r_ch_ih_noSlide> r) | (r <any_Vx_r_ch_ih_noSlide>)))) (([(<any_Cx_r_r_z> r)] | [(r <any_Cx_r_r_z>)]) (z | ((<any_Cx_r_r_z> r) | (r <any_Cx_r_r_z>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_r_z_thr> thr)] | [(thr <any_Cx_r_z_thr>)]) sil))
Running scan for frate = 91
Considering guard zh with value 2 for f ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 4 for y ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 5 for uw ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 10 for z ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 3 for z ...
candidateGuards = map[r:true]
Picking guard, r


frate, target rule = 91 public <fuses> = (((sil [((z <any_Cx_f_z_p>) | (<any_Cx_f_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_f_z_p>) | (<any_Cx_f_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_f> zh)] | [(zh <any_Cx_zh_p_z_f>)]) (f | s | ((<any_Cx_zh_p_z_f> zh) | (zh <any_Cx_zh_p_z_f>)))) ((([(<any_Vx_zh_zh_y_uw_noSlide> zh)] | [(zh <any_Vx_zh_zh_y_uw_noSlide>)]) ([(<any_Cx_zh_zh_f> zh)] | [(zh <any_Cx_zh_zh_f>)])) (y | ((<any_Vx_zh_zh_y_uw_noSlide> zh) | (zh <any_Vx_zh_zh_y_uw_noSlide>)))) ((([(<any_Vx_ch_zh_uw_y_noSlide> ch)] | [(ch <any_Vx_ch_zh_uw_y_noSlide>)]) ([(<any_Cx_ch_zh_z> ch)] | [(ch <any_Cx_ch_zh_z>)])) (uw | ((<any_Vx_ch_zh_uw_y_noSlide> ch) | (ch <any_Vx_ch_zh_uw_y_noSlide>)))) (([(<any_Cx_ch_ch_z> ch)] | [(ch <any_Cx_ch_ch_z>)]) (z | ((<any_Cx_ch_ch_z> ch) | (ch <any_Cx_ch_ch_z>)))) ((([(<any_Vx_r_ch_ih_noSlide> r)] | [(r <any_Vx_r_ch_ih_noSlide>)]) ([(<any_Cx_r_ch_z_z> r)] | [(r <any_Cx_r_ch_z_z>)])) (ih | ((<any_Vx_r_ch_ih_noSlide> r) | (r <any_Vx_r_ch_ih_noSlide>)))) (([(<any_Cx_r_r_z> r)] | [(r <any_Cx_r_r_z>)]) (z | ((<any_Cx_r_r_z> r) | (r <any_Cx_r_r_z>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_r_z_v> v)] | [(v <any_Cx_r_z_v>)]) sil))
Running scan for frate = 80
Considering guard zh with value 2 for f ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 4 for y ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 5 for uw ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 10 for z ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 3 for z ...
candidateGuards = map[r:true]
Picking guard, r


frate, target rule = 80 public <fuses> = (((sil [((v <any_Cx_f_v_p>) | (<any_Cx_f_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]) | (sil p (sil [((v <any_Cx_f_v_p>) | (<any_Cx_f_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]))) (([(<any_Cx_zh_p_v_f> zh)] | [(zh <any_Cx_zh_p_v_f>)]) (f | s | ((<any_Cx_zh_p_v_f> zh) | (zh <any_Cx_zh_p_v_f>)))) ((([(<any_Vx_zh_zh_y_uw_noSlide> zh)] | [(zh <any_Vx_zh_zh_y_uw_noSlide>)]) ([(<any_Cx_zh_zh_f> zh)] | [(zh <any_Cx_zh_zh_f>)])) (y | ((<any_Vx_zh_zh_y_uw_noSlide> zh) | (zh <any_Vx_zh_zh_y_uw_noSlide>)))) ((([(<any_Vx_ch_zh_uw_y_noSlide> ch)] | [(ch <any_Vx_ch_zh_uw_y_noSlide>)]) ([(<any_Cx_ch_zh_z> ch)] | [(ch <any_Cx_ch_zh_z>)])) (uw | ((<any_Vx_ch_zh_uw_y_noSlide> ch) | (ch <any_Vx_ch_zh_uw_y_noSlide>)))) (([(<any_Cx_ch_ch_z> ch)] | [(ch <any_Cx_ch_ch_z>)]) (z | ((<any_Cx_ch_ch_z> ch) | (ch <any_Cx_ch_ch_z>)))) ((([(<any_Vx_r_ch_ih_noSlide> r)] | [(r <any_Vx_r_ch_ih_noSlide>)]) ([(<any_Cx_r_ch_z_z> r)] | [(r <any_Cx_r_ch_z_z>)])) (ih | ((<any_Vx_r_ch_ih_noSlide> r) | (r <any_Vx_r_ch_ih_noSlide>)))) (([(<any_Cx_r_r_z> r)] | [(r <any_Cx_r_r_z>)]) (z | ((<any_Cx_r_r_z> r) | (r <any_Cx_r_r_z>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_r_z_thr> thr)] | [(thr <any_Cx_r_z_thr>)]) sil))
Running scan for frate = 72
Considering guard zh with value 2 for f ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 4 for y ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 5 for uw ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 10 for z ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 3 for z ...
candidateGuards = map[r:true]
Picking guard, r


frate, target rule = 72 public <fuses> = (((sil [((v <any_Cx_f_v_p>) | (<any_Cx_f_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]) | (sil p (sil [((v <any_Cx_f_v_p>) | (<any_Cx_f_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]))) (([(<any_Cx_zh_p_v_f> zh)] | [(zh <any_Cx_zh_p_v_f>)]) (f | s | ((<any_Cx_zh_p_v_f> zh) | (zh <any_Cx_zh_p_v_f>)))) ((([(<any_Vx_zh_zh_y_uw_noSlide> zh)] | [(zh <any_Vx_zh_zh_y_uw_noSlide>)]) ([(<any_Cx_zh_zh_f> zh)] | [(zh <any_Cx_zh_zh_f>)])) (y | ((<any_Vx_zh_zh_y_uw_noSlide> zh) | (zh <any_Vx_zh_zh_y_uw_noSlide>)))) ((([(<any_Vx_ch_zh_uw_y_noSlide> ch)] | [(ch <any_Vx_ch_zh_uw_y_noSlide>)]) ([(<any_Cx_ch_zh_z> ch)] | [(ch <any_Cx_ch_zh_z>)])) (uw | ((<any_Vx_ch_zh_uw_y_noSlide> ch) | (ch <any_Vx_ch_zh_uw_y_noSlide>)))) (([(<any_Cx_ch_ch_z> ch)] | [(ch <any_Cx_ch_ch_z>)]) (z | ((<any_Cx_ch_ch_z> ch) | (ch <any_Cx_ch_ch_z>)))) ((([(<any_Vx_r_ch_ih_noSlide> r)] | [(r <any_Vx_r_ch_ih_noSlide>)]) ([(<any_Cx_r_ch_z_z> r)] | [(r <any_Cx_r_ch_z_z>)])) (ih | ((<any_Vx_r_ch_ih_noSlide> r) | (r <any_Vx_r_ch_ih_noSlide>)))) (([(<any_Cx_r_r_z> r)] | [(r <any_Cx_r_r_z>)]) (z | ((<any_Cx_r_r_z> r) | (r <any_Cx_r_r_z>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_r_z_b> b)] | [(b <any_Cx_r_z_b>)]) sil))

results =
{72 [{sil 0 2} {f 3 16} {y 17 25} {uw 26 36} {z 37 49} {ih 50 56} {z 57 74} {sil 75 93}]}
{80 [{sil 0 2} {f 3 19} {y 20 28} {uw 29 40} {z 41 54} {ih 55 62} {z 63 82} {sil 83 101}]}
{91 [{sil 0 2} {f 3 22} {y 23 33} {uw 34 47} {z 48 62} {ih 63 71} {z 72 105} {sil 106 131}]}
{105 [{sil 0 2} {f 3 26} {y 27 38} {uw 39 55} {z 56 70} {r 71 73} {uw 74 84} {z 85 111} {sil 112 157}]}
{125 [{sil 3 5} {f 6 32} {y 33 38} {uw 39 67} {z 68 86} {ih 87 101} {z 102 131} {sil 132 183}]}

normalised results =
{72 [{sil 0 2} {f 4 22} {y 24 35} {uw 36 50} {z 51 68} {ih 69 78} {z 79 103} {sil 104 129}]}
{80 [{sil 0 2} {f 4 24} {y 25 35} {uw 36 50} {z 51 68} {ih 69 78} {z 79 103} {sil 104 126}]}
{91 [{sil 0 2} {f 3 24} {y 25 36} {uw 37 52} {z 53 68} {ih 69 78} {z 79 115} {sil 116 144}]}
{105 [{sil 0 2} {f 3 25} {y 26 36} {uw 37 52} {z 53 67} {r 68 68} {uw 70 80} {z 81 106} {sil 107 150}]}
{125 [{sil 3 5} {f 5 26} {y 26 30} {uw 31 54} {z 54 69} {ih 70 81} {z 82 105} {sil 106 146}]}

ruleAligned = [{{f 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{y 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{uw 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{z 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{ih 0} [{0 5} {1 5} {2 5} {4 5}]} {{z 0} [{0 6} {1 6} {2 6} {3 7} {4 6}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {f 4 22} {y 24 35} {uw 36 50} {z 51 68} {ih 69 78} {z 79 103} {sil 104 104}]}
{80 [{sil 0 0} {f 4 24} {y 25 35} {uw 36 50} {z 51 68} {ih 69 78} {z 79 103} {sil 104 104}]}
{91 [{sil 0 0} {f 3 24} {y 25 36} {uw 37 52} {z 53 68} {ih 69 78} {z 79 115} {sil 116 116}]}
{105 [{sil 0 0} {f 3 25} {y 26 36} {uw 37 52} {z 53 67} {r 68 68} {uw 70 80} {z 81 106} {sil 107 107}]}
{125 [{sil 3 3} {f 5 26} {y 26 30} {uw 31 54} {z 54 69} {ih 70 81} {z 82 105} {sil 106 106}]}

timeAligned = [{{f 4 24} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{y 25 35} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{uw 36 52} [{0 3} {1 3} {4 3} {2 3} {3 3}]} {{z 53 68} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{ih 69 78} [{0 5} {1 5} {2 5} {4 5}]} {{z 79 105} [{0 6} {1 6} {2 6} {3 7} {4 6}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 22
i, iTime, newITime, timeStartFrom = 2 1 2 30
i, iTime, newITime, timeStartFrom = 3 2 3 50
i, iTime, newITime, timeStartFrom = 4 3 4 67
i, iTime, newITime, timeStartFrom = 5 4 5 78
combinedVerdict    = [{f 0} {y 0} {uw 0} {z 0} {ih 0} {z 0}]
ruleAlignedVerdict = [{f 0} {y 0} {uw 0} {z 0} {ih 0} {z 0}]

score->
+1 for f
+1 for y
+1 for uw
+1 for z
+1 for ih
+1 for z
score<-: 11

results =
{72 [{sil 0 2} {f 3 17} {yuw 18 28} {ng 29 36} {v 37 49} {ih 50 56} {z 57 74} {sil 75 93}]}
{80 [{sil 0 2} {f 3 19} {yuw 20 31} {ng 32 39} {v 40 54} {ih 55 62} {z 63 82} {sil 83 101}]}
{91 [{sil 0 2} {f 3 22} {yuw 23 47} {z 48 62} {ih 63 71} {z 72 105} {sil 106 131}]}
{105 [{sil 0 2} {f 3 26} {yuw 27 55} {z 56 70} {r 71 73} {uw 74 84} {z 85 111} {sil 112 157}]}
{125 [{sil 3 5} {f 6 32} {yuw 33 67} {z 68 86} {ih 87 101} {z 102 131} {sil 132 183}]}

normalised results =
{72 [{sil 0 2} {f 4 24} {yuw 25 39} {ng 40 50} {v 51 68} {ih 69 78} {z 79 103} {sil 104 129}]}
{80 [{sil 0 2} {f 4 24} {yuw 25 39} {ng 40 49} {v 50 68} {ih 69 78} {z 79 103} {sil 104 126}]}
{91 [{sil 0 2} {f 3 24} {yuw 25 52} {z 53 68} {ih 69 78} {z 79 115} {sil 116 144}]}
{105 [{sil 0 2} {f 3 25} {yuw 26 52} {z 53 67} {r 68 68} {uw 70 80} {z 81 106} {sil 107 150}]}
{125 [{sil 3 5} {f 5 26} {yuw 26 54} {z 54 69} {ih 70 81} {z 82 105} {sil 106 146}]}

ruleAligned = [{{f 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{yuw 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{z 1} [{2 3} {3 3} {4 3}]} {{ih 0} [{0 5} {1 5} {2 4} {4 4}]} {{z 0} [{0 6} {1 6} {2 5} {3 6} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {f 4 24} {yuw 25 39} {ng 40 50} {v 51 68} {ih 69 78} {z 79 103} {sil 104 104}]}
{80 [{sil 0 0} {f 4 24} {yuw 25 39} {ng 40 49} {v 50 68} {ih 69 78} {z 79 103} {sil 104 104}]}
{91 [{sil 0 0} {f 3 24} {yuw 25 52} {z 53 68} {ih 69 78} {z 79 115} {sil 116 116}]}
{105 [{sil 0 0} {f 3 25} {yuw 26 52} {z 53 67} {r 68 68} {uw 70 80} {z 81 106} {sil 107 107}]}
{125 [{sil 3 3} {f 5 26} {yuw 26 54} {z 54 69} {ih 70 81} {z 82 105} {sil 106 106}]}

timeAligned = [{{f 4 24} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{yuw 25 52} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{z 54 67} [{2 3} {3 3} {4 3}]} {{ih 69 78} [{0 5} {1 5} {2 4} {4 4}]} {{z 79 105} [{0 6} {1 6} {2 5} {3 6} {4 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 24
i, iTime, newITime, timeStartFrom = 2 1 2 39
i, iTime, newITime, timeStartFrom = 3 2 3 67
i, iTime, newITime, timeStartFrom = 4 3 4 78
combinedVerdict    = [{f 0} {yuw 0} {z 1} {ih 0} {z 0}]
ruleAlignedVerdict = [{f 0} {yuw 0} {z 1} {ih 0} {z 0}]

score->
+1 for f
+1 for yuw
+1 for z
+1 for ih
+1 for z
score<-: 10
testPronounce f good y good uw good z good ih good z good
publish->
phonsToAlphas = [{[f] f} {[y uw] u} {[z] s} {[ih] e} {[z] s}]
getVerdict<-:new {f [f] 0}
getVerdict<-:new {s [z] 0}
getVerdict<-:new {e [ih] 0}
getVerdict<-:new {s [z] 0}
lettersVerdicts = [{f [f] 0} {u [y uw] 0} {s [z] 0} {e [ih] 0} {s [z] 0}]
publish<-
{
  "results": [
    {
      "letters": "f",
      "phonemes": "f",
      "verdict": "good"
    },
    {
      "letters": "u",
      "phonemes": "j u",
      "verdict": "good"
    },
    {
      "letters": "s",
      "phonemes": "z",
      "verdict": "good"
    },
    {
      "letters": "e",
      "phonemes": "ɪ",
      "verdict": "good"
    },
    {
      "letters": "s",
      "phonemes": "z",
      "verdict": "good"
    }
  ],
  "err": null
}
