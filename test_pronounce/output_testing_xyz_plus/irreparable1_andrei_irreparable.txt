
 length of audio =  2.901



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0 2.88 2.88

 start3, duration3, end3 =  1.24 0.9199999999999999 2.16

 Initial start, duration, end =  0 2.88 2.88

 Cut at: start, duration =  0 2.881     guard_end =  2.881 

Running scan for frate = 125
Considering guard z with value 1 for ih ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard s with value 3.5999999999999996 for r ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard s with value 3.5999999999999996 for eh ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard zh with value 2 for p ...
Considering guard jh with value 2 for p ...
candidateGuards = map[jh:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for ax ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard z with value 2 for r ...
Considering guard y with value 2 for r ...
candidateGuards = map[y:true z:true]
Picking guard, z

Considering guard s with value 3.6000000000000005 for ax ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard jh with value 2 for b ...
Considering guard sh with value 2 for b ...
Considering guard zh with value 2 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, jh

Considering guard sh with value 2 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 125 public <irreparable> = (((sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]) | (sil p (sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]))) ((([(<any_Vx_z_p_z_ih_noSlide> z)] | [(z <any_Vx_z_p_z_ih_noSlide>)]) ([(<any_Cx_z_p_z_r> z)] | [(z <any_Cx_z_p_z_r>)])) (ih | ((<any_Vx_z_p_z_ih_noSlide> z) | (z <any_Vx_z_p_z_ih_noSlide>)))) (([(<any_Cx_s_z_r> s)] | [(s <any_Cx_s_z_r>)]) (r | ((<any_Cx_s_z_r> s) | (s <any_Cx_s_z_r>)))) ((([(<any_Vx_s_s_eh_noSlide> s)] | [(s <any_Vx_s_s_eh_noSlide>)]) ([(<any_Cx_s_s_p_r> s)] | [(s <any_Cx_s_s_p_r>)])) (eh | ((<any_Vx_s_s_eh_noSlide> s) | (s <any_Vx_s_s_eh_noSlide>)))) (([(<any_Cx_zh_s_p_ax> zh)] | [(zh <any_Cx_zh_s_p_ax>)]) (p | ((<any_Cx_zh_s_p_ax> zh) | (zh <any_Cx_zh_s_p_ax>)))) (([(<any_Cx_zh_zh_ax_r_p> zh)] | [(zh <any_Cx_zh_zh_ax_r_p>)]) (ax | ((<any_Cx_zh_zh_ax_r_p> zh) | (zh <any_Cx_zh_zh_ax_r_p>)))) (([(<any_Cx_z_zh_r_ax_ax> z)] | [(z <any_Cx_z_zh_r_ax_ax>)]) (r | ((<any_Cx_z_zh_r_ax_ax> z) | (z <any_Cx_z_zh_r_ax_ax>)))) (([(<any_Cx_s_z_ax_b_r> s)] | [(s <any_Cx_s_z_ax_b_r>)]) (ax | ((<any_Cx_s_z_ax_b_r> s) | (s <any_Cx_s_z_ax_b_r>)))) (([(<any_Cx_jh_s_b_ax_ax> jh)] | [(jh <any_Cx_jh_s_b_ax_ax>)]) (b | ((<any_Cx_jh_s_b_ax_ax> jh) | (jh <any_Cx_jh_s_b_ax_ax>)))) (([(<any_Cx_sh_jh_ax_b> sh)] | [(sh <any_Cx_sh_jh_ax_b>)]) (ax | ((<any_Cx_sh_jh_ax_l_b> sh) | (sh <any_Cx_sh_jh_ax_l_b>)))) (([(<any_Cx_sh_sh_l_ax> sh)] | [(sh <any_Cx_sh_sh_l_ax>)]) (l | ((<any_Cx_sh_sh_l_ax> sh) | (sh <any_Cx_sh_sh_l_ax>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_thr> thr)] | [(thr <any_Cx_sh_l_thr>)]) sil))
Running scan for frate = 105
Considering guard z with value 1 for ih ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard s with value 3.5999999999999996 for r ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard s with value 3.5999999999999996 for eh ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard zh with value 2 for p ...
Considering guard jh with value 2 for p ...
candidateGuards = map[jh:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for ax ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard y with value 2 for r ...
Considering guard z with value 2 for r ...
candidateGuards = map[y:true z:true]
Picking guard, y

Considering guard s with value 3.6000000000000005 for ax ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard jh with value 2 for b ...
Considering guard sh with value 2 for b ...
Considering guard zh with value 2 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, jh

Considering guard sh with value 2 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 105 public <irreparable> = (((sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]) | (sil p (sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]))) ((([(<any_Vx_z_p_z_ih_noSlide> z)] | [(z <any_Vx_z_p_z_ih_noSlide>)]) ([(<any_Cx_z_p_z_r> z)] | [(z <any_Cx_z_p_z_r>)])) (ih | ((<any_Vx_z_p_z_ih_noSlide> z) | (z <any_Vx_z_p_z_ih_noSlide>)))) (([(<any_Cx_s_z_r> s)] | [(s <any_Cx_s_z_r>)]) (r | ((<any_Cx_s_z_r> s) | (s <any_Cx_s_z_r>)))) ((([(<any_Vx_s_s_eh_noSlide> s)] | [(s <any_Vx_s_s_eh_noSlide>)]) ([(<any_Cx_s_s_p_r> s)] | [(s <any_Cx_s_s_p_r>)])) (eh | ((<any_Vx_s_s_eh_noSlide> s) | (s <any_Vx_s_s_eh_noSlide>)))) (([(<any_Cx_zh_s_p_ax> zh)] | [(zh <any_Cx_zh_s_p_ax>)]) (p | ((<any_Cx_zh_s_p_ax> zh) | (zh <any_Cx_zh_s_p_ax>)))) (([(<any_Cx_zh_zh_ax_r_p> zh)] | [(zh <any_Cx_zh_zh_ax_r_p>)]) (ax | ((<any_Cx_zh_zh_ax_r_p> zh) | (zh <any_Cx_zh_zh_ax_r_p>)))) (([(<any_Cx_y_zh_r_ax_ax> y)] | [(y <any_Cx_y_zh_r_ax_ax>)]) (r | ((<any_Cx_y_zh_r_ax_ax> y) | (y <any_Cx_y_zh_r_ax_ax>)))) (([(<any_Cx_s_y_ax_b_r> s)] | [(s <any_Cx_s_y_ax_b_r>)]) (ax | ((<any_Cx_s_y_ax_b_r> s) | (s <any_Cx_s_y_ax_b_r>)))) (([(<any_Cx_jh_s_b_ax_ax> jh)] | [(jh <any_Cx_jh_s_b_ax_ax>)]) (b | ((<any_Cx_jh_s_b_ax_ax> jh) | (jh <any_Cx_jh_s_b_ax_ax>)))) (([(<any_Cx_sh_jh_ax_b> sh)] | [(sh <any_Cx_sh_jh_ax_b>)]) (ax | ((<any_Cx_sh_jh_ax_l_b> sh) | (sh <any_Cx_sh_jh_ax_l_b>)))) (([(<any_Cx_sh_sh_l_ax> sh)] | [(sh <any_Cx_sh_sh_l_ax>)]) (l | ((<any_Cx_sh_sh_l_ax> sh) | (sh <any_Cx_sh_sh_l_ax>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_thr> thr)] | [(thr <any_Cx_sh_l_thr>)]) sil))
Running scan for frate = 91
Considering guard z with value 1 for ih ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard s with value 3.5999999999999996 for r ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard s with value 3.5999999999999996 for eh ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard jh with value 2 for p ...
Considering guard zh with value 2 for p ...
candidateGuards = map[jh:true zh:true]
Picking guard, jh

Considering guard zh with value 2 for ax ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard y with value 2 for r ...
Considering guard z with value 2 for r ...
candidateGuards = map[y:true z:true]
Picking guard, y

Considering guard s with value 3.6000000000000005 for ax ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard jh with value 2 for b ...
Considering guard sh with value 2 for b ...
Considering guard zh with value 2 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, jh

Considering guard sh with value 2 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 91 public <irreparable> = (((sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]) | (sil p (sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]))) ((([(<any_Vx_z_p_z_ih_noSlide> z)] | [(z <any_Vx_z_p_z_ih_noSlide>)]) ([(<any_Cx_z_p_z_r> z)] | [(z <any_Cx_z_p_z_r>)])) (ih | ((<any_Vx_z_p_z_ih_noSlide> z) | (z <any_Vx_z_p_z_ih_noSlide>)))) (([(<any_Cx_s_z_r> s)] | [(s <any_Cx_s_z_r>)]) (r | ((<any_Cx_s_z_r> s) | (s <any_Cx_s_z_r>)))) ((([(<any_Vx_s_s_eh_noSlide> s)] | [(s <any_Vx_s_s_eh_noSlide>)]) ([(<any_Cx_s_s_p_r> s)] | [(s <any_Cx_s_s_p_r>)])) (eh | ((<any_Vx_s_s_eh_noSlide> s) | (s <any_Vx_s_s_eh_noSlide>)))) (([(<any_Cx_jh_s_p_ax> jh)] | [(jh <any_Cx_jh_s_p_ax>)]) (p | ((<any_Cx_jh_s_p_ax> jh) | (jh <any_Cx_jh_s_p_ax>)))) (([(<any_Cx_zh_jh_ax_r_p> zh)] | [(zh <any_Cx_zh_jh_ax_r_p>)]) (ax | ((<any_Cx_zh_jh_ax_r_p> zh) | (zh <any_Cx_zh_jh_ax_r_p>)))) (([(<any_Cx_y_zh_r_ax_ax> y)] | [(y <any_Cx_y_zh_r_ax_ax>)]) (r | ((<any_Cx_y_zh_r_ax_ax> y) | (y <any_Cx_y_zh_r_ax_ax>)))) (([(<any_Cx_s_y_ax_b_r> s)] | [(s <any_Cx_s_y_ax_b_r>)]) (ax | ((<any_Cx_s_y_ax_b_r> s) | (s <any_Cx_s_y_ax_b_r>)))) (([(<any_Cx_jh_s_b_ax_ax> jh)] | [(jh <any_Cx_jh_s_b_ax_ax>)]) (b | ((<any_Cx_jh_s_b_ax_ax> jh) | (jh <any_Cx_jh_s_b_ax_ax>)))) (([(<any_Cx_sh_jh_ax_b> sh)] | [(sh <any_Cx_sh_jh_ax_b>)]) (ax | ((<any_Cx_sh_jh_ax_l_b> sh) | (sh <any_Cx_sh_jh_ax_l_b>)))) (([(<any_Cx_sh_sh_l_ax> sh)] | [(sh <any_Cx_sh_sh_l_ax>)]) (l | ((<any_Cx_sh_sh_l_ax> sh) | (sh <any_Cx_sh_sh_l_ax>)))) (([(<any_vowel_noSlide> r)] | [(r <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_r> r)] | [(r <any_Cx_sh_l_r>)]) sil))
Running scan for frate = 80
Considering guard z with value 1 for ih ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard s with value 3.5999999999999996 for r ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard s with value 3.5999999999999996 for eh ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard zh with value 2 for p ...
Considering guard jh with value 2 for p ...
candidateGuards = map[jh:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for ax ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard z with value 2 for r ...
Considering guard y with value 2 for r ...
candidateGuards = map[y:true z:true]
Picking guard, z

Considering guard s with value 3.6000000000000005 for ax ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard jh with value 2 for b ...
Considering guard zh with value 2 for b ...
Considering guard sh with value 2 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, jh

Considering guard sh with value 2 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 80 public <irreparable> = (((sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]) | (sil p (sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]))) ((([(<any_Vx_z_p_z_ih_noSlide> z)] | [(z <any_Vx_z_p_z_ih_noSlide>)]) ([(<any_Cx_z_p_z_r> z)] | [(z <any_Cx_z_p_z_r>)])) (ih | ((<any_Vx_z_p_z_ih_noSlide> z) | (z <any_Vx_z_p_z_ih_noSlide>)))) (([(<any_Cx_s_z_r> s)] | [(s <any_Cx_s_z_r>)]) (r | ((<any_Cx_s_z_r> s) | (s <any_Cx_s_z_r>)))) ((([(<any_Vx_s_s_eh_noSlide> s)] | [(s <any_Vx_s_s_eh_noSlide>)]) ([(<any_Cx_s_s_p_r> s)] | [(s <any_Cx_s_s_p_r>)])) (eh | ((<any_Vx_s_s_eh_noSlide> s) | (s <any_Vx_s_s_eh_noSlide>)))) (([(<any_Cx_zh_s_p_ax> zh)] | [(zh <any_Cx_zh_s_p_ax>)]) (p | ((<any_Cx_zh_s_p_ax> zh) | (zh <any_Cx_zh_s_p_ax>)))) (([(<any_Cx_zh_zh_ax_r_p> zh)] | [(zh <any_Cx_zh_zh_ax_r_p>)]) (ax | ((<any_Cx_zh_zh_ax_r_p> zh) | (zh <any_Cx_zh_zh_ax_r_p>)))) (([(<any_Cx_z_zh_r_ax_ax> z)] | [(z <any_Cx_z_zh_r_ax_ax>)]) (r | ((<any_Cx_z_zh_r_ax_ax> z) | (z <any_Cx_z_zh_r_ax_ax>)))) (([(<any_Cx_s_z_ax_b_r> s)] | [(s <any_Cx_s_z_ax_b_r>)]) (ax | ((<any_Cx_s_z_ax_b_r> s) | (s <any_Cx_s_z_ax_b_r>)))) (([(<any_Cx_jh_s_b_ax_ax> jh)] | [(jh <any_Cx_jh_s_b_ax_ax>)]) (b | ((<any_Cx_jh_s_b_ax_ax> jh) | (jh <any_Cx_jh_s_b_ax_ax>)))) (([(<any_Cx_sh_jh_ax_b> sh)] | [(sh <any_Cx_sh_jh_ax_b>)]) (ax | ((<any_Cx_sh_jh_ax_l_b> sh) | (sh <any_Cx_sh_jh_ax_l_b>)))) (([(<any_Cx_sh_sh_l_ax> sh)] | [(sh <any_Cx_sh_sh_l_ax>)]) (l | ((<any_Cx_sh_sh_l_ax> sh) | (sh <any_Cx_sh_sh_l_ax>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_thr> thr)] | [(thr <any_Cx_sh_l_thr>)]) sil))
Running scan for frate = 72
Considering guard z with value 1 for ih ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard s with value 3.5999999999999996 for r ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard s with value 3.5999999999999996 for eh ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard zh with value 2 for p ...
Considering guard jh with value 2 for p ...
candidateGuards = map[jh:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for ax ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard z with value 2 for r ...
Considering guard y with value 2 for r ...
candidateGuards = map[y:true z:true]
Picking guard, z

Considering guard s with value 3.6000000000000005 for ax ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard zh with value 2 for b ...
Considering guard jh with value 2 for b ...
Considering guard sh with value 2 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, zh

Considering guard sh with value 2 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 125
Considering guard z with value 1 for ih ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard s with value 3.5999999999999996 for r ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard y with value 2 for eh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 2 for pr ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard s with value 3.6000000000000005 for ax ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard sh with value 2 for b ...
Considering guard jh with value 2 for b ...
Considering guard zh with value 2 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, zh

Considering guard sh with value 2 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 125 public <irreparable> = (((sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]) | (sil p (sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]))) ((([(<any_Vx_z_p_z_ih_noSlide> z)] | [(z <any_Vx_z_p_z_ih_noSlide>)]) ([(<any_Cx_z_p_z_r> z)] | [(z <any_Cx_z_p_z_r>)])) (ih | ((<any_Vx_z_p_z_ih_noSlide> z) | (z <any_Vx_z_p_z_ih_noSlide>)))) (([(<any_Cx_s_z_r> s)] | [(s <any_Cx_s_z_r>)]) (r | ((<any_Cx_s_z_r> s) | (s <any_Cx_s_z_r>)))) ((([(<any_Vx_y_s_eh_noSlide> y)] | [(y <any_Vx_y_s_eh_noSlide>)]) ([(<any_Cx_y_s_pr_r> y)] | [(y <any_Cx_y_s_pr_r>)])) (eh | ((<any_Vx_y_s_eh_noSlide> y) | (y <any_Vx_y_s_eh_noSlide>)))) (([(<any_Cx_y_y_pr_ax> y)] | [(y <any_Cx_y_y_pr_ax>)]) (pr | ((<any_Cx_y_y_pr_ax> y) | (y <any_Cx_y_y_pr_ax>)))) (([(<any_Cx_s_y_ax_b_pr> s)] | [(s <any_Cx_s_y_ax_b_pr>)]) (ax | ((<any_Cx_s_y_ax_b_pr> s) | (s <any_Cx_s_y_ax_b_pr>)))) (([(<any_Cx_zh_s_b_ax_ax> zh)] | [(zh <any_Cx_zh_s_b_ax_ax>)]) (b | ((<any_Cx_zh_s_b_ax_ax> zh) | (zh <any_Cx_zh_s_b_ax_ax>)))) (([(<any_Cx_sh_zh_ax_b> sh)] | [(sh <any_Cx_sh_zh_ax_b>)]) (ax | ((<any_Cx_sh_zh_ax_l_b> sh) | (sh <any_Cx_sh_zh_ax_l_b>)))) (([(<any_Cx_sh_sh_l_ax> sh)] | [(sh <any_Cx_sh_sh_l_ax>)]) (l | ((<any_Cx_sh_sh_l_ax> sh) | (sh <any_Cx_sh_sh_l_ax>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_thr> thr)] | [(thr <any_Cx_sh_l_thr>)]) sil))
Running scan for frate = 105
Considering guard z with value 1 for ih ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard s with value 3.5999999999999996 for r ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard y with value 2 for eh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 2 for pr ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard s with value 3.6000000000000005 for ax ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard zh with value 2 for b ...
Considering guard sh with value 2 for b ...
Considering guard jh with value 2 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, zh

Considering guard sh with value 2 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 105 public <irreparable> = (((sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]) | (sil p (sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]))) ((([(<any_Vx_z_p_z_ih_noSlide> z)] | [(z <any_Vx_z_p_z_ih_noSlide>)]) ([(<any_Cx_z_p_z_r> z)] | [(z <any_Cx_z_p_z_r>)])) (ih | ((<any_Vx_z_p_z_ih_noSlide> z) | (z <any_Vx_z_p_z_ih_noSlide>)))) (([(<any_Cx_s_z_r> s)] | [(s <any_Cx_s_z_r>)]) (r | ((<any_Cx_s_z_r> s) | (s <any_Cx_s_z_r>)))) ((([(<any_Vx_y_s_eh_noSlide> y)] | [(y <any_Vx_y_s_eh_noSlide>)]) ([(<any_Cx_y_s_pr_r> y)] | [(y <any_Cx_y_s_pr_r>)])) (eh | ((<any_Vx_y_s_eh_noSlide> y) | (y <any_Vx_y_s_eh_noSlide>)))) (([(<any_Cx_y_y_pr_ax> y)] | [(y <any_Cx_y_y_pr_ax>)]) (pr | ((<any_Cx_y_y_pr_ax> y) | (y <any_Cx_y_y_pr_ax>)))) (([(<any_Cx_s_y_ax_b_pr> s)] | [(s <any_Cx_s_y_ax_b_pr>)]) (ax | ((<any_Cx_s_y_ax_b_pr> s) | (s <any_Cx_s_y_ax_b_pr>)))) (([(<any_Cx_zh_s_b_ax_ax> zh)] | [(zh <any_Cx_zh_s_b_ax_ax>)]) (b | ((<any_Cx_zh_s_b_ax_ax> zh) | (zh <any_Cx_zh_s_b_ax_ax>)))) (([(<any_Cx_sh_zh_ax_b> sh)] | [(sh <any_Cx_sh_zh_ax_b>)]) (ax | ((<any_Cx_sh_zh_ax_l_b> sh) | (sh <any_Cx_sh_zh_ax_l_b>)))) (([(<any_Cx_sh_sh_l_ax> sh)] | [(sh <any_Cx_sh_sh_l_ax>)]) (l | ((<any_Cx_sh_sh_l_ax> sh) | (sh <any_Cx_sh_sh_l_ax>)))) (([(<any_vowel_noSlide> w)] | [(w <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_w> w)] | [(w <any_Cx_sh_l_w>)]) sil))
Running scan for frate = 91
Considering guard z with value 1 for ih ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard s with value 3.5999999999999996 for r ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard y with value 2 for eh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 2 for pr ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard s with value 3.6000000000000005 for ax ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard jh with value 2 for b ...
Considering guard zh with value 2 for b ...
Considering guard sh with value 2 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, jh

Considering guard sh with value 2 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 91 public <irreparable> = (((sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]) | (sil p (sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]))) ((([(<any_Vx_z_p_z_ih_noSlide> z)] | [(z <any_Vx_z_p_z_ih_noSlide>)]) ([(<any_Cx_z_p_z_r> z)] | [(z <any_Cx_z_p_z_r>)])) (ih | ((<any_Vx_z_p_z_ih_noSlide> z) | (z <any_Vx_z_p_z_ih_noSlide>)))) (([(<any_Cx_s_z_r> s)] | [(s <any_Cx_s_z_r>)]) (r | ((<any_Cx_s_z_r> s) | (s <any_Cx_s_z_r>)))) ((([(<any_Vx_y_s_eh_noSlide> y)] | [(y <any_Vx_y_s_eh_noSlide>)]) ([(<any_Cx_y_s_pr_r> y)] | [(y <any_Cx_y_s_pr_r>)])) (eh | ((<any_Vx_y_s_eh_noSlide> y) | (y <any_Vx_y_s_eh_noSlide>)))) (([(<any_Cx_y_y_pr_ax> y)] | [(y <any_Cx_y_y_pr_ax>)]) (pr | ((<any_Cx_y_y_pr_ax> y) | (y <any_Cx_y_y_pr_ax>)))) (([(<any_Cx_s_y_ax_b_pr> s)] | [(s <any_Cx_s_y_ax_b_pr>)]) (ax | ((<any_Cx_s_y_ax_b_pr> s) | (s <any_Cx_s_y_ax_b_pr>)))) (([(<any_Cx_jh_s_b_ax_ax> jh)] | [(jh <any_Cx_jh_s_b_ax_ax>)]) (b | ((<any_Cx_jh_s_b_ax_ax> jh) | (jh <any_Cx_jh_s_b_ax_ax>)))) (([(<any_Cx_sh_jh_ax_b> sh)] | [(sh <any_Cx_sh_jh_ax_b>)]) (ax | ((<any_Cx_sh_jh_ax_l_b> sh) | (sh <any_Cx_sh_jh_ax_l_b>)))) (([(<any_Cx_sh_sh_l_ax> sh)] | [(sh <any_Cx_sh_sh_l_ax>)]) (l | ((<any_Cx_sh_sh_l_ax> sh) | (sh <any_Cx_sh_sh_l_ax>)))) (([(<any_vowel_noSlide> w)] | [(w <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_w> w)] | [(w <any_Cx_sh_l_w>)]) sil))
Running scan for frate = 80
Considering guard z with value 1 for ih ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard s with value 3.5999999999999996 for r ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard y with value 2 for eh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 2 for pr ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard s with value 3.6000000000000005 for ax ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard zh with value 2 for b ...
Considering guard sh with value 2 for b ...
Considering guard jh with value 2 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, jh

Considering guard sh with value 2 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 80 public <irreparable> = (((sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]) | (sil p (sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]))) ((([(<any_Vx_z_p_z_ih_noSlide> z)] | [(z <any_Vx_z_p_z_ih_noSlide>)]) ([(<any_Cx_z_p_z_r> z)] | [(z <any_Cx_z_p_z_r>)])) (ih | ((<any_Vx_z_p_z_ih_noSlide> z) | (z <any_Vx_z_p_z_ih_noSlide>)))) (([(<any_Cx_s_z_r> s)] | [(s <any_Cx_s_z_r>)]) (r | ((<any_Cx_s_z_r> s) | (s <any_Cx_s_z_r>)))) ((([(<any_Vx_y_s_eh_noSlide> y)] | [(y <any_Vx_y_s_eh_noSlide>)]) ([(<any_Cx_y_s_pr_r> y)] | [(y <any_Cx_y_s_pr_r>)])) (eh | ((<any_Vx_y_s_eh_noSlide> y) | (y <any_Vx_y_s_eh_noSlide>)))) (([(<any_Cx_y_y_pr_ax> y)] | [(y <any_Cx_y_y_pr_ax>)]) (pr | ((<any_Cx_y_y_pr_ax> y) | (y <any_Cx_y_y_pr_ax>)))) (([(<any_Cx_s_y_ax_b_pr> s)] | [(s <any_Cx_s_y_ax_b_pr>)]) (ax | ((<any_Cx_s_y_ax_b_pr> s) | (s <any_Cx_s_y_ax_b_pr>)))) (([(<any_Cx_jh_s_b_ax_ax> jh)] | [(jh <any_Cx_jh_s_b_ax_ax>)]) (b | ((<any_Cx_jh_s_b_ax_ax> jh) | (jh <any_Cx_jh_s_b_ax_ax>)))) (([(<any_Cx_sh_jh_ax_b> sh)] | [(sh <any_Cx_sh_jh_ax_b>)]) (ax | ((<any_Cx_sh_jh_ax_l_b> sh) | (sh <any_Cx_sh_jh_ax_l_b>)))) (([(<any_Cx_sh_sh_l_ax> sh)] | [(sh <any_Cx_sh_sh_l_ax>)]) (l | ((<any_Cx_sh_sh_l_ax> sh) | (sh <any_Cx_sh_sh_l_ax>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_f> f)] | [(f <any_Cx_sh_l_f>)]) sil))
Running scan for frate = 72
Considering guard z with value 1 for ih ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard s with value 3.5999999999999996 for r ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard y with value 2 for eh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 2 for pr ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard s with value 3.6000000000000005 for ax ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard zh with value 2 for b ...
Considering guard sh with value 2 for b ...
Considering guard jh with value 2 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, zh

Considering guard sh with value 2 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 72 public <irreparable> = (((sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]) | (sil p (sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]))) ((([(<any_Vx_z_p_z_ih_noSlide> z)] | [(z <any_Vx_z_p_z_ih_noSlide>)]) ([(<any_Cx_z_p_z_r> z)] | [(z <any_Cx_z_p_z_r>)])) (ih | ((<any_Vx_z_p_z_ih_noSlide> z) | (z <any_Vx_z_p_z_ih_noSlide>)))) (([(<any_Cx_s_z_r> s)] | [(s <any_Cx_s_z_r>)]) (r | ((<any_Cx_s_z_r> s) | (s <any_Cx_s_z_r>)))) ((([(<any_Vx_y_s_eh_noSlide> y)] | [(y <any_Vx_y_s_eh_noSlide>)]) ([(<any_Cx_y_s_pr_r> y)] | [(y <any_Cx_y_s_pr_r>)])) (eh | ((<any_Vx_y_s_eh_noSlide> y) | (y <any_Vx_y_s_eh_noSlide>)))) (([(<any_Cx_y_y_pr_ax> y)] | [(y <any_Cx_y_y_pr_ax>)]) (pr | ((<any_Cx_y_y_pr_ax> y) | (y <any_Cx_y_y_pr_ax>)))) (([(<any_Cx_s_y_ax_b_pr> s)] | [(s <any_Cx_s_y_ax_b_pr>)]) (ax | ((<any_Cx_s_y_ax_b_pr> s) | (s <any_Cx_s_y_ax_b_pr>)))) (([(<any_Cx_zh_s_b_ax_ax> zh)] | [(zh <any_Cx_zh_s_b_ax_ax>)]) (b | ((<any_Cx_zh_s_b_ax_ax> zh) | (zh <any_Cx_zh_s_b_ax_ax>)))) (([(<any_Cx_sh_zh_ax_b> sh)] | [(sh <any_Cx_sh_zh_ax_b>)]) (ax | ((<any_Cx_sh_zh_ax_l_b> sh) | (sh <any_Cx_sh_zh_ax_l_b>)))) (([(<any_Cx_sh_sh_l_ax> sh)] | [(sh <any_Cx_sh_sh_l_ax>)]) (l | ((<any_Cx_sh_sh_l_ax> sh) | (sh <any_Cx_sh_sh_l_ax>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_d> d)] | [(d <any_Cx_sh_l_d>)]) sil))
Running scan for frate = 125
Considering guard z with value 1 for ih ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard s with value 3.5999999999999996 for r ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard s with value 3.5999999999999996 for eh ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard zh with value 2 for p ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 4 for r ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard s with value 3.6000000000000005 for ax ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard sh with value 2 for b ...
Considering guard zh with value 2 for b ...
Considering guard jh with value 2 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, sh

Considering guard sh with value 2 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 125 public <irreparable> = (((sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]) | (sil p (sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]))) ((([(<any_Vx_z_p_z_ih_noSlide> z)] | [(z <any_Vx_z_p_z_ih_noSlide>)]) ([(<any_Cx_z_p_z_r> z)] | [(z <any_Cx_z_p_z_r>)])) (ih | ((<any_Vx_z_p_z_ih_noSlide> z) | (z <any_Vx_z_p_z_ih_noSlide>)))) (([(<any_Cx_s_z_r> s)] | [(s <any_Cx_s_z_r>)]) (r | ((<any_Cx_s_z_r> s) | (s <any_Cx_s_z_r>)))) ((([(<any_Vx_s_s_eh_noSlide> s)] | [(s <any_Vx_s_s_eh_noSlide>)]) ([(<any_Cx_s_s_p_r> s)] | [(s <any_Cx_s_s_p_r>)])) (eh | ((<any_Vx_s_s_eh_noSlide> s) | (s <any_Vx_s_s_eh_noSlide>)))) (([(<any_Cx_zh_s_p_r> zh)] | [(zh <any_Cx_zh_s_p_r>)]) (p | ((<any_Cx_zh_s_p_r> zh) | (zh <any_Cx_zh_s_p_r>)))) (([(<any_Cx_zh_zh_r_ax_p> zh)] | [(zh <any_Cx_zh_zh_r_ax_p>)]) (r | ((<any_Cx_zh_zh_r_ax_p> zh) | (zh <any_Cx_zh_zh_r_ax_p>)))) (([(<any_Cx_s_zh_ax_b_r> s)] | [(s <any_Cx_s_zh_ax_b_r>)]) (ax | ((<any_Cx_s_zh_ax_b_r> s) | (s <any_Cx_s_zh_ax_b_r>)))) (([(<any_Cx_sh_s_b_ax_ax> sh)] | [(sh <any_Cx_sh_s_b_ax_ax>)]) (b | ((<any_Cx_sh_s_b_ax_ax> sh) | (sh <any_Cx_sh_s_b_ax_ax>)))) (([(<any_Cx_sh_sh_ax_b> sh)] | [(sh <any_Cx_sh_sh_ax_b>)]) (ax | ((<any_Cx_sh_sh_ax_l_b> sh) | (sh <any_Cx_sh_sh_ax_l_b>)))) (([(<any_Cx_sh_sh_l_ax> sh)] | [(sh <any_Cx_sh_sh_l_ax>)]) (l | ((<any_Cx_sh_sh_l_ax> sh) | (sh <any_Cx_sh_sh_l_ax>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_thr> thr)] | [(thr <any_Cx_sh_l_thr>)]) sil))
Running scan for frate = 105
Considering guard z with value 1 for ih ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard s with value 3.5999999999999996 for r ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard s with value 3.5999999999999996 for eh ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard zh with value 2 for p ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 4 for r ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard s with value 3.6000000000000005 for ax ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard jh with value 2 for b ...
Considering guard zh with value 2 for b ...
Considering guard sh with value 2 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, sh

Considering guard sh with value 2 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 105 public <irreparable> = (((sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]) | (sil p (sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]))) ((([(<any_Vx_z_p_z_ih_noSlide> z)] | [(z <any_Vx_z_p_z_ih_noSlide>)]) ([(<any_Cx_z_p_z_r> z)] | [(z <any_Cx_z_p_z_r>)])) (ih | ((<any_Vx_z_p_z_ih_noSlide> z) | (z <any_Vx_z_p_z_ih_noSlide>)))) (([(<any_Cx_s_z_r> s)] | [(s <any_Cx_s_z_r>)]) (r | ((<any_Cx_s_z_r> s) | (s <any_Cx_s_z_r>)))) ((([(<any_Vx_s_s_eh_noSlide> s)] | [(s <any_Vx_s_s_eh_noSlide>)]) ([(<any_Cx_s_s_p_r> s)] | [(s <any_Cx_s_s_p_r>)])) (eh | ((<any_Vx_s_s_eh_noSlide> s) | (s <any_Vx_s_s_eh_noSlide>)))) (([(<any_Cx_zh_s_p_r> zh)] | [(zh <any_Cx_zh_s_p_r>)]) (p | ((<any_Cx_zh_s_p_r> zh) | (zh <any_Cx_zh_s_p_r>)))) (([(<any_Cx_zh_zh_r_ax_p> zh)] | [(zh <any_Cx_zh_zh_r_ax_p>)]) (r | ((<any_Cx_zh_zh_r_ax_p> zh) | (zh <any_Cx_zh_zh_r_ax_p>)))) (([(<any_Cx_s_zh_ax_b_r> s)] | [(s <any_Cx_s_zh_ax_b_r>)]) (ax | ((<any_Cx_s_zh_ax_b_r> s) | (s <any_Cx_s_zh_ax_b_r>)))) (([(<any_Cx_sh_s_b_ax_ax> sh)] | [(sh <any_Cx_sh_s_b_ax_ax>)]) (b | ((<any_Cx_sh_s_b_ax_ax> sh) | (sh <any_Cx_sh_s_b_ax_ax>)))) (([(<any_Cx_sh_sh_ax_b> sh)] | [(sh <any_Cx_sh_sh_ax_b>)]) (ax | ((<any_Cx_sh_sh_ax_l_b> sh) | (sh <any_Cx_sh_sh_ax_l_b>)))) (([(<any_Cx_sh_sh_l_ax> sh)] | [(sh <any_Cx_sh_sh_l_ax>)]) (l | ((<any_Cx_sh_sh_l_ax> sh) | (sh <any_Cx_sh_sh_l_ax>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_d> d)] | [(d <any_Cx_sh_l_d>)]) sil))
Running scan for frate = 91
Considering guard z with value 1 for ih ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard s with value 3.5999999999999996 for r ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard s with value 3.5999999999999996 for eh ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard zh with value 2 for p ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 4 for r ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard s with value 3.6000000000000005 for ax ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard sh with value 2 for b ...
Considering guard jh with value 2 for b ...
Considering guard zh with value 2 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, sh

Considering guard sh with value 2 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 125
Considering guard z with value 1 for ih ...
candidateGuards = map[z:true]
Picking guard, z


Considering guard s with value 3.5999999999999996 for r ...
candidateGuards = map[s:true]
Picking guard, s

frate, target rule = 91 public <irreparable> = (((sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]) | (sil p (sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]))) ((([(<any_Vx_z_p_z_ih_noSlide> z)] | [(z <any_Vx_z_p_z_ih_noSlide>)]) ([(<any_Cx_z_p_z_r> z)] | [(z <any_Cx_z_p_z_r>)])) (ih | ((<any_Vx_z_p_z_ih_noSlide> z) | (z <any_Vx_z_p_z_ih_noSlide>)))) (([(<any_Cx_s_z_r> s)] | [(s <any_Cx_s_z_r>)]) (r | ((<any_Cx_s_z_r> s) | (s <any_Cx_s_z_r>)))) ((([(<any_Vx_s_s_eh_noSlide> s)] | [(s <any_Vx_s_s_eh_noSlide>)]) ([(<any_Cx_s_s_p_r> s)] | [(s <any_Cx_s_s_p_r>)])) (eh | ((<any_Vx_s_s_eh_noSlide> s) | (s <any_Vx_s_s_eh_noSlide>)))) (([(<any_Cx_zh_s_p_r> zh)] | [(zh <any_Cx_zh_s_p_r>)]) (p | ((<any_Cx_zh_s_p_r> zh) | (zh <any_Cx_zh_s_p_r>)))) (([(<any_Cx_zh_zh_r_ax_p> zh)] | [(zh <any_Cx_zh_zh_r_ax_p>)]) (r | ((<any_Cx_zh_zh_r_ax_p> zh) | (zh <any_Cx_zh_zh_r_ax_p>)))) (([(<any_Cx_s_zh_ax_b_r> s)] | [(s <any_Cx_s_zh_ax_b_r>)]) (ax | ((<any_Cx_s_zh_ax_b_r> s) | (s <any_Cx_s_zh_ax_b_r>)))) (([(<any_Cx_sh_s_b_ax_ax> sh)] | [(sh <any_Cx_sh_s_b_ax_ax>)]) (b | ((<any_Cx_sh_s_b_ax_ax> sh) | (sh <any_Cx_sh_s_b_ax_ax>)))) (([(<any_Cx_sh_sh_ax_b> sh)] | [(sh <any_Cx_sh_sh_ax_b>)]) (ax | ((<any_Cx_sh_sh_ax_l_b> sh) | (sh <any_Cx_sh_sh_ax_l_b>)))) (([(<any_Cx_sh_sh_l_ax> sh)] | [(sh <any_Cx_sh_sh_l_ax>)]) (l | ((<any_Cx_sh_sh_l_ax> sh) | (sh <any_Cx_sh_sh_l_ax>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_d> d)] | [(d <any_Cx_sh_l_d>)]) sil))
Running scan for frate = 80
Considering guard s with value 3.5999999999999996 for eh ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard z with value 1 for ih ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard jh with value 2 for p ...
Considering guard zh with value 2 for p ...
candidateGuards = map[jh:true zh:true]
Picking guard, jh

Considering guard zh with value 2 for ax ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard s with value 3.5999999999999996 for r ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard y with value 2 for r ...
Considering guard z with value 2 for r ...
candidateGuards = map[y:true z:true]
Picking guard, y

Considering guard s with value 3.5999999999999996 for eh ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard s with value 3.6000000000000005 for ax ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard zh with value 2 for p ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 2 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 4 for r ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 1 for axl ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard s with value 3.6000000000000005 for ax ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard jh with value 2 for b ...
Considering guard zh with value 2 for b ...
Considering guard sh with value 2 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, jh

Considering guard sh with value 2 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh


Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 125 public <irreparable> = (((sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]) | (sil p (sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]))) ((([(<any_Vx_z_p_z_ih_noSlide> z)] | [(z <any_Vx_z_p_z_ih_noSlide>)]) ([(<any_Cx_z_p_z_r> z)] | [(z <any_Cx_z_p_z_r>)])) (ih | ((<any_Vx_z_p_z_ih_noSlide> z) | (z <any_Vx_z_p_z_ih_noSlide>)))) (([(<any_Cx_s_z_r> s)] | [(s <any_Cx_s_z_r>)]) (r | ((<any_Cx_s_z_r> s) | (s <any_Cx_s_z_r>)))) ((([(<any_Vx_s_s_eh_noSlide> s)] | [(s <any_Vx_s_s_eh_noSlide>)]) ([(<any_Cx_s_s_p_r> s)] | [(s <any_Cx_s_s_p_r>)])) (eh | ((<any_Vx_s_s_eh_noSlide> s) | (s <any_Vx_s_s_eh_noSlide>)))) (([(<any_Cx_jh_s_p_ax> jh)] | [(jh <any_Cx_jh_s_p_ax>)]) (p | ((<any_Cx_jh_s_p_ax> jh) | (jh <any_Cx_jh_s_p_ax>)))) (([(<any_Cx_zh_jh_ax_r_p> zh)] | [(zh <any_Cx_zh_jh_ax_r_p>)]) (ax | ((<any_Cx_zh_jh_ax_r_p> zh) | (zh <any_Cx_zh_jh_ax_r_p>)))) (([(<any_Cx_y_zh_r_ax_ax> y)] | [(y <any_Cx_y_zh_r_ax_ax>)]) (r | ((<any_Cx_y_zh_r_ax_ax> y) | (y <any_Cx_y_zh_r_ax_ax>)))) (([(<any_Cx_s_y_ax_b_r> s)] | [(s <any_Cx_s_y_ax_b_r>)]) (ax | ((<any_Cx_s_y_ax_b_r> s) | (s <any_Cx_s_y_ax_b_r>)))) (([(<any_Cx_sh_s_b_ax> sh)] | [(sh <any_Cx_sh_s_b_ax>)]) (b | ((<any_Cx_sh_s_b_axl_ax> sh) | (sh <any_Cx_sh_s_b_axl_ax>)))) (([(<any_Cx_sh_sh_axl_b> sh)] | [(sh <any_Cx_sh_sh_axl_b>)]) (axl | ((<any_Cx_sh_sh_axl_b> sh) | (sh <any_Cx_sh_sh_axl_b>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_sh_axl_hh> hh)] | [(hh <any_Cx_sh_axl_hh>)]) sil))
Running scan for frate = 105
Considering guard z with value 1 for ih ...
candidateGuards = map[z:true]
Picking guard, z


frate, target rule = 80 public <irreparable> = (((sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]) | (sil p (sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]))) ((([(<any_Vx_z_p_z_ih_noSlide> z)] | [(z <any_Vx_z_p_z_ih_noSlide>)]) ([(<any_Cx_z_p_z_r> z)] | [(z <any_Cx_z_p_z_r>)])) (ih | ((<any_Vx_z_p_z_ih_noSlide> z) | (z <any_Vx_z_p_z_ih_noSlide>)))) (([(<any_Cx_s_z_r> s)] | [(s <any_Cx_s_z_r>)]) (r | ((<any_Cx_s_z_r> s) | (s <any_Cx_s_z_r>)))) ((([(<any_Vx_s_s_eh_noSlide> s)] | [(s <any_Vx_s_s_eh_noSlide>)]) ([(<any_Cx_s_s_p_r> s)] | [(s <any_Cx_s_s_p_r>)])) (eh | ((<any_Vx_s_s_eh_noSlide> s) | (s <any_Vx_s_s_eh_noSlide>)))) (([(<any_Cx_zh_s_p_r> zh)] | [(zh <any_Cx_zh_s_p_r>)]) (p | ((<any_Cx_zh_s_p_r> zh) | (zh <any_Cx_zh_s_p_r>)))) (([(<any_Cx_zh_zh_r_ax_p> zh)] | [(zh <any_Cx_zh_zh_r_ax_p>)]) (r | ((<any_Cx_zh_zh_r_ax_p> zh) | (zh <any_Cx_zh_zh_r_ax_p>)))) (([(<any_Cx_s_zh_ax_b_r> s)] | [(s <any_Cx_s_zh_ax_b_r>)]) (ax | ((<any_Cx_s_zh_ax_b_r> s) | (s <any_Cx_s_zh_ax_b_r>)))) (([(<any_Cx_jh_s_b_ax_ax> jh)] | [(jh <any_Cx_jh_s_b_ax_ax>)]) (b | ((<any_Cx_jh_s_b_ax_ax> jh) | (jh <any_Cx_jh_s_b_ax_ax>)))) (([(<any_Cx_sh_jh_ax_b> sh)] | [(sh <any_Cx_sh_jh_ax_b>)]) (ax | ((<any_Cx_sh_jh_ax_l_b> sh) | (sh <any_Cx_sh_jh_ax_l_b>)))) (([(<any_Cx_sh_sh_l_ax> sh)] | [(sh <any_Cx_sh_sh_l_ax>)]) (l | ((<any_Cx_sh_sh_l_ax> sh) | (sh <any_Cx_sh_sh_l_ax>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_f> f)] | [(f <any_Cx_sh_l_f>)]) sil))
Running scan for frate = 72
Running scan for frate = 125
Considering guard z with value 1 for ih ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard z with value 1 for ih ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard s with value 3.5999999999999996 for r ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard s with value 3.5999999999999996 for r ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard s with value 3.5999999999999996 for eh ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard s with value 3.5999999999999996 for eh ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard zh with value 2 for p ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 4 for r ...
candidateGuards = map[zh:true]
Picking guard, zh


Running scan for frate = 125
frate, target rule = 72 public <irreparable> = (((sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]) | (sil p (sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]))) ((([(<any_Vx_z_p_z_ih_noSlide> z)] | [(z <any_Vx_z_p_z_ih_noSlide>)]) ([(<any_Cx_z_p_z_r> z)] | [(z <any_Cx_z_p_z_r>)])) (ih | ((<any_Vx_z_p_z_ih_noSlide> z) | (z <any_Vx_z_p_z_ih_noSlide>)))) (([(<any_Cx_s_z_r> s)] | [(s <any_Cx_s_z_r>)]) (r | ((<any_Cx_s_z_r> s) | (s <any_Cx_s_z_r>)))) ((([(<any_Vx_s_s_eh_noSlide> s)] | [(s <any_Vx_s_s_eh_noSlide>)]) ([(<any_Cx_s_s_p_r> s)] | [(s <any_Cx_s_s_p_r>)])) (eh | ((<any_Vx_s_s_eh_noSlide> s) | (s <any_Vx_s_s_eh_noSlide>)))) (([(<any_Cx_zh_s_p_ax> zh)] | [(zh <any_Cx_zh_s_p_ax>)]) (p | ((<any_Cx_zh_s_p_ax> zh) | (zh <any_Cx_zh_s_p_ax>)))) (([(<any_Cx_zh_zh_ax_r_p> zh)] | [(zh <any_Cx_zh_zh_ax_r_p>)]) (ax | ((<any_Cx_zh_zh_ax_r_p> zh) | (zh <any_Cx_zh_zh_ax_r_p>)))) (([(<any_Cx_z_zh_r_ax_ax> z)] | [(z <any_Cx_z_zh_r_ax_ax>)]) (r | ((<any_Cx_z_zh_r_ax_ax> z) | (z <any_Cx_z_zh_r_ax_ax>)))) (([(<any_Cx_s_z_ax_b_r> s)] | [(s <any_Cx_s_z_ax_b_r>)]) (ax | ((<any_Cx_s_z_ax_b_r> s) | (s <any_Cx_s_z_ax_b_r>)))) (([(<any_Cx_zh_s_b_ax_ax> zh)] | [(zh <any_Cx_zh_s_b_ax_ax>)]) (b | ((<any_Cx_zh_s_b_ax_ax> zh) | (zh <any_Cx_zh_s_b_ax_ax>)))) (([(<any_Cx_sh_zh_ax_b> sh)] | [(sh <any_Cx_sh_zh_ax_b>)]) (ax | ((<any_Cx_sh_zh_ax_l_b> sh) | (sh <any_Cx_sh_zh_ax_l_b>)))) (([(<any_Cx_sh_sh_l_ax> sh)] | [(sh <any_Cx_sh_sh_l_ax>)]) (l | ((<any_Cx_sh_sh_l_ax> sh) | (sh <any_Cx_sh_sh_l_ax>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_f> f)] | [(f <any_Cx_sh_l_f>)]) sil))
Considering guard z with value 1 for ih ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard s with value 3.5999999999999996 for r ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard y with value 2 for eh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard zh with value 2 for p ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard y with value 2 for pr ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard zh with value 4 for r ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard s with value 3.6000000000000005 for ax ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard s with value 3.6000000000000005 for ax ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard sh with value 2 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for axl ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for axl ...
candidateGuards = map[sh:true]
Picking guard, sh



frate, target rule = 125 public <irreparable> = (((sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]) | (sil p (sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]))) ((([(<any_Vx_z_p_z_ih_noSlide> z)] | [(z <any_Vx_z_p_z_ih_noSlide>)]) ([(<any_Cx_z_p_z_r> z)] | [(z <any_Cx_z_p_z_r>)])) (ih | ((<any_Vx_z_p_z_ih_noSlide> z) | (z <any_Vx_z_p_z_ih_noSlide>)))) (([(<any_Cx_s_z_r> s)] | [(s <any_Cx_s_z_r>)]) (r | ((<any_Cx_s_z_r> s) | (s <any_Cx_s_z_r>)))) ((([(<any_Vx_y_s_eh_noSlide> y)] | [(y <any_Vx_y_s_eh_noSlide>)]) ([(<any_Cx_y_s_pr_r> y)] | [(y <any_Cx_y_s_pr_r>)])) (eh | ((<any_Vx_y_s_eh_noSlide> y) | (y <any_Vx_y_s_eh_noSlide>)))) (([(<any_Cx_y_y_pr_ax> y)] | [(y <any_Cx_y_y_pr_ax>)]) (pr | ((<any_Cx_y_y_pr_ax> y) | (y <any_Cx_y_y_pr_ax>)))) (([(<any_Cx_s_y_ax_b_pr> s)] | [(s <any_Cx_s_y_ax_b_pr>)]) (ax | ((<any_Cx_s_y_ax_b_pr> s) | (s <any_Cx_s_y_ax_b_pr>)))) (([(<any_Cx_sh_s_b_ax> sh)] | [(sh <any_Cx_sh_s_b_ax>)]) (b | ((<any_Cx_sh_s_b_axl_ax> sh) | (sh <any_Cx_sh_s_b_axl_ax>)))) (([(<any_Cx_sh_sh_axl_b> sh)] | [(sh <any_Cx_sh_sh_axl_b>)]) (axl | ((<any_Cx_sh_sh_axl_b> sh) | (sh <any_Cx_sh_sh_axl_b>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_sh_axl_p> p)] | [(p <any_Cx_sh_axl_p>)]) sil))
Running scan for frate = 105
frate, target rule = 125 public <irreparable> = (((sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]) | (sil p (sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]))) ((([(<any_Vx_z_p_z_ih_noSlide> z)] | [(z <any_Vx_z_p_z_ih_noSlide>)]) ([(<any_Cx_z_p_z_r> z)] | [(z <any_Cx_z_p_z_r>)])) (ih | ((<any_Vx_z_p_z_ih_noSlide> z) | (z <any_Vx_z_p_z_ih_noSlide>)))) (([(<any_Cx_s_z_r> s)] | [(s <any_Cx_s_z_r>)]) (r | ((<any_Cx_s_z_r> s) | (s <any_Cx_s_z_r>)))) ((([(<any_Vx_s_s_eh_noSlide> s)] | [(s <any_Vx_s_s_eh_noSlide>)]) ([(<any_Cx_s_s_p_r> s)] | [(s <any_Cx_s_s_p_r>)])) (eh | ((<any_Vx_s_s_eh_noSlide> s) | (s <any_Vx_s_s_eh_noSlide>)))) (([(<any_Cx_zh_s_p_r> zh)] | [(zh <any_Cx_zh_s_p_r>)]) (p | ((<any_Cx_zh_s_p_r> zh) | (zh <any_Cx_zh_s_p_r>)))) (([(<any_Cx_zh_zh_r_ax_p> zh)] | [(zh <any_Cx_zh_zh_r_ax_p>)]) (r | ((<any_Cx_zh_zh_r_ax_p> zh) | (zh <any_Cx_zh_zh_r_ax_p>)))) (([(<any_Cx_s_zh_ax_b_r> s)] | [(s <any_Cx_s_zh_ax_b_r>)]) (ax | ((<any_Cx_s_zh_ax_b_r> s) | (s <any_Cx_s_zh_ax_b_r>)))) (([(<any_Cx_sh_s_b_ax> sh)] | [(sh <any_Cx_sh_s_b_ax>)]) (b | ((<any_Cx_sh_s_b_axl_ax> sh) | (sh <any_Cx_sh_s_b_axl_ax>)))) (([(<any_Cx_sh_sh_axl_b> sh)] | [(sh <any_Cx_sh_sh_axl_b>)]) (axl | ((<any_Cx_sh_sh_axl_b> sh) | (sh <any_Cx_sh_sh_axl_b>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_sh_axl_hh> hh)] | [(hh <any_Cx_sh_axl_hh>)]) sil))
Running scan for frate = 105
Considering guard z with value 1 for ih ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard s with value 3.5999999999999996 for r ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard z with value 1 for ih ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard y with value 2 for eh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard s with value 3.5999999999999996 for r ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard y with value 2 for pr ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard s with value 3.5999999999999996 for eh ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard s with value 3.6000000000000005 for ax ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard zh with value 2 for p ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 2 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 4 for r ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 1 for axl ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard s with value 3.6000000000000005 for ax ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard sh with value 2 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for axl ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 105 public <irreparable> = (((sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]) | (sil p (sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]))) ((([(<any_Vx_z_p_z_ih_noSlide> z)] | [(z <any_Vx_z_p_z_ih_noSlide>)]) ([(<any_Cx_z_p_z_r> z)] | [(z <any_Cx_z_p_z_r>)])) (ih | ((<any_Vx_z_p_z_ih_noSlide> z) | (z <any_Vx_z_p_z_ih_noSlide>)))) (([(<any_Cx_s_z_r> s)] | [(s <any_Cx_s_z_r>)]) (r | ((<any_Cx_s_z_r> s) | (s <any_Cx_s_z_r>)))) ((([(<any_Vx_y_s_eh_noSlide> y)] | [(y <any_Vx_y_s_eh_noSlide>)]) ([(<any_Cx_y_s_pr_r> y)] | [(y <any_Cx_y_s_pr_r>)])) (eh | ((<any_Vx_y_s_eh_noSlide> y) | (y <any_Vx_y_s_eh_noSlide>)))) (([(<any_Cx_y_y_pr_ax> y)] | [(y <any_Cx_y_y_pr_ax>)]) (pr | ((<any_Cx_y_y_pr_ax> y) | (y <any_Cx_y_y_pr_ax>)))) (([(<any_Cx_s_y_ax_b_pr> s)] | [(s <any_Cx_s_y_ax_b_pr>)]) (ax | ((<any_Cx_s_y_ax_b_pr> s) | (s <any_Cx_s_y_ax_b_pr>)))) (([(<any_Cx_sh_s_b_ax> sh)] | [(sh <any_Cx_sh_s_b_ax>)]) (b | ((<any_Cx_sh_s_b_axl_ax> sh) | (sh <any_Cx_sh_s_b_axl_ax>)))) (([(<any_Cx_sh_sh_axl_b> sh)] | [(sh <any_Cx_sh_sh_axl_b>)]) (axl | ((<any_Cx_sh_sh_axl_b> sh) | (sh <any_Cx_sh_sh_axl_b>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_sh_axl_n> n)] | [(n <any_Cx_sh_axl_n>)]) sil))
Running scan for frate = 91
Considering guard z with value 1 for ih ...
candidateGuards = map[z:true]
Picking guard, z


Considering guard s with value 3.5999999999999996 for r ...
candidateGuards = map[s:true]
Picking guard, s

frate, target rule = 105 public <irreparable> = (((sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]) | (sil p (sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]))) ((([(<any_Vx_z_p_z_ih_noSlide> z)] | [(z <any_Vx_z_p_z_ih_noSlide>)]) ([(<any_Cx_z_p_z_r> z)] | [(z <any_Cx_z_p_z_r>)])) (ih | ((<any_Vx_z_p_z_ih_noSlide> z) | (z <any_Vx_z_p_z_ih_noSlide>)))) (([(<any_Cx_s_z_r> s)] | [(s <any_Cx_s_z_r>)]) (r | ((<any_Cx_s_z_r> s) | (s <any_Cx_s_z_r>)))) ((([(<any_Vx_s_s_eh_noSlide> s)] | [(s <any_Vx_s_s_eh_noSlide>)]) ([(<any_Cx_s_s_p_r> s)] | [(s <any_Cx_s_s_p_r>)])) (eh | ((<any_Vx_s_s_eh_noSlide> s) | (s <any_Vx_s_s_eh_noSlide>)))) (([(<any_Cx_zh_s_p_r> zh)] | [(zh <any_Cx_zh_s_p_r>)]) (p | ((<any_Cx_zh_s_p_r> zh) | (zh <any_Cx_zh_s_p_r>)))) (([(<any_Cx_zh_zh_r_ax_p> zh)] | [(zh <any_Cx_zh_zh_r_ax_p>)]) (r | ((<any_Cx_zh_zh_r_ax_p> zh) | (zh <any_Cx_zh_zh_r_ax_p>)))) (([(<any_Cx_s_zh_ax_b_r> s)] | [(s <any_Cx_s_zh_ax_b_r>)]) (ax | ((<any_Cx_s_zh_ax_b_r> s) | (s <any_Cx_s_zh_ax_b_r>)))) (([(<any_Cx_sh_s_b_ax> sh)] | [(sh <any_Cx_sh_s_b_ax>)]) (b | ((<any_Cx_sh_s_b_axl_ax> sh) | (sh <any_Cx_sh_s_b_axl_ax>)))) (([(<any_Cx_sh_sh_axl_b> sh)] | [(sh <any_Cx_sh_sh_axl_b>)]) (axl | ((<any_Cx_sh_sh_axl_b> sh) | (sh <any_Cx_sh_sh_axl_b>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_sh_axl_p> p)] | [(p <any_Cx_sh_axl_p>)]) sil))
Running scan for frate = 91
Considering guard z with value 1 for ih ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard s with value 3.5999999999999996 for r ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard s with value 3.5999999999999996 for r ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard s with value 3.5999999999999996 for eh ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard s with value 3.5999999999999996 for eh ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard jh with value 2 for p ...
Considering guard zh with value 2 for p ...
candidateGuards = map[jh:true zh:true]
Picking guard, jh

Considering guard zh with value 2 for p ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for ax ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 4 for r ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard z with value 2 for r ...
Considering guard y with value 2 for r ...
candidateGuards = map[y:true z:true]
Picking guard, z

Considering guard s with value 3.6000000000000005 for ax ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard sh with value 2 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for axl ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard y with value 2 for eh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 2 for pr ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard s with value 3.6000000000000005 for ax ...
candidateGuards = map[s:true]
Picking guard, s


Considering guard sh with value 2 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for axl ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 91 public <irreparable> = (((sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]) | (sil p (sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]))) ((([(<any_Vx_z_p_z_ih_noSlide> z)] | [(z <any_Vx_z_p_z_ih_noSlide>)]) ([(<any_Cx_z_p_z_r> z)] | [(z <any_Cx_z_p_z_r>)])) (ih | ((<any_Vx_z_p_z_ih_noSlide> z) | (z <any_Vx_z_p_z_ih_noSlide>)))) (([(<any_Cx_s_z_r> s)] | [(s <any_Cx_s_z_r>)]) (r | ((<any_Cx_s_z_r> s) | (s <any_Cx_s_z_r>)))) ((([(<any_Vx_s_s_eh_noSlide> s)] | [(s <any_Vx_s_s_eh_noSlide>)]) ([(<any_Cx_s_s_p_r> s)] | [(s <any_Cx_s_s_p_r>)])) (eh | ((<any_Vx_s_s_eh_noSlide> s) | (s <any_Vx_s_s_eh_noSlide>)))) (([(<any_Cx_zh_s_p_r> zh)] | [(zh <any_Cx_zh_s_p_r>)]) (p | ((<any_Cx_zh_s_p_r> zh) | (zh <any_Cx_zh_s_p_r>)))) (([(<any_Cx_zh_zh_r_ax_p> zh)] | [(zh <any_Cx_zh_zh_r_ax_p>)]) (r | ((<any_Cx_zh_zh_r_ax_p> zh) | (zh <any_Cx_zh_zh_r_ax_p>)))) (([(<any_Cx_s_zh_ax_b_r> s)] | [(s <any_Cx_s_zh_ax_b_r>)]) (ax | ((<any_Cx_s_zh_ax_b_r> s) | (s <any_Cx_s_zh_ax_b_r>)))) (([(<any_Cx_sh_s_b_ax> sh)] | [(sh <any_Cx_sh_s_b_ax>)]) (b | ((<any_Cx_sh_s_b_axl_ax> sh) | (sh <any_Cx_sh_s_b_axl_ax>)))) (([(<any_Cx_sh_sh_axl_b> sh)] | [(sh <any_Cx_sh_sh_axl_b>)]) (axl | ((<any_Cx_sh_sh_axl_b> sh) | (sh <any_Cx_sh_sh_axl_b>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_sh_axl_m> m)] | [(m <any_Cx_sh_axl_m>)]) sil))
Running scan for frate = 80
Considering guard z with value 1 for ih ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard s with value 3.5999999999999996 for r ...
candidateGuards = map[s:true]
Picking guard, s


Considering guard s with value 3.5999999999999996 for eh ...
candidateGuards = map[s:true]
Picking guard, s

frate, target rule = 91 public <irreparable> = (((sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]) | (sil p (sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]))) ((([(<any_Vx_z_p_z_ih_noSlide> z)] | [(z <any_Vx_z_p_z_ih_noSlide>)]) ([(<any_Cx_z_p_z_r> z)] | [(z <any_Cx_z_p_z_r>)])) (ih | ((<any_Vx_z_p_z_ih_noSlide> z) | (z <any_Vx_z_p_z_ih_noSlide>)))) (([(<any_Cx_s_z_r> s)] | [(s <any_Cx_s_z_r>)]) (r | ((<any_Cx_s_z_r> s) | (s <any_Cx_s_z_r>)))) ((([(<any_Vx_y_s_eh_noSlide> y)] | [(y <any_Vx_y_s_eh_noSlide>)]) ([(<any_Cx_y_s_pr_r> y)] | [(y <any_Cx_y_s_pr_r>)])) (eh | ((<any_Vx_y_s_eh_noSlide> y) | (y <any_Vx_y_s_eh_noSlide>)))) (([(<any_Cx_y_y_pr_ax> y)] | [(y <any_Cx_y_y_pr_ax>)]) (pr | ((<any_Cx_y_y_pr_ax> y) | (y <any_Cx_y_y_pr_ax>)))) (([(<any_Cx_s_y_ax_b_pr> s)] | [(s <any_Cx_s_y_ax_b_pr>)]) (ax | ((<any_Cx_s_y_ax_b_pr> s) | (s <any_Cx_s_y_ax_b_pr>)))) (([(<any_Cx_sh_s_b_ax> sh)] | [(sh <any_Cx_sh_s_b_ax>)]) (b | ((<any_Cx_sh_s_b_axl_ax> sh) | (sh <any_Cx_sh_s_b_axl_ax>)))) (([(<any_Cx_sh_sh_axl_b> sh)] | [(sh <any_Cx_sh_sh_axl_b>)]) (axl | ((<any_Cx_sh_sh_axl_b> sh) | (sh <any_Cx_sh_sh_axl_b>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_sh_axl_ng> ng)] | [(ng <any_Cx_sh_axl_ng>)]) sil))
Running scan for frate = 80
Considering guard zh with value 2 for p ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard z with value 1 for ih ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard zh with value 4 for r ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard s with value 3.5999999999999996 for r ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard s with value 3.6000000000000005 for ax ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard sh with value 2 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard y with value 2 for eh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 1 for axl ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard y with value 2 for pr ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard s with value 3.6000000000000005 for ax ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard sh with value 2 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for axl ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard s with value 3.6000000000000005 for ax ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard s with value 3.6000000000000005 for ax ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard sh with value 2 for b ...
Considering guard zh with value 2 for b ...
Considering guard jh with value 2 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, sh

Considering guard sh with value 2 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh



frate, target rule = 80 public <irreparable> = (((sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]) | (sil p (sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]))) ((([(<any_Vx_z_p_z_ih_noSlide> z)] | [(z <any_Vx_z_p_z_ih_noSlide>)]) ([(<any_Cx_z_p_z_r> z)] | [(z <any_Cx_z_p_z_r>)])) (ih | ((<any_Vx_z_p_z_ih_noSlide> z) | (z <any_Vx_z_p_z_ih_noSlide>)))) (([(<any_Cx_s_z_r> s)] | [(s <any_Cx_s_z_r>)]) (r | ((<any_Cx_s_z_r> s) | (s <any_Cx_s_z_r>)))) ((([(<any_Vx_y_s_eh_noSlide> y)] | [(y <any_Vx_y_s_eh_noSlide>)]) ([(<any_Cx_y_s_pr_r> y)] | [(y <any_Cx_y_s_pr_r>)])) (eh | ((<any_Vx_y_s_eh_noSlide> y) | (y <any_Vx_y_s_eh_noSlide>)))) (([(<any_Cx_y_y_pr_ax> y)] | [(y <any_Cx_y_y_pr_ax>)]) (pr | ((<any_Cx_y_y_pr_ax> y) | (y <any_Cx_y_y_pr_ax>)))) (([(<any_Cx_s_y_ax_b_pr> s)] | [(s <any_Cx_s_y_ax_b_pr>)]) (ax | ((<any_Cx_s_y_ax_b_pr> s) | (s <any_Cx_s_y_ax_b_pr>)))) (([(<any_Cx_sh_s_b_ax> sh)] | [(sh <any_Cx_sh_s_b_ax>)]) (b | ((<any_Cx_sh_s_b_axl_ax> sh) | (sh <any_Cx_sh_s_b_axl_ax>)))) (([(<any_Cx_sh_sh_axl_b> sh)] | [(sh <any_Cx_sh_sh_axl_b>)]) (axl | ((<any_Cx_sh_sh_axl_b> sh) | (sh <any_Cx_sh_sh_axl_b>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_sh_axl_n> n)] | [(n <any_Cx_sh_axl_n>)]) sil))
Running scan for frate = 72
Considering guard z with value 1 for ih ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard s with value 3.5999999999999996 for r ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard y with value 2 for eh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 2 for pr ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard s with value 3.6000000000000005 for ax ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard sh with value 2 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for axl ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 72 public <irreparable> = (((sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]) | (sil p (sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]))) ((([(<any_Vx_z_p_z_ih_noSlide> z)] | [(z <any_Vx_z_p_z_ih_noSlide>)]) ([(<any_Cx_z_p_z_r> z)] | [(z <any_Cx_z_p_z_r>)])) (ih | ((<any_Vx_z_p_z_ih_noSlide> z) | (z <any_Vx_z_p_z_ih_noSlide>)))) (([(<any_Cx_s_z_r> s)] | [(s <any_Cx_s_z_r>)]) (r | ((<any_Cx_s_z_r> s) | (s <any_Cx_s_z_r>)))) ((([(<any_Vx_y_s_eh_noSlide> y)] | [(y <any_Vx_y_s_eh_noSlide>)]) ([(<any_Cx_y_s_pr_r> y)] | [(y <any_Cx_y_s_pr_r>)])) (eh | ((<any_Vx_y_s_eh_noSlide> y) | (y <any_Vx_y_s_eh_noSlide>)))) (([(<any_Cx_y_y_pr_ax> y)] | [(y <any_Cx_y_y_pr_ax>)]) (pr | ((<any_Cx_y_y_pr_ax> y) | (y <any_Cx_y_y_pr_ax>)))) (([(<any_Cx_s_y_ax_b_pr> s)] | [(s <any_Cx_s_y_ax_b_pr>)]) (ax | ((<any_Cx_s_y_ax_b_pr> s) | (s <any_Cx_s_y_ax_b_pr>)))) (([(<any_Cx_sh_s_b_ax> sh)] | [(sh <any_Cx_sh_s_b_ax>)]) (b | ((<any_Cx_sh_s_b_axl_ax> sh) | (sh <any_Cx_sh_s_b_axl_ax>)))) (([(<any_Cx_sh_sh_axl_b> sh)] | [(sh <any_Cx_sh_sh_axl_b>)]) (axl | ((<any_Cx_sh_sh_axl_b> sh) | (sh <any_Cx_sh_sh_axl_b>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_sh_axl_thr> thr)] | [(thr <any_Cx_sh_axl_thr>)]) sil))
Considering guard sh with value 2 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for axl ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 105 public <irreparable> = (((sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]) | (sil p (sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]))) ((([(<any_Vx_z_p_z_ih_noSlide> z)] | [(z <any_Vx_z_p_z_ih_noSlide>)]) ([(<any_Cx_z_p_z_r> z)] | [(z <any_Cx_z_p_z_r>)])) (ih | ((<any_Vx_z_p_z_ih_noSlide> z) | (z <any_Vx_z_p_z_ih_noSlide>)))) (([(<any_Cx_s_z_r> s)] | [(s <any_Cx_s_z_r>)]) (r | ((<any_Cx_s_z_r> s) | (s <any_Cx_s_z_r>)))) ((([(<any_Vx_s_s_eh_noSlide> s)] | [(s <any_Vx_s_s_eh_noSlide>)]) ([(<any_Cx_s_s_p_r> s)] | [(s <any_Cx_s_s_p_r>)])) (eh | ((<any_Vx_s_s_eh_noSlide> s) | (s <any_Vx_s_s_eh_noSlide>)))) (([(<any_Cx_jh_s_p_ax> jh)] | [(jh <any_Cx_jh_s_p_ax>)]) (p | ((<any_Cx_jh_s_p_ax> jh) | (jh <any_Cx_jh_s_p_ax>)))) (([(<any_Cx_zh_jh_ax_r_p> zh)] | [(zh <any_Cx_zh_jh_ax_r_p>)]) (ax | ((<any_Cx_zh_jh_ax_r_p> zh) | (zh <any_Cx_zh_jh_ax_r_p>)))) (([(<any_Cx_z_zh_r_ax_ax> z)] | [(z <any_Cx_z_zh_r_ax_ax>)]) (r | ((<any_Cx_z_zh_r_ax_ax> z) | (z <any_Cx_z_zh_r_ax_ax>)))) (([(<any_Cx_s_z_ax_b_r> s)] | [(s <any_Cx_s_z_ax_b_r>)]) (ax | ((<any_Cx_s_z_ax_b_r> s) | (s <any_Cx_s_z_ax_b_r>)))) (([(<any_Cx_sh_s_b_ax> sh)] | [(sh <any_Cx_sh_s_b_ax>)]) (b | ((<any_Cx_sh_s_b_axl_ax> sh) | (sh <any_Cx_sh_s_b_axl_ax>)))) (([(<any_Cx_sh_sh_axl_b> sh)] | [(sh <any_Cx_sh_sh_axl_b>)]) (axl | ((<any_Cx_sh_sh_axl_b> sh) | (sh <any_Cx_sh_sh_axl_b>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_sh_axl_f> f)] | [(f <any_Cx_sh_axl_f>)]) sil))
Running scan for frate = 91
Considering guard z with value 1 for ih ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard s with value 3.5999999999999996 for r ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard s with value 3.5999999999999996 for eh ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard zh with value 2 for p ...
Considering guard jh with value 2 for p ...
candidateGuards = map[jh:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for ax ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard z with value 2 for r ...
Considering guard y with value 2 for r ...
candidateGuards = map[y:true z:true]
Picking guard, z

Considering guard s with value 3.6000000000000005 for ax ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard sh with value 2 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for axl ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 91 public <irreparable> = (((sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]) | (sil p (sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]))) ((([(<any_Vx_z_p_z_ih_noSlide> z)] | [(z <any_Vx_z_p_z_ih_noSlide>)]) ([(<any_Cx_z_p_z_r> z)] | [(z <any_Cx_z_p_z_r>)])) (ih | ((<any_Vx_z_p_z_ih_noSlide> z) | (z <any_Vx_z_p_z_ih_noSlide>)))) (([(<any_Cx_s_z_r> s)] | [(s <any_Cx_s_z_r>)]) (r | ((<any_Cx_s_z_r> s) | (s <any_Cx_s_z_r>)))) ((([(<any_Vx_s_s_eh_noSlide> s)] | [(s <any_Vx_s_s_eh_noSlide>)]) ([(<any_Cx_s_s_p_r> s)] | [(s <any_Cx_s_s_p_r>)])) (eh | ((<any_Vx_s_s_eh_noSlide> s) | (s <any_Vx_s_s_eh_noSlide>)))) (([(<any_Cx_zh_s_p_ax> zh)] | [(zh <any_Cx_zh_s_p_ax>)]) (p | ((<any_Cx_zh_s_p_ax> zh) | (zh <any_Cx_zh_s_p_ax>)))) (([(<any_Cx_zh_zh_ax_r_p> zh)] | [(zh <any_Cx_zh_zh_ax_r_p>)]) (ax | ((<any_Cx_zh_zh_ax_r_p> zh) | (zh <any_Cx_zh_zh_ax_r_p>)))) (([(<any_Cx_z_zh_r_ax_ax> z)] | [(z <any_Cx_z_zh_r_ax_ax>)]) (r | ((<any_Cx_z_zh_r_ax_ax> z) | (z <any_Cx_z_zh_r_ax_ax>)))) (([(<any_Cx_s_z_ax_b_r> s)] | [(s <any_Cx_s_z_ax_b_r>)]) (ax | ((<any_Cx_s_z_ax_b_r> s) | (s <any_Cx_s_z_ax_b_r>)))) (([(<any_Cx_sh_s_b_ax> sh)] | [(sh <any_Cx_sh_s_b_ax>)]) (b | ((<any_Cx_sh_s_b_axl_ax> sh) | (sh <any_Cx_sh_s_b_axl_ax>)))) (([(<any_Cx_sh_sh_axl_b> sh)] | [(sh <any_Cx_sh_sh_axl_b>)]) (axl | ((<any_Cx_sh_sh_axl_b> sh) | (sh <any_Cx_sh_sh_axl_b>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_sh_axl_f> f)] | [(f <any_Cx_sh_axl_f>)]) sil))
Running scan for frate = 80
Considering guard z with value 1 for ih ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard s with value 3.5999999999999996 for r ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard s with value 3.5999999999999996 for eh ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard jh with value 2 for p ...
Considering guard zh with value 2 for p ...
candidateGuards = map[jh:true zh:true]
Picking guard, jh

Considering guard zh with value 2 for ax ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard z with value 2 for r ...
Considering guard y with value 2 for r ...
candidateGuards = map[y:true z:true]
Picking guard, z

Considering guard s with value 3.6000000000000005 for ax ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard sh with value 2 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for axl ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 80 public <irreparable> = (((sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]) | (sil p (sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]))) ((([(<any_Vx_z_p_z_ih_noSlide> z)] | [(z <any_Vx_z_p_z_ih_noSlide>)]) ([(<any_Cx_z_p_z_r> z)] | [(z <any_Cx_z_p_z_r>)])) (ih | ((<any_Vx_z_p_z_ih_noSlide> z) | (z <any_Vx_z_p_z_ih_noSlide>)))) (([(<any_Cx_s_z_r> s)] | [(s <any_Cx_s_z_r>)]) (r | ((<any_Cx_s_z_r> s) | (s <any_Cx_s_z_r>)))) ((([(<any_Vx_s_s_eh_noSlide> s)] | [(s <any_Vx_s_s_eh_noSlide>)]) ([(<any_Cx_s_s_p_r> s)] | [(s <any_Cx_s_s_p_r>)])) (eh | ((<any_Vx_s_s_eh_noSlide> s) | (s <any_Vx_s_s_eh_noSlide>)))) (([(<any_Cx_jh_s_p_ax> jh)] | [(jh <any_Cx_jh_s_p_ax>)]) (p | ((<any_Cx_jh_s_p_ax> jh) | (jh <any_Cx_jh_s_p_ax>)))) (([(<any_Cx_zh_jh_ax_r_p> zh)] | [(zh <any_Cx_zh_jh_ax_r_p>)]) (ax | ((<any_Cx_zh_jh_ax_r_p> zh) | (zh <any_Cx_zh_jh_ax_r_p>)))) (([(<any_Cx_z_zh_r_ax_ax> z)] | [(z <any_Cx_z_zh_r_ax_ax>)]) (r | ((<any_Cx_z_zh_r_ax_ax> z) | (z <any_Cx_z_zh_r_ax_ax>)))) (([(<any_Cx_s_z_ax_b_r> s)] | [(s <any_Cx_s_z_ax_b_r>)]) (ax | ((<any_Cx_s_z_ax_b_r> s) | (s <any_Cx_s_z_ax_b_r>)))) (([(<any_Cx_sh_s_b_ax> sh)] | [(sh <any_Cx_sh_s_b_ax>)]) (b | ((<any_Cx_sh_s_b_axl_ax> sh) | (sh <any_Cx_sh_s_b_axl_ax>)))) (([(<any_Cx_sh_sh_axl_b> sh)] | [(sh <any_Cx_sh_sh_axl_b>)]) (axl | ((<any_Cx_sh_sh_axl_b> sh) | (sh <any_Cx_sh_sh_axl_b>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_sh_axl_m> m)] | [(m <any_Cx_sh_axl_m>)]) sil))
Running scan for frate = 72
Considering guard z with value 1 for ih ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard s with value 3.5999999999999996 for r ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard s with value 3.5999999999999996 for eh ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard zh with value 2 for p ...
Considering guard jh with value 2 for p ...
candidateGuards = map[jh:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for ax ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard y with value 2 for r ...
Considering guard z with value 2 for r ...
candidateGuards = map[y:true z:true]
Picking guard, y

Considering guard s with value 3.6000000000000005 for ax ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard sh with value 2 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for axl ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 72 public <irreparable> = (((sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]) | (sil p (sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]))) ((([(<any_Vx_z_p_z_ih_noSlide> z)] | [(z <any_Vx_z_p_z_ih_noSlide>)]) ([(<any_Cx_z_p_z_r> z)] | [(z <any_Cx_z_p_z_r>)])) (ih | ((<any_Vx_z_p_z_ih_noSlide> z) | (z <any_Vx_z_p_z_ih_noSlide>)))) (([(<any_Cx_s_z_r> s)] | [(s <any_Cx_s_z_r>)]) (r | ((<any_Cx_s_z_r> s) | (s <any_Cx_s_z_r>)))) ((([(<any_Vx_s_s_eh_noSlide> s)] | [(s <any_Vx_s_s_eh_noSlide>)]) ([(<any_Cx_s_s_p_r> s)] | [(s <any_Cx_s_s_p_r>)])) (eh | ((<any_Vx_s_s_eh_noSlide> s) | (s <any_Vx_s_s_eh_noSlide>)))) (([(<any_Cx_zh_s_p_ax> zh)] | [(zh <any_Cx_zh_s_p_ax>)]) (p | ((<any_Cx_zh_s_p_ax> zh) | (zh <any_Cx_zh_s_p_ax>)))) (([(<any_Cx_zh_zh_ax_r_p> zh)] | [(zh <any_Cx_zh_zh_ax_r_p>)]) (ax | ((<any_Cx_zh_zh_ax_r_p> zh) | (zh <any_Cx_zh_zh_ax_r_p>)))) (([(<any_Cx_y_zh_r_ax_ax> y)] | [(y <any_Cx_y_zh_r_ax_ax>)]) (r | ((<any_Cx_y_zh_r_ax_ax> y) | (y <any_Cx_y_zh_r_ax_ax>)))) (([(<any_Cx_s_y_ax_b_r> s)] | [(s <any_Cx_s_y_ax_b_r>)]) (ax | ((<any_Cx_s_y_ax_b_r> s) | (s <any_Cx_s_y_ax_b_r>)))) (([(<any_Cx_sh_s_b_ax> sh)] | [(sh <any_Cx_sh_s_b_ax>)]) (b | ((<any_Cx_sh_s_b_axl_ax> sh) | (sh <any_Cx_sh_s_b_axl_ax>)))) (([(<any_Cx_sh_sh_axl_b> sh)] | [(sh <any_Cx_sh_sh_axl_b>)]) (axl | ((<any_Cx_sh_sh_axl_b> sh) | (sh <any_Cx_sh_sh_axl_b>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_sh_axl_f> f)] | [(f <any_Cx_sh_axl_f>)]) sil))

frate, target rule = 80 public <irreparable> = (((sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]) | (sil p (sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]))) ((([(<any_Vx_z_p_z_ih_noSlide> z)] | [(z <any_Vx_z_p_z_ih_noSlide>)]) ([(<any_Cx_z_p_z_r> z)] | [(z <any_Cx_z_p_z_r>)])) (ih | ((<any_Vx_z_p_z_ih_noSlide> z) | (z <any_Vx_z_p_z_ih_noSlide>)))) (([(<any_Cx_s_z_r> s)] | [(s <any_Cx_s_z_r>)]) (r | ((<any_Cx_s_z_r> s) | (s <any_Cx_s_z_r>)))) ((([(<any_Vx_s_s_eh_noSlide> s)] | [(s <any_Vx_s_s_eh_noSlide>)]) ([(<any_Cx_s_s_p_r> s)] | [(s <any_Cx_s_s_p_r>)])) (eh | ((<any_Vx_s_s_eh_noSlide> s) | (s <any_Vx_s_s_eh_noSlide>)))) (([(<any_Cx_zh_s_p_r> zh)] | [(zh <any_Cx_zh_s_p_r>)]) (p | ((<any_Cx_zh_s_p_r> zh) | (zh <any_Cx_zh_s_p_r>)))) (([(<any_Cx_zh_zh_r_ax_p> zh)] | [(zh <any_Cx_zh_zh_r_ax_p>)]) (r | ((<any_Cx_zh_zh_r_ax_p> zh) | (zh <any_Cx_zh_zh_r_ax_p>)))) (([(<any_Cx_s_zh_ax_b_r> s)] | [(s <any_Cx_s_zh_ax_b_r>)]) (ax | ((<any_Cx_s_zh_ax_b_r> s) | (s <any_Cx_s_zh_ax_b_r>)))) (([(<any_Cx_sh_s_b_ax> sh)] | [(sh <any_Cx_sh_s_b_ax>)]) (b | ((<any_Cx_sh_s_b_axl_ax> sh) | (sh <any_Cx_sh_s_b_axl_ax>)))) (([(<any_Cx_sh_sh_axl_b> sh)] | [(sh <any_Cx_sh_sh_axl_b>)]) (axl | ((<any_Cx_sh_sh_axl_b> sh) | (sh <any_Cx_sh_sh_axl_b>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_sh_axl_thr> thr)] | [(thr <any_Cx_sh_axl_thr>)]) sil))
Running scan for frate = 72
Considering guard z with value 1 for ih ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard s with value 3.5999999999999996 for r ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard s with value 3.5999999999999996 for eh ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard zh with value 2 for p ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 4 for r ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard s with value 3.6000000000000005 for ax ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard sh with value 2 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for axl ...
candidateGuards = map[sh:true]
Picking guard, sh


frate, target rule = 72 public <irreparable> = (((sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]) | (sil p (sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]))) ((([(<any_Vx_z_p_z_ih_noSlide> z)] | [(z <any_Vx_z_p_z_ih_noSlide>)]) ([(<any_Cx_z_p_z_r> z)] | [(z <any_Cx_z_p_z_r>)])) (ih | ((<any_Vx_z_p_z_ih_noSlide> z) | (z <any_Vx_z_p_z_ih_noSlide>)))) (([(<any_Cx_s_z_r> s)] | [(s <any_Cx_s_z_r>)]) (r | ((<any_Cx_s_z_r> s) | (s <any_Cx_s_z_r>)))) ((([(<any_Vx_s_s_eh_noSlide> s)] | [(s <any_Vx_s_s_eh_noSlide>)]) ([(<any_Cx_s_s_p_r> s)] | [(s <any_Cx_s_s_p_r>)])) (eh | ((<any_Vx_s_s_eh_noSlide> s) | (s <any_Vx_s_s_eh_noSlide>)))) (([(<any_Cx_zh_s_p_r> zh)] | [(zh <any_Cx_zh_s_p_r>)]) (p | ((<any_Cx_zh_s_p_r> zh) | (zh <any_Cx_zh_s_p_r>)))) (([(<any_Cx_zh_zh_r_ax_p> zh)] | [(zh <any_Cx_zh_zh_r_ax_p>)]) (r | ((<any_Cx_zh_zh_r_ax_p> zh) | (zh <any_Cx_zh_zh_r_ax_p>)))) (([(<any_Cx_s_zh_ax_b_r> s)] | [(s <any_Cx_s_zh_ax_b_r>)]) (ax | ((<any_Cx_s_zh_ax_b_r> s) | (s <any_Cx_s_zh_ax_b_r>)))) (([(<any_Cx_sh_s_b_ax> sh)] | [(sh <any_Cx_sh_s_b_ax>)]) (b | ((<any_Cx_sh_s_b_axl_ax> sh) | (sh <any_Cx_sh_s_b_axl_ax>)))) (([(<any_Cx_sh_sh_axl_b> sh)] | [(sh <any_Cx_sh_sh_axl_b>)]) (axl | ((<any_Cx_sh_sh_axl_b> sh) | (sh <any_Cx_sh_sh_axl_b>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_sh_axl_f> f)] | [(f <any_Cx_sh_axl_f>)]) sil))
frate, target rule = 72 public <irreparable> = (((sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]) | (sil p (sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]))) ((([(<any_Vx_z_p_z_ih_noSlide> z)] | [(z <any_Vx_z_p_z_ih_noSlide>)]) ([(<any_Cx_z_p_z_r> z)] | [(z <any_Cx_z_p_z_r>)])) (ih | ((<any_Vx_z_p_z_ih_noSlide> z) | (z <any_Vx_z_p_z_ih_noSlide>)))) (([(<any_Cx_s_z_r> s)] | [(s <any_Cx_s_z_r>)]) (r | ((<any_Cx_s_z_r> s) | (s <any_Cx_s_z_r>)))) ((([(<any_Vx_s_s_eh_noSlide> s)] | [(s <any_Vx_s_s_eh_noSlide>)]) ([(<any_Cx_s_s_p_r> s)] | [(s <any_Cx_s_s_p_r>)])) (eh | ((<any_Vx_s_s_eh_noSlide> s) | (s <any_Vx_s_s_eh_noSlide>)))) (([(<any_Cx_zh_s_p_r> zh)] | [(zh <any_Cx_zh_s_p_r>)]) (p | ((<any_Cx_zh_s_p_r> zh) | (zh <any_Cx_zh_s_p_r>)))) (([(<any_Cx_zh_zh_r_ax_p> zh)] | [(zh <any_Cx_zh_zh_r_ax_p>)]) (r | ((<any_Cx_zh_zh_r_ax_p> zh) | (zh <any_Cx_zh_zh_r_ax_p>)))) (([(<any_Cx_s_zh_ax_b_r> s)] | [(s <any_Cx_s_zh_ax_b_r>)]) (ax | ((<any_Cx_s_zh_ax_b_r> s) | (s <any_Cx_s_zh_ax_b_r>)))) (([(<any_Cx_sh_s_b_ax_ax> sh)] | [(sh <any_Cx_sh_s_b_ax_ax>)]) (b | ((<any_Cx_sh_s_b_ax_ax> sh) | (sh <any_Cx_sh_s_b_ax_ax>)))) (([(<any_Cx_sh_sh_ax_b> sh)] | [(sh <any_Cx_sh_sh_ax_b>)]) (ax | ((<any_Cx_sh_sh_ax_l_b> sh) | (sh <any_Cx_sh_sh_ax_l_b>)))) (([(<any_Cx_sh_sh_l_ax> sh)] | [(sh <any_Cx_sh_sh_l_ax>)]) (l | ((<any_Cx_sh_sh_l_ax> sh) | (sh <any_Cx_sh_sh_l_ax>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_d> d)] | [(d <any_Cx_sh_l_d>)]) sil))

results =
{72 []}
{80 [{sil 193 195} {ih 196 198} {r 199 201} {eh 202 204} {p 205 207} {r 208 210} {ax 211 213} {b 214 216} {axl 217 219} {sil 220 225}]}
{91 [{sil 0 93} {ih 94 109} {r 110 122} {eh 123 128} {p 129 141} {r 142 144} {ax 145 161} {b 162 167} {axl 168 185} {sil 186 256}]}
{105 [{sil 0 108} {ih 109 126} {r 127 142} {eh 143 149} {p 150 162} {r 163 165} {ax 166 186} {b 187 194} {axl 195 213} {sil 214 298}]}
{125 [{sil 3 130} {iy 131 143} {z 144 146} {ih 147 151} {r 152 171} {eh 172 178} {p 179 188} {b 189 196} {zh 197 199} {ax 200 224} {b 225 232} {axl 233 254} {sil 255 356}]}

normalised results =
{72 []}
{80 [{sil 193 195} {ih 245 245} {r 249 249} {eh 253 253} {p 256 256} {r 260 260} {ax 264 264} {b 268 268} {axl 271 271} {sil 275 281}]}
{91 [{sil 0 93} {ih 103 120} {r 121 134} {eh 135 141} {p 142 155} {r 156 156} {ax 159 177} {b 178 184} {axl 185 203} {sil 204 281}]}
{105 [{sil 0 108} {ih 104 120} {r 121 135} {eh 136 142} {p 143 154} {r 155 155} {ax 158 177} {b 178 185} {axl 186 203} {sil 204 284}]}
{125 [{sil 3 130} {iy 105 114} {z 115 115} {ih 118 121} {r 122 137} {eh 138 142} {p 143 150} {b 151 157} {zh 158 158} {ax 160 179} {b 180 186} {axl 186 203} {sil 204 285}]}

Mapped result =
result 0 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 1 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 2 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 3 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 4 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false

Rules =
rule 0 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Vx_ih_z_p_noSlide {[{ah} {ax} {iy} {aa} {ae} {y} {ao} {eh} {oh} {uw} {uh}]}}}]} {[{{any_Vx_ih_z_p_noSlide {[{ah} {ax} {iy} {aa} {ae} {y} {ao} {eh} {oh} {uw} {uh}]}}} {z}]}]}} {{[{[{z} {{any_Cx_ih_z_p {[{b} {m} {w} {d} {g} {v} {ch} {hh} {l} {dh} {zh}]}}}]} {[{{any_Cx_ih_z_p {[{b} {m} {w} {d} {g} {v} {ch} {hh} {l} {dh} {zh}]}}} {z}]}]}}]}}
Phoneme rule:
guard: z phoneme: ih
rule: {[{[{[{{[{{any_Vx_z_p_z_ih_noSlide {[{y} {aa} {ax} {uh} {iy} {uw} {oh} {eh} {ae} {ah} {ao}]}}} {z}]}} {{[{z} {{any_Vx_z_p_z_ih_noSlide {[{y} {aa} {ax} {uh} {iy} {uw} {oh} {eh} {ae} {ah} {ao}]}}}]}}]} {[{{[{{any_Cx_z_p_z_r {[{v} {dh} {l} {zh} {b} {g} {w} {m} {d} {hh} {ch}]}}} {z}]}} {{[{z} {{any_Cx_z_p_z_r {[{v} {dh} {l} {zh} {b} {g} {w} {m} {d} {hh} {ch}]}}}]}}]}]} {[{ih} {[{[{{any_Vx_z_p_z_ih_noSlide {[{y} {aa} {ax} {uh} {iy} {uw} {oh} {eh} {ae} {ah} {ao}]}}} {z}]} {[{z} {{any_Vx_z_p_z_ih_noSlide {[{y} {aa} {ax} {uh} {iy} {uw} {oh} {eh} {ae} {ah} {ao}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: r
rule: {[{[{{[{{any_Cx_s_z_r {[{hh} {b} {l} {ch} {m} {w} {zh} {dh} {v} {d} {g}]}}} {s}]}} {{[{s} {{any_Cx_s_z_r {[{hh} {b} {l} {ch} {m} {w} {zh} {dh} {v} {d} {g}]}}}]}}]} {[{r} {[{[{{any_Cx_s_z_r {[{hh} {b} {l} {ch} {m} {w} {zh} {dh} {v} {d} {g}]}}} {s}]} {[{s} {{any_Cx_s_z_r {[{hh} {b} {l} {ch} {m} {w} {zh} {dh} {v} {d} {g}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: eh
rule: {[{[{[{{[{{any_Vx_s_s_eh_noSlide {[{ah} {ao} {ih} {ae} {ax} {iy} {oh} {uw} {uh} {y} {aa}]}}} {s}]}} {{[{s} {{any_Vx_s_s_eh_noSlide {[{ah} {ao} {ih} {ae} {ax} {iy} {oh} {uw} {uh} {y} {aa}]}}}]}}]} {[{{[{{any_Cx_s_s_p_r {[{zh} {b} {v} {d} {hh} {z} {w} {dh} {g} {l} {ch} {m}]}}} {s}]}} {{[{s} {{any_Cx_s_s_p_r {[{zh} {b} {v} {d} {hh} {z} {w} {dh} {g} {l} {ch} {m}]}}}]}}]}]} {[{eh} {[{[{{any_Vx_s_s_eh_noSlide {[{ah} {ao} {ih} {ae} {ax} {iy} {oh} {uw} {uh} {y} {aa}]}}} {s}]} {[{s} {{any_Vx_s_s_eh_noSlide {[{ah} {ao} {ih} {ae} {ax} {iy} {oh} {uw} {uh} {y} {aa}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: p
rule: {[{[{{[{{any_Cx_zh_s_p_r {[{d} {v} {z} {m} {w} {dh} {ch} {hh} {l} {b} {g}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_s_p_r {[{d} {v} {z} {m} {w} {dh} {ch} {hh} {l} {b} {g}]}}}]}}]} {[{p} {[{[{{any_Cx_zh_s_p_r {[{d} {v} {z} {m} {w} {dh} {ch} {hh} {l} {b} {g}]}}} {zh}]} {[{zh} {{any_Cx_zh_s_p_r {[{d} {v} {z} {m} {w} {dh} {ch} {hh} {l} {b} {g}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: r
rule: {[{[{{[{{any_Cx_zh_zh_r_ax_p {[{dh} {m} {b} {l} {w} {d} {z} {hh} {ch} {v} {g}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_r_ax_p {[{dh} {m} {b} {l} {w} {d} {z} {hh} {ch} {v} {g}]}}}]}}]} {[{r} {[{[{{any_Cx_zh_zh_r_ax_p {[{dh} {m} {b} {l} {w} {d} {z} {hh} {ch} {v} {g}]}}} {zh}]} {[{zh} {{any_Cx_zh_zh_r_ax_p {[{dh} {m} {b} {l} {w} {d} {z} {hh} {ch} {v} {g}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: ax
rule: {[{[{{[{{any_Cx_s_zh_ax_b_r {[{w} {z} {g} {ch} {hh} {l} {m} {v} {dh} {d}]}}} {s}]}} {{[{s} {{any_Cx_s_zh_ax_b_r {[{w} {z} {g} {ch} {hh} {l} {m} {v} {dh} {d}]}}}]}}]} {[{ax} {[{[{{any_Cx_s_zh_ax_b_r {[{w} {z} {g} {ch} {hh} {l} {m} {v} {dh} {d}]}}} {s}]} {[{s} {{any_Cx_s_zh_ax_b_r {[{w} {z} {g} {ch} {hh} {l} {m} {v} {dh} {d}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: b
rule: {[{[{{[{{any_Cx_sh_s_b_ax {[{hh} {l} {m} {w} {d} {dh} {g} {v} {z} {zh} {ch}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_s_b_ax {[{hh} {l} {m} {w} {d} {dh} {g} {v} {z} {zh} {ch}]}}}]}}]} {[{b} {[{[{{any_Cx_sh_s_b_axl_ax {[{d} {dh} {g} {w} {l} {z} {zh} {v} {ch} {m} {hh}]}}} {sh}]} {[{sh} {{any_Cx_sh_s_b_axl_ax {[{d} {dh} {g} {w} {l} {z} {zh} {v} {ch} {m} {hh}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: axl
rule: {[{[{{[{{any_Cx_sh_sh_axl_b {[{dh} {hh} {m} {zh} {l} {z} {v} {w} {ch} {d} {g}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_axl_b {[{dh} {hh} {m} {zh} {l} {z} {v} {w} {ch} {d} {g}]}}}]}}]} {[{axl} {[{[{{any_Cx_sh_sh_axl_b {[{dh} {hh} {m} {zh} {l} {z} {v} {w} {ch} {d} {g}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_axl_b {[{dh} {hh} {m} {zh} {l} {z} {v} {w} {ch} {d} {g}]}}}]}]}]}]}
Closing rule:
guard: f
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {f}]}} {{[{f} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_axl_f {[{zh} {ch} {m} {l} {b} {dh} {w} {hh} {z} {v} {d} {g}]}}} {f}]}} {{[{f} {{any_Cx_sh_axl_f {[{zh} {ch} {m} {l} {b} {dh} {w} {hh} {z} {v} {d} {g}]}}}]}}]} {sil}]}
rule 1 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Vx_ih_z_p_noSlide {[{y} {oh} {ah} {ae} {ao} {ax} {uw} {uh} {aa} {iy} {eh}]}}}]} {[{{any_Vx_ih_z_p_noSlide {[{y} {oh} {ah} {ae} {ao} {ax} {uw} {uh} {aa} {iy} {eh}]}}} {z}]}]}} {{[{[{z} {{any_Cx_ih_z_p {[{zh} {l} {v} {g} {hh} {dh} {m} {d} {ch} {w} {b}]}}}]} {[{{any_Cx_ih_z_p {[{zh} {l} {v} {g} {hh} {dh} {m} {d} {ch} {w} {b}]}}} {z}]}]}}]}}
Phoneme rule:
guard: z phoneme: ih
rule: {[{[{[{{[{{any_Vx_z_p_z_ih_noSlide {[{ae} {ah} {ao} {uw} {aa} {uh} {y} {eh} {ax} {iy} {oh}]}}} {z}]}} {{[{z} {{any_Vx_z_p_z_ih_noSlide {[{ae} {ah} {ao} {uw} {aa} {uh} {y} {eh} {ax} {iy} {oh}]}}}]}}]} {[{{[{{any_Cx_z_p_z_r {[{dh} {d} {l} {b} {ch} {hh} {w} {m} {g} {v} {zh}]}}} {z}]}} {{[{z} {{any_Cx_z_p_z_r {[{dh} {d} {l} {b} {ch} {hh} {w} {m} {g} {v} {zh}]}}}]}}]}]} {[{ih} {[{[{{any_Vx_z_p_z_ih_noSlide {[{ae} {ah} {ao} {uw} {aa} {uh} {y} {eh} {ax} {iy} {oh}]}}} {z}]} {[{z} {{any_Vx_z_p_z_ih_noSlide {[{ae} {ah} {ao} {uw} {aa} {uh} {y} {eh} {ax} {iy} {oh}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: r
rule: {[{[{{[{{any_Cx_s_z_r {[{dh} {g} {l} {m} {w} {d} {v} {b} {ch} {hh} {zh}]}}} {s}]}} {{[{s} {{any_Cx_s_z_r {[{dh} {g} {l} {m} {w} {d} {v} {b} {ch} {hh} {zh}]}}}]}}]} {[{r} {[{[{{any_Cx_s_z_r {[{dh} {g} {l} {m} {w} {d} {v} {b} {ch} {hh} {zh}]}}} {s}]} {[{s} {{any_Cx_s_z_r {[{dh} {g} {l} {m} {w} {d} {v} {b} {ch} {hh} {zh}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: eh
rule: {[{[{[{{[{{any_Vx_s_s_eh_noSlide {[{y} {ah} {oh} {uh} {ih} {iy} {uw} {aa} {ae} {ao} {ax}]}}} {s}]}} {{[{s} {{any_Vx_s_s_eh_noSlide {[{y} {ah} {oh} {uh} {ih} {iy} {uw} {aa} {ae} {ao} {ax}]}}}]}}]} {[{{[{{any_Cx_s_s_p_r {[{dh} {m} {zh} {d} {hh} {l} {w} {b} {v} {ch} {g} {z}]}}} {s}]}} {{[{s} {{any_Cx_s_s_p_r {[{dh} {m} {zh} {d} {hh} {l} {w} {b} {v} {ch} {g} {z}]}}}]}}]}]} {[{eh} {[{[{{any_Vx_s_s_eh_noSlide {[{y} {ah} {oh} {uh} {ih} {iy} {uw} {aa} {ae} {ao} {ax}]}}} {s}]} {[{s} {{any_Vx_s_s_eh_noSlide {[{y} {ah} {oh} {uh} {ih} {iy} {uw} {aa} {ae} {ao} {ax}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: p
rule: {[{[{{[{{any_Cx_zh_s_p_r {[{v} {ch} {d} {dh} {z} {m} {hh} {l} {w} {b} {g}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_s_p_r {[{v} {ch} {d} {dh} {z} {m} {hh} {l} {w} {b} {g}]}}}]}}]} {[{p} {[{[{{any_Cx_zh_s_p_r {[{v} {ch} {d} {dh} {z} {m} {hh} {l} {w} {b} {g}]}}} {zh}]} {[{zh} {{any_Cx_zh_s_p_r {[{v} {ch} {d} {dh} {z} {m} {hh} {l} {w} {b} {g}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: r
rule: {[{[{{[{{any_Cx_zh_zh_r_ax_p {[{ch} {w} {m} {g} {z} {v} {b} {hh} {dh} {l} {d}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_r_ax_p {[{ch} {w} {m} {g} {z} {v} {b} {hh} {dh} {l} {d}]}}}]}}]} {[{r} {[{[{{any_Cx_zh_zh_r_ax_p {[{ch} {w} {m} {g} {z} {v} {b} {hh} {dh} {l} {d}]}}} {zh}]} {[{zh} {{any_Cx_zh_zh_r_ax_p {[{ch} {w} {m} {g} {z} {v} {b} {hh} {dh} {l} {d}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: ax
rule: {[{[{{[{{any_Cx_s_zh_ax_b_r {[{d} {w} {ch} {l} {m} {g} {hh} {dh} {v} {z}]}}} {s}]}} {{[{s} {{any_Cx_s_zh_ax_b_r {[{d} {w} {ch} {l} {m} {g} {hh} {dh} {v} {z}]}}}]}}]} {[{ax} {[{[{{any_Cx_s_zh_ax_b_r {[{d} {w} {ch} {l} {m} {g} {hh} {dh} {v} {z}]}}} {s}]} {[{s} {{any_Cx_s_zh_ax_b_r {[{d} {w} {ch} {l} {m} {g} {hh} {dh} {v} {z}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: b
rule: {[{[{{[{{any_Cx_sh_s_b_ax {[{d} {l} {v} {z} {zh} {hh} {m} {dh} {g} {w} {ch}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_s_b_ax {[{d} {l} {v} {z} {zh} {hh} {m} {dh} {g} {w} {ch}]}}}]}}]} {[{b} {[{[{{any_Cx_sh_s_b_axl_ax {[{hh} {w} {z} {l} {m} {d} {dh} {zh} {ch} {v} {g}]}}} {sh}]} {[{sh} {{any_Cx_sh_s_b_axl_ax {[{hh} {w} {z} {l} {m} {d} {dh} {zh} {ch} {v} {g}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: axl
rule: {[{[{{[{{any_Cx_sh_sh_axl_b {[{ch} {v} {hh} {g} {zh} {d} {m} {dh} {l} {z} {w}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_axl_b {[{ch} {v} {hh} {g} {zh} {d} {m} {dh} {l} {z} {w}]}}}]}}]} {[{axl} {[{[{{any_Cx_sh_sh_axl_b {[{ch} {v} {hh} {g} {zh} {d} {m} {dh} {l} {z} {w}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_axl_b {[{ch} {v} {hh} {g} {zh} {d} {m} {dh} {l} {z} {w}]}}}]}]}]}]}
Closing rule:
guard: thr
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {thr}]}} {{[{thr} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_axl_thr {[{dh} {hh} {z} {b} {d} {w} {m} {v} {zh} {ch} {g} {l}]}}} {thr}]}} {{[{thr} {{any_Cx_sh_axl_thr {[{dh} {hh} {z} {b} {d} {w} {m} {v} {zh} {ch} {g} {l}]}}}]}}]} {sil}]}
rule 2 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Vx_ih_z_p_noSlide {[{ao} {uh} {y} {aa} {ae} {ax} {eh} {ah} {oh} {uw} {iy}]}}}]} {[{{any_Vx_ih_z_p_noSlide {[{ao} {uh} {y} {aa} {ae} {ax} {eh} {ah} {oh} {uw} {iy}]}}} {z}]}]}} {{[{[{z} {{any_Cx_ih_z_p {[{b} {v} {ch} {l} {w} {g} {dh} {d} {zh} {hh} {m}]}}}]} {[{{any_Cx_ih_z_p {[{b} {v} {ch} {l} {w} {g} {dh} {d} {zh} {hh} {m}]}}} {z}]}]}}]}}
Phoneme rule:
guard: z phoneme: ih
rule: {[{[{[{{[{{any_Vx_z_p_z_ih_noSlide {[{ax} {y} {ae} {ah} {ao} {iy} {uh} {eh} {uw} {aa} {oh}]}}} {z}]}} {{[{z} {{any_Vx_z_p_z_ih_noSlide {[{ax} {y} {ae} {ah} {ao} {iy} {uh} {eh} {uw} {aa} {oh}]}}}]}}]} {[{{[{{any_Cx_z_p_z_r {[{m} {w} {l} {zh} {dh} {ch} {b} {hh} {v} {g} {d}]}}} {z}]}} {{[{z} {{any_Cx_z_p_z_r {[{m} {w} {l} {zh} {dh} {ch} {b} {hh} {v} {g} {d}]}}}]}}]}]} {[{ih} {[{[{{any_Vx_z_p_z_ih_noSlide {[{ax} {y} {ae} {ah} {ao} {iy} {uh} {eh} {uw} {aa} {oh}]}}} {z}]} {[{z} {{any_Vx_z_p_z_ih_noSlide {[{ax} {y} {ae} {ah} {ao} {iy} {uh} {eh} {uw} {aa} {oh}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: r
rule: {[{[{{[{{any_Cx_s_z_r {[{w} {dh} {g} {l} {b} {d} {zh} {ch} {hh} {v} {m}]}}} {s}]}} {{[{s} {{any_Cx_s_z_r {[{w} {dh} {g} {l} {b} {d} {zh} {ch} {hh} {v} {m}]}}}]}}]} {[{r} {[{[{{any_Cx_s_z_r {[{w} {dh} {g} {l} {b} {d} {zh} {ch} {hh} {v} {m}]}}} {s}]} {[{s} {{any_Cx_s_z_r {[{w} {dh} {g} {l} {b} {d} {zh} {ch} {hh} {v} {m}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: eh
rule: {[{[{[{{[{{any_Vx_s_s_eh_noSlide {[{ax} {iy} {oh} {uh} {aa} {ah} {ih} {uw} {y} {ae} {ao}]}}} {s}]}} {{[{s} {{any_Vx_s_s_eh_noSlide {[{ax} {iy} {oh} {uh} {aa} {ah} {ih} {uw} {y} {ae} {ao}]}}}]}}]} {[{{[{{any_Cx_s_s_p_r {[{z} {b} {g} {m} {zh} {v} {l} {w} {ch} {hh} {dh} {d}]}}} {s}]}} {{[{s} {{any_Cx_s_s_p_r {[{z} {b} {g} {m} {zh} {v} {l} {w} {ch} {hh} {dh} {d}]}}}]}}]}]} {[{eh} {[{[{{any_Vx_s_s_eh_noSlide {[{ax} {iy} {oh} {uh} {aa} {ah} {ih} {uw} {y} {ae} {ao}]}}} {s}]} {[{s} {{any_Vx_s_s_eh_noSlide {[{ax} {iy} {oh} {uh} {aa} {ah} {ih} {uw} {y} {ae} {ao}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: p
rule: {[{[{{[{{any_Cx_zh_s_p_r {[{ch} {hh} {w} {z} {v} {dh} {b} {g} {l} {m} {d}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_s_p_r {[{ch} {hh} {w} {z} {v} {dh} {b} {g} {l} {m} {d}]}}}]}}]} {[{p} {[{[{{any_Cx_zh_s_p_r {[{ch} {hh} {w} {z} {v} {dh} {b} {g} {l} {m} {d}]}}} {zh}]} {[{zh} {{any_Cx_zh_s_p_r {[{ch} {hh} {w} {z} {v} {dh} {b} {g} {l} {m} {d}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: r
rule: {[{[{{[{{any_Cx_zh_zh_r_ax_p {[{ch} {hh} {m} {dh} {l} {g} {b} {v} {w} {z} {d}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_r_ax_p {[{ch} {hh} {m} {dh} {l} {g} {b} {v} {w} {z} {d}]}}}]}}]} {[{r} {[{[{{any_Cx_zh_zh_r_ax_p {[{ch} {hh} {m} {dh} {l} {g} {b} {v} {w} {z} {d}]}}} {zh}]} {[{zh} {{any_Cx_zh_zh_r_ax_p {[{ch} {hh} {m} {dh} {l} {g} {b} {v} {w} {z} {d}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: ax
rule: {[{[{{[{{any_Cx_s_zh_ax_b_r {[{m} {d} {ch} {v} {dh} {w} {hh} {z} {g} {l}]}}} {s}]}} {{[{s} {{any_Cx_s_zh_ax_b_r {[{m} {d} {ch} {v} {dh} {w} {hh} {z} {g} {l}]}}}]}}]} {[{ax} {[{[{{any_Cx_s_zh_ax_b_r {[{m} {d} {ch} {v} {dh} {w} {hh} {z} {g} {l}]}}} {s}]} {[{s} {{any_Cx_s_zh_ax_b_r {[{m} {d} {ch} {v} {dh} {w} {hh} {z} {g} {l}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: b
rule: {[{[{{[{{any_Cx_sh_s_b_ax {[{ch} {w} {zh} {z} {d} {hh} {v} {g} {l} {dh} {m}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_s_b_ax {[{ch} {w} {zh} {z} {d} {hh} {v} {g} {l} {dh} {m}]}}}]}}]} {[{b} {[{[{{any_Cx_sh_s_b_axl_ax {[{d} {dh} {z} {w} {v} {ch} {hh} {l} {g} {m} {zh}]}}} {sh}]} {[{sh} {{any_Cx_sh_s_b_axl_ax {[{d} {dh} {z} {w} {v} {ch} {hh} {l} {g} {m} {zh}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: axl
rule: {[{[{{[{{any_Cx_sh_sh_axl_b {[{w} {hh} {ch} {g} {l} {m} {z} {d} {v} {dh} {zh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_axl_b {[{w} {hh} {ch} {g} {l} {m} {z} {d} {v} {dh} {zh}]}}}]}}]} {[{axl} {[{[{{any_Cx_sh_sh_axl_b {[{w} {hh} {ch} {g} {l} {m} {z} {d} {v} {dh} {zh}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_axl_b {[{w} {hh} {ch} {g} {l} {m} {z} {d} {v} {dh} {zh}]}}}]}]}]}]}
Closing rule:
guard: m
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {m}]}} {{[{m} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_axl_m {[{g} {hh} {b} {dh} {w} {l} {v} {zh} {z} {ch} {d}]}}} {m}]}} {{[{m} {{any_Cx_sh_axl_m {[{g} {hh} {b} {dh} {w} {l} {v} {zh} {z} {ch} {d}]}}}]}}]} {sil}]}
rule 3 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Vx_ih_z_p_noSlide {[{ah} {iy} {y} {ax} {oh} {uh} {aa} {ae} {ao} {eh} {uw}]}}}]} {[{{any_Vx_ih_z_p_noSlide {[{ah} {iy} {y} {ax} {oh} {uh} {aa} {ae} {ao} {eh} {uw}]}}} {z}]}]}} {{[{[{z} {{any_Cx_ih_z_p {[{ch} {b} {hh} {l} {g} {m} {w} {d} {zh} {dh} {v}]}}}]} {[{{any_Cx_ih_z_p {[{ch} {b} {hh} {l} {g} {m} {w} {d} {zh} {dh} {v}]}}} {z}]}]}}]}}
Phoneme rule:
guard: z phoneme: ih
rule: {[{[{[{{[{{any_Vx_z_p_z_ih_noSlide {[{aa} {ao} {eh} {y} {ae} {ax} {uh} {ah} {oh} {uw} {iy}]}}} {z}]}} {{[{z} {{any_Vx_z_p_z_ih_noSlide {[{aa} {ao} {eh} {y} {ae} {ax} {uh} {ah} {oh} {uw} {iy}]}}}]}}]} {[{{[{{any_Cx_z_p_z_r {[{ch} {w} {v} {zh} {b} {hh} {d} {l} {dh} {g} {m}]}}} {z}]}} {{[{z} {{any_Cx_z_p_z_r {[{ch} {w} {v} {zh} {b} {hh} {d} {l} {dh} {g} {m}]}}}]}}]}]} {[{ih} {[{[{{any_Vx_z_p_z_ih_noSlide {[{aa} {ao} {eh} {y} {ae} {ax} {uh} {ah} {oh} {uw} {iy}]}}} {z}]} {[{z} {{any_Vx_z_p_z_ih_noSlide {[{aa} {ao} {eh} {y} {ae} {ax} {uh} {ah} {oh} {uw} {iy}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: r
rule: {[{[{{[{{any_Cx_s_z_r {[{b} {hh} {w} {v} {dh} {l} {m} {ch} {d} {g} {zh}]}}} {s}]}} {{[{s} {{any_Cx_s_z_r {[{b} {hh} {w} {v} {dh} {l} {m} {ch} {d} {g} {zh}]}}}]}}]} {[{r} {[{[{{any_Cx_s_z_r {[{b} {hh} {w} {v} {dh} {l} {m} {ch} {d} {g} {zh}]}}} {s}]} {[{s} {{any_Cx_s_z_r {[{b} {hh} {w} {v} {dh} {l} {m} {ch} {d} {g} {zh}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: eh
rule: {[{[{[{{[{{any_Vx_s_s_eh_noSlide {[{aa} {ae} {ax} {iy} {uh} {y} {ah} {ao} {ih} {oh} {uw}]}}} {s}]}} {{[{s} {{any_Vx_s_s_eh_noSlide {[{aa} {ae} {ax} {iy} {uh} {y} {ah} {ao} {ih} {oh} {uw}]}}}]}}]} {[{{[{{any_Cx_s_s_p_r {[{g} {dh} {l} {v} {w} {ch} {m} {z} {zh} {hh} {d} {b}]}}} {s}]}} {{[{s} {{any_Cx_s_s_p_r {[{g} {dh} {l} {v} {w} {ch} {m} {z} {zh} {hh} {d} {b}]}}}]}}]}]} {[{eh} {[{[{{any_Vx_s_s_eh_noSlide {[{aa} {ae} {ax} {iy} {uh} {y} {ah} {ao} {ih} {oh} {uw}]}}} {s}]} {[{s} {{any_Vx_s_s_eh_noSlide {[{aa} {ae} {ax} {iy} {uh} {y} {ah} {ao} {ih} {oh} {uw}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: p
rule: {[{[{{[{{any_Cx_zh_s_p_r {[{g} {v} {w} {m} {ch} {d} {dh} {z} {b} {hh} {l}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_s_p_r {[{g} {v} {w} {m} {ch} {d} {dh} {z} {b} {hh} {l}]}}}]}}]} {[{p} {[{[{{any_Cx_zh_s_p_r {[{g} {v} {w} {m} {ch} {d} {dh} {z} {b} {hh} {l}]}}} {zh}]} {[{zh} {{any_Cx_zh_s_p_r {[{g} {v} {w} {m} {ch} {d} {dh} {z} {b} {hh} {l}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: r
rule: {[{[{{[{{any_Cx_zh_zh_r_ax_p {[{hh} {z} {w} {m} {dh} {l} {b} {g} {d} {v} {ch}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_r_ax_p {[{hh} {z} {w} {m} {dh} {l} {b} {g} {d} {v} {ch}]}}}]}}]} {[{r} {[{[{{any_Cx_zh_zh_r_ax_p {[{hh} {z} {w} {m} {dh} {l} {b} {g} {d} {v} {ch}]}}} {zh}]} {[{zh} {{any_Cx_zh_zh_r_ax_p {[{hh} {z} {w} {m} {dh} {l} {b} {g} {d} {v} {ch}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: ax
rule: {[{[{{[{{any_Cx_s_zh_ax_b_r {[{dh} {w} {ch} {hh} {l} {m} {d} {g} {v} {z}]}}} {s}]}} {{[{s} {{any_Cx_s_zh_ax_b_r {[{dh} {w} {ch} {hh} {l} {m} {d} {g} {v} {z}]}}}]}}]} {[{ax} {[{[{{any_Cx_s_zh_ax_b_r {[{dh} {w} {ch} {hh} {l} {m} {d} {g} {v} {z}]}}} {s}]} {[{s} {{any_Cx_s_zh_ax_b_r {[{dh} {w} {ch} {hh} {l} {m} {d} {g} {v} {z}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: b
rule: {[{[{{[{{any_Cx_sh_s_b_ax {[{zh} {d} {dh} {w} {z} {ch} {g} {m} {hh} {l} {v}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_s_b_ax {[{zh} {d} {dh} {w} {z} {ch} {g} {m} {hh} {l} {v}]}}}]}}]} {[{b} {[{[{{any_Cx_sh_s_b_axl_ax {[{z} {zh} {g} {ch} {w} {d} {dh} {hh} {l} {m} {v}]}}} {sh}]} {[{sh} {{any_Cx_sh_s_b_axl_ax {[{z} {zh} {g} {ch} {w} {d} {dh} {hh} {l} {m} {v}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: axl
rule: {[{[{{[{{any_Cx_sh_sh_axl_b {[{d} {hh} {dh} {zh} {w} {l} {m} {ch} {g} {v} {z}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_axl_b {[{d} {hh} {dh} {zh} {w} {l} {m} {ch} {g} {v} {z}]}}}]}}]} {[{axl} {[{[{{any_Cx_sh_sh_axl_b {[{d} {hh} {dh} {zh} {w} {l} {m} {ch} {g} {v} {z}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_axl_b {[{d} {hh} {dh} {zh} {w} {l} {m} {ch} {g} {v} {z}]}}}]}]}]}]}
Closing rule:
guard: p
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {p}]}} {{[{p} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_axl_p {[{w} {zh} {b} {d} {l} {ch} {dh} {v} {m} {z} {hh} {g}]}}} {p}]}} {{[{p} {{any_Cx_sh_axl_p {[{w} {zh} {b} {d} {l} {ch} {dh} {v} {m} {z} {hh} {g}]}}}]}}]} {sil}]}
rule 4 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Vx_ih_z_p_noSlide {[{eh} {uw} {uh} {ae} {oh} {ao} {ax} {iy} {y} {aa} {ah}]}}}]} {[{{any_Vx_ih_z_p_noSlide {[{eh} {uw} {uh} {ae} {oh} {ao} {ax} {iy} {y} {aa} {ah}]}}} {z}]}]}} {{[{[{z} {{any_Cx_ih_z_p {[{d} {v} {zh} {dh} {g} {m} {hh} {w} {ch} {b} {l}]}}}]} {[{{any_Cx_ih_z_p {[{d} {v} {zh} {dh} {g} {m} {hh} {w} {ch} {b} {l}]}}} {z}]}]}}]}}
Phoneme rule:
guard: z phoneme: ih
rule: {[{[{[{{[{{any_Vx_z_p_z_ih_noSlide {[{y} {ae} {ah} {iy} {uw} {ao} {ax} {oh} {uh} {eh} {aa}]}}} {z}]}} {{[{z} {{any_Vx_z_p_z_ih_noSlide {[{y} {ae} {ah} {iy} {uw} {ao} {ax} {oh} {uh} {eh} {aa}]}}}]}}]} {[{{[{{any_Cx_z_p_z_r {[{ch} {d} {zh} {v} {w} {g} {m} {b} {dh} {l} {hh}]}}} {z}]}} {{[{z} {{any_Cx_z_p_z_r {[{ch} {d} {zh} {v} {w} {g} {m} {b} {dh} {l} {hh}]}}}]}}]}]} {[{ih} {[{[{{any_Vx_z_p_z_ih_noSlide {[{y} {ae} {ah} {iy} {uw} {ao} {ax} {oh} {uh} {eh} {aa}]}}} {z}]} {[{z} {{any_Vx_z_p_z_ih_noSlide {[{y} {ae} {ah} {iy} {uw} {ao} {ax} {oh} {uh} {eh} {aa}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: r
rule: {[{[{{[{{any_Cx_s_z_r {[{v} {b} {m} {w} {hh} {g} {l} {zh} {ch} {dh} {d}]}}} {s}]}} {{[{s} {{any_Cx_s_z_r {[{v} {b} {m} {w} {hh} {g} {l} {zh} {ch} {dh} {d}]}}}]}}]} {[{r} {[{[{{any_Cx_s_z_r {[{v} {b} {m} {w} {hh} {g} {l} {zh} {ch} {dh} {d}]}}} {s}]} {[{s} {{any_Cx_s_z_r {[{v} {b} {m} {w} {hh} {g} {l} {zh} {ch} {dh} {d}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: eh
rule: {[{[{[{{[{{any_Vx_s_s_eh_noSlide {[{oh} {ae} {ah} {ao} {ax} {uh} {y} {aa} {ih} {iy} {uw}]}}} {s}]}} {{[{s} {{any_Vx_s_s_eh_noSlide {[{oh} {ae} {ah} {ao} {ax} {uh} {y} {aa} {ih} {iy} {uw}]}}}]}}]} {[{{[{{any_Cx_s_s_p_r {[{ch} {m} {dh} {z} {b} {d} {g} {zh} {hh} {l} {v} {w}]}}} {s}]}} {{[{s} {{any_Cx_s_s_p_r {[{ch} {m} {dh} {z} {b} {d} {g} {zh} {hh} {l} {v} {w}]}}}]}}]}]} {[{eh} {[{[{{any_Vx_s_s_eh_noSlide {[{oh} {ae} {ah} {ao} {ax} {uh} {y} {aa} {ih} {iy} {uw}]}}} {s}]} {[{s} {{any_Vx_s_s_eh_noSlide {[{oh} {ae} {ah} {ao} {ax} {uh} {y} {aa} {ih} {iy} {uw}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: p
rule: {[{[{{[{{any_Cx_zh_s_p_r {[{m} {b} {dh} {hh} {d} {w} {g} {l} {v} {ch} {z}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_s_p_r {[{m} {b} {dh} {hh} {d} {w} {g} {l} {v} {ch} {z}]}}}]}}]} {[{p} {[{[{{any_Cx_zh_s_p_r {[{m} {b} {dh} {hh} {d} {w} {g} {l} {v} {ch} {z}]}}} {zh}]} {[{zh} {{any_Cx_zh_s_p_r {[{m} {b} {dh} {hh} {d} {w} {g} {l} {v} {ch} {z}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: r
rule: {[{[{{[{{any_Cx_zh_zh_r_ax_p {[{g} {d} {l} {w} {hh} {v} {ch} {m} {z} {b} {dh}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_r_ax_p {[{g} {d} {l} {w} {hh} {v} {ch} {m} {z} {b} {dh}]}}}]}}]} {[{r} {[{[{{any_Cx_zh_zh_r_ax_p {[{g} {d} {l} {w} {hh} {v} {ch} {m} {z} {b} {dh}]}}} {zh}]} {[{zh} {{any_Cx_zh_zh_r_ax_p {[{g} {d} {l} {w} {hh} {v} {ch} {m} {z} {b} {dh}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: ax
rule: {[{[{{[{{any_Cx_s_zh_ax_b_r {[{v} {ch} {d} {g} {l} {z} {w} {hh} {dh} {m}]}}} {s}]}} {{[{s} {{any_Cx_s_zh_ax_b_r {[{v} {ch} {d} {g} {l} {z} {w} {hh} {dh} {m}]}}}]}}]} {[{ax} {[{[{{any_Cx_s_zh_ax_b_r {[{v} {ch} {d} {g} {l} {z} {w} {hh} {dh} {m}]}}} {s}]} {[{s} {{any_Cx_s_zh_ax_b_r {[{v} {ch} {d} {g} {l} {z} {w} {hh} {dh} {m}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: b
rule: {[{[{{[{{any_Cx_sh_s_b_ax {[{w} {z} {l} {m} {ch} {g} {zh} {d} {hh} {v} {dh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_s_b_ax {[{w} {z} {l} {m} {ch} {g} {zh} {d} {hh} {v} {dh}]}}}]}}]} {[{b} {[{[{{any_Cx_sh_s_b_axl_ax {[{m} {w} {zh} {dh} {l} {d} {g} {hh} {v} {ch} {z}]}}} {sh}]} {[{sh} {{any_Cx_sh_s_b_axl_ax {[{m} {w} {zh} {dh} {l} {d} {g} {hh} {v} {ch} {z}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: axl
rule: {[{[{{[{{any_Cx_sh_sh_axl_b {[{ch} {d} {dh} {w} {v} {zh} {m} {g} {l} {z} {hh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_axl_b {[{ch} {d} {dh} {w} {v} {zh} {m} {g} {l} {z} {hh}]}}}]}}]} {[{axl} {[{[{{any_Cx_sh_sh_axl_b {[{ch} {d} {dh} {w} {v} {zh} {m} {g} {l} {z} {hh}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_axl_b {[{ch} {d} {dh} {w} {v} {zh} {m} {g} {l} {z} {hh}]}}}]}]}]}]}
Closing rule:
guard: hh
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {hh}]}} {{[{hh} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_axl_hh {[{dh} {l} {v} {w} {g} {m} {b} {ch} {zh} {d} {z}]}}} {hh}]}} {{[{hh} {{any_Cx_sh_axl_hh {[{dh} {l} {v} {w} {g} {m} {b} {ch} {zh} {d} {z}]}}}]}}]} {sil}]}

parse: err = Parser error
ruleAligned = [{{ih 1} [{2 1} {3 1} {4 3}]} {{r 1} [{2 2} {3 2} {4 4}]} {{eh 1} [{2 3} {3 3} {4 5}]} {{p 1} [{2 4} {3 4} {4 6}]} {{r 2} []} {{ax 1} [{2 6} {3 6} {4 9}]} {{b 1} [{2 7} {3 7} {4 10}]} {{axl 1} [{2 8} {3 8} {4 11}]}]

results (after rule-alignment) =
{72 []}
{80 [{sil 193 193} {ih 245 245} {r 249 249} {eh 253 253} {p 256 256} {r 260 260} {ax 264 264} {b 268 268} {axl 271 271} {sil 275 275}]}
{91 [{sil 0 0} {ih 103 120} {r 121 134} {eh 135 141} {p 142 155} {r 156 156} {ax 159 177} {b 178 184} {axl 185 203} {sil 204 204}]}
{105 [{sil 0 0} {ih 104 120} {r 121 135} {eh 136 142} {p 143 154} {r 155 155} {ax 158 177} {b 178 185} {axl 186 203} {sil 204 204}]}
{125 [{sil 3 3} {iy 105 114} {z 115 115} {ih 118 121} {r 122 137} {eh 138 142} {p 143 150} {b 151 157} {zh 158 158} {ax 160 179} {b 180 186} {axl 186 203} {sil 204 204}]}

timeAligned = [{{ih 118 120} [{2 1} {3 1} {4 3}]} {{r 122 134} [{2 2} {3 2} {4 4}]} {{eh 138 141} [{2 3} {3 3} {4 5}]} {{p 143 150} [{2 4} {3 4} {4 6}]} {{ax 160 177} [{2 6} {3 6} {4 9}]} {{b 180 184} [{2 7} {3 7} {4 10}]} {{axl 186 203} [{2 8} {3 8} {4 11}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 120
i, iTime, newITime, timeStartFrom = 2 1 2 134
i, iTime, newITime, timeStartFrom = 3 2 3 141
i, iTime, newITime, timeStartFrom = 4 3 -1 150
i, iTime, newITime, timeStartFrom = 5 3 4 150
i, iTime, newITime, timeStartFrom = 6 4 5 177
i, iTime, newITime, timeStartFrom = 7 5 6 184
combinedVerdict    = [{ih 1} {r 1} {eh 1} {p 1} {r 2} {ax 1} {b 1} {axl 1}]
ruleAlignedVerdict = [{ih 1} {r 1} {eh 1} {p 1} {r 2} {ax 1} {b 1} {axl 1}]

score->
+1 for ih
+1 for r
+1 for eh
+1 for p
-1 for r
+1 for ax
+1 for b
+1 for axl
score<-: 6

results =
{72 []}
{80 [{sil 193 196} {ih 197 199} {r 200 202} {eh 203 205} {pr 206 208} {ax 209 211} {b 212 214} {ax 215 217} {l 218 220} {sil 221 225}]}
{91 [{sil 0 93} {ih 94 109} {r 110 122} {eh 123 128} {g 129 138} {y 139 141} {ax 142 161} {b 162 167} {ax 168 170} {l 171 185} {sil 186 256}]}
{105 [{sil 0 108} {ih 109 126} {r 127 142} {eh 143 150} {g 151 160} {y 161 163} {ax 164 186} {b 187 194} {ax 195 197} {l 198 213} {sil 214 298}]}
{125 [{sil 3 130} {iy 131 143} {z 144 146} {ih 147 151} {r 152 171} {eh 172 178} {g 179 192} {y 193 195} {ax 196 224} {b 225 231} {ax 232 234} {l 235 254} {sil 255 356}]}

normalised results =
{72 []}
{80 [{sil 193 196} {ih 246 246} {r 250 250} {eh 254 254} {pr 258 258} {ax 261 261} {b 265 265} {ax 269 269} {l 273 273} {sil 276 281}]}
{91 [{sil 0 93} {ih 103 120} {r 121 134} {eh 135 141} {g 142 152} {y 153 153} {ax 156 177} {b 178 184} {ax 185 185} {l 188 203} {sil 204 281}]}
{105 [{sil 0 108} {ih 104 120} {r 121 135} {eh 136 143} {g 144 152} {y 153 153} {ax 156 177} {b 178 185} {ax 186 186} {l 189 203} {sil 204 284}]}
{125 [{sil 3 130} {iy 105 114} {z 115 115} {ih 118 121} {r 122 137} {eh 138 142} {g 143 154} {y 154 154} {ax 157 179} {b 180 185} {ax 186 186} {l 188 203} {sil 204 285}]}

Mapped result =
result 0 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 1 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 2 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 3 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 4 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false

Rules =
rule 0 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Vx_ih_z_p_noSlide {[{aa} {ao} {ae} {ah} {uh} {y} {ax} {eh} {iy} {oh} {uw}]}}}]} {[{{any_Vx_ih_z_p_noSlide {[{aa} {ao} {ae} {ah} {uh} {y} {ax} {eh} {iy} {oh} {uw}]}}} {z}]}]}} {{[{[{z} {{any_Cx_ih_z_p {[{g} {b} {m} {zh} {d} {hh} {l} {v} {w} {ch} {dh}]}}}]} {[{{any_Cx_ih_z_p {[{g} {b} {m} {zh} {d} {hh} {l} {v} {w} {ch} {dh}]}}} {z}]}]}}]}}
Phoneme rule:
guard: z phoneme: ih
rule: {[{[{[{{[{{any_Vx_z_p_z_ih_noSlide {[{y} {aa} {ae} {ax} {uw} {uh} {ah} {ao} {eh} {iy} {oh}]}}} {z}]}} {{[{z} {{any_Vx_z_p_z_ih_noSlide {[{y} {aa} {ae} {ax} {uw} {uh} {ah} {ao} {eh} {iy} {oh}]}}}]}}]} {[{{[{{any_Cx_z_p_z_r {[{dh} {w} {ch} {hh} {l} {b} {v} {zh} {d} {g} {m}]}}} {z}]}} {{[{z} {{any_Cx_z_p_z_r {[{dh} {w} {ch} {hh} {l} {b} {v} {zh} {d} {g} {m}]}}}]}}]}]} {[{ih} {[{[{{any_Vx_z_p_z_ih_noSlide {[{y} {aa} {ae} {ax} {uw} {uh} {ah} {ao} {eh} {iy} {oh}]}}} {z}]} {[{z} {{any_Vx_z_p_z_ih_noSlide {[{y} {aa} {ae} {ax} {uw} {uh} {ah} {ao} {eh} {iy} {oh}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: r
rule: {[{[{{[{{any_Cx_s_z_r {[{d} {ch} {dh} {hh} {l} {v} {m} {w} {b} {g} {zh}]}}} {s}]}} {{[{s} {{any_Cx_s_z_r {[{d} {ch} {dh} {hh} {l} {v} {m} {w} {b} {g} {zh}]}}}]}}]} {[{r} {[{[{{any_Cx_s_z_r {[{d} {ch} {dh} {hh} {l} {v} {m} {w} {b} {g} {zh}]}}} {s}]} {[{s} {{any_Cx_s_z_r {[{d} {ch} {dh} {hh} {l} {v} {m} {w} {b} {g} {zh}]}}}]}]}]}]}
Phoneme rule:
guard: y phoneme: eh
rule: {[{[{[{{[{{any_Vx_y_s_eh_noSlide {[{ae} {ah} {ao} {uw} {aa} {ax} {ih} {iy} {oh} {uh}]}}} {y}]}} {{[{y} {{any_Vx_y_s_eh_noSlide {[{ae} {ah} {ao} {uw} {aa} {ax} {ih} {iy} {oh} {uh}]}}}]}}]} {[{{[{{any_Cx_y_s_pr_r {[{l} {b} {hh} {z} {g} {m} {v} {w} {zh} {d} {dh} {ch}]}}} {y}]}} {{[{y} {{any_Cx_y_s_pr_r {[{l} {b} {hh} {z} {g} {m} {v} {w} {zh} {d} {dh} {ch}]}}}]}}]}]} {[{eh} {[{[{{any_Vx_y_s_eh_noSlide {[{ae} {ah} {ao} {uw} {aa} {ax} {ih} {iy} {oh} {uh}]}}} {y}]} {[{y} {{any_Vx_y_s_eh_noSlide {[{ae} {ah} {ao} {uw} {aa} {ax} {ih} {iy} {oh} {uh}]}}}]}]}]}]}
Phoneme rule:
guard: y phoneme: pr
rule: {[{[{{[{{any_Cx_y_y_pr_ax {[{v} {b} {g} {m} {l} {dh} {d} {w} {z} {zh} {ch} {hh}]}}} {y}]}} {{[{y} {{any_Cx_y_y_pr_ax {[{v} {b} {g} {m} {l} {dh} {d} {w} {z} {zh} {ch} {hh}]}}}]}}]} {[{pr} {[{[{{any_Cx_y_y_pr_ax {[{v} {b} {g} {m} {l} {dh} {d} {w} {z} {zh} {ch} {hh}]}}} {y}]} {[{y} {{any_Cx_y_y_pr_ax {[{v} {b} {g} {m} {l} {dh} {d} {w} {z} {zh} {ch} {hh}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: ax
rule: {[{[{{[{{any_Cx_s_y_ax_b_pr {[{l} {ch} {d} {m} {w} {v} {g} {hh} {zh} {dh} {z}]}}} {s}]}} {{[{s} {{any_Cx_s_y_ax_b_pr {[{l} {ch} {d} {m} {w} {v} {g} {hh} {zh} {dh} {z}]}}}]}}]} {[{ax} {[{[{{any_Cx_s_y_ax_b_pr {[{l} {ch} {d} {m} {w} {v} {g} {hh} {zh} {dh} {z}]}}} {s}]} {[{s} {{any_Cx_s_y_ax_b_pr {[{l} {ch} {d} {m} {w} {v} {g} {hh} {zh} {dh} {z}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: b
rule: {[{[{{[{{any_Cx_zh_s_b_ax_ax {[{dh} {w} {m} {ch} {d} {hh} {z} {l} {v} {g}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_s_b_ax_ax {[{dh} {w} {m} {ch} {d} {hh} {z} {l} {v} {g}]}}}]}}]} {[{b} {[{[{{any_Cx_zh_s_b_ax_ax {[{dh} {w} {m} {ch} {d} {hh} {z} {l} {v} {g}]}}} {zh}]} {[{zh} {{any_Cx_zh_s_b_ax_ax {[{dh} {w} {m} {ch} {d} {hh} {z} {l} {v} {g}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ax
rule: {[{[{{[{{any_Cx_sh_zh_ax_b {[{l} {z} {d} {ch} {dh} {hh} {m} {g} {w} {v}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_zh_ax_b {[{l} {z} {d} {ch} {dh} {hh} {m} {g} {w} {v}]}}}]}}]} {[{ax} {[{[{{any_Cx_sh_zh_ax_l_b {[{d} {w} {ch} {m} {v} {g} {hh} {dh} {z}]}}} {sh}]} {[{sh} {{any_Cx_sh_zh_ax_l_b {[{d} {w} {ch} {m} {v} {g} {hh} {dh} {z}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: l
rule: {[{[{{[{{any_Cx_sh_sh_l_ax {[{m} {ch} {dh} {w} {zh} {v} {z} {g} {d} {b} {hh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_l_ax {[{m} {ch} {dh} {w} {zh} {v} {z} {g} {d} {b} {hh}]}}}]}}]} {[{l} {[{[{{any_Cx_sh_sh_l_ax {[{m} {ch} {dh} {w} {zh} {v} {z} {g} {d} {b} {hh}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_l_ax {[{m} {ch} {dh} {w} {zh} {v} {z} {g} {d} {b} {hh}]}}}]}]}]}]}
Closing rule:
guard: d
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {d}]}} {{[{d} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_l_d {[{m} {z} {w} {b} {dh} {g} {hh} {ch} {zh} {v}]}}} {d}]}} {{[{d} {{any_Cx_sh_l_d {[{m} {z} {w} {b} {dh} {g} {hh} {ch} {zh} {v}]}}}]}}]} {sil}]}
rule 1 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Vx_ih_z_p_noSlide {[{y} {eh} {iy} {oh} {uh} {aa} {ah} {ao} {ax} {uw} {ae}]}}}]} {[{{any_Vx_ih_z_p_noSlide {[{y} {eh} {iy} {oh} {uh} {aa} {ah} {ao} {ax} {uw} {ae}]}}} {z}]}]}} {{[{[{z} {{any_Cx_ih_z_p {[{d} {l} {v} {ch} {hh} {g} {zh} {w} {m} {b} {dh}]}}}]} {[{{any_Cx_ih_z_p {[{d} {l} {v} {ch} {hh} {g} {zh} {w} {m} {b} {dh}]}}} {z}]}]}}]}}
Phoneme rule:
guard: z phoneme: ih
rule: {[{[{[{{[{{any_Vx_z_p_z_ih_noSlide {[{ae} {ah} {uh} {ax} {aa} {ao} {iy} {oh} {y} {eh} {uw}]}}} {z}]}} {{[{z} {{any_Vx_z_p_z_ih_noSlide {[{ae} {ah} {uh} {ax} {aa} {ao} {iy} {oh} {y} {eh} {uw}]}}}]}}]} {[{{[{{any_Cx_z_p_z_r {[{v} {zh} {dh} {w} {g} {l} {b} {ch} {hh} {d} {m}]}}} {z}]}} {{[{z} {{any_Cx_z_p_z_r {[{v} {zh} {dh} {w} {g} {l} {b} {ch} {hh} {d} {m}]}}}]}}]}]} {[{ih} {[{[{{any_Vx_z_p_z_ih_noSlide {[{ae} {ah} {uh} {ax} {aa} {ao} {iy} {oh} {y} {eh} {uw}]}}} {z}]} {[{z} {{any_Vx_z_p_z_ih_noSlide {[{ae} {ah} {uh} {ax} {aa} {ao} {iy} {oh} {y} {eh} {uw}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: r
rule: {[{[{{[{{any_Cx_s_z_r {[{zh} {g} {w} {m} {b} {d} {dh} {l} {ch} {hh} {v}]}}} {s}]}} {{[{s} {{any_Cx_s_z_r {[{zh} {g} {w} {m} {b} {d} {dh} {l} {ch} {hh} {v}]}}}]}}]} {[{r} {[{[{{any_Cx_s_z_r {[{zh} {g} {w} {m} {b} {d} {dh} {l} {ch} {hh} {v}]}}} {s}]} {[{s} {{any_Cx_s_z_r {[{zh} {g} {w} {m} {b} {d} {dh} {l} {ch} {hh} {v}]}}}]}]}]}]}
Phoneme rule:
guard: y phoneme: eh
rule: {[{[{[{{[{{any_Vx_y_s_eh_noSlide {[{ih} {uw} {uh} {aa} {ah} {ao} {ax} {ae} {iy} {oh}]}}} {y}]}} {{[{y} {{any_Vx_y_s_eh_noSlide {[{ih} {uw} {uh} {aa} {ah} {ao} {ax} {ae} {iy} {oh}]}}}]}}]} {[{{[{{any_Cx_y_s_pr_r {[{z} {b} {g} {ch} {dh} {w} {v} {d} {l} {zh} {hh} {m}]}}} {y}]}} {{[{y} {{any_Cx_y_s_pr_r {[{z} {b} {g} {ch} {dh} {w} {v} {d} {l} {zh} {hh} {m}]}}}]}}]}]} {[{eh} {[{[{{any_Vx_y_s_eh_noSlide {[{ih} {uw} {uh} {aa} {ah} {ao} {ax} {ae} {iy} {oh}]}}} {y}]} {[{y} {{any_Vx_y_s_eh_noSlide {[{ih} {uw} {uh} {aa} {ah} {ao} {ax} {ae} {iy} {oh}]}}}]}]}]}]}
Phoneme rule:
guard: y phoneme: pr
rule: {[{[{{[{{any_Cx_y_y_pr_ax {[{g} {w} {b} {v} {d} {m} {ch} {zh} {dh} {hh} {l} {z}]}}} {y}]}} {{[{y} {{any_Cx_y_y_pr_ax {[{g} {w} {b} {v} {d} {m} {ch} {zh} {dh} {hh} {l} {z}]}}}]}}]} {[{pr} {[{[{{any_Cx_y_y_pr_ax {[{g} {w} {b} {v} {d} {m} {ch} {zh} {dh} {hh} {l} {z}]}}} {y}]} {[{y} {{any_Cx_y_y_pr_ax {[{g} {w} {b} {v} {d} {m} {ch} {zh} {dh} {hh} {l} {z}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: ax
rule: {[{[{{[{{any_Cx_s_y_ax_b_pr {[{d} {hh} {zh} {ch} {v} {w} {g} {l} {z} {dh} {m}]}}} {s}]}} {{[{s} {{any_Cx_s_y_ax_b_pr {[{d} {hh} {zh} {ch} {v} {w} {g} {l} {z} {dh} {m}]}}}]}}]} {[{ax} {[{[{{any_Cx_s_y_ax_b_pr {[{d} {hh} {zh} {ch} {v} {w} {g} {l} {z} {dh} {m}]}}} {s}]} {[{s} {{any_Cx_s_y_ax_b_pr {[{d} {hh} {zh} {ch} {v} {w} {g} {l} {z} {dh} {m}]}}}]}]}]}]}
Phoneme rule:
guard: jh phoneme: b
rule: {[{[{{[{{any_Cx_jh_s_b_ax_ax {[{zh} {v} {z} {g} {l} {dh} {w} {ch} {d} {hh} {m}]}}} {jh}]}} {{[{jh} {{any_Cx_jh_s_b_ax_ax {[{zh} {v} {z} {g} {l} {dh} {w} {ch} {d} {hh} {m}]}}}]}}]} {[{b} {[{[{{any_Cx_jh_s_b_ax_ax {[{zh} {v} {z} {g} {l} {dh} {w} {ch} {d} {hh} {m}]}}} {jh}]} {[{jh} {{any_Cx_jh_s_b_ax_ax {[{zh} {v} {z} {g} {l} {dh} {w} {ch} {d} {hh} {m}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ax
rule: {[{[{{[{{any_Cx_sh_jh_ax_b {[{zh} {hh} {ch} {l} {z} {dh} {v} {g} {m} {w} {d}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_jh_ax_b {[{zh} {hh} {ch} {l} {z} {dh} {v} {g} {m} {w} {d}]}}}]}}]} {[{ax} {[{[{{any_Cx_sh_jh_ax_l_b {[{hh} {v} {w} {z} {g} {ch} {dh} {m} {zh} {d}]}}} {sh}]} {[{sh} {{any_Cx_sh_jh_ax_l_b {[{hh} {v} {w} {z} {g} {ch} {dh} {m} {zh} {d}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: l
rule: {[{[{{[{{any_Cx_sh_sh_l_ax {[{hh} {z} {w} {dh} {m} {zh} {ch} {d} {b} {g} {v}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_l_ax {[{hh} {z} {w} {dh} {m} {zh} {ch} {d} {b} {g} {v}]}}}]}}]} {[{l} {[{[{{any_Cx_sh_sh_l_ax {[{hh} {z} {w} {dh} {m} {zh} {ch} {d} {b} {g} {v}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_l_ax {[{hh} {z} {w} {dh} {m} {zh} {ch} {d} {b} {g} {v}]}}}]}]}]}]}
Closing rule:
guard: f
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {f}]}} {{[{f} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_l_f {[{g} {m} {w} {b} {ch} {dh} {d} {z} {hh} {v} {zh}]}}} {f}]}} {{[{f} {{any_Cx_sh_l_f {[{g} {m} {w} {b} {ch} {dh} {d} {z} {hh} {v} {zh}]}}}]}}]} {sil}]}
rule 2 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Vx_ih_z_p_noSlide {[{y} {aa} {ao} {oh} {ax} {uh} {eh} {iy} {uw} {ae} {ah}]}}}]} {[{{any_Vx_ih_z_p_noSlide {[{y} {aa} {ao} {oh} {ax} {uh} {eh} {iy} {uw} {ae} {ah}]}}} {z}]}]}} {{[{[{z} {{any_Cx_ih_z_p {[{m} {v} {l} {b} {g} {zh} {ch} {d} {w} {dh} {hh}]}}}]} {[{{any_Cx_ih_z_p {[{m} {v} {l} {b} {g} {zh} {ch} {d} {w} {dh} {hh}]}}} {z}]}]}}]}}
Phoneme rule:
guard: z phoneme: ih
rule: {[{[{[{{[{{any_Vx_z_p_z_ih_noSlide {[{ax} {eh} {oh} {uw} {y} {ae} {ah} {iy} {aa} {ao} {uh}]}}} {z}]}} {{[{z} {{any_Vx_z_p_z_ih_noSlide {[{ax} {eh} {oh} {uw} {y} {ae} {ah} {iy} {aa} {ao} {uh}]}}}]}}]} {[{{[{{any_Cx_z_p_z_r {[{ch} {g} {b} {hh} {m} {dh} {zh} {v} {w} {l} {d}]}}} {z}]}} {{[{z} {{any_Cx_z_p_z_r {[{ch} {g} {b} {hh} {m} {dh} {zh} {v} {w} {l} {d}]}}}]}}]}]} {[{ih} {[{[{{any_Vx_z_p_z_ih_noSlide {[{ax} {eh} {oh} {uw} {y} {ae} {ah} {iy} {aa} {ao} {uh}]}}} {z}]} {[{z} {{any_Vx_z_p_z_ih_noSlide {[{ax} {eh} {oh} {uw} {y} {ae} {ah} {iy} {aa} {ao} {uh}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: r
rule: {[{[{{[{{any_Cx_s_z_r {[{b} {hh} {zh} {ch} {dh} {m} {g} {v} {d} {l} {w}]}}} {s}]}} {{[{s} {{any_Cx_s_z_r {[{b} {hh} {zh} {ch} {dh} {m} {g} {v} {d} {l} {w}]}}}]}}]} {[{r} {[{[{{any_Cx_s_z_r {[{b} {hh} {zh} {ch} {dh} {m} {g} {v} {d} {l} {w}]}}} {s}]} {[{s} {{any_Cx_s_z_r {[{b} {hh} {zh} {ch} {dh} {m} {g} {v} {d} {l} {w}]}}}]}]}]}]}
Phoneme rule:
guard: y phoneme: eh
rule: {[{[{[{{[{{any_Vx_y_s_eh_noSlide {[{ax} {ih} {iy} {oh} {aa} {ae} {ah} {uw} {ao} {uh}]}}} {y}]}} {{[{y} {{any_Vx_y_s_eh_noSlide {[{ax} {ih} {iy} {oh} {aa} {ae} {ah} {uw} {ao} {uh}]}}}]}}]} {[{{[{{any_Cx_y_s_pr_r {[{zh} {g} {b} {d} {dh} {l} {w} {hh} {m} {z} {ch} {v}]}}} {y}]}} {{[{y} {{any_Cx_y_s_pr_r {[{zh} {g} {b} {d} {dh} {l} {w} {hh} {m} {z} {ch} {v}]}}}]}}]}]} {[{eh} {[{[{{any_Vx_y_s_eh_noSlide {[{ax} {ih} {iy} {oh} {aa} {ae} {ah} {uw} {ao} {uh}]}}} {y}]} {[{y} {{any_Vx_y_s_eh_noSlide {[{ax} {ih} {iy} {oh} {aa} {ae} {ah} {uw} {ao} {uh}]}}}]}]}]}]}
Phoneme rule:
guard: y phoneme: pr
rule: {[{[{{[{{any_Cx_y_y_pr_ax {[{d} {l} {z} {m} {w} {zh} {v} {b} {g} {dh} {ch} {hh}]}}} {y}]}} {{[{y} {{any_Cx_y_y_pr_ax {[{d} {l} {z} {m} {w} {zh} {v} {b} {g} {dh} {ch} {hh}]}}}]}}]} {[{pr} {[{[{{any_Cx_y_y_pr_ax {[{d} {l} {z} {m} {w} {zh} {v} {b} {g} {dh} {ch} {hh}]}}} {y}]} {[{y} {{any_Cx_y_y_pr_ax {[{d} {l} {z} {m} {w} {zh} {v} {b} {g} {dh} {ch} {hh}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: ax
rule: {[{[{{[{{any_Cx_s_y_ax_b_pr {[{d} {hh} {v} {z} {m} {g} {zh} {l} {w} {ch} {dh}]}}} {s}]}} {{[{s} {{any_Cx_s_y_ax_b_pr {[{d} {hh} {v} {z} {m} {g} {zh} {l} {w} {ch} {dh}]}}}]}}]} {[{ax} {[{[{{any_Cx_s_y_ax_b_pr {[{d} {hh} {v} {z} {m} {g} {zh} {l} {w} {ch} {dh}]}}} {s}]} {[{s} {{any_Cx_s_y_ax_b_pr {[{d} {hh} {v} {z} {m} {g} {zh} {l} {w} {ch} {dh}]}}}]}]}]}]}
Phoneme rule:
guard: jh phoneme: b
rule: {[{[{{[{{any_Cx_jh_s_b_ax_ax {[{ch} {hh} {w} {z} {zh} {v} {d} {l} {dh} {g} {m}]}}} {jh}]}} {{[{jh} {{any_Cx_jh_s_b_ax_ax {[{ch} {hh} {w} {z} {zh} {v} {d} {l} {dh} {g} {m}]}}}]}}]} {[{b} {[{[{{any_Cx_jh_s_b_ax_ax {[{ch} {hh} {w} {z} {zh} {v} {d} {l} {dh} {g} {m}]}}} {jh}]} {[{jh} {{any_Cx_jh_s_b_ax_ax {[{ch} {hh} {w} {z} {zh} {v} {d} {l} {dh} {g} {m}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ax
rule: {[{[{{[{{any_Cx_sh_jh_ax_b {[{hh} {m} {d} {v} {z} {g} {l} {ch} {zh} {w} {dh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_jh_ax_b {[{hh} {m} {d} {v} {z} {g} {l} {ch} {zh} {w} {dh}]}}}]}}]} {[{ax} {[{[{{any_Cx_sh_jh_ax_l_b {[{hh} {ch} {v} {z} {m} {zh} {g} {d} {dh} {w}]}}} {sh}]} {[{sh} {{any_Cx_sh_jh_ax_l_b {[{hh} {ch} {v} {z} {m} {zh} {g} {d} {dh} {w}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: l
rule: {[{[{{[{{any_Cx_sh_sh_l_ax {[{b} {zh} {g} {m} {ch} {w} {z} {d} {dh} {hh} {v}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_l_ax {[{b} {zh} {g} {m} {ch} {w} {z} {d} {dh} {hh} {v}]}}}]}}]} {[{l} {[{[{{any_Cx_sh_sh_l_ax {[{b} {zh} {g} {m} {ch} {w} {z} {d} {dh} {hh} {v}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_l_ax {[{b} {zh} {g} {m} {ch} {w} {z} {d} {dh} {hh} {v}]}}}]}]}]}]}
Closing rule:
guard: w
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {w}]}} {{[{w} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_l_w {[{zh} {hh} {g} {d} {dh} {v} {m} {b} {ch} {z}]}}} {w}]}} {{[{w} {{any_Cx_sh_l_w {[{zh} {hh} {g} {d} {dh} {v} {m} {b} {ch} {z}]}}}]}}]} {sil}]}
rule 3 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Vx_ih_z_p_noSlide {[{ah} {uh} {y} {aa} {eh} {oh} {uw} {ax} {iy} {ao} {ae}]}}}]} {[{{any_Vx_ih_z_p_noSlide {[{ah} {uh} {y} {aa} {eh} {oh} {uw} {ax} {iy} {ao} {ae}]}}} {z}]}]}} {{[{[{z} {{any_Cx_ih_z_p {[{b} {d} {w} {ch} {v} {dh} {l} {m} {g} {zh} {hh}]}}}]} {[{{any_Cx_ih_z_p {[{b} {d} {w} {ch} {v} {dh} {l} {m} {g} {zh} {hh}]}}} {z}]}]}}]}}
Phoneme rule:
guard: z phoneme: ih
rule: {[{[{[{{[{{any_Vx_z_p_z_ih_noSlide {[{ao} {eh} {y} {uw} {uh} {iy} {oh} {aa} {ah} {ae} {ax}]}}} {z}]}} {{[{z} {{any_Vx_z_p_z_ih_noSlide {[{ao} {eh} {y} {uw} {uh} {iy} {oh} {aa} {ah} {ae} {ax}]}}}]}}]} {[{{[{{any_Cx_z_p_z_r {[{b} {dh} {g} {w} {zh} {m} {ch} {hh} {d} {l} {v}]}}} {z}]}} {{[{z} {{any_Cx_z_p_z_r {[{b} {dh} {g} {w} {zh} {m} {ch} {hh} {d} {l} {v}]}}}]}}]}]} {[{ih} {[{[{{any_Vx_z_p_z_ih_noSlide {[{ao} {eh} {y} {uw} {uh} {iy} {oh} {aa} {ah} {ae} {ax}]}}} {z}]} {[{z} {{any_Vx_z_p_z_ih_noSlide {[{ao} {eh} {y} {uw} {uh} {iy} {oh} {aa} {ah} {ae} {ax}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: r
rule: {[{[{{[{{any_Cx_s_z_r {[{hh} {zh} {b} {w} {m} {v} {dh} {l} {d} {g} {ch}]}}} {s}]}} {{[{s} {{any_Cx_s_z_r {[{hh} {zh} {b} {w} {m} {v} {dh} {l} {d} {g} {ch}]}}}]}}]} {[{r} {[{[{{any_Cx_s_z_r {[{hh} {zh} {b} {w} {m} {v} {dh} {l} {d} {g} {ch}]}}} {s}]} {[{s} {{any_Cx_s_z_r {[{hh} {zh} {b} {w} {m} {v} {dh} {l} {d} {g} {ch}]}}}]}]}]}]}
Phoneme rule:
guard: y phoneme: eh
rule: {[{[{[{{[{{any_Vx_y_s_eh_noSlide {[{ih} {iy} {ae} {ao} {ax} {oh} {uw} {uh} {aa} {ah}]}}} {y}]}} {{[{y} {{any_Vx_y_s_eh_noSlide {[{ih} {iy} {ae} {ao} {ax} {oh} {uw} {uh} {aa} {ah}]}}}]}}]} {[{{[{{any_Cx_y_s_pr_r {[{dh} {v} {z} {w} {b} {l} {m} {zh} {hh} {ch} {d} {g}]}}} {y}]}} {{[{y} {{any_Cx_y_s_pr_r {[{dh} {v} {z} {w} {b} {l} {m} {zh} {hh} {ch} {d} {g}]}}}]}}]}]} {[{eh} {[{[{{any_Vx_y_s_eh_noSlide {[{ih} {iy} {ae} {ao} {ax} {oh} {uw} {uh} {aa} {ah}]}}} {y}]} {[{y} {{any_Vx_y_s_eh_noSlide {[{ih} {iy} {ae} {ao} {ax} {oh} {uw} {uh} {aa} {ah}]}}}]}]}]}]}
Phoneme rule:
guard: y phoneme: pr
rule: {[{[{{[{{any_Cx_y_y_pr_ax {[{dh} {l} {z} {zh} {ch} {hh} {m} {d} {g} {v} {w} {b}]}}} {y}]}} {{[{y} {{any_Cx_y_y_pr_ax {[{dh} {l} {z} {zh} {ch} {hh} {m} {d} {g} {v} {w} {b}]}}}]}}]} {[{pr} {[{[{{any_Cx_y_y_pr_ax {[{dh} {l} {z} {zh} {ch} {hh} {m} {d} {g} {v} {w} {b}]}}} {y}]} {[{y} {{any_Cx_y_y_pr_ax {[{dh} {l} {z} {zh} {ch} {hh} {m} {d} {g} {v} {w} {b}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: ax
rule: {[{[{{[{{any_Cx_s_y_ax_b_pr {[{z} {g} {l} {v} {ch} {m} {d} {hh} {w} {zh} {dh}]}}} {s}]}} {{[{s} {{any_Cx_s_y_ax_b_pr {[{z} {g} {l} {v} {ch} {m} {d} {hh} {w} {zh} {dh}]}}}]}}]} {[{ax} {[{[{{any_Cx_s_y_ax_b_pr {[{z} {g} {l} {v} {ch} {m} {d} {hh} {w} {zh} {dh}]}}} {s}]} {[{s} {{any_Cx_s_y_ax_b_pr {[{z} {g} {l} {v} {ch} {m} {d} {hh} {w} {zh} {dh}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: b
rule: {[{[{{[{{any_Cx_zh_s_b_ax_ax {[{ch} {m} {d} {g} {hh} {dh} {l} {v} {w} {z}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_s_b_ax_ax {[{ch} {m} {d} {g} {hh} {dh} {l} {v} {w} {z}]}}}]}}]} {[{b} {[{[{{any_Cx_zh_s_b_ax_ax {[{ch} {m} {d} {g} {hh} {dh} {l} {v} {w} {z}]}}} {zh}]} {[{zh} {{any_Cx_zh_s_b_ax_ax {[{ch} {m} {d} {g} {hh} {dh} {l} {v} {w} {z}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ax
rule: {[{[{{[{{any_Cx_sh_zh_ax_b {[{ch} {d} {w} {m} {g} {hh} {l} {v} {dh} {z}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_zh_ax_b {[{ch} {d} {w} {m} {g} {hh} {l} {v} {dh} {z}]}}}]}}]} {[{ax} {[{[{{any_Cx_sh_zh_ax_l_b {[{hh} {v} {z} {dh} {m} {g} {d} {w} {ch}]}}} {sh}]} {[{sh} {{any_Cx_sh_zh_ax_l_b {[{hh} {v} {z} {dh} {m} {g} {d} {w} {ch}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: l
rule: {[{[{{[{{any_Cx_sh_sh_l_ax {[{w} {hh} {b} {ch} {m} {v} {z} {dh} {g} {d} {zh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_l_ax {[{w} {hh} {b} {ch} {m} {v} {z} {dh} {g} {d} {zh}]}}}]}}]} {[{l} {[{[{{any_Cx_sh_sh_l_ax {[{w} {hh} {b} {ch} {m} {v} {z} {dh} {g} {d} {zh}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_l_ax {[{w} {hh} {b} {ch} {m} {v} {z} {dh} {g} {d} {zh}]}}}]}]}]}]}
Closing rule:
guard: w
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {w}]}} {{[{w} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_l_w {[{g} {zh} {ch} {b} {d} {hh} {v} {dh} {z} {m}]}}} {w}]}} {{[{w} {{any_Cx_sh_l_w {[{g} {zh} {ch} {b} {d} {hh} {v} {dh} {z} {m}]}}}]}}]} {sil}]}
rule 4 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Vx_ih_z_p_noSlide {[{ae} {oh} {uh} {ah} {iy} {uw} {ao} {ax} {eh} {aa} {y}]}}}]} {[{{any_Vx_ih_z_p_noSlide {[{ae} {oh} {uh} {ah} {iy} {uw} {ao} {ax} {eh} {aa} {y}]}}} {z}]}]}} {{[{[{z} {{any_Cx_ih_z_p {[{zh} {ch} {g} {hh} {l} {b} {d} {v} {w} {dh} {m}]}}}]} {[{{any_Cx_ih_z_p {[{zh} {ch} {g} {hh} {l} {b} {d} {v} {w} {dh} {m}]}}} {z}]}]}}]}}
Phoneme rule:
guard: z phoneme: ih
rule: {[{[{[{{[{{any_Vx_z_p_z_ih_noSlide {[{ae} {eh} {aa} {ah} {ao} {iy} {y} {ax} {oh} {uw} {uh}]}}} {z}]}} {{[{z} {{any_Vx_z_p_z_ih_noSlide {[{ae} {eh} {aa} {ah} {ao} {iy} {y} {ax} {oh} {uw} {uh}]}}}]}}]} {[{{[{{any_Cx_z_p_z_r {[{dh} {l} {v} {b} {hh} {ch} {w} {d} {g} {zh} {m}]}}} {z}]}} {{[{z} {{any_Cx_z_p_z_r {[{dh} {l} {v} {b} {hh} {ch} {w} {d} {g} {zh} {m}]}}}]}}]}]} {[{ih} {[{[{{any_Vx_z_p_z_ih_noSlide {[{ae} {eh} {aa} {ah} {ao} {iy} {y} {ax} {oh} {uw} {uh}]}}} {z}]} {[{z} {{any_Vx_z_p_z_ih_noSlide {[{ae} {eh} {aa} {ah} {ao} {iy} {y} {ax} {oh} {uw} {uh}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: r
rule: {[{[{{[{{any_Cx_s_z_r {[{v} {g} {m} {w} {ch} {hh} {l} {zh} {b} {d} {dh}]}}} {s}]}} {{[{s} {{any_Cx_s_z_r {[{v} {g} {m} {w} {ch} {hh} {l} {zh} {b} {d} {dh}]}}}]}}]} {[{r} {[{[{{any_Cx_s_z_r {[{v} {g} {m} {w} {ch} {hh} {l} {zh} {b} {d} {dh}]}}} {s}]} {[{s} {{any_Cx_s_z_r {[{v} {g} {m} {w} {ch} {hh} {l} {zh} {b} {d} {dh}]}}}]}]}]}]}
Phoneme rule:
guard: y phoneme: eh
rule: {[{[{[{{[{{any_Vx_y_s_eh_noSlide {[{ax} {iy} {uw} {aa} {ae} {ah} {ao} {uh} {ih} {oh}]}}} {y}]}} {{[{y} {{any_Vx_y_s_eh_noSlide {[{ax} {iy} {uw} {aa} {ae} {ah} {ao} {uh} {ih} {oh}]}}}]}}]} {[{{[{{any_Cx_y_s_pr_r {[{d} {v} {w} {z} {ch} {l} {m} {b} {g} {hh} {zh} {dh}]}}} {y}]}} {{[{y} {{any_Cx_y_s_pr_r {[{d} {v} {w} {z} {ch} {l} {m} {b} {g} {hh} {zh} {dh}]}}}]}}]}]} {[{eh} {[{[{{any_Vx_y_s_eh_noSlide {[{ax} {iy} {uw} {aa} {ae} {ah} {ao} {uh} {ih} {oh}]}}} {y}]} {[{y} {{any_Vx_y_s_eh_noSlide {[{ax} {iy} {uw} {aa} {ae} {ah} {ao} {uh} {ih} {oh}]}}}]}]}]}]}
Phoneme rule:
guard: y phoneme: pr
rule: {[{[{{[{{any_Cx_y_y_pr_ax {[{ch} {zh} {v} {g} {l} {w} {dh} {hh} {z} {d} {b} {m}]}}} {y}]}} {{[{y} {{any_Cx_y_y_pr_ax {[{ch} {zh} {v} {g} {l} {w} {dh} {hh} {z} {d} {b} {m}]}}}]}}]} {[{pr} {[{[{{any_Cx_y_y_pr_ax {[{ch} {zh} {v} {g} {l} {w} {dh} {hh} {z} {d} {b} {m}]}}} {y}]} {[{y} {{any_Cx_y_y_pr_ax {[{ch} {zh} {v} {g} {l} {w} {dh} {hh} {z} {d} {b} {m}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: ax
rule: {[{[{{[{{any_Cx_s_y_ax_b_pr {[{hh} {l} {g} {v} {dh} {m} {d} {ch} {w} {z} {zh}]}}} {s}]}} {{[{s} {{any_Cx_s_y_ax_b_pr {[{hh} {l} {g} {v} {dh} {m} {d} {ch} {w} {z} {zh}]}}}]}}]} {[{ax} {[{[{{any_Cx_s_y_ax_b_pr {[{hh} {l} {g} {v} {dh} {m} {d} {ch} {w} {z} {zh}]}}} {s}]} {[{s} {{any_Cx_s_y_ax_b_pr {[{hh} {l} {g} {v} {dh} {m} {d} {ch} {w} {z} {zh}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: b
rule: {[{[{{[{{any_Cx_zh_s_b_ax_ax {[{d} {g} {v} {hh} {m} {w} {dh} {l} {ch} {z}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_s_b_ax_ax {[{d} {g} {v} {hh} {m} {w} {dh} {l} {ch} {z}]}}}]}}]} {[{b} {[{[{{any_Cx_zh_s_b_ax_ax {[{d} {g} {v} {hh} {m} {w} {dh} {l} {ch} {z}]}}} {zh}]} {[{zh} {{any_Cx_zh_s_b_ax_ax {[{d} {g} {v} {hh} {m} {w} {dh} {l} {ch} {z}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ax
rule: {[{[{{[{{any_Cx_sh_zh_ax_b {[{dh} {z} {hh} {l} {w} {d} {m} {v} {ch} {g}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_zh_ax_b {[{dh} {z} {hh} {l} {w} {d} {m} {v} {ch} {g}]}}}]}}]} {[{ax} {[{[{{any_Cx_sh_zh_ax_l_b {[{d} {z} {v} {ch} {hh} {m} {w} {dh} {g}]}}} {sh}]} {[{sh} {{any_Cx_sh_zh_ax_l_b {[{d} {z} {v} {ch} {hh} {m} {w} {dh} {g}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: l
rule: {[{[{{[{{any_Cx_sh_sh_l_ax {[{w} {z} {v} {g} {zh} {ch} {m} {dh} {hh} {b} {d}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_l_ax {[{w} {z} {v} {g} {zh} {ch} {m} {dh} {hh} {b} {d}]}}}]}}]} {[{l} {[{[{{any_Cx_sh_sh_l_ax {[{w} {z} {v} {g} {zh} {ch} {m} {dh} {hh} {b} {d}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_l_ax {[{w} {z} {v} {g} {zh} {ch} {m} {dh} {hh} {b} {d}]}}}]}]}]}]}
Closing rule:
guard: thr
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {thr}]}} {{[{thr} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_l_thr {[{zh} {d} {ch} {w} {v} {z} {hh} {m} {dh} {g} {b}]}}} {thr}]}} {{[{thr} {{any_Cx_sh_l_thr {[{zh} {d} {ch} {w} {v} {z} {hh} {m} {dh} {g} {b}]}}}]}}]} {sil}]}

parse: err = Parser error
ruleAligned = [{{ih 1} [{2 1} {3 1} {4 3}]} {{r 1} [{2 2} {3 2} {4 4}]} {{eh 1} [{2 3} {3 3} {4 5}]} {{pr 2} []} {{g 3} [{2 4} {3 4} {4 6}]} {{ax 1} [{2 6} {3 6} {4 8}]} {{b 1} [{2 7} {3 7} {4 9}]} {{ax 2} []} {{l 1} [{2 9} {3 9} {4 11}]}]

results (after rule-alignment) =
{72 []}
{80 [{sil 193 193} {ih 246 246} {r 250 250} {eh 254 254} {pr 258 258} {ax 261 261} {b 265 265} {ax 269 269} {l 273 273} {sil 276 276}]}
{91 [{sil 0 0} {ih 103 120} {r 121 134} {eh 135 141} {g 142 152} {y 153 153} {ax 156 177} {b 178 184} {ax 185 185} {l 188 203} {sil 204 204}]}
{105 [{sil 0 0} {ih 104 120} {r 121 135} {eh 136 143} {g 144 152} {y 153 153} {ax 156 177} {b 178 185} {ax 186 186} {l 189 203} {sil 204 204}]}
{125 [{sil 3 3} {iy 105 114} {z 115 115} {ih 118 121} {r 122 137} {eh 138 142} {g 143 154} {y 154 154} {ax 157 179} {b 180 185} {ax 186 186} {l 188 203} {sil 204 204}]}

timeAligned = [{{ih 118 120} [{2 1} {3 1} {4 3}]} {{r 122 134} [{2 2} {3 2} {4 4}]} {{eh 138 141} [{2 3} {3 3} {4 5}]} {{g 144 152} [{2 4} {3 4} {4 6}]} {{ax 157 177} [{2 6} {3 6} {4 8}]} {{b 180 184} [{2 7} {3 7} {4 9}]} {{l 189 203} [{2 9} {3 9} {4 11}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 120
i, iTime, newITime, timeStartFrom = 2 1 2 134
i, iTime, newITime, timeStartFrom = 3 2 -1 141
i, iTime, newITime, timeStartFrom = 4 2 3 141
i, iTime, newITime, timeStartFrom = 5 3 4 152
i, iTime, newITime, timeStartFrom = 6 4 5 177
i, iTime, newITime, timeStartFrom = 7 5 -1 184
i, iTime, newITime, timeStartFrom = 8 5 6 184
combinedVerdict    = [{ih 1} {r 1} {eh 1} {pr 2} {g 3} {ax 1} {b 1} {ax 2} {l 1}]
ruleAlignedVerdict = [{ih 1} {r 1} {eh 1} {pr 2} {g 3} {ax 1} {b 1} {ax 2} {l 1}]

score->
+1 for ih
+1 for r
+1 for eh
-1 for pr
-1 for g
+1 for ax
+1 for b
-1 for ax
+1 for l
score<-: 3

results =
{72 []}
{80 [{sil 193 195} {ih 196 198} {r 199 201} {eh 202 204} {p 205 207} {r 208 210} {ax 211 213} {b 214 216} {ax 217 219} {l 220 222} {sil 223 225}]}
{91 [{sil 0 93} {ih 94 109} {r 110 122} {eh 123 128} {p 129 141} {r 142 144} {ax 145 161} {b 162 167} {ax 168 170} {l 171 185} {sil 186 256}]}
{105 [{sil 0 108} {ih 109 126} {r 127 142} {eh 143 149} {p 150 162} {r 163 165} {ax 166 186} {b 187 194} {ax 195 197} {l 198 213} {sil 214 298}]}
{125 [{sil 3 130} {iy 131 143} {z 144 146} {ih 147 151} {r 152 171} {eh 172 178} {p 179 188} {b 189 196} {zh 197 199} {ax 200 224} {b 225 231} {ax 232 234} {l 235 254} {sil 255 356}]}

normalised results =
{72 []}
{80 [{sil 193 195} {ih 245 245} {r 249 249} {eh 253 253} {p 256 256} {r 260 260} {ax 264 264} {b 268 268} {ax 271 271} {l 275 275} {sil 279 279}]}
{91 [{sil 0 93} {ih 103 120} {r 121 134} {eh 135 141} {p 142 155} {r 156 156} {ax 159 177} {b 178 184} {ax 185 185} {l 188 203} {sil 204 281}]}
{105 [{sil 0 108} {ih 104 120} {r 121 135} {eh 136 142} {p 143 154} {r 155 155} {ax 158 177} {b 178 185} {ax 186 186} {l 189 203} {sil 204 284}]}
{125 [{sil 3 130} {iy 105 114} {z 115 115} {ih 118 121} {r 122 137} {eh 138 142} {p 143 150} {b 151 157} {zh 158 158} {ax 160 179} {b 180 185} {ax 186 186} {l 188 203} {sil 204 285}]}

Mapped result =
result 0 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 1 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 2 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 3 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 4 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false

Rules =
rule 0 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Vx_ih_z_p_noSlide {[{aa} {uw} {ae} {ax} {iy} {oh} {y} {ah} {ao} {eh} {uh}]}}}]} {[{{any_Vx_ih_z_p_noSlide {[{aa} {uw} {ae} {ax} {iy} {oh} {y} {ah} {ao} {eh} {uh}]}}} {z}]}]}} {{[{[{z} {{any_Cx_ih_z_p {[{w} {m} {v} {dh} {g} {hh} {b} {l} {zh} {d} {ch}]}}}]} {[{{any_Cx_ih_z_p {[{w} {m} {v} {dh} {g} {hh} {b} {l} {zh} {d} {ch}]}}} {z}]}]}}]}}
Phoneme rule:
guard: z phoneme: ih
rule: {[{[{[{{[{{any_Vx_z_p_z_ih_noSlide {[{ao} {iy} {oh} {y} {aa} {ae} {uh} {ah} {uw} {ax} {eh}]}}} {z}]}} {{[{z} {{any_Vx_z_p_z_ih_noSlide {[{ao} {iy} {oh} {y} {aa} {ae} {uh} {ah} {uw} {ax} {eh}]}}}]}}]} {[{{[{{any_Cx_z_p_z_r {[{w} {hh} {ch} {v} {b} {d} {m} {g} {l} {zh} {dh}]}}} {z}]}} {{[{z} {{any_Cx_z_p_z_r {[{w} {hh} {ch} {v} {b} {d} {m} {g} {l} {zh} {dh}]}}}]}}]}]} {[{ih} {[{[{{any_Vx_z_p_z_ih_noSlide {[{ao} {iy} {oh} {y} {aa} {ae} {uh} {ah} {uw} {ax} {eh}]}}} {z}]} {[{z} {{any_Vx_z_p_z_ih_noSlide {[{ao} {iy} {oh} {y} {aa} {ae} {uh} {ah} {uw} {ax} {eh}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: r
rule: {[{[{{[{{any_Cx_s_z_r {[{zh} {m} {l} {v} {hh} {dh} {d} {g} {ch} {w} {b}]}}} {s}]}} {{[{s} {{any_Cx_s_z_r {[{zh} {m} {l} {v} {hh} {dh} {d} {g} {ch} {w} {b}]}}}]}}]} {[{r} {[{[{{any_Cx_s_z_r {[{zh} {m} {l} {v} {hh} {dh} {d} {g} {ch} {w} {b}]}}} {s}]} {[{s} {{any_Cx_s_z_r {[{zh} {m} {l} {v} {hh} {dh} {d} {g} {ch} {w} {b}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: eh
rule: {[{[{[{{[{{any_Vx_s_s_eh_noSlide {[{ao} {ih} {uw} {ae} {ah} {ax} {iy} {oh} {uh} {y} {aa}]}}} {s}]}} {{[{s} {{any_Vx_s_s_eh_noSlide {[{ao} {ih} {uw} {ae} {ah} {ax} {iy} {oh} {uh} {y} {aa}]}}}]}}]} {[{{[{{any_Cx_s_s_p_r {[{d} {z} {zh} {hh} {m} {w} {g} {b} {ch} {dh} {l} {v}]}}} {s}]}} {{[{s} {{any_Cx_s_s_p_r {[{d} {z} {zh} {hh} {m} {w} {g} {b} {ch} {dh} {l} {v}]}}}]}}]}]} {[{eh} {[{[{{any_Vx_s_s_eh_noSlide {[{ao} {ih} {uw} {ae} {ah} {ax} {iy} {oh} {uh} {y} {aa}]}}} {s}]} {[{s} {{any_Vx_s_s_eh_noSlide {[{ao} {ih} {uw} {ae} {ah} {ax} {iy} {oh} {uh} {y} {aa}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: p
rule: {[{[{{[{{any_Cx_zh_s_p_r {[{b} {ch} {dh} {z} {hh} {l} {w} {m} {d} {g} {v}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_s_p_r {[{b} {ch} {dh} {z} {hh} {l} {w} {m} {d} {g} {v}]}}}]}}]} {[{p} {[{[{{any_Cx_zh_s_p_r {[{b} {ch} {dh} {z} {hh} {l} {w} {m} {d} {g} {v}]}}} {zh}]} {[{zh} {{any_Cx_zh_s_p_r {[{b} {ch} {dh} {z} {hh} {l} {w} {m} {d} {g} {v}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: r
rule: {[{[{{[{{any_Cx_zh_zh_r_ax_p {[{g} {hh} {m} {ch} {d} {z} {l} {dh} {v} {w} {b}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_r_ax_p {[{g} {hh} {m} {ch} {d} {z} {l} {dh} {v} {w} {b}]}}}]}}]} {[{r} {[{[{{any_Cx_zh_zh_r_ax_p {[{g} {hh} {m} {ch} {d} {z} {l} {dh} {v} {w} {b}]}}} {zh}]} {[{zh} {{any_Cx_zh_zh_r_ax_p {[{g} {hh} {m} {ch} {d} {z} {l} {dh} {v} {w} {b}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: ax
rule: {[{[{{[{{any_Cx_s_zh_ax_b_r {[{g} {hh} {m} {ch} {d} {v} {dh} {w} {z} {l}]}}} {s}]}} {{[{s} {{any_Cx_s_zh_ax_b_r {[{g} {hh} {m} {ch} {d} {v} {dh} {w} {z} {l}]}}}]}}]} {[{ax} {[{[{{any_Cx_s_zh_ax_b_r {[{g} {hh} {m} {ch} {d} {v} {dh} {w} {z} {l}]}}} {s}]} {[{s} {{any_Cx_s_zh_ax_b_r {[{g} {hh} {m} {ch} {d} {v} {dh} {w} {z} {l}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: b
rule: {[{[{{[{{any_Cx_sh_s_b_ax_ax {[{g} {hh} {w} {ch} {zh} {v} {l} {dh} {m} {z} {d}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_s_b_ax_ax {[{g} {hh} {w} {ch} {zh} {v} {l} {dh} {m} {z} {d}]}}}]}}]} {[{b} {[{[{{any_Cx_sh_s_b_ax_ax {[{g} {hh} {w} {ch} {zh} {v} {l} {dh} {m} {z} {d}]}}} {sh}]} {[{sh} {{any_Cx_sh_s_b_ax_ax {[{g} {hh} {w} {ch} {zh} {v} {l} {dh} {m} {z} {d}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ax
rule: {[{[{{[{{any_Cx_sh_sh_ax_b {[{m} {d} {dh} {l} {v} {zh} {g} {hh} {z} {ch} {w}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_ax_b {[{m} {d} {dh} {l} {v} {zh} {g} {hh} {z} {ch} {w}]}}}]}}]} {[{ax} {[{[{{any_Cx_sh_sh_ax_l_b {[{z} {ch} {w} {dh} {m} {v} {d} {zh} {g} {hh}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_ax_l_b {[{z} {ch} {w} {dh} {m} {v} {d} {zh} {g} {hh}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: l
rule: {[{[{{[{{any_Cx_sh_sh_l_ax {[{dh} {g} {z} {m} {w} {zh} {ch} {d} {hh} {v} {b}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_l_ax {[{dh} {g} {z} {m} {w} {zh} {ch} {d} {hh} {v} {b}]}}}]}}]} {[{l} {[{[{{any_Cx_sh_sh_l_ax {[{dh} {g} {z} {m} {w} {zh} {ch} {d} {hh} {v} {b}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_l_ax {[{dh} {g} {z} {m} {w} {zh} {ch} {d} {hh} {v} {b}]}}}]}]}]}]}
Closing rule:
guard: d
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {d}]}} {{[{d} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_l_d {[{dh} {zh} {m} {g} {ch} {v} {b} {w} {z} {hh}]}}} {d}]}} {{[{d} {{any_Cx_sh_l_d {[{dh} {zh} {m} {g} {ch} {v} {b} {w} {z} {hh}]}}}]}}]} {sil}]}
rule 1 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Vx_ih_z_p_noSlide {[{iy} {y} {aa} {ax} {uh} {uw} {ae} {ah} {eh} {oh} {ao}]}}}]} {[{{any_Vx_ih_z_p_noSlide {[{iy} {y} {aa} {ax} {uh} {uw} {ae} {ah} {eh} {oh} {ao}]}}} {z}]}]}} {{[{[{z} {{any_Cx_ih_z_p {[{w} {m} {g} {dh} {b} {ch} {d} {hh} {zh} {l} {v}]}}}]} {[{{any_Cx_ih_z_p {[{w} {m} {g} {dh} {b} {ch} {d} {hh} {zh} {l} {v}]}}} {z}]}]}}]}}
Phoneme rule:
guard: z phoneme: ih
rule: {[{[{[{{[{{any_Vx_z_p_z_ih_noSlide {[{aa} {ax} {uw} {uh} {ah} {eh} {ae} {iy} {oh} {ao} {y}]}}} {z}]}} {{[{z} {{any_Vx_z_p_z_ih_noSlide {[{aa} {ax} {uw} {uh} {ah} {eh} {ae} {iy} {oh} {ao} {y}]}}}]}}]} {[{{[{{any_Cx_z_p_z_r {[{ch} {dh} {v} {g} {b} {hh} {w} {l} {zh} {d} {m}]}}} {z}]}} {{[{z} {{any_Cx_z_p_z_r {[{ch} {dh} {v} {g} {b} {hh} {w} {l} {zh} {d} {m}]}}}]}}]}]} {[{ih} {[{[{{any_Vx_z_p_z_ih_noSlide {[{aa} {ax} {uw} {uh} {ah} {eh} {ae} {iy} {oh} {ao} {y}]}}} {z}]} {[{z} {{any_Vx_z_p_z_ih_noSlide {[{aa} {ax} {uw} {uh} {ah} {eh} {ae} {iy} {oh} {ao} {y}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: r
rule: {[{[{{[{{any_Cx_s_z_r {[{g} {b} {l} {hh} {m} {v} {ch} {dh} {w} {d} {zh}]}}} {s}]}} {{[{s} {{any_Cx_s_z_r {[{g} {b} {l} {hh} {m} {v} {ch} {dh} {w} {d} {zh}]}}}]}}]} {[{r} {[{[{{any_Cx_s_z_r {[{g} {b} {l} {hh} {m} {v} {ch} {dh} {w} {d} {zh}]}}} {s}]} {[{s} {{any_Cx_s_z_r {[{g} {b} {l} {hh} {m} {v} {ch} {dh} {w} {d} {zh}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: eh
rule: {[{[{[{{[{{any_Vx_s_s_eh_noSlide {[{aa} {ih} {oh} {uh} {y} {ae} {ah} {ao} {ax} {iy} {uw}]}}} {s}]}} {{[{s} {{any_Vx_s_s_eh_noSlide {[{aa} {ih} {oh} {uh} {y} {ae} {ah} {ao} {ax} {iy} {uw}]}}}]}}]} {[{{[{{any_Cx_s_s_p_r {[{z} {ch} {hh} {g} {l} {v} {zh} {b} {m} {dh} {w} {d}]}}} {s}]}} {{[{s} {{any_Cx_s_s_p_r {[{z} {ch} {hh} {g} {l} {v} {zh} {b} {m} {dh} {w} {d}]}}}]}}]}]} {[{eh} {[{[{{any_Vx_s_s_eh_noSlide {[{aa} {ih} {oh} {uh} {y} {ae} {ah} {ao} {ax} {iy} {uw}]}}} {s}]} {[{s} {{any_Vx_s_s_eh_noSlide {[{aa} {ih} {oh} {uh} {y} {ae} {ah} {ao} {ax} {iy} {uw}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: p
rule: {[{[{{[{{any_Cx_zh_s_p_r {[{l} {hh} {w} {v} {z} {b} {dh} {g} {d} {m} {ch}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_s_p_r {[{l} {hh} {w} {v} {z} {b} {dh} {g} {d} {m} {ch}]}}}]}}]} {[{p} {[{[{{any_Cx_zh_s_p_r {[{l} {hh} {w} {v} {z} {b} {dh} {g} {d} {m} {ch}]}}} {zh}]} {[{zh} {{any_Cx_zh_s_p_r {[{l} {hh} {w} {v} {z} {b} {dh} {g} {d} {m} {ch}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: r
rule: {[{[{{[{{any_Cx_zh_zh_r_ax_p {[{b} {ch} {v} {g} {m} {dh} {hh} {l} {d} {w} {z}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_r_ax_p {[{b} {ch} {v} {g} {m} {dh} {hh} {l} {d} {w} {z}]}}}]}}]} {[{r} {[{[{{any_Cx_zh_zh_r_ax_p {[{b} {ch} {v} {g} {m} {dh} {hh} {l} {d} {w} {z}]}}} {zh}]} {[{zh} {{any_Cx_zh_zh_r_ax_p {[{b} {ch} {v} {g} {m} {dh} {hh} {l} {d} {w} {z}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: ax
rule: {[{[{{[{{any_Cx_s_zh_ax_b_r {[{dh} {m} {l} {v} {ch} {d} {hh} {w} {g} {z}]}}} {s}]}} {{[{s} {{any_Cx_s_zh_ax_b_r {[{dh} {m} {l} {v} {ch} {d} {hh} {w} {g} {z}]}}}]}}]} {[{ax} {[{[{{any_Cx_s_zh_ax_b_r {[{dh} {m} {l} {v} {ch} {d} {hh} {w} {g} {z}]}}} {s}]} {[{s} {{any_Cx_s_zh_ax_b_r {[{dh} {m} {l} {v} {ch} {d} {hh} {w} {g} {z}]}}}]}]}]}]}
Phoneme rule:
guard: jh phoneme: b
rule: {[{[{{[{{any_Cx_jh_s_b_ax_ax {[{m} {zh} {dh} {d} {v} {l} {g} {hh} {z} {w} {ch}]}}} {jh}]}} {{[{jh} {{any_Cx_jh_s_b_ax_ax {[{m} {zh} {dh} {d} {v} {l} {g} {hh} {z} {w} {ch}]}}}]}}]} {[{b} {[{[{{any_Cx_jh_s_b_ax_ax {[{m} {zh} {dh} {d} {v} {l} {g} {hh} {z} {w} {ch}]}}} {jh}]} {[{jh} {{any_Cx_jh_s_b_ax_ax {[{m} {zh} {dh} {d} {v} {l} {g} {hh} {z} {w} {ch}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ax
rule: {[{[{{[{{any_Cx_sh_jh_ax_b {[{dh} {zh} {d} {m} {z} {v} {l} {ch} {g} {w} {hh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_jh_ax_b {[{dh} {zh} {d} {m} {z} {v} {l} {ch} {g} {w} {hh}]}}}]}}]} {[{ax} {[{[{{any_Cx_sh_jh_ax_l_b {[{ch} {dh} {m} {v} {w} {z} {d} {hh} {zh} {g}]}}} {sh}]} {[{sh} {{any_Cx_sh_jh_ax_l_b {[{ch} {dh} {m} {v} {w} {z} {d} {hh} {zh} {g}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: l
rule: {[{[{{[{{any_Cx_sh_sh_l_ax {[{z} {dh} {ch} {zh} {d} {b} {hh} {v} {w} {m} {g}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_l_ax {[{z} {dh} {ch} {zh} {d} {b} {hh} {v} {w} {m} {g}]}}}]}}]} {[{l} {[{[{{any_Cx_sh_sh_l_ax {[{z} {dh} {ch} {zh} {d} {b} {hh} {v} {w} {m} {g}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_l_ax {[{z} {dh} {ch} {zh} {d} {b} {hh} {v} {w} {m} {g}]}}}]}]}]}]}
Closing rule:
guard: f
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {f}]}} {{[{f} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_l_f {[{b} {v} {m} {ch} {hh} {zh} {dh} {g} {z} {d} {w}]}}} {f}]}} {{[{f} {{any_Cx_sh_l_f {[{b} {v} {m} {ch} {hh} {zh} {dh} {g} {z} {d} {w}]}}}]}}]} {sil}]}
rule 2 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Vx_ih_z_p_noSlide {[{aa} {uw} {uh} {ae} {ah} {ax} {eh} {y} {ao} {iy} {oh}]}}}]} {[{{any_Vx_ih_z_p_noSlide {[{aa} {uw} {uh} {ae} {ah} {ax} {eh} {y} {ao} {iy} {oh}]}}} {z}]}]}} {{[{[{z} {{any_Cx_ih_z_p {[{ch} {v} {dh} {g} {m} {zh} {l} {b} {d} {w} {hh}]}}}]} {[{{any_Cx_ih_z_p {[{ch} {v} {dh} {g} {m} {zh} {l} {b} {d} {w} {hh}]}}} {z}]}]}}]}}
Phoneme rule:
guard: z phoneme: ih
rule: {[{[{[{{[{{any_Vx_z_p_z_ih_noSlide {[{ae} {ao} {oh} {uw} {eh} {iy} {uh} {aa} {y} {ah} {ax}]}}} {z}]}} {{[{z} {{any_Vx_z_p_z_ih_noSlide {[{ae} {ao} {oh} {uw} {eh} {iy} {uh} {aa} {y} {ah} {ax}]}}}]}}]} {[{{[{{any_Cx_z_p_z_r {[{g} {ch} {v} {dh} {hh} {b} {l} {d} {zh} {m} {w}]}}} {z}]}} {{[{z} {{any_Cx_z_p_z_r {[{g} {ch} {v} {dh} {hh} {b} {l} {d} {zh} {m} {w}]}}}]}}]}]} {[{ih} {[{[{{any_Vx_z_p_z_ih_noSlide {[{ae} {ao} {oh} {uw} {eh} {iy} {uh} {aa} {y} {ah} {ax}]}}} {z}]} {[{z} {{any_Vx_z_p_z_ih_noSlide {[{ae} {ao} {oh} {uw} {eh} {iy} {uh} {aa} {y} {ah} {ax}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: r
rule: {[{[{{[{{any_Cx_s_z_r {[{b} {l} {zh} {m} {hh} {ch} {d} {v} {w} {dh} {g}]}}} {s}]}} {{[{s} {{any_Cx_s_z_r {[{b} {l} {zh} {m} {hh} {ch} {d} {v} {w} {dh} {g}]}}}]}}]} {[{r} {[{[{{any_Cx_s_z_r {[{b} {l} {zh} {m} {hh} {ch} {d} {v} {w} {dh} {g}]}}} {s}]} {[{s} {{any_Cx_s_z_r {[{b} {l} {zh} {m} {hh} {ch} {d} {v} {w} {dh} {g}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: eh
rule: {[{[{[{{[{{any_Vx_s_s_eh_noSlide {[{ae} {ax} {uw} {y} {iy} {oh} {uh} {aa} {ah} {ao} {ih}]}}} {s}]}} {{[{s} {{any_Vx_s_s_eh_noSlide {[{ae} {ax} {uw} {y} {iy} {oh} {uh} {aa} {ah} {ao} {ih}]}}}]}}]} {[{{[{{any_Cx_s_s_p_r {[{ch} {d} {b} {l} {z} {g} {m} {v} {w} {hh} {dh} {zh}]}}} {s}]}} {{[{s} {{any_Cx_s_s_p_r {[{ch} {d} {b} {l} {z} {g} {m} {v} {w} {hh} {dh} {zh}]}}}]}}]}]} {[{eh} {[{[{{any_Vx_s_s_eh_noSlide {[{ae} {ax} {uw} {y} {iy} {oh} {uh} {aa} {ah} {ao} {ih}]}}} {s}]} {[{s} {{any_Vx_s_s_eh_noSlide {[{ae} {ax} {uw} {y} {iy} {oh} {uh} {aa} {ah} {ao} {ih}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: p
rule: {[{[{{[{{any_Cx_zh_s_p_r {[{w} {d} {g} {l} {v} {hh} {m} {b} {dh} {ch} {z}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_s_p_r {[{w} {d} {g} {l} {v} {hh} {m} {b} {dh} {ch} {z}]}}}]}}]} {[{p} {[{[{{any_Cx_zh_s_p_r {[{w} {d} {g} {l} {v} {hh} {m} {b} {dh} {ch} {z}]}}} {zh}]} {[{zh} {{any_Cx_zh_s_p_r {[{w} {d} {g} {l} {v} {hh} {m} {b} {dh} {ch} {z}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: r
rule: {[{[{{[{{any_Cx_zh_zh_r_ax_p {[{d} {dh} {m} {v} {g} {ch} {hh} {z} {b} {l} {w}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_r_ax_p {[{d} {dh} {m} {v} {g} {ch} {hh} {z} {b} {l} {w}]}}}]}}]} {[{r} {[{[{{any_Cx_zh_zh_r_ax_p {[{d} {dh} {m} {v} {g} {ch} {hh} {z} {b} {l} {w}]}}} {zh}]} {[{zh} {{any_Cx_zh_zh_r_ax_p {[{d} {dh} {m} {v} {g} {ch} {hh} {z} {b} {l} {w}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: ax
rule: {[{[{{[{{any_Cx_s_zh_ax_b_r {[{g} {ch} {m} {hh} {dh} {v} {w} {z} {d} {l}]}}} {s}]}} {{[{s} {{any_Cx_s_zh_ax_b_r {[{g} {ch} {m} {hh} {dh} {v} {w} {z} {d} {l}]}}}]}}]} {[{ax} {[{[{{any_Cx_s_zh_ax_b_r {[{g} {ch} {m} {hh} {dh} {v} {w} {z} {d} {l}]}}} {s}]} {[{s} {{any_Cx_s_zh_ax_b_r {[{g} {ch} {m} {hh} {dh} {v} {w} {z} {d} {l}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: b
rule: {[{[{{[{{any_Cx_sh_s_b_ax_ax {[{ch} {d} {m} {w} {dh} {v} {zh} {g} {hh} {l} {z}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_s_b_ax_ax {[{ch} {d} {m} {w} {dh} {v} {zh} {g} {hh} {l} {z}]}}}]}}]} {[{b} {[{[{{any_Cx_sh_s_b_ax_ax {[{ch} {d} {m} {w} {dh} {v} {zh} {g} {hh} {l} {z}]}}} {sh}]} {[{sh} {{any_Cx_sh_s_b_ax_ax {[{ch} {d} {m} {w} {dh} {v} {zh} {g} {hh} {l} {z}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ax
rule: {[{[{{[{{any_Cx_sh_sh_ax_b {[{zh} {ch} {m} {v} {hh} {dh} {g} {w} {z} {l} {d}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_ax_b {[{zh} {ch} {m} {v} {hh} {dh} {g} {w} {z} {l} {d}]}}}]}}]} {[{ax} {[{[{{any_Cx_sh_sh_ax_l_b {[{dh} {w} {v} {d} {m} {zh} {g} {ch} {hh} {z}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_ax_l_b {[{dh} {w} {v} {d} {m} {zh} {g} {ch} {hh} {z}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: l
rule: {[{[{{[{{any_Cx_sh_sh_l_ax {[{ch} {m} {w} {b} {dh} {hh} {v} {d} {g} {z} {zh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_l_ax {[{ch} {m} {w} {b} {dh} {hh} {v} {d} {g} {z} {zh}]}}}]}}]} {[{l} {[{[{{any_Cx_sh_sh_l_ax {[{ch} {m} {w} {b} {dh} {hh} {v} {d} {g} {z} {zh}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_l_ax {[{ch} {m} {w} {b} {dh} {hh} {v} {d} {g} {z} {zh}]}}}]}]}]}]}
Closing rule:
guard: d
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {d}]}} {{[{d} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_l_d {[{dh} {zh} {hh} {b} {g} {z} {m} {ch} {w} {v}]}}} {d}]}} {{[{d} {{any_Cx_sh_l_d {[{dh} {zh} {hh} {b} {g} {z} {m} {ch} {w} {v}]}}}]}}]} {sil}]}
rule 3 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Vx_ih_z_p_noSlide {[{ao} {ax} {uw} {aa} {oh} {iy} {eh} {ae} {uh} {y} {ah}]}}}]} {[{{any_Vx_ih_z_p_noSlide {[{ao} {ax} {uw} {aa} {oh} {iy} {eh} {ae} {uh} {y} {ah}]}}} {z}]}]}} {{[{[{z} {{any_Cx_ih_z_p {[{ch} {d} {m} {dh} {hh} {zh} {v} {g} {l} {b} {w}]}}}]} {[{{any_Cx_ih_z_p {[{ch} {d} {m} {dh} {hh} {zh} {v} {g} {l} {b} {w}]}}} {z}]}]}}]}}
Phoneme rule:
guard: z phoneme: ih
rule: {[{[{[{{[{{any_Vx_z_p_z_ih_noSlide {[{aa} {ae} {ax} {eh} {ah} {oh} {uw} {ao} {iy} {y} {uh}]}}} {z}]}} {{[{z} {{any_Vx_z_p_z_ih_noSlide {[{aa} {ae} {ax} {eh} {ah} {oh} {uw} {ao} {iy} {y} {uh}]}}}]}}]} {[{{[{{any_Cx_z_p_z_r {[{v} {b} {g} {m} {zh} {ch} {dh} {w} {d} {hh} {l}]}}} {z}]}} {{[{z} {{any_Cx_z_p_z_r {[{v} {b} {g} {m} {zh} {ch} {dh} {w} {d} {hh} {l}]}}}]}}]}]} {[{ih} {[{[{{any_Vx_z_p_z_ih_noSlide {[{aa} {ae} {ax} {eh} {ah} {oh} {uw} {ao} {iy} {y} {uh}]}}} {z}]} {[{z} {{any_Vx_z_p_z_ih_noSlide {[{aa} {ae} {ax} {eh} {ah} {oh} {uw} {ao} {iy} {y} {uh}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: r
rule: {[{[{{[{{any_Cx_s_z_r {[{dh} {l} {m} {w} {zh} {ch} {d} {g} {v} {b} {hh}]}}} {s}]}} {{[{s} {{any_Cx_s_z_r {[{dh} {l} {m} {w} {zh} {ch} {d} {g} {v} {b} {hh}]}}}]}}]} {[{r} {[{[{{any_Cx_s_z_r {[{dh} {l} {m} {w} {zh} {ch} {d} {g} {v} {b} {hh}]}}} {s}]} {[{s} {{any_Cx_s_z_r {[{dh} {l} {m} {w} {zh} {ch} {d} {g} {v} {b} {hh}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: eh
rule: {[{[{[{{[{{any_Vx_s_s_eh_noSlide {[{aa} {iy} {uw} {ih} {oh} {uh} {ae} {ah} {ao} {ax} {y}]}}} {s}]}} {{[{s} {{any_Vx_s_s_eh_noSlide {[{aa} {iy} {uw} {ih} {oh} {uh} {ae} {ah} {ao} {ax} {y}]}}}]}}]} {[{{[{{any_Cx_s_s_p_r {[{ch} {z} {zh} {b} {g} {l} {v} {d} {dh} {hh} {w} {m}]}}} {s}]}} {{[{s} {{any_Cx_s_s_p_r {[{ch} {z} {zh} {b} {g} {l} {v} {d} {dh} {hh} {w} {m}]}}}]}}]}]} {[{eh} {[{[{{any_Vx_s_s_eh_noSlide {[{aa} {iy} {uw} {ih} {oh} {uh} {ae} {ah} {ao} {ax} {y}]}}} {s}]} {[{s} {{any_Vx_s_s_eh_noSlide {[{aa} {iy} {uw} {ih} {oh} {uh} {ae} {ah} {ao} {ax} {y}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: p
rule: {[{[{{[{{any_Cx_zh_s_p_r {[{ch} {w} {g} {hh} {v} {m} {dh} {l} {z} {d} {b}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_s_p_r {[{ch} {w} {g} {hh} {v} {m} {dh} {l} {z} {d} {b}]}}}]}}]} {[{p} {[{[{{any_Cx_zh_s_p_r {[{ch} {w} {g} {hh} {v} {m} {dh} {l} {z} {d} {b}]}}} {zh}]} {[{zh} {{any_Cx_zh_s_p_r {[{ch} {w} {g} {hh} {v} {m} {dh} {l} {z} {d} {b}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: r
rule: {[{[{{[{{any_Cx_zh_zh_r_ax_p {[{dh} {z} {b} {v} {w} {ch} {l} {g} {m} {hh} {d}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_r_ax_p {[{dh} {z} {b} {v} {w} {ch} {l} {g} {m} {hh} {d}]}}}]}}]} {[{r} {[{[{{any_Cx_zh_zh_r_ax_p {[{dh} {z} {b} {v} {w} {ch} {l} {g} {m} {hh} {d}]}}} {zh}]} {[{zh} {{any_Cx_zh_zh_r_ax_p {[{dh} {z} {b} {v} {w} {ch} {l} {g} {m} {hh} {d}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: ax
rule: {[{[{{[{{any_Cx_s_zh_ax_b_r {[{dh} {ch} {hh} {m} {v} {g} {l} {w} {d} {z}]}}} {s}]}} {{[{s} {{any_Cx_s_zh_ax_b_r {[{dh} {ch} {hh} {m} {v} {g} {l} {w} {d} {z}]}}}]}}]} {[{ax} {[{[{{any_Cx_s_zh_ax_b_r {[{dh} {ch} {hh} {m} {v} {g} {l} {w} {d} {z}]}}} {s}]} {[{s} {{any_Cx_s_zh_ax_b_r {[{dh} {ch} {hh} {m} {v} {g} {l} {w} {d} {z}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: b
rule: {[{[{{[{{any_Cx_sh_s_b_ax_ax {[{ch} {d} {dh} {hh} {l} {v} {g} {m} {zh} {z} {w}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_s_b_ax_ax {[{ch} {d} {dh} {hh} {l} {v} {g} {m} {zh} {z} {w}]}}}]}}]} {[{b} {[{[{{any_Cx_sh_s_b_ax_ax {[{ch} {d} {dh} {hh} {l} {v} {g} {m} {zh} {z} {w}]}}} {sh}]} {[{sh} {{any_Cx_sh_s_b_ax_ax {[{ch} {d} {dh} {hh} {l} {v} {g} {m} {zh} {z} {w}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ax
rule: {[{[{{[{{any_Cx_sh_sh_ax_b {[{m} {d} {l} {zh} {z} {ch} {dh} {v} {w} {g} {hh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_ax_b {[{m} {d} {l} {zh} {z} {ch} {dh} {v} {w} {g} {hh}]}}}]}}]} {[{ax} {[{[{{any_Cx_sh_sh_ax_l_b {[{m} {v} {dh} {hh} {g} {w} {ch} {z} {zh} {d}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_ax_l_b {[{m} {v} {dh} {hh} {g} {w} {ch} {z} {zh} {d}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: l
rule: {[{[{{[{{any_Cx_sh_sh_l_ax {[{b} {d} {m} {hh} {v} {z} {zh} {ch} {g} {w} {dh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_l_ax {[{b} {d} {m} {hh} {v} {z} {zh} {ch} {g} {w} {dh}]}}}]}}]} {[{l} {[{[{{any_Cx_sh_sh_l_ax {[{b} {d} {m} {hh} {v} {z} {zh} {ch} {g} {w} {dh}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_l_ax {[{b} {d} {m} {hh} {v} {z} {zh} {ch} {g} {w} {dh}]}}}]}]}]}]}
Closing rule:
guard: d
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {d}]}} {{[{d} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_l_d {[{dh} {w} {z} {g} {hh} {m} {v} {b} {ch} {zh}]}}} {d}]}} {{[{d} {{any_Cx_sh_l_d {[{dh} {w} {z} {g} {hh} {m} {v} {b} {ch} {zh}]}}}]}}]} {sil}]}
rule 4 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Vx_ih_z_p_noSlide {[{oh} {y} {ae} {aa} {ao} {ax} {uw} {ah} {eh} {iy} {uh}]}}}]} {[{{any_Vx_ih_z_p_noSlide {[{oh} {y} {ae} {aa} {ao} {ax} {uw} {ah} {eh} {iy} {uh}]}}} {z}]}]}} {{[{[{z} {{any_Cx_ih_z_p {[{b} {g} {zh} {dh} {hh} {m} {v} {ch} {l} {w} {d}]}}}]} {[{{any_Cx_ih_z_p {[{b} {g} {zh} {dh} {hh} {m} {v} {ch} {l} {w} {d}]}}} {z}]}]}}]}}
Phoneme rule:
guard: z phoneme: ih
rule: {[{[{[{{[{{any_Vx_z_p_z_ih_noSlide {[{ax} {y} {aa} {ah} {ao} {oh} {uh} {ae} {eh} {iy} {uw}]}}} {z}]}} {{[{z} {{any_Vx_z_p_z_ih_noSlide {[{ax} {y} {aa} {ah} {ao} {oh} {uh} {ae} {eh} {iy} {uw}]}}}]}}]} {[{{[{{any_Cx_z_p_z_r {[{dh} {ch} {d} {l} {v} {w} {b} {m} {g} {zh} {hh}]}}} {z}]}} {{[{z} {{any_Cx_z_p_z_r {[{dh} {ch} {d} {l} {v} {w} {b} {m} {g} {zh} {hh}]}}}]}}]}]} {[{ih} {[{[{{any_Vx_z_p_z_ih_noSlide {[{ax} {y} {aa} {ah} {ao} {oh} {uh} {ae} {eh} {iy} {uw}]}}} {z}]} {[{z} {{any_Vx_z_p_z_ih_noSlide {[{ax} {y} {aa} {ah} {ao} {oh} {uh} {ae} {eh} {iy} {uw}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: r
rule: {[{[{{[{{any_Cx_s_z_r {[{dh} {g} {l} {m} {v} {b} {w} {ch} {d} {hh} {zh}]}}} {s}]}} {{[{s} {{any_Cx_s_z_r {[{dh} {g} {l} {m} {v} {b} {w} {ch} {d} {hh} {zh}]}}}]}}]} {[{r} {[{[{{any_Cx_s_z_r {[{dh} {g} {l} {m} {v} {b} {w} {ch} {d} {hh} {zh}]}}} {s}]} {[{s} {{any_Cx_s_z_r {[{dh} {g} {l} {m} {v} {b} {w} {ch} {d} {hh} {zh}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: eh
rule: {[{[{[{{[{{any_Vx_s_s_eh_noSlide {[{ao} {ih} {uh} {y} {aa} {ae} {ah} {ax} {iy} {oh} {uw}]}}} {s}]}} {{[{s} {{any_Vx_s_s_eh_noSlide {[{ao} {ih} {uh} {y} {aa} {ae} {ah} {ax} {iy} {oh} {uw}]}}}]}}]} {[{{[{{any_Cx_s_s_p_r {[{w} {v} {z} {b} {m} {zh} {ch} {d} {g} {hh} {dh} {l}]}}} {s}]}} {{[{s} {{any_Cx_s_s_p_r {[{w} {v} {z} {b} {m} {zh} {ch} {d} {g} {hh} {dh} {l}]}}}]}}]}]} {[{eh} {[{[{{any_Vx_s_s_eh_noSlide {[{ao} {ih} {uh} {y} {aa} {ae} {ah} {ax} {iy} {oh} {uw}]}}} {s}]} {[{s} {{any_Vx_s_s_eh_noSlide {[{ao} {ih} {uh} {y} {aa} {ae} {ah} {ax} {iy} {oh} {uw}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: p
rule: {[{[{{[{{any_Cx_zh_s_p_r {[{b} {v} {z} {d} {dh} {l} {ch} {m} {hh} {g} {w}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_s_p_r {[{b} {v} {z} {d} {dh} {l} {ch} {m} {hh} {g} {w}]}}}]}}]} {[{p} {[{[{{any_Cx_zh_s_p_r {[{b} {v} {z} {d} {dh} {l} {ch} {m} {hh} {g} {w}]}}} {zh}]} {[{zh} {{any_Cx_zh_s_p_r {[{b} {v} {z} {d} {dh} {l} {ch} {m} {hh} {g} {w}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: r
rule: {[{[{{[{{any_Cx_zh_zh_r_ax_p {[{dh} {z} {b} {m} {w} {d} {hh} {l} {ch} {v} {g}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_r_ax_p {[{dh} {z} {b} {m} {w} {d} {hh} {l} {ch} {v} {g}]}}}]}}]} {[{r} {[{[{{any_Cx_zh_zh_r_ax_p {[{dh} {z} {b} {m} {w} {d} {hh} {l} {ch} {v} {g}]}}} {zh}]} {[{zh} {{any_Cx_zh_zh_r_ax_p {[{dh} {z} {b} {m} {w} {d} {hh} {l} {ch} {v} {g}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: ax
rule: {[{[{{[{{any_Cx_s_zh_ax_b_r {[{hh} {dh} {v} {l} {w} {z} {ch} {m} {d} {g}]}}} {s}]}} {{[{s} {{any_Cx_s_zh_ax_b_r {[{hh} {dh} {v} {l} {w} {z} {ch} {m} {d} {g}]}}}]}}]} {[{ax} {[{[{{any_Cx_s_zh_ax_b_r {[{hh} {dh} {v} {l} {w} {z} {ch} {m} {d} {g}]}}} {s}]} {[{s} {{any_Cx_s_zh_ax_b_r {[{hh} {dh} {v} {l} {w} {z} {ch} {m} {d} {g}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: b
rule: {[{[{{[{{any_Cx_sh_s_b_ax_ax {[{v} {d} {l} {g} {dh} {zh} {hh} {w} {m} {z} {ch}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_s_b_ax_ax {[{v} {d} {l} {g} {dh} {zh} {hh} {w} {m} {z} {ch}]}}}]}}]} {[{b} {[{[{{any_Cx_sh_s_b_ax_ax {[{v} {d} {l} {g} {dh} {zh} {hh} {w} {m} {z} {ch}]}}} {sh}]} {[{sh} {{any_Cx_sh_s_b_ax_ax {[{v} {d} {l} {g} {dh} {zh} {hh} {w} {m} {z} {ch}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ax
rule: {[{[{{[{{any_Cx_sh_sh_ax_b {[{d} {z} {g} {w} {v} {zh} {l} {ch} {dh} {hh} {m}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_ax_b {[{d} {z} {g} {w} {v} {zh} {l} {ch} {dh} {hh} {m}]}}}]}}]} {[{ax} {[{[{{any_Cx_sh_sh_ax_l_b {[{w} {ch} {g} {hh} {dh} {zh} {d} {m} {v} {z}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_ax_l_b {[{w} {ch} {g} {hh} {dh} {zh} {d} {m} {v} {z}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: l
rule: {[{[{{[{{any_Cx_sh_sh_l_ax {[{dh} {m} {v} {ch} {d} {zh} {z} {b} {g} {w} {hh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_l_ax {[{dh} {m} {v} {ch} {d} {zh} {z} {b} {g} {w} {hh}]}}}]}}]} {[{l} {[{[{{any_Cx_sh_sh_l_ax {[{dh} {m} {v} {ch} {d} {zh} {z} {b} {g} {w} {hh}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_l_ax {[{dh} {m} {v} {ch} {d} {zh} {z} {b} {g} {w} {hh}]}}}]}]}]}]}
Closing rule:
guard: thr
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {thr}]}} {{[{thr} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_l_thr {[{d} {zh} {hh} {w} {ch} {g} {z} {m} {v} {b} {dh}]}}} {thr}]}} {{[{thr} {{any_Cx_sh_l_thr {[{d} {zh} {hh} {w} {ch} {g} {z} {m} {v} {b} {dh}]}}}]}}]} {sil}]}

parse: err = Parser error
ruleAligned = [{{ih 1} [{2 1} {3 1} {4 3}]} {{r 1} [{2 2} {3 2} {4 4}]} {{eh 1} [{2 3} {3 3} {4 5}]} {{p 1} [{2 4} {3 4} {4 6}]} {{r 2} []} {{ax 1} [{2 6} {3 6} {4 9}]} {{b 1} [{2 7} {3 7} {4 10}]} {{ax 2} []} {{l 1} [{2 9} {3 9} {4 12}]}]

results (after rule-alignment) =
{72 []}
{80 [{sil 193 193} {ih 245 245} {r 249 249} {eh 253 253} {p 256 256} {r 260 260} {ax 264 264} {b 268 268} {ax 271 271} {l 275 275} {sil 279 279}]}
{91 [{sil 0 0} {ih 103 120} {r 121 134} {eh 135 141} {p 142 155} {r 156 156} {ax 159 177} {b 178 184} {ax 185 185} {l 188 203} {sil 204 204}]}
{105 [{sil 0 0} {ih 104 120} {r 121 135} {eh 136 142} {p 143 154} {r 155 155} {ax 158 177} {b 178 185} {ax 186 186} {l 189 203} {sil 204 204}]}
{125 [{sil 3 3} {iy 105 114} {z 115 115} {ih 118 121} {r 122 137} {eh 138 142} {p 143 150} {b 151 157} {zh 158 158} {ax 160 179} {b 180 185} {ax 186 186} {l 188 203} {sil 204 204}]}

timeAligned = [{{ih 118 120} [{2 1} {3 1} {4 3}]} {{r 122 134} [{2 2} {3 2} {4 4}]} {{eh 138 141} [{2 3} {3 3} {4 5}]} {{p 143 150} [{2 4} {3 4} {4 6}]} {{ax 160 177} [{2 6} {3 6} {4 9}]} {{b 180 184} [{2 7} {3 7} {4 10}]} {{l 189 203} [{2 9} {3 9} {4 12}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 120
i, iTime, newITime, timeStartFrom = 2 1 2 134
i, iTime, newITime, timeStartFrom = 3 2 3 141
i, iTime, newITime, timeStartFrom = 4 3 -1 150
i, iTime, newITime, timeStartFrom = 5 3 4 150
i, iTime, newITime, timeStartFrom = 6 4 5 177
i, iTime, newITime, timeStartFrom = 7 5 -1 184
i, iTime, newITime, timeStartFrom = 8 5 6 184
combinedVerdict    = [{ih 1} {r 1} {eh 1} {p 1} {r 2} {ax 1} {b 1} {ax 2} {l 1}]
ruleAlignedVerdict = [{ih 1} {r 1} {eh 1} {p 1} {r 2} {ax 1} {b 1} {ax 2} {l 1}]

score->
+1 for ih
+1 for r
+1 for eh
+1 for p
-1 for r
+1 for ax
+1 for b
-1 for ax
+1 for l
score<-: 5

results =
{72 [{sil 174 176} {ih 177 179} {r 180 182} {eh 183 185} {pr 186 188} {ax 189 191} {b 192 194} {axl 195 197} {sil 198 200}]}
{80 [{sil 193 196} {ih 197 199} {r 200 202} {eh 203 205} {pr 206 208} {ax 209 211} {b 212 214} {axl 215 217} {sil 218 225}]}
{91 [{sil 0 93} {ih 94 109} {r 110 122} {eh 123 128} {g 129 138} {y 139 141} {ax 142 161} {b 162 167} {axl 168 185} {sil 186 256}]}
{105 [{sil 0 108} {ih 109 126} {r 127 142} {eh 143 150} {g 151 160} {y 161 163} {ax 164 186} {b 187 194} {axl 195 213} {sil 214 298}]}
{125 [{sil 3 130} {iy 131 143} {z 144 146} {ih 147 151} {r 152 171} {eh 172 178} {g 179 192} {y 193 195} {ax 196 224} {b 225 232} {axl 233 254} {sil 255 356}]}

normalised results =
{72 [{sil 174 176} {ih 246 246} {r 250 250} {eh 254 254} {pr 258 258} {ax 263 263} {b 267 267} {axl 271 271} {sil 275 275}]}
{80 [{sil 193 196} {ih 246 246} {r 250 250} {eh 254 254} {pr 258 258} {ax 261 261} {b 265 265} {axl 269 269} {sil 273 281}]}
{91 [{sil 0 93} {ih 103 120} {r 121 134} {eh 135 141} {g 142 152} {y 153 153} {ax 156 177} {b 178 184} {axl 185 203} {sil 204 281}]}
{105 [{sil 0 108} {ih 104 120} {r 121 135} {eh 136 143} {g 144 152} {y 153 153} {ax 156 177} {b 178 185} {axl 186 203} {sil 204 284}]}
{125 [{sil 3 130} {iy 105 114} {z 115 115} {ih 118 121} {r 122 137} {eh 138 142} {g 143 154} {y 154 154} {ax 157 179} {b 180 186} {axl 186 203} {sil 204 285}]}

ruleAligned = [{{ih 1} [{2 1} {3 1} {4 3}]} {{r 1} [{2 2} {3 2} {4 4}]} {{eh 1} [{2 3} {3 3} {4 5}]} {{pr 2} []} {{g 3} [{2 4} {3 4} {4 6}]} {{ax 1} [{2 6} {3 6} {4 8}]} {{b 1} [{2 7} {3 7} {4 9}]} {{axl 1} [{2 8} {3 8} {4 10}]}]

results (after rule-alignment) =
{72 [{sil 174 174} {ih 246 246} {r 250 250} {eh 254 254} {pr 258 258} {ax 263 263} {b 267 267} {axl 271 271} {sil 275 275}]}
{80 [{sil 193 193} {ih 246 246} {r 250 250} {eh 254 254} {pr 258 258} {ax 261 261} {b 265 265} {axl 269 269} {sil 273 273}]}
{91 [{sil 0 0} {ih 103 120} {r 121 134} {eh 135 141} {g 142 152} {y 153 153} {ax 156 177} {b 178 184} {axl 185 203} {sil 204 204}]}
{105 [{sil 0 0} {ih 104 120} {r 121 135} {eh 136 143} {g 144 152} {y 153 153} {ax 156 177} {b 178 185} {axl 186 203} {sil 204 204}]}
{125 [{sil 3 3} {iy 105 114} {z 115 115} {ih 118 121} {r 122 137} {eh 138 142} {g 143 154} {y 154 154} {ax 157 179} {b 180 186} {axl 186 203} {sil 204 204}]}

timeAligned = [{{ih 118 120} [{2 1} {3 1} {4 3}]} {{r 122 134} [{2 2} {3 2} {4 4}]} {{eh 138 141} [{2 3} {3 3} {4 5}]} {{g 144 152} [{2 4} {3 4} {4 6}]} {{ax 157 177} [{2 6} {3 6} {4 8}]} {{b 180 184} [{2 7} {3 7} {4 9}]} {{axl 186 203} [{2 8} {3 8} {4 10}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 120
i, iTime, newITime, timeStartFrom = 2 1 2 134
i, iTime, newITime, timeStartFrom = 3 2 -1 141
i, iTime, newITime, timeStartFrom = 4 2 3 141
i, iTime, newITime, timeStartFrom = 5 3 4 152
i, iTime, newITime, timeStartFrom = 6 4 5 177
i, iTime, newITime, timeStartFrom = 7 5 6 184
combinedVerdict    = [{ih 1} {r 1} {eh 1} {pr 2} {g 3} {ax 1} {b 1} {axl 1}]
ruleAlignedVerdict = [{ih 1} {r 1} {eh 1} {pr 2} {g 3} {ax 1} {b 1} {axl 1}]

score->
+1 for ih
+1 for r
+1 for eh
-1 for pr
-1 for g
+1 for ax
+1 for b
+1 for axl
score<-: 4

results =
{72 []}
{80 []}
{91 [{sil 0 93} {ih 94 109} {r 110 122} {eh 123 128} {p 129 142} {ax 143 146} {r 147 149} {ax 150 161} {b 162 167} {ax 168 170} {l 171 185} {sil 186 256}]}
{105 [{sil 0 108} {ih 109 126} {r 127 142} {eh 143 149} {p 150 165} {ax 166 171} {r 172 174} {ax 175 186} {b 187 194} {ax 195 197} {l 198 213} {sil 214 298}]}
{125 [{sil 3 130} {iy 131 143} {z 144 146} {ih 147 151} {r 152 171} {eh 172 178} {p 179 197} {ax 198 216} {r 217 222} {ax 223 225} {b 226 231} {ax 232 234} {l 235 254} {sil 255 356}]}

normalised results =
{72 []}
{80 []}
{91 [{sil 0 93} {ih 103 120} {r 121 134} {eh 135 141} {p 142 156} {ax 157 160} {r 162 162} {ax 165 177} {b 178 184} {ax 185 185} {l 188 203} {sil 204 281}]}
{105 [{sil 0 108} {ih 104 120} {r 121 135} {eh 136 142} {p 143 157} {ax 158 163} {r 164 164} {ax 167 177} {b 178 185} {ax 186 186} {l 189 203} {sil 204 284}]}
{125 [{sil 3 130} {iy 105 114} {z 115 115} {ih 118 121} {r 122 137} {eh 138 142} {p 143 158} {ax 158 173} {r 174 178} {ax 178 178} {b 181 185} {ax 186 186} {l 188 203} {sil 204 285}]}

Mapped result =
result 0 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 1 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 2 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 3 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 4 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false

Rules =
rule 0 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Vx_ih_z_p_noSlide {[{ae} {ao} {y} {iy} {oh} {uh} {ah} {ax} {aa} {eh} {uw}]}}}]} {[{{any_Vx_ih_z_p_noSlide {[{ae} {ao} {y} {iy} {oh} {uh} {ah} {ax} {aa} {eh} {uw}]}}} {z}]}]}} {{[{[{z} {{any_Cx_ih_z_p {[{m} {ch} {dh} {w} {b} {v} {d} {l} {zh} {g} {hh}]}}}]} {[{{any_Cx_ih_z_p {[{m} {ch} {dh} {w} {b} {v} {d} {l} {zh} {g} {hh}]}}} {z}]}]}}]}}
Phoneme rule:
guard: z phoneme: ih
rule: {[{[{[{{[{{any_Vx_z_p_z_ih_noSlide {[{aa} {ah} {uw} {uh} {y} {iy} {ae} {eh} {ao} {ax} {oh}]}}} {z}]}} {{[{z} {{any_Vx_z_p_z_ih_noSlide {[{aa} {ah} {uw} {uh} {y} {iy} {ae} {eh} {ao} {ax} {oh}]}}}]}}]} {[{{[{{any_Cx_z_p_z_r {[{w} {b} {d} {l} {zh} {hh} {m} {g} {v} {ch} {dh}]}}} {z}]}} {{[{z} {{any_Cx_z_p_z_r {[{w} {b} {d} {l} {zh} {hh} {m} {g} {v} {ch} {dh}]}}}]}}]}]} {[{ih} {[{[{{any_Vx_z_p_z_ih_noSlide {[{aa} {ah} {uw} {uh} {y} {iy} {ae} {eh} {ao} {ax} {oh}]}}} {z}]} {[{z} {{any_Vx_z_p_z_ih_noSlide {[{aa} {ah} {uw} {uh} {y} {iy} {ae} {eh} {ao} {ax} {oh}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: r
rule: {[{[{{[{{any_Cx_s_z_r {[{d} {g} {zh} {hh} {v} {w} {dh} {l} {ch} {m} {b}]}}} {s}]}} {{[{s} {{any_Cx_s_z_r {[{d} {g} {zh} {hh} {v} {w} {dh} {l} {ch} {m} {b}]}}}]}}]} {[{r} {[{[{{any_Cx_s_z_r {[{d} {g} {zh} {hh} {v} {w} {dh} {l} {ch} {m} {b}]}}} {s}]} {[{s} {{any_Cx_s_z_r {[{d} {g} {zh} {hh} {v} {w} {dh} {l} {ch} {m} {b}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: eh
rule: {[{[{[{{[{{any_Vx_s_s_eh_noSlide {[{iy} {uw} {uh} {y} {aa} {ah} {ao} {ih} {ae} {ax} {oh}]}}} {s}]}} {{[{s} {{any_Vx_s_s_eh_noSlide {[{iy} {uw} {uh} {y} {aa} {ah} {ao} {ih} {ae} {ax} {oh}]}}}]}}]} {[{{[{{any_Cx_s_s_p_r {[{z} {d} {ch} {l} {g} {m} {zh} {b} {hh} {dh} {v} {w}]}}} {s}]}} {{[{s} {{any_Cx_s_s_p_r {[{z} {d} {ch} {l} {g} {m} {zh} {b} {hh} {dh} {v} {w}]}}}]}}]}]} {[{eh} {[{[{{any_Vx_s_s_eh_noSlide {[{iy} {uw} {uh} {y} {aa} {ah} {ao} {ih} {ae} {ax} {oh}]}}} {s}]} {[{s} {{any_Vx_s_s_eh_noSlide {[{iy} {uw} {uh} {y} {aa} {ah} {ao} {ih} {ae} {ax} {oh}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: p
rule: {[{[{{[{{any_Cx_zh_s_p_ax {[{w} {z} {ch} {g} {dh} {l} {hh} {m} {v} {d} {b}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_s_p_ax {[{w} {z} {ch} {g} {dh} {l} {hh} {m} {v} {d} {b}]}}}]}}]} {[{p} {[{[{{any_Cx_zh_s_p_ax {[{w} {z} {ch} {g} {dh} {l} {hh} {m} {v} {d} {b}]}}} {zh}]} {[{zh} {{any_Cx_zh_s_p_ax {[{w} {z} {ch} {g} {dh} {l} {hh} {m} {v} {d} {b}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: ax
rule: {[{[{{[{{any_Cx_zh_zh_ax_r_p {[{hh} {dh} {m} {b} {ch} {g} {v} {z} {l} {w} {d}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_ax_r_p {[{hh} {dh} {m} {b} {ch} {g} {v} {z} {l} {w} {d}]}}}]}}]} {[{ax} {[{[{{any_Cx_zh_zh_ax_r_p {[{hh} {dh} {m} {b} {ch} {g} {v} {z} {l} {w} {d}]}}} {zh}]} {[{zh} {{any_Cx_zh_zh_ax_r_p {[{hh} {dh} {m} {b} {ch} {g} {v} {z} {l} {w} {d}]}}}]}]}]}]}
Phoneme rule:
guard: z phoneme: r
rule: {[{[{{[{{any_Cx_z_zh_r_ax_ax {[{dh} {d} {l} {v} {b} {hh} {ch} {g} {m} {w}]}}} {z}]}} {{[{z} {{any_Cx_z_zh_r_ax_ax {[{dh} {d} {l} {v} {b} {hh} {ch} {g} {m} {w}]}}}]}}]} {[{r} {[{[{{any_Cx_z_zh_r_ax_ax {[{dh} {d} {l} {v} {b} {hh} {ch} {g} {m} {w}]}}} {z}]} {[{z} {{any_Cx_z_zh_r_ax_ax {[{dh} {d} {l} {v} {b} {hh} {ch} {g} {m} {w}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: ax
rule: {[{[{{[{{any_Cx_s_z_ax_b_r {[{hh} {l} {ch} {d} {dh} {v} {zh} {w} {g} {m}]}}} {s}]}} {{[{s} {{any_Cx_s_z_ax_b_r {[{hh} {l} {ch} {d} {dh} {v} {zh} {w} {g} {m}]}}}]}}]} {[{ax} {[{[{{any_Cx_s_z_ax_b_r {[{hh} {l} {ch} {d} {dh} {v} {zh} {w} {g} {m}]}}} {s}]} {[{s} {{any_Cx_s_z_ax_b_r {[{hh} {l} {ch} {d} {dh} {v} {zh} {w} {g} {m}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: b
rule: {[{[{{[{{any_Cx_zh_s_b_ax_ax {[{m} {d} {g} {v} {ch} {dh} {l} {w} {hh} {z}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_s_b_ax_ax {[{m} {d} {g} {v} {ch} {dh} {l} {w} {hh} {z}]}}}]}}]} {[{b} {[{[{{any_Cx_zh_s_b_ax_ax {[{m} {d} {g} {v} {ch} {dh} {l} {w} {hh} {z}]}}} {zh}]} {[{zh} {{any_Cx_zh_s_b_ax_ax {[{m} {d} {g} {v} {ch} {dh} {l} {w} {hh} {z}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ax
rule: {[{[{{[{{any_Cx_sh_zh_ax_b {[{l} {m} {v} {w} {z} {d} {g} {dh} {ch} {hh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_zh_ax_b {[{l} {m} {v} {w} {z} {d} {g} {dh} {ch} {hh}]}}}]}}]} {[{ax} {[{[{{any_Cx_sh_zh_ax_l_b {[{dh} {z} {v} {g} {ch} {d} {m} {hh} {w}]}}} {sh}]} {[{sh} {{any_Cx_sh_zh_ax_l_b {[{dh} {z} {v} {g} {ch} {d} {m} {hh} {w}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: l
rule: {[{[{{[{{any_Cx_sh_sh_l_ax {[{z} {dh} {g} {v} {b} {d} {hh} {ch} {m} {w} {zh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_l_ax {[{z} {dh} {g} {v} {b} {d} {hh} {ch} {m} {w} {zh}]}}}]}}]} {[{l} {[{[{{any_Cx_sh_sh_l_ax {[{z} {dh} {g} {v} {b} {d} {hh} {ch} {m} {w} {zh}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_l_ax {[{z} {dh} {g} {v} {b} {d} {hh} {ch} {m} {w} {zh}]}}}]}]}]}]}
Closing rule:
guard: f
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {f}]}} {{[{f} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_l_f {[{d} {v} {w} {zh} {ch} {g} {hh} {z} {m} {b} {dh}]}}} {f}]}} {{[{f} {{any_Cx_sh_l_f {[{d} {v} {w} {zh} {ch} {g} {hh} {z} {m} {b} {dh}]}}}]}}]} {sil}]}
rule 1 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Vx_ih_z_p_noSlide {[{iy} {ah} {eh} {oh} {aa} {ae} {ao} {uw} {uh} {ax} {y}]}}}]} {[{{any_Vx_ih_z_p_noSlide {[{iy} {ah} {eh} {oh} {aa} {ae} {ao} {uw} {uh} {ax} {y}]}}} {z}]}]}} {{[{[{z} {{any_Cx_ih_z_p {[{zh} {w} {b} {hh} {dh} {l} {d} {ch} {g} {m} {v}]}}}]} {[{{any_Cx_ih_z_p {[{zh} {w} {b} {hh} {dh} {l} {d} {ch} {g} {m} {v}]}}} {z}]}]}}]}}
Phoneme rule:
guard: z phoneme: ih
rule: {[{[{[{{[{{any_Vx_z_p_z_ih_noSlide {[{ah} {ao} {eh} {ax} {uh} {aa} {iy} {oh} {ae} {uw} {y}]}}} {z}]}} {{[{z} {{any_Vx_z_p_z_ih_noSlide {[{ah} {ao} {eh} {ax} {uh} {aa} {iy} {oh} {ae} {uw} {y}]}}}]}}]} {[{{[{{any_Cx_z_p_z_r {[{ch} {d} {g} {hh} {v} {dh} {m} {w} {b} {l} {zh}]}}} {z}]}} {{[{z} {{any_Cx_z_p_z_r {[{ch} {d} {g} {hh} {v} {dh} {m} {w} {b} {l} {zh}]}}}]}}]}]} {[{ih} {[{[{{any_Vx_z_p_z_ih_noSlide {[{ah} {ao} {eh} {ax} {uh} {aa} {iy} {oh} {ae} {uw} {y}]}}} {z}]} {[{z} {{any_Vx_z_p_z_ih_noSlide {[{ah} {ao} {eh} {ax} {uh} {aa} {iy} {oh} {ae} {uw} {y}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: r
rule: {[{[{{[{{any_Cx_s_z_r {[{b} {zh} {v} {hh} {w} {ch} {d} {l} {dh} {m} {g}]}}} {s}]}} {{[{s} {{any_Cx_s_z_r {[{b} {zh} {v} {hh} {w} {ch} {d} {l} {dh} {m} {g}]}}}]}}]} {[{r} {[{[{{any_Cx_s_z_r {[{b} {zh} {v} {hh} {w} {ch} {d} {l} {dh} {m} {g}]}}} {s}]} {[{s} {{any_Cx_s_z_r {[{b} {zh} {v} {hh} {w} {ch} {d} {l} {dh} {m} {g}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: eh
rule: {[{[{[{{[{{any_Vx_s_s_eh_noSlide {[{ae} {ah} {ax} {ih} {iy} {oh} {uh} {aa} {y} {uw} {ao}]}}} {s}]}} {{[{s} {{any_Vx_s_s_eh_noSlide {[{ae} {ah} {ax} {ih} {iy} {oh} {uh} {aa} {y} {uw} {ao}]}}}]}}]} {[{{[{{any_Cx_s_s_p_r {[{hh} {l} {z} {g} {v} {zh} {dh} {w} {m} {b} {ch} {d}]}}} {s}]}} {{[{s} {{any_Cx_s_s_p_r {[{hh} {l} {z} {g} {v} {zh} {dh} {w} {m} {b} {ch} {d}]}}}]}}]}]} {[{eh} {[{[{{any_Vx_s_s_eh_noSlide {[{ae} {ah} {ax} {ih} {iy} {oh} {uh} {aa} {y} {uw} {ao}]}}} {s}]} {[{s} {{any_Vx_s_s_eh_noSlide {[{ae} {ah} {ax} {ih} {iy} {oh} {uh} {aa} {y} {uw} {ao}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: p
rule: {[{[{{[{{any_Cx_zh_s_p_ax {[{v} {hh} {z} {b} {m} {ch} {l} {d} {g} {dh} {w}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_s_p_ax {[{v} {hh} {z} {b} {m} {ch} {l} {d} {g} {dh} {w}]}}}]}}]} {[{p} {[{[{{any_Cx_zh_s_p_ax {[{v} {hh} {z} {b} {m} {ch} {l} {d} {g} {dh} {w}]}}} {zh}]} {[{zh} {{any_Cx_zh_s_p_ax {[{v} {hh} {z} {b} {m} {ch} {l} {d} {g} {dh} {w}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: ax
rule: {[{[{{[{{any_Cx_zh_zh_ax_r_p {[{l} {w} {z} {m} {ch} {hh} {b} {g} {d} {dh} {v}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_ax_r_p {[{l} {w} {z} {m} {ch} {hh} {b} {g} {d} {dh} {v}]}}}]}}]} {[{ax} {[{[{{any_Cx_zh_zh_ax_r_p {[{l} {w} {z} {m} {ch} {hh} {b} {g} {d} {dh} {v}]}}} {zh}]} {[{zh} {{any_Cx_zh_zh_ax_r_p {[{l} {w} {z} {m} {ch} {hh} {b} {g} {d} {dh} {v}]}}}]}]}]}]}
Phoneme rule:
guard: z phoneme: r
rule: {[{[{{[{{any_Cx_z_zh_r_ax_ax {[{b} {g} {v} {dh} {d} {l} {hh} {w} {m} {ch}]}}} {z}]}} {{[{z} {{any_Cx_z_zh_r_ax_ax {[{b} {g} {v} {dh} {d} {l} {hh} {w} {m} {ch}]}}}]}}]} {[{r} {[{[{{any_Cx_z_zh_r_ax_ax {[{b} {g} {v} {dh} {d} {l} {hh} {w} {m} {ch}]}}} {z}]} {[{z} {{any_Cx_z_zh_r_ax_ax {[{b} {g} {v} {dh} {d} {l} {hh} {w} {m} {ch}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: ax
rule: {[{[{{[{{any_Cx_s_z_ax_b_r {[{ch} {w} {dh} {hh} {zh} {d} {g} {m} {l} {v}]}}} {s}]}} {{[{s} {{any_Cx_s_z_ax_b_r {[{ch} {w} {dh} {hh} {zh} {d} {g} {m} {l} {v}]}}}]}}]} {[{ax} {[{[{{any_Cx_s_z_ax_b_r {[{ch} {w} {dh} {hh} {zh} {d} {g} {m} {l} {v}]}}} {s}]} {[{s} {{any_Cx_s_z_ax_b_r {[{ch} {w} {dh} {hh} {zh} {d} {g} {m} {l} {v}]}}}]}]}]}]}
Phoneme rule:
guard: jh phoneme: b
rule: {[{[{{[{{any_Cx_jh_s_b_ax_ax {[{g} {z} {d} {w} {dh} {hh} {v} {zh} {ch} {l} {m}]}}} {jh}]}} {{[{jh} {{any_Cx_jh_s_b_ax_ax {[{g} {z} {d} {w} {dh} {hh} {v} {zh} {ch} {l} {m}]}}}]}}]} {[{b} {[{[{{any_Cx_jh_s_b_ax_ax {[{g} {z} {d} {w} {dh} {hh} {v} {zh} {ch} {l} {m}]}}} {jh}]} {[{jh} {{any_Cx_jh_s_b_ax_ax {[{g} {z} {d} {w} {dh} {hh} {v} {zh} {ch} {l} {m}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ax
rule: {[{[{{[{{any_Cx_sh_jh_ax_b {[{g} {l} {w} {ch} {hh} {z} {dh} {m} {v} {zh} {d}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_jh_ax_b {[{g} {l} {w} {ch} {hh} {z} {dh} {m} {v} {zh} {d}]}}}]}}]} {[{ax} {[{[{{any_Cx_sh_jh_ax_l_b {[{dh} {z} {hh} {zh} {m} {w} {v} {d} {g} {ch}]}}} {sh}]} {[{sh} {{any_Cx_sh_jh_ax_l_b {[{dh} {z} {hh} {zh} {m} {w} {v} {d} {g} {ch}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: l
rule: {[{[{{[{{any_Cx_sh_sh_l_ax {[{d} {dh} {g} {m} {zh} {b} {v} {z} {ch} {hh} {w}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_l_ax {[{d} {dh} {g} {m} {zh} {b} {v} {z} {ch} {hh} {w}]}}}]}}]} {[{l} {[{[{{any_Cx_sh_sh_l_ax {[{d} {dh} {g} {m} {zh} {b} {v} {z} {ch} {hh} {w}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_l_ax {[{d} {dh} {g} {m} {zh} {b} {v} {z} {ch} {hh} {w}]}}}]}]}]}]}
Closing rule:
guard: thr
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {thr}]}} {{[{thr} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_l_thr {[{ch} {g} {zh} {dh} {hh} {z} {b} {w} {v} {m} {d}]}}} {thr}]}} {{[{thr} {{any_Cx_sh_l_thr {[{ch} {g} {zh} {dh} {hh} {z} {b} {w} {v} {m} {d}]}}}]}}]} {sil}]}
rule 2 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Vx_ih_z_p_noSlide {[{aa} {eh} {oh} {ah} {y} {ax} {iy} {uw} {uh} {ae} {ao}]}}}]} {[{{any_Vx_ih_z_p_noSlide {[{aa} {eh} {oh} {ah} {y} {ax} {iy} {uw} {uh} {ae} {ao}]}}} {z}]}]}} {{[{[{z} {{any_Cx_ih_z_p {[{v} {g} {ch} {zh} {dh} {d} {hh} {l} {m} {w} {b}]}}}]} {[{{any_Cx_ih_z_p {[{v} {g} {ch} {zh} {dh} {d} {hh} {l} {m} {w} {b}]}}} {z}]}]}}]}}
Phoneme rule:
guard: z phoneme: ih
rule: {[{[{[{{[{{any_Vx_z_p_z_ih_noSlide {[{uw} {uh} {y} {ah} {iy} {ao} {eh} {aa} {ae} {oh} {ax}]}}} {z}]}} {{[{z} {{any_Vx_z_p_z_ih_noSlide {[{uw} {uh} {y} {ah} {iy} {ao} {eh} {aa} {ae} {oh} {ax}]}}}]}}]} {[{{[{{any_Cx_z_p_z_r {[{b} {zh} {hh} {l} {m} {v} {ch} {d} {dh} {g} {w}]}}} {z}]}} {{[{z} {{any_Cx_z_p_z_r {[{b} {zh} {hh} {l} {m} {v} {ch} {d} {dh} {g} {w}]}}}]}}]}]} {[{ih} {[{[{{any_Vx_z_p_z_ih_noSlide {[{uw} {uh} {y} {ah} {iy} {ao} {eh} {aa} {ae} {oh} {ax}]}}} {z}]} {[{z} {{any_Vx_z_p_z_ih_noSlide {[{uw} {uh} {y} {ah} {iy} {ao} {eh} {aa} {ae} {oh} {ax}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: r
rule: {[{[{{[{{any_Cx_s_z_r {[{dh} {d} {hh} {m} {v} {l} {w} {b} {ch} {g} {zh}]}}} {s}]}} {{[{s} {{any_Cx_s_z_r {[{dh} {d} {hh} {m} {v} {l} {w} {b} {ch} {g} {zh}]}}}]}}]} {[{r} {[{[{{any_Cx_s_z_r {[{dh} {d} {hh} {m} {v} {l} {w} {b} {ch} {g} {zh}]}}} {s}]} {[{s} {{any_Cx_s_z_r {[{dh} {d} {hh} {m} {v} {l} {w} {b} {ch} {g} {zh}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: eh
rule: {[{[{[{{[{{any_Vx_s_s_eh_noSlide {[{ae} {ax} {ih} {iy} {uw} {uh} {aa} {ah} {ao} {oh} {y}]}}} {s}]}} {{[{s} {{any_Vx_s_s_eh_noSlide {[{ae} {ax} {ih} {iy} {uw} {uh} {aa} {ah} {ao} {oh} {y}]}}}]}}]} {[{{[{{any_Cx_s_s_p_r {[{w} {d} {l} {zh} {m} {v} {dh} {hh} {z} {g} {b} {ch}]}}} {s}]}} {{[{s} {{any_Cx_s_s_p_r {[{w} {d} {l} {zh} {m} {v} {dh} {hh} {z} {g} {b} {ch}]}}}]}}]}]} {[{eh} {[{[{{any_Vx_s_s_eh_noSlide {[{ae} {ax} {ih} {iy} {uw} {uh} {aa} {ah} {ao} {oh} {y}]}}} {s}]} {[{s} {{any_Vx_s_s_eh_noSlide {[{ae} {ax} {ih} {iy} {uw} {uh} {aa} {ah} {ao} {oh} {y}]}}}]}]}]}]}
Phoneme rule:
guard: jh phoneme: p
rule: {[{[{{[{{any_Cx_jh_s_p_ax {[{dh} {w} {b} {d} {hh} {m} {zh} {l} {ch} {g} {v} {z}]}}} {jh}]}} {{[{jh} {{any_Cx_jh_s_p_ax {[{dh} {w} {b} {d} {hh} {m} {zh} {l} {ch} {g} {v} {z}]}}}]}}]} {[{p} {[{[{{any_Cx_jh_s_p_ax {[{dh} {w} {b} {d} {hh} {m} {zh} {l} {ch} {g} {v} {z}]}}} {jh}]} {[{jh} {{any_Cx_jh_s_p_ax {[{dh} {w} {b} {d} {hh} {m} {zh} {l} {ch} {g} {v} {z}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: ax
rule: {[{[{{[{{any_Cx_zh_jh_ax_r_p {[{b} {l} {v} {z} {ch} {w} {g} {hh} {m} {d} {dh}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_jh_ax_r_p {[{b} {l} {v} {z} {ch} {w} {g} {hh} {m} {d} {dh}]}}}]}}]} {[{ax} {[{[{{any_Cx_zh_jh_ax_r_p {[{b} {l} {v} {z} {ch} {w} {g} {hh} {m} {d} {dh}]}}} {zh}]} {[{zh} {{any_Cx_zh_jh_ax_r_p {[{b} {l} {v} {z} {ch} {w} {g} {hh} {m} {d} {dh}]}}}]}]}]}]}
Phoneme rule:
guard: y phoneme: r
rule: {[{[{{[{{any_Cx_y_zh_r_ax_ax {[{dh} {w} {ch} {m} {g} {b} {d} {v} {z} {hh} {l}]}}} {y}]}} {{[{y} {{any_Cx_y_zh_r_ax_ax {[{dh} {w} {ch} {m} {g} {b} {d} {v} {z} {hh} {l}]}}}]}}]} {[{r} {[{[{{any_Cx_y_zh_r_ax_ax {[{dh} {w} {ch} {m} {g} {b} {d} {v} {z} {hh} {l}]}}} {y}]} {[{y} {{any_Cx_y_zh_r_ax_ax {[{dh} {w} {ch} {m} {g} {b} {d} {v} {z} {hh} {l}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: ax
rule: {[{[{{[{{any_Cx_s_y_ax_b_r {[{zh} {w} {l} {d} {z} {ch} {g} {hh} {m} {v} {dh}]}}} {s}]}} {{[{s} {{any_Cx_s_y_ax_b_r {[{zh} {w} {l} {d} {z} {ch} {g} {hh} {m} {v} {dh}]}}}]}}]} {[{ax} {[{[{{any_Cx_s_y_ax_b_r {[{zh} {w} {l} {d} {z} {ch} {g} {hh} {m} {v} {dh}]}}} {s}]} {[{s} {{any_Cx_s_y_ax_b_r {[{zh} {w} {l} {d} {z} {ch} {g} {hh} {m} {v} {dh}]}}}]}]}]}]}
Phoneme rule:
guard: jh phoneme: b
rule: {[{[{{[{{any_Cx_jh_s_b_ax_ax {[{d} {dh} {l} {m} {zh} {ch} {w} {hh} {v} {g} {z}]}}} {jh}]}} {{[{jh} {{any_Cx_jh_s_b_ax_ax {[{d} {dh} {l} {m} {zh} {ch} {w} {hh} {v} {g} {z}]}}}]}}]} {[{b} {[{[{{any_Cx_jh_s_b_ax_ax {[{d} {dh} {l} {m} {zh} {ch} {w} {hh} {v} {g} {z}]}}} {jh}]} {[{jh} {{any_Cx_jh_s_b_ax_ax {[{d} {dh} {l} {m} {zh} {ch} {w} {hh} {v} {g} {z}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ax
rule: {[{[{{[{{any_Cx_sh_jh_ax_b {[{m} {v} {ch} {d} {zh} {g} {hh} {dh} {z} {l} {w}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_jh_ax_b {[{m} {v} {ch} {d} {zh} {g} {hh} {dh} {z} {l} {w}]}}}]}}]} {[{ax} {[{[{{any_Cx_sh_jh_ax_l_b {[{hh} {ch} {dh} {z} {d} {v} {zh} {g} {m} {w}]}}} {sh}]} {[{sh} {{any_Cx_sh_jh_ax_l_b {[{hh} {ch} {dh} {z} {d} {v} {zh} {g} {m} {w}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: l
rule: {[{[{{[{{any_Cx_sh_sh_l_ax {[{b} {v} {zh} {ch} {g} {m} {d} {dh} {w} {hh} {z}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_l_ax {[{b} {v} {zh} {ch} {g} {m} {d} {dh} {w} {hh} {z}]}}}]}}]} {[{l} {[{[{{any_Cx_sh_sh_l_ax {[{b} {v} {zh} {ch} {g} {m} {d} {dh} {w} {hh} {z}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_l_ax {[{b} {v} {zh} {ch} {g} {m} {d} {dh} {w} {hh} {z}]}}}]}]}]}]}
Closing rule:
guard: r
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {r}]}} {{[{r} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_l_r {[{zh} {d} {dh} {b} {z} {ch} {hh} {g} {m} {v} {w}]}}} {r}]}} {{[{r} {{any_Cx_sh_l_r {[{zh} {d} {dh} {b} {z} {ch} {hh} {g} {m} {v} {w}]}}}]}}]} {sil}]}
rule 3 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Vx_ih_z_p_noSlide {[{ae} {ax} {uw} {oh} {ah} {ao} {eh} {aa} {iy} {uh} {y}]}}}]} {[{{any_Vx_ih_z_p_noSlide {[{ae} {ax} {uw} {oh} {ah} {ao} {eh} {aa} {iy} {uh} {y}]}}} {z}]}]}} {{[{[{z} {{any_Cx_ih_z_p {[{m} {v} {b} {l} {d} {g} {dh} {zh} {ch} {hh} {w}]}}}]} {[{{any_Cx_ih_z_p {[{m} {v} {b} {l} {d} {g} {dh} {zh} {ch} {hh} {w}]}}} {z}]}]}}]}}
Phoneme rule:
guard: z phoneme: ih
rule: {[{[{[{{[{{any_Vx_z_p_z_ih_noSlide {[{ah} {oh} {aa} {ao} {iy} {uw} {uh} {ae} {eh} {ax} {y}]}}} {z}]}} {{[{z} {{any_Vx_z_p_z_ih_noSlide {[{ah} {oh} {aa} {ao} {iy} {uw} {uh} {ae} {eh} {ax} {y}]}}}]}}]} {[{{[{{any_Cx_z_p_z_r {[{w} {ch} {dh} {g} {hh} {v} {b} {l} {zh} {d} {m}]}}} {z}]}} {{[{z} {{any_Cx_z_p_z_r {[{w} {ch} {dh} {g} {hh} {v} {b} {l} {zh} {d} {m}]}}}]}}]}]} {[{ih} {[{[{{any_Vx_z_p_z_ih_noSlide {[{ah} {oh} {aa} {ao} {iy} {uw} {uh} {ae} {eh} {ax} {y}]}}} {z}]} {[{z} {{any_Vx_z_p_z_ih_noSlide {[{ah} {oh} {aa} {ao} {iy} {uw} {uh} {ae} {eh} {ax} {y}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: r
rule: {[{[{{[{{any_Cx_s_z_r {[{m} {hh} {zh} {b} {d} {g} {v} {w} {ch} {l} {dh}]}}} {s}]}} {{[{s} {{any_Cx_s_z_r {[{m} {hh} {zh} {b} {d} {g} {v} {w} {ch} {l} {dh}]}}}]}}]} {[{r} {[{[{{any_Cx_s_z_r {[{m} {hh} {zh} {b} {d} {g} {v} {w} {ch} {l} {dh}]}}} {s}]} {[{s} {{any_Cx_s_z_r {[{m} {hh} {zh} {b} {d} {g} {v} {w} {ch} {l} {dh}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: eh
rule: {[{[{[{{[{{any_Vx_s_s_eh_noSlide {[{ax} {ih} {iy} {oh} {uw} {uh} {aa} {ae} {ah} {ao} {y}]}}} {s}]}} {{[{s} {{any_Vx_s_s_eh_noSlide {[{ax} {ih} {iy} {oh} {uw} {uh} {aa} {ae} {ah} {ao} {y}]}}}]}}]} {[{{[{{any_Cx_s_s_p_r {[{l} {z} {b} {g} {hh} {zh} {v} {d} {ch} {dh} {w} {m}]}}} {s}]}} {{[{s} {{any_Cx_s_s_p_r {[{l} {z} {b} {g} {hh} {zh} {v} {d} {ch} {dh} {w} {m}]}}}]}}]}]} {[{eh} {[{[{{any_Vx_s_s_eh_noSlide {[{ax} {ih} {iy} {oh} {uw} {uh} {aa} {ae} {ah} {ao} {y}]}}} {s}]} {[{s} {{any_Vx_s_s_eh_noSlide {[{ax} {ih} {iy} {oh} {uw} {uh} {aa} {ae} {ah} {ao} {y}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: p
rule: {[{[{{[{{any_Cx_zh_s_p_ax {[{b} {hh} {w} {d} {m} {dh} {g} {v} {z} {l} {ch}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_s_p_ax {[{b} {hh} {w} {d} {m} {dh} {g} {v} {z} {l} {ch}]}}}]}}]} {[{p} {[{[{{any_Cx_zh_s_p_ax {[{b} {hh} {w} {d} {m} {dh} {g} {v} {z} {l} {ch}]}}} {zh}]} {[{zh} {{any_Cx_zh_s_p_ax {[{b} {hh} {w} {d} {m} {dh} {g} {v} {z} {l} {ch}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: ax
rule: {[{[{{[{{any_Cx_zh_zh_ax_r_p {[{w} {dh} {z} {d} {m} {v} {b} {ch} {g} {hh} {l}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_ax_r_p {[{w} {dh} {z} {d} {m} {v} {b} {ch} {g} {hh} {l}]}}}]}}]} {[{ax} {[{[{{any_Cx_zh_zh_ax_r_p {[{w} {dh} {z} {d} {m} {v} {b} {ch} {g} {hh} {l}]}}} {zh}]} {[{zh} {{any_Cx_zh_zh_ax_r_p {[{w} {dh} {z} {d} {m} {v} {b} {ch} {g} {hh} {l}]}}}]}]}]}]}
Phoneme rule:
guard: y phoneme: r
rule: {[{[{{[{{any_Cx_y_zh_r_ax_ax {[{z} {ch} {d} {m} {w} {dh} {v} {b} {hh} {l} {g}]}}} {y}]}} {{[{y} {{any_Cx_y_zh_r_ax_ax {[{z} {ch} {d} {m} {w} {dh} {v} {b} {hh} {l} {g}]}}}]}}]} {[{r} {[{[{{any_Cx_y_zh_r_ax_ax {[{z} {ch} {d} {m} {w} {dh} {v} {b} {hh} {l} {g}]}}} {y}]} {[{y} {{any_Cx_y_zh_r_ax_ax {[{z} {ch} {d} {m} {w} {dh} {v} {b} {hh} {l} {g}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: ax
rule: {[{[{{[{{any_Cx_s_y_ax_b_r {[{z} {zh} {ch} {hh} {m} {l} {g} {v} {d} {dh} {w}]}}} {s}]}} {{[{s} {{any_Cx_s_y_ax_b_r {[{z} {zh} {ch} {hh} {m} {l} {g} {v} {d} {dh} {w}]}}}]}}]} {[{ax} {[{[{{any_Cx_s_y_ax_b_r {[{z} {zh} {ch} {hh} {m} {l} {g} {v} {d} {dh} {w}]}}} {s}]} {[{s} {{any_Cx_s_y_ax_b_r {[{z} {zh} {ch} {hh} {m} {l} {g} {v} {d} {dh} {w}]}}}]}]}]}]}
Phoneme rule:
guard: jh phoneme: b
rule: {[{[{{[{{any_Cx_jh_s_b_ax_ax {[{v} {g} {ch} {zh} {d} {l} {hh} {z} {m} {dh} {w}]}}} {jh}]}} {{[{jh} {{any_Cx_jh_s_b_ax_ax {[{v} {g} {ch} {zh} {d} {l} {hh} {z} {m} {dh} {w}]}}}]}}]} {[{b} {[{[{{any_Cx_jh_s_b_ax_ax {[{v} {g} {ch} {zh} {d} {l} {hh} {z} {m} {dh} {w}]}}} {jh}]} {[{jh} {{any_Cx_jh_s_b_ax_ax {[{v} {g} {ch} {zh} {d} {l} {hh} {z} {m} {dh} {w}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ax
rule: {[{[{{[{{any_Cx_sh_jh_ax_b {[{m} {v} {dh} {w} {z} {zh} {d} {hh} {l} {ch} {g}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_jh_ax_b {[{m} {v} {dh} {w} {z} {zh} {d} {hh} {l} {ch} {g}]}}}]}}]} {[{ax} {[{[{{any_Cx_sh_jh_ax_l_b {[{d} {dh} {hh} {w} {zh} {m} {v} {g} {ch} {z}]}}} {sh}]} {[{sh} {{any_Cx_sh_jh_ax_l_b {[{d} {dh} {hh} {w} {zh} {m} {v} {g} {ch} {z}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: l
rule: {[{[{{[{{any_Cx_sh_sh_l_ax {[{hh} {dh} {w} {b} {m} {d} {v} {ch} {g} {z} {zh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_l_ax {[{hh} {dh} {w} {b} {m} {d} {v} {ch} {g} {z} {zh}]}}}]}}]} {[{l} {[{[{{any_Cx_sh_sh_l_ax {[{hh} {dh} {w} {b} {m} {d} {v} {ch} {g} {z} {zh}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_l_ax {[{hh} {dh} {w} {b} {m} {d} {v} {ch} {g} {z} {zh}]}}}]}]}]}]}
Closing rule:
guard: thr
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {thr}]}} {{[{thr} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_l_thr {[{b} {ch} {z} {w} {g} {m} {dh} {d} {hh} {v} {zh}]}}} {thr}]}} {{[{thr} {{any_Cx_sh_l_thr {[{b} {ch} {z} {w} {g} {m} {dh} {d} {hh} {v} {zh}]}}}]}}]} {sil}]}
rule 4 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Vx_ih_z_p_noSlide {[{oh} {ah} {iy} {ae} {ao} {uw} {uh} {aa} {ax} {eh} {y}]}}}]} {[{{any_Vx_ih_z_p_noSlide {[{oh} {ah} {iy} {ae} {ao} {uw} {uh} {aa} {ax} {eh} {y}]}}} {z}]}]}} {{[{[{z} {{any_Cx_ih_z_p {[{g} {v} {ch} {d} {m} {w} {hh} {l} {b} {dh} {zh}]}}}]} {[{{any_Cx_ih_z_p {[{g} {v} {ch} {d} {m} {w} {hh} {l} {b} {dh} {zh}]}}} {z}]}]}}]}}
Phoneme rule:
guard: z phoneme: ih
rule: {[{[{[{{[{{any_Vx_z_p_z_ih_noSlide {[{aa} {eh} {oh} {uw} {uh} {y} {ah} {ao} {ax} {ae} {iy}]}}} {z}]}} {{[{z} {{any_Vx_z_p_z_ih_noSlide {[{aa} {eh} {oh} {uw} {uh} {y} {ah} {ao} {ax} {ae} {iy}]}}}]}}]} {[{{[{{any_Cx_z_p_z_r {[{b} {hh} {g} {l} {w} {d} {m} {zh} {ch} {dh} {v}]}}} {z}]}} {{[{z} {{any_Cx_z_p_z_r {[{b} {hh} {g} {l} {w} {d} {m} {zh} {ch} {dh} {v}]}}}]}}]}]} {[{ih} {[{[{{any_Vx_z_p_z_ih_noSlide {[{aa} {eh} {oh} {uw} {uh} {y} {ah} {ao} {ax} {ae} {iy}]}}} {z}]} {[{z} {{any_Vx_z_p_z_ih_noSlide {[{aa} {eh} {oh} {uw} {uh} {y} {ah} {ao} {ax} {ae} {iy}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: r
rule: {[{[{{[{{any_Cx_s_z_r {[{v} {w} {zh} {ch} {l} {m} {b} {d} {g} {hh} {dh}]}}} {s}]}} {{[{s} {{any_Cx_s_z_r {[{v} {w} {zh} {ch} {l} {m} {b} {d} {g} {hh} {dh}]}}}]}}]} {[{r} {[{[{{any_Cx_s_z_r {[{v} {w} {zh} {ch} {l} {m} {b} {d} {g} {hh} {dh}]}}} {s}]} {[{s} {{any_Cx_s_z_r {[{v} {w} {zh} {ch} {l} {m} {b} {d} {g} {hh} {dh}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: eh
rule: {[{[{[{{[{{any_Vx_s_s_eh_noSlide {[{ih} {iy} {oh} {y} {ae} {ao} {uw} {uh} {aa} {ah} {ax}]}}} {s}]}} {{[{s} {{any_Vx_s_s_eh_noSlide {[{ih} {iy} {oh} {y} {ae} {ao} {uw} {uh} {aa} {ah} {ax}]}}}]}}]} {[{{[{{any_Cx_s_s_p_r {[{b} {dh} {g} {m} {z} {hh} {v} {ch} {zh} {d} {l} {w}]}}} {s}]}} {{[{s} {{any_Cx_s_s_p_r {[{b} {dh} {g} {m} {z} {hh} {v} {ch} {zh} {d} {l} {w}]}}}]}}]}]} {[{eh} {[{[{{any_Vx_s_s_eh_noSlide {[{ih} {iy} {oh} {y} {ae} {ao} {uw} {uh} {aa} {ah} {ax}]}}} {s}]} {[{s} {{any_Vx_s_s_eh_noSlide {[{ih} {iy} {oh} {y} {ae} {ao} {uw} {uh} {aa} {ah} {ax}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: p
rule: {[{[{{[{{any_Cx_zh_s_p_ax {[{m} {v} {l} {hh} {w} {z} {g} {dh} {ch} {d} {b}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_s_p_ax {[{m} {v} {l} {hh} {w} {z} {g} {dh} {ch} {d} {b}]}}}]}}]} {[{p} {[{[{{any_Cx_zh_s_p_ax {[{m} {v} {l} {hh} {w} {z} {g} {dh} {ch} {d} {b}]}}} {zh}]} {[{zh} {{any_Cx_zh_s_p_ax {[{m} {v} {l} {hh} {w} {z} {g} {dh} {ch} {d} {b}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: ax
rule: {[{[{{[{{any_Cx_zh_zh_ax_r_p {[{g} {d} {w} {b} {z} {m} {ch} {hh} {v} {l} {dh}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_ax_r_p {[{g} {d} {w} {b} {z} {m} {ch} {hh} {v} {l} {dh}]}}}]}}]} {[{ax} {[{[{{any_Cx_zh_zh_ax_r_p {[{g} {d} {w} {b} {z} {m} {ch} {hh} {v} {l} {dh}]}}} {zh}]} {[{zh} {{any_Cx_zh_zh_ax_r_p {[{g} {d} {w} {b} {z} {m} {ch} {hh} {v} {l} {dh}]}}}]}]}]}]}
Phoneme rule:
guard: z phoneme: r
rule: {[{[{{[{{any_Cx_z_zh_r_ax_ax {[{ch} {m} {w} {hh} {g} {dh} {v} {d} {l} {b}]}}} {z}]}} {{[{z} {{any_Cx_z_zh_r_ax_ax {[{ch} {m} {w} {hh} {g} {dh} {v} {d} {l} {b}]}}}]}}]} {[{r} {[{[{{any_Cx_z_zh_r_ax_ax {[{ch} {m} {w} {hh} {g} {dh} {v} {d} {l} {b}]}}} {z}]} {[{z} {{any_Cx_z_zh_r_ax_ax {[{ch} {m} {w} {hh} {g} {dh} {v} {d} {l} {b}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: ax
rule: {[{[{{[{{any_Cx_s_z_ax_b_r {[{zh} {g} {dh} {m} {v} {w} {ch} {hh} {l} {d}]}}} {s}]}} {{[{s} {{any_Cx_s_z_ax_b_r {[{zh} {g} {dh} {m} {v} {w} {ch} {hh} {l} {d}]}}}]}}]} {[{ax} {[{[{{any_Cx_s_z_ax_b_r {[{zh} {g} {dh} {m} {v} {w} {ch} {hh} {l} {d}]}}} {s}]} {[{s} {{any_Cx_s_z_ax_b_r {[{zh} {g} {dh} {m} {v} {w} {ch} {hh} {l} {d}]}}}]}]}]}]}
Phoneme rule:
guard: jh phoneme: b
rule: {[{[{{[{{any_Cx_jh_s_b_ax_ax {[{d} {g} {v} {w} {dh} {z} {zh} {l} {ch} {hh} {m}]}}} {jh}]}} {{[{jh} {{any_Cx_jh_s_b_ax_ax {[{d} {g} {v} {w} {dh} {z} {zh} {l} {ch} {hh} {m}]}}}]}}]} {[{b} {[{[{{any_Cx_jh_s_b_ax_ax {[{d} {g} {v} {w} {dh} {z} {zh} {l} {ch} {hh} {m}]}}} {jh}]} {[{jh} {{any_Cx_jh_s_b_ax_ax {[{d} {g} {v} {w} {dh} {z} {zh} {l} {ch} {hh} {m}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ax
rule: {[{[{{[{{any_Cx_sh_jh_ax_b {[{g} {ch} {v} {dh} {m} {hh} {l} {z} {zh} {w} {d}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_jh_ax_b {[{g} {ch} {v} {dh} {m} {hh} {l} {z} {zh} {w} {d}]}}}]}}]} {[{ax} {[{[{{any_Cx_sh_jh_ax_l_b {[{ch} {g} {z} {m} {zh} {d} {hh} {v} {w} {dh}]}}} {sh}]} {[{sh} {{any_Cx_sh_jh_ax_l_b {[{ch} {g} {z} {m} {zh} {d} {hh} {v} {w} {dh}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: l
rule: {[{[{{[{{any_Cx_sh_sh_l_ax {[{d} {b} {hh} {zh} {g} {z} {dh} {v} {w} {ch} {m}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_l_ax {[{d} {b} {hh} {zh} {g} {z} {dh} {v} {w} {ch} {m}]}}}]}}]} {[{l} {[{[{{any_Cx_sh_sh_l_ax {[{d} {b} {hh} {zh} {g} {z} {dh} {v} {w} {ch} {m}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_l_ax {[{d} {b} {hh} {zh} {g} {z} {dh} {v} {w} {ch} {m}]}}}]}]}]}]}
Closing rule:
guard: thr
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {thr}]}} {{[{thr} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_l_thr {[{ch} {dh} {d} {hh} {z} {b} {g} {w} {zh} {m} {v}]}}} {thr}]}} {{[{thr} {{any_Cx_sh_l_thr {[{ch} {dh} {d} {hh} {z} {b} {g} {w} {zh} {m} {v}]}}}]}}]} {sil}]}

parse: err = Parser error
Mapped result =
result 0 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 1 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 2 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 3 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 4 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false

Rules =
rule 0 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Vx_ih_z_p_noSlide {[{ae} {ao} {y} {iy} {oh} {uh} {ah} {ax} {aa} {eh} {uw}]}}}]} {[{{any_Vx_ih_z_p_noSlide {[{ae} {ao} {y} {iy} {oh} {uh} {ah} {ax} {aa} {eh} {uw}]}}} {z}]}]}} {{[{[{z} {{any_Cx_ih_z_p {[{m} {ch} {dh} {w} {b} {v} {d} {l} {zh} {g} {hh}]}}}]} {[{{any_Cx_ih_z_p {[{m} {ch} {dh} {w} {b} {v} {d} {l} {zh} {g} {hh}]}}} {z}]}]}}]}}
Phoneme rule:
guard: z phoneme: ih
rule: {[{[{[{{[{{any_Vx_z_p_z_ih_noSlide {[{aa} {ah} {uw} {uh} {y} {iy} {ae} {eh} {ao} {ax} {oh}]}}} {z}]}} {{[{z} {{any_Vx_z_p_z_ih_noSlide {[{aa} {ah} {uw} {uh} {y} {iy} {ae} {eh} {ao} {ax} {oh}]}}}]}}]} {[{{[{{any_Cx_z_p_z_r {[{w} {b} {d} {l} {zh} {hh} {m} {g} {v} {ch} {dh}]}}} {z}]}} {{[{z} {{any_Cx_z_p_z_r {[{w} {b} {d} {l} {zh} {hh} {m} {g} {v} {ch} {dh}]}}}]}}]}]} {[{ih} {[{[{{any_Vx_z_p_z_ih_noSlide {[{aa} {ah} {uw} {uh} {y} {iy} {ae} {eh} {ao} {ax} {oh}]}}} {z}]} {[{z} {{any_Vx_z_p_z_ih_noSlide {[{aa} {ah} {uw} {uh} {y} {iy} {ae} {eh} {ao} {ax} {oh}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: r
rule: {[{[{{[{{any_Cx_s_z_r {[{d} {g} {zh} {hh} {v} {w} {dh} {l} {ch} {m} {b}]}}} {s}]}} {{[{s} {{any_Cx_s_z_r {[{d} {g} {zh} {hh} {v} {w} {dh} {l} {ch} {m} {b}]}}}]}}]} {[{r} {[{[{{any_Cx_s_z_r {[{d} {g} {zh} {hh} {v} {w} {dh} {l} {ch} {m} {b}]}}} {s}]} {[{s} {{any_Cx_s_z_r {[{d} {g} {zh} {hh} {v} {w} {dh} {l} {ch} {m} {b}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: eh
rule: {[{[{[{{[{{any_Vx_s_s_eh_noSlide {[{iy} {uw} {uh} {y} {aa} {ah} {ao} {ih} {ae} {ax} {oh}]}}} {s}]}} {{[{s} {{any_Vx_s_s_eh_noSlide {[{iy} {uw} {uh} {y} {aa} {ah} {ao} {ih} {ae} {ax} {oh}]}}}]}}]} {[{{[{{any_Cx_s_s_p_r {[{z} {d} {ch} {l} {g} {m} {zh} {b} {hh} {dh} {v} {w}]}}} {s}]}} {{[{s} {{any_Cx_s_s_p_r {[{z} {d} {ch} {l} {g} {m} {zh} {b} {hh} {dh} {v} {w}]}}}]}}]}]} {[{eh} {[{[{{any_Vx_s_s_eh_noSlide {[{iy} {uw} {uh} {y} {aa} {ah} {ao} {ih} {ae} {ax} {oh}]}}} {s}]} {[{s} {{any_Vx_s_s_eh_noSlide {[{iy} {uw} {uh} {y} {aa} {ah} {ao} {ih} {ae} {ax} {oh}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: p
rule: {[{[{{[{{any_Cx_zh_s_p_ax {[{w} {z} {ch} {g} {dh} {l} {hh} {m} {v} {d} {b}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_s_p_ax {[{w} {z} {ch} {g} {dh} {l} {hh} {m} {v} {d} {b}]}}}]}}]} {[{p} {[{[{{any_Cx_zh_s_p_ax {[{w} {z} {ch} {g} {dh} {l} {hh} {m} {v} {d} {b}]}}} {zh}]} {[{zh} {{any_Cx_zh_s_p_ax {[{w} {z} {ch} {g} {dh} {l} {hh} {m} {v} {d} {b}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: ax
rule: {[{[{{[{{any_Cx_zh_zh_ax_r_p {[{hh} {dh} {m} {b} {ch} {g} {v} {z} {l} {w} {d}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_ax_r_p {[{hh} {dh} {m} {b} {ch} {g} {v} {z} {l} {w} {d}]}}}]}}]} {[{ax} {[{[{{any_Cx_zh_zh_ax_r_p {[{hh} {dh} {m} {b} {ch} {g} {v} {z} {l} {w} {d}]}}} {zh}]} {[{zh} {{any_Cx_zh_zh_ax_r_p {[{hh} {dh} {m} {b} {ch} {g} {v} {z} {l} {w} {d}]}}}]}]}]}]}
Phoneme rule:
guard: z phoneme: r
rule: {[{[{{[{{any_Cx_z_zh_r_ax_ax {[{dh} {d} {l} {v} {b} {hh} {ch} {g} {m} {w}]}}} {z}]}} {{[{z} {{any_Cx_z_zh_r_ax_ax {[{dh} {d} {l} {v} {b} {hh} {ch} {g} {m} {w}]}}}]}}]} {[{r} {[{[{{any_Cx_z_zh_r_ax_ax {[{dh} {d} {l} {v} {b} {hh} {ch} {g} {m} {w}]}}} {z}]} {[{z} {{any_Cx_z_zh_r_ax_ax {[{dh} {d} {l} {v} {b} {hh} {ch} {g} {m} {w}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: ax
rule: {[{[{{[{{any_Cx_s_z_ax_b_r {[{hh} {l} {ch} {d} {dh} {v} {zh} {w} {g} {m}]}}} {s}]}} {{[{s} {{any_Cx_s_z_ax_b_r {[{hh} {l} {ch} {d} {dh} {v} {zh} {w} {g} {m}]}}}]}}]} {[{ax} {[{[{{any_Cx_s_z_ax_b_r {[{hh} {l} {ch} {d} {dh} {v} {zh} {w} {g} {m}]}}} {s}]} {[{s} {{any_Cx_s_z_ax_b_r {[{hh} {l} {ch} {d} {dh} {v} {zh} {w} {g} {m}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: b
rule: {[{[{{[{{any_Cx_zh_s_b_ax_ax {[{m} {d} {g} {v} {ch} {dh} {l} {w} {hh} {z}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_s_b_ax_ax {[{m} {d} {g} {v} {ch} {dh} {l} {w} {hh} {z}]}}}]}}]} {[{b} {[{[{{any_Cx_zh_s_b_ax_ax {[{m} {d} {g} {v} {ch} {dh} {l} {w} {hh} {z}]}}} {zh}]} {[{zh} {{any_Cx_zh_s_b_ax_ax {[{m} {d} {g} {v} {ch} {dh} {l} {w} {hh} {z}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ax
rule: {[{[{{[{{any_Cx_sh_zh_ax_b {[{l} {m} {v} {w} {z} {d} {g} {dh} {ch} {hh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_zh_ax_b {[{l} {m} {v} {w} {z} {d} {g} {dh} {ch} {hh}]}}}]}}]} {[{ax} {[{[{{any_Cx_sh_zh_ax_l_b {[{dh} {z} {v} {g} {ch} {d} {m} {hh} {w}]}}} {sh}]} {[{sh} {{any_Cx_sh_zh_ax_l_b {[{dh} {z} {v} {g} {ch} {d} {m} {hh} {w}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: l
rule: {[{[{{[{{any_Cx_sh_sh_l_ax {[{z} {dh} {g} {v} {b} {d} {hh} {ch} {m} {w} {zh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_l_ax {[{z} {dh} {g} {v} {b} {d} {hh} {ch} {m} {w} {zh}]}}}]}}]} {[{l} {[{[{{any_Cx_sh_sh_l_ax {[{z} {dh} {g} {v} {b} {d} {hh} {ch} {m} {w} {zh}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_l_ax {[{z} {dh} {g} {v} {b} {d} {hh} {ch} {m} {w} {zh}]}}}]}]}]}]}
Closing rule:
guard: f
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {f}]}} {{[{f} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_l_f {[{d} {v} {w} {zh} {ch} {g} {hh} {z} {m} {b} {dh}]}}} {f}]}} {{[{f} {{any_Cx_sh_l_f {[{d} {v} {w} {zh} {ch} {g} {hh} {z} {m} {b} {dh}]}}}]}}]} {sil}]}
rule 1 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Vx_ih_z_p_noSlide {[{iy} {ah} {eh} {oh} {aa} {ae} {ao} {uw} {uh} {ax} {y}]}}}]} {[{{any_Vx_ih_z_p_noSlide {[{iy} {ah} {eh} {oh} {aa} {ae} {ao} {uw} {uh} {ax} {y}]}}} {z}]}]}} {{[{[{z} {{any_Cx_ih_z_p {[{zh} {w} {b} {hh} {dh} {l} {d} {ch} {g} {m} {v}]}}}]} {[{{any_Cx_ih_z_p {[{zh} {w} {b} {hh} {dh} {l} {d} {ch} {g} {m} {v}]}}} {z}]}]}}]}}
Phoneme rule:
guard: z phoneme: ih
rule: {[{[{[{{[{{any_Vx_z_p_z_ih_noSlide {[{ah} {ao} {eh} {ax} {uh} {aa} {iy} {oh} {ae} {uw} {y}]}}} {z}]}} {{[{z} {{any_Vx_z_p_z_ih_noSlide {[{ah} {ao} {eh} {ax} {uh} {aa} {iy} {oh} {ae} {uw} {y}]}}}]}}]} {[{{[{{any_Cx_z_p_z_r {[{ch} {d} {g} {hh} {v} {dh} {m} {w} {b} {l} {zh}]}}} {z}]}} {{[{z} {{any_Cx_z_p_z_r {[{ch} {d} {g} {hh} {v} {dh} {m} {w} {b} {l} {zh}]}}}]}}]}]} {[{ih} {[{[{{any_Vx_z_p_z_ih_noSlide {[{ah} {ao} {eh} {ax} {uh} {aa} {iy} {oh} {ae} {uw} {y}]}}} {z}]} {[{z} {{any_Vx_z_p_z_ih_noSlide {[{ah} {ao} {eh} {ax} {uh} {aa} {iy} {oh} {ae} {uw} {y}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: r
rule: {[{[{{[{{any_Cx_s_z_r {[{b} {zh} {v} {hh} {w} {ch} {d} {l} {dh} {m} {g}]}}} {s}]}} {{[{s} {{any_Cx_s_z_r {[{b} {zh} {v} {hh} {w} {ch} {d} {l} {dh} {m} {g}]}}}]}}]} {[{r} {[{[{{any_Cx_s_z_r {[{b} {zh} {v} {hh} {w} {ch} {d} {l} {dh} {m} {g}]}}} {s}]} {[{s} {{any_Cx_s_z_r {[{b} {zh} {v} {hh} {w} {ch} {d} {l} {dh} {m} {g}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: eh
rule: {[{[{[{{[{{any_Vx_s_s_eh_noSlide {[{ae} {ah} {ax} {ih} {iy} {oh} {uh} {aa} {y} {uw} {ao}]}}} {s}]}} {{[{s} {{any_Vx_s_s_eh_noSlide {[{ae} {ah} {ax} {ih} {iy} {oh} {uh} {aa} {y} {uw} {ao}]}}}]}}]} {[{{[{{any_Cx_s_s_p_r {[{hh} {l} {z} {g} {v} {zh} {dh} {w} {m} {b} {ch} {d}]}}} {s}]}} {{[{s} {{any_Cx_s_s_p_r {[{hh} {l} {z} {g} {v} {zh} {dh} {w} {m} {b} {ch} {d}]}}}]}}]}]} {[{eh} {[{[{{any_Vx_s_s_eh_noSlide {[{ae} {ah} {ax} {ih} {iy} {oh} {uh} {aa} {y} {uw} {ao}]}}} {s}]} {[{s} {{any_Vx_s_s_eh_noSlide {[{ae} {ah} {ax} {ih} {iy} {oh} {uh} {aa} {y} {uw} {ao}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: p
rule: {[{[{{[{{any_Cx_zh_s_p_ax {[{v} {hh} {z} {b} {m} {ch} {l} {d} {g} {dh} {w}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_s_p_ax {[{v} {hh} {z} {b} {m} {ch} {l} {d} {g} {dh} {w}]}}}]}}]} {[{p} {[{[{{any_Cx_zh_s_p_ax {[{v} {hh} {z} {b} {m} {ch} {l} {d} {g} {dh} {w}]}}} {zh}]} {[{zh} {{any_Cx_zh_s_p_ax {[{v} {hh} {z} {b} {m} {ch} {l} {d} {g} {dh} {w}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: ax
rule: {[{[{{[{{any_Cx_zh_zh_ax_r_p {[{l} {w} {z} {m} {ch} {hh} {b} {g} {d} {dh} {v}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_ax_r_p {[{l} {w} {z} {m} {ch} {hh} {b} {g} {d} {dh} {v}]}}}]}}]} {[{ax} {[{[{{any_Cx_zh_zh_ax_r_p {[{l} {w} {z} {m} {ch} {hh} {b} {g} {d} {dh} {v}]}}} {zh}]} {[{zh} {{any_Cx_zh_zh_ax_r_p {[{l} {w} {z} {m} {ch} {hh} {b} {g} {d} {dh} {v}]}}}]}]}]}]}
Phoneme rule:
guard: z phoneme: r
rule: {[{[{{[{{any_Cx_z_zh_r_ax_ax {[{b} {g} {v} {dh} {d} {l} {hh} {w} {m} {ch}]}}} {z}]}} {{[{z} {{any_Cx_z_zh_r_ax_ax {[{b} {g} {v} {dh} {d} {l} {hh} {w} {m} {ch}]}}}]}}]} {[{r} {[{[{{any_Cx_z_zh_r_ax_ax {[{b} {g} {v} {dh} {d} {l} {hh} {w} {m} {ch}]}}} {z}]} {[{z} {{any_Cx_z_zh_r_ax_ax {[{b} {g} {v} {dh} {d} {l} {hh} {w} {m} {ch}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: ax
rule: {[{[{{[{{any_Cx_s_z_ax_b_r {[{ch} {w} {dh} {hh} {zh} {d} {g} {m} {l} {v}]}}} {s}]}} {{[{s} {{any_Cx_s_z_ax_b_r {[{ch} {w} {dh} {hh} {zh} {d} {g} {m} {l} {v}]}}}]}}]} {[{ax} {[{[{{any_Cx_s_z_ax_b_r {[{ch} {w} {dh} {hh} {zh} {d} {g} {m} {l} {v}]}}} {s}]} {[{s} {{any_Cx_s_z_ax_b_r {[{ch} {w} {dh} {hh} {zh} {d} {g} {m} {l} {v}]}}}]}]}]}]}
Phoneme rule:
guard: jh phoneme: b
rule: {[{[{{[{{any_Cx_jh_s_b_ax_ax {[{g} {z} {d} {w} {dh} {hh} {v} {zh} {ch} {l} {m}]}}} {jh}]}} {{[{jh} {{any_Cx_jh_s_b_ax_ax {[{g} {z} {d} {w} {dh} {hh} {v} {zh} {ch} {l} {m}]}}}]}}]} {[{b} {[{[{{any_Cx_jh_s_b_ax_ax {[{g} {z} {d} {w} {dh} {hh} {v} {zh} {ch} {l} {m}]}}} {jh}]} {[{jh} {{any_Cx_jh_s_b_ax_ax {[{g} {z} {d} {w} {dh} {hh} {v} {zh} {ch} {l} {m}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ax
rule: {[{[{{[{{any_Cx_sh_jh_ax_b {[{g} {l} {w} {ch} {hh} {z} {dh} {m} {v} {zh} {d}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_jh_ax_b {[{g} {l} {w} {ch} {hh} {z} {dh} {m} {v} {zh} {d}]}}}]}}]} {[{ax} {[{[{{any_Cx_sh_jh_ax_l_b {[{dh} {z} {hh} {zh} {m} {w} {v} {d} {g} {ch}]}}} {sh}]} {[{sh} {{any_Cx_sh_jh_ax_l_b {[{dh} {z} {hh} {zh} {m} {w} {v} {d} {g} {ch}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: l
rule: {[{[{{[{{any_Cx_sh_sh_l_ax {[{d} {dh} {g} {m} {zh} {b} {v} {z} {ch} {hh} {w}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_l_ax {[{d} {dh} {g} {m} {zh} {b} {v} {z} {ch} {hh} {w}]}}}]}}]} {[{l} {[{[{{any_Cx_sh_sh_l_ax {[{d} {dh} {g} {m} {zh} {b} {v} {z} {ch} {hh} {w}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_l_ax {[{d} {dh} {g} {m} {zh} {b} {v} {z} {ch} {hh} {w}]}}}]}]}]}]}
Closing rule:
guard: thr
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {thr}]}} {{[{thr} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_l_thr {[{ch} {g} {zh} {dh} {hh} {z} {b} {w} {v} {m} {d}]}}} {thr}]}} {{[{thr} {{any_Cx_sh_l_thr {[{ch} {g} {zh} {dh} {hh} {z} {b} {w} {v} {m} {d}]}}}]}}]} {sil}]}
rule 2 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Vx_ih_z_p_noSlide {[{aa} {eh} {oh} {ah} {y} {ax} {iy} {uw} {uh} {ae} {ao}]}}}]} {[{{any_Vx_ih_z_p_noSlide {[{aa} {eh} {oh} {ah} {y} {ax} {iy} {uw} {uh} {ae} {ao}]}}} {z}]}]}} {{[{[{z} {{any_Cx_ih_z_p {[{v} {g} {ch} {zh} {dh} {d} {hh} {l} {m} {w} {b}]}}}]} {[{{any_Cx_ih_z_p {[{v} {g} {ch} {zh} {dh} {d} {hh} {l} {m} {w} {b}]}}} {z}]}]}}]}}
Phoneme rule:
guard: z phoneme: ih
rule: {[{[{[{{[{{any_Vx_z_p_z_ih_noSlide {[{uw} {uh} {y} {ah} {iy} {ao} {eh} {aa} {ae} {oh} {ax}]}}} {z}]}} {{[{z} {{any_Vx_z_p_z_ih_noSlide {[{uw} {uh} {y} {ah} {iy} {ao} {eh} {aa} {ae} {oh} {ax}]}}}]}}]} {[{{[{{any_Cx_z_p_z_r {[{b} {zh} {hh} {l} {m} {v} {ch} {d} {dh} {g} {w}]}}} {z}]}} {{[{z} {{any_Cx_z_p_z_r {[{b} {zh} {hh} {l} {m} {v} {ch} {d} {dh} {g} {w}]}}}]}}]}]} {[{ih} {[{[{{any_Vx_z_p_z_ih_noSlide {[{uw} {uh} {y} {ah} {iy} {ao} {eh} {aa} {ae} {oh} {ax}]}}} {z}]} {[{z} {{any_Vx_z_p_z_ih_noSlide {[{uw} {uh} {y} {ah} {iy} {ao} {eh} {aa} {ae} {oh} {ax}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: r
rule: {[{[{{[{{any_Cx_s_z_r {[{dh} {d} {hh} {m} {v} {l} {w} {b} {ch} {g} {zh}]}}} {s}]}} {{[{s} {{any_Cx_s_z_r {[{dh} {d} {hh} {m} {v} {l} {w} {b} {ch} {g} {zh}]}}}]}}]} {[{r} {[{[{{any_Cx_s_z_r {[{dh} {d} {hh} {m} {v} {l} {w} {b} {ch} {g} {zh}]}}} {s}]} {[{s} {{any_Cx_s_z_r {[{dh} {d} {hh} {m} {v} {l} {w} {b} {ch} {g} {zh}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: eh
rule: {[{[{[{{[{{any_Vx_s_s_eh_noSlide {[{ae} {ax} {ih} {iy} {uw} {uh} {aa} {ah} {ao} {oh} {y}]}}} {s}]}} {{[{s} {{any_Vx_s_s_eh_noSlide {[{ae} {ax} {ih} {iy} {uw} {uh} {aa} {ah} {ao} {oh} {y}]}}}]}}]} {[{{[{{any_Cx_s_s_p_r {[{w} {d} {l} {zh} {m} {v} {dh} {hh} {z} {g} {b} {ch}]}}} {s}]}} {{[{s} {{any_Cx_s_s_p_r {[{w} {d} {l} {zh} {m} {v} {dh} {hh} {z} {g} {b} {ch}]}}}]}}]}]} {[{eh} {[{[{{any_Vx_s_s_eh_noSlide {[{ae} {ax} {ih} {iy} {uw} {uh} {aa} {ah} {ao} {oh} {y}]}}} {s}]} {[{s} {{any_Vx_s_s_eh_noSlide {[{ae} {ax} {ih} {iy} {uw} {uh} {aa} {ah} {ao} {oh} {y}]}}}]}]}]}]}
Phoneme rule:
guard: jh phoneme: p
rule: {[{[{{[{{any_Cx_jh_s_p_ax {[{dh} {w} {b} {d} {hh} {m} {zh} {l} {ch} {g} {v} {z}]}}} {jh}]}} {{[{jh} {{any_Cx_jh_s_p_ax {[{dh} {w} {b} {d} {hh} {m} {zh} {l} {ch} {g} {v} {z}]}}}]}}]} {[{p} {[{[{{any_Cx_jh_s_p_ax {[{dh} {w} {b} {d} {hh} {m} {zh} {l} {ch} {g} {v} {z}]}}} {jh}]} {[{jh} {{any_Cx_jh_s_p_ax {[{dh} {w} {b} {d} {hh} {m} {zh} {l} {ch} {g} {v} {z}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: ax
rule: {[{[{{[{{any_Cx_zh_jh_ax_r_p {[{b} {l} {v} {z} {ch} {w} {g} {hh} {m} {d} {dh}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_jh_ax_r_p {[{b} {l} {v} {z} {ch} {w} {g} {hh} {m} {d} {dh}]}}}]}}]} {[{ax} {[{[{{any_Cx_zh_jh_ax_r_p {[{b} {l} {v} {z} {ch} {w} {g} {hh} {m} {d} {dh}]}}} {zh}]} {[{zh} {{any_Cx_zh_jh_ax_r_p {[{b} {l} {v} {z} {ch} {w} {g} {hh} {m} {d} {dh}]}}}]}]}]}]}
Phoneme rule:
guard: y phoneme: r
rule: {[{[{{[{{any_Cx_y_zh_r_ax_ax {[{dh} {w} {ch} {m} {g} {b} {d} {v} {z} {hh} {l}]}}} {y}]}} {{[{y} {{any_Cx_y_zh_r_ax_ax {[{dh} {w} {ch} {m} {g} {b} {d} {v} {z} {hh} {l}]}}}]}}]} {[{r} {[{[{{any_Cx_y_zh_r_ax_ax {[{dh} {w} {ch} {m} {g} {b} {d} {v} {z} {hh} {l}]}}} {y}]} {[{y} {{any_Cx_y_zh_r_ax_ax {[{dh} {w} {ch} {m} {g} {b} {d} {v} {z} {hh} {l}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: ax
rule: {[{[{{[{{any_Cx_s_y_ax_b_r {[{zh} {w} {l} {d} {z} {ch} {g} {hh} {m} {v} {dh}]}}} {s}]}} {{[{s} {{any_Cx_s_y_ax_b_r {[{zh} {w} {l} {d} {z} {ch} {g} {hh} {m} {v} {dh}]}}}]}}]} {[{ax} {[{[{{any_Cx_s_y_ax_b_r {[{zh} {w} {l} {d} {z} {ch} {g} {hh} {m} {v} {dh}]}}} {s}]} {[{s} {{any_Cx_s_y_ax_b_r {[{zh} {w} {l} {d} {z} {ch} {g} {hh} {m} {v} {dh}]}}}]}]}]}]}
Phoneme rule:
guard: jh phoneme: b
rule: {[{[{{[{{any_Cx_jh_s_b_ax_ax {[{d} {dh} {l} {m} {zh} {ch} {w} {hh} {v} {g} {z}]}}} {jh}]}} {{[{jh} {{any_Cx_jh_s_b_ax_ax {[{d} {dh} {l} {m} {zh} {ch} {w} {hh} {v} {g} {z}]}}}]}}]} {[{b} {[{[{{any_Cx_jh_s_b_ax_ax {[{d} {dh} {l} {m} {zh} {ch} {w} {hh} {v} {g} {z}]}}} {jh}]} {[{jh} {{any_Cx_jh_s_b_ax_ax {[{d} {dh} {l} {m} {zh} {ch} {w} {hh} {v} {g} {z}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ax
rule: {[{[{{[{{any_Cx_sh_jh_ax_b {[{m} {v} {ch} {d} {zh} {g} {hh} {dh} {z} {l} {w}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_jh_ax_b {[{m} {v} {ch} {d} {zh} {g} {hh} {dh} {z} {l} {w}]}}}]}}]} {[{ax} {[{[{{any_Cx_sh_jh_ax_l_b {[{hh} {ch} {dh} {z} {d} {v} {zh} {g} {m} {w}]}}} {sh}]} {[{sh} {{any_Cx_sh_jh_ax_l_b {[{hh} {ch} {dh} {z} {d} {v} {zh} {g} {m} {w}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: l
rule: {[{[{{[{{any_Cx_sh_sh_l_ax {[{b} {v} {zh} {ch} {g} {m} {d} {dh} {w} {hh} {z}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_l_ax {[{b} {v} {zh} {ch} {g} {m} {d} {dh} {w} {hh} {z}]}}}]}}]} {[{l} {[{[{{any_Cx_sh_sh_l_ax {[{b} {v} {zh} {ch} {g} {m} {d} {dh} {w} {hh} {z}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_l_ax {[{b} {v} {zh} {ch} {g} {m} {d} {dh} {w} {hh} {z}]}}}]}]}]}]}
Closing rule:
guard: r
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {r}]}} {{[{r} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_l_r {[{zh} {d} {dh} {b} {z} {ch} {hh} {g} {m} {v} {w}]}}} {r}]}} {{[{r} {{any_Cx_sh_l_r {[{zh} {d} {dh} {b} {z} {ch} {hh} {g} {m} {v} {w}]}}}]}}]} {sil}]}
rule 3 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Vx_ih_z_p_noSlide {[{ae} {ax} {uw} {oh} {ah} {ao} {eh} {aa} {iy} {uh} {y}]}}}]} {[{{any_Vx_ih_z_p_noSlide {[{ae} {ax} {uw} {oh} {ah} {ao} {eh} {aa} {iy} {uh} {y}]}}} {z}]}]}} {{[{[{z} {{any_Cx_ih_z_p {[{m} {v} {b} {l} {d} {g} {dh} {zh} {ch} {hh} {w}]}}}]} {[{{any_Cx_ih_z_p {[{m} {v} {b} {l} {d} {g} {dh} {zh} {ch} {hh} {w}]}}} {z}]}]}}]}}
Phoneme rule:
guard: z phoneme: ih
rule: {[{[{[{{[{{any_Vx_z_p_z_ih_noSlide {[{ah} {oh} {aa} {ao} {iy} {uw} {uh} {ae} {eh} {ax} {y}]}}} {z}]}} {{[{z} {{any_Vx_z_p_z_ih_noSlide {[{ah} {oh} {aa} {ao} {iy} {uw} {uh} {ae} {eh} {ax} {y}]}}}]}}]} {[{{[{{any_Cx_z_p_z_r {[{w} {ch} {dh} {g} {hh} {v} {b} {l} {zh} {d} {m}]}}} {z}]}} {{[{z} {{any_Cx_z_p_z_r {[{w} {ch} {dh} {g} {hh} {v} {b} {l} {zh} {d} {m}]}}}]}}]}]} {[{ih} {[{[{{any_Vx_z_p_z_ih_noSlide {[{ah} {oh} {aa} {ao} {iy} {uw} {uh} {ae} {eh} {ax} {y}]}}} {z}]} {[{z} {{any_Vx_z_p_z_ih_noSlide {[{ah} {oh} {aa} {ao} {iy} {uw} {uh} {ae} {eh} {ax} {y}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: r
rule: {[{[{{[{{any_Cx_s_z_r {[{m} {hh} {zh} {b} {d} {g} {v} {w} {ch} {l} {dh}]}}} {s}]}} {{[{s} {{any_Cx_s_z_r {[{m} {hh} {zh} {b} {d} {g} {v} {w} {ch} {l} {dh}]}}}]}}]} {[{r} {[{[{{any_Cx_s_z_r {[{m} {hh} {zh} {b} {d} {g} {v} {w} {ch} {l} {dh}]}}} {s}]} {[{s} {{any_Cx_s_z_r {[{m} {hh} {zh} {b} {d} {g} {v} {w} {ch} {l} {dh}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: eh
rule: {[{[{[{{[{{any_Vx_s_s_eh_noSlide {[{ax} {ih} {iy} {oh} {uw} {uh} {aa} {ae} {ah} {ao} {y}]}}} {s}]}} {{[{s} {{any_Vx_s_s_eh_noSlide {[{ax} {ih} {iy} {oh} {uw} {uh} {aa} {ae} {ah} {ao} {y}]}}}]}}]} {[{{[{{any_Cx_s_s_p_r {[{l} {z} {b} {g} {hh} {zh} {v} {d} {ch} {dh} {w} {m}]}}} {s}]}} {{[{s} {{any_Cx_s_s_p_r {[{l} {z} {b} {g} {hh} {zh} {v} {d} {ch} {dh} {w} {m}]}}}]}}]}]} {[{eh} {[{[{{any_Vx_s_s_eh_noSlide {[{ax} {ih} {iy} {oh} {uw} {uh} {aa} {ae} {ah} {ao} {y}]}}} {s}]} {[{s} {{any_Vx_s_s_eh_noSlide {[{ax} {ih} {iy} {oh} {uw} {uh} {aa} {ae} {ah} {ao} {y}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: p
rule: {[{[{{[{{any_Cx_zh_s_p_ax {[{b} {hh} {w} {d} {m} {dh} {g} {v} {z} {l} {ch}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_s_p_ax {[{b} {hh} {w} {d} {m} {dh} {g} {v} {z} {l} {ch}]}}}]}}]} {[{p} {[{[{{any_Cx_zh_s_p_ax {[{b} {hh} {w} {d} {m} {dh} {g} {v} {z} {l} {ch}]}}} {zh}]} {[{zh} {{any_Cx_zh_s_p_ax {[{b} {hh} {w} {d} {m} {dh} {g} {v} {z} {l} {ch}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: ax
rule: {[{[{{[{{any_Cx_zh_zh_ax_r_p {[{w} {dh} {z} {d} {m} {v} {b} {ch} {g} {hh} {l}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_ax_r_p {[{w} {dh} {z} {d} {m} {v} {b} {ch} {g} {hh} {l}]}}}]}}]} {[{ax} {[{[{{any_Cx_zh_zh_ax_r_p {[{w} {dh} {z} {d} {m} {v} {b} {ch} {g} {hh} {l}]}}} {zh}]} {[{zh} {{any_Cx_zh_zh_ax_r_p {[{w} {dh} {z} {d} {m} {v} {b} {ch} {g} {hh} {l}]}}}]}]}]}]}
Phoneme rule:
guard: y phoneme: r
rule: {[{[{{[{{any_Cx_y_zh_r_ax_ax {[{z} {ch} {d} {m} {w} {dh} {v} {b} {hh} {l} {g}]}}} {y}]}} {{[{y} {{any_Cx_y_zh_r_ax_ax {[{z} {ch} {d} {m} {w} {dh} {v} {b} {hh} {l} {g}]}}}]}}]} {[{r} {[{[{{any_Cx_y_zh_r_ax_ax {[{z} {ch} {d} {m} {w} {dh} {v} {b} {hh} {l} {g}]}}} {y}]} {[{y} {{any_Cx_y_zh_r_ax_ax {[{z} {ch} {d} {m} {w} {dh} {v} {b} {hh} {l} {g}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: ax
rule: {[{[{{[{{any_Cx_s_y_ax_b_r {[{z} {zh} {ch} {hh} {m} {l} {g} {v} {d} {dh} {w}]}}} {s}]}} {{[{s} {{any_Cx_s_y_ax_b_r {[{z} {zh} {ch} {hh} {m} {l} {g} {v} {d} {dh} {w}]}}}]}}]} {[{ax} {[{[{{any_Cx_s_y_ax_b_r {[{z} {zh} {ch} {hh} {m} {l} {g} {v} {d} {dh} {w}]}}} {s}]} {[{s} {{any_Cx_s_y_ax_b_r {[{z} {zh} {ch} {hh} {m} {l} {g} {v} {d} {dh} {w}]}}}]}]}]}]}
Phoneme rule:
guard: jh phoneme: b
rule: {[{[{{[{{any_Cx_jh_s_b_ax_ax {[{v} {g} {ch} {zh} {d} {l} {hh} {z} {m} {dh} {w}]}}} {jh}]}} {{[{jh} {{any_Cx_jh_s_b_ax_ax {[{v} {g} {ch} {zh} {d} {l} {hh} {z} {m} {dh} {w}]}}}]}}]} {[{b} {[{[{{any_Cx_jh_s_b_ax_ax {[{v} {g} {ch} {zh} {d} {l} {hh} {z} {m} {dh} {w}]}}} {jh}]} {[{jh} {{any_Cx_jh_s_b_ax_ax {[{v} {g} {ch} {zh} {d} {l} {hh} {z} {m} {dh} {w}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ax
rule: {[{[{{[{{any_Cx_sh_jh_ax_b {[{m} {v} {dh} {w} {z} {zh} {d} {hh} {l} {ch} {g}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_jh_ax_b {[{m} {v} {dh} {w} {z} {zh} {d} {hh} {l} {ch} {g}]}}}]}}]} {[{ax} {[{[{{any_Cx_sh_jh_ax_l_b {[{d} {dh} {hh} {w} {zh} {m} {v} {g} {ch} {z}]}}} {sh}]} {[{sh} {{any_Cx_sh_jh_ax_l_b {[{d} {dh} {hh} {w} {zh} {m} {v} {g} {ch} {z}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: l
rule: {[{[{{[{{any_Cx_sh_sh_l_ax {[{hh} {dh} {w} {b} {m} {d} {v} {ch} {g} {z} {zh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_l_ax {[{hh} {dh} {w} {b} {m} {d} {v} {ch} {g} {z} {zh}]}}}]}}]} {[{l} {[{[{{any_Cx_sh_sh_l_ax {[{hh} {dh} {w} {b} {m} {d} {v} {ch} {g} {z} {zh}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_l_ax {[{hh} {dh} {w} {b} {m} {d} {v} {ch} {g} {z} {zh}]}}}]}]}]}]}
Closing rule:
guard: thr
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {thr}]}} {{[{thr} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_l_thr {[{b} {ch} {z} {w} {g} {m} {dh} {d} {hh} {v} {zh}]}}} {thr}]}} {{[{thr} {{any_Cx_sh_l_thr {[{b} {ch} {z} {w} {g} {m} {dh} {d} {hh} {v} {zh}]}}}]}}]} {sil}]}
rule 4 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Vx_ih_z_p_noSlide {[{oh} {ah} {iy} {ae} {ao} {uw} {uh} {aa} {ax} {eh} {y}]}}}]} {[{{any_Vx_ih_z_p_noSlide {[{oh} {ah} {iy} {ae} {ao} {uw} {uh} {aa} {ax} {eh} {y}]}}} {z}]}]}} {{[{[{z} {{any_Cx_ih_z_p {[{g} {v} {ch} {d} {m} {w} {hh} {l} {b} {dh} {zh}]}}}]} {[{{any_Cx_ih_z_p {[{g} {v} {ch} {d} {m} {w} {hh} {l} {b} {dh} {zh}]}}} {z}]}]}}]}}
Phoneme rule:
guard: z phoneme: ih
rule: {[{[{[{{[{{any_Vx_z_p_z_ih_noSlide {[{aa} {eh} {oh} {uw} {uh} {y} {ah} {ao} {ax} {ae} {iy}]}}} {z}]}} {{[{z} {{any_Vx_z_p_z_ih_noSlide {[{aa} {eh} {oh} {uw} {uh} {y} {ah} {ao} {ax} {ae} {iy}]}}}]}}]} {[{{[{{any_Cx_z_p_z_r {[{b} {hh} {g} {l} {w} {d} {m} {zh} {ch} {dh} {v}]}}} {z}]}} {{[{z} {{any_Cx_z_p_z_r {[{b} {hh} {g} {l} {w} {d} {m} {zh} {ch} {dh} {v}]}}}]}}]}]} {[{ih} {[{[{{any_Vx_z_p_z_ih_noSlide {[{aa} {eh} {oh} {uw} {uh} {y} {ah} {ao} {ax} {ae} {iy}]}}} {z}]} {[{z} {{any_Vx_z_p_z_ih_noSlide {[{aa} {eh} {oh} {uw} {uh} {y} {ah} {ao} {ax} {ae} {iy}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: r
rule: {[{[{{[{{any_Cx_s_z_r {[{v} {w} {zh} {ch} {l} {m} {b} {d} {g} {hh} {dh}]}}} {s}]}} {{[{s} {{any_Cx_s_z_r {[{v} {w} {zh} {ch} {l} {m} {b} {d} {g} {hh} {dh}]}}}]}}]} {[{r} {[{[{{any_Cx_s_z_r {[{v} {w} {zh} {ch} {l} {m} {b} {d} {g} {hh} {dh}]}}} {s}]} {[{s} {{any_Cx_s_z_r {[{v} {w} {zh} {ch} {l} {m} {b} {d} {g} {hh} {dh}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: eh
rule: {[{[{[{{[{{any_Vx_s_s_eh_noSlide {[{ih} {iy} {oh} {y} {ae} {ao} {uw} {uh} {aa} {ah} {ax}]}}} {s}]}} {{[{s} {{any_Vx_s_s_eh_noSlide {[{ih} {iy} {oh} {y} {ae} {ao} {uw} {uh} {aa} {ah} {ax}]}}}]}}]} {[{{[{{any_Cx_s_s_p_r {[{b} {dh} {g} {m} {z} {hh} {v} {ch} {zh} {d} {l} {w}]}}} {s}]}} {{[{s} {{any_Cx_s_s_p_r {[{b} {dh} {g} {m} {z} {hh} {v} {ch} {zh} {d} {l} {w}]}}}]}}]}]} {[{eh} {[{[{{any_Vx_s_s_eh_noSlide {[{ih} {iy} {oh} {y} {ae} {ao} {uw} {uh} {aa} {ah} {ax}]}}} {s}]} {[{s} {{any_Vx_s_s_eh_noSlide {[{ih} {iy} {oh} {y} {ae} {ao} {uw} {uh} {aa} {ah} {ax}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: p
rule: {[{[{{[{{any_Cx_zh_s_p_ax {[{m} {v} {l} {hh} {w} {z} {g} {dh} {ch} {d} {b}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_s_p_ax {[{m} {v} {l} {hh} {w} {z} {g} {dh} {ch} {d} {b}]}}}]}}]} {[{p} {[{[{{any_Cx_zh_s_p_ax {[{m} {v} {l} {hh} {w} {z} {g} {dh} {ch} {d} {b}]}}} {zh}]} {[{zh} {{any_Cx_zh_s_p_ax {[{m} {v} {l} {hh} {w} {z} {g} {dh} {ch} {d} {b}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: ax
rule: {[{[{{[{{any_Cx_zh_zh_ax_r_p {[{g} {d} {w} {b} {z} {m} {ch} {hh} {v} {l} {dh}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_ax_r_p {[{g} {d} {w} {b} {z} {m} {ch} {hh} {v} {l} {dh}]}}}]}}]} {[{ax} {[{[{{any_Cx_zh_zh_ax_r_p {[{g} {d} {w} {b} {z} {m} {ch} {hh} {v} {l} {dh}]}}} {zh}]} {[{zh} {{any_Cx_zh_zh_ax_r_p {[{g} {d} {w} {b} {z} {m} {ch} {hh} {v} {l} {dh}]}}}]}]}]}]}
Phoneme rule:
guard: z phoneme: r
rule: {[{[{{[{{any_Cx_z_zh_r_ax_ax {[{ch} {m} {w} {hh} {g} {dh} {v} {d} {l} {b}]}}} {z}]}} {{[{z} {{any_Cx_z_zh_r_ax_ax {[{ch} {m} {w} {hh} {g} {dh} {v} {d} {l} {b}]}}}]}}]} {[{r} {[{[{{any_Cx_z_zh_r_ax_ax {[{ch} {m} {w} {hh} {g} {dh} {v} {d} {l} {b}]}}} {z}]} {[{z} {{any_Cx_z_zh_r_ax_ax {[{ch} {m} {w} {hh} {g} {dh} {v} {d} {l} {b}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: ax
rule: {[{[{{[{{any_Cx_s_z_ax_b_r {[{zh} {g} {dh} {m} {v} {w} {ch} {hh} {l} {d}]}}} {s}]}} {{[{s} {{any_Cx_s_z_ax_b_r {[{zh} {g} {dh} {m} {v} {w} {ch} {hh} {l} {d}]}}}]}}]} {[{ax} {[{[{{any_Cx_s_z_ax_b_r {[{zh} {g} {dh} {m} {v} {w} {ch} {hh} {l} {d}]}}} {s}]} {[{s} {{any_Cx_s_z_ax_b_r {[{zh} {g} {dh} {m} {v} {w} {ch} {hh} {l} {d}]}}}]}]}]}]}
Phoneme rule:
guard: jh phoneme: b
rule: {[{[{{[{{any_Cx_jh_s_b_ax_ax {[{d} {g} {v} {w} {dh} {z} {zh} {l} {ch} {hh} {m}]}}} {jh}]}} {{[{jh} {{any_Cx_jh_s_b_ax_ax {[{d} {g} {v} {w} {dh} {z} {zh} {l} {ch} {hh} {m}]}}}]}}]} {[{b} {[{[{{any_Cx_jh_s_b_ax_ax {[{d} {g} {v} {w} {dh} {z} {zh} {l} {ch} {hh} {m}]}}} {jh}]} {[{jh} {{any_Cx_jh_s_b_ax_ax {[{d} {g} {v} {w} {dh} {z} {zh} {l} {ch} {hh} {m}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: ax
rule: {[{[{{[{{any_Cx_sh_jh_ax_b {[{g} {ch} {v} {dh} {m} {hh} {l} {z} {zh} {w} {d}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_jh_ax_b {[{g} {ch} {v} {dh} {m} {hh} {l} {z} {zh} {w} {d}]}}}]}}]} {[{ax} {[{[{{any_Cx_sh_jh_ax_l_b {[{ch} {g} {z} {m} {zh} {d} {hh} {v} {w} {dh}]}}} {sh}]} {[{sh} {{any_Cx_sh_jh_ax_l_b {[{ch} {g} {z} {m} {zh} {d} {hh} {v} {w} {dh}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: l
rule: {[{[{{[{{any_Cx_sh_sh_l_ax {[{d} {b} {hh} {zh} {g} {z} {dh} {v} {w} {ch} {m}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_l_ax {[{d} {b} {hh} {zh} {g} {z} {dh} {v} {w} {ch} {m}]}}}]}}]} {[{l} {[{[{{any_Cx_sh_sh_l_ax {[{d} {b} {hh} {zh} {g} {z} {dh} {v} {w} {ch} {m}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_l_ax {[{d} {b} {hh} {zh} {g} {z} {dh} {v} {w} {ch} {m}]}}}]}]}]}]}
Closing rule:
guard: thr
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {thr}]}} {{[{thr} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_l_thr {[{ch} {dh} {d} {hh} {z} {b} {g} {w} {zh} {m} {v}]}}} {thr}]}} {{[{thr} {{any_Cx_sh_l_thr {[{ch} {dh} {d} {hh} {z} {b} {g} {w} {zh} {m} {v}]}}}]}}]} {sil}]}

parse: err = Parser error
ruleAligned = [{{ih 1} [{2 1} {3 1} {4 3}]} {{r 1} [{2 2} {3 2} {4 4}]} {{eh 1} [{2 3} {3 3} {4 5}]} {{p 1} [{2 4} {3 4} {4 6}]} {{ax 1} [{2 5} {3 5} {4 7}]} {{r 2} [{4 8}]} {{ax 2} [{2 7} {3 7}]} {{b 1} [{2 8} {3 8} {4 10}]} {{ax 2} []} {{l 1} [{2 10} {3 10} {4 12}]}]

results (after rule-alignment) =
{72 []}
{80 []}
{91 [{sil 0 0} {ih 103 120} {r 121 134} {eh 135 141} {p 142 156} {ax 157 160} {r 162 162} {ax 165 177} {b 178 184} {ax 185 185} {l 188 203} {sil 204 204}]}
{105 [{sil 0 0} {ih 104 120} {r 121 135} {eh 136 142} {p 143 157} {ax 158 163} {r 164 164} {ax 167 177} {b 178 185} {ax 186 186} {l 189 203} {sil 204 204}]}
{125 [{sil 3 3} {iy 105 114} {z 115 115} {ih 118 121} {r 122 137} {eh 138 142} {p 143 158} {ax 158 173} {r 174 178} {ax 178 178} {b 181 185} {ax 186 186} {l 188 203} {sil 204 204}]}

timeAligned = [{{ih 118 120} [{2 1} {3 1} {4 3}]} {{r 122 134} [{2 2} {3 2} {4 4}]} {{eh 138 141} [{2 3} {3 3} {4 5}]} {{p 143 156} [{2 4} {3 4} {4 6}]} {{ax 158 160} [{2 5} {3 5} {4 7}]} {{ax 167 173} [{2 7} {3 7} {4 7}]} {{b 181 184} [{2 8} {3 8} {4 10}]} {{l 189 203} [{2 10} {3 10} {4 12}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 120
i, iTime, newITime, timeStartFrom = 2 1 2 134
i, iTime, newITime, timeStartFrom = 3 2 3 141
i, iTime, newITime, timeStartFrom = 4 3 4 156
i, iTime, newITime, timeStartFrom = 5 4 -1 160
i, iTime, newITime, timeStartFrom = 6 4 5 160
i, iTime, newITime, timeStartFrom = 7 5 6 177
i, iTime, newITime, timeStartFrom = 8 6 -1 184
i, iTime, newITime, timeStartFrom = 9 6 7 184
combinedVerdict    = [{ih 1} {r 1} {eh 1} {p 1} {ax 1} {r 2} {ax 2} {b 1} {ax 2} {l 1}]
ruleAlignedVerdict = [{ih 1} {r 1} {eh 1} {p 1} {ax 1} {r 2} {ax 2} {b 1} {ax 2} {l 1}]

score->
+1 for ih
+1 for r
+1 for eh
+1 for p
+1 for ax
-1 for r
-1 for ax
+1 for b
-1 for ax
+1 for l
score<-: 4

results =
{72 []}
{80 [{sil 193 195} {ih 196 198} {r 199 201} {eh 202 204} {p 205 207} {ax 208 210} {r 211 213} {ax 214 216} {b 217 219} {axl 220 222} {sil 223 225}]}
{91 [{sil 0 93} {ih 94 109} {r 110 122} {eh 123 128} {p 129 142} {ax 143 146} {r 147 149} {ax 150 161} {b 162 167} {axl 168 185} {sil 186 256}]}
{105 [{sil 0 108} {ih 109 126} {r 127 142} {eh 143 149} {p 150 165} {ax 166 171} {r 172 174} {ax 175 186} {b 187 194} {axl 195 213} {sil 214 298}]}
{125 [{sil 3 130} {iy 131 143} {z 144 146} {ih 147 151} {r 152 171} {eh 172 178} {p 179 197} {ax 198 216} {r 217 222} {ax 223 225} {b 226 232} {axl 233 254} {sil 255 356}]}

normalised results =
{72 []}
{80 [{sil 193 195} {ih 245 245} {r 249 249} {eh 253 253} {p 256 256} {ax 260 260} {r 264 264} {ax 268 268} {b 271 271} {axl 275 275} {sil 279 279}]}
{91 [{sil 0 93} {ih 103 120} {r 121 134} {eh 135 141} {p 142 156} {ax 157 160} {r 162 162} {ax 165 177} {b 178 184} {axl 185 203} {sil 204 281}]}
{105 [{sil 0 108} {ih 104 120} {r 121 135} {eh 136 142} {p 143 157} {ax 158 163} {r 164 164} {ax 167 177} {b 178 185} {axl 186 203} {sil 204 284}]}
{125 [{sil 3 130} {iy 105 114} {z 115 115} {ih 118 121} {r 122 137} {eh 138 142} {p 143 158} {ax 158 173} {r 174 178} {ax 178 178} {b 181 186} {axl 186 203} {sil 204 285}]}

Mapped result =
result 0 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 1 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 2 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 3 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
result 4 =
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false
start: 0 end: 0 phonemeFound: false

Rules =
rule 0 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Vx_ih_z_p_noSlide {[{y} {ae} {uw} {uh} {aa} {ao} {oh} {iy} {ah} {ax} {eh}]}}}]} {[{{any_Vx_ih_z_p_noSlide {[{y} {ae} {uw} {uh} {aa} {ao} {oh} {iy} {ah} {ax} {eh}]}}} {z}]}]}} {{[{[{z} {{any_Cx_ih_z_p {[{d} {m} {b} {g} {dh} {v} {zh} {l} {hh} {w} {ch}]}}}]} {[{{any_Cx_ih_z_p {[{d} {m} {b} {g} {dh} {v} {zh} {l} {hh} {w} {ch}]}}} {z}]}]}}]}}
Phoneme rule:
guard: z phoneme: ih
rule: {[{[{[{{[{{any_Vx_z_p_z_ih_noSlide {[{oh} {uh} {ah} {ao} {eh} {aa} {ae} {y} {iy} {uw} {ax}]}}} {z}]}} {{[{z} {{any_Vx_z_p_z_ih_noSlide {[{oh} {uh} {ah} {ao} {eh} {aa} {ae} {y} {iy} {uw} {ax}]}}}]}}]} {[{{[{{any_Cx_z_p_z_r {[{l} {w} {dh} {hh} {b} {d} {v} {zh} {ch} {g} {m}]}}} {z}]}} {{[{z} {{any_Cx_z_p_z_r {[{l} {w} {dh} {hh} {b} {d} {v} {zh} {ch} {g} {m}]}}}]}}]}]} {[{ih} {[{[{{any_Vx_z_p_z_ih_noSlide {[{oh} {uh} {ah} {ao} {eh} {aa} {ae} {y} {iy} {uw} {ax}]}}} {z}]} {[{z} {{any_Vx_z_p_z_ih_noSlide {[{oh} {uh} {ah} {ao} {eh} {aa} {ae} {y} {iy} {uw} {ax}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: r
rule: {[{[{{[{{any_Cx_s_z_r {[{hh} {w} {d} {m} {v} {ch} {dh} {g} {l} {b} {zh}]}}} {s}]}} {{[{s} {{any_Cx_s_z_r {[{hh} {w} {d} {m} {v} {ch} {dh} {g} {l} {b} {zh}]}}}]}}]} {[{r} {[{[{{any_Cx_s_z_r {[{hh} {w} {d} {m} {v} {ch} {dh} {g} {l} {b} {zh}]}}} {s}]} {[{s} {{any_Cx_s_z_r {[{hh} {w} {d} {m} {v} {ch} {dh} {g} {l} {b} {zh}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: eh
rule: {[{[{[{{[{{any_Vx_s_s_eh_noSlide {[{ih} {iy} {oh} {uw} {aa} {ae} {ah} {uh} {ao} {ax} {y}]}}} {s}]}} {{[{s} {{any_Vx_s_s_eh_noSlide {[{ih} {iy} {oh} {uw} {aa} {ae} {ah} {uh} {ao} {ax} {y}]}}}]}}]} {[{{[{{any_Cx_s_s_p_r {[{l} {ch} {d} {dh} {z} {v} {b} {zh} {g} {m} {w} {hh}]}}} {s}]}} {{[{s} {{any_Cx_s_s_p_r {[{l} {ch} {d} {dh} {z} {v} {b} {zh} {g} {m} {w} {hh}]}}}]}}]}]} {[{eh} {[{[{{any_Vx_s_s_eh_noSlide {[{ih} {iy} {oh} {uw} {aa} {ae} {ah} {uh} {ao} {ax} {y}]}}} {s}]} {[{s} {{any_Vx_s_s_eh_noSlide {[{ih} {iy} {oh} {uw} {aa} {ae} {ah} {uh} {ao} {ax} {y}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: p
rule: {[{[{{[{{any_Cx_zh_s_p_ax {[{b} {z} {ch} {g} {d} {hh} {v} {dh} {l} {m} {w}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_s_p_ax {[{b} {z} {ch} {g} {d} {hh} {v} {dh} {l} {m} {w}]}}}]}}]} {[{p} {[{[{{any_Cx_zh_s_p_ax {[{b} {z} {ch} {g} {d} {hh} {v} {dh} {l} {m} {w}]}}} {zh}]} {[{zh} {{any_Cx_zh_s_p_ax {[{b} {z} {ch} {g} {d} {hh} {v} {dh} {l} {m} {w}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: ax
rule: {[{[{{[{{any_Cx_zh_zh_ax_r_p {[{hh} {l} {z} {m} {v} {b} {d} {g} {ch} {dh} {w}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_ax_r_p {[{hh} {l} {z} {m} {v} {b} {d} {g} {ch} {dh} {w}]}}}]}}]} {[{ax} {[{[{{any_Cx_zh_zh_ax_r_p {[{hh} {l} {z} {m} {v} {b} {d} {g} {ch} {dh} {w}]}}} {zh}]} {[{zh} {{any_Cx_zh_zh_ax_r_p {[{hh} {l} {z} {m} {v} {b} {d} {g} {ch} {dh} {w}]}}}]}]}]}]}
Phoneme rule:
guard: y phoneme: r
rule: {[{[{{[{{any_Cx_y_zh_r_ax_ax {[{ch} {l} {z} {dh} {hh} {m} {d} {v} {w} {b} {g}]}}} {y}]}} {{[{y} {{any_Cx_y_zh_r_ax_ax {[{ch} {l} {z} {dh} {hh} {m} {d} {v} {w} {b} {g}]}}}]}}]} {[{r} {[{[{{any_Cx_y_zh_r_ax_ax {[{ch} {l} {z} {dh} {hh} {m} {d} {v} {w} {b} {g}]}}} {y}]} {[{y} {{any_Cx_y_zh_r_ax_ax {[{ch} {l} {z} {dh} {hh} {m} {d} {v} {w} {b} {g}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: ax
rule: {[{[{{[{{any_Cx_s_y_ax_b_r {[{zh} {d} {dh} {hh} {l} {v} {z} {g} {m} {w} {ch}]}}} {s}]}} {{[{s} {{any_Cx_s_y_ax_b_r {[{zh} {d} {dh} {hh} {l} {v} {z} {g} {m} {w} {ch}]}}}]}}]} {[{ax} {[{[{{any_Cx_s_y_ax_b_r {[{zh} {d} {dh} {hh} {l} {v} {z} {g} {m} {w} {ch}]}}} {s}]} {[{s} {{any_Cx_s_y_ax_b_r {[{zh} {d} {dh} {hh} {l} {v} {z} {g} {m} {w} {ch}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: b
rule: {[{[{{[{{any_Cx_sh_s_b_ax {[{w} {zh} {dh} {z} {d} {hh} {v} {m} {g} {l} {ch}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_s_b_ax {[{w} {zh} {dh} {z} {d} {hh} {v} {m} {g} {l} {ch}]}}}]}}]} {[{b} {[{[{{any_Cx_sh_s_b_axl_ax {[{dh} {m} {g} {hh} {zh} {w} {v} {ch} {d} {z} {l}]}}} {sh}]} {[{sh} {{any_Cx_sh_s_b_axl_ax {[{dh} {m} {g} {hh} {zh} {w} {v} {ch} {d} {z} {l}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: axl
rule: {[{[{{[{{any_Cx_sh_sh_axl_b {[{g} {w} {z} {d} {ch} {m} {v} {dh} {zh} {hh} {l}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_axl_b {[{g} {w} {z} {d} {ch} {m} {v} {dh} {zh} {hh} {l}]}}}]}}]} {[{axl} {[{[{{any_Cx_sh_sh_axl_b {[{g} {w} {z} {d} {ch} {m} {v} {dh} {zh} {hh} {l}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_axl_b {[{g} {w} {z} {d} {ch} {m} {v} {dh} {zh} {hh} {l}]}}}]}]}]}]}
Closing rule:
guard: f
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {f}]}} {{[{f} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_axl_f {[{b} {g} {v} {w} {dh} {hh} {l} {m} {z} {ch} {d} {zh}]}}} {f}]}} {{[{f} {{any_Cx_sh_axl_f {[{b} {g} {v} {w} {dh} {hh} {l} {m} {z} {ch} {d} {zh}]}}}]}}]} {sil}]}
rule 1 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Vx_ih_z_p_noSlide {[{aa} {iy} {uh} {ax} {eh} {oh} {y} {uw} {ae} {ah} {ao}]}}}]} {[{{any_Vx_ih_z_p_noSlide {[{aa} {iy} {uh} {ax} {eh} {oh} {y} {uw} {ae} {ah} {ao}]}}} {z}]}]}} {{[{[{z} {{any_Cx_ih_z_p {[{m} {v} {dh} {hh} {l} {zh} {b} {w} {ch} {d} {g}]}}}]} {[{{any_Cx_ih_z_p {[{m} {v} {dh} {hh} {l} {zh} {b} {w} {ch} {d} {g}]}}} {z}]}]}}]}}
Phoneme rule:
guard: z phoneme: ih
rule: {[{[{[{{[{{any_Vx_z_p_z_ih_noSlide {[{aa} {ao} {eh} {iy} {uw} {uh} {ae} {ah} {y} {ax} {oh}]}}} {z}]}} {{[{z} {{any_Vx_z_p_z_ih_noSlide {[{aa} {ao} {eh} {iy} {uw} {uh} {ae} {ah} {y} {ax} {oh}]}}}]}}]} {[{{[{{any_Cx_z_p_z_r {[{ch} {d} {b} {hh} {dh} {l} {v} {w} {g} {m} {zh}]}}} {z}]}} {{[{z} {{any_Cx_z_p_z_r {[{ch} {d} {b} {hh} {dh} {l} {v} {w} {g} {m} {zh}]}}}]}}]}]} {[{ih} {[{[{{any_Vx_z_p_z_ih_noSlide {[{aa} {ao} {eh} {iy} {uw} {uh} {ae} {ah} {y} {ax} {oh}]}}} {z}]} {[{z} {{any_Vx_z_p_z_ih_noSlide {[{aa} {ao} {eh} {iy} {uw} {uh} {ae} {ah} {y} {ax} {oh}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: r
rule: {[{[{{[{{any_Cx_s_z_r {[{l} {dh} {g} {m} {zh} {b} {ch} {hh} {d} {v} {w}]}}} {s}]}} {{[{s} {{any_Cx_s_z_r {[{l} {dh} {g} {m} {zh} {b} {ch} {hh} {d} {v} {w}]}}}]}}]} {[{r} {[{[{{any_Cx_s_z_r {[{l} {dh} {g} {m} {zh} {b} {ch} {hh} {d} {v} {w}]}}} {s}]} {[{s} {{any_Cx_s_z_r {[{l} {dh} {g} {m} {zh} {b} {ch} {hh} {d} {v} {w}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: eh
rule: {[{[{[{{[{{any_Vx_s_s_eh_noSlide {[{aa} {ae} {ah} {ax} {iy} {y} {ao} {ih} {oh} {uw} {uh}]}}} {s}]}} {{[{s} {{any_Vx_s_s_eh_noSlide {[{aa} {ae} {ah} {ax} {iy} {y} {ao} {ih} {oh} {uw} {uh}]}}}]}}]} {[{{[{{any_Cx_s_s_p_r {[{w} {hh} {v} {z} {dh} {g} {m} {ch} {d} {b} {zh} {l}]}}} {s}]}} {{[{s} {{any_Cx_s_s_p_r {[{w} {hh} {v} {z} {dh} {g} {m} {ch} {d} {b} {zh} {l}]}}}]}}]}]} {[{eh} {[{[{{any_Vx_s_s_eh_noSlide {[{aa} {ae} {ah} {ax} {iy} {y} {ao} {ih} {oh} {uw} {uh}]}}} {s}]} {[{s} {{any_Vx_s_s_eh_noSlide {[{aa} {ae} {ah} {ax} {iy} {y} {ao} {ih} {oh} {uw} {uh}]}}}]}]}]}]}
Phoneme rule:
guard: jh phoneme: p
rule: {[{[{{[{{any_Cx_jh_s_p_ax {[{ch} {hh} {m} {z} {w} {v} {zh} {g} {l} {b} {d} {dh}]}}} {jh}]}} {{[{jh} {{any_Cx_jh_s_p_ax {[{ch} {hh} {m} {z} {w} {v} {zh} {g} {l} {b} {d} {dh}]}}}]}}]} {[{p} {[{[{{any_Cx_jh_s_p_ax {[{ch} {hh} {m} {z} {w} {v} {zh} {g} {l} {b} {d} {dh}]}}} {jh}]} {[{jh} {{any_Cx_jh_s_p_ax {[{ch} {hh} {m} {z} {w} {v} {zh} {g} {l} {b} {d} {dh}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: ax
rule: {[{[{{[{{any_Cx_zh_jh_ax_r_p {[{ch} {w} {d} {dh} {l} {hh} {b} {m} {z} {g} {v}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_jh_ax_r_p {[{ch} {w} {d} {dh} {l} {hh} {b} {m} {z} {g} {v}]}}}]}}]} {[{ax} {[{[{{any_Cx_zh_jh_ax_r_p {[{ch} {w} {d} {dh} {l} {hh} {b} {m} {z} {g} {v}]}}} {zh}]} {[{zh} {{any_Cx_zh_jh_ax_r_p {[{ch} {w} {d} {dh} {l} {hh} {b} {m} {z} {g} {v}]}}}]}]}]}]}
Phoneme rule:
guard: z phoneme: r
rule: {[{[{{[{{any_Cx_z_zh_r_ax_ax {[{m} {d} {hh} {l} {ch} {dh} {v} {w} {b} {g}]}}} {z}]}} {{[{z} {{any_Cx_z_zh_r_ax_ax {[{m} {d} {hh} {l} {ch} {dh} {v} {w} {b} {g}]}}}]}}]} {[{r} {[{[{{any_Cx_z_zh_r_ax_ax {[{m} {d} {hh} {l} {ch} {dh} {v} {w} {b} {g}]}}} {z}]} {[{z} {{any_Cx_z_zh_r_ax_ax {[{m} {d} {hh} {l} {ch} {dh} {v} {w} {b} {g}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: ax
rule: {[{[{{[{{any_Cx_s_z_ax_b_r {[{dh} {hh} {m} {g} {zh} {v} {ch} {d} {w} {l}]}}} {s}]}} {{[{s} {{any_Cx_s_z_ax_b_r {[{dh} {hh} {m} {g} {zh} {v} {ch} {d} {w} {l}]}}}]}}]} {[{ax} {[{[{{any_Cx_s_z_ax_b_r {[{dh} {hh} {m} {g} {zh} {v} {ch} {d} {w} {l}]}}} {s}]} {[{s} {{any_Cx_s_z_ax_b_r {[{dh} {hh} {m} {g} {zh} {v} {ch} {d} {w} {l}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: b
rule: {[{[{{[{{any_Cx_sh_s_b_ax {[{dh} {z} {g} {l} {d} {hh} {m} {ch} {v} {zh} {w}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_s_b_ax {[{dh} {z} {g} {l} {d} {hh} {m} {ch} {v} {zh} {w}]}}}]}}]} {[{b} {[{[{{any_Cx_sh_s_b_axl_ax {[{dh} {w} {z} {hh} {m} {d} {v} {g} {l} {ch} {zh}]}}} {sh}]} {[{sh} {{any_Cx_sh_s_b_axl_ax {[{dh} {w} {z} {hh} {m} {d} {v} {g} {l} {ch} {zh}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: axl
rule: {[{[{{[{{any_Cx_sh_sh_axl_b {[{w} {d} {m} {g} {z} {zh} {v} {hh} {ch} {dh} {l}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_axl_b {[{w} {d} {m} {g} {z} {zh} {v} {hh} {ch} {dh} {l}]}}}]}}]} {[{axl} {[{[{{any_Cx_sh_sh_axl_b {[{w} {d} {m} {g} {z} {zh} {v} {hh} {ch} {dh} {l}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_axl_b {[{w} {d} {m} {g} {z} {zh} {v} {hh} {ch} {dh} {l}]}}}]}]}]}]}
Closing rule:
guard: m
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {m}]}} {{[{m} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_axl_m {[{dh} {hh} {ch} {g} {d} {v} {zh} {l} {w} {z} {b}]}}} {m}]}} {{[{m} {{any_Cx_sh_axl_m {[{dh} {hh} {ch} {g} {d} {v} {zh} {l} {w} {z} {b}]}}}]}}]} {sil}]}
rule 2 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Vx_ih_z_p_noSlide {[{oh} {ah} {eh} {uh} {y} {ae} {iy} {uw} {aa} {ax} {ao}]}}}]} {[{{any_Vx_ih_z_p_noSlide {[{oh} {ah} {eh} {uh} {y} {ae} {iy} {uw} {aa} {ax} {ao}]}}} {z}]}]}} {{[{[{z} {{any_Cx_ih_z_p {[{w} {ch} {l} {g} {m} {zh} {d} {b} {dh} {v} {hh}]}}}]} {[{{any_Cx_ih_z_p {[{w} {ch} {l} {g} {m} {zh} {d} {b} {dh} {v} {hh}]}}} {z}]}]}}]}}
Phoneme rule:
guard: z phoneme: ih
rule: {[{[{[{{[{{any_Vx_z_p_z_ih_noSlide {[{ax} {ae} {ah} {ao} {eh} {oh} {aa} {uw} {uh} {y} {iy}]}}} {z}]}} {{[{z} {{any_Vx_z_p_z_ih_noSlide {[{ax} {ae} {ah} {ao} {eh} {oh} {aa} {uw} {uh} {y} {iy}]}}}]}}]} {[{{[{{any_Cx_z_p_z_r {[{b} {zh} {d} {g} {m} {v} {l} {w} {ch} {dh} {hh}]}}} {z}]}} {{[{z} {{any_Cx_z_p_z_r {[{b} {zh} {d} {g} {m} {v} {l} {w} {ch} {dh} {hh}]}}}]}}]}]} {[{ih} {[{[{{any_Vx_z_p_z_ih_noSlide {[{ax} {ae} {ah} {ao} {eh} {oh} {aa} {uw} {uh} {y} {iy}]}}} {z}]} {[{z} {{any_Vx_z_p_z_ih_noSlide {[{ax} {ae} {ah} {ao} {eh} {oh} {aa} {uw} {uh} {y} {iy}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: r
rule: {[{[{{[{{any_Cx_s_z_r {[{v} {b} {m} {d} {l} {w} {ch} {dh} {g} {zh} {hh}]}}} {s}]}} {{[{s} {{any_Cx_s_z_r {[{v} {b} {m} {d} {l} {w} {ch} {dh} {g} {zh} {hh}]}}}]}}]} {[{r} {[{[{{any_Cx_s_z_r {[{v} {b} {m} {d} {l} {w} {ch} {dh} {g} {zh} {hh}]}}} {s}]} {[{s} {{any_Cx_s_z_r {[{v} {b} {m} {d} {l} {w} {ch} {dh} {g} {zh} {hh}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: eh
rule: {[{[{[{{[{{any_Vx_s_s_eh_noSlide {[{aa} {ae} {ah} {ao} {ax} {ih} {iy} {oh} {uw} {uh} {y}]}}} {s}]}} {{[{s} {{any_Vx_s_s_eh_noSlide {[{aa} {ae} {ah} {ao} {ax} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_s_s_p_r {[{v} {w} {zh} {g} {d} {ch} {hh} {m} {b} {dh} {z} {l}]}}} {s}]}} {{[{s} {{any_Cx_s_s_p_r {[{v} {w} {zh} {g} {d} {ch} {hh} {m} {b} {dh} {z} {l}]}}}]}}]}]} {[{eh} {[{[{{any_Vx_s_s_eh_noSlide {[{aa} {ae} {ah} {ao} {ax} {ih} {iy} {oh} {uw} {uh} {y}]}}} {s}]} {[{s} {{any_Vx_s_s_eh_noSlide {[{aa} {ae} {ah} {ao} {ax} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: p
rule: {[{[{{[{{any_Cx_zh_s_p_ax {[{b} {hh} {l} {ch} {w} {v} {d} {g} {dh} {m} {z}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_s_p_ax {[{b} {hh} {l} {ch} {w} {v} {d} {g} {dh} {m} {z}]}}}]}}]} {[{p} {[{[{{any_Cx_zh_s_p_ax {[{b} {hh} {l} {ch} {w} {v} {d} {g} {dh} {m} {z}]}}} {zh}]} {[{zh} {{any_Cx_zh_s_p_ax {[{b} {hh} {l} {ch} {w} {v} {d} {g} {dh} {m} {z}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: ax
rule: {[{[{{[{{any_Cx_zh_zh_ax_r_p {[{v} {d} {g} {m} {w} {hh} {ch} {b} {dh} {z} {l}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_zh_ax_r_p {[{v} {d} {g} {m} {w} {hh} {ch} {b} {dh} {z} {l}]}}}]}}]} {[{ax} {[{[{{any_Cx_zh_zh_ax_r_p {[{v} {d} {g} {m} {w} {hh} {ch} {b} {dh} {z} {l}]}}} {zh}]} {[{zh} {{any_Cx_zh_zh_ax_r_p {[{v} {d} {g} {m} {w} {hh} {ch} {b} {dh} {z} {l}]}}}]}]}]}]}
Phoneme rule:
guard: z phoneme: r
rule: {[{[{{[{{any_Cx_z_zh_r_ax_ax {[{m} {dh} {ch} {v} {hh} {w} {l} {g} {d} {b}]}}} {z}]}} {{[{z} {{any_Cx_z_zh_r_ax_ax {[{m} {dh} {ch} {v} {hh} {w} {l} {g} {d} {b}]}}}]}}]} {[{r} {[{[{{any_Cx_z_zh_r_ax_ax {[{m} {dh} {ch} {v} {hh} {w} {l} {g} {d} {b}]}}} {z}]} {[{z} {{any_Cx_z_zh_r_ax_ax {[{m} {dh} {ch} {v} {hh} {w} {l} {g} {d} {b}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: ax
rule: {[{[{{[{{any_Cx_s_z_ax_b_r {[{v} {ch} {l} {hh} {d} {m} {dh} {g} {zh} {w}]}}} {s}]}} {{[{s} {{any_Cx_s_z_ax_b_r {[{v} {ch} {l} {hh} {d} {m} {dh} {g} {zh} {w}]}}}]}}]} {[{ax} {[{[{{any_Cx_s_z_ax_b_r {[{v} {ch} {l} {hh} {d} {m} {dh} {g} {zh} {w}]}}} {s}]} {[{s} {{any_Cx_s_z_ax_b_r {[{v} {ch} {l} {hh} {d} {m} {dh} {g} {zh} {w}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: b
rule: {[{[{{[{{any_Cx_sh_s_b_ax {[{dh} {l} {w} {z} {d} {zh} {g} {v} {ch} {hh} {m}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_s_b_ax {[{dh} {l} {w} {z} {d} {zh} {g} {v} {ch} {hh} {m}]}}}]}}]} {[{b} {[{[{{any_Cx_sh_s_b_axl_ax {[{m} {d} {g} {l} {dh} {v} {zh} {hh} {z} {ch} {w}]}}} {sh}]} {[{sh} {{any_Cx_sh_s_b_axl_ax {[{m} {d} {g} {l} {dh} {v} {zh} {hh} {z} {ch} {w}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: axl
rule: {[{[{{[{{any_Cx_sh_sh_axl_b {[{l} {ch} {zh} {m} {w} {z} {g} {dh} {hh} {v} {d}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_axl_b {[{l} {ch} {zh} {m} {w} {z} {g} {dh} {hh} {v} {d}]}}}]}}]} {[{axl} {[{[{{any_Cx_sh_sh_axl_b {[{l} {ch} {zh} {m} {w} {z} {g} {dh} {hh} {v} {d}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_axl_b {[{l} {ch} {zh} {m} {w} {z} {g} {dh} {hh} {v} {d}]}}}]}]}]}]}
Closing rule:
guard: f
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {f}]}} {{[{f} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_axl_f {[{l} {dh} {g} {hh} {w} {b} {m} {zh} {v} {ch} {d} {z}]}}} {f}]}} {{[{f} {{any_Cx_sh_axl_f {[{l} {dh} {g} {hh} {w} {b} {m} {zh} {v} {ch} {d} {z}]}}}]}}]} {sil}]}
rule 3 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Vx_ih_z_p_noSlide {[{ae} {eh} {uh} {y} {ah} {iy} {oh} {ao} {ax} {uw} {aa}]}}}]} {[{{any_Vx_ih_z_p_noSlide {[{ae} {eh} {uh} {y} {ah} {iy} {oh} {ao} {ax} {uw} {aa}]}}} {z}]}]}} {{[{[{z} {{any_Cx_ih_z_p {[{dh} {g} {hh} {b} {m} {v} {d} {l} {w} {zh} {ch}]}}}]} {[{{any_Cx_ih_z_p {[{dh} {g} {hh} {b} {m} {v} {d} {l} {w} {zh} {ch}]}}} {z}]}]}}]}}
Phoneme rule:
guard: z phoneme: ih
rule: {[{[{[{{[{{any_Vx_z_p_z_ih_noSlide {[{uw} {uh} {y} {ah} {ax} {eh} {iy} {ao} {ae} {aa} {oh}]}}} {z}]}} {{[{z} {{any_Vx_z_p_z_ih_noSlide {[{uw} {uh} {y} {ah} {ax} {eh} {iy} {ao} {ae} {aa} {oh}]}}}]}}]} {[{{[{{any_Cx_z_p_z_r {[{zh} {w} {l} {ch} {g} {hh} {m} {v} {d} {dh} {b}]}}} {z}]}} {{[{z} {{any_Cx_z_p_z_r {[{zh} {w} {l} {ch} {g} {hh} {m} {v} {d} {dh} {b}]}}}]}}]}]} {[{ih} {[{[{{any_Vx_z_p_z_ih_noSlide {[{uw} {uh} {y} {ah} {ax} {eh} {iy} {ao} {ae} {aa} {oh}]}}} {z}]} {[{z} {{any_Vx_z_p_z_ih_noSlide {[{uw} {uh} {y} {ah} {ax} {eh} {iy} {ao} {ae} {aa} {oh}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: r
rule: {[{[{{[{{any_Cx_s_z_r {[{w} {zh} {d} {m} {g} {dh} {l} {v} {b} {hh} {ch}]}}} {s}]}} {{[{s} {{any_Cx_s_z_r {[{w} {zh} {d} {m} {g} {dh} {l} {v} {b} {hh} {ch}]}}}]}}]} {[{r} {[{[{{any_Cx_s_z_r {[{w} {zh} {d} {m} {g} {dh} {l} {v} {b} {hh} {ch}]}}} {s}]} {[{s} {{any_Cx_s_z_r {[{w} {zh} {d} {m} {g} {dh} {l} {v} {b} {hh} {ch}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: eh
rule: {[{[{[{{[{{any_Vx_s_s_eh_noSlide {[{ae} {ah} {uw} {uh} {aa} {ao} {ax} {ih} {iy} {oh} {y}]}}} {s}]}} {{[{s} {{any_Vx_s_s_eh_noSlide {[{ae} {ah} {uw} {uh} {aa} {ao} {ax} {ih} {iy} {oh} {y}]}}}]}}]} {[{{[{{any_Cx_s_s_p_r {[{ch} {zh} {w} {v} {z} {d} {g} {dh} {l} {b} {hh} {m}]}}} {s}]}} {{[{s} {{any_Cx_s_s_p_r {[{ch} {zh} {w} {v} {z} {d} {g} {dh} {l} {b} {hh} {m}]}}}]}}]}]} {[{eh} {[{[{{any_Vx_s_s_eh_noSlide {[{ae} {ah} {uw} {uh} {aa} {ao} {ax} {ih} {iy} {oh} {y}]}}} {s}]} {[{s} {{any_Vx_s_s_eh_noSlide {[{ae} {ah} {uw} {uh} {aa} {ao} {ax} {ih} {iy} {oh} {y}]}}}]}]}]}]}
Phoneme rule:
guard: jh phoneme: p
rule: {[{[{{[{{any_Cx_jh_s_p_ax {[{hh} {l} {v} {ch} {w} {g} {z} {zh} {m} {b} {d} {dh}]}}} {jh}]}} {{[{jh} {{any_Cx_jh_s_p_ax {[{hh} {l} {v} {ch} {w} {g} {z} {zh} {m} {b} {d} {dh}]}}}]}}]} {[{p} {[{[{{any_Cx_jh_s_p_ax {[{hh} {l} {v} {ch} {w} {g} {z} {zh} {m} {b} {d} {dh}]}}} {jh}]} {[{jh} {{any_Cx_jh_s_p_ax {[{hh} {l} {v} {ch} {w} {g} {z} {zh} {m} {b} {d} {dh}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: ax
rule: {[{[{{[{{any_Cx_zh_jh_ax_r_p {[{l} {v} {z} {hh} {m} {dh} {w} {b} {ch} {d} {g}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_jh_ax_r_p {[{l} {v} {z} {hh} {m} {dh} {w} {b} {ch} {d} {g}]}}}]}}]} {[{ax} {[{[{{any_Cx_zh_jh_ax_r_p {[{l} {v} {z} {hh} {m} {dh} {w} {b} {ch} {d} {g}]}}} {zh}]} {[{zh} {{any_Cx_zh_jh_ax_r_p {[{l} {v} {z} {hh} {m} {dh} {w} {b} {ch} {d} {g}]}}}]}]}]}]}
Phoneme rule:
guard: z phoneme: r
rule: {[{[{{[{{any_Cx_z_zh_r_ax_ax {[{l} {ch} {dh} {d} {w} {hh} {v} {m} {g} {b}]}}} {z}]}} {{[{z} {{any_Cx_z_zh_r_ax_ax {[{l} {ch} {dh} {d} {w} {hh} {v} {m} {g} {b}]}}}]}}]} {[{r} {[{[{{any_Cx_z_zh_r_ax_ax {[{l} {ch} {dh} {d} {w} {hh} {v} {m} {g} {b}]}}} {z}]} {[{z} {{any_Cx_z_zh_r_ax_ax {[{l} {ch} {dh} {d} {w} {hh} {v} {m} {g} {b}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: ax
rule: {[{[{{[{{any_Cx_s_z_ax_b_r {[{m} {d} {hh} {w} {zh} {dh} {l} {ch} {g} {v}]}}} {s}]}} {{[{s} {{any_Cx_s_z_ax_b_r {[{m} {d} {hh} {w} {zh} {dh} {l} {ch} {g} {v}]}}}]}}]} {[{ax} {[{[{{any_Cx_s_z_ax_b_r {[{m} {d} {hh} {w} {zh} {dh} {l} {ch} {g} {v}]}}} {s}]} {[{s} {{any_Cx_s_z_ax_b_r {[{m} {d} {hh} {w} {zh} {dh} {l} {ch} {g} {v}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: b
rule: {[{[{{[{{any_Cx_sh_s_b_ax {[{v} {l} {z} {dh} {w} {ch} {d} {hh} {m} {zh} {g}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_s_b_ax {[{v} {l} {z} {dh} {w} {ch} {d} {hh} {m} {zh} {g}]}}}]}}]} {[{b} {[{[{{any_Cx_sh_s_b_axl_ax {[{z} {hh} {d} {g} {ch} {dh} {zh} {w} {l} {m} {v}]}}} {sh}]} {[{sh} {{any_Cx_sh_s_b_axl_ax {[{z} {hh} {d} {g} {ch} {dh} {zh} {w} {l} {m} {v}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: axl
rule: {[{[{{[{{any_Cx_sh_sh_axl_b {[{v} {zh} {z} {d} {ch} {g} {w} {m} {dh} {hh} {l}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_axl_b {[{v} {zh} {z} {d} {ch} {g} {w} {m} {dh} {hh} {l}]}}}]}}]} {[{axl} {[{[{{any_Cx_sh_sh_axl_b {[{v} {zh} {z} {d} {ch} {g} {w} {m} {dh} {hh} {l}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_axl_b {[{v} {zh} {z} {d} {ch} {g} {w} {m} {dh} {hh} {l}]}}}]}]}]}]}
Closing rule:
guard: f
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {f}]}} {{[{f} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_axl_f {[{v} {zh} {d} {ch} {g} {w} {z} {dh} {l} {b} {hh} {m}]}}} {f}]}} {{[{f} {{any_Cx_sh_axl_f {[{v} {zh} {d} {ch} {g} {w} {z} {dh} {l} {b} {hh} {m}]}}}]}}]} {sil}]}
rule 4 =
Trapped opening rule:
trap: p
rule: {p}
Opening rule:
guard: z
rule: {z {[{sil} {{[{[{z} {{any_Vx_ih_z_p_noSlide {[{ae} {uh} {aa} {iy} {uw} {eh} {ax} {oh} {y} {ao} {ah}]}}}]} {[{{any_Vx_ih_z_p_noSlide {[{ae} {uh} {aa} {iy} {uw} {eh} {ax} {oh} {y} {ao} {ah}]}}} {z}]}]}} {{[{[{z} {{any_Cx_ih_z_p {[{hh} {d} {m} {v} {ch} {w} {g} {dh} {b} {l} {zh}]}}}]} {[{{any_Cx_ih_z_p {[{hh} {d} {m} {v} {ch} {w} {g} {dh} {b} {l} {zh}]}}} {z}]}]}}]}}
Phoneme rule:
guard: z phoneme: ih
rule: {[{[{[{{[{{any_Vx_z_p_z_ih_noSlide {[{ao} {uw} {uh} {ax} {iy} {oh} {y} {aa} {eh} {ae} {ah}]}}} {z}]}} {{[{z} {{any_Vx_z_p_z_ih_noSlide {[{ao} {uw} {uh} {ax} {iy} {oh} {y} {aa} {eh} {ae} {ah}]}}}]}}]} {[{{[{{any_Cx_z_p_z_r {[{b} {d} {hh} {dh} {v} {w} {ch} {g} {l} {m} {zh}]}}} {z}]}} {{[{z} {{any_Cx_z_p_z_r {[{b} {d} {hh} {dh} {v} {w} {ch} {g} {l} {m} {zh}]}}}]}}]}]} {[{ih} {[{[{{any_Vx_z_p_z_ih_noSlide {[{ao} {uw} {uh} {ax} {iy} {oh} {y} {aa} {eh} {ae} {ah}]}}} {z}]} {[{z} {{any_Vx_z_p_z_ih_noSlide {[{ao} {uw} {uh} {ax} {iy} {oh} {y} {aa} {eh} {ae} {ah}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: r
rule: {[{[{{[{{any_Cx_s_z_r {[{d} {dh} {g} {v} {w} {zh} {ch} {l} {m} {b} {hh}]}}} {s}]}} {{[{s} {{any_Cx_s_z_r {[{d} {dh} {g} {v} {w} {zh} {ch} {l} {m} {b} {hh}]}}}]}}]} {[{r} {[{[{{any_Cx_s_z_r {[{d} {dh} {g} {v} {w} {zh} {ch} {l} {m} {b} {hh}]}}} {s}]} {[{s} {{any_Cx_s_z_r {[{d} {dh} {g} {v} {w} {zh} {ch} {l} {m} {b} {hh}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: eh
rule: {[{[{[{{[{{any_Vx_s_s_eh_noSlide {[{uh} {aa} {ae} {ah} {ax} {ih} {ao} {iy} {oh} {uw} {y}]}}} {s}]}} {{[{s} {{any_Vx_s_s_eh_noSlide {[{uh} {aa} {ae} {ah} {ax} {ih} {ao} {iy} {oh} {uw} {y}]}}}]}}]} {[{{[{{any_Cx_s_s_p_r {[{hh} {d} {v} {z} {dh} {g} {w} {zh} {b} {ch} {l} {m}]}}} {s}]}} {{[{s} {{any_Cx_s_s_p_r {[{hh} {d} {v} {z} {dh} {g} {w} {zh} {b} {ch} {l} {m}]}}}]}}]}]} {[{eh} {[{[{{any_Vx_s_s_eh_noSlide {[{uh} {aa} {ae} {ah} {ax} {ih} {ao} {iy} {oh} {uw} {y}]}}} {s}]} {[{s} {{any_Vx_s_s_eh_noSlide {[{uh} {aa} {ae} {ah} {ax} {ih} {ao} {iy} {oh} {uw} {y}]}}}]}]}]}]}
Phoneme rule:
guard: jh phoneme: p
rule: {[{[{{[{{any_Cx_jh_s_p_ax {[{w} {hh} {z} {dh} {d} {l} {m} {ch} {g} {zh} {v} {b}]}}} {jh}]}} {{[{jh} {{any_Cx_jh_s_p_ax {[{w} {hh} {z} {dh} {d} {l} {m} {ch} {g} {zh} {v} {b}]}}}]}}]} {[{p} {[{[{{any_Cx_jh_s_p_ax {[{w} {hh} {z} {dh} {d} {l} {m} {ch} {g} {zh} {v} {b}]}}} {jh}]} {[{jh} {{any_Cx_jh_s_p_ax {[{w} {hh} {z} {dh} {d} {l} {m} {ch} {g} {zh} {v} {b}]}}}]}]}]}]}
Phoneme rule:
guard: zh phoneme: ax
rule: {[{[{{[{{any_Cx_zh_jh_ax_r_p {[{v} {ch} {l} {g} {b} {w} {dh} {hh} {z} {m} {d}]}}} {zh}]}} {{[{zh} {{any_Cx_zh_jh_ax_r_p {[{v} {ch} {l} {g} {b} {w} {dh} {hh} {z} {m} {d}]}}}]}}]} {[{ax} {[{[{{any_Cx_zh_jh_ax_r_p {[{v} {ch} {l} {g} {b} {w} {dh} {hh} {z} {m} {d}]}}} {zh}]} {[{zh} {{any_Cx_zh_jh_ax_r_p {[{v} {ch} {l} {g} {b} {w} {dh} {hh} {z} {m} {d}]}}}]}]}]}]}
Phoneme rule:
guard: y phoneme: r
rule: {[{[{{[{{any_Cx_y_zh_r_ax_ax {[{hh} {m} {g} {ch} {b} {dh} {z} {w} {d} {l} {v}]}}} {y}]}} {{[{y} {{any_Cx_y_zh_r_ax_ax {[{hh} {m} {g} {ch} {b} {dh} {z} {w} {d} {l} {v}]}}}]}}]} {[{r} {[{[{{any_Cx_y_zh_r_ax_ax {[{hh} {m} {g} {ch} {b} {dh} {z} {w} {d} {l} {v}]}}} {y}]} {[{y} {{any_Cx_y_zh_r_ax_ax {[{hh} {m} {g} {ch} {b} {dh} {z} {w} {d} {l} {v}]}}}]}]}]}]}
Phoneme rule:
guard: s phoneme: ax
rule: {[{[{{[{{any_Cx_s_y_ax_b_r {[{w} {z} {zh} {g} {m} {l} {ch} {d} {v} {hh} {dh}]}}} {s}]}} {{[{s} {{any_Cx_s_y_ax_b_r {[{w} {z} {zh} {g} {m} {l} {ch} {d} {v} {hh} {dh}]}}}]}}]} {[{ax} {[{[{{any_Cx_s_y_ax_b_r {[{w} {z} {zh} {g} {m} {l} {ch} {d} {v} {hh} {dh}]}}} {s}]} {[{s} {{any_Cx_s_y_ax_b_r {[{w} {z} {zh} {g} {m} {l} {ch} {d} {v} {hh} {dh}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: b
rule: {[{[{{[{{any_Cx_sh_s_b_ax {[{v} {z} {w} {d} {g} {hh} {dh} {l} {zh} {m} {ch}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_s_b_ax {[{v} {z} {w} {d} {g} {hh} {dh} {l} {zh} {m} {ch}]}}}]}}]} {[{b} {[{[{{any_Cx_sh_s_b_axl_ax {[{g} {m} {w} {d} {dh} {hh} {zh} {ch} {v} {z} {l}]}}} {sh}]} {[{sh} {{any_Cx_sh_s_b_axl_ax {[{g} {m} {w} {d} {dh} {hh} {zh} {ch} {v} {z} {l}]}}}]}]}]}]}
Phoneme rule:
guard: sh phoneme: axl
rule: {[{[{{[{{any_Cx_sh_sh_axl_b {[{zh} {z} {l} {w} {hh} {d} {g} {m} {v} {ch} {dh}]}}} {sh}]}} {{[{sh} {{any_Cx_sh_sh_axl_b {[{zh} {z} {l} {w} {hh} {d} {g} {m} {v} {ch} {dh}]}}}]}}]} {[{axl} {[{[{{any_Cx_sh_sh_axl_b {[{zh} {z} {l} {w} {hh} {d} {g} {m} {v} {ch} {dh}]}}} {sh}]} {[{sh} {{any_Cx_sh_sh_axl_b {[{zh} {z} {l} {w} {hh} {d} {g} {m} {v} {ch} {dh}]}}}]}]}]}]}
Closing rule:
guard: hh
rule: {[{[{{[{{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}} {hh}]}} {{[{hh} {{any_vowel_noSlide {[{aa} {ae} {ah} {eh} {ih} {iy} {oh} {uw} {uh} {y}]}}}]}}]} {[{{[{{any_Cx_sh_axl_hh {[{b} {g} {v} {m} {d} {l} {zh} {z} {ch} {dh} {w}]}}} {hh}]}} {{[{hh} {{any_Cx_sh_axl_hh {[{b} {g} {v} {m} {d} {l} {zh} {z} {ch} {dh} {w}]}}}]}}]} {sil}]}

parse: err = Parser error
ruleAligned = [{{ih 1} [{2 1} {3 1} {4 3}]} {{r 1} [{2 2} {3 2} {4 4}]} {{eh 1} [{2 3} {3 3} {4 5}]} {{p 1} [{2 4} {3 4} {4 6}]} {{ax 1} [{2 5} {3 5} {4 7}]} {{r 2} [{4 8}]} {{ax 2} [{2 7} {3 7}]} {{b 1} [{2 8} {3 8} {4 10}]} {{axl 1} [{2 9} {3 9} {4 11}]}]

results (after rule-alignment) =
{72 []}
{80 [{sil 193 193} {ih 245 245} {r 249 249} {eh 253 253} {p 256 256} {ax 260 260} {r 264 264} {ax 268 268} {b 271 271} {axl 275 275} {sil 279 279}]}
{91 [{sil 0 0} {ih 103 120} {r 121 134} {eh 135 141} {p 142 156} {ax 157 160} {r 162 162} {ax 165 177} {b 178 184} {axl 185 203} {sil 204 204}]}
{105 [{sil 0 0} {ih 104 120} {r 121 135} {eh 136 142} {p 143 157} {ax 158 163} {r 164 164} {ax 167 177} {b 178 185} {axl 186 203} {sil 204 204}]}
{125 [{sil 3 3} {iy 105 114} {z 115 115} {ih 118 121} {r 122 137} {eh 138 142} {p 143 158} {ax 158 173} {r 174 178} {ax 178 178} {b 181 186} {axl 186 203} {sil 204 204}]}

timeAligned = [{{ih 118 120} [{2 1} {3 1} {4 3}]} {{r 122 134} [{2 2} {3 2} {4 4}]} {{eh 138 141} [{2 3} {3 3} {4 5}]} {{p 143 156} [{2 4} {3 4} {4 6}]} {{ax 158 160} [{2 5} {3 5} {4 7}]} {{ax 167 173} [{2 7} {3 7} {4 7}]} {{b 181 184} [{2 8} {3 8} {4 10}]} {{axl 186 203} [{2 9} {3 9} {4 11}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 120
i, iTime, newITime, timeStartFrom = 2 1 2 134
i, iTime, newITime, timeStartFrom = 3 2 3 141
i, iTime, newITime, timeStartFrom = 4 3 4 156
i, iTime, newITime, timeStartFrom = 5 4 -1 160
i, iTime, newITime, timeStartFrom = 6 4 5 160
i, iTime, newITime, timeStartFrom = 7 5 6 177
i, iTime, newITime, timeStartFrom = 8 6 7 184
combinedVerdict    = [{ih 1} {r 1} {eh 1} {p 1} {ax 1} {r 2} {ax 2} {b 1} {axl 1}]
ruleAlignedVerdict = [{ih 1} {r 1} {eh 1} {p 1} {ax 1} {r 2} {ax 2} {b 1} {axl 1}]

score->
+1 for ih
+1 for r
+1 for eh
+1 for p
+1 for ax
-1 for r
-1 for ax
+1 for b
+1 for axl
score<-: 5
bestResult = {6 [{ih 1} {r 1} {eh 1} {p 1} {r 2} {ax 1} {b 1} {axl 1}] [ih r eh p r ax b axl]}
testPronounce ih possible r possible eh possible p possible r missing ax possible b possible axl possible
publish->
phonsToAlphas = [{[ih] i} {[r] rr} {[eh] e} {[p] p} {[r] ar} {[ax] a} {[b] b} {[axl] le}]
getVerdict<-:new {i [ih] 1}
getVerdict<-:new {rr [r] 1}
getVerdict<-:new {e [eh] 1}
getVerdict<-:new {p [p] 1}
getVerdict<-:new {ar [r] 2}
getVerdict<-:new {a [ax] 1}
getVerdict<-:new {b [b] 1}
getVerdict<-:new {le [axl] 1}
lettersVerdicts = [{i [ih] 1} {rr [r] 1} {e [eh] 1} {p [p] 1} {ar [r] 2} {a [ax] 1} {b [b] 1} {le [axl] 1}]
publish<-
{
  "results": [
    {
      "letters": "i",
      "phonemes": "ɪ",
      "verdict": "possible"
    },
    {
      "letters": "rr",
      "phonemes": "ɹ",
      "verdict": "possible"
    },
    {
      "letters": "e",
      "phonemes": "ɛ",
      "verdict": "possible"
    },
    {
      "letters": "p",
      "phonemes": "p",
      "verdict": "possible"
    },
    {
      "letters": "ar",
      "phonemes": "ɹ",
      "verdict": "missing"
    },
    {
      "letters": "a",
      "phonemes": "ə",
      "verdict": "possible"
    },
    {
      "letters": "b",
      "phonemes": "b",
      "verdict": "possible"
    },
    {
      "letters": "le",
      "phonemes": "axl",
      "verdict": "possible"
    }
  ],
  "err": null
}
