Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_9bc994ff-b04c-4375-bcc4-b101354fa093 audiofile /Users/test/go/src/Phonemes/audio_clips/clay1_m_philip.wav word may dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  2.282313



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.76 0.94 1.7

 start3, duration3, end3 =  0.86 0.76 1.62

 Initial start, duration, end =  0.66 1.04 1.7

 Cut at: start, duration =  0.66 1.49     guard_end =  2.15 

Running scan for frate = 125
Considering guard sh with value 1.6 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ey ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 125 public <may> = (((sil [((l <any_Cx_m_l_p>) | (<any_Cx_m_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]) | (sil p (sil [((l <any_Cx_m_l_p>) | (<any_Cx_m_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]))) (([(<any_Cx_sh_p_l_m> sh)] | [(sh <any_Cx_sh_p_l_m>)]) (m | ((<any_Cx_sh_p_l_m> sh) | (sh <any_Cx_sh_p_l_m>)))) ((([(<any_Vx_sh_sh_ey_noSlide> sh)] | [(sh <any_Vx_sh_sh_ey_noSlide>)]) ([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)])) (ey | ((<any_Vx_sh_sh_ey_noSlide> sh) | (sh <any_Vx_sh_sh_ey_noSlide>)))) (([(<any_Cx_sh_ey_n> n)] | [(n <any_Cx_sh_ey_n>)]) ([(<any_Vx_sh_ey_n> n)] | [(n <any_Vx_sh_ey_n>)]) sil))
Running scan for frate = 105
Considering guard sh with value 1.6 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ey ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 105 public <may> = (((sil [((d <any_Cx_m_d_p>) | (<any_Cx_m_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil p (sil [((d <any_Cx_m_d_p>) | (<any_Cx_m_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_sh_p_d_m> sh)] | [(sh <any_Cx_sh_p_d_m>)]) (m | ((<any_Cx_sh_p_d_m> sh) | (sh <any_Cx_sh_p_d_m>)))) ((([(<any_Vx_sh_sh_ey_noSlide> sh)] | [(sh <any_Vx_sh_sh_ey_noSlide>)]) ([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)])) (ey | ((<any_Vx_sh_sh_ey_noSlide> sh) | (sh <any_Vx_sh_sh_ey_noSlide>)))) (([(<any_Cx_sh_ey_w> w)] | [(w <any_Cx_sh_ey_w>)]) ([(<any_Vx_sh_ey_w> w)] | [(w <any_Vx_sh_ey_w>)]) sil))
Running scan for frate = 91
Considering guard sh with value 1.6 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ey ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 91 public <may> = (((sil [((d <any_Cx_m_d_p>) | (<any_Cx_m_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil p (sil [((d <any_Cx_m_d_p>) | (<any_Cx_m_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_sh_p_d_m> sh)] | [(sh <any_Cx_sh_p_d_m>)]) (m | ((<any_Cx_sh_p_d_m> sh) | (sh <any_Cx_sh_p_d_m>)))) ((([(<any_Vx_sh_sh_ey_noSlide> sh)] | [(sh <any_Vx_sh_sh_ey_noSlide>)]) ([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)])) (ey | ((<any_Vx_sh_sh_ey_noSlide> sh) | (sh <any_Vx_sh_sh_ey_noSlide>)))) (([(<any_Cx_sh_ey_hh> hh)] | [(hh <any_Cx_sh_ey_hh>)]) ([(<any_Vx_sh_ey_hh> hh)] | [(hh <any_Vx_sh_ey_hh>)]) sil))
Running scan for frate = 80
Considering guard sh with value 1.6 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ey ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 80 public <may> = (((sil [((l <any_Cx_m_l_p>) | (<any_Cx_m_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]) | (sil p (sil [((l <any_Cx_m_l_p>) | (<any_Cx_m_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]))) (([(<any_Cx_sh_p_l_m> sh)] | [(sh <any_Cx_sh_p_l_m>)]) (m | ((<any_Cx_sh_p_l_m> sh) | (sh <any_Cx_sh_p_l_m>)))) ((([(<any_Vx_sh_sh_ey_noSlide> sh)] | [(sh <any_Vx_sh_sh_ey_noSlide>)]) ([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)])) (ey | ((<any_Vx_sh_sh_ey_noSlide> sh) | (sh <any_Vx_sh_sh_ey_noSlide>)))) (([(<any_Cx_sh_ey_z> z)] | [(z <any_Cx_sh_ey_z>)]) ([(<any_Vx_sh_ey_z> z)] | [(z <any_Vx_sh_ey_z>)]) sil))
Running scan for frate = 72
Considering guard sh with value 1.6 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ey ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 72 public <may> = (((sil [((z <any_Cx_m_z_p>) | (<any_Cx_m_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_m_z_p>) | (<any_Cx_m_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_m> sh)] | [(sh <any_Cx_sh_p_z_m>)]) (m | ((<any_Cx_sh_p_z_m> sh) | (sh <any_Cx_sh_p_z_m>)))) ((([(<any_Vx_sh_sh_ey_noSlide> sh)] | [(sh <any_Vx_sh_sh_ey_noSlide>)]) ([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)])) (ey | ((<any_Vx_sh_sh_ey_noSlide> sh) | (sh <any_Vx_sh_sh_ey_noSlide>)))) (([(<any_Cx_sh_ey_r> r)] | [(r <any_Cx_sh_ey_r>)]) ([(<any_Vx_sh_ey_r> r)] | [(r <any_Vx_sh_ey_r>)]) sil))

results =
{72 [{sil 0 14} {sh 15 17} {l 18 30} {ey 31 54} {sil 55 66}]}
{80 [{sil 0 10} {g 11 20} {l 21 27} {m 28 32} {ey 33 60} {sil 61 71}]}
{91 [{sil 0 12} {g 13 18} {sh 19 22} {sh 23 26} {l 27 37} {ey 38 63} {hh 64 66} {uw 67 82} {sil 83 134}]}
{105 [{sil 0 14} {g 15 20} {sh 21 26} {sh 27 30} {l 31 43} {uw 44 90} {sh 91 93} {sil 94 155}]}
{125 [{sil 0 15} {g 16 30} {sh 31 37} {ey 38 44} {er 45 81} {n 82 111} {sil 112 183}]}

normalised results =
{72 [{sil 0 14} {sh 21 21} {l 25 42} {ey 43 75} {sil 76 92}]}
{80 [{sil 0 10} {g 14 25} {l 26 34} {m 35 40} {ey 41 75} {sil 76 89}]}
{91 [{sil 0 12} {g 14 20} {sh 21 24} {sh 25 29} {l 30 41} {ey 42 69} {hh 70 70} {uw 74 90} {sil 91 147}]}
{105 [{sil 0 14} {g 14 19} {sh 20 25} {sh 26 29} {l 30 41} {uw 42 86} {sh 87 87} {sil 90 148}]}
{125 [{sil 0 15} {g 13 24} {sh 25 30} {ey 30 35} {er 36 65} {n 66 89} {sil 90 146}]}

ruleAligned = [{{m 2} [{1 3}]} {{g 3} [{2 1} {3 1} {4 1}]} {{ey 0} [{0 3} {1 4} {2 5} {4 3}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {sh 21 21} {l 25 42} {ey 43 75} {sil 76 76}]}
{80 [{sil 0 0} {g 14 25} {l 26 34} {m 35 40} {ey 41 75} {sil 76 76}]}
{91 [{sil 0 0} {g 14 20} {sh 21 21} {sh 25 25} {l 30 41} {ey 42 69} {hh 70 70} {uw 74 90} {sil 91 91}]}
{105 [{sil 0 0} {g 14 19} {sh 20 25} {sh 26 26} {l 30 41} {uw 42 86} {sh 87 87} {sil 90 90}]}
{125 [{sil 0 0} {g 13 24} {sh 25 30} {ey 30 35} {er 36 65} {n 66 89} {sil 90 90}]}

timeAligned = [{{g 14 20} [{1 1} {2 1} {3 1} {4 1}]} {{l 30 41} [{0 2} {1 2} {2 4} {3 4}]} {{ey 43 69} [{0 3} {1 4} {2 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 -1 0
i, iTime, newITime, timeStartFrom = 1 0 0 0
i, iTime, newITime, timeStartFrom = 2 0 2 19
combinedVerdict    = [{m 2} {g 3} {l 3} {ey 0}]
ruleAlignedVerdict = [{m 2} {g 3} {ey 0}]

score->
-2 for m
-2 for g
-2 for l
+2 for ey
score<-: -4
bestResult = {-4 [{m 2} {g 3} {l 3} {ey 0}] [m ey]}
testPronounce m missing g surprise l surprise ey good
publish->
phonsToAlphas = [{[m] m} {[ey] ay}]
getVerdict<-:new {m [m] 2}
getVerdict<-:new {ay [ey] 0}
lettersVerdicts = [{m [m] 2} {g [g] 3} {l [l] 3} {ay [ey] 0}]
publish<-
{
  "word": "may",
  "results": [
    {
      "letters": "m",
      "phonemes": "m",
      "verdict": "missing"
    },
    {
      "letters": "g",
      "phonemes": "g",
      "verdict": "surprise"
    },
    {
      "letters": "l",
      "phonemes": "l",
      "verdict": "surprise"
    },
    {
      "letters": "ay",
      "phonemes": "eÉª",
      "verdict": "good"
    }
  ],
  "err": null
}
