Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_ac493b50-f2ad-4aaf-afc3-b7ca6a923440 audiofile /Users/test/go/src/Phonemes/audio_clips/state2_tressa.wav word state dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  1.386313



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0 0.45999999999999996 0.45999999999999996

 start3, duration3, end3 =  0.68 0.36 1.04

 Initial start, duration, end =  0 1.04 1.04

 Cut at: start, duration =  0 1.3663129999999999     guard_end =  1.3663129999999999 

Running scan for frate = 125
Running scan for frate = 125
Considering guard ao with value 2 for st ...
Considering guard w with value 2 for st ...
candidateGuards = map[ao:true w:true]
Picking guard, ao

Considering guard oy with value 1 for s ...
Considering guard aa with value 1 for s ...
candidateGuards = map[aa:true oy:true]
Picking guard, oy

Considering guard ao with value 4 for ey ...
Considering guard w with value 4 for ey ...
candidateGuards = map[ao:true w:true]
Picking guard, ao

Considering guard w with value 4 for t ...
Considering guard ao with value 4 for t ...
candidateGuards = map[ao:true w:true]
Picking guard, ao

Considering guard ao with value 1 for t ...
candidateGuards = map[ao:true]
Picking guard, ao

Considering guard ao with value 2 for ey ...
candidateGuards = map[ao:true]
Picking guard, ao

frate, target rule = 125 public <state> = (((sil [((z <any_Cx_st_z_p>) | (<any_Cx_st_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_st_z_p>) | (<any_Cx_st_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ao_p_z_st> ao)] | [(ao <any_Cx_ao_p_z_st>)]) (st | ((<any_Cx_ao_p_z_st> ao) | (ao <any_Cx_ao_p_z_st>)))) ((([(<any_Vx_ao_ao_ey_noSlide> ao)] | [(ao <any_Vx_ao_ao_ey_noSlide>)]) ([(<any_Cx_ao_ao_t_st> ao)] | [(ao <any_Cx_ao_ao_t_st>)])) (ey | ((<any_Vx_ao_ao_ey_noSlide> ao) | (ao <any_Vx_ao_ao_ey_noSlide>)))) (([(<any_Cx_ao_ao_t> ao)] | [(ao <any_Cx_ao_ao_t>)]) (t | ((<any_Cx_ao_ao_t> ao) | (ao <any_Cx_ao_ao_t>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_ao_t_thr> thr)] | [(thr <any_Cx_ao_t_thr>)]) sil))
Running scan for frate = 105
Considering guard ao with value 1 for t ...
candidateGuards = map[ao:true]
Picking guard, ao

Considering guard w with value 2 for st ...
Considering guard ao with value 2 for st ...
candidateGuards = map[ao:true w:true]
Picking guard, w

Considering guard w with value 4 for ey ...
Considering guard ao with value 4 for ey ...
candidateGuards = map[ao:true w:true]
Picking guard, ao

frate, target rule = 125 public <state> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_oy_p_ch_s_t> oy)] | [(oy <any_Cx_oy_p_ch_s_t>)]) (s | z | ((<any_Cx_oy_p_ch_s_t> oy) | (oy <any_Cx_oy_p_ch_s_t>)))) (([(<any_Cx_ao_oy_t_s> ao)] | [(ao <any_Cx_ao_oy_t_s>)]) (t | ((<any_Cx_ao_oy_t> ao) | (ao <any_Cx_ao_oy_t>)))) ((([(<any_Vx_ao_ao_ey_noSlide> ao)] | [(ao <any_Vx_ao_ao_ey_noSlide>)]) ([(<any_Cx_ao_ao_t_t> ao)] | [(ao <any_Cx_ao_ao_t_t>)])) (ey | ((<any_Vx_ao_ao_ey_noSlide> ao) | (ao <any_Vx_ao_ao_ey_noSlide>)))) (([(<any_Cx_ao_ao_t> ao)] | [(ao <any_Cx_ao_ao_t>)]) (t | ((<any_Cx_ao_ao_t> ao) | (ao <any_Cx_ao_ao_t>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_ao_t_d> d)] | [(d <any_Cx_ao_t_d>)]) sil))
Considering guard ao with value 1 for t ...
candidateGuards = map[ao:true]
Picking guard, ao

Running scan for frate = 105
frate, target rule = 105 public <state> = (((sil [((z <any_Cx_st_z_p>) | (<any_Cx_st_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_st_z_p>) | (<any_Cx_st_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_w_p_z_st> w)] | [(w <any_Cx_w_p_z_st>)]) (st | ((<any_Cx_w_p_z_st> w) | (w <any_Cx_w_p_z_st>)))) ((([(<any_Vx_ao_w_ey_noSlide> ao)] | [(ao <any_Vx_ao_w_ey_noSlide>)]) ([(<any_Cx_ao_w_t_st> ao)] | [(ao <any_Cx_ao_w_t_st>)])) (ey | ((<any_Vx_ao_w_ey_noSlide> ao) | (ao <any_Vx_ao_w_ey_noSlide>)))) (([(<any_Cx_ao_ao_t> ao)] | [(ao <any_Cx_ao_ao_t>)]) (t | ((<any_Cx_ao_ao_t> ao) | (ao <any_Cx_ao_ao_t>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_ao_t_g> g)] | [(g <any_Cx_ao_t_g>)]) sil))
Considering guard aa with value 1 for s ...
Considering guard oy with value 1 for s ...
candidateGuards = map[aa:true oy:true]
Picking guard, aa

Running scan for frate = 91
Considering guard ao with value 4 for t ...
Considering guard w with value 4 for t ...
candidateGuards = map[ao:true w:true]
Picking guard, ao

Considering guard w with value 2 for st ...
Considering guard ao with value 2 for st ...
candidateGuards = map[ao:true w:true]
Picking guard, w

Considering guard ao with value 2 for ey ...
candidateGuards = map[ao:true]
Picking guard, ao

Considering guard w with value 4 for ey ...
Considering guard ao with value 4 for ey ...
candidateGuards = map[ao:true w:true]
Picking guard, w

Considering guard ao with value 1 for t ...
candidateGuards = map[ao:true]
Picking guard, ao

Considering guard ao with value 1 for t ...
candidateGuards = map[ao:true]
Picking guard, ao

frate, target rule = 105 public <state> = (((sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]) | (sil p (sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]))) (([(<any_Cx_aa_p_th_s_t> aa)] | [(aa <any_Cx_aa_p_th_s_t>)]) (s | z | ((<any_Cx_aa_p_th_s_t> aa) | (aa <any_Cx_aa_p_th_s_t>)))) (([(<any_Cx_ao_aa_t_s> ao)] | [(ao <any_Cx_ao_aa_t_s>)]) (t | ((<any_Cx_ao_aa_t> ao) | (ao <any_Cx_ao_aa_t>)))) ((([(<any_Vx_ao_ao_ey_noSlide> ao)] | [(ao <any_Vx_ao_ao_ey_noSlide>)]) ([(<any_Cx_ao_ao_t_t> ao)] | [(ao <any_Cx_ao_ao_t_t>)])) (ey | ((<any_Vx_ao_ao_ey_noSlide> ao) | (ao <any_Vx_ao_ao_ey_noSlide>)))) (([(<any_Cx_ao_ao_t> ao)] | [(ao <any_Cx_ao_ao_t>)]) (t | ((<any_Cx_ao_ao_t> ao) | (ao <any_Cx_ao_ao_t>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_ao_t_p> p)] | [(p <any_Cx_ao_t_p>)]) sil))
frate, target rule = 91 public <state> = (((sil [((z <any_Cx_st_z_p>) | (<any_Cx_st_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_st_z_p>) | (<any_Cx_st_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_w_p_z_st> w)] | [(w <any_Cx_w_p_z_st>)]) (st | ((<any_Cx_w_p_z_st> w) | (w <any_Cx_w_p_z_st>)))) ((([(<any_Vx_w_w_ey_noSlide> w)] | [(w <any_Vx_w_w_ey_noSlide>)]) ([(<any_Cx_w_w_t_st> w)] | [(w <any_Cx_w_w_t_st>)])) (ey | ((<any_Vx_w_w_ey_noSlide> w) | (w <any_Vx_w_w_ey_noSlide>)))) (([(<any_Cx_ao_w_t> ao)] | [(ao <any_Cx_ao_w_t>)]) (t | ((<any_Cx_ao_w_t> ao) | (ao <any_Cx_ao_w_t>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_ao_t_p> p)] | [(p <any_Cx_ao_t_p>)]) sil))
Running scan for frate = 80
Running scan for frate = 91
Considering guard ao with value 2 for st ...
Considering guard w with value 2 for st ...
candidateGuards = map[ao:true w:true]
Picking guard, ao

Considering guard aa with value 1 for s ...
Considering guard oy with value 1 for s ...
candidateGuards = map[aa:true oy:true]
Picking guard, aa

Considering guard w with value 4 for ey ...
Considering guard ao with value 4 for ey ...
candidateGuards = map[ao:true w:true]
Picking guard, ao

Considering guard ao with value 4 for t ...
Considering guard w with value 4 for t ...
candidateGuards = map[ao:true w:true]
Picking guard, ao

Considering guard ao with value 1 for t ...
candidateGuards = map[ao:true]
Picking guard, ao

Considering guard ao with value 2 for ey ...
candidateGuards = map[ao:true]
Picking guard, ao

frate, target rule = 80 public <state> = (((sil [((z <any_Cx_st_z_p>) | (<any_Cx_st_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_st_z_p>) | (<any_Cx_st_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ao_p_z_st> ao)] | [(ao <any_Cx_ao_p_z_st>)]) (st | ((<any_Cx_ao_p_z_st> ao) | (ao <any_Cx_ao_p_z_st>)))) ((([(<any_Vx_ao_ao_ey_noSlide> ao)] | [(ao <any_Vx_ao_ao_ey_noSlide>)]) ([(<any_Cx_ao_ao_t_st> ao)] | [(ao <any_Cx_ao_ao_t_st>)])) (ey | ((<any_Vx_ao_ao_ey_noSlide> ao) | (ao <any_Vx_ao_ao_ey_noSlide>)))) (([(<any_Cx_ao_ao_t> ao)] | [(ao <any_Cx_ao_ao_t>)]) (t | ((<any_Cx_ao_ao_t> ao) | (ao <any_Cx_ao_ao_t>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_ao_t_g> g)] | [(g <any_Cx_ao_t_g>)]) sil))
Considering guard ao with value 1 for t ...
candidateGuards = map[ao:true]
Picking guard, ao

Running scan for frate = 72
frate, target rule = 91 public <state> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_aa_p_ch_s_t> aa)] | [(aa <any_Cx_aa_p_ch_s_t>)]) (s | z | ((<any_Cx_aa_p_ch_s_t> aa) | (aa <any_Cx_aa_p_ch_s_t>)))) (([(<any_Cx_ao_aa_t_s> ao)] | [(ao <any_Cx_ao_aa_t_s>)]) (t | ((<any_Cx_ao_aa_t> ao) | (ao <any_Cx_ao_aa_t>)))) ((([(<any_Vx_ao_ao_ey_noSlide> ao)] | [(ao <any_Vx_ao_ao_ey_noSlide>)]) ([(<any_Cx_ao_ao_t_t> ao)] | [(ao <any_Cx_ao_ao_t_t>)])) (ey | ((<any_Vx_ao_ao_ey_noSlide> ao) | (ao <any_Vx_ao_ao_ey_noSlide>)))) (([(<any_Cx_ao_ao_t> ao)] | [(ao <any_Cx_ao_ao_t>)]) (t | ((<any_Cx_ao_ao_t> ao) | (ao <any_Cx_ao_ao_t>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_ao_t_thr> thr)] | [(thr <any_Cx_ao_t_thr>)]) sil))
Considering guard ao with value 2 for st ...
Considering guard w with value 2 for st ...
candidateGuards = map[ao:true w:true]
Picking guard, ao

Running scan for frate = 80
Considering guard w with value 4 for ey ...
Considering guard ao with value 4 for ey ...
candidateGuards = map[ao:true w:true]
Picking guard, w

Considering guard oy with value 1 for s ...
Considering guard aa with value 1 for s ...
candidateGuards = map[aa:true oy:true]
Picking guard, oy

Considering guard ao with value 1 for t ...
candidateGuards = map[ao:true]
Picking guard, ao

Considering guard ao with value 4 for t ...
Considering guard w with value 4 for t ...
candidateGuards = map[ao:true w:true]
Picking guard, ao

frate, target rule = 72 public <state> = (((sil [((z <any_Cx_st_z_p>) | (<any_Cx_st_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_st_z_p>) | (<any_Cx_st_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ao_p_z_st> ao)] | [(ao <any_Cx_ao_p_z_st>)]) (st | ((<any_Cx_ao_p_z_st> ao) | (ao <any_Cx_ao_p_z_st>)))) ((([(<any_Vx_w_ao_ey_noSlide> w)] | [(w <any_Vx_w_ao_ey_noSlide>)]) ([(<any_Cx_w_ao_t_st> w)] | [(w <any_Cx_w_ao_t_st>)])) (ey | ((<any_Vx_w_ao_ey_noSlide> w) | (w <any_Vx_w_ao_ey_noSlide>)))) (([(<any_Cx_ao_w_t> ao)] | [(ao <any_Cx_ao_w_t>)]) (t | ((<any_Cx_ao_w_t> ao) | (ao <any_Cx_ao_w_t>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_ao_t_g> g)] | [(g <any_Cx_ao_t_g>)]) sil))
Considering guard ao with value 2 for ey ...
candidateGuards = map[ao:true]
Picking guard, ao

Considering guard ao with value 1 for t ...
candidateGuards = map[ao:true]
Picking guard, ao

frate, target rule = 80 public <state> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_oy_p_ch_s_t> oy)] | [(oy <any_Cx_oy_p_ch_s_t>)]) (s | z | ((<any_Cx_oy_p_ch_s_t> oy) | (oy <any_Cx_oy_p_ch_s_t>)))) (([(<any_Cx_ao_oy_t_s> ao)] | [(ao <any_Cx_ao_oy_t_s>)]) (t | ((<any_Cx_ao_oy_t> ao) | (ao <any_Cx_ao_oy_t>)))) ((([(<any_Vx_ao_ao_ey_noSlide> ao)] | [(ao <any_Vx_ao_ao_ey_noSlide>)]) ([(<any_Cx_ao_ao_t_t> ao)] | [(ao <any_Cx_ao_ao_t_t>)])) (ey | ((<any_Vx_ao_ao_ey_noSlide> ao) | (ao <any_Vx_ao_ao_ey_noSlide>)))) (([(<any_Cx_ao_ao_t> ao)] | [(ao <any_Cx_ao_ao_t>)]) (t | ((<any_Cx_ao_ao_t> ao) | (ao <any_Cx_ao_ao_t>)))) (([(<any_vowel_noSlide> k)] | [(k <any_vowel_noSlide>)]) ([(<any_Cx_ao_t_k> k)] | [(k <any_Cx_ao_t_k>)]) sil))
Running scan for frate = 72
Considering guard oy with value 1 for s ...
Considering guard aa with value 1 for s ...
candidateGuards = map[aa:true oy:true]
Picking guard, oy

Considering guard ao with value 4 for t ...
Considering guard w with value 4 for t ...
candidateGuards = map[ao:true w:true]
Picking guard, ao

Considering guard ao with value 2 for ey ...
candidateGuards = map[ao:true]
Picking guard, ao

Considering guard ao with value 1 for t ...
candidateGuards = map[ao:true]
Picking guard, ao

frate, target rule = 72 public <state> = (((sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil p (sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_oy_p_t_s_t> oy)] | [(oy <any_Cx_oy_p_t_s_t>)]) (s | z | ((<any_Cx_oy_p_t_s_t> oy) | (oy <any_Cx_oy_p_t_s_t>)))) (([(<any_Cx_ao_oy_t_s> ao)] | [(ao <any_Cx_ao_oy_t_s>)]) (t | ((<any_Cx_ao_oy_t> ao) | (ao <any_Cx_ao_oy_t>)))) ((([(<any_Vx_ao_ao_ey_noSlide> ao)] | [(ao <any_Vx_ao_ao_ey_noSlide>)]) ([(<any_Cx_ao_ao_t_t> ao)] | [(ao <any_Cx_ao_ao_t_t>)])) (ey | ((<any_Vx_ao_ao_ey_noSlide> ao) | (ao <any_Vx_ao_ao_ey_noSlide>)))) (([(<any_Cx_ao_ao_t> ao)] | [(ao <any_Cx_ao_ao_t>)]) (t | ((<any_Cx_ao_ao_t> ao) | (ao <any_Cx_ao_ao_t>)))) (([(<any_vowel_noSlide> k)] | [(k <any_vowel_noSlide>)]) ([(<any_Cx_ao_t_k> k)] | [(k <any_Cx_ao_t_k>)]) sil))

results =
{72 [{sil 0 2} {t 3 21} {aa 22 37} {s 38 51} {t 52 55} {ey 56 69} {t 70 79} {sil 80 97}]}
{80 [{sil 0 12} {ch 13 15} {aa 16 42} {s 43 57} {t 58 61} {ey 62 77} {t 78 88} {sil 89 108}]}
{91 [{sil 0 2} {v 3 18} {aa 19 48} {s 49 65} {t 66 69} {ey 70 89} {t 90 100} {sil 101 123}]}
{105 [{sil 0 2} {dh 3 20} {aa 21 56} {s 57 76} {t 77 80} {ey 81 104} {t 105 116} {sil 117 142}]}
{125 [{sil 0 13} {ch 14 20} {ah 21 65} {s 66 89} {t 90 94} {ey 95 122} {t 123 138} {sil 139 167}]}

normalised results =
{72 [{sil 0 2} {t 4 29} {aa 31 51} {s 53 71} {t 72 76} {ey 78 96} {t 97 110} {sil 111 135}]}
{80 [{sil 0 12} {ch 16 16} {aa 20 53} {s 54 71} {t 73 76} {ey 78 96} {t 98 110} {sil 111 135}]}
{91 [{sil 0 2} {v 3 20} {aa 21 53} {s 54 71} {t 73 76} {ey 77 98} {t 99 110} {sil 111 135}]}
{105 [{sil 0 2} {dh 3 19} {aa 20 53} {s 54 72} {t 73 76} {ey 77 99} {t 100 110} {sil 111 135}]}
{125 [{sil 0 13} {ch 11 16} {ah 17 52} {s 53 71} {t 72 75} {ey 76 98} {t 98 110} {sil 111 134}]}

ruleAligned = [{{s 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{t 2} [{0 4}]} {{ey 0} [{0 5} {1 5} {2 5} {3 5} {4 5}]} {{t 0} [{0 6} {1 6} {2 6} {3 6} {4 6}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {t 4 29} {aa 31 51} {s 53 71} {t 72 76} {ey 78 96} {t 97 110} {sil 111 111}]}
{80 [{sil 0 0} {ch 16 16} {aa 20 53} {s 54 71} {t 73 73} {ey 78 96} {t 98 110} {sil 111 111}]}
{91 [{sil 0 0} {v 3 20} {aa 21 53} {s 54 71} {t 73 73} {ey 77 98} {t 99 110} {sil 111 111}]}
{105 [{sil 0 0} {dh 3 19} {aa 20 53} {s 54 72} {t 73 73} {ey 77 99} {t 100 110} {sil 111 111}]}
{125 [{sil 0 0} {ch 11 16} {ah 17 52} {s 53 71} {t 72 72} {ey 76 98} {t 98 110} {sil 111 111}]}

timeAligned = [{{aa 21 53} [{1 2} {2 2} {3 2} {0 2}]} {{s 54 71} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{ey 77 98} [{2 5} {3 5} {4 5} {0 5} {1 5}]} {{t 98 110} [{0 6} {1 6} {4 6} {2 6} {3 6}]}]

i, iTime, newITime, timeStartFrom = 0 0 1 0
i, iTime, newITime, timeStartFrom = 1 1 -1 71
i, iTime, newITime, timeStartFrom = 2 1 2 71
i, iTime, newITime, timeStartFrom = 3 2 3 96
combinedVerdict    = [{aa 3} {s 0} {t 2} {ey 0} {t 0}]
ruleAlignedVerdict = [{s 0} {t 2} {ey 0} {t 0}]

score->
-2 for aa
+2 for s
-2 for t
+2 for ey
+2 for t
score<-: 2

results =
{72 [{sil 0 3} {z 4 13} {aa 14 38} {st 39 55} {ey 56 69} {t 70 79} {sil 80 97}]}
{80 [{sil 0 3} {z 4 14} {aa 15 42} {st 43 61} {ey 62 77} {t 78 88} {sil 89 108}]}
{91 [{sil 0 4} {z 5 16} {ah 17 48} {st 49 70} {ey 71 89} {t 90 100} {sil 101 123}]}
{105 [{sil 0 3} {z 4 12} {m 13 29} {z 30 32} {aa 33 57} {st 58 81} {ey 82 104} {t 105 116} {sil 117 142}]}
{125 [{sil 0 2} {z 3 20} {ah 21 66} {st 67 95} {ey 96 122} {t 123 138} {sil 139 167}]}

normalised results =
{72 [{sil 0 3} {z 6 18} {aa 19 53} {st 54 76} {ey 78 96} {t 97 110} {sil 111 135}]}
{80 [{sil 0 3} {z 5 18} {aa 19 53} {st 54 76} {ey 78 96} {t 98 110} {sil 111 135}]}
{91 [{sil 0 4} {z 5 18} {ah 19 53} {st 54 77} {ey 78 98} {t 99 110} {sil 111 135}]}
{105 [{sil 0 3} {z 4 11} {m 12 28} {z 29 29} {aa 31 54} {st 55 77} {ey 78 99} {t 100 110} {sil 111 135}]}
{125 [{sil 0 2} {z 2 16} {ah 17 53} {st 54 76} {ey 77 98} {t 98 110} {sil 111 134}]}

ruleAligned = [{{z 3} [{0 1} {1 1} {2 1} {4 1}]} {{aa 3} [{0 2} {1 2} {3 4}]} {{st 0} [{0 3} {1 3} {2 3} {3 5} {4 3}]} {{ey 0} [{0 4} {1 4} {2 4} {3 6} {4 4}]} {{t 0} [{0 5} {1 5} {2 5} {3 7} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {z 6 18} {aa 19 53} {st 54 76} {ey 78 96} {t 97 110} {sil 111 111}]}
{80 [{sil 0 0} {z 5 18} {aa 19 53} {st 54 76} {ey 78 96} {t 98 110} {sil 111 111}]}
{91 [{sil 0 0} {z 5 18} {ah 19 53} {st 54 77} {ey 78 98} {t 99 110} {sil 111 111}]}
{105 [{sil 0 0} {z 4 4} {m 12 28} {z 29 29} {aa 31 54} {st 55 77} {ey 78 99} {t 100 110} {sil 111 111}]}
{125 [{sil 0 0} {z 2 16} {ah 17 53} {st 54 76} {ey 77 98} {t 98 110} {sil 111 111}]}

timeAligned = [{{z 5 18} [{1 1} {2 1} {4 1} {0 1}]} {{aa 31 53} [{0 2} {1 2} {3 4}]} {{st 54 76} [{0 3} {1 3} {2 3} {4 3} {3 5}]} {{ey 78 98} [{0 4} {1 4} {2 4} {3 6} {4 4}]} {{t 98 110} [{0 5} {1 5} {4 5} {2 5} {3 7}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 16
i, iTime, newITime, timeStartFrom = 2 1 2 53
i, iTime, newITime, timeStartFrom = 3 2 3 76
i, iTime, newITime, timeStartFrom = 4 3 4 96
combinedVerdict    = [{z 3} {aa 3} {st 0} {ey 0} {t 0}]
ruleAlignedVerdict = [{z 3} {aa 3} {st 0} {ey 0} {t 0}]

score->
-2 for z
-2 for aa
+2 for st
+2 for ey
+2 for t
score<-: 2
bestResult = {2 [{aa 3} {s 0} {t 2} {ey 0} {t 0}] [s t ey t]}
Updated bestResult = {2 [{z 3} {aa 3} {st 0} {ey 0} {t 0}] [st ey t]}
testPronounce z surprise aa surprise st good ey good t good
publish->
phonsToAlphas = [{[st] st} {[ey] a} {[t] te}]
getVerdict<-:new {st [st] 0}
getVerdict<-:new {a [ey] 0}
getVerdict<-:new {te [t] 0}
lettersVerdicts = [{z [z] 3} {aa [aa] 3} {st [st] 0} {a [ey] 0} {te [t] 0}]
publish<-
{
  "word": "state",
  "results": [
    {
      "letters": "z",
      "phonemes": "z",
      "verdict": "surprise"
    },
    {
      "letters": "aa",
      "phonemes": "ɑ",
      "verdict": "surprise"
    },
    {
      "letters": "st",
      "phonemes": "st",
      "verdict": "good"
    },
    {
      "letters": "a",
      "phonemes": "eɪ",
      "verdict": "good"
    },
    {
      "letters": "te",
      "phonemes": "t",
      "verdict": "good"
    }
  ],
  "err": null
}
