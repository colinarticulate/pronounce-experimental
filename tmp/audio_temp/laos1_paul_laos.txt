Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_9c0b6997-889a-491d-8e51-30010ddc91f4 audiofile /Users/test/go/src/Phonemes/audio_clips/laos1_paul.wav word laos dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  1.694687



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.13999999999999999 1.54 1.68

 start3, duration3, end3 =  0.76 0.58 1.3399999999999999

 Initial start, duration, end =  0 1.68 1.68

 Cut at: start, duration =  0 1.674687     guard_end =  1.674687 

Running scan for frate = 125
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for aa ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ng with value 2 for oh ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 1.7999999999999998 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 125 public <laos> = (((sil [((w <any_Cx_l_w_p>) | (<any_Cx_l_w_p> w))] [((w <any_vowel_noSlide>) | (<any_vowel_noSlide> w))]) | (sil p (sil [((w <any_Cx_l_w_p>) | (<any_Cx_l_w_p> w))] [((w <any_vowel_noSlide>) | (<any_vowel_noSlide> w))]))) (([(<any_Cx_sh_p_w_l> sh)] | [(sh <any_Cx_sh_p_w_l>)]) (l | ((<any_Cx_sh_p_w_l> sh) | (sh <any_Cx_sh_p_w_l>)))) ((([(<any_Vx_sh_sh_aa_noSlide> sh)] | [(sh <any_Vx_sh_sh_aa_noSlide>)]) ([(<any_Cx_sh_sh_oh_l> sh)] | [(sh <any_Cx_sh_sh_oh_l>)])) (aa | ((<any_Vx_sh_sh_aa_noSlide> sh) | (sh <any_Vx_sh_sh_aa_noSlide>)))) (([(<any_Cx_ng_sh_oh> ng)] | [(ng <any_Cx_ng_sh_oh>)]) (oh | ((<any_Cx_ng_sh_oh_s> ng) | (ng <any_Cx_ng_sh_oh_s>)))) (([(<any_Cx_ng_ng_s_oh> ng)] | [(ng <any_Cx_ng_ng_s_oh>)]) (s | ((<any_Cx_ng_ng_s_oh> ng) | (ng <any_Cx_ng_ng_s_oh>)))) (([(<any_vowel_noSlide> sh)] | [(sh <any_vowel_noSlide>)]) ([(<any_Cx_ng_s_sh> sh)] | [(sh <any_Cx_ng_s_sh>)]) sil))
Running scan for frate = 105
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for aa ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ng with value 2 for oh ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 1.7999999999999998 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 105 public <laos> = (((sil [((m <any_Cx_l_m_p>) | (<any_Cx_l_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]) | (sil p (sil [((m <any_Cx_l_m_p>) | (<any_Cx_l_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]))) (([(<any_Cx_sh_p_m_l> sh)] | [(sh <any_Cx_sh_p_m_l>)]) (l | ((<any_Cx_sh_p_m_l> sh) | (sh <any_Cx_sh_p_m_l>)))) ((([(<any_Vx_sh_sh_aa_noSlide> sh)] | [(sh <any_Vx_sh_sh_aa_noSlide>)]) ([(<any_Cx_sh_sh_oh_l> sh)] | [(sh <any_Cx_sh_sh_oh_l>)])) (aa | ((<any_Vx_sh_sh_aa_noSlide> sh) | (sh <any_Vx_sh_sh_aa_noSlide>)))) (([(<any_Cx_ng_sh_oh> ng)] | [(ng <any_Cx_ng_sh_oh>)]) (oh | ((<any_Cx_ng_sh_oh_s> ng) | (ng <any_Cx_ng_sh_oh_s>)))) (([(<any_Cx_ng_ng_s_oh> ng)] | [(ng <any_Cx_ng_ng_s_oh>)]) (s | ((<any_Cx_ng_ng_s_oh> ng) | (ng <any_Cx_ng_ng_s_oh>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_ng_s_hh> hh)] | [(hh <any_Cx_ng_s_hh>)]) sil))
Running scan for frate = 91
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for aa ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ng with value 2 for oh ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 1.7999999999999998 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 91 public <laos> = (((sil [((v <any_Cx_l_v_p>) | (<any_Cx_l_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]) | (sil p (sil [((v <any_Cx_l_v_p>) | (<any_Cx_l_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]))) (([(<any_Cx_sh_p_v_l> sh)] | [(sh <any_Cx_sh_p_v_l>)]) (l | ((<any_Cx_sh_p_v_l> sh) | (sh <any_Cx_sh_p_v_l>)))) ((([(<any_Vx_sh_sh_aa_noSlide> sh)] | [(sh <any_Vx_sh_sh_aa_noSlide>)]) ([(<any_Cx_sh_sh_oh_l> sh)] | [(sh <any_Cx_sh_sh_oh_l>)])) (aa | ((<any_Vx_sh_sh_aa_noSlide> sh) | (sh <any_Vx_sh_sh_aa_noSlide>)))) (([(<any_Cx_ng_sh_oh> ng)] | [(ng <any_Cx_ng_sh_oh>)]) (oh | ((<any_Cx_ng_sh_oh_s> ng) | (ng <any_Cx_ng_sh_oh_s>)))) (([(<any_Cx_ng_ng_s_oh> ng)] | [(ng <any_Cx_ng_ng_s_oh>)]) (s | ((<any_Cx_ng_ng_s_oh> ng) | (ng <any_Cx_ng_ng_s_oh>)))) (([(<any_vowel_noSlide> sh)] | [(sh <any_vowel_noSlide>)]) ([(<any_Cx_ng_s_sh> sh)] | [(sh <any_Cx_ng_s_sh>)]) sil))
Running scan for frate = 80
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for aa ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ng with value 2 for oh ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 1.7999999999999998 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 80 public <laos> = (((sil [((m <any_Cx_l_m_p>) | (<any_Cx_l_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]) | (sil p (sil [((m <any_Cx_l_m_p>) | (<any_Cx_l_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]))) (([(<any_Cx_sh_p_m_l> sh)] | [(sh <any_Cx_sh_p_m_l>)]) (l | ((<any_Cx_sh_p_m_l> sh) | (sh <any_Cx_sh_p_m_l>)))) ((([(<any_Vx_sh_sh_aa_noSlide> sh)] | [(sh <any_Vx_sh_sh_aa_noSlide>)]) ([(<any_Cx_sh_sh_oh_l> sh)] | [(sh <any_Cx_sh_sh_oh_l>)])) (aa | ((<any_Vx_sh_sh_aa_noSlide> sh) | (sh <any_Vx_sh_sh_aa_noSlide>)))) (([(<any_Cx_ng_sh_oh> ng)] | [(ng <any_Cx_ng_sh_oh>)]) (oh | ((<any_Cx_ng_sh_oh_s> ng) | (ng <any_Cx_ng_sh_oh_s>)))) (([(<any_Cx_ng_ng_s_oh> ng)] | [(ng <any_Cx_ng_ng_s_oh>)]) (s | ((<any_Cx_ng_ng_s_oh> ng) | (ng <any_Cx_ng_ng_s_oh>)))) (([(<any_vowel_noSlide> th)] | [(th <any_vowel_noSlide>)]) ([(<any_Cx_ng_s_th> th)] | [(th <any_Cx_ng_s_th>)]) sil))
Running scan for frate = 72
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for aa ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ng with value 2 for oh ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 1.7999999999999998 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 72 public <laos> = (((sil [((m <any_Cx_l_m_p>) | (<any_Cx_l_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]) | (sil p (sil [((m <any_Cx_l_m_p>) | (<any_Cx_l_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]))) (([(<any_Cx_sh_p_m_l> sh)] | [(sh <any_Cx_sh_p_m_l>)]) (l | ((<any_Cx_sh_p_m_l> sh) | (sh <any_Cx_sh_p_m_l>)))) ((([(<any_Vx_sh_sh_aa_noSlide> sh)] | [(sh <any_Vx_sh_sh_aa_noSlide>)]) ([(<any_Cx_sh_sh_oh_l> sh)] | [(sh <any_Cx_sh_sh_oh_l>)])) (aa | ((<any_Vx_sh_sh_aa_noSlide> sh) | (sh <any_Vx_sh_sh_aa_noSlide>)))) (([(<any_Cx_ng_sh_oh> ng)] | [(ng <any_Cx_ng_sh_oh>)]) (oh | ((<any_Cx_ng_sh_oh_s> ng) | (ng <any_Cx_ng_sh_oh_s>)))) (([(<any_Cx_ng_ng_s_oh> ng)] | [(ng <any_Cx_ng_ng_s_oh>)]) (s | ((<any_Cx_ng_ng_s_oh> ng) | (ng <any_Cx_ng_ng_s_oh>)))) (([(<any_vowel_noSlide> t)] | [(t <any_vowel_noSlide>)]) ([(<any_Cx_ng_s_t> t)] | [(t <any_Cx_ng_s_t>)]) sil))

results =
{72 [{sil 0 58} {l 59 70} {eh 71 77} {sh 78 80} {oh 81 86} {s 87 106} {sil 107 119}]}
{80 [{sil 0 65} {l 66 78} {eh 79 86} {sh 87 89} {oh 90 96} {s 97 117} {sil 118 132}]}
{91 [{sil 0 74} {l 75 89} {eh 90 98} {sh 99 101} {oh 102 109} {s 110 134} {sil 135 151}]}
{105 [{sil 0 87} {l 88 103} {eh 104 129} {sh 130 132} {z 133 152} {ng 153 165} {s 166 170} {sil 171 175}]}
{125 [{sil 0 101} {l 102 120} {eh 121 146} {sh 147 149} {oh 150 152} {s 153 188} {sil 189 206}]}

normalised results =
{72 [{sil 0 58} {l 82 97} {eh 99 107} {sh 108 108} {oh 113 119} {s 121 147} {sil 149 165}]}
{80 [{sil 0 65} {l 83 98} {eh 99 108} {sh 109 109} {oh 113 120} {s 121 146} {sil 148 165}]}
{91 [{sil 0 74} {l 82 98} {eh 99 108} {sh 109 109} {oh 112 120} {s 121 147} {sil 148 166}]}
{105 [{sil 0 87} {l 84 98} {eh 99 123} {sh 124 124} {z 127 145} {ng 146 157} {s 158 162} {sil 163 167}]}
{125 [{sil 0 101} {l 82 96} {eh 97 117} {sh 118 118} {oh 120 120} {s 122 150} {sil 151 165}]}

ruleAligned = [{{l 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{aa 2} []} {{eh 3} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{oh 1} [{0 4} {1 4} {2 4}]} {{s 0} [{0 5} {1 5} {2 5} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {l 82 97} {eh 99 107} {sh 108 108} {oh 113 119} {s 121 147} {sil 149 149}]}
{80 [{sil 0 0} {l 83 98} {eh 99 108} {sh 109 109} {oh 113 120} {s 121 146} {sil 148 148}]}
{91 [{sil 0 0} {l 82 98} {eh 99 108} {sh 109 109} {oh 112 120} {s 121 147} {sil 148 148}]}
{105 [{sil 0 0} {l 84 98} {eh 99 123} {sh 124 124} {z 127 145} {ng 146 157} {s 158 158} {sil 163 163}]}
{125 [{sil 0 0} {l 82 96} {eh 97 117} {sh 118 118} {oh 120 120} {s 122 150} {sil 151 151}]}

timeAligned = [{{l 82 98} [{0 1} {2 1} {4 1} {1 1} {3 1}]} {{eh 99 108} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{oh 113 119} [{0 4} {1 4} {2 4}]} {{s 121 147} [{0 5} {1 5} {2 5} {4 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 -1 96
i, iTime, newITime, timeStartFrom = 2 0 1 96
i, iTime, newITime, timeStartFrom = 3 1 2 107
i, iTime, newITime, timeStartFrom = 4 2 3 119
combinedVerdict    = [{l 0} {aa 2} {eh 3} {oh 1} {s 0}]
ruleAlignedVerdict = [{l 0} {aa 2} {eh 3} {oh 1} {s 0}]

score->
+2 for l
-2 for aa
-2 for eh
+1 for oh
+2 for s
score<-: 1
bestResult = {1 [{l 0} {aa 2} {eh 3} {oh 1} {s 0}] [l aa oh s]}
testPronounce l good aa missing eh surprise oh possible s good
publish->
phonsToAlphas = [{[l] l} {[aa] a} {[oh] o} {[s] s}]
getVerdict<-:new {l [l] 0}
getVerdict<-:new {a [aa] 2}
getVerdict<-:new {o [oh] 1}
getVerdict<-:new {s [s] 0}
lettersVerdicts = [{l [l] 0} {a [aa] 2} {eh [eh] 3} {o [oh] 1} {s [s] 0}]
publish<-
{
  "word": "laos",
  "results": [
    {
      "letters": "l",
      "phonemes": "l",
      "verdict": "good"
    },
    {
      "letters": "a",
      "phonemes": "ɑ",
      "verdict": "missing"
    },
    {
      "letters": "eh",
      "phonemes": "ɛ",
      "verdict": "surprise"
    },
    {
      "letters": "o",
      "phonemes": "ɒ",
      "verdict": "possible"
    },
    {
      "letters": "s",
      "phonemes": "s",
      "verdict": "good"
    }
  ],
  "err": null
}
