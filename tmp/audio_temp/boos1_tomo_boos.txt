Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_ecebf60d-c94a-4c11-b08a-d2675293f649 audiofile /Users/test/go/src/Phonemes/audio_clips/boos1_tomo.wav word boos dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  2.922312



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.64 0.58 1.22

 start3, duration3, end3 =  0.66 0.5 1.1600000000000001

 Initial start, duration, end =  0.54 0.6799999999999999 1.22

 Cut at: start, duration =  0.54 1.13     guard_end =  1.67 

Running scan for frate = 125
Considering guard sh with value 1 for b ...
Considering guard zh with value 1 for b ...
Considering guard jh with value 1 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, sh

Considering guard ch with value 5 for uw ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard p with value 3.3999999999999995 for z ...
candidateGuards = map[p:true]
Picking guard, p

frate, target rule = 125 public <boos> = (((sil [((v <any_Cx_b_v_hh>) | (<any_Cx_b_v_hh> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]) | (sil hh (sil [((v <any_Cx_b_v_hh>) | (<any_Cx_b_v_hh> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]))) (([(<any_Cx_sh_hh_v_b> sh)] | [(sh <any_Cx_sh_hh_v_b>)]) (b | ((<any_Cx_sh_hh_v_b> sh) | (sh <any_Cx_sh_hh_v_b>)))) ((([(<any_Vx_ch_sh_uw_noSlide> ch)] | [(ch <any_Vx_ch_sh_uw_noSlide>)]) ([(<any_Cx_ch_sh_z_b> ch)] | [(ch <any_Cx_ch_sh_z_b>)])) (uw | ((<any_Vx_ch_sh_uw_noSlide> ch) | (ch <any_Vx_ch_sh_uw_noSlide>)))) (([(<any_Cx_p_ch_z> p)] | [(p <any_Cx_p_ch_z>)]) (z | ((<any_Cx_p_ch_z> p) | (p <any_Cx_p_ch_z>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_p_z_thr> thr)] | [(thr <any_Cx_p_z_thr>)]) sil))
Running scan for frate = 105
Considering guard jh with value 1 for b ...
Considering guard zh with value 1 for b ...
Considering guard sh with value 1 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, sh

Considering guard ch with value 5 for uw ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard p with value 3.3999999999999995 for z ...
candidateGuards = map[p:true]
Picking guard, p

frate, target rule = 105 public <boos> = (((sil [((l <any_Cx_b_l_hh>) | (<any_Cx_b_l_hh> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]) | (sil hh (sil [((l <any_Cx_b_l_hh>) | (<any_Cx_b_l_hh> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]))) (([(<any_Cx_sh_hh_l_b> sh)] | [(sh <any_Cx_sh_hh_l_b>)]) (b | ((<any_Cx_sh_hh_l_b> sh) | (sh <any_Cx_sh_hh_l_b>)))) ((([(<any_Vx_ch_sh_uw_noSlide> ch)] | [(ch <any_Vx_ch_sh_uw_noSlide>)]) ([(<any_Cx_ch_sh_z_b> ch)] | [(ch <any_Cx_ch_sh_z_b>)])) (uw | ((<any_Vx_ch_sh_uw_noSlide> ch) | (ch <any_Vx_ch_sh_uw_noSlide>)))) (([(<any_Cx_p_ch_z> p)] | [(p <any_Cx_p_ch_z>)]) (z | ((<any_Cx_p_ch_z> p) | (p <any_Cx_p_ch_z>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_p_z_thr> thr)] | [(thr <any_Cx_p_z_thr>)]) sil))
Running scan for frate = 91
Considering guard sh with value 1 for b ...
Considering guard jh with value 1 for b ...
Considering guard zh with value 1 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, sh

Considering guard ch with value 5 for uw ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard p with value 3.3999999999999995 for z ...
candidateGuards = map[p:true]
Picking guard, p

frate, target rule = 91 public <boos> = (((sil [((l <any_Cx_b_l_hh>) | (<any_Cx_b_l_hh> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]) | (sil hh (sil [((l <any_Cx_b_l_hh>) | (<any_Cx_b_l_hh> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]))) (([(<any_Cx_sh_hh_l_b> sh)] | [(sh <any_Cx_sh_hh_l_b>)]) (b | ((<any_Cx_sh_hh_l_b> sh) | (sh <any_Cx_sh_hh_l_b>)))) ((([(<any_Vx_ch_sh_uw_noSlide> ch)] | [(ch <any_Vx_ch_sh_uw_noSlide>)]) ([(<any_Cx_ch_sh_z_b> ch)] | [(ch <any_Cx_ch_sh_z_b>)])) (uw | ((<any_Vx_ch_sh_uw_noSlide> ch) | (ch <any_Vx_ch_sh_uw_noSlide>)))) (([(<any_Cx_p_ch_z> p)] | [(p <any_Cx_p_ch_z>)]) (z | ((<any_Cx_p_ch_z> p) | (p <any_Cx_p_ch_z>)))) (([(<any_vowel_noSlide> s)] | [(s <any_vowel_noSlide>)]) ([(<any_Cx_p_z_s> s)] | [(s <any_Cx_p_z_s>)]) sil))
Running scan for frate = 80
Considering guard jh with value 1 for b ...
Considering guard zh with value 1 for b ...
Considering guard sh with value 1 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, jh

Considering guard ch with value 5 for uw ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard p with value 3.3999999999999995 for z ...
candidateGuards = map[p:true]
Picking guard, p

frate, target rule = 80 public <boos> = (((sil [((v <any_Cx_b_v_hh>) | (<any_Cx_b_v_hh> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]) | (sil hh (sil [((v <any_Cx_b_v_hh>) | (<any_Cx_b_v_hh> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]))) (([(<any_Cx_jh_hh_v_b> jh)] | [(jh <any_Cx_jh_hh_v_b>)]) (b | ((<any_Cx_jh_hh_v_b> jh) | (jh <any_Cx_jh_hh_v_b>)))) ((([(<any_Vx_ch_jh_uw_noSlide> ch)] | [(ch <any_Vx_ch_jh_uw_noSlide>)]) ([(<any_Cx_ch_jh_z_b> ch)] | [(ch <any_Cx_ch_jh_z_b>)])) (uw | ((<any_Vx_ch_jh_uw_noSlide> ch) | (ch <any_Vx_ch_jh_uw_noSlide>)))) (([(<any_Cx_p_ch_z> p)] | [(p <any_Cx_p_ch_z>)]) (z | ((<any_Cx_p_ch_z> p) | (p <any_Cx_p_ch_z>)))) (([(<any_vowel_noSlide> s)] | [(s <any_vowel_noSlide>)]) ([(<any_Cx_p_z_s> s)] | [(s <any_Cx_p_z_s>)]) sil))
Running scan for frate = 72
Considering guard zh with value 1 for b ...
Considering guard sh with value 1 for b ...
Considering guard jh with value 1 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, jh

Considering guard ch with value 5 for uw ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard p with value 3.3999999999999995 for z ...
candidateGuards = map[p:true]
Picking guard, p

frate, target rule = 72 public <boos> = (((sil [((dh <any_Cx_b_dh_hh>) | (<any_Cx_b_dh_hh> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]) | (sil hh (sil [((dh <any_Cx_b_dh_hh>) | (<any_Cx_b_dh_hh> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]))) (([(<any_Cx_jh_hh_dh_b> jh)] | [(jh <any_Cx_jh_hh_dh_b>)]) (b | ((<any_Cx_jh_hh_dh_b> jh) | (jh <any_Cx_jh_hh_dh_b>)))) ((([(<any_Vx_ch_jh_uw_noSlide> ch)] | [(ch <any_Vx_ch_jh_uw_noSlide>)]) ([(<any_Cx_ch_jh_z_b> ch)] | [(ch <any_Cx_ch_jh_z_b>)])) (uw | ((<any_Vx_ch_jh_uw_noSlide> ch) | (ch <any_Vx_ch_jh_uw_noSlide>)))) (([(<any_Cx_p_ch_z> p)] | [(p <any_Cx_p_ch_z>)]) (z | ((<any_Cx_p_ch_z> p) | (p <any_Cx_p_ch_z>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_p_z_b> b)] | [(b <any_Cx_p_z_b>)]) sil))

results =
{72 [{sil 0 13} {b 14 18} {uw 19 32} {z 33 52} {sil 53 69}]}
{80 [{sil 0 14} {b 15 21} {uw 22 35} {z 36 58} {sil 59 74}]}
{91 [{sil 0 17} {b 18 23} {uw 24 42} {z 43 66} {sil 67 101}]}
{105 [{sil 0 20} {b 21 27} {uw 28 48} {z 49 77} {sil 78 117}]}
{125 [{sil 0 21} {b 22 30} {uw 31 55} {z 56 90} {sil 91 138}]}

normalised results =
{72 [{sil 0 13} {b 19 25} {uw 26 44} {z 46 72} {sil 74 96}]}
{80 [{sil 0 14} {b 19 26} {uw 28 44} {z 45 73} {sil 74 93}]}
{91 [{sil 0 17} {b 20 25} {uw 26 46} {z 47 73} {sil 74 111}]}
{105 [{sil 0 20} {b 20 26} {uw 27 46} {z 47 73} {sil 74 111}]}
{125 [{sil 0 21} {b 18 24} {uw 25 44} {z 45 72} {sil 73 110}]}

ruleAligned = [{{b 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{uw 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{z 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {b 19 25} {uw 26 44} {z 46 72} {sil 74 74}]}
{80 [{sil 0 0} {b 19 26} {uw 28 44} {z 45 73} {sil 74 74}]}
{91 [{sil 0 0} {b 20 25} {uw 26 46} {z 47 73} {sil 74 74}]}
{105 [{sil 0 0} {b 20 26} {uw 27 46} {z 47 73} {sil 74 74}]}
{125 [{sil 0 0} {b 18 24} {uw 25 44} {z 45 72} {sil 73 73}]}

timeAligned = [{{b 19 25} [{0 1} {1 1} {4 1} {2 1} {3 1}]} {{uw 26 44} [{0 2} {2 2} {4 2} {3 2} {1 2}]} {{z 46 73} [{0 3} {1 3} {4 3} {2 3} {3 3}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 24
i, iTime, newITime, timeStartFrom = 2 1 2 44
combinedVerdict    = [{b 0} {uw 0} {z 0}]
ruleAlignedVerdict = [{b 0} {uw 0} {z 0}]

score->
+2 for b
+2 for uw
+2 for z
score<-: 11
testPronounce b good uw good z good
publish->
phonsToAlphas = [{[b] b} {[uw] oo} {[z] s}]
getVerdict<-:new {b [b] 0}
getVerdict<-:new {oo [uw] 0}
getVerdict<-:new {s [z] 0}
lettersVerdicts = [{b [b] 0} {oo [uw] 0} {s [z] 0}]
publish<-
{
  "word": "boos",
  "results": [
    {
      "letters": "b",
      "phonemes": "b",
      "verdict": "good"
    },
    {
      "letters": "oo",
      "phonemes": "u",
      "verdict": "good"
    },
    {
      "letters": "s",
      "phonemes": "z",
      "verdict": "good"
    }
  ],
  "err": null
}
