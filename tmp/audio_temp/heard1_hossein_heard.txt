Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_ea14146c-d89e-4827-858a-15e22aa2b8a1 audiofile /Users/test/go/src/Phonemes/audio_clips/heard1_hossein.wav word heard dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  1.749



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.66 0.62 1.28

 start3, duration3, end3 =  0.66 0.54 1.2000000000000002

 Initial start, duration, end =  0.56 0.72 1.28

 Cut at: start, duration =  0.56 1.17     guard_end =  1.73 

Running scan for frate = 125
Considering guard jh with value 4 for hh ...
Considering guard ch with value 4 for hh ...
Considering guard y with value 4 for hh ...
Considering guard ng with value 4 for hh ...
Considering guard dh with value 4 for hh ...
Considering guard zh with value 4 for hh ...
Considering guard sh with value 4 for hh ...
Considering guard s with value 4 for hh ...
Considering guard w with value 4 for hh ...
candidateGuards = map[ch:true dh:true jh:true ng:true s:true sh:true w:true y:true zh:true]
Picking guard, y

Considering guard sh with value 8 for er ...
Considering guard w with value 8 for er ...
Considering guard zh with value 8 for er ...
Considering guard ch with value 8 for er ...
Considering guard ng with value 8 for er ...
Considering guard s with value 8 for er ...
candidateGuards = map[ch:true ng:true s:true sh:true w:true zh:true]
Picking guard, w

Considering guard w with value 2 for d ...
candidateGuards = map[w:true]
Picking guard, w

frate, target rule = 125 public <heard> = (((sil [((b <any_Cx_hh_b_b>) | (<any_Cx_hh_b_b> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]) | (sil b (sil [((b <any_Cx_hh_b_b>) | (<any_Cx_hh_b_b> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]))) (([(<any_Cx_y_b_b_hh> y)] | [(y <any_Cx_y_b_b_hh>)]) (hh | ((<any_Cx_y_b_b_hh> y) | (y <any_Cx_y_b_b_hh>)))) ((([(<any_Vx_w_y_er_noSlide> w)] | [(w <any_Vx_w_y_er_noSlide>)]) ([(<any_Cx_w_y_d_hh> w)] | [(w <any_Cx_w_y_d_hh>)])) (er | ((<any_Vx_w_y_er_noSlide> w) | (w <any_Vx_w_y_er_noSlide>)))) (([(<any_Cx_w_w_d> w)] | [(w <any_Cx_w_w_d>)]) (d | ((<any_Cx_w_w_d> w) | (w <any_Cx_w_w_d>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_w_d_v> v)] | [(v <any_Cx_w_d_v>)]) sil))
Running scan for frate = 105
Considering guard dh with value 4 for hh ...
Considering guard ng with value 4 for hh ...
Considering guard ch with value 4 for hh ...
Considering guard jh with value 4 for hh ...
Considering guard y with value 4 for hh ...
Considering guard zh with value 4 for hh ...
Considering guard sh with value 4 for hh ...
Considering guard w with value 4 for hh ...
Considering guard s with value 4 for hh ...
candidateGuards = map[ch:true dh:true jh:true ng:true s:true sh:true w:true y:true zh:true]
Picking guard, sh

Considering guard ch with value 8 for er ...
Considering guard w with value 8 for er ...
Considering guard sh with value 8 for er ...
Considering guard ng with value 8 for er ...
Considering guard s with value 8 for er ...
Considering guard zh with value 8 for er ...
candidateGuards = map[ch:true ng:true s:true sh:true w:true zh:true]
Picking guard, s

Considering guard w with value 2 for d ...
candidateGuards = map[w:true]
Picking guard, w

frate, target rule = 105 public <heard> = (((sil [((z <any_Cx_hh_z_b>) | (<any_Cx_hh_z_b> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil b (sil [((z <any_Cx_hh_z_b>) | (<any_Cx_hh_z_b> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_b_z_hh> sh)] | [(sh <any_Cx_sh_b_z_hh>)]) (hh | ((<any_Cx_sh_b_z_hh> sh) | (sh <any_Cx_sh_b_z_hh>)))) ((([(<any_Vx_s_sh_er_noSlide> s)] | [(s <any_Vx_s_sh_er_noSlide>)]) ([(<any_Cx_s_sh_d_hh> s)] | [(s <any_Cx_s_sh_d_hh>)])) (er | ((<any_Vx_s_sh_er_noSlide> s) | (s <any_Vx_s_sh_er_noSlide>)))) (([(<any_Cx_w_s_d> w)] | [(w <any_Cx_w_s_d>)]) (d | ((<any_Cx_w_s_d> w) | (w <any_Cx_w_s_d>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_w_d_g> g)] | [(g <any_Cx_w_d_g>)]) sil))
Running scan for frate = 91
Considering guard jh with value 4 for hh ...
Considering guard ch with value 4 for hh ...
Considering guard s with value 4 for hh ...
Considering guard y with value 4 for hh ...
Considering guard sh with value 4 for hh ...
Considering guard zh with value 4 for hh ...
Considering guard dh with value 4 for hh ...
Considering guard ng with value 4 for hh ...
Considering guard w with value 4 for hh ...
candidateGuards = map[ch:true dh:true jh:true ng:true s:true sh:true w:true y:true zh:true]
Picking guard, dh

Considering guard ch with value 8 for er ...
Considering guard sh with value 8 for er ...
Considering guard s with value 8 for er ...
Considering guard w with value 8 for er ...
Considering guard ng with value 8 for er ...
Considering guard zh with value 8 for er ...
candidateGuards = map[ch:true ng:true s:true sh:true w:true zh:true]
Picking guard, s

Considering guard w with value 2 for d ...
candidateGuards = map[w:true]
Picking guard, w

frate, target rule = 91 public <heard> = (((sil [((b <any_Cx_hh_b_b>) | (<any_Cx_hh_b_b> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]) | (sil b (sil [((b <any_Cx_hh_b_b>) | (<any_Cx_hh_b_b> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]))) (([(<any_Cx_dh_b_b_hh> dh)] | [(dh <any_Cx_dh_b_b_hh>)]) (hh | ((<any_Cx_dh_b_b_hh> dh) | (dh <any_Cx_dh_b_b_hh>)))) ((([(<any_Vx_s_dh_er_noSlide> s)] | [(s <any_Vx_s_dh_er_noSlide>)]) ([(<any_Cx_s_dh_d_hh> s)] | [(s <any_Cx_s_dh_d_hh>)])) (er | ((<any_Vx_s_dh_er_noSlide> s) | (s <any_Vx_s_dh_er_noSlide>)))) (([(<any_Cx_w_s_d> w)] | [(w <any_Cx_w_s_d>)]) (d | ((<any_Cx_w_s_d> w) | (w <any_Cx_w_s_d>)))) (([(<any_vowel_noSlide> dh)] | [(dh <any_vowel_noSlide>)]) ([(<any_Cx_w_d_dh> dh)] | [(dh <any_Cx_w_d_dh>)]) sil))
Running scan for frate = 80
Considering guard ch with value 4 for hh ...
Considering guard jh with value 4 for hh ...
Considering guard w with value 4 for hh ...
Considering guard ng with value 4 for hh ...
Considering guard sh with value 4 for hh ...
Considering guard s with value 4 for hh ...
Considering guard dh with value 4 for hh ...
Considering guard y with value 4 for hh ...
Considering guard zh with value 4 for hh ...
candidateGuards = map[ch:true dh:true jh:true ng:true s:true sh:true w:true y:true zh:true]
Picking guard, ch

Considering guard w with value 8 for er ...
Considering guard sh with value 8 for er ...
Considering guard s with value 8 for er ...
Considering guard ng with value 8 for er ...
Considering guard zh with value 8 for er ...
Considering guard ch with value 8 for er ...
candidateGuards = map[ch:true ng:true s:true sh:true w:true zh:true]
Picking guard, sh

Considering guard w with value 2 for d ...
candidateGuards = map[w:true]
Picking guard, w

frate, target rule = 80 public <heard> = (((sil [((b <any_Cx_hh_b_b>) | (<any_Cx_hh_b_b> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]) | (sil b (sil [((b <any_Cx_hh_b_b>) | (<any_Cx_hh_b_b> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]))) (([(<any_Cx_ch_b_b_hh> ch)] | [(ch <any_Cx_ch_b_b_hh>)]) (hh | ((<any_Cx_ch_b_b_hh> ch) | (ch <any_Cx_ch_b_b_hh>)))) ((([(<any_Vx_sh_ch_er_noSlide> sh)] | [(sh <any_Vx_sh_ch_er_noSlide>)]) ([(<any_Cx_sh_ch_d_hh> sh)] | [(sh <any_Cx_sh_ch_d_hh>)])) (er | ((<any_Vx_sh_ch_er_noSlide> sh) | (sh <any_Vx_sh_ch_er_noSlide>)))) (([(<any_Cx_w_sh_d> w)] | [(w <any_Cx_w_sh_d>)]) (d | ((<any_Cx_w_sh_d> w) | (w <any_Cx_w_sh_d>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_w_d_thr> thr)] | [(thr <any_Cx_w_d_thr>)]) sil))
Running scan for frate = 72
Considering guard w with value 4 for hh ...
Considering guard ng with value 4 for hh ...
Considering guard ch with value 4 for hh ...
Considering guard sh with value 4 for hh ...
Considering guard jh with value 4 for hh ...
Considering guard s with value 4 for hh ...
Considering guard dh with value 4 for hh ...
Considering guard zh with value 4 for hh ...
Considering guard y with value 4 for hh ...
candidateGuards = map[ch:true dh:true jh:true ng:true s:true sh:true w:true y:true zh:true]
Picking guard, dh

Considering guard w with value 8 for er ...
Considering guard zh with value 8 for er ...
Considering guard sh with value 8 for er ...
Considering guard ng with value 8 for er ...
Considering guard s with value 8 for er ...
Considering guard ch with value 8 for er ...
candidateGuards = map[ch:true ng:true s:true sh:true w:true zh:true]
Picking guard, w

Considering guard w with value 2 for d ...
candidateGuards = map[w:true]
Picking guard, w

frate, target rule = 72 public <heard> = (((sil [((b <any_Cx_hh_b_b>) | (<any_Cx_hh_b_b> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]) | (sil b (sil [((b <any_Cx_hh_b_b>) | (<any_Cx_hh_b_b> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]))) (([(<any_Cx_dh_b_b_hh> dh)] | [(dh <any_Cx_dh_b_b_hh>)]) (hh | ((<any_Cx_dh_b_b_hh> dh) | (dh <any_Cx_dh_b_b_hh>)))) ((([(<any_Vx_w_dh_er_noSlide> w)] | [(w <any_Vx_w_dh_er_noSlide>)]) ([(<any_Cx_w_dh_d_hh> w)] | [(w <any_Cx_w_dh_d_hh>)])) (er | ((<any_Vx_w_dh_er_noSlide> w) | (w <any_Vx_w_dh_er_noSlide>)))) (([(<any_Cx_w_w_d> w)] | [(w <any_Cx_w_w_d>)]) (d | ((<any_Cx_w_w_d> w) | (w <any_Cx_w_w_d>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_w_d_v> v)] | [(v <any_Cx_w_d_v>)]) sil))

results =
{72 [{sil 0 9} {hh 10 18} {er 19 35} {d 36 44} {sil 45 61}]}
{80 [{sil 0 10} {hh 11 21} {er 22 40} {d 41 48} {sil 49 66}]}
{91 [{sil 0 11} {hh 12 19} {er 20 46} {d 47 55} {sil 56 105}]}
{105 [{sil 0 12} {hh 13 22} {er 23 54} {d 55 64} {sil 65 122}]}
{125 [{sil 0 14} {hh 15 24} {er 25 64} {d 65 78} {sil 79 143}]}

normalised results =
{72 [{sil 0 9} {hh 14 25} {er 26 49} {d 50 61} {sil 63 85}]}
{80 [{sil 0 10} {hh 14 26} {er 28 50} {d 51 60} {sil 61 83}]}
{91 [{sil 0 11} {hh 13 21} {er 22 51} {d 52 60} {sil 62 115}]}
{105 [{sil 0 12} {hh 12 21} {er 22 51} {d 52 61} {sil 62 116}]}
{125 [{sil 0 14} {hh 12 19} {er 20 51} {d 52 62} {sil 63 114}]}

ruleAligned = [{{hh 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{er 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{d 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {hh 14 25} {er 26 49} {d 50 61} {sil 63 63}]}
{80 [{sil 0 0} {hh 14 26} {er 28 50} {d 51 60} {sil 61 61}]}
{91 [{sil 0 0} {hh 13 21} {er 22 51} {d 52 60} {sil 62 62}]}
{105 [{sil 0 0} {hh 12 21} {er 22 51} {d 52 61} {sil 62 62}]}
{125 [{sil 0 0} {hh 12 19} {er 20 51} {d 52 62} {sil 63 63}]}

timeAligned = [{{hh 13 21} [{2 1} {3 1} {4 1} {0 1} {1 1}]} {{er 22 51} [{2 2} {3 2} {4 2} {0 2} {1 2}]} {{d 52 61} [{0 3} {1 3} {2 3} {3 3} {4 3}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 19
i, iTime, newITime, timeStartFrom = 2 1 2 49
combinedVerdict    = [{hh 0} {er 0} {d 0}]
ruleAlignedVerdict = [{hh 0} {er 0} {d 0}]

score->
+2 for hh
+2 for er
+2 for d
score<-: 11
testPronounce hh good er good d good
publish->
phonsToAlphas = [{[hh] h} {[er] ear} {[d] d}]
getVerdict<-:new {h [hh] 0}
getVerdict<-:new {ear [er] 0}
getVerdict<-:new {d [d] 0}
lettersVerdicts = [{h [hh] 0} {ear [er] 0} {d [d] 0}]
publish<-
{
  "word": "heard",
  "results": [
    {
      "letters": "h",
      "phonemes": "h",
      "verdict": "good"
    },
    {
      "letters": "ear",
      "phonemes": "ɜɹ",
      "verdict": "good"
    },
    {
      "letters": "d",
      "phonemes": "d",
      "verdict": "good"
    }
  ],
  "err": null
}
