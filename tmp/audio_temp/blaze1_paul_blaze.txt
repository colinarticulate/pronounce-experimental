Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_7350203c-f39c-4ec4-8216-4e87f81559df audiofile /Users/test/go/src/Phonemes/audio_clips/blaze1_paul.wav word blaze dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  1.60075



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.42000000000000004 0.84 1.26

 start3, duration3, end3 =  0.44000000000000006 0.6799999999999999 1.12

 Initial start, duration, end =  0.32000000000000006 0.94 1.26

 Cut at: start, duration =  0.32000000000000006 1.2607499999999998     guard_end =  1.5807499999999999 

Running scan for frate = 125
Running scan for frate = 125
Considering guard jh with value 1 for bl ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard ch with value 5 for ey ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard g with value 2.5999999999999996 for z ...
candidateGuards = map[g:true]
Picking guard, g

Considering guard ch with value 5 for ey ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard g with value 2.5999999999999996 for z ...
candidateGuards = map[g:true]
Picking guard, g

frate, target rule = 125 public <blaze> = (((sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_jh_p_z_bl> jh)] | [(jh <any_Cx_jh_p_z_bl>)]) (bl | ((<any_Cx_jh_p_z_bl> jh) | (jh <any_Cx_jh_p_z_bl>)))) ((([(<any_Vx_ch_jh_ey_noSlide> ch)] | [(ch <any_Vx_ch_jh_ey_noSlide>)]) ([(<any_Cx_ch_jh_z_bl> ch)] | [(ch <any_Cx_ch_jh_z_bl>)])) (ey | ((<any_Vx_ch_jh_ey_noSlide> ch) | (ch <any_Vx_ch_jh_ey_noSlide>)))) (([(<any_Cx_g_ch_z> g)] | [(g <any_Cx_g_ch_z>)]) (z | ((<any_Cx_g_ch_z> g) | (g <any_Cx_g_ch_z>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_g_z_v> v)] | [(v <any_Cx_g_z_v>)]) sil))
frate, target rule = 125 public <blaze> = (((sil [((dh <any_Cx_b_dh_hh>) | (<any_Cx_b_dh_hh> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]) | (sil hh (sil [((dh <any_Cx_b_dh_hh>) | (<any_Cx_b_dh_hh> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]))) (([(<any_Cx_sh_hh_dh_b_l> sh)] | [(sh <any_Cx_sh_hh_dh_b_l>)]) (b | ((<any_Cx_sh_hh_dh_b_l> sh) | (sh <any_Cx_sh_hh_dh_b_l>)))) (([(<any_Cx_sh_sh_l_b> sh)] | [(sh <any_Cx_sh_sh_l_b>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_ch_sh_ey_noSlide> ch)] | [(ch <any_Vx_ch_sh_ey_noSlide>)]) ([(<any_Cx_ch_sh_z_l> ch)] | [(ch <any_Cx_ch_sh_z_l>)])) (ey | ((<any_Vx_ch_sh_ey_noSlide> ch) | (ch <any_Vx_ch_sh_ey_noSlide>)))) (([(<any_Cx_g_ch_z> g)] | [(g <any_Cx_g_ch_z>)]) (z | ((<any_Cx_g_ch_z> g) | (g <any_Cx_g_ch_z>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_g_z_b> b)] | [(b <any_Cx_g_z_b>)]) sil))
Running scan for frate = 105
Running scan for frate = 105
Considering guard jh with value 1 for bl ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 5 for ey ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard g with value 2.5999999999999996 for z ...
candidateGuards = map[g:true]
Picking guard, g

Considering guard ch with value 5 for ey ...
candidateGuards = map[ch:true]
Picking guard, ch

frate, target rule = 105 public <blaze> = (((sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_jh_p_z_bl> jh)] | [(jh <any_Cx_jh_p_z_bl>)]) (bl | ((<any_Cx_jh_p_z_bl> jh) | (jh <any_Cx_jh_p_z_bl>)))) ((([(<any_Vx_ch_jh_ey_noSlide> ch)] | [(ch <any_Vx_ch_jh_ey_noSlide>)]) ([(<any_Cx_ch_jh_z_bl> ch)] | [(ch <any_Cx_ch_jh_z_bl>)])) (ey | ((<any_Vx_ch_jh_ey_noSlide> ch) | (ch <any_Vx_ch_jh_ey_noSlide>)))) (([(<any_Cx_g_ch_z> g)] | [(g <any_Cx_g_ch_z>)]) (z | ((<any_Cx_g_ch_z> g) | (g <any_Cx_g_ch_z>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_g_z_thr> thr)] | [(thr <any_Cx_g_z_thr>)]) sil))
Considering guard g with value 2.5999999999999996 for z ...
candidateGuards = map[g:true]
Picking guard, g

Running scan for frate = 91
frate, target rule = 105 public <blaze> = (((sil [((hh <any_Cx_b_hh_hh>) | (<any_Cx_b_hh_hh> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil hh (sil [((hh <any_Cx_b_hh_hh>) | (<any_Cx_b_hh_hh> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_sh_hh_hh_b_l> sh)] | [(sh <any_Cx_sh_hh_hh_b_l>)]) (b | ((<any_Cx_sh_hh_hh_b_l> sh) | (sh <any_Cx_sh_hh_hh_b_l>)))) (([(<any_Cx_sh_sh_l_b> sh)] | [(sh <any_Cx_sh_sh_l_b>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_ch_sh_ey_noSlide> ch)] | [(ch <any_Vx_ch_sh_ey_noSlide>)]) ([(<any_Cx_ch_sh_z_l> ch)] | [(ch <any_Cx_ch_sh_z_l>)])) (ey | ((<any_Vx_ch_sh_ey_noSlide> ch) | (ch <any_Vx_ch_sh_ey_noSlide>)))) (([(<any_Cx_g_ch_z> g)] | [(g <any_Cx_g_ch_z>)]) (z | ((<any_Cx_g_ch_z> g) | (g <any_Cx_g_ch_z>)))) (([(<any_vowel_noSlide> s)] | [(s <any_vowel_noSlide>)]) ([(<any_Cx_g_z_s> s)] | [(s <any_Cx_g_z_s>)]) sil))
Considering guard jh with value 1 for bl ...
candidateGuards = map[jh:true]
Picking guard, jh

Running scan for frate = 91
Considering guard ch with value 5 for ey ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard g with value 2.5999999999999996 for z ...
candidateGuards = map[g:true]
Picking guard, g

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 91 public <blaze> = (((sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_jh_p_z_bl> jh)] | [(jh <any_Cx_jh_p_z_bl>)]) (bl | ((<any_Cx_jh_p_z_bl> jh) | (jh <any_Cx_jh_p_z_bl>)))) ((([(<any_Vx_ch_jh_ey_noSlide> ch)] | [(ch <any_Vx_ch_jh_ey_noSlide>)]) ([(<any_Cx_ch_jh_z_bl> ch)] | [(ch <any_Cx_ch_jh_z_bl>)])) (ey | ((<any_Vx_ch_jh_ey_noSlide> ch) | (ch <any_Vx_ch_jh_ey_noSlide>)))) (([(<any_Cx_g_ch_z> g)] | [(g <any_Cx_g_ch_z>)]) (z | ((<any_Cx_g_ch_z> g) | (g <any_Cx_g_ch_z>)))) (([(<any_vowel_noSlide> s)] | [(s <any_vowel_noSlide>)]) ([(<any_Cx_g_z_s> s)] | [(s <any_Cx_g_z_s>)]) sil))
Considering guard ch with value 5 for ey ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard g with value 2.5999999999999996 for z ...
candidateGuards = map[g:true]
Picking guard, g

Running scan for frate = 80
frate, target rule = 91 public <blaze> = (((sil [((d <any_Cx_b_d_hh>) | (<any_Cx_b_d_hh> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil hh (sil [((d <any_Cx_b_d_hh>) | (<any_Cx_b_d_hh> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_sh_hh_d_b_l> sh)] | [(sh <any_Cx_sh_hh_d_b_l>)]) (b | ((<any_Cx_sh_hh_d_b_l> sh) | (sh <any_Cx_sh_hh_d_b_l>)))) (([(<any_Cx_sh_sh_l_b> sh)] | [(sh <any_Cx_sh_sh_l_b>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_ch_sh_ey_noSlide> ch)] | [(ch <any_Vx_ch_sh_ey_noSlide>)]) ([(<any_Cx_ch_sh_z_l> ch)] | [(ch <any_Cx_ch_sh_z_l>)])) (ey | ((<any_Vx_ch_sh_ey_noSlide> ch) | (ch <any_Vx_ch_sh_ey_noSlide>)))) (([(<any_Cx_g_ch_z> g)] | [(g <any_Cx_g_ch_z>)]) (z | ((<any_Cx_g_ch_z> g) | (g <any_Cx_g_ch_z>)))) (([(<any_vowel_noSlide> s)] | [(s <any_vowel_noSlide>)]) ([(<any_Cx_g_z_s> s)] | [(s <any_Cx_g_z_s>)]) sil))
Considering guard jh with value 1 for bl ...
candidateGuards = map[jh:true]
Picking guard, jh

Running scan for frate = 80
Considering guard ch with value 5 for ey ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard g with value 2.5999999999999996 for z ...
candidateGuards = map[g:true]
Picking guard, g

Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 80 public <blaze> = (((sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_jh_p_z_bl> jh)] | [(jh <any_Cx_jh_p_z_bl>)]) (bl | ((<any_Cx_jh_p_z_bl> jh) | (jh <any_Cx_jh_p_z_bl>)))) ((([(<any_Vx_ch_jh_ey_noSlide> ch)] | [(ch <any_Vx_ch_jh_ey_noSlide>)]) ([(<any_Cx_ch_jh_z_bl> ch)] | [(ch <any_Cx_ch_jh_z_bl>)])) (ey | ((<any_Vx_ch_jh_ey_noSlide> ch) | (ch <any_Vx_ch_jh_ey_noSlide>)))) (([(<any_Cx_g_ch_z> g)] | [(g <any_Cx_g_ch_z>)]) (z | ((<any_Cx_g_ch_z> g) | (g <any_Cx_g_ch_z>)))) (([(<any_vowel_noSlide> s)] | [(s <any_vowel_noSlide>)]) ([(<any_Cx_g_z_s> s)] | [(s <any_Cx_g_z_s>)]) sil))
Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 5 for ey ...
candidateGuards = map[ch:true]
Picking guard, ch

Running scan for frate = 72
Considering guard g with value 2.5999999999999996 for z ...
candidateGuards = map[g:true]
Picking guard, g

Considering guard jh with value 1 for bl ...
candidateGuards = map[jh:true]
Picking guard, jh

frate, target rule = 80 public <blaze> = (((sil [((p <any_Cx_b_p_hh>) | (<any_Cx_b_p_hh> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]) | (sil hh (sil [((p <any_Cx_b_p_hh>) | (<any_Cx_b_p_hh> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]))) (([(<any_Cx_sh_hh_p_b_l> sh)] | [(sh <any_Cx_sh_hh_p_b_l>)]) (b | ((<any_Cx_sh_hh_p_b_l> sh) | (sh <any_Cx_sh_hh_p_b_l>)))) (([(<any_Cx_sh_sh_l_b> sh)] | [(sh <any_Cx_sh_sh_l_b>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_ch_sh_ey_noSlide> ch)] | [(ch <any_Vx_ch_sh_ey_noSlide>)]) ([(<any_Cx_ch_sh_z_l> ch)] | [(ch <any_Cx_ch_sh_z_l>)])) (ey | ((<any_Vx_ch_sh_ey_noSlide> ch) | (ch <any_Vx_ch_sh_ey_noSlide>)))) (([(<any_Cx_g_ch_z> g)] | [(g <any_Cx_g_ch_z>)]) (z | ((<any_Cx_g_ch_z> g) | (g <any_Cx_g_ch_z>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_g_z_b> b)] | [(b <any_Cx_g_z_b>)]) sil))
Considering guard ch with value 5 for ey ...
candidateGuards = map[ch:true]
Picking guard, ch

Running scan for frate = 72
Considering guard g with value 2.5999999999999996 for z ...
candidateGuards = map[g:true]
Picking guard, g

Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 72 public <blaze> = (((sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_jh_p_z_bl> jh)] | [(jh <any_Cx_jh_p_z_bl>)]) (bl | ((<any_Cx_jh_p_z_bl> jh) | (jh <any_Cx_jh_p_z_bl>)))) ((([(<any_Vx_ch_jh_ey_noSlide> ch)] | [(ch <any_Vx_ch_jh_ey_noSlide>)]) ([(<any_Cx_ch_jh_z_bl> ch)] | [(ch <any_Cx_ch_jh_z_bl>)])) (ey | ((<any_Vx_ch_jh_ey_noSlide> ch) | (ch <any_Vx_ch_jh_ey_noSlide>)))) (([(<any_Cx_g_ch_z> g)] | [(g <any_Cx_g_ch_z>)]) (z | ((<any_Cx_g_ch_z> g) | (g <any_Cx_g_ch_z>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_g_z_b> b)] | [(b <any_Cx_g_z_b>)]) sil))
Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 5 for ey ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard g with value 2.5999999999999996 for z ...
candidateGuards = map[g:true]
Picking guard, g

frate, target rule = 72 public <blaze> = (((sil [((l <any_Cx_b_l_hh>) | (<any_Cx_b_l_hh> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]) | (sil hh (sil [((l <any_Cx_b_l_hh>) | (<any_Cx_b_l_hh> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]))) (([(<any_Cx_sh_hh_l_b_l> sh)] | [(sh <any_Cx_sh_hh_l_b_l>)]) (b | ((<any_Cx_sh_hh_l_b_l> sh) | (sh <any_Cx_sh_hh_l_b_l>)))) (([(<any_Cx_sh_sh_l_b> sh)] | [(sh <any_Cx_sh_sh_l_b>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_ch_sh_ey_noSlide> ch)] | [(ch <any_Vx_ch_sh_ey_noSlide>)]) ([(<any_Cx_ch_sh_z_l> ch)] | [(ch <any_Cx_ch_sh_z_l>)])) (ey | ((<any_Vx_ch_sh_ey_noSlide> ch) | (ch <any_Vx_ch_sh_ey_noSlide>)))) (([(<any_Cx_g_ch_z> g)] | [(g <any_Cx_g_ch_z>)]) (z | ((<any_Cx_g_ch_z> g) | (g <any_Cx_g_ch_z>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_g_z_v> v)] | [(v <any_Cx_g_z_v>)]) sil))

results =
{72 [{sil 0 10} {bl 11 23} {ey 24 45} {z 46 61} {sil 62 82}]}
{80 [{sil 0 12} {bl 13 26} {ey 27 51} {z 52 67} {sil 68 88}]}
{91 [{sil 0 14} {bl 15 29} {ey 30 58} {z 59 76} {sil 77 113}]}
{105 [{sil 0 17} {bl 18 34} {ey 35 68} {z 69 91} {sil 92 131}]}
{125 [{sil 0 20} {bl 21 38} {ey 39 79} {z 80 106} {sil 107 154}]}

normalised results =
{72 [{sil 0 10} {bl 15 32} {ey 33 63} {z 64 85} {sil 86 114}]}
{80 [{sil 0 12} {bl 16 33} {ey 34 64} {z 65 84} {sil 85 110}]}
{91 [{sil 0 14} {bl 16 32} {ey 33 64} {z 65 84} {sil 85 124}]}
{105 [{sil 0 17} {bl 17 32} {ey 33 65} {z 66 87} {sil 88 125}]}
{125 [{sil 0 20} {bl 17 30} {ey 31 63} {z 64 85} {sil 86 123}]}

ruleAligned = [{{bl 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ey 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{z 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {bl 15 32} {ey 33 63} {z 64 85} {sil 86 86}]}
{80 [{sil 0 0} {bl 16 33} {ey 34 64} {z 65 84} {sil 85 85}]}
{91 [{sil 0 0} {bl 16 32} {ey 33 64} {z 65 84} {sil 85 85}]}
{105 [{sil 0 0} {bl 17 32} {ey 33 65} {z 66 87} {sil 88 88}]}
{125 [{sil 0 0} {bl 17 30} {ey 31 63} {z 64 85} {sil 86 86}]}

timeAligned = [{{bl 16 32} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ey 33 64} [{0 2} {2 2} {3 2} {4 2} {1 2}]} {{z 65 85} [{0 3} {1 3} {2 3} {4 3} {3 3}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 30
i, iTime, newITime, timeStartFrom = 2 1 2 63
combinedVerdict    = [{bl 0} {ey 0} {z 0}]
ruleAlignedVerdict = [{bl 0} {ey 0} {z 0}]

score->
+2 for bl
+2 for ey
+2 for z
score<-: 11

results =
{72 [{sil 0 10} {b 11 16} {l 17 23} {ey 24 45} {z 46 61} {sil 62 82}]}
{80 [{sil 0 12} {b 13 18} {l 19 26} {ey 27 51} {z 52 67} {sil 68 88}]}
{91 [{sil 0 14} {b 15 20} {l 21 30} {ey 31 58} {z 59 76} {sil 77 113}]}
{105 [{sil 0 17} {b 18 23} {l 24 35} {ey 36 68} {z 69 91} {sil 92 131}]}
{125 [{sil 0 20} {b 21 26} {l 27 40} {ey 41 79} {z 80 106} {sil 107 154}]}

normalised results =
{72 [{sil 0 10} {b 15 22} {l 24 32} {ey 33 63} {z 64 85} {sil 86 114}]}
{80 [{sil 0 12} {b 16 23} {l 24 33} {ey 34 64} {z 65 84} {sil 85 110}]}
{91 [{sil 0 14} {b 16 22} {l 23 33} {ey 34 64} {z 65 84} {sil 85 124}]}
{105 [{sil 0 17} {b 17 22} {l 23 33} {ey 34 65} {z 66 87} {sil 88 125}]}
{125 [{sil 0 20} {b 17 21} {l 22 32} {ey 33 63} {z 64 85} {sil 86 123}]}

ruleAligned = [{{b 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{l 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{ey 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{z 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {b 15 22} {l 24 32} {ey 33 63} {z 64 85} {sil 86 86}]}
{80 [{sil 0 0} {b 16 23} {l 24 33} {ey 34 64} {z 65 84} {sil 85 85}]}
{91 [{sil 0 0} {b 16 22} {l 23 33} {ey 34 64} {z 65 84} {sil 85 85}]}
{105 [{sil 0 0} {b 17 22} {l 23 33} {ey 34 65} {z 66 87} {sil 88 88}]}
{125 [{sil 0 0} {b 17 21} {l 22 32} {ey 33 63} {z 64 85} {sil 86 86}]}

timeAligned = [{{b 16 22} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{l 23 33} [{2 2} {3 2} {4 2} {0 2} {1 2}]} {{ey 34 64} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{z 65 85} [{0 4} {1 4} {2 4} {4 4} {3 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 21
i, iTime, newITime, timeStartFrom = 2 1 2 32
i, iTime, newITime, timeStartFrom = 3 2 3 63
combinedVerdict    = [{b 0} {l 0} {ey 0} {z 0}]
ruleAlignedVerdict = [{b 0} {l 0} {ey 0} {z 0}]

score->
+2 for b
+2 for l
+2 for ey
+2 for z
score<-: 13
testPronounce b good l good ey good z good
publish->
phonsToAlphas = [{[b] b} {[l] l} {[ey] a} {[z] ze}]
getVerdict<-:new {b [b] 0}
getVerdict<-:new {l [l] 0}
getVerdict<-:new {a [ey] 0}
getVerdict<-:new {ze [z] 0}
lettersVerdicts = [{b [b] 0} {l [l] 0} {a [ey] 0} {ze [z] 0}]
publish<-
{
  "word": "blaze",
  "results": [
    {
      "letters": "b",
      "phonemes": "b",
      "verdict": "good"
    },
    {
      "letters": "l",
      "phonemes": "l",
      "verdict": "good"
    },
    {
      "letters": "a",
      "phonemes": "eɪ",
      "verdict": "good"
    },
    {
      "letters": "ze",
      "phonemes": "z",
      "verdict": "good"
    }
  ],
  "err": null
}
