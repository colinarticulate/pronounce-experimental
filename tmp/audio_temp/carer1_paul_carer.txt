Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_43aa9fff-3f5b-43b3-a509-7d1ea348e0e0 audiofile /Users/test/go/src/Phonemes/audio_clips/carer1_paul.wav word carer dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  1.902625



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.48 0.9 1.38

 start3, duration3, end3 =  0.5 0.78 1.28

 Initial start, duration, end =  0.38 0.9999999999999999 1.38

 Cut at: start, duration =  0.38 1.45     guard_end =  1.83 

Running scan for frate = 125
Running scan for frate = 125
Considering guard oy with value 1 for k ...
Considering guard zh with value 1 for k ...
candidateGuards = map[oy:true zh:true]
Picking guard, oy

Considering guard zh with value 1 for k ...
Considering guard oy with value 1 for k ...
candidateGuards = map[oy:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for ehr ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for ehr ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard y with value 2 for r ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 2 for r ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard z with value 1 for axr ...
Considering guard y with value 1 for axr ...
candidateGuards = map[y:true z:true]
Picking guard, z

Considering guard z with value 2 for ax ...
Considering guard y with value 2 for ax ...
candidateGuards = map[y:true z:true]
Picking guard, z

frate, target rule = 125 public <carer> = (((sil [((t <any_Cx_k_t_b>) | (<any_Cx_k_t_b> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil b (sil [((t <any_Cx_k_t_b>) | (<any_Cx_k_t_b> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_oy_b_t_k_ehr> oy)] | [(oy <any_Cx_oy_b_t_k_ehr>)]) (k | d | ((<any_Cx_oy_b_t_k_ehr> oy) | (oy <any_Cx_oy_b_t_k_ehr>)))) (([(<any_Cx_zh_oy_ehr_r_k> zh)] | [(zh <any_Cx_zh_oy_ehr_r_k>)]) (ehr | ((<any_Cx_zh_oy_ehr_r> zh) | (zh <any_Cx_zh_oy_ehr_r>)))) (([(<any_Cx_y_zh_r_ehr> y)] | [(y <any_Cx_y_zh_r_ehr>)]) (r | ((<any_Cx_y_zh_r_axr_ehr> y) | (y <any_Cx_y_zh_r_axr_ehr>)))) (([(<any_Cx_z_y_axr_r> z)] | [(z <any_Cx_z_y_axr_r>)]) (axr | ((<any_Cx_z_y_axr_r> z) | (z <any_Cx_z_y_axr_r>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_z_axr_n> n)] | [(n <any_Cx_z_axr_n>)]) sil))
Considering guard z with value 1 for r ...
Considering guard y with value 1 for r ...
candidateGuards = map[y:true z:true]
Picking guard, z

Running scan for frate = 105
frate, target rule = 125 public <carer> = (((sil [((d <any_Cx_k_d_b>) | (<any_Cx_k_d_b> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil b (sil [((d <any_Cx_k_d_b>) | (<any_Cx_k_d_b> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_zh_b_d_k_ehr> zh)] | [(zh <any_Cx_zh_b_d_k_ehr>)]) (k | d | ((<any_Cx_zh_b_d_k_ehr> zh) | (zh <any_Cx_zh_b_d_k_ehr>)))) (([(<any_Cx_zh_zh_ehr_r_k> zh)] | [(zh <any_Cx_zh_zh_ehr_r_k>)]) (ehr | ((<any_Cx_zh_zh_ehr_r> zh) | (zh <any_Cx_zh_zh_ehr_r>)))) (([(<any_Cx_y_zh_r_ax_ehr> y)] | [(y <any_Cx_y_zh_r_ax_ehr>)]) (r | ((<any_Cx_y_zh_r_ax_ehr> y) | (y <any_Cx_y_zh_r_ax_ehr>)))) (([(<any_Cx_z_y_ax_r> z)] | [(z <any_Cx_z_y_ax_r>)]) (ax | ((<any_Cx_z_y_ax_r_r> z) | (z <any_Cx_z_y_ax_r_r>)))) (([(<any_Cx_z_z_r_ax> z)] | [(z <any_Cx_z_z_r_ax>)]) (r | ((<any_Cx_z_z_r_ax> z) | (z <any_Cx_z_z_r_ax>)))) (([(<any_vowel_noSlide> w)] | [(w <any_vowel_noSlide>)]) ([(<any_Cx_z_r_w> w)] | [(w <any_Cx_z_r_w>)]) sil))
Considering guard oy with value 1 for k ...
Considering guard zh with value 1 for k ...
candidateGuards = map[oy:true zh:true]
Picking guard, oy

Running scan for frate = 105
Considering guard zh with value 2 for ehr ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard oy with value 1 for k ...
Considering guard zh with value 1 for k ...
candidateGuards = map[oy:true zh:true]
Picking guard, oy

Considering guard y with value 2 for r ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard zh with value 2 for ehr ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard z with value 1 for axr ...
Considering guard y with value 1 for axr ...
candidateGuards = map[y:true z:true]
Picking guard, z

frate, target rule = 105 public <carer> = (((sil [((t <any_Cx_k_t_b>) | (<any_Cx_k_t_b> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil b (sil [((t <any_Cx_k_t_b>) | (<any_Cx_k_t_b> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_oy_b_t_k_ehr> oy)] | [(oy <any_Cx_oy_b_t_k_ehr>)]) (k | d | ((<any_Cx_oy_b_t_k_ehr> oy) | (oy <any_Cx_oy_b_t_k_ehr>)))) (([(<any_Cx_zh_oy_ehr_r_k> zh)] | [(zh <any_Cx_zh_oy_ehr_r_k>)]) (ehr | ((<any_Cx_zh_oy_ehr_r> zh) | (zh <any_Cx_zh_oy_ehr_r>)))) (([(<any_Cx_y_zh_r_ehr> y)] | [(y <any_Cx_y_zh_r_ehr>)]) (r | ((<any_Cx_y_zh_r_axr_ehr> y) | (y <any_Cx_y_zh_r_axr_ehr>)))) (([(<any_Cx_z_y_axr_r> z)] | [(z <any_Cx_z_y_axr_r>)]) (axr | ((<any_Cx_z_y_axr_r> z) | (z <any_Cx_z_y_axr_r>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_z_axr_m> m)] | [(m <any_Cx_z_axr_m>)]) sil))
Running scan for frate = 91
Considering guard y with value 2 for r ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard oy with value 1 for k ...
Considering guard zh with value 1 for k ...
candidateGuards = map[oy:true zh:true]
Picking guard, oy

Considering guard z with value 2 for ax ...
Considering guard y with value 2 for ax ...
candidateGuards = map[y:true z:true]
Picking guard, z

Considering guard zh with value 2 for ehr ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard z with value 1 for r ...
Considering guard y with value 1 for r ...
candidateGuards = map[y:true z:true]
Picking guard, z

Considering guard y with value 2 for r ...
candidateGuards = map[y:true]
Picking guard, y

frate, target rule = 105 public <carer> = (((sil [((ch <any_Cx_k_ch_b>) | (<any_Cx_k_ch_b> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil b (sil [((ch <any_Cx_k_ch_b>) | (<any_Cx_k_ch_b> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_oy_b_ch_k_ehr> oy)] | [(oy <any_Cx_oy_b_ch_k_ehr>)]) (k | d | ((<any_Cx_oy_b_ch_k_ehr> oy) | (oy <any_Cx_oy_b_ch_k_ehr>)))) (([(<any_Cx_zh_oy_ehr_r_k> zh)] | [(zh <any_Cx_zh_oy_ehr_r_k>)]) (ehr | ((<any_Cx_zh_oy_ehr_r> zh) | (zh <any_Cx_zh_oy_ehr_r>)))) (([(<any_Cx_y_zh_r_ax_ehr> y)] | [(y <any_Cx_y_zh_r_ax_ehr>)]) (r | ((<any_Cx_y_zh_r_ax_ehr> y) | (y <any_Cx_y_zh_r_ax_ehr>)))) (([(<any_Cx_z_y_ax_r> z)] | [(z <any_Cx_z_y_ax_r>)]) (ax | ((<any_Cx_z_y_ax_r_r> z) | (z <any_Cx_z_y_ax_r_r>)))) (([(<any_Cx_z_z_r_ax> z)] | [(z <any_Cx_z_z_r_ax>)]) (r | ((<any_Cx_z_z_r_ax> z) | (z <any_Cx_z_z_r_ax>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_z_r_hh> hh)] | [(hh <any_Cx_z_r_hh>)]) sil))
Considering guard y with value 1 for axr ...
Considering guard z with value 1 for axr ...
candidateGuards = map[y:true z:true]
Picking guard, y

Running scan for frate = 91
frate, target rule = 91 public <carer> = (((sil [((ch <any_Cx_k_ch_b>) | (<any_Cx_k_ch_b> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil b (sil [((ch <any_Cx_k_ch_b>) | (<any_Cx_k_ch_b> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_oy_b_ch_k_ehr> oy)] | [(oy <any_Cx_oy_b_ch_k_ehr>)]) (k | d | ((<any_Cx_oy_b_ch_k_ehr> oy) | (oy <any_Cx_oy_b_ch_k_ehr>)))) (([(<any_Cx_zh_oy_ehr_r_k> zh)] | [(zh <any_Cx_zh_oy_ehr_r_k>)]) (ehr | ((<any_Cx_zh_oy_ehr_r> zh) | (zh <any_Cx_zh_oy_ehr_r>)))) (([(<any_Cx_y_zh_r_ehr> y)] | [(y <any_Cx_y_zh_r_ehr>)]) (r | ((<any_Cx_y_zh_r_axr_ehr> y) | (y <any_Cx_y_zh_r_axr_ehr>)))) (([(<any_Cx_y_y_axr_r> y)] | [(y <any_Cx_y_y_axr_r>)]) (axr | ((<any_Cx_y_y_axr_r> y) | (y <any_Cx_y_y_axr_r>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_y_axr_hh> hh)] | [(hh <any_Cx_y_axr_hh>)]) sil))
Considering guard zh with value 1 for k ...
Considering guard oy with value 1 for k ...
candidateGuards = map[oy:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for ehr ...
candidateGuards = map[zh:true]
Picking guard, zh

Running scan for frate = 80
Considering guard y with value 2 for r ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard zh with value 1 for k ...
Considering guard oy with value 1 for k ...
candidateGuards = map[oy:true zh:true]
Picking guard, oy

Considering guard y with value 2 for ax ...
Considering guard z with value 2 for ax ...
candidateGuards = map[y:true z:true]
Picking guard, y

Considering guard zh with value 2 for ehr ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard z with value 1 for r ...
Considering guard y with value 1 for r ...
candidateGuards = map[y:true z:true]
Picking guard, z

frate, target rule = 91 public <carer> = (((sil [((g <any_Cx_k_g_b>) | (<any_Cx_k_g_b> g))] [((g <any_vowel_noSlide>) | (<any_vowel_noSlide> g))]) | (sil b (sil [((g <any_Cx_k_g_b>) | (<any_Cx_k_g_b> g))] [((g <any_vowel_noSlide>) | (<any_vowel_noSlide> g))]))) (([(<any_Cx_zh_b_g_k_ehr> zh)] | [(zh <any_Cx_zh_b_g_k_ehr>)]) (k | d | ((<any_Cx_zh_b_g_k_ehr> zh) | (zh <any_Cx_zh_b_g_k_ehr>)))) (([(<any_Cx_zh_zh_ehr_r_k> zh)] | [(zh <any_Cx_zh_zh_ehr_r_k>)]) (ehr | ((<any_Cx_zh_zh_ehr_r> zh) | (zh <any_Cx_zh_zh_ehr_r>)))) (([(<any_Cx_y_zh_r_ax_ehr> y)] | [(y <any_Cx_y_zh_r_ax_ehr>)]) (r | ((<any_Cx_y_zh_r_ax_ehr> y) | (y <any_Cx_y_zh_r_ax_ehr>)))) (([(<any_Cx_y_y_ax_r> y)] | [(y <any_Cx_y_y_ax_r>)]) (ax | ((<any_Cx_y_y_ax_r_r> y) | (y <any_Cx_y_y_ax_r_r>)))) (([(<any_Cx_z_y_r_ax> z)] | [(z <any_Cx_z_y_r_ax>)]) (r | ((<any_Cx_z_y_r_ax> z) | (z <any_Cx_z_y_r_ax>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_z_r_thr> thr)] | [(thr <any_Cx_z_r_thr>)]) sil))
Considering guard y with value 2 for r ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard z with value 1 for axr ...
Considering guard y with value 1 for axr ...
candidateGuards = map[y:true z:true]
Picking guard, z

Running scan for frate = 80
frate, target rule = 80 public <carer> = (((sil [((p <any_Cx_k_p_b>) | (<any_Cx_k_p_b> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]) | (sil b (sil [((p <any_Cx_k_p_b>) | (<any_Cx_k_p_b> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]))) (([(<any_Cx_oy_b_p_k_ehr> oy)] | [(oy <any_Cx_oy_b_p_k_ehr>)]) (k | d | ((<any_Cx_oy_b_p_k_ehr> oy) | (oy <any_Cx_oy_b_p_k_ehr>)))) (([(<any_Cx_zh_oy_ehr_r_k> zh)] | [(zh <any_Cx_zh_oy_ehr_r_k>)]) (ehr | ((<any_Cx_zh_oy_ehr_r> zh) | (zh <any_Cx_zh_oy_ehr_r>)))) (([(<any_Cx_y_zh_r_ehr> y)] | [(y <any_Cx_y_zh_r_ehr>)]) (r | ((<any_Cx_y_zh_r_axr_ehr> y) | (y <any_Cx_y_zh_r_axr_ehr>)))) (([(<any_Cx_z_y_axr_r> z)] | [(z <any_Cx_z_y_axr_r>)]) (axr | ((<any_Cx_z_y_axr_r> z) | (z <any_Cx_z_y_axr_r>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_z_axr_thr> thr)] | [(thr <any_Cx_z_axr_thr>)]) sil))
Considering guard zh with value 1 for k ...
Considering guard oy with value 1 for k ...
candidateGuards = map[oy:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for ehr ...
candidateGuards = map[zh:true]
Picking guard, zh

Running scan for frate = 72
Considering guard y with value 2 for r ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard oy with value 1 for k ...
Considering guard zh with value 1 for k ...
candidateGuards = map[oy:true zh:true]
Picking guard, oy

Considering guard z with value 2 for ax ...
Considering guard y with value 2 for ax ...
candidateGuards = map[y:true z:true]
Picking guard, z

Considering guard zh with value 2 for ehr ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard z with value 1 for r ...
Considering guard y with value 1 for r ...
candidateGuards = map[y:true z:true]
Picking guard, y

Considering guard y with value 2 for r ...
candidateGuards = map[y:true]
Picking guard, y

frate, target rule = 80 public <carer> = (((sil [((t <any_Cx_k_t_b>) | (<any_Cx_k_t_b> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil b (sil [((t <any_Cx_k_t_b>) | (<any_Cx_k_t_b> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_zh_b_t_k_ehr> zh)] | [(zh <any_Cx_zh_b_t_k_ehr>)]) (k | d | ((<any_Cx_zh_b_t_k_ehr> zh) | (zh <any_Cx_zh_b_t_k_ehr>)))) (([(<any_Cx_zh_zh_ehr_r_k> zh)] | [(zh <any_Cx_zh_zh_ehr_r_k>)]) (ehr | ((<any_Cx_zh_zh_ehr_r> zh) | (zh <any_Cx_zh_zh_ehr_r>)))) (([(<any_Cx_y_zh_r_ax_ehr> y)] | [(y <any_Cx_y_zh_r_ax_ehr>)]) (r | ((<any_Cx_y_zh_r_ax_ehr> y) | (y <any_Cx_y_zh_r_ax_ehr>)))) (([(<any_Cx_z_y_ax_r> z)] | [(z <any_Cx_z_y_ax_r>)]) (ax | ((<any_Cx_z_y_ax_r_r> z) | (z <any_Cx_z_y_ax_r_r>)))) (([(<any_Cx_y_z_r_ax> y)] | [(y <any_Cx_y_z_r_ax>)]) (r | ((<any_Cx_y_z_r_ax> y) | (y <any_Cx_y_z_r_ax>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_y_r_thr> thr)] | [(thr <any_Cx_y_r_thr>)]) sil))
Considering guard z with value 1 for axr ...
Considering guard y with value 1 for axr ...
candidateGuards = map[y:true z:true]
Picking guard, z

Running scan for frate = 72
frate, target rule = 72 public <carer> = (((sil [((p <any_Cx_k_p_b>) | (<any_Cx_k_p_b> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]) | (sil b (sil [((p <any_Cx_k_p_b>) | (<any_Cx_k_p_b> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]))) (([(<any_Cx_oy_b_p_k_ehr> oy)] | [(oy <any_Cx_oy_b_p_k_ehr>)]) (k | d | ((<any_Cx_oy_b_p_k_ehr> oy) | (oy <any_Cx_oy_b_p_k_ehr>)))) (([(<any_Cx_zh_oy_ehr_r_k> zh)] | [(zh <any_Cx_zh_oy_ehr_r_k>)]) (ehr | ((<any_Cx_zh_oy_ehr_r> zh) | (zh <any_Cx_zh_oy_ehr_r>)))) (([(<any_Cx_y_zh_r_ehr> y)] | [(y <any_Cx_y_zh_r_ehr>)]) (r | ((<any_Cx_y_zh_r_axr_ehr> y) | (y <any_Cx_y_zh_r_axr_ehr>)))) (([(<any_Cx_z_y_axr_r> z)] | [(z <any_Cx_z_y_axr_r>)]) (axr | ((<any_Cx_z_y_axr_r> z) | (z <any_Cx_z_y_axr_r>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_z_axr_hh> hh)] | [(hh <any_Cx_z_axr_hh>)]) sil))
Considering guard oy with value 1 for k ...
Considering guard zh with value 1 for k ...
candidateGuards = map[oy:true zh:true]
Picking guard, oy

Considering guard zh with value 2 for ehr ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard y with value 2 for r ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard z with value 2 for ax ...
Considering guard y with value 2 for ax ...
candidateGuards = map[y:true z:true]
Picking guard, z

Considering guard y with value 1 for r ...
Considering guard z with value 1 for r ...
candidateGuards = map[y:true z:true]
Picking guard, y

frate, target rule = 72 public <carer> = (((sil [((g <any_Cx_k_g_b>) | (<any_Cx_k_g_b> g))] [((g <any_vowel_noSlide>) | (<any_vowel_noSlide> g))]) | (sil b (sil [((g <any_Cx_k_g_b>) | (<any_Cx_k_g_b> g))] [((g <any_vowel_noSlide>) | (<any_vowel_noSlide> g))]))) (([(<any_Cx_oy_b_g_k_ehr> oy)] | [(oy <any_Cx_oy_b_g_k_ehr>)]) (k | d | ((<any_Cx_oy_b_g_k_ehr> oy) | (oy <any_Cx_oy_b_g_k_ehr>)))) (([(<any_Cx_zh_oy_ehr_r_k> zh)] | [(zh <any_Cx_zh_oy_ehr_r_k>)]) (ehr | ((<any_Cx_zh_oy_ehr_r> zh) | (zh <any_Cx_zh_oy_ehr_r>)))) (([(<any_Cx_y_zh_r_ax_ehr> y)] | [(y <any_Cx_y_zh_r_ax_ehr>)]) (r | ((<any_Cx_y_zh_r_ax_ehr> y) | (y <any_Cx_y_zh_r_ax_ehr>)))) (([(<any_Cx_z_y_ax_r> z)] | [(z <any_Cx_z_y_ax_r>)]) (ax | ((<any_Cx_z_y_ax_r_r> z) | (z <any_Cx_z_y_ax_r_r>)))) (([(<any_Cx_y_z_r_ax> y)] | [(y <any_Cx_y_z_r_ax>)]) (r | ((<any_Cx_y_z_r_ax> y) | (y <any_Cx_y_z_r_ax>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_y_r_thr> thr)] | [(thr <any_Cx_y_r_thr>)]) sil))

results =
{72 [{sil 0 10} {k 11 21} {ehr 22 40} {r 41 49} {axr 50 60} {sil 61 71}]}
{80 [{sil 0 11} {k 12 23} {ehr 24 44} {r 45 55} {axr 56 67} {sil 68 80}]}
{91 [{sil 0 13} {k 14 28} {ehr 29 50} {r 51 63} {axr 64 95} {sil 96 130}]}
{105 [{sil 0 16} {k 17 32} {ehr 33 58} {r 59 73} {axr 74 106} {sil 107 151}]}
{125 [{sil 0 18} {k 19 36} {ehr 37 67} {r 68 88} {axr 89 122} {sil 123 178}]}

normalised results =
{72 [{sil 0 10} {k 15 29} {ehr 31 56} {r 57 68} {axr 69 83} {sil 85 99}]}
{80 [{sil 0 11} {k 15 29} {ehr 30 55} {r 56 69} {axr 70 84} {sil 85 100}]}
{91 [{sil 0 13} {k 15 31} {ehr 32 55} {r 56 69} {axr 70 104} {sil 105 143}]}
{105 [{sil 0 16} {k 16 30} {ehr 31 55} {r 56 70} {axr 70 101} {sil 102 144}]}
{125 [{sil 0 18} {k 15 29} {ehr 30 54} {r 54 70} {axr 71 98} {sil 98 142}]}

ruleAligned = [{{k 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ehr 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{r 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{axr 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {k 15 29} {ehr 31 56} {r 57 68} {axr 69 83} {sil 85 85}]}
{80 [{sil 0 0} {k 15 29} {ehr 30 55} {r 56 69} {axr 70 84} {sil 85 85}]}
{91 [{sil 0 0} {k 15 31} {ehr 32 55} {r 56 69} {axr 70 104} {sil 105 105}]}
{105 [{sil 0 0} {k 16 30} {ehr 31 55} {r 56 70} {axr 70 101} {sil 102 102}]}
{125 [{sil 0 0} {k 15 29} {ehr 30 54} {r 54 70} {axr 71 98} {sil 98 98}]}

timeAligned = [{{k 15 29} [{0 1} {1 1} {2 1} {4 1} {3 1}]} {{ehr 31 55} [{0 2} {1 2} {3 2} {4 2} {2 2}]} {{r 56 69} [{1 3} {2 3} {3 3} {4 3} {0 3}]} {{axr 70 98} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 29
i, iTime, newITime, timeStartFrom = 2 1 2 54
i, iTime, newITime, timeStartFrom = 3 2 3 68
combinedVerdict    = [{k 0} {ehr 0} {r 0} {axr 0}]
ruleAlignedVerdict = [{k 0} {ehr 0} {r 0} {axr 0}]

score->
+2 for k
+2 for ehr
+2 for r
+2 for axr
score<-: 13

results =
{72 [{sil 0 10} {k 11 21} {ehr 22 27} {r 28 30} {ax 31 42} {r 43 49} {sil 50 71}]}
{80 [{sil 0 11} {k 12 23} {ehr 24 31} {r 32 34} {ax 35 47} {r 48 55} {sil 56 80}]}
{91 [{sil 0 13} {k 14 28} {ehr 29 50} {r 51 63} {ax 64 70} {d 71 73} {z 74 76} {sil 77 130}]}
{105 [{sil 0 16} {k 17 32} {ehr 33 58} {r 59 73} {ax 74 81} {d 82 85} {z 86 88} {sil 89 151}]}
{125 [{sil 0 18} {k 19 36} {ehr 37 67} {r 68 86} {ax 87 96} {r 97 99} {sil 100 178}]}

normalised results =
{72 [{sil 0 10} {k 15 29} {ehr 31 38} {r 39 39} {ax 43 58} {r 60 68} {sil 69 99}]}
{80 [{sil 0 11} {k 15 29} {ehr 30 39} {r 40 40} {ax 44 59} {r 60 69} {sil 70 100}]}
{91 [{sil 0 13} {k 15 31} {ehr 32 55} {r 56 69} {ax 70 77} {d 78 78} {z 81 81} {sil 85 143}]}
{105 [{sil 0 16} {k 16 30} {ehr 31 55} {r 56 70} {ax 70 77} {d 78 81} {z 82 82} {sil 85 144}]}
{125 [{sil 0 18} {k 15 29} {ehr 30 54} {r 54 69} {ax 70 77} {r 78 78} {sil 80 142}]}

ruleAligned = [{{k 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ehr 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{r 1} [{2 3} {3 3} {4 3}]} {{ax 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{r 2} [{0 5} {1 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {k 15 29} {ehr 31 38} {r 39 39} {ax 43 58} {r 60 68} {sil 69 69}]}
{80 [{sil 0 0} {k 15 29} {ehr 30 39} {r 40 40} {ax 44 59} {r 60 69} {sil 70 70}]}
{91 [{sil 0 0} {k 15 31} {ehr 32 55} {r 56 69} {ax 70 77} {d 78 78} {z 81 81} {sil 85 85}]}
{105 [{sil 0 0} {k 16 30} {ehr 31 55} {r 56 70} {ax 70 77} {d 78 78} {z 82 82} {sil 85 85}]}
{125 [{sil 0 0} {k 15 29} {ehr 30 54} {r 54 69} {ax 70 77} {r 78 78} {sil 80 80}]}

timeAligned = [{{k 15 29} [{0 1} {1 1} {2 1} {4 1} {3 1}]} {{ehr 31 54} [{0 2} {1 2} {3 2} {4 2} {2 2}]} {{r 56 69} [{2 3} {3 3} {4 3} {0 5} {1 5}]} {{ax 70 77} [{2 4} {3 4} {4 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 29
i, iTime, newITime, timeStartFrom = 2 1 2 38
i, iTime, newITime, timeStartFrom = 3 2 3 69
i, iTime, newITime, timeStartFrom = 4 3 -1 77
combinedVerdict    = [{k 0} {ehr 0} {r 1} {ax 0} {r 2}]
ruleAlignedVerdict = [{k 0} {ehr 0} {r 1} {ax 0} {r 2}]

score->
+2 for k
+2 for ehr
+1 for r
+2 for ax
-2 for r
score<-: 5
testPronounce k good ehr good r good axr good
publish->
phonsToAlphas = [{[k] c} {[ehr] a} {[r] r} {[axr] er}]
getVerdict<-:new {c [k] 0}
getVerdict<-:new {a [ehr] 0}
getVerdict<-:new {r [r] 0}
getVerdict<-:new {er [axr] 0}
lettersVerdicts = [{c [k] 0} {a [ehr] 0} {r [r] 0} {er [axr] 0}]
publish<-
{
  "word": "carer",
  "results": [
    {
      "letters": "c",
      "phonemes": "k",
      "verdict": "good"
    },
    {
      "letters": "a",
      "phonemes": "ɛː",
      "verdict": "good"
    },
    {
      "letters": "r",
      "phonemes": "ɹ",
      "verdict": "good"
    },
    {
      "letters": "er",
      "phonemes": "əɹ",
      "verdict": "good"
    }
  ],
  "err": null
}
