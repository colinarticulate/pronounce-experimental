Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_7ca23391-e9af-4703-a63d-3dbb5c71bf33 audiofile /Users/test/go/src/Phonemes/audio_clips/diner1_paul.wav word diner dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  1.462438



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.31999999999999995 1 1.3199999999999998

 start3, duration3, end3 =  0.36 0.82 1.18

 Initial start, duration, end =  0.21999999999999995 1.0999999999999999 1.3199999999999998

 Cut at: start, duration =  0.21999999999999995 1.222438     guard_end =  1.4424379999999999 

Running scan for frate = 125
Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 1.6 for n ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 0.8 for axr ...
Considering guard sh with value 0.8 for axr ...
candidateGuards = map[sh:true zh:true]
Picking guard, zh

frate, target rule = 125 public <diner> = (((sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_d> sh)] | [(sh <any_Cx_sh_p_z_d>)]) (d | ((<any_Cx_sh_p_z_d> sh) | (sh <any_Cx_sh_p_z_d>)))) ((([(<any_Vx_sh_sh_ay_noSlide> sh)] | [(sh <any_Vx_sh_sh_ay_noSlide>)]) ([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)])) (ay | ((<any_Vx_sh_sh_ay_noSlide> sh) | (sh <any_Vx_sh_sh_ay_noSlide>)))) (([(<any_Cx_zh_sh_n> zh)] | [(zh <any_Cx_zh_sh_n>)]) (n | ((<any_Cx_zh_sh_n_axr> zh) | (zh <any_Cx_zh_sh_n_axr>)))) (([(<any_Cx_zh_zh_axr_n> zh)] | [(zh <any_Cx_zh_zh_axr_n>)]) (axr | ((<any_Cx_zh_zh_axr_n> zh) | (zh <any_Cx_zh_zh_axr_n>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_thr> thr)] | [(thr <any_Cx_zh_axr_thr>)]) sil))
Running scan for frate = 105
Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 1.6 for n ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 0.8 for axr ...
Considering guard sh with value 0.8 for axr ...
candidateGuards = map[sh:true zh:true]
Picking guard, zh

frate, target rule = 105 public <diner> = (((sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_d> sh)] | [(sh <any_Cx_sh_p_z_d>)]) (d | ((<any_Cx_sh_p_z_d> sh) | (sh <any_Cx_sh_p_z_d>)))) ((([(<any_Vx_sh_sh_ay_noSlide> sh)] | [(sh <any_Vx_sh_sh_ay_noSlide>)]) ([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)])) (ay | ((<any_Vx_sh_sh_ay_noSlide> sh) | (sh <any_Vx_sh_sh_ay_noSlide>)))) (([(<any_Cx_zh_sh_n> zh)] | [(zh <any_Cx_zh_sh_n>)]) (n | ((<any_Cx_zh_sh_n_axr> zh) | (zh <any_Cx_zh_sh_n_axr>)))) (([(<any_Cx_zh_zh_axr_n> zh)] | [(zh <any_Cx_zh_zh_axr_n>)]) (axr | ((<any_Cx_zh_zh_axr_n> zh) | (zh <any_Cx_zh_zh_axr_n>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_hh> hh)] | [(hh <any_Cx_zh_axr_hh>)]) sil))
Running scan for frate = 91
Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 1.6 for n ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 0.8 for axr ...
Considering guard sh with value 0.8 for axr ...
candidateGuards = map[sh:true zh:true]
Picking guard, zh

frate, target rule = 91 public <diner> = (((sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_d> sh)] | [(sh <any_Cx_sh_p_z_d>)]) (d | ((<any_Cx_sh_p_z_d> sh) | (sh <any_Cx_sh_p_z_d>)))) ((([(<any_Vx_sh_sh_ay_noSlide> sh)] | [(sh <any_Vx_sh_sh_ay_noSlide>)]) ([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)])) (ay | ((<any_Vx_sh_sh_ay_noSlide> sh) | (sh <any_Vx_sh_sh_ay_noSlide>)))) (([(<any_Cx_zh_sh_n> zh)] | [(zh <any_Cx_zh_sh_n>)]) (n | ((<any_Cx_zh_sh_n_axr> zh) | (zh <any_Cx_zh_sh_n_axr>)))) (([(<any_Cx_zh_zh_axr_n> zh)] | [(zh <any_Cx_zh_zh_axr_n>)]) (axr | ((<any_Cx_zh_zh_axr_n> zh) | (zh <any_Cx_zh_zh_axr_n>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_n> n)] | [(n <any_Cx_zh_axr_n>)]) sil))
Running scan for frate = 80
Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 1.6 for n ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 0.8 for axr ...
Considering guard sh with value 0.8 for axr ...
candidateGuards = map[sh:true zh:true]
Picking guard, zh

frate, target rule = 80 public <diner> = (((sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_d> sh)] | [(sh <any_Cx_sh_p_z_d>)]) (d | ((<any_Cx_sh_p_z_d> sh) | (sh <any_Cx_sh_p_z_d>)))) ((([(<any_Vx_sh_sh_ay_noSlide> sh)] | [(sh <any_Vx_sh_sh_ay_noSlide>)]) ([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)])) (ay | ((<any_Vx_sh_sh_ay_noSlide> sh) | (sh <any_Vx_sh_sh_ay_noSlide>)))) (([(<any_Cx_zh_sh_n> zh)] | [(zh <any_Cx_zh_sh_n>)]) (n | ((<any_Cx_zh_sh_n_axr> zh) | (zh <any_Cx_zh_sh_n_axr>)))) (([(<any_Cx_zh_zh_axr_n> zh)] | [(zh <any_Cx_zh_zh_axr_n>)]) (axr | ((<any_Cx_zh_zh_axr_n> zh) | (zh <any_Cx_zh_zh_axr_n>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_hh> hh)] | [(hh <any_Cx_zh_axr_hh>)]) sil))
Running scan for frate = 72
Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 1.6 for n ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 0.8 for axr ...
Considering guard zh with value 0.8 for axr ...
candidateGuards = map[sh:true zh:true]
Picking guard, sh

frate, target rule = 72 public <diner> = (((sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_d> sh)] | [(sh <any_Cx_sh_p_z_d>)]) (d | ((<any_Cx_sh_p_z_d> sh) | (sh <any_Cx_sh_p_z_d>)))) ((([(<any_Vx_sh_sh_ay_noSlide> sh)] | [(sh <any_Vx_sh_sh_ay_noSlide>)]) ([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)])) (ay | ((<any_Vx_sh_sh_ay_noSlide> sh) | (sh <any_Vx_sh_sh_ay_noSlide>)))) (([(<any_Cx_zh_sh_n> zh)] | [(zh <any_Cx_zh_sh_n>)]) (n | ((<any_Cx_zh_sh_n_axr> zh) | (zh <any_Cx_zh_sh_n_axr>)))) (([(<any_Cx_sh_zh_axr_n> sh)] | [(sh <any_Cx_sh_zh_axr_n>)]) (axr | ((<any_Cx_sh_zh_axr_n> sh) | (sh <any_Cx_sh_zh_axr_n>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_sh_axr_thr> thr)] | [(thr <any_Cx_sh_axr_thr>)]) sil))

results =
{72 [{sil 0 16} {d 17 30} {ay 31 44} {n 45 47} {axr 48 66} {sil 67 75}]}
{80 [{sil 0 18} {d 19 33} {ay 34 49} {n 50 53} {axr 54 74} {sil 75 81}]}
{91 [{sil 0 19} {m 20 26} {z 27 29} {d 30 38} {ay 39 56} {n 57 61} {axr 62 100} {sil 101 109}]}
{105 [{sil 0 23} {m 24 30} {z 31 34} {d 35 44} {ay 45 65} {n 66 71} {axr 72 110} {sil 111 127}]}
{125 [{sil 0 28} {d 29 50} {ay 51 76} {n 77 82} {axr 83 128} {sil 129 149}]}

normalised results =
{72 [{sil 0 16} {d 24 42} {ay 43 61} {n 63 63} {axr 67 92} {sil 93 104}]}
{80 [{sil 0 18} {d 24 41} {ay 43 61} {n 63 66} {axr 68 93} {sil 94 101}]}
{91 [{sil 0 19} {m 22 29} {z 30 30} {d 33 42} {ay 43 62} {n 63 67} {axr 68 110} {sil 111 120}]}
{105 [{sil 0 23} {m 23 29} {z 30 32} {d 33 42} {ay 43 62} {n 63 68} {axr 69 105} {sil 106 121}]}
{125 [{sil 0 28} {d 23 40} {ay 41 61} {n 62 66} {axr 66 102} {sil 103 119}]}

ruleAligned = [{{d 0} [{0 1} {1 1} {2 3} {3 3} {4 1}]} {{ay 0} [{0 2} {1 2} {2 4} {3 4} {4 2}]} {{n 0} [{1 3} {2 5} {3 5} {4 3}]} {{axr 0} [{0 4} {1 4} {2 6} {3 6} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {d 24 42} {ay 43 61} {n 63 63} {axr 67 92} {sil 93 93}]}
{80 [{sil 0 0} {d 24 41} {ay 43 61} {n 63 66} {axr 68 93} {sil 94 94}]}
{91 [{sil 0 0} {m 22 29} {z 30 30} {d 33 42} {ay 43 62} {n 63 67} {axr 68 110} {sil 111 111}]}
{105 [{sil 0 0} {m 23 29} {z 30 30} {d 33 42} {ay 43 62} {n 63 68} {axr 69 105} {sil 106 106}]}
{125 [{sil 0 0} {d 23 40} {ay 41 61} {n 62 66} {axr 66 102} {sil 103 103}]}

timeAligned = [{{d 24 42} [{0 1} {1 1} {4 1} {2 3} {3 3}]} {{ay 43 61} [{0 2} {1 2} {2 4} {3 4} {4 2}]} {{n 63 66} [{1 3} {2 5} {3 5} {4 3}]} {{axr 68 102} [{0 4} {1 4} {2 6} {4 4} {3 6}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 40
i, iTime, newITime, timeStartFrom = 2 1 2 61
i, iTime, newITime, timeStartFrom = 3 2 3 66
combinedVerdict    = [{d 0} {ay 0} {n 0} {axr 0}]
ruleAlignedVerdict = [{d 0} {ay 0} {n 0} {axr 0}]

score->
+2 for d
+2 for ay
+2 for n
+2 for axr
score<-: 13
testPronounce d good ay good n good axr good
publish->
phonsToAlphas = [{[d] d} {[ay] i} {[n] n} {[axr] er}]
getVerdict<-:new {d [d] 0}
getVerdict<-:new {i [ay] 0}
getVerdict<-:new {n [n] 0}
getVerdict<-:new {er [axr] 0}
lettersVerdicts = [{d [d] 0} {i [ay] 0} {n [n] 0} {er [axr] 0}]
publish<-
{
  "word": "diner",
  "results": [
    {
      "letters": "d",
      "phonemes": "d",
      "verdict": "good"
    },
    {
      "letters": "i",
      "phonemes": "ɑɪ",
      "verdict": "good"
    },
    {
      "letters": "n",
      "phonemes": "n",
      "verdict": "good"
    },
    {
      "letters": "er",
      "phonemes": "əɹ",
      "verdict": "good"
    }
  ],
  "err": null
}
