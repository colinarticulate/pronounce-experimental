Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_145b30bc-9856-49a6-af1b-136e0e9f6023 audiofile /Users/test/go/src/Phonemes/audio_clips/abandoned1_tomo.wav word abandoned dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  4.565



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.7000000000000001 1 1.7000000000000002

 start3, duration3, end3 =  0.72 0.88 1.6

 Initial start, duration, end =  0.6000000000000001 1.1 1.7000000000000002

 Cut at: start, duration =  0.6000000000000001 1.55     guard_end =  2.1500000000000004 

Running scan for frate = 125
Considering guard jh with value 1 for ax ...
Considering guard zh with value 1 for ax ...
Considering guard sh with value 1 for ax ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, jh

Running scan for frate = 125
Considering guard zh with value 2 for b ...
Considering guard sh with value 2 for b ...
Considering guard jh with value 2 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for ae ...
Considering guard sh with value 2 for ae ...
Considering guard jh with value 2 for ae ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, sh

Considering guard jh with value 1 for ax ...
Considering guard zh with value 1 for ax ...
Considering guard sh with value 1 for ax ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, jh

Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for b ...
Considering guard zh with value 2 for b ...
Considering guard jh with value 2 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, sh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard jh with value 2 for ae ...
Considering guard zh with value 2 for ae ...
Considering guard sh with value 2 for ae ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, jh

Considering guard sh with value 6 for axn ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 125 public <abandoned> = (((sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_jh_p_z_ax_b> jh)] | [(jh <any_Cx_jh_p_z_ax_b>)]) (ax | ((<any_Cx_jh_p_z_ax_b> jh) | (jh <any_Cx_jh_p_z_ax_b>)))) (([(<any_Cx_zh_jh_b_ax> zh)] | [(zh <any_Cx_zh_jh_b_ax>)]) (b | ((<any_Cx_zh_jh_b> zh) | (zh <any_Cx_zh_jh_b>)))) ((([(<any_Vx_sh_zh_ae_noSlide> sh)] | [(sh <any_Vx_sh_zh_ae_noSlide>)]) ([(<any_Cx_sh_zh_n_b> sh)] | [(sh <any_Cx_sh_zh_n_b>)])) (ae | ((<any_Vx_sh_zh_ae_noSlide> sh) | (sh <any_Vx_sh_zh_ae_noSlide>)))) (([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)]) (n | ((<any_Cx_sh_sh_n_d> sh) | (sh <any_Cx_sh_sh_n_d>)))) (([(<any_Cx_sh_sh_d_axn_n> sh)] | [(sh <any_Cx_sh_sh_d_axn_n>)]) (d | ((<any_Cx_sh_sh_d_axn_n> sh) | (sh <any_Cx_sh_sh_d_axn_n>)))) (([(<any_Cx_sh_sh_axn_d> sh)] | [(sh <any_Cx_sh_sh_axn_d>)]) (axn | ((<any_Cx_sh_sh_axn_d_d> sh) | (sh <any_Cx_sh_sh_axn_d_d>)))) (([(<any_Cx_sh_sh_d_axn> sh)] | [(sh <any_Cx_sh_sh_d_axn>)]) (d | ((<any_Cx_sh_sh_d_axn> sh) | (sh <any_Cx_sh_sh_d_axn>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_v> v)] | [(v <any_Cx_sh_d_v>)]) sil))
Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 105
frate, target rule = 125 public <abandoned> = (((sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_jh_p_z_ax_b> jh)] | [(jh <any_Cx_jh_p_z_ax_b>)]) (ax | ((<any_Cx_jh_p_z_ax_b> jh) | (jh <any_Cx_jh_p_z_ax_b>)))) (([(<any_Cx_sh_jh_b_ax> sh)] | [(sh <any_Cx_sh_jh_b_ax>)]) (b | ((<any_Cx_sh_jh_b> sh) | (sh <any_Cx_sh_jh_b>)))) ((([(<any_Vx_jh_sh_ae_noSlide> jh)] | [(jh <any_Vx_jh_sh_ae_noSlide>)]) ([(<any_Cx_jh_sh_n_b> jh)] | [(jh <any_Cx_jh_sh_n_b>)])) (ae | ((<any_Vx_jh_sh_ae_noSlide> jh) | (jh <any_Vx_jh_sh_ae_noSlide>)))) (([(<any_Cx_sh_jh_n_d> sh)] | [(sh <any_Cx_sh_jh_n_d>)]) (n | ((<any_Cx_sh_jh_n_d> sh) | (sh <any_Cx_sh_jh_n_d>)))) (([(<any_Cx_sh_sh_d_ax_n> sh)] | [(sh <any_Cx_sh_sh_d_ax_n>)]) (d | ((<any_Cx_sh_sh_d_ax_n> sh) | (sh <any_Cx_sh_sh_d_ax_n>)))) (([(<any_Cx_sh_sh_ax_n_d> sh)] | [(sh <any_Cx_sh_sh_ax_n_d>)]) (ax | ((<any_Cx_sh_sh_ax_n_d> sh) | (sh <any_Cx_sh_sh_ax_n_d>)))) (([(<any_Cx_sh_sh_n_ax> sh)] | [(sh <any_Cx_sh_sh_n_ax>)]) (n | ((<any_Cx_sh_sh_n_d_ax> sh) | (sh <any_Cx_sh_sh_n_d_ax>)))) (([(<any_Cx_sh_sh_d_n> sh)] | [(sh <any_Cx_sh_sh_d_n>)]) (d | ((<any_Cx_sh_sh_d_n> sh) | (sh <any_Cx_sh_sh_d_n>)))) (([(<any_vowel_noSlide> dh)] | [(dh <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_dh> dh)] | [(dh <any_Cx_sh_d_dh>)]) sil))
Considering guard jh with value 1 for ax ...
Considering guard zh with value 1 for ax ...
Considering guard sh with value 1 for ax ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, zh

Considering guard jh with value 2 for b ...
Considering guard sh with value 2 for b ...
Considering guard zh with value 2 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, jh

Running scan for frate = 105
Considering guard zh with value 2 for ae ...
Considering guard sh with value 2 for ae ...
Considering guard jh with value 2 for ae ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, zh

Considering guard jh with value 1 for ax ...
Considering guard sh with value 1 for ax ...
Considering guard zh with value 1 for ax ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, jh

Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 2 for b ...
Considering guard jh with value 2 for b ...
Considering guard sh with value 2 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, zh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard jh with value 2 for ae ...
Considering guard sh with value 2 for ae ...
Considering guard zh with value 2 for ae ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, zh

Considering guard sh with value 6 for axn ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 105 public <abandoned> = (((sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_ax_b> zh)] | [(zh <any_Cx_zh_p_z_ax_b>)]) (ax | ((<any_Cx_zh_p_z_ax_b> zh) | (zh <any_Cx_zh_p_z_ax_b>)))) (([(<any_Cx_jh_zh_b_ax> jh)] | [(jh <any_Cx_jh_zh_b_ax>)]) (b | ((<any_Cx_jh_zh_b> jh) | (jh <any_Cx_jh_zh_b>)))) ((([(<any_Vx_zh_jh_ae_noSlide> zh)] | [(zh <any_Vx_zh_jh_ae_noSlide>)]) ([(<any_Cx_zh_jh_n_b> zh)] | [(zh <any_Cx_zh_jh_n_b>)])) (ae | ((<any_Vx_zh_jh_ae_noSlide> zh) | (zh <any_Vx_zh_jh_ae_noSlide>)))) (([(<any_Cx_sh_zh_n_d> sh)] | [(sh <any_Cx_sh_zh_n_d>)]) (n | ((<any_Cx_sh_zh_n_d> sh) | (sh <any_Cx_sh_zh_n_d>)))) (([(<any_Cx_sh_sh_d_axn_n> sh)] | [(sh <any_Cx_sh_sh_d_axn_n>)]) (d | ((<any_Cx_sh_sh_d_axn_n> sh) | (sh <any_Cx_sh_sh_d_axn_n>)))) (([(<any_Cx_sh_sh_axn_d> sh)] | [(sh <any_Cx_sh_sh_axn_d>)]) (axn | ((<any_Cx_sh_sh_axn_d_d> sh) | (sh <any_Cx_sh_sh_axn_d_d>)))) (([(<any_Cx_sh_sh_d_axn> sh)] | [(sh <any_Cx_sh_sh_d_axn>)]) (d | ((<any_Cx_sh_sh_d_axn> sh) | (sh <any_Cx_sh_sh_d_axn>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_b> b)] | [(b <any_Cx_sh_d_b>)]) sil))
Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 91
frate, target rule = 105 public <abandoned> = (((sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_jh_p_z_ax_b> jh)] | [(jh <any_Cx_jh_p_z_ax_b>)]) (ax | ((<any_Cx_jh_p_z_ax_b> jh) | (jh <any_Cx_jh_p_z_ax_b>)))) (([(<any_Cx_zh_jh_b_ax> zh)] | [(zh <any_Cx_zh_jh_b_ax>)]) (b | ((<any_Cx_zh_jh_b> zh) | (zh <any_Cx_zh_jh_b>)))) ((([(<any_Vx_zh_zh_ae_noSlide> zh)] | [(zh <any_Vx_zh_zh_ae_noSlide>)]) ([(<any_Cx_zh_zh_n_b> zh)] | [(zh <any_Cx_zh_zh_n_b>)])) (ae | ((<any_Vx_zh_zh_ae_noSlide> zh) | (zh <any_Vx_zh_zh_ae_noSlide>)))) (([(<any_Cx_sh_zh_n_d> sh)] | [(sh <any_Cx_sh_zh_n_d>)]) (n | ((<any_Cx_sh_zh_n_d> sh) | (sh <any_Cx_sh_zh_n_d>)))) (([(<any_Cx_sh_sh_d_ax_n> sh)] | [(sh <any_Cx_sh_sh_d_ax_n>)]) (d | ((<any_Cx_sh_sh_d_ax_n> sh) | (sh <any_Cx_sh_sh_d_ax_n>)))) (([(<any_Cx_sh_sh_ax_n_d> sh)] | [(sh <any_Cx_sh_sh_ax_n_d>)]) (ax | ((<any_Cx_sh_sh_ax_n_d> sh) | (sh <any_Cx_sh_sh_ax_n_d>)))) (([(<any_Cx_sh_sh_n_ax> sh)] | [(sh <any_Cx_sh_sh_n_ax>)]) (n | ((<any_Cx_sh_sh_n_d_ax> sh) | (sh <any_Cx_sh_sh_n_d_ax>)))) (([(<any_Cx_sh_sh_d_n> sh)] | [(sh <any_Cx_sh_sh_d_n>)]) (d | ((<any_Cx_sh_sh_d_n> sh) | (sh <any_Cx_sh_sh_d_n>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_g> g)] | [(g <any_Cx_sh_d_g>)]) sil))
Considering guard zh with value 1 for ax ...
Considering guard sh with value 1 for ax ...
Considering guard jh with value 1 for ax ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, zh

Considering guard jh with value 2 for b ...
Considering guard zh with value 2 for b ...
Considering guard sh with value 2 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, jh

Running scan for frate = 91
Considering guard zh with value 2 for ae ...
Considering guard sh with value 2 for ae ...
Considering guard jh with value 2 for ae ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, sh

Considering guard sh with value 1 for ax ...
Considering guard jh with value 1 for ax ...
Considering guard zh with value 1 for ax ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, sh

Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard jh with value 2 for b ...
Considering guard zh with value 2 for b ...
Considering guard sh with value 2 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, sh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for axn ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard jh with value 2 for ae ...
Considering guard sh with value 2 for ae ...
Considering guard zh with value 2 for ae ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, jh

frate, target rule = 91 public <abandoned> = (((sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_ax_b> zh)] | [(zh <any_Cx_zh_p_z_ax_b>)]) (ax | ((<any_Cx_zh_p_z_ax_b> zh) | (zh <any_Cx_zh_p_z_ax_b>)))) (([(<any_Cx_jh_zh_b_ax> jh)] | [(jh <any_Cx_jh_zh_b_ax>)]) (b | ((<any_Cx_jh_zh_b> jh) | (jh <any_Cx_jh_zh_b>)))) ((([(<any_Vx_sh_jh_ae_noSlide> sh)] | [(sh <any_Vx_sh_jh_ae_noSlide>)]) ([(<any_Cx_sh_jh_n_b> sh)] | [(sh <any_Cx_sh_jh_n_b>)])) (ae | ((<any_Vx_sh_jh_ae_noSlide> sh) | (sh <any_Vx_sh_jh_ae_noSlide>)))) (([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)]) (n | ((<any_Cx_sh_sh_n_d> sh) | (sh <any_Cx_sh_sh_n_d>)))) (([(<any_Cx_sh_sh_d_axn_n> sh)] | [(sh <any_Cx_sh_sh_d_axn_n>)]) (d | ((<any_Cx_sh_sh_d_axn_n> sh) | (sh <any_Cx_sh_sh_d_axn_n>)))) (([(<any_Cx_sh_sh_axn_d> sh)] | [(sh <any_Cx_sh_sh_axn_d>)]) (axn | ((<any_Cx_sh_sh_axn_d_d> sh) | (sh <any_Cx_sh_sh_axn_d_d>)))) (([(<any_Cx_sh_sh_d_axn> sh)] | [(sh <any_Cx_sh_sh_d_axn>)]) (d | ((<any_Cx_sh_sh_d_axn> sh) | (sh <any_Cx_sh_sh_d_axn>)))) (([(<any_vowel_noSlide> dh)] | [(dh <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_dh> dh)] | [(dh <any_Cx_sh_d_dh>)]) sil))
Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 80
Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for ax ...
Considering guard zh with value 1 for ax ...
Considering guard jh with value 1 for ax ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for b ...
Considering guard jh with value 2 for b ...
Considering guard zh with value 2 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, sh

frate, target rule = 91 public <abandoned> = (((sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_ax_b> sh)] | [(sh <any_Cx_sh_p_z_ax_b>)]) (ax | ((<any_Cx_sh_p_z_ax_b> sh) | (sh <any_Cx_sh_p_z_ax_b>)))) (([(<any_Cx_sh_sh_b_ax> sh)] | [(sh <any_Cx_sh_sh_b_ax>)]) (b | ((<any_Cx_sh_sh_b> sh) | (sh <any_Cx_sh_sh_b>)))) ((([(<any_Vx_jh_sh_ae_noSlide> jh)] | [(jh <any_Vx_jh_sh_ae_noSlide>)]) ([(<any_Cx_jh_sh_n_b> jh)] | [(jh <any_Cx_jh_sh_n_b>)])) (ae | ((<any_Vx_jh_sh_ae_noSlide> jh) | (jh <any_Vx_jh_sh_ae_noSlide>)))) (([(<any_Cx_sh_jh_n_d> sh)] | [(sh <any_Cx_sh_jh_n_d>)]) (n | ((<any_Cx_sh_jh_n_d> sh) | (sh <any_Cx_sh_jh_n_d>)))) (([(<any_Cx_sh_sh_d_ax_n> sh)] | [(sh <any_Cx_sh_sh_d_ax_n>)]) (d | ((<any_Cx_sh_sh_d_ax_n> sh) | (sh <any_Cx_sh_sh_d_ax_n>)))) (([(<any_Cx_sh_sh_ax_n_d> sh)] | [(sh <any_Cx_sh_sh_ax_n_d>)]) (ax | ((<any_Cx_sh_sh_ax_n_d> sh) | (sh <any_Cx_sh_sh_ax_n_d>)))) (([(<any_Cx_sh_sh_n_ax> sh)] | [(sh <any_Cx_sh_sh_n_ax>)]) (n | ((<any_Cx_sh_sh_n_d_ax> sh) | (sh <any_Cx_sh_sh_n_d_ax>)))) (([(<any_Cx_sh_sh_d_n> sh)] | [(sh <any_Cx_sh_sh_d_n>)]) (d | ((<any_Cx_sh_sh_d_n> sh) | (sh <any_Cx_sh_sh_d_n>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_b> b)] | [(b <any_Cx_sh_d_b>)]) sil))
Considering guard zh with value 2 for ae ...
Considering guard jh with value 2 for ae ...
Considering guard sh with value 2 for ae ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, zh

Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 80
Considering guard sh with value 6 for axn ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard jh with value 1 for ax ...
Considering guard sh with value 1 for ax ...
Considering guard zh with value 1 for ax ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, jh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard jh with value 2 for b ...
Considering guard sh with value 2 for b ...
Considering guard zh with value 2 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, jh

frate, target rule = 80 public <abandoned> = (((sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_ax_b> sh)] | [(sh <any_Cx_sh_p_z_ax_b>)]) (ax | ((<any_Cx_sh_p_z_ax_b> sh) | (sh <any_Cx_sh_p_z_ax_b>)))) (([(<any_Cx_sh_sh_b_ax> sh)] | [(sh <any_Cx_sh_sh_b_ax>)]) (b | ((<any_Cx_sh_sh_b> sh) | (sh <any_Cx_sh_sh_b>)))) ((([(<any_Vx_zh_sh_ae_noSlide> zh)] | [(zh <any_Vx_zh_sh_ae_noSlide>)]) ([(<any_Cx_zh_sh_n_b> zh)] | [(zh <any_Cx_zh_sh_n_b>)])) (ae | ((<any_Vx_zh_sh_ae_noSlide> zh) | (zh <any_Vx_zh_sh_ae_noSlide>)))) (([(<any_Cx_sh_zh_n_d> sh)] | [(sh <any_Cx_sh_zh_n_d>)]) (n | ((<any_Cx_sh_zh_n_d> sh) | (sh <any_Cx_sh_zh_n_d>)))) (([(<any_Cx_sh_sh_d_axn_n> sh)] | [(sh <any_Cx_sh_sh_d_axn_n>)]) (d | ((<any_Cx_sh_sh_d_axn_n> sh) | (sh <any_Cx_sh_sh_d_axn_n>)))) (([(<any_Cx_sh_sh_axn_d> sh)] | [(sh <any_Cx_sh_sh_axn_d>)]) (axn | ((<any_Cx_sh_sh_axn_d_d> sh) | (sh <any_Cx_sh_sh_axn_d_d>)))) (([(<any_Cx_sh_sh_d_axn> sh)] | [(sh <any_Cx_sh_sh_d_axn>)]) (d | ((<any_Cx_sh_sh_d_axn> sh) | (sh <any_Cx_sh_sh_d_axn>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_v> v)] | [(v <any_Cx_sh_d_v>)]) sil))
Considering guard jh with value 2 for ae ...
Considering guard zh with value 2 for ae ...
Considering guard sh with value 2 for ae ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, zh

Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 72
Considering guard sh with value 6 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 1 for ax ...
Considering guard jh with value 1 for ax ...
Considering guard sh with value 1 for ax ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, zh

frate, target rule = 80 public <abandoned> = (((sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_jh_p_z_ax_b> jh)] | [(jh <any_Cx_jh_p_z_ax_b>)]) (ax | ((<any_Cx_jh_p_z_ax_b> jh) | (jh <any_Cx_jh_p_z_ax_b>)))) (([(<any_Cx_jh_jh_b_ax> jh)] | [(jh <any_Cx_jh_jh_b_ax>)]) (b | ((<any_Cx_jh_jh_b> jh) | (jh <any_Cx_jh_jh_b>)))) ((([(<any_Vx_zh_jh_ae_noSlide> zh)] | [(zh <any_Vx_zh_jh_ae_noSlide>)]) ([(<any_Cx_zh_jh_n_b> zh)] | [(zh <any_Cx_zh_jh_n_b>)])) (ae | ((<any_Vx_zh_jh_ae_noSlide> zh) | (zh <any_Vx_zh_jh_ae_noSlide>)))) (([(<any_Cx_sh_zh_n_d> sh)] | [(sh <any_Cx_sh_zh_n_d>)]) (n | ((<any_Cx_sh_zh_n_d> sh) | (sh <any_Cx_sh_zh_n_d>)))) (([(<any_Cx_sh_sh_d_ax_n> sh)] | [(sh <any_Cx_sh_sh_d_ax_n>)]) (d | ((<any_Cx_sh_sh_d_ax_n> sh) | (sh <any_Cx_sh_sh_d_ax_n>)))) (([(<any_Cx_sh_sh_ax_n_d> sh)] | [(sh <any_Cx_sh_sh_ax_n_d>)]) (ax | ((<any_Cx_sh_sh_ax_n_d> sh) | (sh <any_Cx_sh_sh_ax_n_d>)))) (([(<any_Cx_sh_sh_n_ax> sh)] | [(sh <any_Cx_sh_sh_n_ax>)]) (n | ((<any_Cx_sh_sh_n_d_ax> sh) | (sh <any_Cx_sh_sh_n_d_ax>)))) (([(<any_Cx_sh_sh_d_n> sh)] | [(sh <any_Cx_sh_sh_d_n>)]) (d | ((<any_Cx_sh_sh_d_n> sh) | (sh <any_Cx_sh_sh_d_n>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_b> b)] | [(b <any_Cx_sh_d_b>)]) sil))
Considering guard zh with value 2 for b ...
Considering guard sh with value 2 for b ...
Considering guard jh with value 2 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, zh

Considering guard jh with value 2 for ae ...
Considering guard zh with value 2 for ae ...
Considering guard sh with value 2 for ae ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, jh

Running scan for frate = 72
Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for ax ...
Considering guard jh with value 1 for ax ...
Considering guard zh with value 1 for ax ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, sh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for axn ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for b ...
Considering guard zh with value 2 for b ...
Considering guard jh with value 2 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, jh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard jh with value 2 for ae ...
Considering guard sh with value 2 for ae ...
Considering guard zh with value 2 for ae ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, jh

Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 72 public <abandoned> = (((sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_ax_b> zh)] | [(zh <any_Cx_zh_p_z_ax_b>)]) (ax | ((<any_Cx_zh_p_z_ax_b> zh) | (zh <any_Cx_zh_p_z_ax_b>)))) (([(<any_Cx_zh_zh_b_ax> zh)] | [(zh <any_Cx_zh_zh_b_ax>)]) (b | ((<any_Cx_zh_zh_b> zh) | (zh <any_Cx_zh_zh_b>)))) ((([(<any_Vx_jh_zh_ae_noSlide> jh)] | [(jh <any_Vx_jh_zh_ae_noSlide>)]) ([(<any_Cx_jh_zh_n_b> jh)] | [(jh <any_Cx_jh_zh_n_b>)])) (ae | ((<any_Vx_jh_zh_ae_noSlide> jh) | (jh <any_Vx_jh_zh_ae_noSlide>)))) (([(<any_Cx_sh_jh_n_d> sh)] | [(sh <any_Cx_sh_jh_n_d>)]) (n | ((<any_Cx_sh_jh_n_d> sh) | (sh <any_Cx_sh_jh_n_d>)))) (([(<any_Cx_sh_sh_d_axn_n> sh)] | [(sh <any_Cx_sh_sh_d_axn_n>)]) (d | ((<any_Cx_sh_sh_d_axn_n> sh) | (sh <any_Cx_sh_sh_d_axn_n>)))) (([(<any_Cx_sh_sh_axn_d> sh)] | [(sh <any_Cx_sh_sh_axn_d>)]) (axn | ((<any_Cx_sh_sh_axn_d_d> sh) | (sh <any_Cx_sh_sh_axn_d_d>)))) (([(<any_Cx_sh_sh_d_axn> sh)] | [(sh <any_Cx_sh_sh_d_axn>)]) (d | ((<any_Cx_sh_sh_d_axn> sh) | (sh <any_Cx_sh_sh_d_axn>)))) (([(<any_vowel_noSlide> dh)] | [(dh <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_dh> dh)] | [(dh <any_Cx_sh_d_dh>)]) sil))
Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 72 public <abandoned> = (((sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_ax_b> sh)] | [(sh <any_Cx_sh_p_z_ax_b>)]) (ax | ((<any_Cx_sh_p_z_ax_b> sh) | (sh <any_Cx_sh_p_z_ax_b>)))) (([(<any_Cx_jh_sh_b_ax> jh)] | [(jh <any_Cx_jh_sh_b_ax>)]) (b | ((<any_Cx_jh_sh_b> jh) | (jh <any_Cx_jh_sh_b>)))) ((([(<any_Vx_jh_jh_ae_noSlide> jh)] | [(jh <any_Vx_jh_jh_ae_noSlide>)]) ([(<any_Cx_jh_jh_n_b> jh)] | [(jh <any_Cx_jh_jh_n_b>)])) (ae | ((<any_Vx_jh_jh_ae_noSlide> jh) | (jh <any_Vx_jh_jh_ae_noSlide>)))) (([(<any_Cx_sh_jh_n_d> sh)] | [(sh <any_Cx_sh_jh_n_d>)]) (n | ((<any_Cx_sh_jh_n_d> sh) | (sh <any_Cx_sh_jh_n_d>)))) (([(<any_Cx_sh_sh_d_ax_n> sh)] | [(sh <any_Cx_sh_sh_d_ax_n>)]) (d | ((<any_Cx_sh_sh_d_ax_n> sh) | (sh <any_Cx_sh_sh_d_ax_n>)))) (([(<any_Cx_sh_sh_ax_n_d> sh)] | [(sh <any_Cx_sh_sh_ax_n_d>)]) (ax | ((<any_Cx_sh_sh_ax_n_d> sh) | (sh <any_Cx_sh_sh_ax_n_d>)))) (([(<any_Cx_sh_sh_n_ax> sh)] | [(sh <any_Cx_sh_sh_n_ax>)]) (n | ((<any_Cx_sh_sh_n_d_ax> sh) | (sh <any_Cx_sh_sh_n_d_ax>)))) (([(<any_Cx_sh_sh_d_n> sh)] | [(sh <any_Cx_sh_sh_d_n>)]) (d | ((<any_Cx_sh_sh_d_n> sh) | (sh <any_Cx_sh_sh_d_n>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_b> b)] | [(b <any_Cx_sh_d_b>)]) sil))

results =
{72 [{sil 0 11} {ax 12 18} {b 19 27} {ae 28 34} {n 35 44} {d 45 48} {ax 49 52} {n 53 62} {d 63 75} {sil 76 94}]}
{80 [{sil 0 13} {ax 14 21} {b 22 30} {ae 31 39} {n 40 50} {d 51 53} {ax 54 58} {n 59 69} {d 70 83} {sil 84 102}]}
{91 [{sil 0 14} {ax 15 24} {b 25 34} {ae 35 45} {n 46 56} {d 57 62} {ax 63 66} {n 67 79} {d 80 96} {sil 97 139}]}
{105 [{sil 0 17} {ax 18 28} {b 29 39} {ae 40 52} {n 53 66} {d 67 71} {ax 72 78} {n 79 92} {d 93 110} {sil 111 162}]}
{125 [{sil 0 19} {ax 20 31} {b 32 45} {ae 46 61} {n 62 77} {d 78 83} {ax 84 91} {n 92 108} {d 109 129} {sil 130 190}]}

normalised results =
{72 [{sil 0 11} {ax 17 25} {b 26 38} {ae 39 47} {n 49 61} {d 63 67} {ax 68 72} {n 74 86} {d 88 104} {sil 106 131}]}
{80 [{sil 0 13} {ax 18 26} {b 28 38} {ae 39 49} {n 50 63} {d 64 64} {ax 68 73} {n 74 86} {d 88 104} {sil 105 128}]}
{91 [{sil 0 14} {ax 16 26} {b 27 37} {ae 38 49} {n 51 62} {d 63 68} {ax 69 73} {n 74 87} {d 88 105} {sil 107 153}]}
{105 [{sil 0 17} {ax 17 27} {b 28 37} {ae 38 50} {n 50 63} {d 64 68} {ax 69 74} {n 75 88} {d 89 105} {sil 106 154}]}
{125 [{sil 0 19} {ax 16 25} {b 26 36} {ae 37 49} {n 50 62} {d 62 66} {ax 67 73} {n 74 86} {d 87 103} {sil 104 152}]}

ruleAligned = [{{ax 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{b 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{ae 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{n 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{d 0} [{0 5} {2 5} {3 5} {4 5}]} {{ax 0} [{0 6} {1 6} {2 6} {3 6} {4 6}]} {{n 0} [{0 7} {1 7} {2 7} {3 7} {4 7}]} {{d 0} [{0 8} {1 8} {2 8} {3 8} {4 8}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {ax 17 25} {b 26 38} {ae 39 47} {n 49 61} {d 63 67} {ax 68 72} {n 74 86} {d 88 104} {sil 106 106}]}
{80 [{sil 0 0} {ax 18 26} {b 28 38} {ae 39 49} {n 50 63} {d 64 64} {ax 68 73} {n 74 86} {d 88 104} {sil 105 105}]}
{91 [{sil 0 0} {ax 16 26} {b 27 37} {ae 38 49} {n 51 62} {d 63 68} {ax 69 73} {n 74 87} {d 88 105} {sil 107 107}]}
{105 [{sil 0 0} {ax 17 27} {b 28 37} {ae 38 50} {n 50 63} {d 64 68} {ax 69 74} {n 75 88} {d 89 105} {sil 106 106}]}
{125 [{sil 0 0} {ax 16 25} {b 26 36} {ae 37 49} {n 50 62} {d 62 66} {ax 67 73} {n 74 86} {d 87 103} {sil 104 104}]}

timeAligned = [{{ax 17 26} [{0 1} {2 1} {3 1} {4 1} {1 1}]} {{b 27 37} [{0 2} {2 2} {4 2} {1 2} {3 2}]} {{ae 38 49} [{2 3} {3 3} {4 3} {0 3} {1 3}]} {{n 50 62} [{0 4} {1 4} {3 4} {4 4} {2 4}]} {{d 63 67} [{0 5} {2 5} {4 5} {3 5}]} {{ax 68 73} [{0 6} {1 6} {4 6} {2 6} {3 6}]} {{n 74 86} [{0 7} {1 7} {2 7} {4 7} {3 7}]} {{d 88 104} [{0 8} {1 8} {2 8} {4 8} {3 8}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 25
i, iTime, newITime, timeStartFrom = 2 1 2 36
i, iTime, newITime, timeStartFrom = 3 2 3 47
i, iTime, newITime, timeStartFrom = 4 3 4 61
i, iTime, newITime, timeStartFrom = 5 4 5 66
i, iTime, newITime, timeStartFrom = 6 5 6 72
i, iTime, newITime, timeStartFrom = 7 6 7 86
combinedVerdict    = [{ax 0} {b 0} {ae 0} {n 0} {d 0} {ax 0} {n 0} {d 0}]
ruleAlignedVerdict = [{ax 0} {b 0} {ae 0} {n 0} {d 0} {ax 0} {n 0} {d 0}]

score->
+2 for ax
+2 for b
+2 for ae
+2 for n
+2 for d
+2 for ax
+2 for n
+2 for d
score<-: 21

results =
{72 [{sil 0 11} {ax 12 18} {b 19 27} {ae 28 34} {n 35 44} {d 45 48} {axn 49 62} {d 63 75} {sil 76 94}]}
{80 [{sil 0 13} {ax 14 21} {b 22 30} {ae 31 39} {n 40 50} {d 51 53} {axn 54 69} {d 70 83} {sil 84 102}]}
{91 [{sil 0 14} {ax 15 24} {b 25 34} {ae 35 45} {n 46 56} {d 57 62} {axn 63 79} {d 80 96} {sil 97 139}]}
{105 [{sil 0 17} {ax 18 28} {b 29 39} {ae 40 52} {n 53 66} {d 67 71} {axn 72 92} {d 93 110} {sil 111 162}]}
{125 [{sil 0 19} {ax 20 31} {b 32 45} {ae 46 61} {n 62 77} {d 78 83} {axn 84 108} {d 109 129} {sil 130 190}]}

normalised results =
{72 [{sil 0 11} {ax 17 25} {b 26 38} {ae 39 47} {n 49 61} {d 63 67} {axn 68 86} {d 88 104} {sil 106 131}]}
{80 [{sil 0 13} {ax 18 26} {b 28 38} {ae 39 49} {n 50 63} {d 64 64} {axn 68 86} {d 88 104} {sil 105 128}]}
{91 [{sil 0 14} {ax 16 26} {b 27 37} {ae 38 49} {n 51 62} {d 63 68} {axn 69 87} {d 88 105} {sil 107 153}]}
{105 [{sil 0 17} {ax 17 27} {b 28 37} {ae 38 50} {n 50 63} {d 64 68} {axn 69 88} {d 89 105} {sil 106 154}]}
{125 [{sil 0 19} {ax 16 25} {b 26 36} {ae 37 49} {n 50 62} {d 62 66} {axn 67 86} {d 87 103} {sil 104 152}]}

ruleAligned = [{{ax 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{b 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{ae 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{n 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{d 0} [{0 5} {2 5} {3 5} {4 5}]} {{axn 0} [{0 6} {1 6} {2 6} {3 6} {4 6}]} {{d 0} [{0 7} {1 7} {2 7} {3 7} {4 7}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {ax 17 25} {b 26 38} {ae 39 47} {n 49 61} {d 63 67} {axn 68 86} {d 88 104} {sil 106 106}]}
{80 [{sil 0 0} {ax 18 26} {b 28 38} {ae 39 49} {n 50 63} {d 64 64} {axn 68 86} {d 88 104} {sil 105 105}]}
{91 [{sil 0 0} {ax 16 26} {b 27 37} {ae 38 49} {n 51 62} {d 63 68} {axn 69 87} {d 88 105} {sil 107 107}]}
{105 [{sil 0 0} {ax 17 27} {b 28 37} {ae 38 50} {n 50 63} {d 64 68} {axn 69 88} {d 89 105} {sil 106 106}]}
{125 [{sil 0 0} {ax 16 25} {b 26 36} {ae 37 49} {n 50 62} {d 62 66} {axn 67 86} {d 87 103} {sil 104 104}]}

timeAligned = [{{ax 17 26} [{0 1} {2 1} {3 1} {4 1} {1 1}]} {{b 27 37} [{0 2} {2 2} {4 2} {1 2} {3 2}]} {{ae 38 49} [{2 3} {3 3} {4 3} {0 3} {1 3}]} {{n 50 62} [{0 4} {1 4} {3 4} {4 4} {2 4}]} {{d 63 67} [{0 5} {2 5} {4 5} {3 5}]} {{axn 68 86} [{0 6} {1 6} {4 6} {2 6} {3 6}]} {{d 88 104} [{0 7} {1 7} {2 7} {4 7} {3 7}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 25
i, iTime, newITime, timeStartFrom = 2 1 2 36
i, iTime, newITime, timeStartFrom = 3 2 3 47
i, iTime, newITime, timeStartFrom = 4 3 4 61
i, iTime, newITime, timeStartFrom = 5 4 5 66
i, iTime, newITime, timeStartFrom = 6 5 6 86
combinedVerdict    = [{ax 0} {b 0} {ae 0} {n 0} {d 0} {axn 0} {d 0}]
ruleAlignedVerdict = [{ax 0} {b 0} {ae 0} {n 0} {d 0} {axn 0} {d 0}]

score->
+2 for ax
+2 for b
+2 for ae
+2 for n
+2 for d
+2 for axn
+2 for d
score<-: 19
testPronounce ax good b good ae good n good d good ax good n good d good
publish->
phonsToAlphas = [{[ax] a} {[b] b} {[ae] a} {[n] n} {[d] d} {[ax] o} {[n] ne} {[d] d}]
getVerdict<-:new {a [ax] 0}
getVerdict<-:new {b [b] 0}
getVerdict<-:new {a [ae] 0}
getVerdict<-:new {n [n] 0}
getVerdict<-:new {d [d] 0}
getVerdict<-:new {o [ax] 0}
getVerdict<-:new {ne [n] 0}
getVerdict<-:new {d [d] 0}
lettersVerdicts = [{a [ax] 0} {b [b] 0} {a [ae] 0} {n [n] 0} {d [d] 0} {o [ax] 0} {ne [n] 0} {d [d] 0}]
publish<-
{
  "word": "abandoned",
  "results": [
    {
      "letters": "a",
      "phonemes": "ə",
      "verdict": "good"
    },
    {
      "letters": "b",
      "phonemes": "b",
      "verdict": "good"
    },
    {
      "letters": "a",
      "phonemes": "æ",
      "verdict": "good"
    },
    {
      "letters": "n",
      "phonemes": "n",
      "verdict": "good"
    },
    {
      "letters": "d",
      "phonemes": "d",
      "verdict": "good"
    },
    {
      "letters": "o",
      "phonemes": "ə",
      "verdict": "good"
    },
    {
      "letters": "ne",
      "phonemes": "n",
      "verdict": "good"
    },
    {
      "letters": "d",
      "phonemes": "d",
      "verdict": "good"
    }
  ],
  "err": null
}
