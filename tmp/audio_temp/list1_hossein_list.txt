Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_5e1a2a40-1370-4c5b-b5fe-c605697350e3 audiofile /Users/test/go/src/Phonemes/audio_clips/list1_hossein.wav word list dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  2.517



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  1.24 0.48 1.72

 start3, duration3, end3 =  1.26 0.33999999999999997 1.6

 Initial start, duration, end =  1.14 0.5800000000000001 1.72

 Cut at: start, duration =  1.14 1.03     guard_end =  2.17 

Running scan for frate = 125
Running scan for frate = 125
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard y with value 12 for ih ...
Considering guard ng with value 12 for ih ...
Considering guard n with value 12 for ih ...
candidateGuards = map[n:true ng:true y:true]
Picking guard, ng

Considering guard d with value 8 for ih ...
candidateGuards = map[d:true]
Picking guard, d

Considering guard l with value 3.3999999999999995 for st ...
candidateGuards = map[l:true]
Picking guard, l

Considering guard l with value 6.799999999999999 for s ...
candidateGuards = map[l:true]
Picking guard, l

Considering guard oy with value 1 for t ...
Considering guard aa with value 1 for t ...
candidateGuards = map[aa:true oy:true]
Picking guard, oy

frate, target rule = 125 public <list> = (((sil [((w <any_Cx_l_w_p>) | (<any_Cx_l_w_p> w))] [((w <any_vowel_noSlide>) | (<any_vowel_noSlide> w))]) | (sil p (sil [((w <any_Cx_l_w_p>) | (<any_Cx_l_w_p> w))] [((w <any_vowel_noSlide>) | (<any_vowel_noSlide> w))]))) (([(<any_Cx_sh_p_w_l> sh)] | [(sh <any_Cx_sh_p_w_l>)]) (l | ((<any_Cx_sh_p_w_l> sh) | (sh <any_Cx_sh_p_w_l>)))) ((([(<any_Vx_ng_sh_ih_noSlide> ng)] | [(ng <any_Vx_ng_sh_ih_noSlide>)]) ([(<any_Cx_ng_sh_st_l> ng)] | [(ng <any_Cx_ng_sh_st_l>)])) (ih | ((<any_Vx_ng_sh_ih_noSlide> ng) | (ng <any_Vx_ng_sh_ih_noSlide>)))) (([(<any_Cx_l_ng_st> l)] | [(l <any_Cx_l_ng_st>)]) (st | ((<any_Cx_l_ng_st> l) | (l <any_Cx_l_ng_st>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_l_st_f> f)] | [(f <any_Cx_l_st_f>)]) sil))
frate, target rule = 125 public <list> = (((sil [((r <any_Cx_l_r_p>) | (<any_Cx_l_r_p> r))] [((r <any_vowel_noSlide>) | (<any_vowel_noSlide> r))]) | (sil p (sil [((r <any_Cx_l_r_p>) | (<any_Cx_l_r_p> r))] [((r <any_vowel_noSlide>) | (<any_vowel_noSlide> r))]))) (([(<any_Cx_sh_p_r_l> sh)] | [(sh <any_Cx_sh_p_r_l>)]) (l | ((<any_Cx_sh_p_r_l> sh) | (sh <any_Cx_sh_p_r_l>)))) ((([(<any_Vx_d_sh_ih_noSlide> d)] | [(d <any_Vx_d_sh_ih_noSlide>)]) ([(<any_Cx_d_sh_s_l> d)] | [(d <any_Cx_d_sh_s_l>)])) (ih | ((<any_Vx_d_sh_ih_noSlide> d) | (d <any_Vx_d_sh_ih_noSlide>)))) (([(<any_Cx_l_d_s> l)] | [(l <any_Cx_l_d_s>)]) (s | ((<any_Cx_l_d_s_t> l) | (l <any_Cx_l_d_s_t>)))) (([(<any_Cx_oy_l_t_s> oy)] | [(oy <any_Cx_oy_l_t_s>)]) (t | ((<any_Cx_oy_l_t_s> oy) | (oy <any_Cx_oy_l_t_s>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_oy_t_g> g)] | [(g <any_Cx_oy_t_g>)]) sil))
Running scan for frate = 105
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 105
Considering guard ng with value 12 for ih ...
Considering guard n with value 12 for ih ...
Considering guard y with value 12 for ih ...
candidateGuards = map[n:true ng:true y:true]
Picking guard, ng

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard l with value 3.3999999999999995 for st ...
candidateGuards = map[l:true]
Picking guard, l

Considering guard d with value 8 for ih ...
candidateGuards = map[d:true]
Picking guard, d

frate, target rule = 105 public <list> = (((sil [((v <any_Cx_l_v_p>) | (<any_Cx_l_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]) | (sil p (sil [((v <any_Cx_l_v_p>) | (<any_Cx_l_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]))) (([(<any_Cx_sh_p_v_l> sh)] | [(sh <any_Cx_sh_p_v_l>)]) (l | ((<any_Cx_sh_p_v_l> sh) | (sh <any_Cx_sh_p_v_l>)))) ((([(<any_Vx_ng_sh_ih_noSlide> ng)] | [(ng <any_Vx_ng_sh_ih_noSlide>)]) ([(<any_Cx_ng_sh_st_l> ng)] | [(ng <any_Cx_ng_sh_st_l>)])) (ih | ((<any_Vx_ng_sh_ih_noSlide> ng) | (ng <any_Vx_ng_sh_ih_noSlide>)))) (([(<any_Cx_l_ng_st> l)] | [(l <any_Cx_l_ng_st>)]) (st | ((<any_Cx_l_ng_st> l) | (l <any_Cx_l_ng_st>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_l_st_thr> thr)] | [(thr <any_Cx_l_st_thr>)]) sil))
Considering guard l with value 6.799999999999999 for s ...
candidateGuards = map[l:true]
Picking guard, l

Running scan for frate = 91
Considering guard oy with value 1 for t ...
Considering guard aa with value 1 for t ...
candidateGuards = map[aa:true oy:true]
Picking guard, oy

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 105 public <list> = (((sil [((r <any_Cx_l_r_p>) | (<any_Cx_l_r_p> r))] [((r <any_vowel_noSlide>) | (<any_vowel_noSlide> r))]) | (sil p (sil [((r <any_Cx_l_r_p>) | (<any_Cx_l_r_p> r))] [((r <any_vowel_noSlide>) | (<any_vowel_noSlide> r))]))) (([(<any_Cx_sh_p_r_l> sh)] | [(sh <any_Cx_sh_p_r_l>)]) (l | ((<any_Cx_sh_p_r_l> sh) | (sh <any_Cx_sh_p_r_l>)))) ((([(<any_Vx_d_sh_ih_noSlide> d)] | [(d <any_Vx_d_sh_ih_noSlide>)]) ([(<any_Cx_d_sh_s_l> d)] | [(d <any_Cx_d_sh_s_l>)])) (ih | ((<any_Vx_d_sh_ih_noSlide> d) | (d <any_Vx_d_sh_ih_noSlide>)))) (([(<any_Cx_l_d_s> l)] | [(l <any_Cx_l_d_s>)]) (s | ((<any_Cx_l_d_s_t> l) | (l <any_Cx_l_d_s_t>)))) (([(<any_Cx_oy_l_t_s> oy)] | [(oy <any_Cx_oy_l_t_s>)]) (t | ((<any_Cx_oy_l_t_s> oy) | (oy <any_Cx_oy_l_t_s>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_oy_t_g> g)] | [(g <any_Cx_oy_t_g>)]) sil))
Considering guard n with value 12 for ih ...
Considering guard y with value 12 for ih ...
Considering guard ng with value 12 for ih ...
candidateGuards = map[n:true ng:true y:true]
Picking guard, ng

Considering guard l with value 3.3999999999999995 for st ...
candidateGuards = map[l:true]
Picking guard, l

Running scan for frate = 91
frate, target rule = 91 public <list> = (((sil [((m <any_Cx_l_m_p>) | (<any_Cx_l_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]) | (sil p (sil [((m <any_Cx_l_m_p>) | (<any_Cx_l_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]))) (([(<any_Cx_sh_p_m_l> sh)] | [(sh <any_Cx_sh_p_m_l>)]) (l | ((<any_Cx_sh_p_m_l> sh) | (sh <any_Cx_sh_p_m_l>)))) ((([(<any_Vx_ng_sh_ih_noSlide> ng)] | [(ng <any_Vx_ng_sh_ih_noSlide>)]) ([(<any_Cx_ng_sh_st_l> ng)] | [(ng <any_Cx_ng_sh_st_l>)])) (ih | ((<any_Vx_ng_sh_ih_noSlide> ng) | (ng <any_Vx_ng_sh_ih_noSlide>)))) (([(<any_Cx_l_ng_st> l)] | [(l <any_Cx_l_ng_st>)]) (st | ((<any_Cx_l_ng_st> l) | (l <any_Cx_l_ng_st>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_l_st_n> n)] | [(n <any_Cx_l_st_n>)]) sil))
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard d with value 8 for ih ...
candidateGuards = map[d:true]
Picking guard, d

Running scan for frate = 80
Considering guard l with value 6.799999999999999 for s ...
candidateGuards = map[l:true]
Picking guard, l

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard aa with value 1 for t ...
Considering guard oy with value 1 for t ...
candidateGuards = map[aa:true oy:true]
Picking guard, aa

Considering guard n with value 12 for ih ...
Considering guard y with value 12 for ih ...
Considering guard ng with value 12 for ih ...
candidateGuards = map[n:true ng:true y:true]
Picking guard, n

frate, target rule = 91 public <list> = (((sil [((w <any_Cx_l_w_p>) | (<any_Cx_l_w_p> w))] [((w <any_vowel_noSlide>) | (<any_vowel_noSlide> w))]) | (sil p (sil [((w <any_Cx_l_w_p>) | (<any_Cx_l_w_p> w))] [((w <any_vowel_noSlide>) | (<any_vowel_noSlide> w))]))) (([(<any_Cx_sh_p_w_l> sh)] | [(sh <any_Cx_sh_p_w_l>)]) (l | ((<any_Cx_sh_p_w_l> sh) | (sh <any_Cx_sh_p_w_l>)))) ((([(<any_Vx_d_sh_ih_noSlide> d)] | [(d <any_Vx_d_sh_ih_noSlide>)]) ([(<any_Cx_d_sh_s_l> d)] | [(d <any_Cx_d_sh_s_l>)])) (ih | ((<any_Vx_d_sh_ih_noSlide> d) | (d <any_Vx_d_sh_ih_noSlide>)))) (([(<any_Cx_l_d_s> l)] | [(l <any_Cx_l_d_s>)]) (s | ((<any_Cx_l_d_s_t> l) | (l <any_Cx_l_d_s_t>)))) (([(<any_Cx_aa_l_t_s> aa)] | [(aa <any_Cx_aa_l_t_s>)]) (t | ((<any_Cx_aa_l_t_s> aa) | (aa <any_Cx_aa_l_t_s>)))) (([(<any_vowel_noSlide> ch)] | [(ch <any_vowel_noSlide>)]) ([(<any_Cx_aa_t_ch> ch)] | [(ch <any_Cx_aa_t_ch>)]) sil))
Considering guard l with value 3.3999999999999995 for st ...
candidateGuards = map[l:true]
Picking guard, l

Running scan for frate = 80
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 80 public <list> = (((sil [((w <any_Cx_l_w_p>) | (<any_Cx_l_w_p> w))] [((w <any_vowel_noSlide>) | (<any_vowel_noSlide> w))]) | (sil p (sil [((w <any_Cx_l_w_p>) | (<any_Cx_l_w_p> w))] [((w <any_vowel_noSlide>) | (<any_vowel_noSlide> w))]))) (([(<any_Cx_sh_p_w_l> sh)] | [(sh <any_Cx_sh_p_w_l>)]) (l | ((<any_Cx_sh_p_w_l> sh) | (sh <any_Cx_sh_p_w_l>)))) ((([(<any_Vx_n_sh_ih_noSlide> n)] | [(n <any_Vx_n_sh_ih_noSlide>)]) ([(<any_Cx_n_sh_st_l> n)] | [(n <any_Cx_n_sh_st_l>)])) (ih | ((<any_Vx_n_sh_ih_noSlide> n) | (n <any_Vx_n_sh_ih_noSlide>)))) (([(<any_Cx_l_n_st> l)] | [(l <any_Cx_l_n_st>)]) (st | ((<any_Cx_l_n_st> l) | (l <any_Cx_l_n_st>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_l_st_m> m)] | [(m <any_Cx_l_st_m>)]) sil))
Considering guard d with value 8 for ih ...
candidateGuards = map[d:true]
Picking guard, d

Considering guard l with value 6.799999999999999 for s ...
candidateGuards = map[l:true]
Picking guard, l

Running scan for frate = 72
Considering guard oy with value 1 for t ...
Considering guard aa with value 1 for t ...
candidateGuards = map[aa:true oy:true]
Picking guard, oy

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 80 public <list> = (((sil [((v <any_Cx_l_v_p>) | (<any_Cx_l_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]) | (sil p (sil [((v <any_Cx_l_v_p>) | (<any_Cx_l_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]))) (([(<any_Cx_sh_p_v_l> sh)] | [(sh <any_Cx_sh_p_v_l>)]) (l | ((<any_Cx_sh_p_v_l> sh) | (sh <any_Cx_sh_p_v_l>)))) ((([(<any_Vx_d_sh_ih_noSlide> d)] | [(d <any_Vx_d_sh_ih_noSlide>)]) ([(<any_Cx_d_sh_s_l> d)] | [(d <any_Cx_d_sh_s_l>)])) (ih | ((<any_Vx_d_sh_ih_noSlide> d) | (d <any_Vx_d_sh_ih_noSlide>)))) (([(<any_Cx_l_d_s> l)] | [(l <any_Cx_l_d_s>)]) (s | ((<any_Cx_l_d_s_t> l) | (l <any_Cx_l_d_s_t>)))) (([(<any_Cx_oy_l_t_s> oy)] | [(oy <any_Cx_oy_l_t_s>)]) (t | ((<any_Cx_oy_l_t_s> oy) | (oy <any_Cx_oy_l_t_s>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_oy_t_d> d)] | [(d <any_Cx_oy_t_d>)]) sil))
Considering guard ng with value 12 for ih ...
Considering guard y with value 12 for ih ...
Considering guard n with value 12 for ih ...
candidateGuards = map[n:true ng:true y:true]
Picking guard, ng

Running scan for frate = 72
Considering guard l with value 3.3999999999999995 for st ...
candidateGuards = map[l:true]
Picking guard, l

frate, target rule = 72 public <list> = (((sil [((z <any_Cx_l_z_p>) | (<any_Cx_l_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_l_z_p>) | (<any_Cx_l_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_l> sh)] | [(sh <any_Cx_sh_p_z_l>)]) (l | ((<any_Cx_sh_p_z_l> sh) | (sh <any_Cx_sh_p_z_l>)))) ((([(<any_Vx_ng_sh_ih_noSlide> ng)] | [(ng <any_Vx_ng_sh_ih_noSlide>)]) ([(<any_Cx_ng_sh_st_l> ng)] | [(ng <any_Cx_ng_sh_st_l>)])) (ih | ((<any_Vx_ng_sh_ih_noSlide> ng) | (ng <any_Vx_ng_sh_ih_noSlide>)))) (([(<any_Cx_l_ng_st> l)] | [(l <any_Cx_l_ng_st>)]) (st | ((<any_Cx_l_ng_st> l) | (l <any_Cx_l_ng_st>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_l_st_hh> hh)] | [(hh <any_Cx_l_st_hh>)]) sil))
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard d with value 8 for ih ...
candidateGuards = map[d:true]
Picking guard, d

Considering guard l with value 6.799999999999999 for s ...
candidateGuards = map[l:true]
Picking guard, l

Considering guard oy with value 1 for t ...
Considering guard aa with value 1 for t ...
candidateGuards = map[aa:true oy:true]
Picking guard, aa

frate, target rule = 72 public <list> = (((sil [((z <any_Cx_l_z_p>) | (<any_Cx_l_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_l_z_p>) | (<any_Cx_l_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_l> sh)] | [(sh <any_Cx_sh_p_z_l>)]) (l | ((<any_Cx_sh_p_z_l> sh) | (sh <any_Cx_sh_p_z_l>)))) ((([(<any_Vx_d_sh_ih_noSlide> d)] | [(d <any_Vx_d_sh_ih_noSlide>)]) ([(<any_Cx_d_sh_s_l> d)] | [(d <any_Cx_d_sh_s_l>)])) (ih | ((<any_Vx_d_sh_ih_noSlide> d) | (d <any_Vx_d_sh_ih_noSlide>)))) (([(<any_Cx_l_d_s> l)] | [(l <any_Cx_l_d_s>)]) (s | ((<any_Cx_l_d_s_t> l) | (l <any_Cx_l_d_s_t>)))) (([(<any_Cx_aa_l_t_s> aa)] | [(aa <any_Cx_aa_l_t_s>)]) (t | ((<any_Cx_aa_l_t_s> aa) | (aa <any_Cx_aa_l_t_s>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_aa_t_p> p)] | [(p <any_Cx_aa_t_p>)]) sil))

results =
{72 [{sil 0 12} {l 13 17} {ih 18 23} {st 24 42} {sil 43 53}]}
{80 [{sil 0 14} {l 15 19} {ih 20 25} {st 26 47} {sil 48 56}]}
{91 [{sil 0 15} {l 16 22} {ih 23 29} {st 30 53} {sil 54 92}]}
{105 [{sil 0 19} {l 20 26} {ih 27 33} {st 34 62} {sil 63 107}]}
{125 [{sil 0 21} {l 22 28} {ih 29 37} {st 38 71} {sil 72 125}]}

normalised results =
{72 [{sil 0 12} {l 18 24} {ih 25 32} {st 33 58} {sil 60 74}]}
{80 [{sil 0 14} {l 19 24} {ih 25 31} {st 33 59} {sil 60 70}]}
{91 [{sil 0 15} {l 18 24} {ih 25 32} {st 33 58} {sil 59 101}]}
{105 [{sil 0 19} {l 19 25} {ih 26 31} {st 32 59} {sil 60 102}]}
{125 [{sil 0 21} {l 18 22} {ih 23 30} {st 30 57} {sil 58 100}]}

ruleAligned = [{{l 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ih 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{st 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {l 18 24} {ih 25 32} {st 33 58} {sil 60 60}]}
{80 [{sil 0 0} {l 19 24} {ih 25 31} {st 33 59} {sil 60 60}]}
{91 [{sil 0 0} {l 18 24} {ih 25 32} {st 33 58} {sil 59 59}]}
{105 [{sil 0 0} {l 19 25} {ih 26 31} {st 32 59} {sil 60 60}]}
{125 [{sil 0 0} {l 18 22} {ih 23 30} {st 30 57} {sil 58 58}]}

timeAligned = [{{l 18 24} [{0 1} {2 1} {4 1} {1 1} {3 1}]} {{ih 25 31} [{0 2} {1 2} {2 2} {4 2} {3 2}]} {{st 33 58} [{0 3} {1 3} {2 3} {3 3} {4 3}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 22
i, iTime, newITime, timeStartFrom = 2 1 2 30
combinedVerdict    = [{l 0} {ih 0} {st 0}]
ruleAlignedVerdict = [{l 0} {ih 0} {st 0}]

score->
+2 for l
+2 for ih
+2 for st
score<-: 11

results =
{72 [{sil 0 12} {l 13 17} {ih 18 22} {s 23 33} {t 34 42} {sil 43 53}]}
{80 [{sil 0 14} {l 15 19} {ih 20 25} {s 26 36} {t 37 47} {sil 48 56}]}
{91 [{sil 0 15} {l 16 22} {ih 23 28} {s 29 41} {t 42 54} {sil 55 92}]}
{105 [{sil 0 19} {l 20 26} {ih 27 33} {s 34 47} {t 48 62} {sil 63 107}]}
{125 [{sil 0 21} {l 22 28} {ih 29 37} {s 38 57} {t 58 72} {sil 73 125}]}

normalised results =
{72 [{sil 0 12} {l 18 24} {ih 25 31} {s 32 46} {t 47 58} {sil 60 74}]}
{80 [{sil 0 14} {l 19 24} {ih 25 31} {s 33 45} {t 46 59} {sil 60 70}]}
{91 [{sil 0 15} {l 18 24} {ih 25 31} {s 32 45} {t 46 59} {sil 60 101}]}
{105 [{sil 0 19} {l 19 25} {ih 26 31} {s 32 45} {t 46 59} {sil 60 102}]}
{125 [{sil 0 21} {l 18 22} {ih 23 30} {s 30 46} {t 46 58} {sil 58 100}]}

ruleAligned = [{{l 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ih 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{s 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{t 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {l 18 24} {ih 25 31} {s 32 46} {t 47 58} {sil 60 60}]}
{80 [{sil 0 0} {l 19 24} {ih 25 31} {s 33 45} {t 46 59} {sil 60 60}]}
{91 [{sil 0 0} {l 18 24} {ih 25 31} {s 32 45} {t 46 59} {sil 60 60}]}
{105 [{sil 0 0} {l 19 25} {ih 26 31} {s 32 45} {t 46 59} {sil 60 60}]}
{125 [{sil 0 0} {l 18 22} {ih 23 30} {s 30 46} {t 46 58} {sil 58 58}]}

timeAligned = [{{l 18 24} [{0 1} {2 1} {4 1} {1 1} {3 1}]} {{ih 25 31} [{0 2} {1 2} {2 2} {4 2} {3 2}]} {{s 32 45} [{0 3} {2 3} {3 3} {4 3} {1 3}]} {{t 46 59} [{1 4} {2 4} {3 4} {4 4} {0 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 22
i, iTime, newITime, timeStartFrom = 2 1 2 30
i, iTime, newITime, timeStartFrom = 3 2 3 45
combinedVerdict    = [{l 0} {ih 0} {s 0} {t 0}]
ruleAlignedVerdict = [{l 0} {ih 0} {s 0} {t 0}]

score->
+2 for l
+2 for ih
+2 for s
+2 for t
score<-: 13
testPronounce l good ih good s good t good
publish->
phonsToAlphas = [{[l] l} {[ih] i} {[s] s} {[t] t}]
getVerdict<-:new {l [l] 0}
getVerdict<-:new {i [ih] 0}
getVerdict<-:new {s [s] 0}
getVerdict<-:new {t [t] 0}
lettersVerdicts = [{l [l] 0} {i [ih] 0} {s [s] 0} {t [t] 0}]
publish<-
{
  "word": "list",
  "results": [
    {
      "letters": "l",
      "phonemes": "l",
      "verdict": "good"
    },
    {
      "letters": "i",
      "phonemes": "ɪ",
      "verdict": "good"
    },
    {
      "letters": "s",
      "phonemes": "s",
      "verdict": "good"
    },
    {
      "letters": "t",
      "phonemes": "t",
      "verdict": "good"
    }
  ],
  "err": null
}
