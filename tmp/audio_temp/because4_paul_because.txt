Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_f0870fcc-9267-4ce6-a091-f20517b7e550 audiofile /Users/test/go/src/Phonemes/audio_clips/because4_paul.wav word because dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  1.727625



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.6 0.7 1.2999999999999998

 start3, duration3, end3 =  0.6 0.6 1.2

 Initial start, duration, end =  0.5 0.7999999999999998 1.2999999999999998

 Cut at: start, duration =  0.5 1.207625     guard_end =  1.707625 

Running scan for frate = 125
Running scan for frate = 125
Considering guard hh with value 1 for b ...
Considering guard sh with value 1 for b ...
candidateGuards = map[hh:true sh:true]
Picking guard, hh

Considering guard s with value 1 for b ...
Considering guard sh with value 1 for b ...
Considering guard jh with value 1 for b ...
candidateGuards = map[jh:true s:true sh:true]
Picking guard, s

Considering guard sh with value 7.800000000000001 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard z with value 6.4 for k ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard z with value 1.6 for k ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard y with value 5.199999999999999 for oh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 5.199999999999999 for oh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard ng with value 1 for z ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 1 for z ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 125 public <because> = (((sil [((v <any_Cx_b_v_hh>) | (<any_Cx_b_v_hh> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]) | (sil hh (sil [((v <any_Cx_b_v_hh>) | (<any_Cx_b_v_hh> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]))) (([(<any_Cx_hh_hh_v_b> hh)] | [(hh <any_Cx_hh_hh_v_b>)]) (b | ((<any_Cx_hh_hh_v_b> hh) | (hh <any_Cx_hh_hh_v_b>)))) ((([(<any_Vx_sh_hh_iy_noSlide> sh)] | [(sh <any_Vx_sh_hh_iy_noSlide>)]) ([(<any_Cx_sh_hh_k_b> sh)] | [(sh <any_Cx_sh_hh_k_b>)])) (iy | ((<any_Vx_sh_hh_iy_noSlide> sh) | (sh <any_Vx_sh_hh_iy_noSlide>)))) (([(<any_Cx_z_sh_k_oh> z)] | [(z <any_Cx_z_sh_k_oh>)]) (k | ((<any_Cx_z_sh_k_oh> z) | (z <any_Cx_z_sh_k_oh>)))) (([(<any_Cx_y_z_oh_k> y)] | [(y <any_Cx_y_z_oh_k>)]) (oh | ((<any_Cx_y_z_oh_z_k> y) | (y <any_Cx_y_z_oh_z_k>)))) (([(<any_Cx_ng_y_z_oh> ng)] | [(ng <any_Cx_ng_y_z_oh>)]) (z | ((<any_Cx_ng_y_z_oh> ng) | (ng <any_Cx_ng_y_z_oh>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_ng_z_v> v)] | [(v <any_Cx_ng_z_v>)]) sil))
frate, target rule = 125 public <because> = (((sil [((d <any_Cx_b_d_hh>) | (<any_Cx_b_d_hh> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil hh (sil [((d <any_Cx_b_d_hh>) | (<any_Cx_b_d_hh> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_s_hh_d_b> s)] | [(s <any_Cx_s_hh_d_b>)]) (b | ((<any_Cx_s_hh_d_b> s) | (s <any_Cx_s_hh_d_b>)))) ((([(<any_Vx_r_s_ih_noSlide> r)] | [(r <any_Vx_r_s_ih_noSlide>)]) ([(<any_Cx_r_s_k_b> r)] | [(r <any_Cx_r_s_k_b>)])) (ih | ((<any_Vx_r_s_ih_noSlide> r) | (r <any_Vx_r_s_ih_noSlide>)))) (([(<any_Cx_z_r_k_oh> z)] | [(z <any_Cx_z_r_k_oh>)]) (k | ((<any_Cx_z_r_k_oh> z) | (z <any_Cx_z_r_k_oh>)))) (([(<any_Cx_y_z_oh_k> y)] | [(y <any_Cx_y_z_oh_k>)]) (oh | ((<any_Cx_y_z_oh_z_k> y) | (y <any_Cx_y_z_oh_z_k>)))) (([(<any_Cx_ng_y_z_oh> ng)] | [(ng <any_Cx_ng_y_z_oh>)]) (z | ((<any_Cx_ng_y_z_oh> ng) | (ng <any_Cx_ng_y_z_oh>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_ng_z_thr> thr)] | [(thr <any_Cx_ng_z_thr>)]) sil))
Running scan for frate = 105
Running scan for frate = 105
Considering guard hh with value 1 for b ...
Considering guard sh with value 1 for b ...
candidateGuards = map[hh:true sh:true]
Picking guard, hh

Considering guard sh with value 1 for b ...
Considering guard s with value 1 for b ...
Considering guard jh with value 1 for b ...
candidateGuards = map[jh:true s:true sh:true]
Picking guard, sh

Considering guard sh with value 7.800000000000001 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard z with value 6.4 for k ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard z with value 1.6 for k ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard y with value 5.199999999999999 for oh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 5.199999999999999 for oh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard ng with value 1 for z ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 1 for z ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 105 public <because> = (((sil [((p <any_Cx_b_p_hh>) | (<any_Cx_b_p_hh> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]) | (sil hh (sil [((p <any_Cx_b_p_hh>) | (<any_Cx_b_p_hh> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]))) (([(<any_Cx_hh_hh_p_b> hh)] | [(hh <any_Cx_hh_hh_p_b>)]) (b | ((<any_Cx_hh_hh_p_b> hh) | (hh <any_Cx_hh_hh_p_b>)))) ((([(<any_Vx_sh_hh_iy_noSlide> sh)] | [(sh <any_Vx_sh_hh_iy_noSlide>)]) ([(<any_Cx_sh_hh_k_b> sh)] | [(sh <any_Cx_sh_hh_k_b>)])) (iy | ((<any_Vx_sh_hh_iy_noSlide> sh) | (sh <any_Vx_sh_hh_iy_noSlide>)))) (([(<any_Cx_z_sh_k_oh> z)] | [(z <any_Cx_z_sh_k_oh>)]) (k | ((<any_Cx_z_sh_k_oh> z) | (z <any_Cx_z_sh_k_oh>)))) (([(<any_Cx_y_z_oh_k> y)] | [(y <any_Cx_y_z_oh_k>)]) (oh | ((<any_Cx_y_z_oh_z_k> y) | (y <any_Cx_y_z_oh_z_k>)))) (([(<any_Cx_ng_y_z_oh> ng)] | [(ng <any_Cx_ng_y_z_oh>)]) (z | ((<any_Cx_ng_y_z_oh> ng) | (ng <any_Cx_ng_y_z_oh>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_ng_z_thr> thr)] | [(thr <any_Cx_ng_z_thr>)]) sil))
frate, target rule = 105 public <because> = (((sil [((l <any_Cx_b_l_hh>) | (<any_Cx_b_l_hh> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]) | (sil hh (sil [((l <any_Cx_b_l_hh>) | (<any_Cx_b_l_hh> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]))) (([(<any_Cx_sh_hh_l_b> sh)] | [(sh <any_Cx_sh_hh_l_b>)]) (b | ((<any_Cx_sh_hh_l_b> sh) | (sh <any_Cx_sh_hh_l_b>)))) ((([(<any_Vx_r_sh_ih_noSlide> r)] | [(r <any_Vx_r_sh_ih_noSlide>)]) ([(<any_Cx_r_sh_k_b> r)] | [(r <any_Cx_r_sh_k_b>)])) (ih | ((<any_Vx_r_sh_ih_noSlide> r) | (r <any_Vx_r_sh_ih_noSlide>)))) (([(<any_Cx_z_r_k_oh> z)] | [(z <any_Cx_z_r_k_oh>)]) (k | ((<any_Cx_z_r_k_oh> z) | (z <any_Cx_z_r_k_oh>)))) (([(<any_Cx_y_z_oh_k> y)] | [(y <any_Cx_y_z_oh_k>)]) (oh | ((<any_Cx_y_z_oh_z_k> y) | (y <any_Cx_y_z_oh_z_k>)))) (([(<any_Cx_ng_y_z_oh> ng)] | [(ng <any_Cx_ng_y_z_oh>)]) (z | ((<any_Cx_ng_y_z_oh> ng) | (ng <any_Cx_ng_y_z_oh>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_ng_z_thr> thr)] | [(thr <any_Cx_ng_z_thr>)]) sil))
Running scan for frate = 91
Running scan for frate = 91
Considering guard sh with value 1 for b ...
Considering guard hh with value 1 for b ...
candidateGuards = map[hh:true sh:true]
Picking guard, sh

Considering guard s with value 1 for b ...
Considering guard jh with value 1 for b ...
Considering guard sh with value 1 for b ...
candidateGuards = map[jh:true s:true sh:true]
Picking guard, s

Considering guard sh with value 7.800000000000001 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard z with value 6.4 for k ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard z with value 1.6 for k ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard y with value 5.199999999999999 for oh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 5.199999999999999 for oh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard ng with value 1 for z ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 1 for z ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 91 public <because> = (((sil [((d <any_Cx_b_d_hh>) | (<any_Cx_b_d_hh> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil hh (sil [((d <any_Cx_b_d_hh>) | (<any_Cx_b_d_hh> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_sh_hh_d_b> sh)] | [(sh <any_Cx_sh_hh_d_b>)]) (b | ((<any_Cx_sh_hh_d_b> sh) | (sh <any_Cx_sh_hh_d_b>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_k_b> sh)] | [(sh <any_Cx_sh_sh_k_b>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_z_sh_k_oh> z)] | [(z <any_Cx_z_sh_k_oh>)]) (k | ((<any_Cx_z_sh_k_oh> z) | (z <any_Cx_z_sh_k_oh>)))) (([(<any_Cx_y_z_oh_k> y)] | [(y <any_Cx_y_z_oh_k>)]) (oh | ((<any_Cx_y_z_oh_z_k> y) | (y <any_Cx_y_z_oh_z_k>)))) (([(<any_Cx_ng_y_z_oh> ng)] | [(ng <any_Cx_ng_y_z_oh>)]) (z | ((<any_Cx_ng_y_z_oh> ng) | (ng <any_Cx_ng_y_z_oh>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_ng_z_v> v)] | [(v <any_Cx_ng_z_v>)]) sil))
frate, target rule = 91 public <because> = (((sil [((f <any_Cx_b_f_hh>) | (<any_Cx_b_f_hh> f))] [((f <any_vowel_noSlide>) | (<any_vowel_noSlide> f))]) | (sil hh (sil [((f <any_Cx_b_f_hh>) | (<any_Cx_b_f_hh> f))] [((f <any_vowel_noSlide>) | (<any_vowel_noSlide> f))]))) (([(<any_Cx_s_hh_f_b> s)] | [(s <any_Cx_s_hh_f_b>)]) (b | ((<any_Cx_s_hh_f_b> s) | (s <any_Cx_s_hh_f_b>)))) ((([(<any_Vx_r_s_ih_noSlide> r)] | [(r <any_Vx_r_s_ih_noSlide>)]) ([(<any_Cx_r_s_k_b> r)] | [(r <any_Cx_r_s_k_b>)])) (ih | ((<any_Vx_r_s_ih_noSlide> r) | (r <any_Vx_r_s_ih_noSlide>)))) (([(<any_Cx_z_r_k_oh> z)] | [(z <any_Cx_z_r_k_oh>)]) (k | ((<any_Cx_z_r_k_oh> z) | (z <any_Cx_z_r_k_oh>)))) (([(<any_Cx_y_z_oh_k> y)] | [(y <any_Cx_y_z_oh_k>)]) (oh | ((<any_Cx_y_z_oh_z_k> y) | (y <any_Cx_y_z_oh_z_k>)))) (([(<any_Cx_ng_y_z_oh> ng)] | [(ng <any_Cx_ng_y_z_oh>)]) (z | ((<any_Cx_ng_y_z_oh> ng) | (ng <any_Cx_ng_y_z_oh>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_ng_z_v> v)] | [(v <any_Cx_ng_z_v>)]) sil))
Running scan for frate = 80
Running scan for frate = 80
Considering guard hh with value 1 for b ...
Considering guard sh with value 1 for b ...
candidateGuards = map[hh:true sh:true]
Picking guard, hh

Considering guard sh with value 1 for b ...
Considering guard jh with value 1 for b ...
Considering guard s with value 1 for b ...
candidateGuards = map[jh:true s:true sh:true]
Picking guard, sh

Considering guard sh with value 7.800000000000001 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard z with value 6.4 for k ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard z with value 1.6 for k ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard y with value 5.199999999999999 for oh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 5.199999999999999 for oh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard ng with value 1 for z ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 1 for z ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 80 public <because> = (((sil [((p <any_Cx_b_p_hh>) | (<any_Cx_b_p_hh> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]) | (sil hh (sil [((p <any_Cx_b_p_hh>) | (<any_Cx_b_p_hh> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]))) (([(<any_Cx_hh_hh_p_b> hh)] | [(hh <any_Cx_hh_hh_p_b>)]) (b | ((<any_Cx_hh_hh_p_b> hh) | (hh <any_Cx_hh_hh_p_b>)))) ((([(<any_Vx_sh_hh_iy_noSlide> sh)] | [(sh <any_Vx_sh_hh_iy_noSlide>)]) ([(<any_Cx_sh_hh_k_b> sh)] | [(sh <any_Cx_sh_hh_k_b>)])) (iy | ((<any_Vx_sh_hh_iy_noSlide> sh) | (sh <any_Vx_sh_hh_iy_noSlide>)))) (([(<any_Cx_z_sh_k_oh> z)] | [(z <any_Cx_z_sh_k_oh>)]) (k | ((<any_Cx_z_sh_k_oh> z) | (z <any_Cx_z_sh_k_oh>)))) (([(<any_Cx_y_z_oh_k> y)] | [(y <any_Cx_y_z_oh_k>)]) (oh | ((<any_Cx_y_z_oh_z_k> y) | (y <any_Cx_y_z_oh_z_k>)))) (([(<any_Cx_ng_y_z_oh> ng)] | [(ng <any_Cx_ng_y_z_oh>)]) (z | ((<any_Cx_ng_y_z_oh> ng) | (ng <any_Cx_ng_y_z_oh>)))) (([(<any_vowel_noSlide> s)] | [(s <any_vowel_noSlide>)]) ([(<any_Cx_ng_z_s> s)] | [(s <any_Cx_ng_z_s>)]) sil))
frate, target rule = 80 public <because> = (((sil [((v <any_Cx_b_v_hh>) | (<any_Cx_b_v_hh> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]) | (sil hh (sil [((v <any_Cx_b_v_hh>) | (<any_Cx_b_v_hh> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]))) (([(<any_Cx_sh_hh_v_b> sh)] | [(sh <any_Cx_sh_hh_v_b>)]) (b | ((<any_Cx_sh_hh_v_b> sh) | (sh <any_Cx_sh_hh_v_b>)))) ((([(<any_Vx_r_sh_ih_noSlide> r)] | [(r <any_Vx_r_sh_ih_noSlide>)]) ([(<any_Cx_r_sh_k_b> r)] | [(r <any_Cx_r_sh_k_b>)])) (ih | ((<any_Vx_r_sh_ih_noSlide> r) | (r <any_Vx_r_sh_ih_noSlide>)))) (([(<any_Cx_z_r_k_oh> z)] | [(z <any_Cx_z_r_k_oh>)]) (k | ((<any_Cx_z_r_k_oh> z) | (z <any_Cx_z_r_k_oh>)))) (([(<any_Cx_y_z_oh_k> y)] | [(y <any_Cx_y_z_oh_k>)]) (oh | ((<any_Cx_y_z_oh_z_k> y) | (y <any_Cx_y_z_oh_z_k>)))) (([(<any_Cx_ng_y_z_oh> ng)] | [(ng <any_Cx_ng_y_z_oh>)]) (z | ((<any_Cx_ng_y_z_oh> ng) | (ng <any_Cx_ng_y_z_oh>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_ng_z_thr> thr)] | [(thr <any_Cx_ng_z_thr>)]) sil))
Running scan for frate = 72
Running scan for frate = 72
Considering guard hh with value 1 for b ...
Considering guard sh with value 1 for b ...
candidateGuards = map[hh:true sh:true]
Picking guard, hh

Considering guard s with value 1 for b ...
Considering guard jh with value 1 for b ...
Considering guard sh with value 1 for b ...
candidateGuards = map[jh:true s:true sh:true]
Picking guard, sh

Considering guard sh with value 7.800000000000001 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard z with value 6.4 for k ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard z with value 1.6 for k ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard y with value 5.199999999999999 for oh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 5.199999999999999 for oh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard ng with value 1 for z ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 1 for z ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 72 public <because> = (((sil [((dh <any_Cx_b_dh_hh>) | (<any_Cx_b_dh_hh> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]) | (sil hh (sil [((dh <any_Cx_b_dh_hh>) | (<any_Cx_b_dh_hh> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]))) (([(<any_Cx_hh_hh_dh_b> hh)] | [(hh <any_Cx_hh_hh_dh_b>)]) (b | ((<any_Cx_hh_hh_dh_b> hh) | (hh <any_Cx_hh_hh_dh_b>)))) ((([(<any_Vx_sh_hh_iy_noSlide> sh)] | [(sh <any_Vx_sh_hh_iy_noSlide>)]) ([(<any_Cx_sh_hh_k_b> sh)] | [(sh <any_Cx_sh_hh_k_b>)])) (iy | ((<any_Vx_sh_hh_iy_noSlide> sh) | (sh <any_Vx_sh_hh_iy_noSlide>)))) (([(<any_Cx_z_sh_k_oh> z)] | [(z <any_Cx_z_sh_k_oh>)]) (k | ((<any_Cx_z_sh_k_oh> z) | (z <any_Cx_z_sh_k_oh>)))) (([(<any_Cx_y_z_oh_k> y)] | [(y <any_Cx_y_z_oh_k>)]) (oh | ((<any_Cx_y_z_oh_z_k> y) | (y <any_Cx_y_z_oh_z_k>)))) (([(<any_Cx_ng_y_z_oh> ng)] | [(ng <any_Cx_ng_y_z_oh>)]) (z | ((<any_Cx_ng_y_z_oh> ng) | (ng <any_Cx_ng_y_z_oh>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_ng_z_thr> thr)] | [(thr <any_Cx_ng_z_thr>)]) sil))
frate, target rule = 72 public <because> = (((sil [((sh <any_Cx_b_sh_hh>) | (<any_Cx_b_sh_hh> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil hh (sil [((sh <any_Cx_b_sh_hh>) | (<any_Cx_b_sh_hh> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_sh_hh_sh_b> sh)] | [(sh <any_Cx_sh_hh_sh_b>)]) (b | ((<any_Cx_sh_hh_sh_b> sh) | (sh <any_Cx_sh_hh_sh_b>)))) ((([(<any_Vx_r_sh_ih_noSlide> r)] | [(r <any_Vx_r_sh_ih_noSlide>)]) ([(<any_Cx_r_sh_k_b> r)] | [(r <any_Cx_r_sh_k_b>)])) (ih | ((<any_Vx_r_sh_ih_noSlide> r) | (r <any_Vx_r_sh_ih_noSlide>)))) (([(<any_Cx_z_r_k_oh> z)] | [(z <any_Cx_z_r_k_oh>)]) (k | ((<any_Cx_z_r_k_oh> z) | (z <any_Cx_z_r_k_oh>)))) (([(<any_Cx_y_z_oh_k> y)] | [(y <any_Cx_y_z_oh_k>)]) (oh | ((<any_Cx_y_z_oh_z_k> y) | (y <any_Cx_y_z_oh_z_k>)))) (([(<any_Cx_ng_y_z_oh> ng)] | [(ng <any_Cx_ng_y_z_oh>)]) (z | ((<any_Cx_ng_y_z_oh> ng) | (ng <any_Cx_ng_y_z_oh>)))) (([(<any_vowel_noSlide> s)] | [(s <any_vowel_noSlide>)]) ([(<any_Cx_ng_z_s> s)] | [(s <any_Cx_ng_z_s>)]) sil))

results =
{72 [{sil 0 9} {b 10 13} {iy 14 16} {k 17 19} {oh 20 36} {z 37 52} {sil 53 70}]}
{80 [{sil 0 11} {b 12 15} {iy 16 18} {k 19 22} {oh 23 40} {z 41 58} {sil 59 75}]}
{91 [{sil 0 13} {b 14 18} {iy 19 21} {k 22 25} {oh 26 45} {z 46 66} {sil 67 108}]}
{105 [{sil 0 10} {b 11 13} {iy 14 16} {k 17 29} {oh 30 53} {z 54 77} {sil 78 126}]}
{125 [{sil 0 12} {b 13 15} {iy 16 18} {k 19 33} {oh 34 61} {z 62 90} {sil 91 147}]}

normalised results =
{72 [{sil 0 9} {b 14 18} {iy 19 19} {k 24 24} {oh 28 50} {z 51 72} {sil 74 97}]}
{80 [{sil 0 11} {b 15 19} {iy 20 20} {k 24 28} {oh 29 50} {z 51 73} {sil 74 94}]}
{91 [{sil 0 13} {b 15 20} {iy 21 21} {k 24 27} {oh 29 49} {z 51 73} {sil 74 119}]}
{105 [{sil 0 10} {b 10 10} {iy 13 13} {k 16 28} {oh 29 50} {z 51 73} {sil 74 120}]}
{125 [{sil 0 12} {b 10 10} {iy 13 13} {k 15 26} {oh 27 49} {z 50 72} {sil 73 118}]}

ruleAligned = [{{b 1} [{0 1} {1 1} {2 1}]} {{iy 2} []} {{k 0} [{1 3} {2 3} {3 3} {4 3}]} {{oh 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{z 0} [{0 5} {1 5} {2 5} {3 5} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {b 14 18} {iy 19 19} {k 24 24} {oh 28 50} {z 51 72} {sil 74 74}]}
{80 [{sil 0 0} {b 15 19} {iy 20 20} {k 24 28} {oh 29 50} {z 51 73} {sil 74 74}]}
{91 [{sil 0 0} {b 15 20} {iy 21 21} {k 24 27} {oh 29 49} {z 51 73} {sil 74 74}]}
{105 [{sil 0 0} {b 10 10} {iy 13 13} {k 16 28} {oh 29 50} {z 51 73} {sil 74 74}]}
{125 [{sil 0 0} {b 10 10} {iy 13 13} {k 15 26} {oh 27 49} {z 50 72} {sil 73 73}]}

timeAligned = [{{b 15 18} [{0 1} {1 1} {2 1}]} {{k 24 27} [{1 3} {2 3} {3 3} {4 3}]} {{oh 29 50} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{z 51 73} [{0 5} {1 5} {2 5} {3 5} {4 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 -1 18
i, iTime, newITime, timeStartFrom = 2 0 1 18
i, iTime, newITime, timeStartFrom = 3 1 2 27
i, iTime, newITime, timeStartFrom = 4 2 3 49
combinedVerdict    = [{b 1} {iy 2} {k 2} {oh 0} {z 0}]
ruleAlignedVerdict = [{b 1} {iy 2} {k 0} {oh 0} {z 0}]

score->
+1 for b
-2 for iy
-2 for k
+2 for oh
+2 for z
score<-: 1

results =
{72 [{sil 0 9} {b 10 13} {ih 14 16} {k 17 19} {oh 20 36} {z 37 52} {sil 53 70}]}
{80 [{sil 0 11} {b 12 15} {ih 16 18} {k 19 22} {oh 23 40} {z 41 58} {sil 59 75}]}
{91 [{sil 0 13} {b 14 17} {ih 18 20} {k 21 25} {oh 26 45} {z 46 66} {sil 67 108}]}
{105 [{sil 0 10} {b 11 13} {ih 14 16} {k 17 29} {oh 30 53} {z 54 77} {sil 78 126}]}
{125 [{sil 0 11} {b 12 14} {ih 15 17} {k 18 33} {oh 34 61} {z 62 90} {sil 91 147}]}

normalised results =
{72 [{sil 0 9} {b 14 18} {ih 19 19} {k 24 24} {oh 28 50} {z 51 72} {sil 74 97}]}
{80 [{sil 0 11} {b 15 19} {ih 20 20} {k 24 28} {oh 29 50} {z 51 73} {sil 74 94}]}
{91 [{sil 0 13} {b 15 19} {ih 20 20} {k 23 27} {oh 29 49} {z 51 73} {sil 74 119}]}
{105 [{sil 0 10} {b 10 10} {ih 13 13} {k 16 28} {oh 29 50} {z 51 73} {sil 74 120}]}
{125 [{sil 0 11} {b 10 10} {ih 12 12} {k 14 26} {oh 27 49} {z 50 72} {sil 73 118}]}

ruleAligned = [{{b 1} [{0 1} {1 1} {2 1}]} {{ih 2} []} {{k 0} [{1 3} {2 3} {3 3} {4 3}]} {{oh 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{z 0} [{0 5} {1 5} {2 5} {3 5} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {b 14 18} {ih 19 19} {k 24 24} {oh 28 50} {z 51 72} {sil 74 74}]}
{80 [{sil 0 0} {b 15 19} {ih 20 20} {k 24 28} {oh 29 50} {z 51 73} {sil 74 74}]}
{91 [{sil 0 0} {b 15 19} {ih 20 20} {k 23 27} {oh 29 49} {z 51 73} {sil 74 74}]}
{105 [{sil 0 0} {b 10 10} {ih 13 13} {k 16 28} {oh 29 50} {z 51 73} {sil 74 74}]}
{125 [{sil 0 0} {b 10 10} {ih 12 12} {k 14 26} {oh 27 49} {z 50 72} {sil 73 73}]}

timeAligned = [{{b 15 18} [{0 1} {1 1} {2 1}]} {{k 23 27} [{2 3} {3 3} {4 3} {1 3}]} {{oh 29 50} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{z 51 73} [{0 5} {1 5} {2 5} {3 5} {4 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 -1 18
i, iTime, newITime, timeStartFrom = 2 0 1 18
i, iTime, newITime, timeStartFrom = 3 1 2 27
i, iTime, newITime, timeStartFrom = 4 2 3 49
combinedVerdict    = [{b 1} {ih 2} {k 2} {oh 0} {z 0}]
ruleAlignedVerdict = [{b 1} {ih 2} {k 0} {oh 0} {z 0}]

score->
+1 for b
-2 for ih
-2 for k
+2 for oh
+2 for z
score<-: 1
bestResult = {1 [{b 1} {iy 2} {k 2} {oh 0} {z 0}] [b iy k oh z]}
testPronounce b possible iy missing k missing oh good z good
publish->
phonsToAlphas = [{[b] b} {[iy] e} {[k] c} {[oh] au} {[z] se}]
getVerdict<-:new {b [b] 1}
getVerdict<-:new {e [iy] 2}
getVerdict<-:new {c [k] 2}
getVerdict<-:new {au [oh] 0}
getVerdict<-:new {se [z] 0}
lettersVerdicts = [{b [b] 1} {e [iy] 2} {c [k] 2} {au [oh] 0} {se [z] 0}]
publish<-
{
  "word": "because",
  "results": [
    {
      "letters": "b",
      "phonemes": "b",
      "verdict": "possible"
    },
    {
      "letters": "e",
      "phonemes": "iː",
      "verdict": "missing"
    },
    {
      "letters": "c",
      "phonemes": "k",
      "verdict": "missing"
    },
    {
      "letters": "au",
      "phonemes": "ɒ",
      "verdict": "good"
    },
    {
      "letters": "se",
      "phonemes": "z",
      "verdict": "good"
    }
  ],
  "err": null
}
