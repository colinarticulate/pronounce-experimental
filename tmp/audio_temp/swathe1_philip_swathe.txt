Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_4416c008-50da-499c-8ae1-586ad4a1d10e audiofile /Users/test/go/src/Phonemes/audio_clips/swathe1_philip.wav word swathe dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  1.983625



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.74 0.74 1.48

 start3, duration3, end3 =  0.76 0.6799999999999999 1.44

 Initial start, duration, end =  0.64 0.84 1.48

 Cut at: start, duration =  0.64 1.29     guard_end =  1.9300000000000002 

Running scan for frate = 125
Considering guard g with value 1 for s ...
candidateGuards = map[g:true]
Picking guard, g

Considering guard g with value 2.5999999999999996 for w ...
candidateGuards = map[g:true]
Picking guard, g

Considering guard sh with value 3.3999999999999995 for ey ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 1.7999999999999998 for dh ...
candidateGuards = map[ch:true]
Picking guard, ch

frate, target rule = 125 public <swathe> = (((sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil p (sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_g_p_sh_s_w> g)] | [(g <any_Cx_g_p_sh_s_w>)]) (s | z | ((<any_Cx_g_p_sh_s_w> g) | (g <any_Cx_g_p_sh_s_w>)))) (([(<any_Cx_g_g_w_s> g)] | [(g <any_Cx_g_g_w_s>)]) (w | ((<any_Cx_g_g_w> g) | (g <any_Cx_g_g_w>)))) ((([(<any_Vx_sh_g_ey_noSlide> sh)] | [(sh <any_Vx_sh_g_ey_noSlide>)]) ([(<any_Cx_sh_g_dh_w> sh)] | [(sh <any_Cx_sh_g_dh_w>)])) (ey | ((<any_Vx_sh_g_ey_noSlide> sh) | (sh <any_Vx_sh_g_ey_noSlide>)))) (([(<any_Cx_ch_sh_dh> ch)] | [(ch <any_Cx_ch_sh_dh>)]) (dh | ((<any_Cx_ch_sh_dh> ch) | (ch <any_Cx_ch_sh_dh>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_ch_dh_thr> thr)] | [(thr <any_Cx_ch_dh_thr>)]) sil))
Running scan for frate = 105
Considering guard g with value 1 for s ...
candidateGuards = map[g:true]
Picking guard, g

Considering guard g with value 2.5999999999999996 for w ...
candidateGuards = map[g:true]
Picking guard, g

Considering guard sh with value 3.3999999999999995 for ey ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 1.7999999999999998 for dh ...
candidateGuards = map[ch:true]
Picking guard, ch

frate, target rule = 105 public <swathe> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_g_p_ch_s_w> g)] | [(g <any_Cx_g_p_ch_s_w>)]) (s | z | ((<any_Cx_g_p_ch_s_w> g) | (g <any_Cx_g_p_ch_s_w>)))) (([(<any_Cx_g_g_w_s> g)] | [(g <any_Cx_g_g_w_s>)]) (w | ((<any_Cx_g_g_w> g) | (g <any_Cx_g_g_w>)))) ((([(<any_Vx_sh_g_ey_noSlide> sh)] | [(sh <any_Vx_sh_g_ey_noSlide>)]) ([(<any_Cx_sh_g_dh_w> sh)] | [(sh <any_Cx_sh_g_dh_w>)])) (ey | ((<any_Vx_sh_g_ey_noSlide> sh) | (sh <any_Vx_sh_g_ey_noSlide>)))) (([(<any_Cx_ch_sh_dh> ch)] | [(ch <any_Cx_ch_sh_dh>)]) (dh | ((<any_Cx_ch_sh_dh> ch) | (ch <any_Cx_ch_sh_dh>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_ch_dh_p> p)] | [(p <any_Cx_ch_dh_p>)]) sil))
Running scan for frate = 91
Considering guard g with value 1 for s ...
candidateGuards = map[g:true]
Picking guard, g

Considering guard g with value 2.5999999999999996 for w ...
candidateGuards = map[g:true]
Picking guard, g

Considering guard sh with value 3.3999999999999995 for ey ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 1.7999999999999998 for dh ...
candidateGuards = map[ch:true]
Picking guard, ch

frate, target rule = 91 public <swathe> = (((sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]) | (sil p (sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]))) (([(<any_Cx_g_p_th_s_w> g)] | [(g <any_Cx_g_p_th_s_w>)]) (s | z | ((<any_Cx_g_p_th_s_w> g) | (g <any_Cx_g_p_th_s_w>)))) (([(<any_Cx_g_g_w_s> g)] | [(g <any_Cx_g_g_w_s>)]) (w | ((<any_Cx_g_g_w> g) | (g <any_Cx_g_g_w>)))) ((([(<any_Vx_sh_g_ey_noSlide> sh)] | [(sh <any_Vx_sh_g_ey_noSlide>)]) ([(<any_Cx_sh_g_dh_w> sh)] | [(sh <any_Cx_sh_g_dh_w>)])) (ey | ((<any_Vx_sh_g_ey_noSlide> sh) | (sh <any_Vx_sh_g_ey_noSlide>)))) (([(<any_Cx_ch_sh_dh> ch)] | [(ch <any_Cx_ch_sh_dh>)]) (dh | ((<any_Cx_ch_sh_dh> ch) | (ch <any_Cx_ch_sh_dh>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_ch_dh_m> m)] | [(m <any_Cx_ch_dh_m>)]) sil))
Running scan for frate = 80
Considering guard g with value 1 for s ...
candidateGuards = map[g:true]
Picking guard, g

Considering guard g with value 2.5999999999999996 for w ...
candidateGuards = map[g:true]
Picking guard, g

Considering guard sh with value 3.3999999999999995 for ey ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 1.7999999999999998 for dh ...
candidateGuards = map[ch:true]
Picking guard, ch

frate, target rule = 80 public <swathe> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_g_p_ch_s_w> g)] | [(g <any_Cx_g_p_ch_s_w>)]) (s | z | ((<any_Cx_g_p_ch_s_w> g) | (g <any_Cx_g_p_ch_s_w>)))) (([(<any_Cx_g_g_w_s> g)] | [(g <any_Cx_g_g_w_s>)]) (w | ((<any_Cx_g_g_w> g) | (g <any_Cx_g_g_w>)))) ((([(<any_Vx_sh_g_ey_noSlide> sh)] | [(sh <any_Vx_sh_g_ey_noSlide>)]) ([(<any_Cx_sh_g_dh_w> sh)] | [(sh <any_Cx_sh_g_dh_w>)])) (ey | ((<any_Vx_sh_g_ey_noSlide> sh) | (sh <any_Vx_sh_g_ey_noSlide>)))) (([(<any_Cx_ch_sh_dh> ch)] | [(ch <any_Cx_ch_sh_dh>)]) (dh | ((<any_Cx_ch_sh_dh> ch) | (ch <any_Cx_ch_sh_dh>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_ch_dh_ng> ng)] | [(ng <any_Cx_ch_dh_ng>)]) sil))
Running scan for frate = 72
Considering guard g with value 1 for s ...
candidateGuards = map[g:true]
Picking guard, g

Considering guard g with value 2.5999999999999996 for w ...
candidateGuards = map[g:true]
Picking guard, g

Considering guard sh with value 3.3999999999999995 for ey ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 1.7999999999999998 for dh ...
candidateGuards = map[ch:true]
Picking guard, ch

frate, target rule = 72 public <swathe> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_g_p_ch_s_w> g)] | [(g <any_Cx_g_p_ch_s_w>)]) (s | z | ((<any_Cx_g_p_ch_s_w> g) | (g <any_Cx_g_p_ch_s_w>)))) (([(<any_Cx_g_g_w_s> g)] | [(g <any_Cx_g_g_w_s>)]) (w | ((<any_Cx_g_g_w> g) | (g <any_Cx_g_g_w>)))) ((([(<any_Vx_sh_g_ey_noSlide> sh)] | [(sh <any_Vx_sh_g_ey_noSlide>)]) ([(<any_Cx_sh_g_dh_w> sh)] | [(sh <any_Cx_sh_g_dh_w>)])) (ey | ((<any_Vx_sh_g_ey_noSlide> sh) | (sh <any_Vx_sh_g_ey_noSlide>)))) (([(<any_Cx_ch_sh_dh> ch)] | [(ch <any_Cx_ch_sh_dh>)]) (dh | ((<any_Cx_ch_sh_dh> ch) | (ch <any_Cx_ch_sh_dh>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_ch_dh_thr> thr)] | [(thr <any_Cx_ch_dh_thr>)]) sil))

results =
{72 [{sil 0 2} {s 3 12} {w 13 23} {ey 24 42} {dh 43 50} {sil 51 73}]}
{80 [{sil 0 2} {s 3 13} {w 14 25} {ey 26 47} {dh 48 54} {sil 55 79}]}
{91 [{sil 0 2} {s 3 16} {w 17 29} {ey 30 53} {m 54 68} {ch 69 71} {sil 72 116}]}
{105 [{sil 0 2} {s 3 19} {w 20 33} {ey 34 61} {m 62 73} {ch 74 76} {dh 77 84} {sil 85 134}]}
{125 [{sil 0 2} {s 3 21} {w 22 37} {ey 38 80} {dh 81 83} {sil 84 158}]}

normalised results =
{72 [{sil 0 2} {s 4 17} {w 18 32} {ey 33 58} {dh 60 69} {sil 71 101}]}
{80 [{sil 0 2} {s 4 16} {w 18 31} {ey 33 59} {dh 60 68} {sil 69 99}]}
{91 [{sil 0 2} {s 3 18} {w 19 32} {ey 33 58} {m 59 75} {ch 76 76} {sil 79 127}]}
{105 [{sil 0 2} {s 3 18} {w 19 31} {ey 32 58} {m 59 70} {ch 70 70} {dh 73 80} {sil 81 128}]}
{125 [{sil 0 2} {s 2 17} {w 18 30} {ey 30 64} {dh 65 65} {sil 67 126}]}

ruleAligned = [{{s 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{w 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{ey 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{dh 1} [{0 4} {1 4} {3 6}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {s 4 17} {w 18 32} {ey 33 58} {dh 60 69} {sil 71 71}]}
{80 [{sil 0 0} {s 4 16} {w 18 31} {ey 33 59} {dh 60 68} {sil 69 69}]}
{91 [{sil 0 0} {s 3 18} {w 19 32} {ey 33 58} {m 59 75} {ch 76 76} {sil 79 79}]}
{105 [{sil 0 0} {s 3 18} {w 19 31} {ey 32 58} {m 59 70} {ch 70 70} {dh 73 80} {sil 81 81}]}
{125 [{sil 0 0} {s 2 17} {w 18 30} {ey 30 64} {dh 65 65} {sil 67 67}]}

timeAligned = [{{s 3 17} [{2 1} {3 1} {4 1} {0 1} {1 1}]} {{w 18 31} [{0 2} {1 2} {4 2} {2 2} {3 2}]} {{ey 33 58} [{0 3} {1 3} {2 3} {3 3} {4 3}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 16
i, iTime, newITime, timeStartFrom = 2 1 2 30
i, iTime, newITime, timeStartFrom = 3 2 -1 58
combinedVerdict    = [{s 0} {w 0} {ey 0} {dh 2}]
ruleAlignedVerdict = [{s 0} {w 0} {ey 0} {dh 1}]

score->
+2 for s
+2 for w
+2 for ey
-2 for dh
score<-: 4
bestResult = {4 [{s 0} {w 0} {ey 0} {dh 2}] [s w ey dh]}
testPronounce s good w good ey good dh missing
publish->
phonsToAlphas = [{[s] s} {[w] w} {[ey] a} {[dh] the}]
getVerdict<-:new {s [s] 0}
getVerdict<-:new {w [w] 0}
getVerdict<-:new {a [ey] 0}
getVerdict<-:new {the [dh] 2}
lettersVerdicts = [{s [s] 0} {w [w] 0} {a [ey] 0} {the [dh] 2}]
publish<-
{
  "word": "swathe",
  "results": [
    {
      "letters": "s",
      "phonemes": "s",
      "verdict": "good"
    },
    {
      "letters": "w",
      "phonemes": "w",
      "verdict": "good"
    },
    {
      "letters": "a",
      "phonemes": "eɪ",
      "verdict": "good"
    },
    {
      "letters": "the",
      "phonemes": "ð",
      "verdict": "missing"
    }
  ],
  "err": null
}
