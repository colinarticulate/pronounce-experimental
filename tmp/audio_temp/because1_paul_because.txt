Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_0360f2da-8d67-4f8e-8d05-286164230004 audiofile /Users/test/go/src/Phonemes/audio_clips/because1_paul.wav word because dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  2.018687



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.76 0.94 1.7

 start3, duration3, end3 =  0.76 0.7999999999999999 1.56

 Initial start, duration, end =  0.66 1.04 1.7

 Cut at: start, duration =  0.66 1.3386869999999997     guard_end =  1.9986869999999999 

Running scan for frate = 125
Running scan for frate = 125
Considering guard hh with value 1 for b ...
Considering guard sh with value 1 for b ...
candidateGuards = map[hh:true sh:true]
Picking guard, hh

Considering guard jh with value 1 for b ...
Considering guard s with value 1 for b ...
Considering guard sh with value 1 for b ...
candidateGuards = map[jh:true s:true sh:true]
Picking guard, jh

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard sh with value 7.800000000000001 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard z with value 1.6 for k ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard z with value 6.4 for k ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard y with value 5.199999999999999 for oh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 5.199999999999999 for oh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard ng with value 1 for z ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 1 for z ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 125 public <because> = (((sil [((hh <any_Cx_b_hh_hh>) | (<any_Cx_b_hh_hh> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil hh (sil [((hh <any_Cx_b_hh_hh>) | (<any_Cx_b_hh_hh> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_jh_hh_hh_b> jh)] | [(jh <any_Cx_jh_hh_hh_b>)]) (b | ((<any_Cx_jh_hh_hh_b> jh) | (jh <any_Cx_jh_hh_hh_b>)))) ((([(<any_Vx_r_jh_ih_noSlide> r)] | [(r <any_Vx_r_jh_ih_noSlide>)]) ([(<any_Cx_r_jh_k_b> r)] | [(r <any_Cx_r_jh_k_b>)])) (ih | ((<any_Vx_r_jh_ih_noSlide> r) | (r <any_Vx_r_jh_ih_noSlide>)))) (([(<any_Cx_z_r_k_oh> z)] | [(z <any_Cx_z_r_k_oh>)]) (k | ((<any_Cx_z_r_k_oh> z) | (z <any_Cx_z_r_k_oh>)))) (([(<any_Cx_y_z_oh_k> y)] | [(y <any_Cx_y_z_oh_k>)]) (oh | ((<any_Cx_y_z_oh_z_k> y) | (y <any_Cx_y_z_oh_z_k>)))) (([(<any_Cx_ng_y_z_oh> ng)] | [(ng <any_Cx_ng_y_z_oh>)]) (z | ((<any_Cx_ng_y_z_oh> ng) | (ng <any_Cx_ng_y_z_oh>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_ng_z_b> b)] | [(b <any_Cx_ng_z_b>)]) sil))
frate, target rule = 125 public <because> = (((sil [((hh <any_Cx_b_hh_hh>) | (<any_Cx_b_hh_hh> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil hh (sil [((hh <any_Cx_b_hh_hh>) | (<any_Cx_b_hh_hh> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_hh_hh_hh_b> hh)] | [(hh <any_Cx_hh_hh_hh_b>)]) (b | ((<any_Cx_hh_hh_hh_b> hh) | (hh <any_Cx_hh_hh_hh_b>)))) ((([(<any_Vx_sh_hh_iy_noSlide> sh)] | [(sh <any_Vx_sh_hh_iy_noSlide>)]) ([(<any_Cx_sh_hh_k_b> sh)] | [(sh <any_Cx_sh_hh_k_b>)])) (iy | ((<any_Vx_sh_hh_iy_noSlide> sh) | (sh <any_Vx_sh_hh_iy_noSlide>)))) (([(<any_Cx_z_sh_k_oh> z)] | [(z <any_Cx_z_sh_k_oh>)]) (k | ((<any_Cx_z_sh_k_oh> z) | (z <any_Cx_z_sh_k_oh>)))) (([(<any_Cx_y_z_oh_k> y)] | [(y <any_Cx_y_z_oh_k>)]) (oh | ((<any_Cx_y_z_oh_z_k> y) | (y <any_Cx_y_z_oh_z_k>)))) (([(<any_Cx_ng_y_z_oh> ng)] | [(ng <any_Cx_ng_y_z_oh>)]) (z | ((<any_Cx_ng_y_z_oh> ng) | (ng <any_Cx_ng_y_z_oh>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_ng_z_v> v)] | [(v <any_Cx_ng_z_v>)]) sil))
Running scan for frate = 105
Running scan for frate = 105
Considering guard sh with value 1 for b ...
Considering guard hh with value 1 for b ...
candidateGuards = map[hh:true sh:true]
Picking guard, sh

Considering guard s with value 1 for b ...
Considering guard sh with value 1 for b ...
Considering guard jh with value 1 for b ...
candidateGuards = map[jh:true s:true sh:true]
Picking guard, s

Considering guard sh with value 7.800000000000001 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard z with value 6.4 for k ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard y with value 5.199999999999999 for oh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard ng with value 1 for z ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard z with value 1.6 for k ...
candidateGuards = map[z:true]
Picking guard, z

frate, target rule = 105 public <because> = (((sil [((p <any_Cx_b_p_hh>) | (<any_Cx_b_p_hh> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]) | (sil hh (sil [((p <any_Cx_b_p_hh>) | (<any_Cx_b_p_hh> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]))) (([(<any_Cx_sh_hh_p_b> sh)] | [(sh <any_Cx_sh_hh_p_b>)]) (b | ((<any_Cx_sh_hh_p_b> sh) | (sh <any_Cx_sh_hh_p_b>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_k_b> sh)] | [(sh <any_Cx_sh_sh_k_b>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_z_sh_k_oh> z)] | [(z <any_Cx_z_sh_k_oh>)]) (k | ((<any_Cx_z_sh_k_oh> z) | (z <any_Cx_z_sh_k_oh>)))) (([(<any_Cx_y_z_oh_k> y)] | [(y <any_Cx_y_z_oh_k>)]) (oh | ((<any_Cx_y_z_oh_z_k> y) | (y <any_Cx_y_z_oh_z_k>)))) (([(<any_Cx_ng_y_z_oh> ng)] | [(ng <any_Cx_ng_y_z_oh>)]) (z | ((<any_Cx_ng_y_z_oh> ng) | (ng <any_Cx_ng_y_z_oh>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_ng_z_thr> thr)] | [(thr <any_Cx_ng_z_thr>)]) sil))
Considering guard y with value 5.199999999999999 for oh ...
candidateGuards = map[y:true]
Picking guard, y

Running scan for frate = 91
Considering guard sh with value 1 for b ...
Considering guard hh with value 1 for b ...
candidateGuards = map[hh:true sh:true]
Picking guard, sh

Considering guard sh with value 7.800000000000001 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ng with value 1 for z ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard z with value 6.4 for k ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard y with value 5.199999999999999 for oh ...
candidateGuards = map[y:true]
Picking guard, y

frate, target rule = 105 public <because> = (((sil [((d <any_Cx_b_d_hh>) | (<any_Cx_b_d_hh> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil hh (sil [((d <any_Cx_b_d_hh>) | (<any_Cx_b_d_hh> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_s_hh_d_b> s)] | [(s <any_Cx_s_hh_d_b>)]) (b | ((<any_Cx_s_hh_d_b> s) | (s <any_Cx_s_hh_d_b>)))) ((([(<any_Vx_r_s_ih_noSlide> r)] | [(r <any_Vx_r_s_ih_noSlide>)]) ([(<any_Cx_r_s_k_b> r)] | [(r <any_Cx_r_s_k_b>)])) (ih | ((<any_Vx_r_s_ih_noSlide> r) | (r <any_Vx_r_s_ih_noSlide>)))) (([(<any_Cx_z_r_k_oh> z)] | [(z <any_Cx_z_r_k_oh>)]) (k | ((<any_Cx_z_r_k_oh> z) | (z <any_Cx_z_r_k_oh>)))) (([(<any_Cx_y_z_oh_k> y)] | [(y <any_Cx_y_z_oh_k>)]) (oh | ((<any_Cx_y_z_oh_z_k> y) | (y <any_Cx_y_z_oh_z_k>)))) (([(<any_Cx_ng_y_z_oh> ng)] | [(ng <any_Cx_ng_y_z_oh>)]) (z | ((<any_Cx_ng_y_z_oh> ng) | (ng <any_Cx_ng_y_z_oh>)))) (([(<any_vowel_noSlide> s)] | [(s <any_vowel_noSlide>)]) ([(<any_Cx_ng_z_s> s)] | [(s <any_Cx_ng_z_s>)]) sil))
Considering guard ng with value 1 for z ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 91 public <because> = (((sil [((l <any_Cx_b_l_hh>) | (<any_Cx_b_l_hh> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]) | (sil hh (sil [((l <any_Cx_b_l_hh>) | (<any_Cx_b_l_hh> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]))) (([(<any_Cx_sh_hh_l_b> sh)] | [(sh <any_Cx_sh_hh_l_b>)]) (b | ((<any_Cx_sh_hh_l_b> sh) | (sh <any_Cx_sh_hh_l_b>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_k_b> sh)] | [(sh <any_Cx_sh_sh_k_b>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_z_sh_k_oh> z)] | [(z <any_Cx_z_sh_k_oh>)]) (k | ((<any_Cx_z_sh_k_oh> z) | (z <any_Cx_z_sh_k_oh>)))) (([(<any_Cx_y_z_oh_k> y)] | [(y <any_Cx_y_z_oh_k>)]) (oh | ((<any_Cx_y_z_oh_z_k> y) | (y <any_Cx_y_z_oh_z_k>)))) (([(<any_Cx_ng_y_z_oh> ng)] | [(ng <any_Cx_ng_y_z_oh>)]) (z | ((<any_Cx_ng_y_z_oh> ng) | (ng <any_Cx_ng_y_z_oh>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_ng_z_v> v)] | [(v <any_Cx_ng_z_v>)]) sil))
Running scan for frate = 91
Running scan for frate = 80
Considering guard jh with value 1 for b ...
Considering guard sh with value 1 for b ...
Considering guard s with value 1 for b ...
candidateGuards = map[jh:true s:true sh:true]
Picking guard, s

Considering guard sh with value 1 for b ...
Considering guard hh with value 1 for b ...
candidateGuards = map[hh:true sh:true]
Picking guard, sh

Considering guard sh with value 7.800000000000001 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard z with value 1.6 for k ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard z with value 6.4 for k ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard y with value 5.199999999999999 for oh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 5.199999999999999 for oh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard ng with value 1 for z ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 1 for z ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 91 public <because> = (((sil [((dh <any_Cx_b_dh_hh>) | (<any_Cx_b_dh_hh> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]) | (sil hh (sil [((dh <any_Cx_b_dh_hh>) | (<any_Cx_b_dh_hh> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]))) (([(<any_Cx_s_hh_dh_b> s)] | [(s <any_Cx_s_hh_dh_b>)]) (b | ((<any_Cx_s_hh_dh_b> s) | (s <any_Cx_s_hh_dh_b>)))) ((([(<any_Vx_r_s_ih_noSlide> r)] | [(r <any_Vx_r_s_ih_noSlide>)]) ([(<any_Cx_r_s_k_b> r)] | [(r <any_Cx_r_s_k_b>)])) (ih | ((<any_Vx_r_s_ih_noSlide> r) | (r <any_Vx_r_s_ih_noSlide>)))) (([(<any_Cx_z_r_k_oh> z)] | [(z <any_Cx_z_r_k_oh>)]) (k | ((<any_Cx_z_r_k_oh> z) | (z <any_Cx_z_r_k_oh>)))) (([(<any_Cx_y_z_oh_k> y)] | [(y <any_Cx_y_z_oh_k>)]) (oh | ((<any_Cx_y_z_oh_z_k> y) | (y <any_Cx_y_z_oh_z_k>)))) (([(<any_Cx_ng_y_z_oh> ng)] | [(ng <any_Cx_ng_y_z_oh>)]) (z | ((<any_Cx_ng_y_z_oh> ng) | (ng <any_Cx_ng_y_z_oh>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_ng_z_v> v)] | [(v <any_Cx_ng_z_v>)]) sil))
frate, target rule = 80 public <because> = (((sil [((sh <any_Cx_b_sh_hh>) | (<any_Cx_b_sh_hh> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil hh (sil [((sh <any_Cx_b_sh_hh>) | (<any_Cx_b_sh_hh> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_sh_hh_sh_b> sh)] | [(sh <any_Cx_sh_hh_sh_b>)]) (b | ((<any_Cx_sh_hh_sh_b> sh) | (sh <any_Cx_sh_hh_sh_b>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_k_b> sh)] | [(sh <any_Cx_sh_sh_k_b>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_z_sh_k_oh> z)] | [(z <any_Cx_z_sh_k_oh>)]) (k | ((<any_Cx_z_sh_k_oh> z) | (z <any_Cx_z_sh_k_oh>)))) (([(<any_Cx_y_z_oh_k> y)] | [(y <any_Cx_y_z_oh_k>)]) (oh | ((<any_Cx_y_z_oh_z_k> y) | (y <any_Cx_y_z_oh_z_k>)))) (([(<any_Cx_ng_y_z_oh> ng)] | [(ng <any_Cx_ng_y_z_oh>)]) (z | ((<any_Cx_ng_y_z_oh> ng) | (ng <any_Cx_ng_y_z_oh>)))) (([(<any_vowel_noSlide> s)] | [(s <any_vowel_noSlide>)]) ([(<any_Cx_ng_z_s> s)] | [(s <any_Cx_ng_z_s>)]) sil))
Running scan for frate = 80
Running scan for frate = 72
Considering guard sh with value 1 for b ...
Considering guard jh with value 1 for b ...
Considering guard s with value 1 for b ...
candidateGuards = map[jh:true s:true sh:true]
Picking guard, sh

Considering guard hh with value 1 for b ...
Considering guard sh with value 1 for b ...
candidateGuards = map[hh:true sh:true]
Picking guard, sh

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard sh with value 7.800000000000001 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard z with value 1.6 for k ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard z with value 6.4 for k ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard y with value 5.199999999999999 for oh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 5.199999999999999 for oh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard ng with value 1 for z ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 1 for z ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 80 public <because> = (((sil [((l <any_Cx_b_l_hh>) | (<any_Cx_b_l_hh> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]) | (sil hh (sil [((l <any_Cx_b_l_hh>) | (<any_Cx_b_l_hh> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]))) (([(<any_Cx_sh_hh_l_b> sh)] | [(sh <any_Cx_sh_hh_l_b>)]) (b | ((<any_Cx_sh_hh_l_b> sh) | (sh <any_Cx_sh_hh_l_b>)))) ((([(<any_Vx_r_sh_ih_noSlide> r)] | [(r <any_Vx_r_sh_ih_noSlide>)]) ([(<any_Cx_r_sh_k_b> r)] | [(r <any_Cx_r_sh_k_b>)])) (ih | ((<any_Vx_r_sh_ih_noSlide> r) | (r <any_Vx_r_sh_ih_noSlide>)))) (([(<any_Cx_z_r_k_oh> z)] | [(z <any_Cx_z_r_k_oh>)]) (k | ((<any_Cx_z_r_k_oh> z) | (z <any_Cx_z_r_k_oh>)))) (([(<any_Cx_y_z_oh_k> y)] | [(y <any_Cx_y_z_oh_k>)]) (oh | ((<any_Cx_y_z_oh_z_k> y) | (y <any_Cx_y_z_oh_z_k>)))) (([(<any_Cx_ng_y_z_oh> ng)] | [(ng <any_Cx_ng_y_z_oh>)]) (z | ((<any_Cx_ng_y_z_oh> ng) | (ng <any_Cx_ng_y_z_oh>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_ng_z_b> b)] | [(b <any_Cx_ng_z_b>)]) sil))
frate, target rule = 72 public <because> = (((sil [((p <any_Cx_b_p_hh>) | (<any_Cx_b_p_hh> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]) | (sil hh (sil [((p <any_Cx_b_p_hh>) | (<any_Cx_b_p_hh> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]))) (([(<any_Cx_sh_hh_p_b> sh)] | [(sh <any_Cx_sh_hh_p_b>)]) (b | ((<any_Cx_sh_hh_p_b> sh) | (sh <any_Cx_sh_hh_p_b>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_k_b> sh)] | [(sh <any_Cx_sh_sh_k_b>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_z_sh_k_oh> z)] | [(z <any_Cx_z_sh_k_oh>)]) (k | ((<any_Cx_z_sh_k_oh> z) | (z <any_Cx_z_sh_k_oh>)))) (([(<any_Cx_y_z_oh_k> y)] | [(y <any_Cx_y_z_oh_k>)]) (oh | ((<any_Cx_y_z_oh_z_k> y) | (y <any_Cx_y_z_oh_z_k>)))) (([(<any_Cx_ng_y_z_oh> ng)] | [(ng <any_Cx_ng_y_z_oh>)]) (z | ((<any_Cx_ng_y_z_oh> ng) | (ng <any_Cx_ng_y_z_oh>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_ng_z_b> b)] | [(b <any_Cx_ng_z_b>)]) sil))
Running scan for frate = 72
Considering guard sh with value 1 for b ...
Considering guard jh with value 1 for b ...
Considering guard s with value 1 for b ...
candidateGuards = map[jh:true s:true sh:true]
Picking guard, sh

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard z with value 1.6 for k ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard y with value 5.199999999999999 for oh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard ng with value 1 for z ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 72 public <because> = (((sil [((hh <any_Cx_b_hh_hh>) | (<any_Cx_b_hh_hh> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil hh (sil [((hh <any_Cx_b_hh_hh>) | (<any_Cx_b_hh_hh> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_sh_hh_hh_b> sh)] | [(sh <any_Cx_sh_hh_hh_b>)]) (b | ((<any_Cx_sh_hh_hh_b> sh) | (sh <any_Cx_sh_hh_hh_b>)))) ((([(<any_Vx_r_sh_ih_noSlide> r)] | [(r <any_Vx_r_sh_ih_noSlide>)]) ([(<any_Cx_r_sh_k_b> r)] | [(r <any_Cx_r_sh_k_b>)])) (ih | ((<any_Vx_r_sh_ih_noSlide> r) | (r <any_Vx_r_sh_ih_noSlide>)))) (([(<any_Cx_z_r_k_oh> z)] | [(z <any_Cx_z_r_k_oh>)]) (k | ((<any_Cx_z_r_k_oh> z) | (z <any_Cx_z_r_k_oh>)))) (([(<any_Cx_y_z_oh_k> y)] | [(y <any_Cx_y_z_oh_k>)]) (oh | ((<any_Cx_y_z_oh_z_k> y) | (y <any_Cx_y_z_oh_z_k>)))) (([(<any_Cx_ng_y_z_oh> ng)] | [(ng <any_Cx_ng_y_z_oh>)]) (z | ((<any_Cx_ng_y_z_oh> ng) | (ng <any_Cx_ng_y_z_oh>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_ng_z_v> v)] | [(v <any_Cx_ng_z_v>)]) sil))

results =
{72 [{sil 0 10} {b 11 14} {ih 15 22} {k 23 31} {oh 32 54} {z 55 70} {sil 71 88}]}
{80 [{sil 0 11} {b 12 16} {ih 17 25} {k 26 34} {oh 35 60} {z 61 77} {sil 78 96}]}
{91 [{sil 0 13} {b 14 19} {ih 20 29} {k 30 39} {oh 40 67} {z 68 89} {sil 90 120}]}
{105 [{sil 0 16} {b 17 22} {ih 23 33} {k 34 46} {oh 47 78} {z 79 103} {sil 104 139}]}
{125 [{sil 0 18} {b 19 24} {ih 25 37} {k 38 53} {oh 54 92} {z 93 121} {sil 122 164}]}

normalised results =
{72 [{sil 0 10} {b 15 19} {ih 21 31} {k 32 43} {oh 44 75} {z 76 97} {sil 99 122}]}
{80 [{sil 0 11} {b 15 20} {ih 21 31} {k 33 43} {oh 44 75} {z 76 96} {sil 98 120}]}
{91 [{sil 0 13} {b 15 21} {ih 22 32} {k 33 43} {oh 44 74} {z 75 98} {sil 99 132}]}
{105 [{sil 0 16} {b 16 21} {ih 22 31} {k 32 44} {oh 45 74} {z 75 98} {sil 99 132}]}
{125 [{sil 0 18} {b 15 19} {ih 20 30} {k 30 42} {oh 43 74} {z 74 97} {sil 98 131}]}

ruleAligned = [{{b 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ih 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{k 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{oh 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{z 0} [{0 5} {1 5} {2 5} {3 5} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {b 15 19} {ih 21 31} {k 32 43} {oh 44 75} {z 76 97} {sil 99 99}]}
{80 [{sil 0 0} {b 15 20} {ih 21 31} {k 33 43} {oh 44 75} {z 76 96} {sil 98 98}]}
{91 [{sil 0 0} {b 15 21} {ih 22 32} {k 33 43} {oh 44 74} {z 75 98} {sil 99 99}]}
{105 [{sil 0 0} {b 16 21} {ih 22 31} {k 32 44} {oh 45 74} {z 75 98} {sil 99 99}]}
{125 [{sil 0 0} {b 15 19} {ih 20 30} {k 30 42} {oh 43 74} {z 74 97} {sil 98 98}]}

timeAligned = [{{b 15 20} [{0 1} {1 1} {2 1} {4 1} {3 1}]} {{ih 21 31} [{0 2} {1 2} {4 2} {2 2} {3 2}]} {{k 32 43} [{0 3} {3 3} {4 3} {1 3} {2 3}]} {{oh 44 74} [{0 4} {1 4} {2 4} {4 4} {3 4}]} {{z 75 97} [{2 5} {3 5} {4 5} {0 5} {1 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 19
i, iTime, newITime, timeStartFrom = 2 1 2 30
i, iTime, newITime, timeStartFrom = 3 2 3 42
i, iTime, newITime, timeStartFrom = 4 3 4 74
combinedVerdict    = [{b 0} {ih 0} {k 0} {oh 0} {z 0}]
ruleAlignedVerdict = [{b 0} {ih 0} {k 0} {oh 0} {z 0}]

score->
+2 for b
+2 for ih
+2 for k
+2 for oh
+2 for z
score<-: 15

results =
{72 [{sil 0 10} {b 11 15} {iy 16 20} {k 21 31} {oh 32 54} {z 55 70} {sil 71 88}]}
{80 [{sil 0 11} {b 12 16} {iy 17 22} {k 23 34} {oh 35 60} {z 61 77} {sil 78 96}]}
{91 [{sil 0 13} {b 14 19} {iy 20 26} {k 27 39} {oh 40 67} {z 68 89} {sil 90 120}]}
{105 [{sil 0 16} {b 17 22} {iy 23 31} {k 32 46} {oh 47 78} {z 79 103} {sil 104 139}]}
{125 [{sil 0 18} {b 19 24} {iy 25 34} {k 35 53} {oh 54 92} {z 93 121} {sil 122 164}]}

normalised results =
{72 [{sil 0 10} {b 15 21} {iy 22 28} {k 29 43} {oh 44 75} {z 76 97} {sil 99 122}]}
{80 [{sil 0 11} {b 15 20} {iy 21 28} {k 29 43} {oh 44 75} {z 76 96} {sil 98 120}]}
{91 [{sil 0 13} {b 15 21} {iy 22 29} {k 30 43} {oh 44 74} {z 75 98} {sil 99 132}]}
{105 [{sil 0 16} {b 16 21} {iy 22 30} {k 30 44} {oh 45 74} {z 75 98} {sil 99 132}]}
{125 [{sil 0 18} {b 15 19} {iy 20 27} {k 28 42} {oh 43 74} {z 74 97} {sil 98 131}]}

ruleAligned = [{{b 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{iy 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{k 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{oh 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{z 0} [{0 5} {1 5} {2 5} {3 5} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {b 15 21} {iy 22 28} {k 29 43} {oh 44 75} {z 76 97} {sil 99 99}]}
{80 [{sil 0 0} {b 15 20} {iy 21 28} {k 29 43} {oh 44 75} {z 76 96} {sil 98 98}]}
{91 [{sil 0 0} {b 15 21} {iy 22 29} {k 30 43} {oh 44 74} {z 75 98} {sil 99 99}]}
{105 [{sil 0 0} {b 16 21} {iy 22 30} {k 30 44} {oh 45 74} {z 75 98} {sil 99 99}]}
{125 [{sil 0 0} {b 15 19} {iy 20 27} {k 28 42} {oh 43 74} {z 74 97} {sil 98 98}]}

timeAligned = [{{b 15 21} [{0 1} {1 1} {2 1} {4 1} {3 1}]} {{iy 22 28} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{k 29 43} [{0 3} {1 3} {4 3} {2 3} {3 3}]} {{oh 44 74} [{0 4} {1 4} {2 4} {4 4} {3 4}]} {{z 75 97} [{2 5} {3 5} {4 5} {0 5} {1 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 19
i, iTime, newITime, timeStartFrom = 2 1 2 27
i, iTime, newITime, timeStartFrom = 3 2 3 42
i, iTime, newITime, timeStartFrom = 4 3 4 74
combinedVerdict    = [{b 0} {iy 0} {k 0} {oh 0} {z 0}]
ruleAlignedVerdict = [{b 0} {iy 0} {k 0} {oh 0} {z 0}]

score->
+2 for b
+2 for iy
+2 for k
+2 for oh
+2 for z
score<-: 15
testPronounce b good ih good k good oh good z good
publish->
phonsToAlphas = [{[b] b} {[ih] e} {[k] c} {[oh] au} {[z] se}]
getVerdict<-:new {b [b] 0}
getVerdict<-:new {e [ih] 0}
getVerdict<-:new {c [k] 0}
getVerdict<-:new {au [oh] 0}
getVerdict<-:new {se [z] 0}
lettersVerdicts = [{b [b] 0} {e [ih] 0} {c [k] 0} {au [oh] 0} {se [z] 0}]
publish<-
{
  "word": "because",
  "results": [
    {
      "letters": "b",
      "phonemes": "b",
      "verdict": "good"
    },
    {
      "letters": "e",
      "phonemes": "ɪ",
      "verdict": "good"
    },
    {
      "letters": "c",
      "phonemes": "k",
      "verdict": "good"
    },
    {
      "letters": "au",
      "phonemes": "ɒ",
      "verdict": "good"
    },
    {
      "letters": "se",
      "phonemes": "z",
      "verdict": "good"
    }
  ],
  "err": null
}
