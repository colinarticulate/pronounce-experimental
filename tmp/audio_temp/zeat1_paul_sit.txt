Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_9acd36a7-b429-412e-89b2-f25d12f4dcd5 audiofile /Users/test/go/src/Phonemes/audio_clips/zeat1_paul.wav word sit dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  2.111562



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.62 0.7 1.3199999999999998

 start3, duration3, end3 =  0.62 0.52 1.1400000000000001

 Initial start, duration, end =  0.52 0.7999999999999998 1.3199999999999998

 Cut at: start, duration =  0.52 1.2499999999999998     guard_end =  1.7699999999999998 

Running scan for frate = 125
Considering guard l with value 3.3999999999999995 for s ...
candidateGuards = map[l:true]
Picking guard, l

Considering guard l with value 6.799999999999999 for ih ...
candidateGuards = map[l:true]
Picking guard, l

Considering guard r with value 3 for t ...
candidateGuards = map[r:true]
Picking guard, r

frate, target rule = 125 public <sit> = (((sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_l_p_z_s> l)] | [(l <any_Cx_l_p_z_s>)]) (s | z | ((<any_Cx_l_p_z_s> l) | (l <any_Cx_l_p_z_s>)))) ((([(<any_Vx_l_l_ih_noSlide> l)] | [(l <any_Vx_l_l_ih_noSlide>)]) ([(<any_Cx_l_l_t_s> l)] | [(l <any_Cx_l_l_t_s>)])) (ih | ((<any_Vx_l_l_ih_noSlide> l) | (l <any_Vx_l_l_ih_noSlide>)))) (([(<any_Cx_r_l_t> r)] | [(r <any_Cx_r_l_t>)]) (t | ((<any_Cx_r_l_t> r) | (r <any_Cx_r_l_t>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_r_t_p> p)] | [(p <any_Cx_r_t_p>)]) sil))
Running scan for frate = 105
Considering guard l with value 3.3999999999999995 for s ...
candidateGuards = map[l:true]
Picking guard, l

Considering guard l with value 6.799999999999999 for ih ...
candidateGuards = map[l:true]
Picking guard, l

Considering guard r with value 3 for t ...
candidateGuards = map[r:true]
Picking guard, r

frate, target rule = 105 public <sit> = (((sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]) | (sil p (sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]))) (([(<any_Cx_l_p_th_s> l)] | [(l <any_Cx_l_p_th_s>)]) (s | z | ((<any_Cx_l_p_th_s> l) | (l <any_Cx_l_p_th_s>)))) ((([(<any_Vx_l_l_ih_noSlide> l)] | [(l <any_Vx_l_l_ih_noSlide>)]) ([(<any_Cx_l_l_t_s> l)] | [(l <any_Cx_l_l_t_s>)])) (ih | ((<any_Vx_l_l_ih_noSlide> l) | (l <any_Vx_l_l_ih_noSlide>)))) (([(<any_Cx_r_l_t> r)] | [(r <any_Cx_r_l_t>)]) (t | ((<any_Cx_r_l_t> r) | (r <any_Cx_r_l_t>)))) (([(<any_vowel_noSlide> k)] | [(k <any_vowel_noSlide>)]) ([(<any_Cx_r_t_k> k)] | [(k <any_Cx_r_t_k>)]) sil))
Running scan for frate = 91
Considering guard l with value 3.3999999999999995 for s ...
candidateGuards = map[l:true]
Picking guard, l

Considering guard l with value 6.799999999999999 for ih ...
candidateGuards = map[l:true]
Picking guard, l

Considering guard r with value 3 for t ...
candidateGuards = map[r:true]
Picking guard, r

frate, target rule = 91 public <sit> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_l_p_ch_s> l)] | [(l <any_Cx_l_p_ch_s>)]) (s | z | ((<any_Cx_l_p_ch_s> l) | (l <any_Cx_l_p_ch_s>)))) ((([(<any_Vx_l_l_ih_noSlide> l)] | [(l <any_Vx_l_l_ih_noSlide>)]) ([(<any_Cx_l_l_t_s> l)] | [(l <any_Cx_l_l_t_s>)])) (ih | ((<any_Vx_l_l_ih_noSlide> l) | (l <any_Vx_l_l_ih_noSlide>)))) (([(<any_Cx_r_l_t> r)] | [(r <any_Cx_r_l_t>)]) (t | ((<any_Cx_r_l_t> r) | (r <any_Cx_r_l_t>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_r_t_p> p)] | [(p <any_Cx_r_t_p>)]) sil))
Running scan for frate = 80
Considering guard l with value 3.3999999999999995 for s ...
candidateGuards = map[l:true]
Picking guard, l

Considering guard l with value 6.799999999999999 for ih ...
candidateGuards = map[l:true]
Picking guard, l

Considering guard r with value 3 for t ...
candidateGuards = map[r:true]
Picking guard, r

frate, target rule = 80 public <sit> = (((sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_l_p_z_s> l)] | [(l <any_Cx_l_p_z_s>)]) (s | z | ((<any_Cx_l_p_z_s> l) | (l <any_Cx_l_p_z_s>)))) ((([(<any_Vx_l_l_ih_noSlide> l)] | [(l <any_Vx_l_l_ih_noSlide>)]) ([(<any_Cx_l_l_t_s> l)] | [(l <any_Cx_l_l_t_s>)])) (ih | ((<any_Vx_l_l_ih_noSlide> l) | (l <any_Vx_l_l_ih_noSlide>)))) (([(<any_Cx_r_l_t> r)] | [(r <any_Cx_r_l_t>)]) (t | ((<any_Cx_r_l_t> r) | (r <any_Cx_r_l_t>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_r_t_thr> thr)] | [(thr <any_Cx_r_t_thr>)]) sil))
Running scan for frate = 72
Considering guard l with value 3.3999999999999995 for s ...
candidateGuards = map[l:true]
Picking guard, l

Considering guard l with value 6.799999999999999 for ih ...
candidateGuards = map[l:true]
Picking guard, l

Considering guard r with value 3 for t ...
candidateGuards = map[r:true]
Picking guard, r

frate, target rule = 72 public <sit> = (((sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]) | (sil p (sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]))) (([(<any_Cx_l_p_th_s> l)] | [(l <any_Cx_l_p_th_s>)]) (s | z | ((<any_Cx_l_p_th_s> l) | (l <any_Cx_l_p_th_s>)))) ((([(<any_Vx_l_l_ih_noSlide> l)] | [(l <any_Vx_l_l_ih_noSlide>)]) ([(<any_Cx_l_l_t_s> l)] | [(l <any_Cx_l_l_t_s>)])) (ih | ((<any_Vx_l_l_ih_noSlide> l) | (l <any_Vx_l_l_ih_noSlide>)))) (([(<any_Cx_r_l_t> r)] | [(r <any_Cx_r_l_t>)]) (t | ((<any_Cx_r_l_t> r) | (r <any_Cx_r_l_t>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_r_t_d> d)] | [(d <any_Cx_r_t_d>)]) sil))

results =
{72 [{sil 0 16} {z 17 23} {ih 24 36} {t 37 49} {sil 50 67}]}
{80 [{sil 0 14} {l 15 20} {v 21 26} {ih 27 40} {t 41 55} {sil 56 72}]}
{91 [{sil 0 15} {l 16 24} {z 25 30} {iy 31 43} {l 44 46} {t 47 63} {sil 64 112}]}
{105 [{sil 0 18} {l 19 28} {z 29 35} {iy 36 50} {l 51 53} {t 54 74} {sil 75 130}]}
{125 [{sil 0 20} {l 21 32} {v 33 35} {l 36 39} {iy 40 62} {t 63 87} {sil 88 153}]}

normalised results =
{72 [{sil 0 16} {z 24 32} {ih 33 50} {t 51 68} {sil 69 93}]}
{80 [{sil 0 14} {l 19 25} {v 26 33} {ih 34 50} {t 51 69} {sil 70 90}]}
{91 [{sil 0 15} {l 18 26} {z 27 33} {iy 34 47} {l 48 48} {t 52 69} {sil 70 123}]}
{105 [{sil 0 18} {l 18 27} {z 28 33} {iy 34 48} {l 49 49} {t 51 70} {sil 71 124}]}
{125 [{sil 0 20} {l 17 26} {v 26 26} {l 29 31} {iy 32 50} {t 50 70} {sil 70 122}]}

ruleAligned = [{{s 2} []} {{z 3} [{0 1} {2 2} {3 2}]} {{l 3} [{1 1} {2 1} {3 1} {4 1}]} {{ih 2} [{0 2} {1 3}]} {{iy 3} [{2 3} {3 3} {4 4}]} {{t 0} [{0 3} {1 4} {2 5} {3 5} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {z 24 32} {ih 33 50} {t 51 68} {sil 69 69}]}
{80 [{sil 0 0} {l 19 25} {v 26 33} {ih 34 50} {t 51 69} {sil 70 70}]}
{91 [{sil 0 0} {l 18 26} {z 27 33} {iy 34 47} {l 48 48} {t 52 69} {sil 70 70}]}
{105 [{sil 0 0} {l 18 27} {z 28 33} {iy 34 48} {l 49 49} {t 51 70} {sil 71 71}]}
{125 [{sil 0 0} {l 17 26} {v 26 26} {l 29 29} {iy 32 50} {t 50 70} {sil 70 70}]}

timeAligned = [{{l 18 26} [{2 1} {3 1} {4 1} {1 1}]} {{z 28 32} [{0 1} {2 2} {3 2}]} {{iy 34 47} [{2 3} {3 3} {4 4}]} {{t 51 69} [{0 3} {1 4} {3 5} {4 5} {2 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 -1 0
i, iTime, newITime, timeStartFrom = 1 0 1 0
i, iTime, newITime, timeStartFrom = 2 1 -1 32
i, iTime, newITime, timeStartFrom = 3 1 -1 32
i, iTime, newITime, timeStartFrom = 4 1 2 32
i, iTime, newITime, timeStartFrom = 5 2 3 47
combinedVerdict    = [{s 2} {l 3} {z 3} {ih 2} {iy 3} {t 0}]
ruleAlignedVerdict = [{s 2} {z 3} {l 3} {ih 2} {iy 3} {t 0}]

score->
-2 for s
-2 for l
-2 for z
-2 for ih
-2 for iy
+2 for t
score<-: -8
bestResult = {-8 [{s 2} {l 3} {z 3} {ih 2} {iy 3} {t 0}] [s ih t]}
testPronounce s missing l surprise z surprise ih missing iy surprise t good
publish->
phonsToAlphas = [{[s] s} {[ih] i} {[t] t}]
getVerdict<-:new {s [s] 2}
getVerdict<-:new {i [ih] 2}
getVerdict<-:new {t [t] 0}
lettersVerdicts = [{s [s] 2} {l [l] 3} {z [z] 3} {i [ih] 2} {iy [iy] 3} {t [t] 0}]
publish<-
{
  "word": "sit",
  "results": [
    {
      "letters": "s",
      "phonemes": "s",
      "verdict": "missing"
    },
    {
      "letters": "l",
      "phonemes": "l",
      "verdict": "surprise"
    },
    {
      "letters": "z",
      "phonemes": "z",
      "verdict": "surprise"
    },
    {
      "letters": "i",
      "phonemes": "ɪ",
      "verdict": "missing"
    },
    {
      "letters": "iy",
      "phonemes": "iː",
      "verdict": "surprise"
    },
    {
      "letters": "t",
      "phonemes": "t",
      "verdict": "good"
    }
  ],
  "err": null
}
