Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_64725285-0e30-49ec-a1a5-a898033c7c35 audiofile /Users/test/go/src/Phonemes/audio_clips/thought2_tressa.wav word thought dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  1.514312



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.33999999999999997 0.96 1.2999999999999998

 start3, duration3, end3 =  0.7000000000000001 0.52 1.2200000000000002

 Initial start, duration, end =  0.23999999999999996 1.0599999999999998 1.2999999999999998

 Cut at: start, duration =  0.23999999999999996 1.254312     guard_end =  1.494312 

Running scan for frate = 125
Considering guard jh with value 1 for th ...
Considering guard zh with value 1 for th ...
candidateGuards = map[jh:true zh:true]
Picking guard, jh

Considering guard zh with value 2 for ao ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 125 public <thought> = (((sil [((t <any_Cx_th_t_p>) | (<any_Cx_th_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil p (sil [((t <any_Cx_th_t_p>) | (<any_Cx_th_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_jh_p_t_th> jh)] | [(jh <any_Cx_jh_p_t_th>)]) (th | t | d | s | ((<any_Cx_jh_p_t_th> jh) | (jh <any_Cx_jh_p_t_th>)))) ((([(<any_Vx_zh_jh_ao_noSlide> zh)] | [(zh <any_Vx_zh_jh_ao_noSlide>)]) ([(<any_Cx_zh_jh_t_th> zh)] | [(zh <any_Cx_zh_jh_t_th>)])) (ao | ((<any_Vx_zh_jh_ao_noSlide> zh) | (zh <any_Vx_zh_jh_ao_noSlide>)))) (([(<any_Cx_zh_zh_t> zh)] | [(zh <any_Cx_zh_zh_t>)]) (t | ((<any_Cx_zh_zh_t> zh) | (zh <any_Cx_zh_zh_t>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_d> d)] | [(d <any_Cx_zh_t_d>)]) sil))
Running scan for frate = 105
Considering guard zh with value 1 for th ...
Considering guard jh with value 1 for th ...
candidateGuards = map[jh:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for ao ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 105 public <thought> = (((sil [((dh <any_Cx_th_dh_p>) | (<any_Cx_th_dh_p> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]) | (sil p (sil [((dh <any_Cx_th_dh_p>) | (<any_Cx_th_dh_p> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]))) (([(<any_Cx_zh_p_dh_th> zh)] | [(zh <any_Cx_zh_p_dh_th>)]) (th | t | d | s | ((<any_Cx_zh_p_dh_th> zh) | (zh <any_Cx_zh_p_dh_th>)))) ((([(<any_Vx_zh_zh_ao_noSlide> zh)] | [(zh <any_Vx_zh_zh_ao_noSlide>)]) ([(<any_Cx_zh_zh_t_th> zh)] | [(zh <any_Cx_zh_zh_t_th>)])) (ao | ((<any_Vx_zh_zh_ao_noSlide> zh) | (zh <any_Vx_zh_zh_ao_noSlide>)))) (([(<any_Cx_zh_zh_t> zh)] | [(zh <any_Cx_zh_zh_t>)]) (t | ((<any_Cx_zh_zh_t> zh) | (zh <any_Cx_zh_zh_t>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_thr> thr)] | [(thr <any_Cx_zh_t_thr>)]) sil))
Running scan for frate = 91
Considering guard jh with value 1 for th ...
Considering guard zh with value 1 for th ...
candidateGuards = map[jh:true zh:true]
Picking guard, jh

Considering guard zh with value 2 for ao ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 91 public <thought> = (((sil [((dh <any_Cx_th_dh_p>) | (<any_Cx_th_dh_p> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]) | (sil p (sil [((dh <any_Cx_th_dh_p>) | (<any_Cx_th_dh_p> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]))) (([(<any_Cx_jh_p_dh_th> jh)] | [(jh <any_Cx_jh_p_dh_th>)]) (th | t | d | s | ((<any_Cx_jh_p_dh_th> jh) | (jh <any_Cx_jh_p_dh_th>)))) ((([(<any_Vx_zh_jh_ao_noSlide> zh)] | [(zh <any_Vx_zh_jh_ao_noSlide>)]) ([(<any_Cx_zh_jh_t_th> zh)] | [(zh <any_Cx_zh_jh_t_th>)])) (ao | ((<any_Vx_zh_jh_ao_noSlide> zh) | (zh <any_Vx_zh_jh_ao_noSlide>)))) (([(<any_Cx_zh_zh_t> zh)] | [(zh <any_Cx_zh_zh_t>)]) (t | ((<any_Cx_zh_zh_t> zh) | (zh <any_Cx_zh_zh_t>)))) (([(<any_vowel_noSlide> ch)] | [(ch <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_ch> ch)] | [(ch <any_Cx_zh_t_ch>)]) sil))
Running scan for frate = 80
Considering guard jh with value 1 for th ...
Considering guard zh with value 1 for th ...
candidateGuards = map[jh:true zh:true]
Picking guard, jh

Considering guard zh with value 2 for ao ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 80 public <thought> = (((sil [((z <any_Cx_th_z_p>) | (<any_Cx_th_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_th_z_p>) | (<any_Cx_th_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_jh_p_z_th> jh)] | [(jh <any_Cx_jh_p_z_th>)]) (th | t | d | s | ((<any_Cx_jh_p_z_th> jh) | (jh <any_Cx_jh_p_z_th>)))) ((([(<any_Vx_zh_jh_ao_noSlide> zh)] | [(zh <any_Vx_zh_jh_ao_noSlide>)]) ([(<any_Cx_zh_jh_t_th> zh)] | [(zh <any_Cx_zh_jh_t_th>)])) (ao | ((<any_Vx_zh_jh_ao_noSlide> zh) | (zh <any_Vx_zh_jh_ao_noSlide>)))) (([(<any_Cx_zh_zh_t> zh)] | [(zh <any_Cx_zh_zh_t>)]) (t | ((<any_Cx_zh_zh_t> zh) | (zh <any_Cx_zh_zh_t>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_d> d)] | [(d <any_Cx_zh_t_d>)]) sil))
Running scan for frate = 72
Considering guard zh with value 1 for th ...
Considering guard jh with value 1 for th ...
candidateGuards = map[jh:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for ao ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 72 public <thought> = (((sil [((z <any_Cx_th_z_p>) | (<any_Cx_th_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_th_z_p>) | (<any_Cx_th_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_th> zh)] | [(zh <any_Cx_zh_p_z_th>)]) (th | t | d | s | ((<any_Cx_zh_p_z_th> zh) | (zh <any_Cx_zh_p_z_th>)))) ((([(<any_Vx_zh_zh_ao_noSlide> zh)] | [(zh <any_Vx_zh_zh_ao_noSlide>)]) ([(<any_Cx_zh_zh_t_th> zh)] | [(zh <any_Cx_zh_zh_t_th>)])) (ao | ((<any_Vx_zh_zh_ao_noSlide> zh) | (zh <any_Vx_zh_zh_ao_noSlide>)))) (([(<any_Cx_zh_zh_t> zh)] | [(zh <any_Cx_zh_zh_t>)]) (t | ((<any_Cx_zh_zh_t> zh) | (zh <any_Cx_zh_zh_t>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_d> d)] | [(d <any_Cx_zh_t_d>)]) sil))

results =
{72 [{sil 0 25} {th 26 39} {ao 40 58} {t 59 75} {sil 76 89}]}
{80 [{sil 0 16} {uw 17 28} {z 29 31} {th 32 44} {ao 45 66} {t 67 82} {sil 83 99}]}
{91 [{sil 0 14} {dh 15 20} {uw 21 42} {th 43 50} {ao 51 76} {t 77 94} {sil 95 112}]}
{105 [{sil 0 17} {dh 18 22} {m 23 47} {th 48 58} {ao 59 88} {t 89 112} {sil 113 130}]}
{125 [{sil 0 20} {m 21 47} {t 48 54} {th 55 67} {ao 68 104} {t 105 125} {sil 126 153}]}

normalised results =
{72 [{sil 0 25} {th 36 54} {ao 56 81} {t 82 104} {sil 106 124}]}
{80 [{sil 0 16} {uw 21 35} {z 36 36} {th 40 55} {ao 56 83} {t 84 103} {sil 104 124}]}
{91 [{sil 0 14} {dh 16 22} {uw 23 46} {th 47 55} {ao 56 84} {t 85 103} {sil 104 123}]}
{105 [{sil 0 17} {dh 17 21} {m 22 45} {th 46 55} {ao 56 84} {t 85 107} {sil 108 124}]}
{125 [{sil 0 20} {m 17 38} {t 38 43} {th 44 54} {ao 54 83} {t 84 100} {sil 101 122}]}

ruleAligned = [{{th 0} [{0 1} {1 3} {2 3} {3 3} {4 3}]} {{ao 0} [{0 2} {1 4} {2 4} {3 4} {4 4}]} {{t 0} [{0 3} {1 5} {2 5} {3 5} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {th 36 54} {ao 56 81} {t 82 104} {sil 106 106}]}
{80 [{sil 0 0} {uw 21 35} {z 36 36} {th 40 55} {ao 56 83} {t 84 103} {sil 104 104}]}
{91 [{sil 0 0} {dh 16 22} {uw 23 46} {th 47 55} {ao 56 84} {t 85 103} {sil 104 104}]}
{105 [{sil 0 0} {dh 17 21} {m 22 45} {th 46 55} {ao 56 84} {t 85 107} {sil 108 108}]}
{125 [{sil 0 0} {m 17 38} {t 38 43} {th 44 54} {ao 54 83} {t 84 100} {sil 101 101}]}

timeAligned = [{{th 44 55} [{0 1} {1 3} {4 3} {3 3} {2 3}]} {{ao 56 83} [{0 2} {1 4} {2 4} {3 4} {4 4}]} {{t 84 103} [{0 3} {1 5} {4 5} {2 5} {3 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 54
i, iTime, newITime, timeStartFrom = 2 1 2 81
combinedVerdict    = [{th 0} {ao 0} {t 0}]
ruleAlignedVerdict = [{th 0} {ao 0} {t 0}]

score->
+2 for th
+2 for ao
+2 for t
score<-: 11
testPronounce th good ao good t good
publish->
phonsToAlphas = [{[th] th} {[ao] ou} {[t] ght}]
getVerdict<-:new {th [th] 0}
getVerdict<-:new {ou [ao] 0}
getVerdict<-:new {ght [t] 0}
lettersVerdicts = [{th [th] 0} {ou [ao] 0} {ght [t] 0}]
publish<-
{
  "word": "thought",
  "results": [
    {
      "letters": "th",
      "phonemes": "θ",
      "verdict": "good"
    },
    {
      "letters": "ou",
      "phonemes": "ɔ",
      "verdict": "good"
    },
    {
      "letters": "ght",
      "phonemes": "t",
      "verdict": "good"
    }
  ],
  "err": null
}
