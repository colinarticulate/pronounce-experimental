Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_136dcff8-580a-400d-a9fa-1828d62f7650 audiofile /Users/test/go/src/Phonemes/audio_clips/hoped1_philip.wav word hoped dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  1.727625



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.62 0.45999999999999996 1.08

 start3, duration3, end3 =  0.62 0.33999999999999997 0.96

 Initial start, duration, end =  0.52 0.56 1.08

 Cut at: start, duration =  0.52 1.01     guard_end =  1.53 

Running scan for frate = 125
Running scan for frate = 125
Considering guard z with value 1 for hh ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard z with value 1 for hh ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard z with value 6 for ow ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard z with value 6 for ow ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard s with value 8 for p ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard s with value 6 for p ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard w with value 2.6 for d ...
candidateGuards = map[w:true]
Picking guard, w

Considering guard zh with value 1 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 125 public <hoped> = (((sil [((z <any_Cx_hh_z_b>) | (<any_Cx_hh_z_b> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil b (sil [((z <any_Cx_hh_z_b>) | (<any_Cx_hh_z_b> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_z_b_z_hh> z)] | [(z <any_Cx_z_b_z_hh>)]) (hh | ((<any_Cx_z_b_z_hh> z) | (z <any_Cx_z_b_z_hh>)))) ((([(<any_Vx_z_z_ow_noSlide> z)] | [(z <any_Vx_z_z_ow_noSlide>)]) ([(<any_Cx_z_z_p_hh> z)] | [(z <any_Cx_z_z_p_hh>)])) (ow | ((<any_Vx_z_z_ow_noSlide> z) | (z <any_Vx_z_z_ow_noSlide>)))) (([(<any_Cx_s_z_p> s)] | [(s <any_Cx_s_z_p>)]) (p | ((<any_Cx_s_z_p_d> s) | (s <any_Cx_s_z_p_d>)))) (([(<any_Cx_w_s_d_p> w)] | [(w <any_Cx_w_s_d_p>)]) (d | ((<any_Cx_w_s_d_p> w) | (w <any_Cx_w_s_d_p>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_w_d_thr> thr)] | [(thr <any_Cx_w_d_thr>)]) sil))
frate, target rule = 125 public <hoped> = (((sil [((z <any_Cx_hh_z_b>) | (<any_Cx_hh_z_b> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil b (sil [((z <any_Cx_hh_z_b>) | (<any_Cx_hh_z_b> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_z_b_z_hh> z)] | [(z <any_Cx_z_b_z_hh>)]) (hh | ((<any_Cx_z_b_z_hh> z) | (z <any_Cx_z_b_z_hh>)))) ((([(<any_Vx_z_z_ow_noSlide> z)] | [(z <any_Vx_z_z_ow_noSlide>)]) ([(<any_Cx_z_z_p_hh> z)] | [(z <any_Cx_z_z_p_hh>)])) (ow | ((<any_Vx_z_z_ow_noSlide> z) | (z <any_Vx_z_z_ow_noSlide>)))) (([(<any_Cx_s_z_p> s)] | [(s <any_Cx_s_z_p>)]) (p | ((<any_Cx_s_z_p_t> s) | (s <any_Cx_s_z_p_t>)))) (([(<any_Cx_zh_s_t_p> zh)] | [(zh <any_Cx_zh_s_t_p>)]) (t | ((<any_Cx_zh_s_t_p> zh) | (zh <any_Cx_zh_s_t_p>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_p> p)] | [(p <any_Cx_zh_t_p>)]) sil))
Running scan for frate = 105
Running scan for frate = 105
Considering guard z with value 1 for hh ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard z with value 1 for hh ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard z with value 6 for ow ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard z with value 6 for ow ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard s with value 6 for p ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard s with value 8 for p ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard w with value 2.6 for d ...
candidateGuards = map[w:true]
Picking guard, w

Considering guard zh with value 1 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 105 public <hoped> = (((sil [((iy <any_Cx_hh_iy_b>) | (<any_Cx_hh_iy_b> iy))] [((iy <any_vowel_noSlide>) | (<any_vowel_noSlide> iy))]) | (sil b (sil [((iy <any_Cx_hh_iy_b>) | (<any_Cx_hh_iy_b> iy))] [((iy <any_vowel_noSlide>) | (<any_vowel_noSlide> iy))]))) (([(<any_Cx_z_b_iy_hh> z)] | [(z <any_Cx_z_b_iy_hh>)]) (hh | ((<any_Cx_z_b_iy_hh> z) | (z <any_Cx_z_b_iy_hh>)))) ((([(<any_Vx_z_z_ow_noSlide> z)] | [(z <any_Vx_z_z_ow_noSlide>)]) ([(<any_Cx_z_z_p_hh> z)] | [(z <any_Cx_z_z_p_hh>)])) (ow | ((<any_Vx_z_z_ow_noSlide> z) | (z <any_Vx_z_z_ow_noSlide>)))) (([(<any_Cx_s_z_p> s)] | [(s <any_Cx_s_z_p>)]) (p | ((<any_Cx_s_z_p_d> s) | (s <any_Cx_s_z_p_d>)))) (([(<any_Cx_w_s_d_p> w)] | [(w <any_Cx_w_s_d_p>)]) (d | ((<any_Cx_w_s_d_p> w) | (w <any_Cx_w_s_d_p>)))) (([(<any_vowel_noSlide> dh)] | [(dh <any_vowel_noSlide>)]) ([(<any_Cx_w_d_dh> dh)] | [(dh <any_Cx_w_d_dh>)]) sil))
frate, target rule = 105 public <hoped> = (((sil [((iy <any_Cx_hh_iy_b>) | (<any_Cx_hh_iy_b> iy))] [((iy <any_vowel_noSlide>) | (<any_vowel_noSlide> iy))]) | (sil b (sil [((iy <any_Cx_hh_iy_b>) | (<any_Cx_hh_iy_b> iy))] [((iy <any_vowel_noSlide>) | (<any_vowel_noSlide> iy))]))) (([(<any_Cx_z_b_iy_hh> z)] | [(z <any_Cx_z_b_iy_hh>)]) (hh | ((<any_Cx_z_b_iy_hh> z) | (z <any_Cx_z_b_iy_hh>)))) ((([(<any_Vx_z_z_ow_noSlide> z)] | [(z <any_Vx_z_z_ow_noSlide>)]) ([(<any_Cx_z_z_p_hh> z)] | [(z <any_Cx_z_z_p_hh>)])) (ow | ((<any_Vx_z_z_ow_noSlide> z) | (z <any_Vx_z_z_ow_noSlide>)))) (([(<any_Cx_s_z_p> s)] | [(s <any_Cx_s_z_p>)]) (p | ((<any_Cx_s_z_p_t> s) | (s <any_Cx_s_z_p_t>)))) (([(<any_Cx_zh_s_t_p> zh)] | [(zh <any_Cx_zh_s_t_p>)]) (t | ((<any_Cx_zh_s_t_p> zh) | (zh <any_Cx_zh_s_t_p>)))) (([(<any_vowel_noSlide> k)] | [(k <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_k> k)] | [(k <any_Cx_zh_t_k>)]) sil))
Running scan for frate = 91
Running scan for frate = 91
Considering guard z with value 1 for hh ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard z with value 1 for hh ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard z with value 6 for ow ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard z with value 6 for ow ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard s with value 6 for p ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard s with value 8 for p ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard w with value 2.6 for d ...
candidateGuards = map[w:true]
Picking guard, w

Considering guard zh with value 1 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 91 public <hoped> = (((sil [((z <any_Cx_hh_z_b>) | (<any_Cx_hh_z_b> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil b (sil [((z <any_Cx_hh_z_b>) | (<any_Cx_hh_z_b> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_z_b_z_hh> z)] | [(z <any_Cx_z_b_z_hh>)]) (hh | ((<any_Cx_z_b_z_hh> z) | (z <any_Cx_z_b_z_hh>)))) ((([(<any_Vx_z_z_ow_noSlide> z)] | [(z <any_Vx_z_z_ow_noSlide>)]) ([(<any_Cx_z_z_p_hh> z)] | [(z <any_Cx_z_z_p_hh>)])) (ow | ((<any_Vx_z_z_ow_noSlide> z) | (z <any_Vx_z_z_ow_noSlide>)))) (([(<any_Cx_s_z_p> s)] | [(s <any_Cx_s_z_p>)]) (p | ((<any_Cx_s_z_p_d> s) | (s <any_Cx_s_z_p_d>)))) (([(<any_Cx_w_s_d_p> w)] | [(w <any_Cx_w_s_d_p>)]) (d | ((<any_Cx_w_s_d_p> w) | (w <any_Cx_w_s_d_p>)))) (([(<any_vowel_noSlide> dh)] | [(dh <any_vowel_noSlide>)]) ([(<any_Cx_w_d_dh> dh)] | [(dh <any_Cx_w_d_dh>)]) sil))
frate, target rule = 91 public <hoped> = (((sil [((iy <any_Cx_hh_iy_b>) | (<any_Cx_hh_iy_b> iy))] [((iy <any_vowel_noSlide>) | (<any_vowel_noSlide> iy))]) | (sil b (sil [((iy <any_Cx_hh_iy_b>) | (<any_Cx_hh_iy_b> iy))] [((iy <any_vowel_noSlide>) | (<any_vowel_noSlide> iy))]))) (([(<any_Cx_z_b_iy_hh> z)] | [(z <any_Cx_z_b_iy_hh>)]) (hh | ((<any_Cx_z_b_iy_hh> z) | (z <any_Cx_z_b_iy_hh>)))) ((([(<any_Vx_z_z_ow_noSlide> z)] | [(z <any_Vx_z_z_ow_noSlide>)]) ([(<any_Cx_z_z_p_hh> z)] | [(z <any_Cx_z_z_p_hh>)])) (ow | ((<any_Vx_z_z_ow_noSlide> z) | (z <any_Vx_z_z_ow_noSlide>)))) (([(<any_Cx_s_z_p> s)] | [(s <any_Cx_s_z_p>)]) (p | ((<any_Cx_s_z_p_t> s) | (s <any_Cx_s_z_p_t>)))) (([(<any_Cx_zh_s_t_p> zh)] | [(zh <any_Cx_zh_s_t_p>)]) (t | ((<any_Cx_zh_s_t_p> zh) | (zh <any_Cx_zh_s_t_p>)))) (([(<any_vowel_noSlide> ch)] | [(ch <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_ch> ch)] | [(ch <any_Cx_zh_t_ch>)]) sil))
Running scan for frate = 80
Running scan for frate = 80
Considering guard z with value 1 for hh ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard z with value 1 for hh ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard z with value 6 for ow ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard z with value 6 for ow ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard s with value 6 for p ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard s with value 8 for p ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard w with value 2.6 for d ...
candidateGuards = map[w:true]
Picking guard, w

Considering guard zh with value 1 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 80 public <hoped> = (((sil [((z <any_Cx_hh_z_b>) | (<any_Cx_hh_z_b> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil b (sil [((z <any_Cx_hh_z_b>) | (<any_Cx_hh_z_b> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_z_b_z_hh> z)] | [(z <any_Cx_z_b_z_hh>)]) (hh | ((<any_Cx_z_b_z_hh> z) | (z <any_Cx_z_b_z_hh>)))) ((([(<any_Vx_z_z_ow_noSlide> z)] | [(z <any_Vx_z_z_ow_noSlide>)]) ([(<any_Cx_z_z_p_hh> z)] | [(z <any_Cx_z_z_p_hh>)])) (ow | ((<any_Vx_z_z_ow_noSlide> z) | (z <any_Vx_z_z_ow_noSlide>)))) (([(<any_Cx_s_z_p> s)] | [(s <any_Cx_s_z_p>)]) (p | ((<any_Cx_s_z_p_d> s) | (s <any_Cx_s_z_p_d>)))) (([(<any_Cx_w_s_d_p> w)] | [(w <any_Cx_w_s_d_p>)]) (d | ((<any_Cx_w_s_d_p> w) | (w <any_Cx_w_s_d_p>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_w_d_b> b)] | [(b <any_Cx_w_d_b>)]) sil))
frate, target rule = 80 public <hoped> = (((sil [((iy <any_Cx_hh_iy_b>) | (<any_Cx_hh_iy_b> iy))] [((iy <any_vowel_noSlide>) | (<any_vowel_noSlide> iy))]) | (sil b (sil [((iy <any_Cx_hh_iy_b>) | (<any_Cx_hh_iy_b> iy))] [((iy <any_vowel_noSlide>) | (<any_vowel_noSlide> iy))]))) (([(<any_Cx_z_b_iy_hh> z)] | [(z <any_Cx_z_b_iy_hh>)]) (hh | ((<any_Cx_z_b_iy_hh> z) | (z <any_Cx_z_b_iy_hh>)))) ((([(<any_Vx_z_z_ow_noSlide> z)] | [(z <any_Vx_z_z_ow_noSlide>)]) ([(<any_Cx_z_z_p_hh> z)] | [(z <any_Cx_z_z_p_hh>)])) (ow | ((<any_Vx_z_z_ow_noSlide> z) | (z <any_Vx_z_z_ow_noSlide>)))) (([(<any_Cx_s_z_p> s)] | [(s <any_Cx_s_z_p>)]) (p | ((<any_Cx_s_z_p_t> s) | (s <any_Cx_s_z_p_t>)))) (([(<any_Cx_zh_s_t_p> zh)] | [(zh <any_Cx_zh_s_t_p>)]) (t | ((<any_Cx_zh_s_t_p> zh) | (zh <any_Cx_zh_s_t_p>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_thr> thr)] | [(thr <any_Cx_zh_t_thr>)]) sil))
Running scan for frate = 72
Considering guard z with value 1 for hh ...
candidateGuards = map[z:true]
Picking guard, z

Running scan for frate = 72
Considering guard z with value 6 for ow ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard z with value 1 for hh ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard s with value 8 for p ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard zh with value 1 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard z with value 6 for ow ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard s with value 6 for p ...
candidateGuards = map[s:true]
Picking guard, s

frate, target rule = 72 public <hoped> = (((sil [((iy <any_Cx_hh_iy_b>) | (<any_Cx_hh_iy_b> iy))] [((iy <any_vowel_noSlide>) | (<any_vowel_noSlide> iy))]) | (sil b (sil [((iy <any_Cx_hh_iy_b>) | (<any_Cx_hh_iy_b> iy))] [((iy <any_vowel_noSlide>) | (<any_vowel_noSlide> iy))]))) (([(<any_Cx_z_b_iy_hh> z)] | [(z <any_Cx_z_b_iy_hh>)]) (hh | ((<any_Cx_z_b_iy_hh> z) | (z <any_Cx_z_b_iy_hh>)))) ((([(<any_Vx_z_z_ow_noSlide> z)] | [(z <any_Vx_z_z_ow_noSlide>)]) ([(<any_Cx_z_z_p_hh> z)] | [(z <any_Cx_z_z_p_hh>)])) (ow | ((<any_Vx_z_z_ow_noSlide> z) | (z <any_Vx_z_z_ow_noSlide>)))) (([(<any_Cx_s_z_p> s)] | [(s <any_Cx_s_z_p>)]) (p | ((<any_Cx_s_z_p_t> s) | (s <any_Cx_s_z_p_t>)))) (([(<any_Cx_zh_s_t_p> zh)] | [(zh <any_Cx_zh_s_t_p>)]) (t | ((<any_Cx_zh_s_t_p> zh) | (zh <any_Cx_zh_s_t_p>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_thr> thr)] | [(thr <any_Cx_zh_t_thr>)]) sil))
Considering guard w with value 2.6 for d ...
candidateGuards = map[w:true]
Picking guard, w

frate, target rule = 72 public <hoped> = (((sil [((b <any_Cx_hh_b_b>) | (<any_Cx_hh_b_b> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]) | (sil b (sil [((b <any_Cx_hh_b_b>) | (<any_Cx_hh_b_b> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]))) (([(<any_Cx_z_b_b_hh> z)] | [(z <any_Cx_z_b_b_hh>)]) (hh | ((<any_Cx_z_b_b_hh> z) | (z <any_Cx_z_b_b_hh>)))) ((([(<any_Vx_z_z_ow_noSlide> z)] | [(z <any_Vx_z_z_ow_noSlide>)]) ([(<any_Cx_z_z_p_hh> z)] | [(z <any_Cx_z_z_p_hh>)])) (ow | ((<any_Vx_z_z_ow_noSlide> z) | (z <any_Vx_z_z_ow_noSlide>)))) (([(<any_Cx_s_z_p> s)] | [(s <any_Cx_s_z_p>)]) (p | ((<any_Cx_s_z_p_d> s) | (s <any_Cx_s_z_p_d>)))) (([(<any_Cx_w_s_d_p> w)] | [(w <any_Cx_w_s_d_p>)]) (d | ((<any_Cx_w_s_d_p> w) | (w <any_Cx_w_s_d_p>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_w_d_v> v)] | [(v <any_Cx_w_d_v>)]) sil))

results =
{72 [{sil 0 9} {hh 10 15} {ah 16 25} {z 26 34} {p 35 37} {d 38 51} {sil 52 71}]}
{80 [{sil 0 10} {hh 11 18} {ow 19 31} {p 32 40} {d 41 57} {sil 58 79}]}
{91 [{sil 0 10} {hh 11 20} {ow 21 27} {m 28 42} {s 43 45} {d 46 65} {sil 66 90}]}
{105 [{sil 0 13} {hh 14 23} {ow 24 32} {m 33 49} {s 50 53} {d 54 72} {sil 73 105}]}
{125 [{sil 0 14} {hh 15 27} {ow 28 52} {p 53 62} {d 63 82} {sil 83 123}]}

normalised results =
{72 [{sil 0 9} {hh 14 21} {ah 22 35} {z 36 47} {p 49 49} {d 53 71} {sil 72 99}]}
{80 [{sil 0 10} {hh 14 23} {ow 24 39} {p 40 50} {d 51 71} {sil 73 99}]}
{91 [{sil 0 10} {hh 12 22} {ow 23 30} {m 31 46} {s 47 47} {d 51 71} {sil 73 99}]}
{105 [{sil 0 13} {hh 13 22} {ow 23 30} {m 31 47} {s 48 50} {d 51 69} {sil 70 100}]}
{125 [{sil 0 14} {hh 12 22} {ow 22 42} {p 42 50} {d 50 66} {sil 66 98}]}

ruleAligned = [{{hh 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ow 0} [{1 2} {2 2} {3 2} {4 2}]} {{p 2} [{1 3} {4 3}]} {{d 0} [{0 5} {1 4} {2 5} {3 5} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {hh 14 21} {ah 22 35} {z 36 47} {p 49 49} {d 53 71} {sil 72 72}]}
{80 [{sil 0 0} {hh 14 23} {ow 24 39} {p 40 50} {d 51 71} {sil 73 73}]}
{91 [{sil 0 0} {hh 12 22} {ow 23 30} {m 31 46} {s 47 47} {d 51 71} {sil 73 73}]}
{105 [{sil 0 0} {hh 13 22} {ow 23 30} {m 31 47} {s 48 48} {d 51 69} {sil 70 70}]}
{125 [{sil 0 0} {hh 12 22} {ow 22 42} {p 42 50} {d 50 66} {sil 66 66}]}

timeAligned = [{{hh 13 22} [{2 1} {3 1} {4 1} {0 1} {1 1}]} {{ow 23 30} [{2 2} {3 2} {4 2} {1 2}]} {{d 51 71} [{1 4} {2 5} {3 5} {4 4} {0 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 21
i, iTime, newITime, timeStartFrom = 2 1 -1 30
i, iTime, newITime, timeStartFrom = 3 1 2 30
combinedVerdict    = [{hh 0} {ow 0} {p 2} {d 0}]
ruleAlignedVerdict = [{hh 0} {ow 0} {p 2} {d 0}]

score->
+2 for hh
+2 for ow
-2 for p
+2 for d
score<-: 4

results =
{72 [{sil 0 9} {hh 10 15} {ah 16 22} {z 23 25} {p 26 28} {t 29 52} {sil 53 71}]}
{80 [{sil 0 10} {hh 11 17} {ah 18 24} {z 25 27} {p 28 30} {t 31 57} {sil 58 79}]}
{91 [{sil 0 10} {hh 11 20} {ow 21 27} {m 28 37} {s 38 40} {t 41 65} {sil 66 90}]}
{105 [{sil 0 13} {hh 14 23} {ow 24 32} {m 33 44} {s 45 47} {t 48 71} {sil 72 105}]}
{125 [{sil 0 14} {hh 15 27} {ow 28 52} {p 53 62} {t 63 82} {sil 83 123}]}

normalised results =
{72 [{sil 0 9} {hh 14 21} {ah 22 31} {z 32 32} {p 36 36} {t 40 72} {sil 74 99}]}
{80 [{sil 0 10} {hh 14 21} {ah 23 30} {z 31 31} {p 35 35} {t 39 71} {sil 73 99}]}
{91 [{sil 0 10} {hh 12 22} {ow 23 30} {m 31 41} {s 42 42} {t 45 71} {sil 73 99}]}
{105 [{sil 0 13} {hh 13 22} {ow 23 30} {m 31 42} {s 43 43} {t 46 68} {sil 69 100}]}
{125 [{sil 0 14} {hh 12 22} {ow 22 42} {p 42 50} {t 50 66} {sil 66 98}]}

ruleAligned = [{{hh 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ow 1} [{2 2} {3 2} {4 2}]} {{p 2} [{4 3}]} {{t 0} [{0 5} {1 5} {2 5} {3 5} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {hh 14 21} {ah 22 31} {z 32 32} {p 36 36} {t 40 72} {sil 74 74}]}
{80 [{sil 0 0} {hh 14 21} {ah 23 30} {z 31 31} {p 35 35} {t 39 71} {sil 73 73}]}
{91 [{sil 0 0} {hh 12 22} {ow 23 30} {m 31 41} {s 42 42} {t 45 71} {sil 73 73}]}
{105 [{sil 0 0} {hh 13 22} {ow 23 30} {m 31 42} {s 43 43} {t 46 68} {sil 69 69}]}
{125 [{sil 0 0} {hh 12 22} {ow 22 42} {p 42 50} {t 50 66} {sil 66 66}]}

timeAligned = [{{hh 13 22} [{2 1} {3 1} {4 1} {0 1} {1 1}]} {{ow 23 30} [{2 2} {3 2} {4 2}]} {{t 45 71} [{0 5} {1 5} {2 5} {3 5} {4 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 21
i, iTime, newITime, timeStartFrom = 2 1 -1 30
i, iTime, newITime, timeStartFrom = 3 1 2 30
combinedVerdict    = [{hh 0} {ow 1} {p 2} {t 0}]
ruleAlignedVerdict = [{hh 0} {ow 1} {p 2} {t 0}]

score->
+2 for hh
+1 for ow
-2 for p
+2 for t
score<-: 3
bestResult = {4 [{hh 0} {ow 0} {p 2} {d 0}] [hh ow p d]}
testPronounce hh good ow good p missing d good
publish->
phonsToAlphas = [{[hh] h} {[ow] o} {[p] pe} {[d] d}]
getVerdict<-:new {h [hh] 0}
getVerdict<-:new {o [ow] 0}
getVerdict<-:new {pe [p] 2}
getVerdict<-:new {d [d] 0}
lettersVerdicts = [{h [hh] 0} {o [ow] 0} {pe [p] 2} {d [d] 0}]
publish<-
{
  "word": "hoped",
  "results": [
    {
      "letters": "h",
      "phonemes": "h",
      "verdict": "good"
    },
    {
      "letters": "o",
      "phonemes": "oʊ",
      "verdict": "good"
    },
    {
      "letters": "pe",
      "phonemes": "p",
      "verdict": "missing"
    },
    {
      "letters": "d",
      "phonemes": "d",
      "verdict": "good"
    }
  ],
  "err": null
}
