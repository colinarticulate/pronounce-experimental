Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_a491a52e-2ed5-454f-88be-8543925c673f audiofile /Users/test/go/src/Phonemes/audio_clips/bars1_paul.wav word bars dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  1.787562



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.4600000000000001 1.32 1.7800000000000002

 start3, duration3, end3 =  0.62 0.6799999999999999 1.2999999999999998

 Initial start, duration, end =  0.3600000000000001 1.4200000000000002 1.7800000000000002

 Cut at: start, duration =  0.3600000000000001 1.407562     guard_end =  1.767562 

Running scan for frate = 125
Considering guard zh with value 1 for b ...
Considering guard sh with value 1 for b ...
Considering guard jh with value 1 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, zh

Considering guard ch with value 5 for aa ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ng with value 1 for z ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 125 public <bars> = (((sil [((p <any_Cx_b_p_hh>) | (<any_Cx_b_p_hh> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]) | (sil hh (sil [((p <any_Cx_b_p_hh>) | (<any_Cx_b_p_hh> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]))) (([(<any_Cx_zh_hh_p_b> zh)] | [(zh <any_Cx_zh_hh_p_b>)]) (b | ((<any_Cx_zh_hh_p_b> zh) | (zh <any_Cx_zh_hh_p_b>)))) ((([(<any_Vx_ch_zh_aa_noSlide> ch)] | [(ch <any_Vx_ch_zh_aa_noSlide>)]) ([(<any_Cx_ch_zh_z_b> ch)] | [(ch <any_Cx_ch_zh_z_b>)])) (aa | ((<any_Vx_ch_zh_aa_noSlide> ch) | (ch <any_Vx_ch_zh_aa_noSlide>)))) (([(<any_Cx_ng_ch_z> ng)] | [(ng <any_Cx_ng_ch_z>)]) (z | ((<any_Cx_ng_ch_z> ng) | (ng <any_Cx_ng_ch_z>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_ng_z_thr> thr)] | [(thr <any_Cx_ng_z_thr>)]) sil))
Running scan for frate = 105
Considering guard jh with value 1 for b ...
Considering guard zh with value 1 for b ...
Considering guard sh with value 1 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, jh

Considering guard ch with value 5 for aa ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ng with value 1 for z ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 105 public <bars> = (((sil [((v <any_Cx_b_v_hh>) | (<any_Cx_b_v_hh> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]) | (sil hh (sil [((v <any_Cx_b_v_hh>) | (<any_Cx_b_v_hh> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]))) (([(<any_Cx_jh_hh_v_b> jh)] | [(jh <any_Cx_jh_hh_v_b>)]) (b | ((<any_Cx_jh_hh_v_b> jh) | (jh <any_Cx_jh_hh_v_b>)))) ((([(<any_Vx_ch_jh_aa_noSlide> ch)] | [(ch <any_Vx_ch_jh_aa_noSlide>)]) ([(<any_Cx_ch_jh_z_b> ch)] | [(ch <any_Cx_ch_jh_z_b>)])) (aa | ((<any_Vx_ch_jh_aa_noSlide> ch) | (ch <any_Vx_ch_jh_aa_noSlide>)))) (([(<any_Cx_ng_ch_z> ng)] | [(ng <any_Cx_ng_ch_z>)]) (z | ((<any_Cx_ng_ch_z> ng) | (ng <any_Cx_ng_ch_z>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_ng_z_b> b)] | [(b <any_Cx_ng_z_b>)]) sil))
Running scan for frate = 91
Considering guard zh with value 1 for b ...
Considering guard jh with value 1 for b ...
Considering guard sh with value 1 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, sh

Considering guard ch with value 5 for aa ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ng with value 1 for z ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 91 public <bars> = (((sil [((f <any_Cx_b_f_hh>) | (<any_Cx_b_f_hh> f))] [((f <any_vowel_noSlide>) | (<any_vowel_noSlide> f))]) | (sil hh (sil [((f <any_Cx_b_f_hh>) | (<any_Cx_b_f_hh> f))] [((f <any_vowel_noSlide>) | (<any_vowel_noSlide> f))]))) (([(<any_Cx_sh_hh_f_b> sh)] | [(sh <any_Cx_sh_hh_f_b>)]) (b | ((<any_Cx_sh_hh_f_b> sh) | (sh <any_Cx_sh_hh_f_b>)))) ((([(<any_Vx_ch_sh_aa_noSlide> ch)] | [(ch <any_Vx_ch_sh_aa_noSlide>)]) ([(<any_Cx_ch_sh_z_b> ch)] | [(ch <any_Cx_ch_sh_z_b>)])) (aa | ((<any_Vx_ch_sh_aa_noSlide> ch) | (ch <any_Vx_ch_sh_aa_noSlide>)))) (([(<any_Cx_ng_ch_z> ng)] | [(ng <any_Cx_ng_ch_z>)]) (z | ((<any_Cx_ng_ch_z> ng) | (ng <any_Cx_ng_ch_z>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_ng_z_thr> thr)] | [(thr <any_Cx_ng_z_thr>)]) sil))
Running scan for frate = 80
Considering guard zh with value 1 for b ...
Considering guard jh with value 1 for b ...
Considering guard sh with value 1 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, zh

Considering guard ch with value 5 for aa ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ng with value 1 for z ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 80 public <bars> = (((sil [((f <any_Cx_b_f_hh>) | (<any_Cx_b_f_hh> f))] [((f <any_vowel_noSlide>) | (<any_vowel_noSlide> f))]) | (sil hh (sil [((f <any_Cx_b_f_hh>) | (<any_Cx_b_f_hh> f))] [((f <any_vowel_noSlide>) | (<any_vowel_noSlide> f))]))) (([(<any_Cx_zh_hh_f_b> zh)] | [(zh <any_Cx_zh_hh_f_b>)]) (b | ((<any_Cx_zh_hh_f_b> zh) | (zh <any_Cx_zh_hh_f_b>)))) ((([(<any_Vx_ch_zh_aa_noSlide> ch)] | [(ch <any_Vx_ch_zh_aa_noSlide>)]) ([(<any_Cx_ch_zh_z_b> ch)] | [(ch <any_Cx_ch_zh_z_b>)])) (aa | ((<any_Vx_ch_zh_aa_noSlide> ch) | (ch <any_Vx_ch_zh_aa_noSlide>)))) (([(<any_Cx_ng_ch_z> ng)] | [(ng <any_Cx_ng_ch_z>)]) (z | ((<any_Cx_ng_ch_z> ng) | (ng <any_Cx_ng_ch_z>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_ng_z_thr> thr)] | [(thr <any_Cx_ng_z_thr>)]) sil))
Running scan for frate = 72
Considering guard zh with value 1 for b ...
Considering guard jh with value 1 for b ...
Considering guard sh with value 1 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, zh

Considering guard ch with value 5 for aa ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ng with value 1 for z ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 72 public <bars> = (((sil [((dh <any_Cx_b_dh_hh>) | (<any_Cx_b_dh_hh> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]) | (sil hh (sil [((dh <any_Cx_b_dh_hh>) | (<any_Cx_b_dh_hh> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]))) (([(<any_Cx_zh_hh_dh_b> zh)] | [(zh <any_Cx_zh_hh_dh_b>)]) (b | ((<any_Cx_zh_hh_dh_b> zh) | (zh <any_Cx_zh_hh_dh_b>)))) ((([(<any_Vx_ch_zh_aa_noSlide> ch)] | [(ch <any_Vx_ch_zh_aa_noSlide>)]) ([(<any_Cx_ch_zh_z_b> ch)] | [(ch <any_Cx_ch_zh_z_b>)])) (aa | ((<any_Vx_ch_zh_aa_noSlide> ch) | (ch <any_Vx_ch_zh_aa_noSlide>)))) (([(<any_Cx_ng_ch_z> ng)] | [(ng <any_Cx_ng_ch_z>)]) (z | ((<any_Cx_ng_ch_z> ng) | (ng <any_Cx_ng_ch_z>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_ng_z_b> b)] | [(b <any_Cx_ng_z_b>)]) sil))

results =
{72 [{sil 0 22} {b 23 27} {aa 28 56} {z 57 70} {sil 71 90}]}
{80 [{sil 0 25} {b 26 30} {aa 31 62} {z 63 78} {sil 79 97}]}
{91 [{sil 0 29} {b 30 35} {aa 36 70} {z 71 88} {sil 89 126}]}
{105 [{sil 0 34} {b 35 40} {aa 41 82} {z 83 101} {sil 102 147}]}
{125 [{sil 0 39} {b 40 46} {aa 47 95} {z 96 118} {sil 119 172}]}

normalised results =
{72 [{sil 0 22} {b 32 38} {aa 39 78} {z 79 97} {sil 99 125}]}
{80 [{sil 0 25} {b 33 38} {aa 39 78} {z 79 98} {sil 99 121}]}
{91 [{sil 0 29} {b 33 38} {aa 40 77} {z 78 97} {sil 98 138}]}
{105 [{sil 0 34} {b 33 38} {aa 39 78} {z 79 96} {sil 97 140}]}
{125 [{sil 0 39} {b 32 37} {aa 38 76} {z 77 94} {sil 95 138}]}

ruleAligned = [{{b 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{aa 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{z 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {b 32 38} {aa 39 78} {z 79 97} {sil 99 99}]}
{80 [{sil 0 0} {b 33 38} {aa 39 78} {z 79 98} {sil 99 99}]}
{91 [{sil 0 0} {b 33 38} {aa 40 77} {z 78 97} {sil 98 98}]}
{105 [{sil 0 0} {b 33 38} {aa 39 78} {z 79 96} {sil 97 97}]}
{125 [{sil 0 0} {b 32 37} {aa 38 76} {z 77 94} {sil 95 95}]}

timeAligned = [{{b 33 38} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{aa 39 78} [{0 2} {1 2} {3 2} {4 2} {2 2}]} {{z 79 97} [{0 3} {1 3} {2 3} {3 3} {4 3}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 37
i, iTime, newITime, timeStartFrom = 2 1 2 76
combinedVerdict    = [{b 0} {aa 0} {z 0}]
ruleAlignedVerdict = [{b 0} {aa 0} {z 0}]

score->
+2 for b
+2 for aa
+2 for z
score<-: 11
testPronounce b good aa good z good
publish->
phonsToAlphas = [{[b] b} {[aa] ar} {[z] s}]
getVerdict<-:new {b [b] 0}
getVerdict<-:new {ar [aa] 0}
getVerdict<-:new {s [z] 0}
lettersVerdicts = [{b [b] 0} {ar [aa] 0} {s [z] 0}]
publish<-
{
  "word": "bars",
  "results": [
    {
      "letters": "b",
      "phonemes": "b",
      "verdict": "good"
    },
    {
      "letters": "ar",
      "phonemes": "É‘",
      "verdict": "good"
    },
    {
      "letters": "s",
      "phonemes": "z",
      "verdict": "good"
    }
  ],
  "err": null
}
