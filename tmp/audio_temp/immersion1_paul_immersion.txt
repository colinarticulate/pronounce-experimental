Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_e19d23ef-be23-491d-9a67-9b3fa918987e audiofile /Users/test/go/src/Phonemes/audio_clips/immersion1_paul.wav word immersion dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  2.275187



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.33999999999999997 1.5 1.8399999999999999

 start3, duration3, end3 =  0.56 1.04 1.6

 Initial start, duration, end =  0.23999999999999996 1.5999999999999999 1.8399999999999999

 Cut at: start, duration =  0.23999999999999996 2.015187     guard_end =  2.255187 

Running scan for frate = 125
Running scan for frate = 125
Considering guard sh with value 1.6 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard y with value 3.5999999999999996 for er ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3.5999999999999996 for er ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3.2 for sh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3.2 for sh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 2.4 for axn ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3.2 for ax ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 0.8 for n ...
Considering guard zh with value 0.8 for n ...
candidateGuards = map[sh:true zh:true]
Picking guard, sh

frate, target rule = 125 public <immersion> = (((sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]) | (sil p (sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]))) ((([(<any_Vx_sh_p_z_ih_noSlide> sh)] | [(sh <any_Vx_sh_p_z_ih_noSlide>)]) ([(<any_Cx_sh_p_z_m> sh)] | [(sh <any_Cx_sh_p_z_m>)])) (ih | ((<any_Vx_sh_p_z_ih_noSlide> sh) | (sh <any_Vx_sh_p_z_ih_noSlide>)))) (([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)]) (m | ((<any_Cx_sh_sh_m> sh) | (sh <any_Cx_sh_sh_m>)))) ((([(<any_Vx_y_sh_er_noSlide> y)] | [(y <any_Vx_y_sh_er_noSlide>)]) ([(<any_Cx_y_sh_sh_m> y)] | [(y <any_Cx_y_sh_sh_m>)])) (er | ((<any_Vx_y_sh_er_noSlide> y) | (y <any_Vx_y_sh_er_noSlide>)))) (([(<any_Cx_y_y_sh> y)] | [(y <any_Cx_y_y_sh>)]) (sh | ((<any_Cx_y_y_sh_axn> y) | (y <any_Cx_y_y_sh_axn>)))) (([(<any_Cx_y_y_axn_sh> y)] | [(y <any_Cx_y_y_axn_sh>)]) (axn | ((<any_Cx_y_y_axn_sh> y) | (y <any_Cx_y_y_axn_sh>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_y_axn_p> p)] | [(p <any_Cx_y_axn_p>)]) sil))
frate, target rule = 125 public <immersion> = (((sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]) | (sil p (sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]))) ((([(<any_Vx_sh_p_z_ih_noSlide> sh)] | [(sh <any_Vx_sh_p_z_ih_noSlide>)]) ([(<any_Cx_sh_p_z_m> sh)] | [(sh <any_Cx_sh_p_z_m>)])) (ih | ((<any_Vx_sh_p_z_ih_noSlide> sh) | (sh <any_Vx_sh_p_z_ih_noSlide>)))) (([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)]) (m | ((<any_Cx_sh_sh_m> sh) | (sh <any_Cx_sh_sh_m>)))) ((([(<any_Vx_y_sh_er_noSlide> y)] | [(y <any_Vx_y_sh_er_noSlide>)]) ([(<any_Cx_y_sh_sh_m> y)] | [(y <any_Cx_y_sh_sh_m>)])) (er | ((<any_Vx_y_sh_er_noSlide> y) | (y <any_Vx_y_sh_er_noSlide>)))) (([(<any_Cx_y_y_sh_ax> y)] | [(y <any_Cx_y_y_sh_ax>)]) (sh | ((<any_Cx_y_y_sh_ax> y) | (y <any_Cx_y_y_sh_ax>)))) (([(<any_Cx_y_y_ax_sh> y)] | [(y <any_Cx_y_y_ax_sh>)]) (ax | ((<any_Cx_y_y_ax_n_sh> y) | (y <any_Cx_y_y_ax_n_sh>)))) (([(<any_Cx_sh_y_n_ax> sh)] | [(sh <any_Cx_sh_y_n_ax>)]) (n | ((<any_Cx_sh_y_n_ax> sh) | (sh <any_Cx_sh_y_n_ax>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_sh_n_b> b)] | [(b <any_Cx_sh_n_b>)]) sil))
Running scan for frate = 105
Considering guard sh with value 1.6 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 105
Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard y with value 3.5999999999999996 for er ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard y with value 3.2 for sh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3.5999999999999996 for er ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 2.4 for axn ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3.2 for sh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3.2 for ax ...
candidateGuards = map[y:true]
Picking guard, y

frate, target rule = 105 public <immersion> = (((sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]) | (sil p (sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]))) ((([(<any_Vx_sh_p_z_ih_noSlide> sh)] | [(sh <any_Vx_sh_p_z_ih_noSlide>)]) ([(<any_Cx_sh_p_z_m> sh)] | [(sh <any_Cx_sh_p_z_m>)])) (ih | ((<any_Vx_sh_p_z_ih_noSlide> sh) | (sh <any_Vx_sh_p_z_ih_noSlide>)))) (([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)]) (m | ((<any_Cx_sh_sh_m> sh) | (sh <any_Cx_sh_sh_m>)))) ((([(<any_Vx_y_sh_er_noSlide> y)] | [(y <any_Vx_y_sh_er_noSlide>)]) ([(<any_Cx_y_sh_sh_m> y)] | [(y <any_Cx_y_sh_sh_m>)])) (er | ((<any_Vx_y_sh_er_noSlide> y) | (y <any_Vx_y_sh_er_noSlide>)))) (([(<any_Cx_y_y_sh> y)] | [(y <any_Cx_y_y_sh>)]) (sh | ((<any_Cx_y_y_sh_axn> y) | (y <any_Cx_y_y_sh_axn>)))) (([(<any_Cx_y_y_axn_sh> y)] | [(y <any_Cx_y_y_axn_sh>)]) (axn | ((<any_Cx_y_y_axn_sh> y) | (y <any_Cx_y_y_axn_sh>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_y_axn_n> n)] | [(n <any_Cx_y_axn_n>)]) sil))
Considering guard sh with value 0.8 for n ...
Considering guard zh with value 0.8 for n ...
candidateGuards = map[sh:true zh:true]
Picking guard, sh

Running scan for frate = 91
frate, target rule = 105 public <immersion> = (((sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]) | (sil p (sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]))) ((([(<any_Vx_sh_p_z_ih_noSlide> sh)] | [(sh <any_Vx_sh_p_z_ih_noSlide>)]) ([(<any_Cx_sh_p_z_m> sh)] | [(sh <any_Cx_sh_p_z_m>)])) (ih | ((<any_Vx_sh_p_z_ih_noSlide> sh) | (sh <any_Vx_sh_p_z_ih_noSlide>)))) (([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)]) (m | ((<any_Cx_sh_sh_m> sh) | (sh <any_Cx_sh_sh_m>)))) ((([(<any_Vx_y_sh_er_noSlide> y)] | [(y <any_Vx_y_sh_er_noSlide>)]) ([(<any_Cx_y_sh_sh_m> y)] | [(y <any_Cx_y_sh_sh_m>)])) (er | ((<any_Vx_y_sh_er_noSlide> y) | (y <any_Vx_y_sh_er_noSlide>)))) (([(<any_Cx_y_y_sh_ax> y)] | [(y <any_Cx_y_y_sh_ax>)]) (sh | ((<any_Cx_y_y_sh_ax> y) | (y <any_Cx_y_y_sh_ax>)))) (([(<any_Cx_y_y_ax_sh> y)] | [(y <any_Cx_y_y_ax_sh>)]) (ax | ((<any_Cx_y_y_ax_n_sh> y) | (y <any_Cx_y_y_ax_n_sh>)))) (([(<any_Cx_sh_y_n_ax> sh)] | [(sh <any_Cx_sh_y_n_ax>)]) (n | ((<any_Cx_sh_y_n_ax> sh) | (sh <any_Cx_sh_y_n_ax>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_sh_n_thr> thr)] | [(thr <any_Cx_sh_n_thr>)]) sil))
Considering guard sh with value 1.6 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 91
Considering guard y with value 3.5999999999999996 for er ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3.2 for sh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 1.6 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard y with value 2.4 for axn ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard y with value 3.5999999999999996 for er ...
candidateGuards = map[y:true]
Picking guard, y

frate, target rule = 91 public <immersion> = (((sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]) | (sil p (sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]))) ((([(<any_Vx_sh_p_z_ih_noSlide> sh)] | [(sh <any_Vx_sh_p_z_ih_noSlide>)]) ([(<any_Cx_sh_p_z_m> sh)] | [(sh <any_Cx_sh_p_z_m>)])) (ih | ((<any_Vx_sh_p_z_ih_noSlide> sh) | (sh <any_Vx_sh_p_z_ih_noSlide>)))) (([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)]) (m | ((<any_Cx_sh_sh_m> sh) | (sh <any_Cx_sh_sh_m>)))) ((([(<any_Vx_y_sh_er_noSlide> y)] | [(y <any_Vx_y_sh_er_noSlide>)]) ([(<any_Cx_y_sh_sh_m> y)] | [(y <any_Cx_y_sh_sh_m>)])) (er | ((<any_Vx_y_sh_er_noSlide> y) | (y <any_Vx_y_sh_er_noSlide>)))) (([(<any_Cx_y_y_sh> y)] | [(y <any_Cx_y_y_sh>)]) (sh | ((<any_Cx_y_y_sh_axn> y) | (y <any_Cx_y_y_sh_axn>)))) (([(<any_Cx_y_y_axn_sh> y)] | [(y <any_Cx_y_y_axn_sh>)]) (axn | ((<any_Cx_y_y_axn_sh> y) | (y <any_Cx_y_y_axn_sh>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_y_axn_ng> ng)] | [(ng <any_Cx_y_axn_ng>)]) sil))
Considering guard y with value 3.2 for sh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3.2 for ax ...
candidateGuards = map[y:true]
Picking guard, y

Running scan for frate = 80
Considering guard sh with value 0.8 for n ...
Considering guard zh with value 0.8 for n ...
candidateGuards = map[sh:true zh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 91 public <immersion> = (((sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]) | (sil p (sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]))) ((([(<any_Vx_sh_p_z_ih_noSlide> sh)] | [(sh <any_Vx_sh_p_z_ih_noSlide>)]) ([(<any_Cx_sh_p_z_m> sh)] | [(sh <any_Cx_sh_p_z_m>)])) (ih | ((<any_Vx_sh_p_z_ih_noSlide> sh) | (sh <any_Vx_sh_p_z_ih_noSlide>)))) (([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)]) (m | ((<any_Cx_sh_sh_m> sh) | (sh <any_Cx_sh_sh_m>)))) ((([(<any_Vx_y_sh_er_noSlide> y)] | [(y <any_Vx_y_sh_er_noSlide>)]) ([(<any_Cx_y_sh_sh_m> y)] | [(y <any_Cx_y_sh_sh_m>)])) (er | ((<any_Vx_y_sh_er_noSlide> y) | (y <any_Vx_y_sh_er_noSlide>)))) (([(<any_Cx_y_y_sh_ax> y)] | [(y <any_Cx_y_y_sh_ax>)]) (sh | ((<any_Cx_y_y_sh_ax> y) | (y <any_Cx_y_y_sh_ax>)))) (([(<any_Cx_y_y_ax_sh> y)] | [(y <any_Cx_y_y_ax_sh>)]) (ax | ((<any_Cx_y_y_ax_n_sh> y) | (y <any_Cx_y_y_ax_n_sh>)))) (([(<any_Cx_sh_y_n_ax> sh)] | [(sh <any_Cx_sh_y_n_ax>)]) (n | ((<any_Cx_sh_y_n_ax> sh) | (sh <any_Cx_sh_y_n_ax>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_sh_n_thr> thr)] | [(thr <any_Cx_sh_n_thr>)]) sil))
Considering guard y with value 3.5999999999999996 for er ...
candidateGuards = map[y:true]
Picking guard, y

Running scan for frate = 80
Considering guard y with value 3.2 for sh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 2.4 for axn ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 1.6 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 80 public <immersion> = (((sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]) | (sil p (sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]))) ((([(<any_Vx_sh_p_z_ih_noSlide> sh)] | [(sh <any_Vx_sh_p_z_ih_noSlide>)]) ([(<any_Cx_sh_p_z_m> sh)] | [(sh <any_Cx_sh_p_z_m>)])) (ih | ((<any_Vx_sh_p_z_ih_noSlide> sh) | (sh <any_Vx_sh_p_z_ih_noSlide>)))) (([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)]) (m | ((<any_Cx_sh_sh_m> sh) | (sh <any_Cx_sh_sh_m>)))) ((([(<any_Vx_y_sh_er_noSlide> y)] | [(y <any_Vx_y_sh_er_noSlide>)]) ([(<any_Cx_y_sh_sh_m> y)] | [(y <any_Cx_y_sh_sh_m>)])) (er | ((<any_Vx_y_sh_er_noSlide> y) | (y <any_Vx_y_sh_er_noSlide>)))) (([(<any_Cx_y_y_sh> y)] | [(y <any_Cx_y_y_sh>)]) (sh | ((<any_Cx_y_y_sh_axn> y) | (y <any_Cx_y_y_sh_axn>)))) (([(<any_Cx_y_y_axn_sh> y)] | [(y <any_Cx_y_y_axn_sh>)]) (axn | ((<any_Cx_y_y_axn_sh> y) | (y <any_Cx_y_y_axn_sh>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_y_axn_f> f)] | [(f <any_Cx_y_axn_f>)]) sil))
Considering guard y with value 3.5999999999999996 for er ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3.2 for sh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3.2 for ax ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 0.8 for n ...
Considering guard zh with value 0.8 for n ...
candidateGuards = map[sh:true zh:true]
Picking guard, sh

frate, target rule = 80 public <immersion> = (((sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]) | (sil p (sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]))) ((([(<any_Vx_sh_p_z_ih_noSlide> sh)] | [(sh <any_Vx_sh_p_z_ih_noSlide>)]) ([(<any_Cx_sh_p_z_m> sh)] | [(sh <any_Cx_sh_p_z_m>)])) (ih | ((<any_Vx_sh_p_z_ih_noSlide> sh) | (sh <any_Vx_sh_p_z_ih_noSlide>)))) (([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)]) (m | ((<any_Cx_sh_sh_m> sh) | (sh <any_Cx_sh_sh_m>)))) ((([(<any_Vx_y_sh_er_noSlide> y)] | [(y <any_Vx_y_sh_er_noSlide>)]) ([(<any_Cx_y_sh_sh_m> y)] | [(y <any_Cx_y_sh_sh_m>)])) (er | ((<any_Vx_y_sh_er_noSlide> y) | (y <any_Vx_y_sh_er_noSlide>)))) (([(<any_Cx_y_y_sh_ax> y)] | [(y <any_Cx_y_y_sh_ax>)]) (sh | ((<any_Cx_y_y_sh_ax> y) | (y <any_Cx_y_y_sh_ax>)))) (([(<any_Cx_y_y_ax_sh> y)] | [(y <any_Cx_y_y_ax_sh>)]) (ax | ((<any_Cx_y_y_ax_n_sh> y) | (y <any_Cx_y_y_ax_n_sh>)))) (([(<any_Cx_sh_y_n_ax> sh)] | [(sh <any_Cx_sh_y_n_ax>)]) (n | ((<any_Cx_sh_y_n_ax> sh) | (sh <any_Cx_sh_y_n_ax>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_sh_n_ng> ng)] | [(ng <any_Cx_sh_n_ng>)]) sil))
Running scan for frate = 72
Considering guard sh with value 1.6 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard y with value 3.5999999999999996 for er ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3.2 for sh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3.2 for ax ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 0.8 for n ...
Considering guard zh with value 0.8 for n ...
candidateGuards = map[sh:true zh:true]
Picking guard, sh

frate, target rule = 72 public <immersion> = (((sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]) | (sil p (sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]))) ((([(<any_Vx_sh_p_z_ih_noSlide> sh)] | [(sh <any_Vx_sh_p_z_ih_noSlide>)]) ([(<any_Cx_sh_p_z_m> sh)] | [(sh <any_Cx_sh_p_z_m>)])) (ih | ((<any_Vx_sh_p_z_ih_noSlide> sh) | (sh <any_Vx_sh_p_z_ih_noSlide>)))) (([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)]) (m | ((<any_Cx_sh_sh_m> sh) | (sh <any_Cx_sh_sh_m>)))) ((([(<any_Vx_y_sh_er_noSlide> y)] | [(y <any_Vx_y_sh_er_noSlide>)]) ([(<any_Cx_y_sh_sh_m> y)] | [(y <any_Cx_y_sh_sh_m>)])) (er | ((<any_Vx_y_sh_er_noSlide> y) | (y <any_Vx_y_sh_er_noSlide>)))) (([(<any_Cx_y_y_sh_ax> y)] | [(y <any_Cx_y_y_sh_ax>)]) (sh | ((<any_Cx_y_y_sh_ax> y) | (y <any_Cx_y_y_sh_ax>)))) (([(<any_Cx_y_y_ax_sh> y)] | [(y <any_Cx_y_y_ax_sh>)]) (ax | ((<any_Cx_y_y_ax_n_sh> y) | (y <any_Cx_y_y_ax_n_sh>)))) (([(<any_Cx_sh_y_n_ax> sh)] | [(sh <any_Cx_sh_y_n_ax>)]) (n | ((<any_Cx_sh_y_n_ax> sh) | (sh <any_Cx_sh_y_n_ax>)))) (([(<any_vowel_noSlide> z)] | [(z <any_vowel_noSlide>)]) ([(<any_Cx_sh_n_z> z)] | [(z <any_Cx_sh_n_z>)]) sil))
Running scan for frate = 72
Considering guard sh with value 1.6 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard y with value 3.5999999999999996 for er ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3.2 for sh ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 2.4 for axn ...
candidateGuards = map[y:true]
Picking guard, y

frate, target rule = 72 public <immersion> = (((sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]) | (sil p (sil [((z <any_Vx_ih_z_p_noSlide>) | (<any_Vx_ih_z_p_noSlide> z))] [((z <any_Cx_ih_z_p>) | (<any_Cx_ih_z_p> z))]))) ((([(<any_Vx_sh_p_z_ih_noSlide> sh)] | [(sh <any_Vx_sh_p_z_ih_noSlide>)]) ([(<any_Cx_sh_p_z_m> sh)] | [(sh <any_Cx_sh_p_z_m>)])) (ih | ((<any_Vx_sh_p_z_ih_noSlide> sh) | (sh <any_Vx_sh_p_z_ih_noSlide>)))) (([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)]) (m | ((<any_Cx_sh_sh_m> sh) | (sh <any_Cx_sh_sh_m>)))) ((([(<any_Vx_y_sh_er_noSlide> y)] | [(y <any_Vx_y_sh_er_noSlide>)]) ([(<any_Cx_y_sh_sh_m> y)] | [(y <any_Cx_y_sh_sh_m>)])) (er | ((<any_Vx_y_sh_er_noSlide> y) | (y <any_Vx_y_sh_er_noSlide>)))) (([(<any_Cx_y_y_sh> y)] | [(y <any_Cx_y_y_sh>)]) (sh | ((<any_Cx_y_y_sh_axn> y) | (y <any_Cx_y_y_sh_axn>)))) (([(<any_Cx_y_y_axn_sh> y)] | [(y <any_Cx_y_y_axn_sh>)]) (axn | ((<any_Cx_y_y_axn_sh> y) | (y <any_Cx_y_y_axn_sh>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_y_axn_f> f)] | [(f <any_Cx_y_axn_f>)]) sil))

results =
{72 [{sil 0 28} {ih 29 36} {m 37 46} {er 47 64} {sh 65 73} {axn 74 91} {sil 92 103}]}
{80 [{sil 0 32} {ih 33 40} {m 41 50} {er 51 72} {sh 73 81} {axn 82 101} {sil 102 113}]}
{91 [{sil 0 36} {ih 37 46} {m 47 57} {er 58 80} {zh 81 91} {y 92 96} {axn 97 120} {sil 121 182}]}
{105 [{sil 0 43} {ih 44 54} {m 55 66} {er 67 92} {zh 93 105} {y 106 112} {axn 113 140} {sil 141 211}]}
{125 [{sil 0 49} {ih 50 62} {m 63 77} {er 78 111} {sh 112 125} {axn 126 165} {sil 166 248}]}

normalised results =
{72 [{sil 0 28} {ih 40 50} {m 51 64} {er 65 89} {sh 90 101} {axn 103 126} {sil 128 143}]}
{80 [{sil 0 32} {ih 41 50} {m 51 63} {er 64 90} {sh 91 101} {axn 103 126} {sil 128 141}]}
{91 [{sil 0 36} {ih 41 51} {m 52 63} {er 64 88} {zh 89 100} {y 101 105} {axn 107 132} {sil 133 200}]}
{105 [{sil 0 43} {ih 42 51} {m 52 63} {er 64 88} {zh 89 100} {y 101 107} {axn 108 133} {sil 134 201}]}
{125 [{sil 0 49} {ih 40 50} {m 50 62} {er 62 89} {sh 90 100} {axn 101 132} {sil 133 198}]}

ruleAligned = [{{ih 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{m 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{er 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{sh 1} [{0 4} {1 4} {4 4}]} {{axn 0} [{0 5} {1 5} {2 6} {3 6} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {ih 40 50} {m 51 64} {er 65 89} {sh 90 101} {axn 103 126} {sil 128 128}]}
{80 [{sil 0 0} {ih 41 50} {m 51 63} {er 64 90} {sh 91 101} {axn 103 126} {sil 128 128}]}
{91 [{sil 0 0} {ih 41 51} {m 52 63} {er 64 88} {zh 89 100} {y 101 101} {axn 107 132} {sil 133 133}]}
{105 [{sil 0 0} {ih 42 51} {m 52 63} {er 64 88} {zh 89 100} {y 101 107} {axn 108 133} {sil 134 134}]}
{125 [{sil 0 0} {ih 40 50} {m 50 62} {er 62 89} {sh 90 100} {axn 101 132} {sil 133 133}]}

timeAligned = [{{ih 41 50} [{0 1} {1 1} {2 1} {4 1} {3 1}]} {{m 51 63} [{0 2} {1 2} {4 2} {2 2} {3 2}]} {{er 64 89} [{1 3} {2 3} {3 3} {4 3} {0 3}]} {{sh 91 100} [{0 4} {1 4} {4 4}]} {{axn 103 132} [{0 5} {1 5} {4 5} {2 6} {3 6}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 50
i, iTime, newITime, timeStartFrom = 2 1 2 62
i, iTime, newITime, timeStartFrom = 3 2 3 88
i, iTime, newITime, timeStartFrom = 4 3 4 100
combinedVerdict    = [{ih 0} {m 0} {er 0} {sh 1} {axn 0}]
ruleAlignedVerdict = [{ih 0} {m 0} {er 0} {sh 1} {axn 0}]

score->
+2 for ih
+2 for m
+2 for er
+1 for sh
+2 for axn
score<-: 14

results =
{72 [{sil 0 28} {ih 29 36} {m 37 46} {er 47 64} {sh 65 74} {ax 75 78} {n 79 90} {sil 91 103}]}
{80 [{sil 0 32} {ih 33 40} {m 41 50} {er 51 72} {sh 73 82} {ax 83 88} {n 89 100} {sil 101 113}]}
{91 [{sil 0 36} {ih 37 46} {m 47 57} {er 58 80} {zh 81 91} {y 92 94} {ax 95 100} {n 101 120} {sil 121 182}]}
{105 [{sil 0 43} {ih 44 54} {m 55 66} {er 67 92} {zh 93 105} {y 106 109} {ax 110 116} {n 117 140} {sil 141 211}]}
{125 [{sil 0 49} {ih 50 62} {m 63 77} {er 78 111} {sh 112 125} {ax 126 136} {n 137 164} {sil 165 248}]}

normalised results =
{72 [{sil 0 28} {ih 40 50} {m 51 64} {er 65 89} {sh 90 103} {ax 104 108} {n 110 125} {sil 126 143}]}
{80 [{sil 0 32} {ih 41 50} {m 51 63} {er 64 90} {sh 91 103} {ax 104 110} {n 111 125} {sil 126 141}]}
{91 [{sil 0 36} {ih 41 51} {m 52 63} {er 64 88} {zh 89 100} {y 101 101} {ax 104 110} {n 111 132} {sil 133 200}]}
{105 [{sil 0 43} {ih 42 51} {m 52 63} {er 64 88} {zh 89 100} {y 101 104} {ax 105 110} {n 111 133} {sil 134 201}]}
{125 [{sil 0 49} {ih 40 50} {m 50 62} {er 62 89} {sh 90 100} {ax 101 109} {n 110 131} {sil 132 198}]}

ruleAligned = [{{ih 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{m 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{er 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{sh 1} [{0 4} {1 4} {4 4}]} {{ax 0} [{0 5} {1 5} {2 6} {3 6} {4 5}]} {{n 0} [{0 6} {1 6} {2 7} {3 7} {4 6}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {ih 40 50} {m 51 64} {er 65 89} {sh 90 103} {ax 104 108} {n 110 125} {sil 126 126}]}
{80 [{sil 0 0} {ih 41 50} {m 51 63} {er 64 90} {sh 91 103} {ax 104 110} {n 111 125} {sil 126 126}]}
{91 [{sil 0 0} {ih 41 51} {m 52 63} {er 64 88} {zh 89 100} {y 101 101} {ax 104 110} {n 111 132} {sil 133 133}]}
{105 [{sil 0 0} {ih 42 51} {m 52 63} {er 64 88} {zh 89 100} {y 101 101} {ax 105 110} {n 111 133} {sil 134 134}]}
{125 [{sil 0 0} {ih 40 50} {m 50 62} {er 62 89} {sh 90 100} {ax 101 109} {n 110 131} {sil 132 132}]}

timeAligned = [{{ih 41 50} [{0 1} {1 1} {2 1} {4 1} {3 1}]} {{m 51 63} [{0 2} {1 2} {4 2} {2 2} {3 2}]} {{er 64 89} [{1 3} {2 3} {3 3} {4 3} {0 3}]} {{sh 91 100} [{0 4} {1 4} {4 4}]} {{ax 104 110} [{0 5} {1 5} {2 6} {4 5} {3 6}]} {{n 111 131} [{0 6} {1 6} {2 7} {3 7} {4 6}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 50
i, iTime, newITime, timeStartFrom = 2 1 2 62
i, iTime, newITime, timeStartFrom = 3 2 3 88
i, iTime, newITime, timeStartFrom = 4 3 4 100
i, iTime, newITime, timeStartFrom = 5 4 5 108
combinedVerdict    = [{ih 0} {m 0} {er 0} {sh 1} {ax 0} {n 0}]
ruleAlignedVerdict = [{ih 0} {m 0} {er 0} {sh 1} {ax 0} {n 0}]

score->
+2 for ih
+2 for m
+2 for er
+1 for sh
+2 for ax
+2 for n
score<-: 16
testPronounce ih good m good er good sh possible ax good n good
publish->
phonsToAlphas = [{[ih] i} {[m] mm} {[er] er} {[sh] s} {[ax] io} {[n] n}]
getVerdict<-:new {i [ih] 0}
getVerdict<-:new {mm [m] 0}
getVerdict<-:new {er [er] 0}
getVerdict<-:new {s [sh] 1}
getVerdict<-:new {io [ax] 0}
getVerdict<-:new {n [n] 0}
lettersVerdicts = [{i [ih] 0} {mm [m] 0} {er [er] 0} {s [sh] 1} {io [ax] 0} {n [n] 0}]
publish<-
{
  "word": "immersion",
  "results": [
    {
      "letters": "i",
      "phonemes": "ɪ",
      "verdict": "good"
    },
    {
      "letters": "mm",
      "phonemes": "m",
      "verdict": "good"
    },
    {
      "letters": "er",
      "phonemes": "ɜɹ",
      "verdict": "good"
    },
    {
      "letters": "s",
      "phonemes": "ʃ",
      "verdict": "possible"
    },
    {
      "letters": "io",
      "phonemes": "ə",
      "verdict": "good"
    },
    {
      "letters": "n",
      "phonemes": "n",
      "verdict": "good"
    }
  ],
  "err": null
}
