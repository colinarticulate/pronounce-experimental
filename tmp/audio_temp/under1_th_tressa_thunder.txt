Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_42f6e8cd-5bbd-4deb-a9f7-12cc029ccc52 audiofile /Users/test/go/src/Phonemes/audio_clips/under1_th_tressa.wav word thunder dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  1.429



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.36 0.82 1.18

 start3, duration3, end3 =  0.66 0.44000000000000006 1.1

 Initial start, duration, end =  0.26 0.9199999999999999 1.18

 Cut at: start, duration =  0.26 1.149     guard_end =  1.409 

Running scan for frate = 125
Considering guard zh with value 1 for th ...
Considering guard jh with value 1 for th ...
candidateGuards = map[jh:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for ah ...
Considering guard jh with value 2 for ah ...
candidateGuards = map[jh:true zh:true]
Picking guard, zh

Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for axr ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 125 public <thunder> = (((sil [((t <any_Cx_th_t_p>) | (<any_Cx_th_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil p (sil [((t <any_Cx_th_t_p>) | (<any_Cx_th_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_zh_p_t_th> zh)] | [(zh <any_Cx_zh_p_t_th>)]) (th | t | d | s | ((<any_Cx_zh_p_t_th> zh) | (zh <any_Cx_zh_p_t_th>)))) ((([(<any_Vx_zh_zh_ah_noSlide> zh)] | [(zh <any_Vx_zh_zh_ah_noSlide>)]) ([(<any_Cx_zh_zh_n_th> zh)] | [(zh <any_Cx_zh_zh_n_th>)])) (ah | ((<any_Vx_zh_zh_ah_noSlide> zh) | (zh <any_Vx_zh_zh_ah_noSlide>)))) (([(<any_Cx_sh_zh_n_d> sh)] | [(sh <any_Cx_sh_zh_n_d>)]) (n | ((<any_Cx_sh_zh_n_d> sh) | (sh <any_Cx_sh_zh_n_d>)))) (([(<any_Cx_sh_sh_d_n> sh)] | [(sh <any_Cx_sh_sh_d_n>)]) (d | ((<any_Cx_sh_sh_d_axr_n> sh) | (sh <any_Cx_sh_sh_d_axr_n>)))) (([(<any_Cx_sh_sh_axr_d> sh)] | [(sh <any_Cx_sh_sh_axr_d>)]) (axr | ((<any_Cx_sh_sh_axr_d> sh) | (sh <any_Cx_sh_sh_axr_d>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_sh_axr_p> p)] | [(p <any_Cx_sh_axr_p>)]) sil))
Running scan for frate = 105
Considering guard zh with value 1 for th ...
Considering guard jh with value 1 for th ...
candidateGuards = map[jh:true zh:true]
Picking guard, jh

Considering guard zh with value 2 for ah ...
Considering guard jh with value 2 for ah ...
candidateGuards = map[jh:true zh:true]
Picking guard, zh

Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for axr ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 105 public <thunder> = (((sil [((dh <any_Cx_th_dh_p>) | (<any_Cx_th_dh_p> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]) | (sil p (sil [((dh <any_Cx_th_dh_p>) | (<any_Cx_th_dh_p> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]))) (([(<any_Cx_jh_p_dh_th> jh)] | [(jh <any_Cx_jh_p_dh_th>)]) (th | t | d | s | ((<any_Cx_jh_p_dh_th> jh) | (jh <any_Cx_jh_p_dh_th>)))) ((([(<any_Vx_zh_jh_ah_noSlide> zh)] | [(zh <any_Vx_zh_jh_ah_noSlide>)]) ([(<any_Cx_zh_jh_n_th> zh)] | [(zh <any_Cx_zh_jh_n_th>)])) (ah | ((<any_Vx_zh_jh_ah_noSlide> zh) | (zh <any_Vx_zh_jh_ah_noSlide>)))) (([(<any_Cx_sh_zh_n_d> sh)] | [(sh <any_Cx_sh_zh_n_d>)]) (n | ((<any_Cx_sh_zh_n_d> sh) | (sh <any_Cx_sh_zh_n_d>)))) (([(<any_Cx_sh_sh_d_n> sh)] | [(sh <any_Cx_sh_sh_d_n>)]) (d | ((<any_Cx_sh_sh_d_axr_n> sh) | (sh <any_Cx_sh_sh_d_axr_n>)))) (([(<any_Cx_sh_sh_axr_d> sh)] | [(sh <any_Cx_sh_sh_axr_d>)]) (axr | ((<any_Cx_sh_sh_axr_d> sh) | (sh <any_Cx_sh_sh_axr_d>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_sh_axr_hh> hh)] | [(hh <any_Cx_sh_axr_hh>)]) sil))
Running scan for frate = 91
Considering guard zh with value 1 for th ...
Considering guard jh with value 1 for th ...
candidateGuards = map[jh:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for ah ...
Considering guard jh with value 2 for ah ...
candidateGuards = map[jh:true zh:true]
Picking guard, zh

Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for axr ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 91 public <thunder> = (((sil [((s <any_Cx_th_s_p>) | (<any_Cx_th_s_p> s))] [((s <any_vowel_noSlide>) | (<any_vowel_noSlide> s))]) | (sil p (sil [((s <any_Cx_th_s_p>) | (<any_Cx_th_s_p> s))] [((s <any_vowel_noSlide>) | (<any_vowel_noSlide> s))]))) (([(<any_Cx_zh_p_s_th> zh)] | [(zh <any_Cx_zh_p_s_th>)]) (th | t | d | s | ((<any_Cx_zh_p_s_th> zh) | (zh <any_Cx_zh_p_s_th>)))) ((([(<any_Vx_zh_zh_ah_noSlide> zh)] | [(zh <any_Vx_zh_zh_ah_noSlide>)]) ([(<any_Cx_zh_zh_n_th> zh)] | [(zh <any_Cx_zh_zh_n_th>)])) (ah | ((<any_Vx_zh_zh_ah_noSlide> zh) | (zh <any_Vx_zh_zh_ah_noSlide>)))) (([(<any_Cx_sh_zh_n_d> sh)] | [(sh <any_Cx_sh_zh_n_d>)]) (n | ((<any_Cx_sh_zh_n_d> sh) | (sh <any_Cx_sh_zh_n_d>)))) (([(<any_Cx_sh_sh_d_n> sh)] | [(sh <any_Cx_sh_sh_d_n>)]) (d | ((<any_Cx_sh_sh_d_axr_n> sh) | (sh <any_Cx_sh_sh_d_axr_n>)))) (([(<any_Cx_sh_sh_axr_d> sh)] | [(sh <any_Cx_sh_sh_axr_d>)]) (axr | ((<any_Cx_sh_sh_axr_d> sh) | (sh <any_Cx_sh_sh_axr_d>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_sh_axr_f> f)] | [(f <any_Cx_sh_axr_f>)]) sil))
Running scan for frate = 80
Considering guard jh with value 1 for th ...
Considering guard zh with value 1 for th ...
candidateGuards = map[jh:true zh:true]
Picking guard, jh

Considering guard zh with value 2 for ah ...
Considering guard jh with value 2 for ah ...
candidateGuards = map[jh:true zh:true]
Picking guard, jh

Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for axr ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 80 public <thunder> = (((sil [((t <any_Cx_th_t_p>) | (<any_Cx_th_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil p (sil [((t <any_Cx_th_t_p>) | (<any_Cx_th_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_jh_p_t_th> jh)] | [(jh <any_Cx_jh_p_t_th>)]) (th | t | d | s | ((<any_Cx_jh_p_t_th> jh) | (jh <any_Cx_jh_p_t_th>)))) ((([(<any_Vx_jh_jh_ah_noSlide> jh)] | [(jh <any_Vx_jh_jh_ah_noSlide>)]) ([(<any_Cx_jh_jh_n_th> jh)] | [(jh <any_Cx_jh_jh_n_th>)])) (ah | ((<any_Vx_jh_jh_ah_noSlide> jh) | (jh <any_Vx_jh_jh_ah_noSlide>)))) (([(<any_Cx_sh_jh_n_d> sh)] | [(sh <any_Cx_sh_jh_n_d>)]) (n | ((<any_Cx_sh_jh_n_d> sh) | (sh <any_Cx_sh_jh_n_d>)))) (([(<any_Cx_sh_sh_d_n> sh)] | [(sh <any_Cx_sh_sh_d_n>)]) (d | ((<any_Cx_sh_sh_d_axr_n> sh) | (sh <any_Cx_sh_sh_d_axr_n>)))) (([(<any_Cx_sh_sh_axr_d> sh)] | [(sh <any_Cx_sh_sh_axr_d>)]) (axr | ((<any_Cx_sh_sh_axr_d> sh) | (sh <any_Cx_sh_sh_axr_d>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_sh_axr_p> p)] | [(p <any_Cx_sh_axr_p>)]) sil))
Running scan for frate = 72
Considering guard zh with value 1 for th ...
Considering guard jh with value 1 for th ...
candidateGuards = map[jh:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for ah ...
Considering guard jh with value 2 for ah ...
candidateGuards = map[jh:true zh:true]
Picking guard, zh

Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for axr ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 72 public <thunder> = (((sil [((t <any_Cx_th_t_p>) | (<any_Cx_th_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil p (sil [((t <any_Cx_th_t_p>) | (<any_Cx_th_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_zh_p_t_th> zh)] | [(zh <any_Cx_zh_p_t_th>)]) (th | t | d | s | ((<any_Cx_zh_p_t_th> zh) | (zh <any_Cx_zh_p_t_th>)))) ((([(<any_Vx_zh_zh_ah_noSlide> zh)] | [(zh <any_Vx_zh_zh_ah_noSlide>)]) ([(<any_Cx_zh_zh_n_th> zh)] | [(zh <any_Cx_zh_zh_n_th>)])) (ah | ((<any_Vx_zh_zh_ah_noSlide> zh) | (zh <any_Vx_zh_zh_ah_noSlide>)))) (([(<any_Cx_sh_zh_n_d> sh)] | [(sh <any_Cx_sh_zh_n_d>)]) (n | ((<any_Cx_sh_zh_n_d> sh) | (sh <any_Cx_sh_zh_n_d>)))) (([(<any_Cx_sh_sh_d_n> sh)] | [(sh <any_Cx_sh_sh_d_n>)]) (d | ((<any_Cx_sh_sh_d_axr_n> sh) | (sh <any_Cx_sh_sh_d_axr_n>)))) (([(<any_Cx_sh_sh_axr_d> sh)] | [(sh <any_Cx_sh_sh_axr_d>)]) (axr | ((<any_Cx_sh_sh_axr_d> sh) | (sh <any_Cx_sh_sh_axr_d>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_sh_axr_m> m)] | [(m <any_Cx_sh_axr_m>)]) sil))

results =
{72 [{sil 0 6} {d 7 9} {ah 10 19} {n 20 36} {d 37 41} {axr 42 56} {sil 57 71}]}
{80 [{sil 0 7} {d 8 11} {ah 12 22} {n 23 41} {d 42 46} {axr 47 61} {sil 62 77}]}
{91 [{sil 0 9} {d 10 13} {ah 14 25} {n 26 46} {d 47 52} {axr 53 70} {sil 71 103}]}
{105 [{sil 0 13} {t 14 16} {ah 17 29} {n 30 54} {d 55 60} {axr 61 82} {sil 83 119}]}
{125 [{sil 0 13} {t 14 18} {ah 19 32} {n 33 63} {d 64 69} {axr 70 111} {sil 112 140}]}

normalised results =
{72 [{sil 0 6} {d 10 10} {ah 14 26} {n 28 50} {d 51 57} {axr 58 78} {sil 79 99}]}
{80 [{sil 0 7} {d 10 14} {ah 15 28} {n 29 51} {d 53 58} {axr 59 76} {sil 78 96}]}
{91 [{sil 0 9} {d 11 14} {ah 15 27} {n 29 51} {d 52 57} {axr 58 77} {sil 78 113}]}
{105 [{sil 0 13} {t 13 13} {ah 16 28} {n 29 51} {d 52 57} {axr 58 78} {sil 79 113}]}
{125 [{sil 0 13} {t 11 14} {ah 15 26} {n 26 50} {d 51 55} {axr 56 89} {sil 90 112}]}

ruleAligned = [{{th 2} []} {{ah 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{n 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{d 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{axr 0} [{0 5} {1 5} {2 5} {3 5} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {d 10 10} {ah 14 26} {n 28 50} {d 51 57} {axr 58 78} {sil 79 79}]}
{80 [{sil 0 0} {d 10 14} {ah 15 28} {n 29 51} {d 53 58} {axr 59 76} {sil 78 78}]}
{91 [{sil 0 0} {d 11 14} {ah 15 27} {n 29 51} {d 52 57} {axr 58 77} {sil 78 78}]}
{105 [{sil 0 0} {t 13 13} {ah 16 28} {n 29 51} {d 52 57} {axr 58 78} {sil 79 79}]}
{125 [{sil 0 0} {t 11 11} {ah 15 26} {n 26 50} {d 51 55} {axr 56 89} {sil 90 90}]}

timeAligned = [{{ah 15 27} [{0 2} {1 2} {2 2} {4 2} {3 2}]} {{n 29 51} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{d 52 57} [{0 4} {2 4} {3 4} {4 4} {1 4}]} {{axr 58 78} [{0 5} {2 5} {3 5} {4 5} {1 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 -1 0
i, iTime, newITime, timeStartFrom = 1 0 0 0
i, iTime, newITime, timeStartFrom = 2 0 1 26
i, iTime, newITime, timeStartFrom = 3 1 2 50
i, iTime, newITime, timeStartFrom = 4 2 3 55
combinedVerdict    = [{th 2} {ah 0} {n 0} {d 0} {axr 0}]
ruleAlignedVerdict = [{th 2} {ah 0} {n 0} {d 0} {axr 0}]

score->
-2 for th
+2 for ah
+2 for n
+2 for d
+2 for axr
score<-: 6
bestResult = {6 [{th 2} {ah 0} {n 0} {d 0} {axr 0}] [th ah n d axr]}
testPronounce th missing ah good n good d good axr good
publish->
phonsToAlphas = [{[th] th} {[ah] u} {[n] n} {[d] d} {[axr] er}]
getVerdict<-:new {th [th] 2}
getVerdict<-:new {u [ah] 0}
getVerdict<-:new {n [n] 0}
getVerdict<-:new {d [d] 0}
getVerdict<-:new {er [axr] 0}
lettersVerdicts = [{th [th] 2} {u [ah] 0} {n [n] 0} {d [d] 0} {er [axr] 0}]
publish<-
{
  "word": "thunder",
  "results": [
    {
      "letters": "th",
      "phonemes": "θ",
      "verdict": "missing"
    },
    {
      "letters": "u",
      "phonemes": "ʌ",
      "verdict": "good"
    },
    {
      "letters": "n",
      "phonemes": "n",
      "verdict": "good"
    },
    {
      "letters": "d",
      "phonemes": "d",
      "verdict": "good"
    },
    {
      "letters": "er",
      "phonemes": "əɹ",
      "verdict": "good"
    }
  ],
  "err": null
}
