Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_efa635d4-252e-4f65-bd9d-45dddaefee1e audiofile /Users/test/go/src/Phonemes/audio_clips/reside1_colin.wav word reside dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  2.012062



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.68 1.1 1.7800000000000002

 start3, duration3, end3 =  0.68 1.02 1.7000000000000002

 Initial start, duration, end =  0.5800000000000001 1.2000000000000002 1.7800000000000002

 Cut at: start, duration =  0.5800000000000001 1.4120619999999997     guard_end =  1.9920619999999998 

Running scan for frate = 125
Considering guard z with value 1 for r ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard jh with value 8 for ih ...
Considering guard ng with value 8 for ih ...
candidateGuards = map[jh:true ng:true]
Picking guard, jh

Considering guard g with value 9.8 for z ...
candidateGuards = map[g:true]
Picking guard, g

Considering guard p with value 6.4 for ay ...
candidateGuards = map[p:true]
Picking guard, p

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 125 public <reside> = (((sil [((m <any_Cx_r_m_p>) | (<any_Cx_r_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]) | (sil p (sil [((m <any_Cx_r_m_p>) | (<any_Cx_r_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]))) (([(<any_Cx_z_p_m_r> z)] | [(z <any_Cx_z_p_m_r>)]) (r | l | w | ((<any_Cx_z_p_m_r> z) | (z <any_Cx_z_p_m_r>)))) ((([(<any_Vx_jh_z_ih_noSlide> jh)] | [(jh <any_Vx_jh_z_ih_noSlide>)]) ([(<any_Cx_jh_z_z_r> jh)] | [(jh <any_Cx_jh_z_z_r>)])) (ih | ((<any_Vx_jh_z_ih_noSlide> jh) | (jh <any_Vx_jh_z_ih_noSlide>)))) (([(<any_Cx_g_jh_z> g)] | [(g <any_Cx_g_jh_z>)]) (z | ((<any_Cx_g_jh_z> g) | (g <any_Cx_g_jh_z>)))) ((([(<any_Vx_p_g_ay_noSlide> p)] | [(p <any_Vx_p_g_ay_noSlide>)]) ([(<any_Cx_p_g_d_z> p)] | [(p <any_Cx_p_g_d_z>)])) (ay | ((<any_Vx_p_g_ay_noSlide> p) | (p <any_Vx_p_g_ay_noSlide>)))) (([(<any_Cx_sh_p_d> sh)] | [(sh <any_Cx_sh_p_d>)]) (d | ((<any_Cx_sh_p_d> sh) | (sh <any_Cx_sh_p_d>)))) (([(<any_vowel_noSlide> dh)] | [(dh <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_dh> dh)] | [(dh <any_Cx_sh_d_dh>)]) sil))
Running scan for frate = 105
Considering guard z with value 1 for r ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard jh with value 8 for ih ...
Considering guard ng with value 8 for ih ...
candidateGuards = map[jh:true ng:true]
Picking guard, jh

Considering guard g with value 9.8 for z ...
candidateGuards = map[g:true]
Picking guard, g

Considering guard p with value 6.4 for ay ...
candidateGuards = map[p:true]
Picking guard, p

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 105 public <reside> = (((sil [((hh <any_Cx_r_hh_p>) | (<any_Cx_r_hh_p> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil p (sil [((hh <any_Cx_r_hh_p>) | (<any_Cx_r_hh_p> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_z_p_hh_r> z)] | [(z <any_Cx_z_p_hh_r>)]) (r | l | w | ((<any_Cx_z_p_hh_r> z) | (z <any_Cx_z_p_hh_r>)))) ((([(<any_Vx_jh_z_ih_noSlide> jh)] | [(jh <any_Vx_jh_z_ih_noSlide>)]) ([(<any_Cx_jh_z_z_r> jh)] | [(jh <any_Cx_jh_z_z_r>)])) (ih | ((<any_Vx_jh_z_ih_noSlide> jh) | (jh <any_Vx_jh_z_ih_noSlide>)))) (([(<any_Cx_g_jh_z> g)] | [(g <any_Cx_g_jh_z>)]) (z | ((<any_Cx_g_jh_z> g) | (g <any_Cx_g_jh_z>)))) ((([(<any_Vx_p_g_ay_noSlide> p)] | [(p <any_Vx_p_g_ay_noSlide>)]) ([(<any_Cx_p_g_d_z> p)] | [(p <any_Cx_p_g_d_z>)])) (ay | ((<any_Vx_p_g_ay_noSlide> p) | (p <any_Vx_p_g_ay_noSlide>)))) (([(<any_Cx_sh_p_d> sh)] | [(sh <any_Cx_sh_p_d>)]) (d | ((<any_Cx_sh_p_d> sh) | (sh <any_Cx_sh_p_d>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_g> g)] | [(g <any_Cx_sh_d_g>)]) sil))
Running scan for frate = 91
Considering guard z with value 1 for r ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard ng with value 8 for ih ...
Considering guard jh with value 8 for ih ...
candidateGuards = map[jh:true ng:true]
Picking guard, ng

Considering guard g with value 9.8 for z ...
candidateGuards = map[g:true]
Picking guard, g

Considering guard p with value 6.4 for ay ...
candidateGuards = map[p:true]
Picking guard, p

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 91 public <reside> = (((sil [((hh <any_Cx_r_hh_p>) | (<any_Cx_r_hh_p> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil p (sil [((hh <any_Cx_r_hh_p>) | (<any_Cx_r_hh_p> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_z_p_hh_r> z)] | [(z <any_Cx_z_p_hh_r>)]) (r | l | w | ((<any_Cx_z_p_hh_r> z) | (z <any_Cx_z_p_hh_r>)))) ((([(<any_Vx_ng_z_ih_noSlide> ng)] | [(ng <any_Vx_ng_z_ih_noSlide>)]) ([(<any_Cx_ng_z_z_r> ng)] | [(ng <any_Cx_ng_z_z_r>)])) (ih | ((<any_Vx_ng_z_ih_noSlide> ng) | (ng <any_Vx_ng_z_ih_noSlide>)))) (([(<any_Cx_g_ng_z> g)] | [(g <any_Cx_g_ng_z>)]) (z | ((<any_Cx_g_ng_z> g) | (g <any_Cx_g_ng_z>)))) ((([(<any_Vx_p_g_ay_noSlide> p)] | [(p <any_Vx_p_g_ay_noSlide>)]) ([(<any_Cx_p_g_d_z> p)] | [(p <any_Cx_p_g_d_z>)])) (ay | ((<any_Vx_p_g_ay_noSlide> p) | (p <any_Vx_p_g_ay_noSlide>)))) (([(<any_Cx_sh_p_d> sh)] | [(sh <any_Cx_sh_p_d>)]) (d | ((<any_Cx_sh_p_d> sh) | (sh <any_Cx_sh_p_d>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_b> b)] | [(b <any_Cx_sh_d_b>)]) sil))
Running scan for frate = 80
Considering guard z with value 1 for r ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard ng with value 8 for ih ...
Considering guard jh with value 8 for ih ...
candidateGuards = map[jh:true ng:true]
Picking guard, ng

Considering guard g with value 9.8 for z ...
candidateGuards = map[g:true]
Picking guard, g

Considering guard p with value 6.4 for ay ...
candidateGuards = map[p:true]
Picking guard, p

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 80 public <reside> = (((sil [((hh <any_Cx_r_hh_p>) | (<any_Cx_r_hh_p> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil p (sil [((hh <any_Cx_r_hh_p>) | (<any_Cx_r_hh_p> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_z_p_hh_r> z)] | [(z <any_Cx_z_p_hh_r>)]) (r | l | w | ((<any_Cx_z_p_hh_r> z) | (z <any_Cx_z_p_hh_r>)))) ((([(<any_Vx_ng_z_ih_noSlide> ng)] | [(ng <any_Vx_ng_z_ih_noSlide>)]) ([(<any_Cx_ng_z_z_r> ng)] | [(ng <any_Cx_ng_z_z_r>)])) (ih | ((<any_Vx_ng_z_ih_noSlide> ng) | (ng <any_Vx_ng_z_ih_noSlide>)))) (([(<any_Cx_g_ng_z> g)] | [(g <any_Cx_g_ng_z>)]) (z | ((<any_Cx_g_ng_z> g) | (g <any_Cx_g_ng_z>)))) ((([(<any_Vx_p_g_ay_noSlide> p)] | [(p <any_Vx_p_g_ay_noSlide>)]) ([(<any_Cx_p_g_d_z> p)] | [(p <any_Cx_p_g_d_z>)])) (ay | ((<any_Vx_p_g_ay_noSlide> p) | (p <any_Vx_p_g_ay_noSlide>)))) (([(<any_Cx_sh_p_d> sh)] | [(sh <any_Cx_sh_p_d>)]) (d | ((<any_Cx_sh_p_d> sh) | (sh <any_Cx_sh_p_d>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_v> v)] | [(v <any_Cx_sh_d_v>)]) sil))
Running scan for frate = 72
Considering guard z with value 1 for r ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard jh with value 8 for ih ...
Considering guard ng with value 8 for ih ...
candidateGuards = map[jh:true ng:true]
Picking guard, jh

Considering guard g with value 9.8 for z ...
candidateGuards = map[g:true]
Picking guard, g

Considering guard p with value 6.4 for ay ...
candidateGuards = map[p:true]
Picking guard, p

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 72 public <reside> = (((sil [((n <any_Cx_r_n_p>) | (<any_Cx_r_n_p> n))] [((n <any_vowel_noSlide>) | (<any_vowel_noSlide> n))]) | (sil p (sil [((n <any_Cx_r_n_p>) | (<any_Cx_r_n_p> n))] [((n <any_vowel_noSlide>) | (<any_vowel_noSlide> n))]))) (([(<any_Cx_z_p_n_r> z)] | [(z <any_Cx_z_p_n_r>)]) (r | l | w | ((<any_Cx_z_p_n_r> z) | (z <any_Cx_z_p_n_r>)))) ((([(<any_Vx_jh_z_ih_noSlide> jh)] | [(jh <any_Vx_jh_z_ih_noSlide>)]) ([(<any_Cx_jh_z_z_r> jh)] | [(jh <any_Cx_jh_z_z_r>)])) (ih | ((<any_Vx_jh_z_ih_noSlide> jh) | (jh <any_Vx_jh_z_ih_noSlide>)))) (([(<any_Cx_g_jh_z> g)] | [(g <any_Cx_g_jh_z>)]) (z | ((<any_Cx_g_jh_z> g) | (g <any_Cx_g_jh_z>)))) ((([(<any_Vx_p_g_ay_noSlide> p)] | [(p <any_Vx_p_g_ay_noSlide>)]) ([(<any_Cx_p_g_d_z> p)] | [(p <any_Cx_p_g_d_z>)])) (ay | ((<any_Vx_p_g_ay_noSlide> p) | (p <any_Vx_p_g_ay_noSlide>)))) (([(<any_Cx_sh_p_d> sh)] | [(sh <any_Cx_sh_p_d>)]) (d | ((<any_Cx_sh_p_d> sh) | (sh <any_Cx_sh_p_d>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_v> v)] | [(v <any_Cx_sh_d_v>)]) sil))

results =
{72 [{sil 0 10} {r 11 25} {ih 26 29} {z 30 36} {ay 37 65} {d 66 74} {sil 75 91}]}
{80 [{sil 0 12} {r 13 28} {ih 29 33} {z 34 41} {ay 42 73} {d 74 82} {sil 83 99}]}
{91 [{sil 0 14} {r 15 33} {ih 34 37} {z 38 46} {oh 47 55} {p 56 58} {ay 59 83} {d 84 95} {sil 96 127}]}
{105 [{sil 0 20} {r 21 38} {ih 39 43} {z 44 52} {p 53 55} {oh 56 66} {ay 67 97} {d 98 111} {sil 112 147}]}
{125 [{sil 0 22} {r 23 44} {ih 45 50} {z 51 61} {ay 62 114} {d 115 129} {sil 130 173}]}

normalised results =
{72 [{sil 0 10} {r 15 35} {ih 36 40} {z 42 50} {ay 51 90} {d 92 103} {sil 104 126}]}
{80 [{sil 0 12} {r 16 35} {ih 36 41} {z 43 51} {ay 53 91} {d 93 103} {sil 104 124}]}
{91 [{sil 0 14} {r 16 36} {ih 37 41} {z 42 51} {oh 52 60} {p 62 62} {ay 65 91} {d 92 104} {sil 105 140}]}
{105 [{sil 0 20} {r 20 36} {ih 37 41} {z 42 50} {p 50 50} {oh 53 63} {ay 64 92} {d 93 106} {sil 107 140}]}
{125 [{sil 0 22} {r 18 35} {ih 36 40} {z 41 49} {ay 50 91} {d 92 103} {sil 104 138}]}

ruleAligned = [{{r 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ih 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{z 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{ay 0} [{0 4} {1 4} {2 6} {3 6} {4 4}]} {{d 0} [{0 5} {1 5} {2 7} {3 7} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {r 15 35} {ih 36 40} {z 42 50} {ay 51 90} {d 92 103} {sil 104 104}]}
{80 [{sil 0 0} {r 16 35} {ih 36 41} {z 43 51} {ay 53 91} {d 93 103} {sil 104 104}]}
{91 [{sil 0 0} {r 16 36} {ih 37 41} {z 42 51} {oh 52 60} {p 62 62} {ay 65 91} {d 92 104} {sil 105 105}]}
{105 [{sil 0 0} {r 20 36} {ih 37 41} {z 42 50} {p 50 50} {oh 53 63} {ay 64 92} {d 93 106} {sil 107 107}]}
{125 [{sil 0 0} {r 18 35} {ih 36 40} {z 41 49} {ay 50 91} {d 92 103} {sil 104 104}]}

timeAligned = [{{r 16 35} [{0 1} {1 1} {2 1} {4 1} {3 1}]} {{ih 36 41} [{0 2} {1 2} {4 2} {2 2} {3 2}]} {{z 42 50} [{0 3} {2 3} {3 3} {4 3} {1 3}]} {{ay 53 91} [{0 4} {1 4} {4 4} {3 6} {2 6}]} {{d 92 103} [{0 5} {2 7} {4 5} {1 5} {3 7}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 35
i, iTime, newITime, timeStartFrom = 2 1 2 40
i, iTime, newITime, timeStartFrom = 3 2 3 49
i, iTime, newITime, timeStartFrom = 4 3 4 90
combinedVerdict    = [{r 0} {ih 0} {z 0} {ay 0} {d 0}]
ruleAlignedVerdict = [{r 0} {ih 0} {z 0} {ay 0} {d 0}]

score->
+2 for r
+2 for ih
+2 for z
+2 for ay
+2 for d
score<-: 15
testPronounce r good ih good z good ay good d good
publish->
phonsToAlphas = [{[r] r} {[ih] e} {[z] s} {[ay] i} {[d] de}]
getVerdict<-:new {r [r] 0}
getVerdict<-:new {e [ih] 0}
getVerdict<-:new {s [z] 0}
getVerdict<-:new {i [ay] 0}
getVerdict<-:new {de [d] 0}
lettersVerdicts = [{r [r] 0} {e [ih] 0} {s [z] 0} {i [ay] 0} {de [d] 0}]
publish<-
{
  "word": "reside",
  "results": [
    {
      "letters": "r",
      "phonemes": "ɹ",
      "verdict": "good"
    },
    {
      "letters": "e",
      "phonemes": "ɪ",
      "verdict": "good"
    },
    {
      "letters": "s",
      "phonemes": "z",
      "verdict": "good"
    },
    {
      "letters": "i",
      "phonemes": "ɑɪ",
      "verdict": "good"
    },
    {
      "letters": "de",
      "phonemes": "d",
      "verdict": "good"
    }
  ],
  "err": null
}
