Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_88c35a9e-bbf2-4f76-b564-5ab2bc1ae507 audiofile /Users/test/go/src/Phonemes/audio_clips/cubes1_paul.wav word cubes dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  1.834



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.5800000000000001 0.9 1.48

 start3, duration3, end3 =  0.9 0.36 1.26

 Initial start, duration, end =  0.4800000000000001 0.9999999999999999 1.48

 Cut at: start, duration =  0.4800000000000001 1.334     guard_end =  1.814 

Running scan for frate = 125
Running scan for frate = 125
Considering guard zh with value 1 for k ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard z with value 1 for k ...
Considering guard zh with value 1 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard zh with value 2 for y ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for yuw ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for uw ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 5 for b ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 5 for b ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard hh with value 1 for z ...
candidateGuards = map[hh:true]
Picking guard, hh

Considering guard hh with value 1 for z ...
candidateGuards = map[hh:true]
Picking guard, hh

frate, target rule = 125 public <cubes> = (((sil [((ch <any_Cx_k_ch_b>) | (<any_Cx_k_ch_b> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil b (sil [((ch <any_Cx_k_ch_b>) | (<any_Cx_k_ch_b> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_z_b_ch_k_yuw> z)] | [(z <any_Cx_z_b_ch_k_yuw>)]) (k | d | ((<any_Cx_z_b_ch_k_yuw> z) | (z <any_Cx_z_b_ch_k_yuw>)))) (([(<any_Cx_zh_z_yuw_b_k> zh)] | [(zh <any_Cx_zh_z_yuw_b_k>)]) (yuw | ((<any_Cx_zh_z_yuw_b> zh) | (zh <any_Cx_zh_z_yuw_b>)))) (([(<any_Cx_ch_zh_b_yuw> ch)] | [(ch <any_Cx_ch_zh_b_yuw>)]) (b | ((<any_Cx_ch_zh_b_z_yuw> ch) | (ch <any_Cx_ch_zh_b_z_yuw>)))) (([(<any_Cx_hh_ch_z_b> hh)] | [(hh <any_Cx_hh_ch_z_b>)]) (z | ((<any_Cx_hh_ch_z_b> hh) | (hh <any_Cx_hh_ch_z_b>)))) (([(<any_vowel_noSlide> s)] | [(s <any_vowel_noSlide>)]) ([(<any_Cx_hh_z_s> s)] | [(s <any_Cx_hh_z_s>)]) sil))
frate, target rule = 125 public <cubes> = (((sil [((p <any_Cx_k_p_b>) | (<any_Cx_k_p_b> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]) | (sil b (sil [((p <any_Cx_k_p_b>) | (<any_Cx_k_p_b> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]))) (([(<any_Cx_zh_b_p_k> zh)] | [(zh <any_Cx_zh_b_p_k>)]) (k | d | ((<any_Cx_zh_b_p_k> zh) | (zh <any_Cx_zh_b_p_k>)))) ((([(<any_Vx_zh_zh_y_uw_noSlide> zh)] | [(zh <any_Vx_zh_zh_y_uw_noSlide>)]) ([(<any_Cx_zh_zh_k> zh)] | [(zh <any_Cx_zh_zh_k>)])) (y | ((<any_Vx_zh_zh_y_uw_noSlide> zh) | (zh <any_Vx_zh_zh_y_uw_noSlide>)))) ((([(<any_Vx_zh_zh_uw_y_noSlide> zh)] | [(zh <any_Vx_zh_zh_uw_y_noSlide>)]) ([(<any_Cx_zh_zh_b> zh)] | [(zh <any_Cx_zh_zh_b>)])) (uw | ((<any_Vx_zh_zh_uw_y_noSlide> zh) | (zh <any_Vx_zh_zh_uw_y_noSlide>)))) (([(<any_Cx_ch_zh_b> ch)] | [(ch <any_Cx_ch_zh_b>)]) (b | ((<any_Cx_ch_zh_b_z> ch) | (ch <any_Cx_ch_zh_b_z>)))) (([(<any_Cx_hh_ch_z_b> hh)] | [(hh <any_Cx_hh_ch_z_b>)]) (z | ((<any_Cx_hh_ch_z_b> hh) | (hh <any_Cx_hh_ch_z_b>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_hh_z_b> b)] | [(b <any_Cx_hh_z_b>)]) sil))
Running scan for frate = 105
Running scan for frate = 105
Considering guard z with value 1 for k ...
Considering guard zh with value 1 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard zh with value 1 for k ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for yuw ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for y ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 5 for b ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard zh with value 2 for uw ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard hh with value 1 for z ...
candidateGuards = map[hh:true]
Picking guard, hh

Considering guard ch with value 5 for b ...
candidateGuards = map[ch:true]
Picking guard, ch

frate, target rule = 105 public <cubes> = (((sil [((g <any_Cx_k_g_b>) | (<any_Cx_k_g_b> g))] [((g <any_vowel_noSlide>) | (<any_vowel_noSlide> g))]) | (sil b (sil [((g <any_Cx_k_g_b>) | (<any_Cx_k_g_b> g))] [((g <any_vowel_noSlide>) | (<any_vowel_noSlide> g))]))) (([(<any_Cx_z_b_g_k_yuw> z)] | [(z <any_Cx_z_b_g_k_yuw>)]) (k | d | ((<any_Cx_z_b_g_k_yuw> z) | (z <any_Cx_z_b_g_k_yuw>)))) (([(<any_Cx_zh_z_yuw_b_k> zh)] | [(zh <any_Cx_zh_z_yuw_b_k>)]) (yuw | ((<any_Cx_zh_z_yuw_b> zh) | (zh <any_Cx_zh_z_yuw_b>)))) (([(<any_Cx_ch_zh_b_yuw> ch)] | [(ch <any_Cx_ch_zh_b_yuw>)]) (b | ((<any_Cx_ch_zh_b_z_yuw> ch) | (ch <any_Cx_ch_zh_b_z_yuw>)))) (([(<any_Cx_hh_ch_z_b> hh)] | [(hh <any_Cx_hh_ch_z_b>)]) (z | ((<any_Cx_hh_ch_z_b> hh) | (hh <any_Cx_hh_ch_z_b>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_hh_z_thr> thr)] | [(thr <any_Cx_hh_z_thr>)]) sil))
Considering guard hh with value 1 for z ...
candidateGuards = map[hh:true]
Picking guard, hh

Running scan for frate = 91
frate, target rule = 105 public <cubes> = (((sil [((g <any_Cx_k_g_b>) | (<any_Cx_k_g_b> g))] [((g <any_vowel_noSlide>) | (<any_vowel_noSlide> g))]) | (sil b (sil [((g <any_Cx_k_g_b>) | (<any_Cx_k_g_b> g))] [((g <any_vowel_noSlide>) | (<any_vowel_noSlide> g))]))) (([(<any_Cx_zh_b_g_k> zh)] | [(zh <any_Cx_zh_b_g_k>)]) (k | d | ((<any_Cx_zh_b_g_k> zh) | (zh <any_Cx_zh_b_g_k>)))) ((([(<any_Vx_zh_zh_y_uw_noSlide> zh)] | [(zh <any_Vx_zh_zh_y_uw_noSlide>)]) ([(<any_Cx_zh_zh_k> zh)] | [(zh <any_Cx_zh_zh_k>)])) (y | ((<any_Vx_zh_zh_y_uw_noSlide> zh) | (zh <any_Vx_zh_zh_y_uw_noSlide>)))) ((([(<any_Vx_zh_zh_uw_y_noSlide> zh)] | [(zh <any_Vx_zh_zh_uw_y_noSlide>)]) ([(<any_Cx_zh_zh_b> zh)] | [(zh <any_Cx_zh_zh_b>)])) (uw | ((<any_Vx_zh_zh_uw_y_noSlide> zh) | (zh <any_Vx_zh_zh_uw_y_noSlide>)))) (([(<any_Cx_ch_zh_b> ch)] | [(ch <any_Cx_ch_zh_b>)]) (b | ((<any_Cx_ch_zh_b_z> ch) | (ch <any_Cx_ch_zh_b_z>)))) (([(<any_Cx_hh_ch_z_b> hh)] | [(hh <any_Cx_hh_ch_z_b>)]) (z | ((<any_Cx_hh_ch_z_b> hh) | (hh <any_Cx_hh_ch_z_b>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_hh_z_thr> thr)] | [(thr <any_Cx_hh_z_thr>)]) sil))
Considering guard zh with value 1 for k ...
Considering guard z with value 1 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for yuw ...
candidateGuards = map[zh:true]
Picking guard, zh

Running scan for frate = 91
Considering guard ch with value 5 for b ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard zh with value 1 for k ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard hh with value 1 for z ...
candidateGuards = map[hh:true]
Picking guard, hh

Considering guard zh with value 2 for y ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 91 public <cubes> = (((sil [((g <any_Cx_k_g_b>) | (<any_Cx_k_g_b> g))] [((g <any_vowel_noSlide>) | (<any_vowel_noSlide> g))]) | (sil b (sil [((g <any_Cx_k_g_b>) | (<any_Cx_k_g_b> g))] [((g <any_vowel_noSlide>) | (<any_vowel_noSlide> g))]))) (([(<any_Cx_zh_b_g_k_yuw> zh)] | [(zh <any_Cx_zh_b_g_k_yuw>)]) (k | d | ((<any_Cx_zh_b_g_k_yuw> zh) | (zh <any_Cx_zh_b_g_k_yuw>)))) (([(<any_Cx_zh_zh_yuw_b_k> zh)] | [(zh <any_Cx_zh_zh_yuw_b_k>)]) (yuw | ((<any_Cx_zh_zh_yuw_b> zh) | (zh <any_Cx_zh_zh_yuw_b>)))) (([(<any_Cx_ch_zh_b_yuw> ch)] | [(ch <any_Cx_ch_zh_b_yuw>)]) (b | ((<any_Cx_ch_zh_b_z_yuw> ch) | (ch <any_Cx_ch_zh_b_z_yuw>)))) (([(<any_Cx_hh_ch_z_b> hh)] | [(hh <any_Cx_hh_ch_z_b>)]) (z | ((<any_Cx_hh_ch_z_b> hh) | (hh <any_Cx_hh_ch_z_b>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_hh_z_v> v)] | [(v <any_Cx_hh_z_v>)]) sil))
Considering guard zh with value 2 for uw ...
candidateGuards = map[zh:true]
Picking guard, zh

Running scan for frate = 80
Considering guard ch with value 5 for b ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard hh with value 1 for z ...
candidateGuards = map[hh:true]
Picking guard, hh

Considering guard z with value 1 for k ...
Considering guard zh with value 1 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for yuw ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 91 public <cubes> = (((sil [((d <any_Cx_k_d_b>) | (<any_Cx_k_d_b> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil b (sil [((d <any_Cx_k_d_b>) | (<any_Cx_k_d_b> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_zh_b_d_k> zh)] | [(zh <any_Cx_zh_b_d_k>)]) (k | d | ((<any_Cx_zh_b_d_k> zh) | (zh <any_Cx_zh_b_d_k>)))) ((([(<any_Vx_zh_zh_y_uw_noSlide> zh)] | [(zh <any_Vx_zh_zh_y_uw_noSlide>)]) ([(<any_Cx_zh_zh_k> zh)] | [(zh <any_Cx_zh_zh_k>)])) (y | ((<any_Vx_zh_zh_y_uw_noSlide> zh) | (zh <any_Vx_zh_zh_y_uw_noSlide>)))) ((([(<any_Vx_zh_zh_uw_y_noSlide> zh)] | [(zh <any_Vx_zh_zh_uw_y_noSlide>)]) ([(<any_Cx_zh_zh_b> zh)] | [(zh <any_Cx_zh_zh_b>)])) (uw | ((<any_Vx_zh_zh_uw_y_noSlide> zh) | (zh <any_Vx_zh_zh_uw_y_noSlide>)))) (([(<any_Cx_ch_zh_b> ch)] | [(ch <any_Cx_ch_zh_b>)]) (b | ((<any_Cx_ch_zh_b_z> ch) | (ch <any_Cx_ch_zh_b_z>)))) (([(<any_Cx_hh_ch_z_b> hh)] | [(hh <any_Cx_hh_ch_z_b>)]) (z | ((<any_Cx_hh_ch_z_b> hh) | (hh <any_Cx_hh_ch_z_b>)))) (([(<any_vowel_noSlide> s)] | [(s <any_vowel_noSlide>)]) ([(<any_Cx_hh_z_s> s)] | [(s <any_Cx_hh_z_s>)]) sil))
Considering guard ch with value 5 for b ...
candidateGuards = map[ch:true]
Picking guard, ch

Running scan for frate = 80
Considering guard hh with value 1 for z ...
candidateGuards = map[hh:true]
Picking guard, hh

Considering guard zh with value 1 for k ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 80 public <cubes> = (((sil [((t <any_Cx_k_t_b>) | (<any_Cx_k_t_b> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil b (sil [((t <any_Cx_k_t_b>) | (<any_Cx_k_t_b> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_zh_b_t_k_yuw> zh)] | [(zh <any_Cx_zh_b_t_k_yuw>)]) (k | d | ((<any_Cx_zh_b_t_k_yuw> zh) | (zh <any_Cx_zh_b_t_k_yuw>)))) (([(<any_Cx_zh_zh_yuw_b_k> zh)] | [(zh <any_Cx_zh_zh_yuw_b_k>)]) (yuw | ((<any_Cx_zh_zh_yuw_b> zh) | (zh <any_Cx_zh_zh_yuw_b>)))) (([(<any_Cx_ch_zh_b_yuw> ch)] | [(ch <any_Cx_ch_zh_b_yuw>)]) (b | ((<any_Cx_ch_zh_b_z_yuw> ch) | (ch <any_Cx_ch_zh_b_z_yuw>)))) (([(<any_Cx_hh_ch_z_b> hh)] | [(hh <any_Cx_hh_ch_z_b>)]) (z | ((<any_Cx_hh_ch_z_b> hh) | (hh <any_Cx_hh_ch_z_b>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_hh_z_v> v)] | [(v <any_Cx_hh_z_v>)]) sil))
Considering guard zh with value 2 for y ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for uw ...
candidateGuards = map[zh:true]
Picking guard, zh

Running scan for frate = 72
Considering guard ch with value 5 for b ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard hh with value 1 for z ...
candidateGuards = map[hh:true]
Picking guard, hh

Considering guard zh with value 1 for k ...
Considering guard z with value 1 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

frate, target rule = 80 public <cubes> = (((sil [((g <any_Cx_k_g_b>) | (<any_Cx_k_g_b> g))] [((g <any_vowel_noSlide>) | (<any_vowel_noSlide> g))]) | (sil b (sil [((g <any_Cx_k_g_b>) | (<any_Cx_k_g_b> g))] [((g <any_vowel_noSlide>) | (<any_vowel_noSlide> g))]))) (([(<any_Cx_zh_b_g_k> zh)] | [(zh <any_Cx_zh_b_g_k>)]) (k | d | ((<any_Cx_zh_b_g_k> zh) | (zh <any_Cx_zh_b_g_k>)))) ((([(<any_Vx_zh_zh_y_uw_noSlide> zh)] | [(zh <any_Vx_zh_zh_y_uw_noSlide>)]) ([(<any_Cx_zh_zh_k> zh)] | [(zh <any_Cx_zh_zh_k>)])) (y | ((<any_Vx_zh_zh_y_uw_noSlide> zh) | (zh <any_Vx_zh_zh_y_uw_noSlide>)))) ((([(<any_Vx_zh_zh_uw_y_noSlide> zh)] | [(zh <any_Vx_zh_zh_uw_y_noSlide>)]) ([(<any_Cx_zh_zh_b> zh)] | [(zh <any_Cx_zh_zh_b>)])) (uw | ((<any_Vx_zh_zh_uw_y_noSlide> zh) | (zh <any_Vx_zh_zh_uw_y_noSlide>)))) (([(<any_Cx_ch_zh_b> ch)] | [(ch <any_Cx_ch_zh_b>)]) (b | ((<any_Cx_ch_zh_b_z> ch) | (ch <any_Cx_ch_zh_b_z>)))) (([(<any_Cx_hh_ch_z_b> hh)] | [(hh <any_Cx_hh_ch_z_b>)]) (z | ((<any_Cx_hh_ch_z_b> hh) | (hh <any_Cx_hh_ch_z_b>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_hh_z_b> b)] | [(b <any_Cx_hh_z_b>)]) sil))
Considering guard zh with value 2 for yuw ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 5 for b ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard hh with value 1 for z ...
candidateGuards = map[hh:true]
Picking guard, hh

Running scan for frate = 72
Considering guard zh with value 1 for k ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for y ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 72 public <cubes> = (((sil [((d <any_Cx_k_d_b>) | (<any_Cx_k_d_b> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil b (sil [((d <any_Cx_k_d_b>) | (<any_Cx_k_d_b> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_zh_b_d_k_yuw> zh)] | [(zh <any_Cx_zh_b_d_k_yuw>)]) (k | d | ((<any_Cx_zh_b_d_k_yuw> zh) | (zh <any_Cx_zh_b_d_k_yuw>)))) (([(<any_Cx_zh_zh_yuw_b_k> zh)] | [(zh <any_Cx_zh_zh_yuw_b_k>)]) (yuw | ((<any_Cx_zh_zh_yuw_b> zh) | (zh <any_Cx_zh_zh_yuw_b>)))) (([(<any_Cx_ch_zh_b_yuw> ch)] | [(ch <any_Cx_ch_zh_b_yuw>)]) (b | ((<any_Cx_ch_zh_b_z_yuw> ch) | (ch <any_Cx_ch_zh_b_z_yuw>)))) (([(<any_Cx_hh_ch_z_b> hh)] | [(hh <any_Cx_hh_ch_z_b>)]) (z | ((<any_Cx_hh_ch_z_b> hh) | (hh <any_Cx_hh_ch_z_b>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_hh_z_b> b)] | [(b <any_Cx_hh_z_b>)]) sil))
Considering guard zh with value 2 for uw ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 5 for b ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard hh with value 1 for z ...
candidateGuards = map[hh:true]
Picking guard, hh

frate, target rule = 72 public <cubes> = (((sil [((g <any_Cx_k_g_b>) | (<any_Cx_k_g_b> g))] [((g <any_vowel_noSlide>) | (<any_vowel_noSlide> g))]) | (sil b (sil [((g <any_Cx_k_g_b>) | (<any_Cx_k_g_b> g))] [((g <any_vowel_noSlide>) | (<any_vowel_noSlide> g))]))) (([(<any_Cx_zh_b_g_k> zh)] | [(zh <any_Cx_zh_b_g_k>)]) (k | d | ((<any_Cx_zh_b_g_k> zh) | (zh <any_Cx_zh_b_g_k>)))) ((([(<any_Vx_zh_zh_y_uw_noSlide> zh)] | [(zh <any_Vx_zh_zh_y_uw_noSlide>)]) ([(<any_Cx_zh_zh_k> zh)] | [(zh <any_Cx_zh_zh_k>)])) (y | ((<any_Vx_zh_zh_y_uw_noSlide> zh) | (zh <any_Vx_zh_zh_y_uw_noSlide>)))) ((([(<any_Vx_zh_zh_uw_y_noSlide> zh)] | [(zh <any_Vx_zh_zh_uw_y_noSlide>)]) ([(<any_Cx_zh_zh_b> zh)] | [(zh <any_Cx_zh_zh_b>)])) (uw | ((<any_Vx_zh_zh_uw_y_noSlide> zh) | (zh <any_Vx_zh_zh_uw_y_noSlide>)))) (([(<any_Cx_ch_zh_b> ch)] | [(ch <any_Cx_ch_zh_b>)]) (b | ((<any_Cx_ch_zh_b_z> ch) | (ch <any_Cx_ch_zh_b_z>)))) (([(<any_Cx_hh_ch_z_b> hh)] | [(hh <any_Cx_hh_ch_z_b>)]) (z | ((<any_Cx_hh_ch_z_b> hh) | (hh <any_Cx_hh_ch_z_b>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_hh_z_thr> thr)] | [(thr <any_Cx_hh_z_thr>)]) sil))

results =
{72 [{sil 0 12} {k 13 21} {y 22 27} {uw 28 45} {b 46 50} {z 51 62} {sil 63 91}]}
{80 [{sil 0 13} {k 14 24} {y 25 30} {uw 31 51} {b 52 56} {z 57 69} {sil 70 99}]}
{91 [{sil 0 15} {k 16 28} {y 29 36} {uw 37 59} {b 60 64} {z 65 79} {sil 80 120}]}
{105 [{sil 0 18} {k 19 33} {y 34 43} {uw 44 70} {b 71 74} {z 75 91} {sil 92 139}]}
{125 [{sil 0 21} {k 22 37} {y 38 49} {uw 50 80} {b 81 86} {z 87 106} {sil 107 163}]}

normalised results =
{72 [{sil 0 12} {k 18 29} {y 31 38} {uw 39 63} {b 64 69} {z 71 86} {sil 88 126}]}
{80 [{sil 0 13} {k 18 30} {y 31 38} {uw 39 64} {b 65 70} {z 71 86} {sil 88 124}]}
{91 [{sil 0 15} {k 18 31} {y 32 40} {uw 41 65} {b 66 70} {z 71 87} {sil 88 132}]}
{105 [{sil 0 18} {k 18 31} {y 32 41} {uw 42 67} {b 68 70} {z 71 87} {sil 88 132}]}
{125 [{sil 0 21} {k 18 30} {y 30 39} {uw 40 64} {b 65 69} {z 70 85} {sil 86 130}]}

ruleAligned = [{{k 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{y 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{uw 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{b 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{z 0} [{0 5} {1 5} {2 5} {3 5} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {k 18 29} {y 31 38} {uw 39 63} {b 64 69} {z 71 86} {sil 88 88}]}
{80 [{sil 0 0} {k 18 30} {y 31 38} {uw 39 64} {b 65 70} {z 71 86} {sil 88 88}]}
{91 [{sil 0 0} {k 18 31} {y 32 40} {uw 41 65} {b 66 70} {z 71 87} {sil 88 88}]}
{105 [{sil 0 0} {k 18 31} {y 32 41} {uw 42 67} {b 68 70} {z 71 87} {sil 88 88}]}
{125 [{sil 0 0} {k 18 30} {y 30 39} {uw 40 64} {b 65 69} {z 70 85} {sil 86 86}]}

timeAligned = [{{k 18 30} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{y 31 39} [{0 2} {1 2} {4 2} {2 2} {3 2}]} {{uw 40 64} [{0 3} {1 3} {4 3} {2 3} {3 3}]} {{b 65 70} [{0 4} {1 4} {4 4} {2 4} {3 4}]} {{z 71 86} [{0 5} {1 5} {2 5} {3 5} {4 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 29
i, iTime, newITime, timeStartFrom = 2 1 2 38
i, iTime, newITime, timeStartFrom = 3 2 3 63
i, iTime, newITime, timeStartFrom = 4 3 4 69
combinedVerdict    = [{k 0} {y 0} {uw 0} {b 0} {z 0}]
ruleAlignedVerdict = [{k 0} {y 0} {uw 0} {b 0} {z 0}]

score->
+2 for k
+2 for y
+2 for uw
+2 for b
+2 for z
score<-: 15

results =
{72 [{sil 0 12} {k 13 21} {yuw 22 43} {b 44 50} {z 51 62} {sil 63 91}]}
{80 [{sil 0 13} {k 14 24} {yuw 25 51} {b 52 56} {z 57 69} {sil 70 99}]}
{91 [{sil 0 15} {k 16 28} {yuw 29 59} {b 60 64} {z 65 79} {sil 80 120}]}
{105 [{sil 0 18} {k 19 32} {yuw 33 70} {b 71 74} {z 75 91} {sil 92 139}]}
{125 [{sil 0 21} {k 22 37} {yuw 38 80} {b 81 86} {z 87 106} {sil 107 163}]}

normalised results =
{72 [{sil 0 12} {k 18 29} {yuw 31 60} {b 61 69} {z 71 86} {sil 88 126}]}
{80 [{sil 0 13} {k 18 30} {yuw 31 64} {b 65 70} {z 71 86} {sil 88 124}]}
{91 [{sil 0 15} {k 18 31} {yuw 32 65} {b 66 70} {z 71 87} {sil 88 132}]}
{105 [{sil 0 18} {k 18 30} {yuw 31 67} {b 68 70} {z 71 87} {sil 88 132}]}
{125 [{sil 0 21} {k 18 30} {yuw 30 64} {b 65 69} {z 70 85} {sil 86 130}]}

ruleAligned = [{{k 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{yuw 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{b 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{z 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {k 18 29} {yuw 31 60} {b 61 69} {z 71 86} {sil 88 88}]}
{80 [{sil 0 0} {k 18 30} {yuw 31 64} {b 65 70} {z 71 86} {sil 88 88}]}
{91 [{sil 0 0} {k 18 31} {yuw 32 65} {b 66 70} {z 71 87} {sil 88 88}]}
{105 [{sil 0 0} {k 18 30} {yuw 31 67} {b 68 70} {z 71 87} {sil 88 88}]}
{125 [{sil 0 0} {k 18 30} {yuw 30 64} {b 65 69} {z 70 85} {sil 86 86}]}

timeAligned = [{{k 18 30} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{yuw 31 64} [{0 2} {1 2} {3 2} {4 2} {2 2}]} {{b 65 70} [{0 3} {1 3} {4 3} {2 3} {3 3}]} {{z 71 86} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 29
i, iTime, newITime, timeStartFrom = 2 1 2 60
i, iTime, newITime, timeStartFrom = 3 2 3 69
combinedVerdict    = [{k 0} {yuw 0} {b 0} {z 0}]
ruleAlignedVerdict = [{k 0} {yuw 0} {b 0} {z 0}]

score->
+2 for k
+2 for yuw
+2 for b
+2 for z
score<-: 13
testPronounce k good y good uw good b good z good
publish->
phonsToAlphas = [{[k] c} {[y uw] u} {[b] be} {[z] s}]
getVerdict<-:new {c [k] 0}
getVerdict<-:new {be [b] 0}
getVerdict<-:new {s [z] 0}
lettersVerdicts = [{c [k] 0} {u [y uw] 0} {be [b] 0} {s [z] 0}]
publish<-
{
  "word": "cubes",
  "results": [
    {
      "letters": "c",
      "phonemes": "k",
      "verdict": "good"
    },
    {
      "letters": "u",
      "phonemes": "j u",
      "verdict": "good"
    },
    {
      "letters": "be",
      "phonemes": "b",
      "verdict": "good"
    },
    {
      "letters": "s",
      "phonemes": "z",
      "verdict": "good"
    }
  ],
  "err": null
}
