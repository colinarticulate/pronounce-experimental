Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_bd5e56ed-b30b-4864-a1bf-31879bd69e37 audiofile /Users/test/go/src/Phonemes/audio_clips/providence1_paul.wav word providence dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  2.135813



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.18000000000000002 1.9400000000000002 2.12

 start3, duration3, end3 =  0.52 0.86 1.38

 Initial start, duration, end =  0 2.12 2.12

 Cut at: start, duration =  0 2.115813     guard_end =  2.115813 

Running scan for frate = 125
Running scan for frate = 125
Running scan for frate = 125
Running scan for frate = 125
Considering guard ng with value 1 for p ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 1 for p ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 1 for pr ...
Considering guard y with value 1 for pr ...
Considering guard z with value 1 for pr ...
candidateGuards = map[ng:true y:true z:true]
Picking guard, z

Considering guard ng with value 1 for pr ...
Considering guard z with value 1 for pr ...
Considering guard y with value 1 for pr ...
candidateGuards = map[ng:true y:true z:true]
Picking guard, ng

Considering guard ng with value 2 for r ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard zh with value 4 for oh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 4 for oh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ng with value 2 for r ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard zh with value 4 for v ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 4 for oh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 4 for v ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 4 for oh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 8 for ih ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 8 for ih ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 4 for v ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 8 for ih ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 6 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard w with value 7.199999999999999 for axn ...
candidateGuards = map[w:true]
Picking guard, w

Considering guard zh with value 4 for v ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard b with value 3.4000000000000004 for s ...
candidateGuards = map[b:true]
Picking guard, b

Considering guard y with value 4.800000000000001 for n ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard zh with value 8 for ih ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 6 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard b with value 3.4000000000000004 for s ...
candidateGuards = map[b:true]
Picking guard, b

Considering guard y with value 4.800000000000001 for n ...
candidateGuards = map[y:true]
Picking guard, y

frate, target rule = 125 public <providence> = (((sil [((z <any_Cx_pr_z_p>) | (<any_Cx_pr_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_pr_z_p>) | (<any_Cx_pr_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_z_p_z_pr_oh> z)] | [(z <any_Cx_z_p_z_pr_oh>)]) (pr | ((<any_Cx_z_p_z_pr_oh> z) | (z <any_Cx_z_p_z_pr_oh>)))) (([(<any_Cx_zh_z_oh_v_pr> zh)] | [(zh <any_Cx_zh_z_oh_v_pr>)]) (oh | ((<any_Cx_zh_z_oh_v> zh) | (zh <any_Cx_zh_z_oh_v>)))) (([(<any_Cx_zh_zh_v_oh> zh)] | [(zh <any_Cx_zh_zh_v_oh>)]) (v | ((<any_Cx_zh_zh_v_oh> zh) | (zh <any_Cx_zh_zh_v_oh>)))) ((([(<any_Vx_zh_zh_ih_noSlide> zh)] | [(zh <any_Vx_zh_zh_ih_noSlide>)]) ([(<any_Cx_zh_zh_d_v> zh)] | [(zh <any_Cx_zh_zh_d_v>)])) (ih | ((<any_Vx_zh_zh_ih_noSlide> zh) | (zh <any_Vx_zh_zh_ih_noSlide>)))) (([(<any_Cx_sh_zh_d_axn> sh)] | [(sh <any_Cx_sh_zh_d_axn>)]) (d | ((<any_Cx_sh_zh_d_axn> sh) | (sh <any_Cx_sh_zh_d_axn>)))) (([(<any_Cx_w_sh_axn_d> w)] | [(w <any_Cx_w_sh_axn_d>)]) (axn | ((<any_Cx_w_sh_axn_s_d> w) | (w <any_Cx_w_sh_axn_s_d>)))) (([(<any_Cx_b_w_s_axn> b)] | [(b <any_Cx_b_w_s_axn>)]) (s | ((<any_Cx_b_w_s_axn> b) | (b <any_Cx_b_w_s_axn>)))) (([(<any_vowel_noSlide> ch)] | [(ch <any_vowel_noSlide>)]) ([(<any_Cx_b_s_ch> ch)] | [(ch <any_Cx_b_s_ch>)]) sil))
Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard b with value 3.4000000000000004 for s ...
candidateGuards = map[b:true]
Picking guard, b

frate, target rule = 125 public <providence> = (((sil [((z <any_Cx_pr_z_p>) | (<any_Cx_pr_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_pr_z_p>) | (<any_Cx_pr_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ng_p_z_pr_oh> ng)] | [(ng <any_Cx_ng_p_z_pr_oh>)]) (pr | ((<any_Cx_ng_p_z_pr_oh> ng) | (ng <any_Cx_ng_p_z_pr_oh>)))) (([(<any_Cx_zh_ng_oh_v_pr> zh)] | [(zh <any_Cx_zh_ng_oh_v_pr>)]) (oh | ((<any_Cx_zh_ng_oh_v> zh) | (zh <any_Cx_zh_ng_oh_v>)))) (([(<any_Cx_zh_zh_v_oh> zh)] | [(zh <any_Cx_zh_zh_v_oh>)]) (v | ((<any_Cx_zh_zh_v_oh> zh) | (zh <any_Cx_zh_zh_v_oh>)))) ((([(<any_Vx_zh_zh_ih_noSlide> zh)] | [(zh <any_Vx_zh_zh_ih_noSlide>)]) ([(<any_Cx_zh_zh_d_v> zh)] | [(zh <any_Cx_zh_zh_d_v>)])) (ih | ((<any_Vx_zh_zh_ih_noSlide> zh) | (zh <any_Vx_zh_zh_ih_noSlide>)))) (([(<any_Cx_sh_zh_d_ax> sh)] | [(sh <any_Cx_sh_zh_d_ax>)]) (d | ((<any_Cx_sh_zh_d_ax> sh) | (sh <any_Cx_sh_zh_d_ax>)))) (([(<any_Cx_sh_sh_ax_n_d> sh)] | [(sh <any_Cx_sh_sh_ax_n_d>)]) (ax | ((<any_Cx_sh_sh_ax_n_d> sh) | (sh <any_Cx_sh_sh_ax_n_d>)))) (([(<any_Cx_y_sh_n_ax> y)] | [(y <any_Cx_y_sh_n_ax>)]) (n | ((<any_Cx_y_sh_n_s_ax> y) | (y <any_Cx_y_sh_n_s_ax>)))) (([(<any_Cx_b_y_s_n> b)] | [(b <any_Cx_b_y_s_n>)]) (s | ((<any_Cx_b_y_s_n> b) | (b <any_Cx_b_y_s_n>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_b_s_hh> hh)] | [(hh <any_Cx_b_s_hh>)]) sil))
Considering guard w with value 7.199999999999999 for axn ...
candidateGuards = map[w:true]
Picking guard, w

Considering guard b with value 3.4000000000000004 for s ...
candidateGuards = map[b:true]
Picking guard, b

Running scan for frate = 105
frate, target rule = 125 public <providence> = (((sil [((sh <any_Cx_p_sh_d>) | (<any_Cx_p_sh_d> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil d (sil [((sh <any_Cx_p_sh_d>) | (<any_Cx_p_sh_d> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_ng_d_sh_p_r> ng)] | [(ng <any_Cx_ng_d_sh_p_r>)]) (p | ((<any_Cx_ng_d_sh_p_r> ng) | (ng <any_Cx_ng_d_sh_p_r>)))) (([(<any_Cx_ng_ng_r_oh_p> ng)] | [(ng <any_Cx_ng_ng_r_oh_p>)]) (r | ((<any_Cx_ng_ng_r_oh> ng) | (ng <any_Cx_ng_ng_r_oh>)))) (([(<any_Cx_zh_ng_oh_v_r> zh)] | [(zh <any_Cx_zh_ng_oh_v_r>)]) (oh | ((<any_Cx_zh_ng_oh_v_r> zh) | (zh <any_Cx_zh_ng_oh_v_r>)))) (([(<any_Cx_zh_zh_v_oh> zh)] | [(zh <any_Cx_zh_zh_v_oh>)]) (v | ((<any_Cx_zh_zh_v_oh> zh) | (zh <any_Cx_zh_zh_v_oh>)))) ((([(<any_Vx_zh_zh_ih_noSlide> zh)] | [(zh <any_Vx_zh_zh_ih_noSlide>)]) ([(<any_Cx_zh_zh_d_v> zh)] | [(zh <any_Cx_zh_zh_d_v>)])) (ih | ((<any_Vx_zh_zh_ih_noSlide> zh) | (zh <any_Vx_zh_zh_ih_noSlide>)))) (([(<any_Cx_sh_zh_d_ax> sh)] | [(sh <any_Cx_sh_zh_d_ax>)]) (d | ((<any_Cx_sh_zh_d_ax> sh) | (sh <any_Cx_sh_zh_d_ax>)))) (([(<any_Cx_sh_sh_ax_n_d> sh)] | [(sh <any_Cx_sh_sh_ax_n_d>)]) (ax | ((<any_Cx_sh_sh_ax_n_d> sh) | (sh <any_Cx_sh_sh_ax_n_d>)))) (([(<any_Cx_y_sh_n_ax> y)] | [(y <any_Cx_y_sh_n_ax>)]) (n | ((<any_Cx_y_sh_n_s_ax> y) | (y <any_Cx_y_sh_n_s_ax>)))) (([(<any_Cx_b_y_s_n> b)] | [(b <any_Cx_b_y_s_n>)]) (s | ((<any_Cx_b_y_s_n> b) | (b <any_Cx_b_y_s_n>)))) (([(<any_vowel_noSlide> t)] | [(t <any_vowel_noSlide>)]) ([(<any_Cx_b_s_t> t)] | [(t <any_Cx_b_s_t>)]) sil))
Considering guard y with value 1 for pr ...
Considering guard ng with value 1 for pr ...
Considering guard z with value 1 for pr ...
candidateGuards = map[ng:true y:true z:true]
Picking guard, y

Running scan for frate = 105
Considering guard zh with value 4 for oh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ng with value 1 for pr ...
Considering guard y with value 1 for pr ...
Considering guard z with value 1 for pr ...
candidateGuards = map[ng:true y:true z:true]
Picking guard, ng

frate, target rule = 125 public <providence> = (((sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil d (sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_ng_d_hh_p_r> ng)] | [(ng <any_Cx_ng_d_hh_p_r>)]) (p | ((<any_Cx_ng_d_hh_p_r> ng) | (ng <any_Cx_ng_d_hh_p_r>)))) (([(<any_Cx_ng_ng_r_oh_p> ng)] | [(ng <any_Cx_ng_ng_r_oh_p>)]) (r | ((<any_Cx_ng_ng_r_oh> ng) | (ng <any_Cx_ng_ng_r_oh>)))) (([(<any_Cx_zh_ng_oh_v_r> zh)] | [(zh <any_Cx_zh_ng_oh_v_r>)]) (oh | ((<any_Cx_zh_ng_oh_v_r> zh) | (zh <any_Cx_zh_ng_oh_v_r>)))) (([(<any_Cx_zh_zh_v_oh> zh)] | [(zh <any_Cx_zh_zh_v_oh>)]) (v | ((<any_Cx_zh_zh_v_oh> zh) | (zh <any_Cx_zh_zh_v_oh>)))) ((([(<any_Vx_zh_zh_ih_noSlide> zh)] | [(zh <any_Vx_zh_zh_ih_noSlide>)]) ([(<any_Cx_zh_zh_d_v> zh)] | [(zh <any_Cx_zh_zh_d_v>)])) (ih | ((<any_Vx_zh_zh_ih_noSlide> zh) | (zh <any_Vx_zh_zh_ih_noSlide>)))) (([(<any_Cx_sh_zh_d_axn> sh)] | [(sh <any_Cx_sh_zh_d_axn>)]) (d | ((<any_Cx_sh_zh_d_axn> sh) | (sh <any_Cx_sh_zh_d_axn>)))) (([(<any_Cx_w_sh_axn_d> w)] | [(w <any_Cx_w_sh_axn_d>)]) (axn | ((<any_Cx_w_sh_axn_s_d> w) | (w <any_Cx_w_sh_axn_s_d>)))) (([(<any_Cx_b_w_s_axn> b)] | [(b <any_Cx_b_w_s_axn>)]) (s | ((<any_Cx_b_w_s_axn> b) | (b <any_Cx_b_w_s_axn>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_b_s_thr> thr)] | [(thr <any_Cx_b_s_thr>)]) sil))
Considering guard zh with value 4 for v ...
candidateGuards = map[zh:true]
Picking guard, zh

Running scan for frate = 105
Considering guard zh with value 4 for oh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 8 for ih ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ng with value 1 for p ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard zh with value 4 for v ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 8 for ih ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ng with value 2 for r ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard w with value 7.199999999999999 for axn ...
candidateGuards = map[w:true]
Picking guard, w

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 4 for oh ...
candidateGuards = map[zh:true]
Picking guard, zh

Running scan for frate = 105
Considering guard b with value 3.4000000000000004 for s ...
candidateGuards = map[b:true]
Picking guard, b

Considering guard sh with value 6 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 4 for v ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ng with value 1 for p ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard y with value 4.800000000000001 for n ...
candidateGuards = map[y:true]
Picking guard, y

frate, target rule = 105 public <providence> = (((sil [((z <any_Cx_pr_z_p>) | (<any_Cx_pr_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_pr_z_p>) | (<any_Cx_pr_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_y_p_z_pr_oh> y)] | [(y <any_Cx_y_p_z_pr_oh>)]) (pr | ((<any_Cx_y_p_z_pr_oh> y) | (y <any_Cx_y_p_z_pr_oh>)))) (([(<any_Cx_zh_y_oh_v_pr> zh)] | [(zh <any_Cx_zh_y_oh_v_pr>)]) (oh | ((<any_Cx_zh_y_oh_v> zh) | (zh <any_Cx_zh_y_oh_v>)))) (([(<any_Cx_zh_zh_v_oh> zh)] | [(zh <any_Cx_zh_zh_v_oh>)]) (v | ((<any_Cx_zh_zh_v_oh> zh) | (zh <any_Cx_zh_zh_v_oh>)))) ((([(<any_Vx_zh_zh_ih_noSlide> zh)] | [(zh <any_Vx_zh_zh_ih_noSlide>)]) ([(<any_Cx_zh_zh_d_v> zh)] | [(zh <any_Cx_zh_zh_d_v>)])) (ih | ((<any_Vx_zh_zh_ih_noSlide> zh) | (zh <any_Vx_zh_zh_ih_noSlide>)))) (([(<any_Cx_sh_zh_d_axn> sh)] | [(sh <any_Cx_sh_zh_d_axn>)]) (d | ((<any_Cx_sh_zh_d_axn> sh) | (sh <any_Cx_sh_zh_d_axn>)))) (([(<any_Cx_w_sh_axn_d> w)] | [(w <any_Cx_w_sh_axn_d>)]) (axn | ((<any_Cx_w_sh_axn_s_d> w) | (w <any_Cx_w_sh_axn_s_d>)))) (([(<any_Cx_b_w_s_axn> b)] | [(b <any_Cx_b_w_s_axn>)]) (s | ((<any_Cx_b_w_s_axn> b) | (b <any_Cx_b_w_s_axn>)))) (([(<any_vowel_noSlide> th)] | [(th <any_vowel_noSlide>)]) ([(<any_Cx_b_s_th> th)] | [(th <any_Cx_b_s_th>)]) sil))
Considering guard zh with value 8 for ih ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ng with value 2 for r ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard b with value 3.4000000000000004 for s ...
candidateGuards = map[b:true]
Picking guard, b

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 4 for oh ...
candidateGuards = map[zh:true]
Picking guard, zh

Running scan for frate = 91
Considering guard sh with value 6 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 105 public <providence> = (((sil [((z <any_Cx_pr_z_p>) | (<any_Cx_pr_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_pr_z_p>) | (<any_Cx_pr_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ng_p_z_pr_oh> ng)] | [(ng <any_Cx_ng_p_z_pr_oh>)]) (pr | ((<any_Cx_ng_p_z_pr_oh> ng) | (ng <any_Cx_ng_p_z_pr_oh>)))) (([(<any_Cx_zh_ng_oh_v_pr> zh)] | [(zh <any_Cx_zh_ng_oh_v_pr>)]) (oh | ((<any_Cx_zh_ng_oh_v> zh) | (zh <any_Cx_zh_ng_oh_v>)))) (([(<any_Cx_zh_zh_v_oh> zh)] | [(zh <any_Cx_zh_zh_v_oh>)]) (v | ((<any_Cx_zh_zh_v_oh> zh) | (zh <any_Cx_zh_zh_v_oh>)))) ((([(<any_Vx_zh_zh_ih_noSlide> zh)] | [(zh <any_Vx_zh_zh_ih_noSlide>)]) ([(<any_Cx_zh_zh_d_v> zh)] | [(zh <any_Cx_zh_zh_d_v>)])) (ih | ((<any_Vx_zh_zh_ih_noSlide> zh) | (zh <any_Vx_zh_zh_ih_noSlide>)))) (([(<any_Cx_sh_zh_d_ax> sh)] | [(sh <any_Cx_sh_zh_d_ax>)]) (d | ((<any_Cx_sh_zh_d_ax> sh) | (sh <any_Cx_sh_zh_d_ax>)))) (([(<any_Cx_sh_sh_ax_n_d> sh)] | [(sh <any_Cx_sh_sh_ax_n_d>)]) (ax | ((<any_Cx_sh_sh_ax_n_d> sh) | (sh <any_Cx_sh_sh_ax_n_d>)))) (([(<any_Cx_y_sh_n_ax> y)] | [(y <any_Cx_y_sh_n_ax>)]) (n | ((<any_Cx_y_sh_n_s_ax> y) | (y <any_Cx_y_sh_n_s_ax>)))) (([(<any_Cx_b_y_s_n> b)] | [(b <any_Cx_b_y_s_n>)]) (s | ((<any_Cx_b_y_s_n> b) | (b <any_Cx_b_y_s_n>)))) (([(<any_vowel_noSlide> ch)] | [(ch <any_vowel_noSlide>)]) ([(<any_Cx_b_s_ch> ch)] | [(ch <any_Cx_b_s_ch>)]) sil))
Considering guard zh with value 4 for v ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard y with value 1 for pr ...
Considering guard z with value 1 for pr ...
Considering guard ng with value 1 for pr ...
candidateGuards = map[ng:true y:true z:true]
Picking guard, y

Considering guard y with value 4.800000000000001 for n ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard zh with value 8 for ih ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 4 for oh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard b with value 3.4000000000000004 for s ...
candidateGuards = map[b:true]
Picking guard, b

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 91
Considering guard zh with value 4 for v ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 8 for ih ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard w with value 7.199999999999999 for axn ...
candidateGuards = map[w:true]
Picking guard, w

frate, target rule = 105 public <providence> = (((sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil d (sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_ng_d_hh_p_r> ng)] | [(ng <any_Cx_ng_d_hh_p_r>)]) (p | ((<any_Cx_ng_d_hh_p_r> ng) | (ng <any_Cx_ng_d_hh_p_r>)))) (([(<any_Cx_ng_ng_r_oh_p> ng)] | [(ng <any_Cx_ng_ng_r_oh_p>)]) (r | ((<any_Cx_ng_ng_r_oh> ng) | (ng <any_Cx_ng_ng_r_oh>)))) (([(<any_Cx_zh_ng_oh_v_r> zh)] | [(zh <any_Cx_zh_ng_oh_v_r>)]) (oh | ((<any_Cx_zh_ng_oh_v_r> zh) | (zh <any_Cx_zh_ng_oh_v_r>)))) (([(<any_Cx_zh_zh_v_oh> zh)] | [(zh <any_Cx_zh_zh_v_oh>)]) (v | ((<any_Cx_zh_zh_v_oh> zh) | (zh <any_Cx_zh_zh_v_oh>)))) ((([(<any_Vx_zh_zh_ih_noSlide> zh)] | [(zh <any_Vx_zh_zh_ih_noSlide>)]) ([(<any_Cx_zh_zh_d_v> zh)] | [(zh <any_Cx_zh_zh_d_v>)])) (ih | ((<any_Vx_zh_zh_ih_noSlide> zh) | (zh <any_Vx_zh_zh_ih_noSlide>)))) (([(<any_Cx_sh_zh_d_ax> sh)] | [(sh <any_Cx_sh_zh_d_ax>)]) (d | ((<any_Cx_sh_zh_d_ax> sh) | (sh <any_Cx_sh_zh_d_ax>)))) (([(<any_Cx_sh_sh_ax_n_d> sh)] | [(sh <any_Cx_sh_sh_ax_n_d>)]) (ax | ((<any_Cx_sh_sh_ax_n_d> sh) | (sh <any_Cx_sh_sh_ax_n_d>)))) (([(<any_Cx_y_sh_n_ax> y)] | [(y <any_Cx_y_sh_n_ax>)]) (n | ((<any_Cx_y_sh_n_s_ax> y) | (y <any_Cx_y_sh_n_s_ax>)))) (([(<any_Cx_b_y_s_n> b)] | [(b <any_Cx_b_y_s_n>)]) (s | ((<any_Cx_b_y_s_n> b) | (b <any_Cx_b_y_s_n>)))) (([(<any_vowel_noSlide> ch)] | [(ch <any_vowel_noSlide>)]) ([(<any_Cx_b_s_ch> ch)] | [(ch <any_Cx_b_s_ch>)]) sil))
Considering guard y with value 1 for pr ...
Considering guard ng with value 1 for pr ...
Considering guard z with value 1 for pr ...
candidateGuards = map[ng:true y:true z:true]
Picking guard, y

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard b with value 3.4000000000000004 for s ...
candidateGuards = map[b:true]
Picking guard, b

Considering guard zh with value 4 for oh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard w with value 7.199999999999999 for axn ...
candidateGuards = map[w:true]
Picking guard, w

Considering guard zh with value 4 for v ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard b with value 3.4000000000000004 for s ...
candidateGuards = map[b:true]
Picking guard, b

Running scan for frate = 91
frate, target rule = 105 public <providence> = (((sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil d (sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_ng_d_hh_p_r> ng)] | [(ng <any_Cx_ng_d_hh_p_r>)]) (p | ((<any_Cx_ng_d_hh_p_r> ng) | (ng <any_Cx_ng_d_hh_p_r>)))) (([(<any_Cx_ng_ng_r_oh_p> ng)] | [(ng <any_Cx_ng_ng_r_oh_p>)]) (r | ((<any_Cx_ng_ng_r_oh> ng) | (ng <any_Cx_ng_ng_r_oh>)))) (([(<any_Cx_zh_ng_oh_v_r> zh)] | [(zh <any_Cx_zh_ng_oh_v_r>)]) (oh | ((<any_Cx_zh_ng_oh_v_r> zh) | (zh <any_Cx_zh_ng_oh_v_r>)))) (([(<any_Cx_zh_zh_v_oh> zh)] | [(zh <any_Cx_zh_zh_v_oh>)]) (v | ((<any_Cx_zh_zh_v_oh> zh) | (zh <any_Cx_zh_zh_v_oh>)))) ((([(<any_Vx_zh_zh_ih_noSlide> zh)] | [(zh <any_Vx_zh_zh_ih_noSlide>)]) ([(<any_Cx_zh_zh_d_v> zh)] | [(zh <any_Cx_zh_zh_d_v>)])) (ih | ((<any_Vx_zh_zh_ih_noSlide> zh) | (zh <any_Vx_zh_zh_ih_noSlide>)))) (([(<any_Cx_sh_zh_d_axn> sh)] | [(sh <any_Cx_sh_zh_d_axn>)]) (d | ((<any_Cx_sh_zh_d_axn> sh) | (sh <any_Cx_sh_zh_d_axn>)))) (([(<any_Cx_w_sh_axn_d> w)] | [(w <any_Cx_w_sh_axn_d>)]) (axn | ((<any_Cx_w_sh_axn_s_d> w) | (w <any_Cx_w_sh_axn_s_d>)))) (([(<any_Cx_b_w_s_axn> b)] | [(b <any_Cx_b_w_s_axn>)]) (s | ((<any_Cx_b_w_s_axn> b) | (b <any_Cx_b_w_s_axn>)))) (([(<any_vowel_noSlide> ch)] | [(ch <any_vowel_noSlide>)]) ([(<any_Cx_b_s_ch> ch)] | [(ch <any_Cx_b_s_ch>)]) sil))
Considering guard zh with value 8 for ih ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ng with value 1 for p ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 91 public <providence> = (((sil [((z <any_Cx_pr_z_p>) | (<any_Cx_pr_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_pr_z_p>) | (<any_Cx_pr_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_y_p_z_pr_oh> y)] | [(y <any_Cx_y_p_z_pr_oh>)]) (pr | ((<any_Cx_y_p_z_pr_oh> y) | (y <any_Cx_y_p_z_pr_oh>)))) (([(<any_Cx_zh_y_oh_v_pr> zh)] | [(zh <any_Cx_zh_y_oh_v_pr>)]) (oh | ((<any_Cx_zh_y_oh_v> zh) | (zh <any_Cx_zh_y_oh_v>)))) (([(<any_Cx_zh_zh_v_oh> zh)] | [(zh <any_Cx_zh_zh_v_oh>)]) (v | ((<any_Cx_zh_zh_v_oh> zh) | (zh <any_Cx_zh_zh_v_oh>)))) ((([(<any_Vx_zh_zh_ih_noSlide> zh)] | [(zh <any_Vx_zh_zh_ih_noSlide>)]) ([(<any_Cx_zh_zh_d_v> zh)] | [(zh <any_Cx_zh_zh_d_v>)])) (ih | ((<any_Vx_zh_zh_ih_noSlide> zh) | (zh <any_Vx_zh_zh_ih_noSlide>)))) (([(<any_Cx_sh_zh_d_axn> sh)] | [(sh <any_Cx_sh_zh_d_axn>)]) (d | ((<any_Cx_sh_zh_d_axn> sh) | (sh <any_Cx_sh_zh_d_axn>)))) (([(<any_Cx_w_sh_axn_d> w)] | [(w <any_Cx_w_sh_axn_d>)]) (axn | ((<any_Cx_w_sh_axn_s_d> w) | (w <any_Cx_w_sh_axn_s_d>)))) (([(<any_Cx_b_w_s_axn> b)] | [(b <any_Cx_b_w_s_axn>)]) (s | ((<any_Cx_b_w_s_axn> b) | (b <any_Cx_b_w_s_axn>)))) (([(<any_vowel_noSlide> z)] | [(z <any_vowel_noSlide>)]) ([(<any_Cx_b_s_z> z)] | [(z <any_Cx_b_s_z>)]) sil))
Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 91
Considering guard ng with value 2 for r ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard sh with value 6 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ng with value 1 for p ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard zh with value 4 for oh ...
candidateGuards = map[zh:true]
Picking guard, zh

Running scan for frate = 80
Considering guard y with value 4.800000000000001 for n ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard ng with value 2 for r ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard zh with value 4 for v ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard b with value 3.4000000000000004 for s ...
candidateGuards = map[b:true]
Picking guard, b

Considering guard zh with value 4 for oh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ng with value 1 for pr ...
Considering guard y with value 1 for pr ...
Considering guard z with value 1 for pr ...
candidateGuards = map[ng:true y:true z:true]
Picking guard, ng

Considering guard zh with value 8 for ih ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 4 for v ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 4 for oh ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 91 public <providence> = (((sil [((z <any_Cx_pr_z_p>) | (<any_Cx_pr_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_pr_z_p>) | (<any_Cx_pr_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_y_p_z_pr_oh> y)] | [(y <any_Cx_y_p_z_pr_oh>)]) (pr | ((<any_Cx_y_p_z_pr_oh> y) | (y <any_Cx_y_p_z_pr_oh>)))) (([(<any_Cx_zh_y_oh_v_pr> zh)] | [(zh <any_Cx_zh_y_oh_v_pr>)]) (oh | ((<any_Cx_zh_y_oh_v> zh) | (zh <any_Cx_zh_y_oh_v>)))) (([(<any_Cx_zh_zh_v_oh> zh)] | [(zh <any_Cx_zh_zh_v_oh>)]) (v | ((<any_Cx_zh_zh_v_oh> zh) | (zh <any_Cx_zh_zh_v_oh>)))) ((([(<any_Vx_zh_zh_ih_noSlide> zh)] | [(zh <any_Vx_zh_zh_ih_noSlide>)]) ([(<any_Cx_zh_zh_d_v> zh)] | [(zh <any_Cx_zh_zh_d_v>)])) (ih | ((<any_Vx_zh_zh_ih_noSlide> zh) | (zh <any_Vx_zh_zh_ih_noSlide>)))) (([(<any_Cx_sh_zh_d_ax> sh)] | [(sh <any_Cx_sh_zh_d_ax>)]) (d | ((<any_Cx_sh_zh_d_ax> sh) | (sh <any_Cx_sh_zh_d_ax>)))) (([(<any_Cx_sh_sh_ax_n_d> sh)] | [(sh <any_Cx_sh_sh_ax_n_d>)]) (ax | ((<any_Cx_sh_sh_ax_n_d> sh) | (sh <any_Cx_sh_sh_ax_n_d>)))) (([(<any_Cx_y_sh_n_ax> y)] | [(y <any_Cx_y_sh_n_ax>)]) (n | ((<any_Cx_y_sh_n_s_ax> y) | (y <any_Cx_y_sh_n_s_ax>)))) (([(<any_Cx_b_y_s_n> b)] | [(b <any_Cx_b_y_s_n>)]) (s | ((<any_Cx_b_y_s_n> b) | (b <any_Cx_b_y_s_n>)))) (([(<any_vowel_noSlide> t)] | [(t <any_vowel_noSlide>)]) ([(<any_Cx_b_s_t> t)] | [(t <any_Cx_b_s_t>)]) sil))
Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 8 for ih ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 4 for v ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 6 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 8 for ih ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard y with value 4.800000000000001 for n ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard w with value 7.199999999999999 for axn ...
candidateGuards = map[w:true]
Picking guard, w

Running scan for frate = 80
Considering guard b with value 3.4000000000000004 for s ...
candidateGuards = map[b:true]
Picking guard, b

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard b with value 3.4000000000000004 for s ...
candidateGuards = map[b:true]
Picking guard, b

Considering guard y with value 1 for pr ...
Considering guard ng with value 1 for pr ...
Considering guard z with value 1 for pr ...
candidateGuards = map[ng:true y:true z:true]
Picking guard, z

Considering guard w with value 7.199999999999999 for axn ...
candidateGuards = map[w:true]
Picking guard, w

frate, target rule = 91 public <providence> = (((sil [((b <any_Cx_p_b_d>) | (<any_Cx_p_b_d> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]) | (sil d (sil [((b <any_Cx_p_b_d>) | (<any_Cx_p_b_d> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]))) (([(<any_Cx_ng_d_b_p_r> ng)] | [(ng <any_Cx_ng_d_b_p_r>)]) (p | ((<any_Cx_ng_d_b_p_r> ng) | (ng <any_Cx_ng_d_b_p_r>)))) (([(<any_Cx_ng_ng_r_oh_p> ng)] | [(ng <any_Cx_ng_ng_r_oh_p>)]) (r | ((<any_Cx_ng_ng_r_oh> ng) | (ng <any_Cx_ng_ng_r_oh>)))) (([(<any_Cx_zh_ng_oh_v_r> zh)] | [(zh <any_Cx_zh_ng_oh_v_r>)]) (oh | ((<any_Cx_zh_ng_oh_v_r> zh) | (zh <any_Cx_zh_ng_oh_v_r>)))) (([(<any_Cx_zh_zh_v_oh> zh)] | [(zh <any_Cx_zh_zh_v_oh>)]) (v | ((<any_Cx_zh_zh_v_oh> zh) | (zh <any_Cx_zh_zh_v_oh>)))) ((([(<any_Vx_zh_zh_ih_noSlide> zh)] | [(zh <any_Vx_zh_zh_ih_noSlide>)]) ([(<any_Cx_zh_zh_d_v> zh)] | [(zh <any_Cx_zh_zh_d_v>)])) (ih | ((<any_Vx_zh_zh_ih_noSlide> zh) | (zh <any_Vx_zh_zh_ih_noSlide>)))) (([(<any_Cx_sh_zh_d_ax> sh)] | [(sh <any_Cx_sh_zh_d_ax>)]) (d | ((<any_Cx_sh_zh_d_ax> sh) | (sh <any_Cx_sh_zh_d_ax>)))) (([(<any_Cx_sh_sh_ax_n_d> sh)] | [(sh <any_Cx_sh_sh_ax_n_d>)]) (ax | ((<any_Cx_sh_sh_ax_n_d> sh) | (sh <any_Cx_sh_sh_ax_n_d>)))) (([(<any_Cx_y_sh_n_ax> y)] | [(y <any_Cx_y_sh_n_ax>)]) (n | ((<any_Cx_y_sh_n_s_ax> y) | (y <any_Cx_y_sh_n_s_ax>)))) (([(<any_Cx_b_y_s_n> b)] | [(b <any_Cx_b_y_s_n>)]) (s | ((<any_Cx_b_y_s_n> b) | (b <any_Cx_b_y_s_n>)))) (([(<any_vowel_noSlide> t)] | [(t <any_vowel_noSlide>)]) ([(<any_Cx_b_s_t> t)] | [(t <any_Cx_b_s_t>)]) sil))
Considering guard zh with value 4 for oh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard b with value 3.4000000000000004 for s ...
candidateGuards = map[b:true]
Picking guard, b

frate, target rule = 91 public <providence> = (((sil [((b <any_Cx_p_b_d>) | (<any_Cx_p_b_d> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]) | (sil d (sil [((b <any_Cx_p_b_d>) | (<any_Cx_p_b_d> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]))) (([(<any_Cx_ng_d_b_p_r> ng)] | [(ng <any_Cx_ng_d_b_p_r>)]) (p | ((<any_Cx_ng_d_b_p_r> ng) | (ng <any_Cx_ng_d_b_p_r>)))) (([(<any_Cx_ng_ng_r_oh_p> ng)] | [(ng <any_Cx_ng_ng_r_oh_p>)]) (r | ((<any_Cx_ng_ng_r_oh> ng) | (ng <any_Cx_ng_ng_r_oh>)))) (([(<any_Cx_zh_ng_oh_v_r> zh)] | [(zh <any_Cx_zh_ng_oh_v_r>)]) (oh | ((<any_Cx_zh_ng_oh_v_r> zh) | (zh <any_Cx_zh_ng_oh_v_r>)))) (([(<any_Cx_zh_zh_v_oh> zh)] | [(zh <any_Cx_zh_zh_v_oh>)]) (v | ((<any_Cx_zh_zh_v_oh> zh) | (zh <any_Cx_zh_zh_v_oh>)))) ((([(<any_Vx_zh_zh_ih_noSlide> zh)] | [(zh <any_Vx_zh_zh_ih_noSlide>)]) ([(<any_Cx_zh_zh_d_v> zh)] | [(zh <any_Cx_zh_zh_d_v>)])) (ih | ((<any_Vx_zh_zh_ih_noSlide> zh) | (zh <any_Vx_zh_zh_ih_noSlide>)))) (([(<any_Cx_sh_zh_d_axn> sh)] | [(sh <any_Cx_sh_zh_d_axn>)]) (d | ((<any_Cx_sh_zh_d_axn> sh) | (sh <any_Cx_sh_zh_d_axn>)))) (([(<any_Cx_w_sh_axn_d> w)] | [(w <any_Cx_w_sh_axn_d>)]) (axn | ((<any_Cx_w_sh_axn_s_d> w) | (w <any_Cx_w_sh_axn_s_d>)))) (([(<any_Cx_b_w_s_axn> b)] | [(b <any_Cx_b_w_s_axn>)]) (s | ((<any_Cx_b_w_s_axn> b) | (b <any_Cx_b_w_s_axn>)))) (([(<any_vowel_noSlide> th)] | [(th <any_vowel_noSlide>)]) ([(<any_Cx_b_s_th> th)] | [(th <any_Cx_b_s_th>)]) sil))
Considering guard zh with value 4 for v ...
candidateGuards = map[zh:true]
Picking guard, zh

Running scan for frate = 80
Considering guard zh with value 8 for ih ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 80 public <providence> = (((sil [((z <any_Cx_pr_z_p>) | (<any_Cx_pr_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_pr_z_p>) | (<any_Cx_pr_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ng_p_z_pr_oh> ng)] | [(ng <any_Cx_ng_p_z_pr_oh>)]) (pr | ((<any_Cx_ng_p_z_pr_oh> ng) | (ng <any_Cx_ng_p_z_pr_oh>)))) (([(<any_Cx_zh_ng_oh_v_pr> zh)] | [(zh <any_Cx_zh_ng_oh_v_pr>)]) (oh | ((<any_Cx_zh_ng_oh_v> zh) | (zh <any_Cx_zh_ng_oh_v>)))) (([(<any_Cx_zh_zh_v_oh> zh)] | [(zh <any_Cx_zh_zh_v_oh>)]) (v | ((<any_Cx_zh_zh_v_oh> zh) | (zh <any_Cx_zh_zh_v_oh>)))) ((([(<any_Vx_zh_zh_ih_noSlide> zh)] | [(zh <any_Vx_zh_zh_ih_noSlide>)]) ([(<any_Cx_zh_zh_d_v> zh)] | [(zh <any_Cx_zh_zh_d_v>)])) (ih | ((<any_Vx_zh_zh_ih_noSlide> zh) | (zh <any_Vx_zh_zh_ih_noSlide>)))) (([(<any_Cx_sh_zh_d_axn> sh)] | [(sh <any_Cx_sh_zh_d_axn>)]) (d | ((<any_Cx_sh_zh_d_axn> sh) | (sh <any_Cx_sh_zh_d_axn>)))) (([(<any_Cx_w_sh_axn_d> w)] | [(w <any_Cx_w_sh_axn_d>)]) (axn | ((<any_Cx_w_sh_axn_s_d> w) | (w <any_Cx_w_sh_axn_s_d>)))) (([(<any_Cx_b_w_s_axn> b)] | [(b <any_Cx_b_w_s_axn>)]) (s | ((<any_Cx_b_w_s_axn> b) | (b <any_Cx_b_w_s_axn>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_b_s_hh> hh)] | [(hh <any_Cx_b_s_hh>)]) sil))
Considering guard ng with value 1 for p ...
candidateGuards = map[ng:true]
Picking guard, ng

Running scan for frate = 80
Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ng with value 2 for r ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 1 for p ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard sh with value 6 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 72
Considering guard zh with value 4 for oh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ng with value 2 for r ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard y with value 4.800000000000001 for n ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard ng with value 1 for pr ...
Considering guard y with value 1 for pr ...
Considering guard z with value 1 for pr ...
candidateGuards = map[ng:true y:true z:true]
Picking guard, ng

Considering guard zh with value 4 for oh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 4 for v ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard b with value 3.4000000000000004 for s ...
candidateGuards = map[b:true]
Picking guard, b

Considering guard zh with value 4 for oh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 4 for v ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 4 for v ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 8 for ih ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 80 public <providence> = (((sil [((z <any_Cx_pr_z_p>) | (<any_Cx_pr_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_pr_z_p>) | (<any_Cx_pr_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_z_p_z_pr_oh> z)] | [(z <any_Cx_z_p_z_pr_oh>)]) (pr | ((<any_Cx_z_p_z_pr_oh> z) | (z <any_Cx_z_p_z_pr_oh>)))) (([(<any_Cx_zh_z_oh_v_pr> zh)] | [(zh <any_Cx_zh_z_oh_v_pr>)]) (oh | ((<any_Cx_zh_z_oh_v> zh) | (zh <any_Cx_zh_z_oh_v>)))) (([(<any_Cx_zh_zh_v_oh> zh)] | [(zh <any_Cx_zh_zh_v_oh>)]) (v | ((<any_Cx_zh_zh_v_oh> zh) | (zh <any_Cx_zh_zh_v_oh>)))) ((([(<any_Vx_zh_zh_ih_noSlide> zh)] | [(zh <any_Vx_zh_zh_ih_noSlide>)]) ([(<any_Cx_zh_zh_d_v> zh)] | [(zh <any_Cx_zh_zh_d_v>)])) (ih | ((<any_Vx_zh_zh_ih_noSlide> zh) | (zh <any_Vx_zh_zh_ih_noSlide>)))) (([(<any_Cx_sh_zh_d_ax> sh)] | [(sh <any_Cx_sh_zh_d_ax>)]) (d | ((<any_Cx_sh_zh_d_ax> sh) | (sh <any_Cx_sh_zh_d_ax>)))) (([(<any_Cx_sh_sh_ax_n_d> sh)] | [(sh <any_Cx_sh_sh_ax_n_d>)]) (ax | ((<any_Cx_sh_sh_ax_n_d> sh) | (sh <any_Cx_sh_sh_ax_n_d>)))) (([(<any_Cx_y_sh_n_ax> y)] | [(y <any_Cx_y_sh_n_ax>)]) (n | ((<any_Cx_y_sh_n_s_ax> y) | (y <any_Cx_y_sh_n_s_ax>)))) (([(<any_Cx_b_y_s_n> b)] | [(b <any_Cx_b_y_s_n>)]) (s | ((<any_Cx_b_y_s_n> b) | (b <any_Cx_b_y_s_n>)))) (([(<any_vowel_noSlide> ch)] | [(ch <any_vowel_noSlide>)]) ([(<any_Cx_b_s_ch> ch)] | [(ch <any_Cx_b_s_ch>)]) sil))
Considering guard zh with value 8 for ih ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 8 for ih ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 72
Considering guard y with value 4.800000000000001 for n ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard w with value 7.199999999999999 for axn ...
candidateGuards = map[w:true]
Picking guard, w

Considering guard w with value 7.199999999999999 for axn ...
candidateGuards = map[w:true]
Picking guard, w

Considering guard y with value 1 for pr ...
Considering guard ng with value 1 for pr ...
Considering guard z with value 1 for pr ...
candidateGuards = map[ng:true y:true z:true]
Picking guard, z

Considering guard b with value 3.4000000000000004 for s ...
candidateGuards = map[b:true]
Picking guard, b

Considering guard b with value 3.4000000000000004 for s ...
candidateGuards = map[b:true]
Picking guard, b

Considering guard b with value 3.4000000000000004 for s ...
candidateGuards = map[b:true]
Picking guard, b

Considering guard zh with value 4 for oh ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 72 public <providence> = (((sil [((z <any_Cx_pr_z_p>) | (<any_Cx_pr_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_pr_z_p>) | (<any_Cx_pr_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ng_p_z_pr_oh> ng)] | [(ng <any_Cx_ng_p_z_pr_oh>)]) (pr | ((<any_Cx_ng_p_z_pr_oh> ng) | (ng <any_Cx_ng_p_z_pr_oh>)))) (([(<any_Cx_zh_ng_oh_v_pr> zh)] | [(zh <any_Cx_zh_ng_oh_v_pr>)]) (oh | ((<any_Cx_zh_ng_oh_v> zh) | (zh <any_Cx_zh_ng_oh_v>)))) (([(<any_Cx_zh_zh_v_oh> zh)] | [(zh <any_Cx_zh_zh_v_oh>)]) (v | ((<any_Cx_zh_zh_v_oh> zh) | (zh <any_Cx_zh_zh_v_oh>)))) ((([(<any_Vx_zh_zh_ih_noSlide> zh)] | [(zh <any_Vx_zh_zh_ih_noSlide>)]) ([(<any_Cx_zh_zh_d_v> zh)] | [(zh <any_Cx_zh_zh_d_v>)])) (ih | ((<any_Vx_zh_zh_ih_noSlide> zh) | (zh <any_Vx_zh_zh_ih_noSlide>)))) (([(<any_Cx_sh_zh_d_axn> sh)] | [(sh <any_Cx_sh_zh_d_axn>)]) (d | ((<any_Cx_sh_zh_d_axn> sh) | (sh <any_Cx_sh_zh_d_axn>)))) (([(<any_Cx_w_sh_axn_d> w)] | [(w <any_Cx_w_sh_axn_d>)]) (axn | ((<any_Cx_w_sh_axn_s_d> w) | (w <any_Cx_w_sh_axn_s_d>)))) (([(<any_Cx_b_w_s_axn> b)] | [(b <any_Cx_b_w_s_axn>)]) (s | ((<any_Cx_b_w_s_axn> b) | (b <any_Cx_b_w_s_axn>)))) (([(<any_vowel_noSlide> z)] | [(z <any_vowel_noSlide>)]) ([(<any_Cx_b_s_z> z)] | [(z <any_Cx_b_s_z>)]) sil))
frate, target rule = 80 public <providence> = (((sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil d (sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_ng_d_hh_p_r> ng)] | [(ng <any_Cx_ng_d_hh_p_r>)]) (p | ((<any_Cx_ng_d_hh_p_r> ng) | (ng <any_Cx_ng_d_hh_p_r>)))) (([(<any_Cx_ng_ng_r_oh_p> ng)] | [(ng <any_Cx_ng_ng_r_oh_p>)]) (r | ((<any_Cx_ng_ng_r_oh> ng) | (ng <any_Cx_ng_ng_r_oh>)))) (([(<any_Cx_zh_ng_oh_v_r> zh)] | [(zh <any_Cx_zh_ng_oh_v_r>)]) (oh | ((<any_Cx_zh_ng_oh_v_r> zh) | (zh <any_Cx_zh_ng_oh_v_r>)))) (([(<any_Cx_zh_zh_v_oh> zh)] | [(zh <any_Cx_zh_zh_v_oh>)]) (v | ((<any_Cx_zh_zh_v_oh> zh) | (zh <any_Cx_zh_zh_v_oh>)))) ((([(<any_Vx_zh_zh_ih_noSlide> zh)] | [(zh <any_Vx_zh_zh_ih_noSlide>)]) ([(<any_Cx_zh_zh_d_v> zh)] | [(zh <any_Cx_zh_zh_d_v>)])) (ih | ((<any_Vx_zh_zh_ih_noSlide> zh) | (zh <any_Vx_zh_zh_ih_noSlide>)))) (([(<any_Cx_sh_zh_d_axn> sh)] | [(sh <any_Cx_sh_zh_d_axn>)]) (d | ((<any_Cx_sh_zh_d_axn> sh) | (sh <any_Cx_sh_zh_d_axn>)))) (([(<any_Cx_w_sh_axn_d> w)] | [(w <any_Cx_w_sh_axn_d>)]) (axn | ((<any_Cx_w_sh_axn_s_d> w) | (w <any_Cx_w_sh_axn_s_d>)))) (([(<any_Cx_b_w_s_axn> b)] | [(b <any_Cx_b_w_s_axn>)]) (s | ((<any_Cx_b_w_s_axn> b) | (b <any_Cx_b_w_s_axn>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_b_s_f> f)] | [(f <any_Cx_b_s_f>)]) sil))
Considering guard zh with value 4 for v ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 80 public <providence> = (((sil [((sh <any_Cx_p_sh_d>) | (<any_Cx_p_sh_d> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil d (sil [((sh <any_Cx_p_sh_d>) | (<any_Cx_p_sh_d> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_ng_d_sh_p_r> ng)] | [(ng <any_Cx_ng_d_sh_p_r>)]) (p | ((<any_Cx_ng_d_sh_p_r> ng) | (ng <any_Cx_ng_d_sh_p_r>)))) (([(<any_Cx_ng_ng_r_oh_p> ng)] | [(ng <any_Cx_ng_ng_r_oh_p>)]) (r | ((<any_Cx_ng_ng_r_oh> ng) | (ng <any_Cx_ng_ng_r_oh>)))) (([(<any_Cx_zh_ng_oh_v_r> zh)] | [(zh <any_Cx_zh_ng_oh_v_r>)]) (oh | ((<any_Cx_zh_ng_oh_v_r> zh) | (zh <any_Cx_zh_ng_oh_v_r>)))) (([(<any_Cx_zh_zh_v_oh> zh)] | [(zh <any_Cx_zh_zh_v_oh>)]) (v | ((<any_Cx_zh_zh_v_oh> zh) | (zh <any_Cx_zh_zh_v_oh>)))) ((([(<any_Vx_zh_zh_ih_noSlide> zh)] | [(zh <any_Vx_zh_zh_ih_noSlide>)]) ([(<any_Cx_zh_zh_d_v> zh)] | [(zh <any_Cx_zh_zh_d_v>)])) (ih | ((<any_Vx_zh_zh_ih_noSlide> zh) | (zh <any_Vx_zh_zh_ih_noSlide>)))) (([(<any_Cx_sh_zh_d_ax> sh)] | [(sh <any_Cx_sh_zh_d_ax>)]) (d | ((<any_Cx_sh_zh_d_ax> sh) | (sh <any_Cx_sh_zh_d_ax>)))) (([(<any_Cx_sh_sh_ax_n_d> sh)] | [(sh <any_Cx_sh_sh_ax_n_d>)]) (ax | ((<any_Cx_sh_sh_ax_n_d> sh) | (sh <any_Cx_sh_sh_ax_n_d>)))) (([(<any_Cx_y_sh_n_ax> y)] | [(y <any_Cx_y_sh_n_ax>)]) (n | ((<any_Cx_y_sh_n_s_ax> y) | (y <any_Cx_y_sh_n_s_ax>)))) (([(<any_Cx_b_y_s_n> b)] | [(b <any_Cx_b_y_s_n>)]) (s | ((<any_Cx_b_y_s_n> b) | (b <any_Cx_b_y_s_n>)))) (([(<any_vowel_noSlide> ch)] | [(ch <any_vowel_noSlide>)]) ([(<any_Cx_b_s_ch> ch)] | [(ch <any_Cx_b_s_ch>)]) sil))
Considering guard zh with value 8 for ih ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 72
Considering guard sh with value 6 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ng with value 1 for p ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard y with value 4.800000000000001 for n ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard ng with value 2 for r ...
candidateGuards = map[ng:true]
Picking guard, ng

Running scan for frate = 72
Considering guard b with value 3.4000000000000004 for s ...
candidateGuards = map[b:true]
Picking guard, b

Considering guard zh with value 4 for oh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ng with value 1 for p ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard zh with value 4 for v ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ng with value 2 for r ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 72 public <providence> = (((sil [((z <any_Cx_pr_z_p>) | (<any_Cx_pr_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_pr_z_p>) | (<any_Cx_pr_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_z_p_z_pr_oh> z)] | [(z <any_Cx_z_p_z_pr_oh>)]) (pr | ((<any_Cx_z_p_z_pr_oh> z) | (z <any_Cx_z_p_z_pr_oh>)))) (([(<any_Cx_zh_z_oh_v_pr> zh)] | [(zh <any_Cx_zh_z_oh_v_pr>)]) (oh | ((<any_Cx_zh_z_oh_v> zh) | (zh <any_Cx_zh_z_oh_v>)))) (([(<any_Cx_zh_zh_v_oh> zh)] | [(zh <any_Cx_zh_zh_v_oh>)]) (v | ((<any_Cx_zh_zh_v_oh> zh) | (zh <any_Cx_zh_zh_v_oh>)))) ((([(<any_Vx_zh_zh_ih_noSlide> zh)] | [(zh <any_Vx_zh_zh_ih_noSlide>)]) ([(<any_Cx_zh_zh_d_v> zh)] | [(zh <any_Cx_zh_zh_d_v>)])) (ih | ((<any_Vx_zh_zh_ih_noSlide> zh) | (zh <any_Vx_zh_zh_ih_noSlide>)))) (([(<any_Cx_sh_zh_d_ax> sh)] | [(sh <any_Cx_sh_zh_d_ax>)]) (d | ((<any_Cx_sh_zh_d_ax> sh) | (sh <any_Cx_sh_zh_d_ax>)))) (([(<any_Cx_sh_sh_ax_n_d> sh)] | [(sh <any_Cx_sh_sh_ax_n_d>)]) (ax | ((<any_Cx_sh_sh_ax_n_d> sh) | (sh <any_Cx_sh_sh_ax_n_d>)))) (([(<any_Cx_y_sh_n_ax> y)] | [(y <any_Cx_y_sh_n_ax>)]) (n | ((<any_Cx_y_sh_n_s_ax> y) | (y <any_Cx_y_sh_n_s_ax>)))) (([(<any_Cx_b_y_s_n> b)] | [(b <any_Cx_b_y_s_n>)]) (s | ((<any_Cx_b_y_s_n> b) | (b <any_Cx_b_y_s_n>)))) (([(<any_vowel_noSlide> th)] | [(th <any_vowel_noSlide>)]) ([(<any_Cx_b_s_th> th)] | [(th <any_Cx_b_s_th>)]) sil))
Considering guard zh with value 8 for ih ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 4 for oh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 4 for v ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 6 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 8 for ih ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard y with value 4.800000000000001 for n ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard b with value 3.4000000000000004 for s ...
candidateGuards = map[b:true]
Picking guard, b

Considering guard w with value 7.199999999999999 for axn ...
candidateGuards = map[w:true]
Picking guard, w

Considering guard b with value 3.4000000000000004 for s ...
candidateGuards = map[b:true]
Picking guard, b

frate, target rule = 72 public <providence> = (((sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil d (sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_ng_d_hh_p_r> ng)] | [(ng <any_Cx_ng_d_hh_p_r>)]) (p | ((<any_Cx_ng_d_hh_p_r> ng) | (ng <any_Cx_ng_d_hh_p_r>)))) (([(<any_Cx_ng_ng_r_oh_p> ng)] | [(ng <any_Cx_ng_ng_r_oh_p>)]) (r | ((<any_Cx_ng_ng_r_oh> ng) | (ng <any_Cx_ng_ng_r_oh>)))) (([(<any_Cx_zh_ng_oh_v_r> zh)] | [(zh <any_Cx_zh_ng_oh_v_r>)]) (oh | ((<any_Cx_zh_ng_oh_v_r> zh) | (zh <any_Cx_zh_ng_oh_v_r>)))) (([(<any_Cx_zh_zh_v_oh> zh)] | [(zh <any_Cx_zh_zh_v_oh>)]) (v | ((<any_Cx_zh_zh_v_oh> zh) | (zh <any_Cx_zh_zh_v_oh>)))) ((([(<any_Vx_zh_zh_ih_noSlide> zh)] | [(zh <any_Vx_zh_zh_ih_noSlide>)]) ([(<any_Cx_zh_zh_d_v> zh)] | [(zh <any_Cx_zh_zh_d_v>)])) (ih | ((<any_Vx_zh_zh_ih_noSlide> zh) | (zh <any_Vx_zh_zh_ih_noSlide>)))) (([(<any_Cx_sh_zh_d_ax> sh)] | [(sh <any_Cx_sh_zh_d_ax>)]) (d | ((<any_Cx_sh_zh_d_ax> sh) | (sh <any_Cx_sh_zh_d_ax>)))) (([(<any_Cx_sh_sh_ax_n_d> sh)] | [(sh <any_Cx_sh_sh_ax_n_d>)]) (ax | ((<any_Cx_sh_sh_ax_n_d> sh) | (sh <any_Cx_sh_sh_ax_n_d>)))) (([(<any_Cx_y_sh_n_ax> y)] | [(y <any_Cx_y_sh_n_ax>)]) (n | ((<any_Cx_y_sh_n_s_ax> y) | (y <any_Cx_y_sh_n_s_ax>)))) (([(<any_Cx_b_y_s_n> b)] | [(b <any_Cx_b_y_s_n>)]) (s | ((<any_Cx_b_y_s_n> b) | (b <any_Cx_b_y_s_n>)))) (([(<any_vowel_noSlide> sh)] | [(sh <any_vowel_noSlide>)]) ([(<any_Cx_b_s_sh> sh)] | [(sh <any_Cx_b_s_sh>)]) sil))
frate, target rule = 72 public <providence> = (((sil [((b <any_Cx_p_b_d>) | (<any_Cx_p_b_d> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]) | (sil d (sil [((b <any_Cx_p_b_d>) | (<any_Cx_p_b_d> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]))) (([(<any_Cx_ng_d_b_p_r> ng)] | [(ng <any_Cx_ng_d_b_p_r>)]) (p | ((<any_Cx_ng_d_b_p_r> ng) | (ng <any_Cx_ng_d_b_p_r>)))) (([(<any_Cx_ng_ng_r_oh_p> ng)] | [(ng <any_Cx_ng_ng_r_oh_p>)]) (r | ((<any_Cx_ng_ng_r_oh> ng) | (ng <any_Cx_ng_ng_r_oh>)))) (([(<any_Cx_zh_ng_oh_v_r> zh)] | [(zh <any_Cx_zh_ng_oh_v_r>)]) (oh | ((<any_Cx_zh_ng_oh_v_r> zh) | (zh <any_Cx_zh_ng_oh_v_r>)))) (([(<any_Cx_zh_zh_v_oh> zh)] | [(zh <any_Cx_zh_zh_v_oh>)]) (v | ((<any_Cx_zh_zh_v_oh> zh) | (zh <any_Cx_zh_zh_v_oh>)))) ((([(<any_Vx_zh_zh_ih_noSlide> zh)] | [(zh <any_Vx_zh_zh_ih_noSlide>)]) ([(<any_Cx_zh_zh_d_v> zh)] | [(zh <any_Cx_zh_zh_d_v>)])) (ih | ((<any_Vx_zh_zh_ih_noSlide> zh) | (zh <any_Vx_zh_zh_ih_noSlide>)))) (([(<any_Cx_sh_zh_d_axn> sh)] | [(sh <any_Cx_sh_zh_d_axn>)]) (d | ((<any_Cx_sh_zh_d_axn> sh) | (sh <any_Cx_sh_zh_d_axn>)))) (([(<any_Cx_w_sh_axn_d> w)] | [(w <any_Cx_w_sh_axn_d>)]) (axn | ((<any_Cx_w_sh_axn_s_d> w) | (w <any_Cx_w_sh_axn_s_d>)))) (([(<any_Cx_b_w_s_axn> b)] | [(b <any_Cx_b_w_s_axn>)]) (s | ((<any_Cx_b_w_s_axn> b) | (b <any_Cx_b_w_s_axn>)))) (([(<any_vowel_noSlide> t)] | [(t <any_vowel_noSlide>)]) ([(<any_Cx_b_s_t> t)] | [(t <any_Cx_b_s_t>)]) sil))

results =
{72 [{sil 0 40} {pr 41 52} {oh 53 58} {v 59 62} {ih 63 70} {d 71 74} {ax 75 80} {n 81 89} {s 90 106} {sil 107 126}]}
{80 [{sil 0 45} {pr 46 58} {oh 59 64} {v 65 69} {ih 70 78} {d 79 82} {ax 83 89} {n 90 99} {s 100 117} {sil 118 137}]}
{91 [{sil 0 52} {pr 53 66} {oh 67 73} {v 74 79} {ih 80 88} {d 89 93} {ax 94 100} {n 101 113} {s 114 134} {sil 135 191}]}
{105 [{sil 0 60} {pr 61 77} {oh 78 84} {v 85 91} {ih 92 103} {d 104 108} {ax 109 116} {n 117 131} {s 132 155} {sil 156 221}]}
{125 [{sil 0 70} {pr 71 89} {oh 90 103} {v 104 107} {ih 108 120} {d 121 126} {ax 127 142} {n 143 154} {s 155 181} {sil 182 261}]}

normalised results =
{72 [{sil 0 40} {pr 57 72} {oh 74 81} {v 82 86} {ih 88 97} {d 99 103} {ax 104 111} {n 113 124} {s 125 147} {sil 149 175}]}
{80 [{sil 0 45} {pr 58 73} {oh 74 80} {v 81 86} {ih 88 98} {d 99 103} {ax 104 111} {n 113 124} {s 125 146} {sil 148 171}]}
{91 [{sil 0 52} {pr 58 73} {oh 74 80} {v 81 87} {ih 88 97} {d 98 102} {ax 103 110} {n 111 124} {s 125 147} {sil 148 210}]}
{105 [{sil 0 60} {pr 58 73} {oh 74 80} {v 81 87} {ih 88 98} {d 99 103} {ax 104 110} {n 111 125} {s 126 148} {sil 149 210}]}
{125 [{sil 0 70} {pr 57 71} {oh 72 82} {v 83 86} {ih 86 96} {d 97 101} {ax 102 114} {n 114 123} {s 124 145} {sil 146 209}]}

ruleAligned = [{{pr 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{oh 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{v 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{ih 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{d 0} [{0 5} {1 5} {2 5} {3 5} {4 5}]} {{ax 0} [{0 6} {1 6} {2 6} {3 6} {4 6}]} {{n 0} [{0 7} {1 7} {2 7} {3 7} {4 7}]} {{s 0} [{0 8} {1 8} {2 8} {3 8} {4 8}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {pr 57 72} {oh 74 81} {v 82 86} {ih 88 97} {d 99 103} {ax 104 111} {n 113 124} {s 125 147} {sil 149 149}]}
{80 [{sil 0 0} {pr 58 73} {oh 74 80} {v 81 86} {ih 88 98} {d 99 103} {ax 104 111} {n 113 124} {s 125 146} {sil 148 148}]}
{91 [{sil 0 0} {pr 58 73} {oh 74 80} {v 81 87} {ih 88 97} {d 98 102} {ax 103 110} {n 111 124} {s 125 147} {sil 148 148}]}
{105 [{sil 0 0} {pr 58 73} {oh 74 80} {v 81 87} {ih 88 98} {d 99 103} {ax 104 110} {n 111 125} {s 126 148} {sil 149 149}]}
{125 [{sil 0 0} {pr 57 71} {oh 72 82} {v 83 86} {ih 86 96} {d 97 101} {ax 102 114} {n 114 123} {s 124 145} {sil 146 146}]}

timeAligned = [{{pr 58 73} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{oh 74 80} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{v 81 86} [{1 3} {2 3} {3 3} {0 3} {4 3}]} {{ih 88 97} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{d 99 103} [{0 5} {1 5} {2 5} {3 5} {4 5}]} {{ax 104 111} [{0 6} {1 6} {2 6} {3 6} {4 6}]} {{n 113 124} [{0 7} {1 7} {2 7} {3 7} {4 7}]} {{s 125 147} [{0 8} {1 8} {2 8} {4 8} {3 8}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 71
i, iTime, newITime, timeStartFrom = 2 1 2 80
i, iTime, newITime, timeStartFrom = 3 2 3 86
i, iTime, newITime, timeStartFrom = 4 3 4 96
i, iTime, newITime, timeStartFrom = 5 4 5 101
i, iTime, newITime, timeStartFrom = 6 5 6 110
i, iTime, newITime, timeStartFrom = 7 6 7 123
combinedVerdict    = [{pr 0} {oh 0} {v 0} {ih 0} {d 0} {ax 0} {n 0} {s 0}]
ruleAlignedVerdict = [{pr 0} {oh 0} {v 0} {ih 0} {d 0} {ax 0} {n 0} {s 0}]

score->
+2 for pr
+2 for oh
+2 for v
+2 for ih
+2 for d
+2 for ax
+2 for n
+2 for s
score<-: 21

results =
{72 [{sil 0 40} {pr 41 52} {oh 53 58} {v 59 62} {ih 63 70} {d 71 75} {axn 76 89} {s 90 106} {sil 107 126}]}
{80 [{sil 0 45} {pr 46 58} {oh 59 64} {v 65 69} {ih 70 78} {d 79 83} {axn 84 99} {s 100 117} {sil 118 137}]}
{91 [{sil 0 52} {pr 53 66} {oh 67 73} {v 74 79} {ih 80 88} {d 89 94} {axn 95 113} {s 114 134} {sil 135 191}]}
{105 [{sil 0 60} {pr 61 77} {oh 78 84} {v 85 91} {ih 92 103} {d 104 109} {axn 110 131} {s 132 155} {sil 156 221}]}
{125 [{sil 0 70} {pr 71 89} {oh 90 103} {v 104 107} {ih 108 120} {d 121 128} {axn 129 153} {s 154 181} {sil 182 261}]}

normalised results =
{72 [{sil 0 40} {pr 57 72} {oh 74 81} {v 82 86} {ih 88 97} {d 99 104} {axn 106 124} {s 125 147} {sil 149 175}]}
{80 [{sil 0 45} {pr 58 73} {oh 74 80} {v 81 86} {ih 88 98} {d 99 104} {axn 105 124} {s 125 146} {sil 148 171}]}
{91 [{sil 0 52} {pr 58 73} {oh 74 80} {v 81 87} {ih 88 97} {d 98 103} {axn 104 124} {s 125 147} {sil 148 210}]}
{105 [{sil 0 60} {pr 58 73} {oh 74 80} {v 81 87} {ih 88 98} {d 99 104} {axn 105 125} {s 126 148} {sil 149 210}]}
{125 [{sil 0 70} {pr 57 71} {oh 72 82} {v 83 86} {ih 86 96} {d 97 102} {axn 103 122} {s 123 145} {sil 146 209}]}

ruleAligned = [{{pr 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{oh 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{v 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{ih 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{d 0} [{0 5} {1 5} {2 5} {3 5} {4 5}]} {{axn 0} [{0 6} {1 6} {2 6} {3 6} {4 6}]} {{s 0} [{0 7} {1 7} {2 7} {3 7} {4 7}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {pr 57 72} {oh 74 81} {v 82 86} {ih 88 97} {d 99 104} {axn 106 124} {s 125 147} {sil 149 149}]}
{80 [{sil 0 0} {pr 58 73} {oh 74 80} {v 81 86} {ih 88 98} {d 99 104} {axn 105 124} {s 125 146} {sil 148 148}]}
{91 [{sil 0 0} {pr 58 73} {oh 74 80} {v 81 87} {ih 88 97} {d 98 103} {axn 104 124} {s 125 147} {sil 148 148}]}
{105 [{sil 0 0} {pr 58 73} {oh 74 80} {v 81 87} {ih 88 98} {d 99 104} {axn 105 125} {s 126 148} {sil 149 149}]}
{125 [{sil 0 0} {pr 57 71} {oh 72 82} {v 83 86} {ih 86 96} {d 97 102} {axn 103 122} {s 123 145} {sil 146 146}]}

timeAligned = [{{pr 58 73} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{oh 74 80} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{v 81 86} [{1 3} {2 3} {3 3} {0 3} {4 3}]} {{ih 88 97} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{d 99 104} [{0 5} {1 5} {2 5} {3 5} {4 5}]} {{axn 105 124} [{1 6} {2 6} {3 6} {4 6} {0 6}]} {{s 125 147} [{0 7} {1 7} {2 7} {4 7} {3 7}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 71
i, iTime, newITime, timeStartFrom = 2 1 2 80
i, iTime, newITime, timeStartFrom = 3 2 3 86
i, iTime, newITime, timeStartFrom = 4 3 4 96
i, iTime, newITime, timeStartFrom = 5 4 5 102
i, iTime, newITime, timeStartFrom = 6 5 6 122
combinedVerdict    = [{pr 0} {oh 0} {v 0} {ih 0} {d 0} {axn 0} {s 0}]
ruleAlignedVerdict = [{pr 0} {oh 0} {v 0} {ih 0} {d 0} {axn 0} {s 0}]

score->
+2 for pr
+2 for oh
+2 for v
+2 for ih
+2 for d
+2 for axn
+2 for s
score<-: 19

results =
{72 [{sil 0 40} {p 41 48} {r 49 52} {oh 53 58} {v 59 62} {ih 63 70} {d 71 75} {axn 76 89} {s 90 106} {sil 107 126}]}
{80 [{sil 0 44} {p 45 53} {r 54 58} {oh 59 64} {v 65 69} {ih 70 78} {d 79 83} {axn 84 99} {s 100 117} {sil 118 137}]}
{91 [{sil 0 52} {p 53 61} {r 62 66} {oh 67 73} {v 74 79} {ih 80 88} {d 89 94} {axn 95 113} {s 114 134} {sil 135 191}]}
{105 [{sil 0 60} {p 61 71} {r 72 77} {oh 78 84} {v 85 91} {ih 92 103} {d 104 109} {axn 110 131} {s 132 155} {sil 156 221}]}
{125 [{sil 0 69} {p 70 82} {r 83 90} {oh 91 103} {v 104 107} {ih 108 120} {d 121 128} {axn 129 153} {s 154 181} {sil 182 261}]}

normalised results =
{72 [{sil 0 40} {p 57 67} {r 68 72} {oh 74 81} {v 82 86} {ih 88 97} {d 99 104} {axn 106 124} {s 125 147} {sil 149 175}]}
{80 [{sil 0 44} {p 56 66} {r 68 73} {oh 74 80} {v 81 86} {ih 88 98} {d 99 104} {axn 105 124} {s 125 146} {sil 148 171}]}
{91 [{sil 0 52} {p 58 67} {r 68 73} {oh 74 80} {v 81 87} {ih 88 97} {d 98 103} {axn 104 124} {s 125 147} {sil 148 210}]}
{105 [{sil 0 60} {p 58 68} {r 69 73} {oh 74 80} {v 81 87} {ih 88 98} {d 99 104} {axn 105 125} {s 126 148} {sil 149 210}]}
{125 [{sil 0 69} {p 56 66} {r 66 72} {oh 73 82} {v 83 86} {ih 86 96} {d 97 102} {axn 103 122} {s 123 145} {sil 146 209}]}

ruleAligned = [{{p 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{r 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{oh 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{v 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{ih 0} [{0 5} {1 5} {2 5} {3 5} {4 5}]} {{d 0} [{0 6} {1 6} {2 6} {3 6} {4 6}]} {{axn 0} [{0 7} {1 7} {2 7} {3 7} {4 7}]} {{s 0} [{0 8} {1 8} {2 8} {3 8} {4 8}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {p 57 67} {r 68 72} {oh 74 81} {v 82 86} {ih 88 97} {d 99 104} {axn 106 124} {s 125 147} {sil 149 149}]}
{80 [{sil 0 0} {p 56 66} {r 68 73} {oh 74 80} {v 81 86} {ih 88 98} {d 99 104} {axn 105 124} {s 125 146} {sil 148 148}]}
{91 [{sil 0 0} {p 58 67} {r 68 73} {oh 74 80} {v 81 87} {ih 88 97} {d 98 103} {axn 104 124} {s 125 147} {sil 148 148}]}
{105 [{sil 0 0} {p 58 68} {r 69 73} {oh 74 80} {v 81 87} {ih 88 98} {d 99 104} {axn 105 125} {s 126 148} {sil 149 149}]}
{125 [{sil 0 0} {p 56 66} {r 66 72} {oh 73 82} {v 83 86} {ih 86 96} {d 97 102} {axn 103 122} {s 123 145} {sil 146 146}]}

timeAligned = [{{p 57 67} [{0 1} {1 1} {4 1} {2 1} {3 1}]} {{r 68 73} [{0 2} {1 2} {2 2} {4 2} {3 2}]} {{oh 74 80} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{v 81 86} [{1 4} {2 4} {3 4} {0 4} {4 4}]} {{ih 88 97} [{0 5} {1 5} {2 5} {3 5} {4 5}]} {{d 99 104} [{0 6} {1 6} {2 6} {3 6} {4 6}]} {{axn 105 124} [{1 7} {2 7} {3 7} {4 7} {0 7}]} {{s 125 147} [{0 8} {1 8} {2 8} {4 8} {3 8}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 66
i, iTime, newITime, timeStartFrom = 2 1 2 72
i, iTime, newITime, timeStartFrom = 3 2 3 80
i, iTime, newITime, timeStartFrom = 4 3 4 86
i, iTime, newITime, timeStartFrom = 5 4 5 96
i, iTime, newITime, timeStartFrom = 6 5 6 102
i, iTime, newITime, timeStartFrom = 7 6 7 122
combinedVerdict    = [{p 0} {r 0} {oh 0} {v 0} {ih 0} {d 0} {axn 0} {s 0}]
ruleAlignedVerdict = [{p 0} {r 0} {oh 0} {v 0} {ih 0} {d 0} {axn 0} {s 0}]

score->
+2 for p
+2 for r
+2 for oh
+2 for v
+2 for ih
+2 for d
+2 for axn
+2 for s
score<-: 21

results =
{72 [{sil 0 40} {p 41 48} {r 49 52} {oh 53 58} {v 59 62} {ih 63 70} {d 71 74} {ax 75 80} {n 81 89} {s 90 106} {sil 107 126}]}
{80 [{sil 0 44} {p 45 53} {r 54 58} {oh 59 64} {v 65 69} {ih 70 78} {d 79 82} {ax 83 89} {n 90 99} {s 100 117} {sil 118 137}]}
{91 [{sil 0 52} {p 53 61} {r 62 66} {oh 67 73} {v 74 79} {ih 80 88} {d 89 93} {ax 94 100} {n 101 113} {s 114 134} {sil 135 191}]}
{105 [{sil 0 60} {p 61 71} {r 72 77} {oh 78 84} {v 85 91} {ih 92 103} {d 104 108} {ax 109 116} {n 117 131} {s 132 155} {sil 156 221}]}
{125 [{sil 0 69} {p 70 82} {r 83 90} {oh 91 103} {v 104 107} {ih 108 120} {d 121 126} {ax 127 142} {n 143 154} {s 155 181} {sil 182 261}]}

normalised results =
{72 [{sil 0 40} {p 57 67} {r 68 72} {oh 74 81} {v 82 86} {ih 88 97} {d 99 103} {ax 104 111} {n 113 124} {s 125 147} {sil 149 175}]}
{80 [{sil 0 44} {p 56 66} {r 68 73} {oh 74 80} {v 81 86} {ih 88 98} {d 99 103} {ax 104 111} {n 113 124} {s 125 146} {sil 148 171}]}
{91 [{sil 0 52} {p 58 67} {r 68 73} {oh 74 80} {v 81 87} {ih 88 97} {d 98 102} {ax 103 110} {n 111 124} {s 125 147} {sil 148 210}]}
{105 [{sil 0 60} {p 58 68} {r 69 73} {oh 74 80} {v 81 87} {ih 88 98} {d 99 103} {ax 104 110} {n 111 125} {s 126 148} {sil 149 210}]}
{125 [{sil 0 69} {p 56 66} {r 66 72} {oh 73 82} {v 83 86} {ih 86 96} {d 97 101} {ax 102 114} {n 114 123} {s 124 145} {sil 146 209}]}

ruleAligned = [{{p 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{r 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{oh 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{v 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{ih 0} [{0 5} {1 5} {2 5} {3 5} {4 5}]} {{d 0} [{0 6} {1 6} {2 6} {3 6} {4 6}]} {{ax 0} [{0 7} {1 7} {2 7} {3 7} {4 7}]} {{n 0} [{0 8} {1 8} {2 8} {3 8} {4 8}]} {{s 0} [{0 9} {1 9} {2 9} {3 9} {4 9}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {p 57 67} {r 68 72} {oh 74 81} {v 82 86} {ih 88 97} {d 99 103} {ax 104 111} {n 113 124} {s 125 147} {sil 149 149}]}
{80 [{sil 0 0} {p 56 66} {r 68 73} {oh 74 80} {v 81 86} {ih 88 98} {d 99 103} {ax 104 111} {n 113 124} {s 125 146} {sil 148 148}]}
{91 [{sil 0 0} {p 58 67} {r 68 73} {oh 74 80} {v 81 87} {ih 88 97} {d 98 102} {ax 103 110} {n 111 124} {s 125 147} {sil 148 148}]}
{105 [{sil 0 0} {p 58 68} {r 69 73} {oh 74 80} {v 81 87} {ih 88 98} {d 99 103} {ax 104 110} {n 111 125} {s 126 148} {sil 149 149}]}
{125 [{sil 0 0} {p 56 66} {r 66 72} {oh 73 82} {v 83 86} {ih 86 96} {d 97 101} {ax 102 114} {n 114 123} {s 124 145} {sil 146 146}]}

timeAligned = [{{p 57 67} [{0 1} {1 1} {4 1} {2 1} {3 1}]} {{r 68 73} [{0 2} {1 2} {2 2} {4 2} {3 2}]} {{oh 74 80} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{v 81 86} [{1 4} {2 4} {3 4} {0 4} {4 4}]} {{ih 88 97} [{0 5} {1 5} {2 5} {3 5} {4 5}]} {{d 99 103} [{0 6} {1 6} {2 6} {3 6} {4 6}]} {{ax 104 111} [{0 7} {1 7} {2 7} {3 7} {4 7}]} {{n 113 124} [{0 8} {1 8} {2 8} {3 8} {4 8}]} {{s 125 147} [{0 9} {1 9} {2 9} {4 9} {3 9}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 66
i, iTime, newITime, timeStartFrom = 2 1 2 72
i, iTime, newITime, timeStartFrom = 3 2 3 80
i, iTime, newITime, timeStartFrom = 4 3 4 86
i, iTime, newITime, timeStartFrom = 5 4 5 96
i, iTime, newITime, timeStartFrom = 6 5 6 101
i, iTime, newITime, timeStartFrom = 7 6 7 110
i, iTime, newITime, timeStartFrom = 8 7 8 123
combinedVerdict    = [{p 0} {r 0} {oh 0} {v 0} {ih 0} {d 0} {ax 0} {n 0} {s 0}]
ruleAlignedVerdict = [{p 0} {r 0} {oh 0} {v 0} {ih 0} {d 0} {ax 0} {n 0} {s 0}]

score->
+2 for p
+2 for r
+2 for oh
+2 for v
+2 for ih
+2 for d
+2 for ax
+2 for n
+2 for s
score<-: 23
testPronounce p good r good oh good v good ih good d good ax good n good s good
publish->
phonsToAlphas = [{[p] p} {[r] r} {[oh] o} {[v] v} {[ih] i} {[d] d} {[ax] e} {[n] n} {[s] ce}]
getVerdict<-:new {p [p] 0}
getVerdict<-:new {r [r] 0}
getVerdict<-:new {o [oh] 0}
getVerdict<-:new {v [v] 0}
getVerdict<-:new {i [ih] 0}
getVerdict<-:new {d [d] 0}
getVerdict<-:new {e [ax] 0}
getVerdict<-:new {n [n] 0}
getVerdict<-:new {ce [s] 0}
lettersVerdicts = [{p [p] 0} {r [r] 0} {o [oh] 0} {v [v] 0} {i [ih] 0} {d [d] 0} {e [ax] 0} {n [n] 0} {ce [s] 0}]
publish<-
{
  "word": "providence",
  "results": [
    {
      "letters": "p",
      "phonemes": "p",
      "verdict": "good"
    },
    {
      "letters": "r",
      "phonemes": "ɹ",
      "verdict": "good"
    },
    {
      "letters": "o",
      "phonemes": "ɒ",
      "verdict": "good"
    },
    {
      "letters": "v",
      "phonemes": "v",
      "verdict": "good"
    },
    {
      "letters": "i",
      "phonemes": "ɪ",
      "verdict": "good"
    },
    {
      "letters": "d",
      "phonemes": "d",
      "verdict": "good"
    },
    {
      "letters": "e",
      "phonemes": "ə",
      "verdict": "good"
    },
    {
      "letters": "n",
      "phonemes": "n",
      "verdict": "good"
    },
    {
      "letters": "ce",
      "phonemes": "s",
      "verdict": "good"
    }
  ],
  "err": null
}
