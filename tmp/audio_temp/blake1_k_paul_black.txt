Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_bd3f5e65-74e3-41af-b275-4ad5fa5db9a0 audiofile /Users/test/go/src/Phonemes/audio_clips/blake1_k_paul.wav word black dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  2.018687



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.42000000000000004 0.72 1.1400000000000001

 start3, duration3, end3 =  0.42000000000000004 0.52 0.9400000000000001

 Initial start, duration, end =  0.32000000000000006 0.8200000000000001 1.1400000000000001

 Cut at: start, duration =  0.32000000000000006 1.27     guard_end =  1.59 

Running scan for frate = 125
Running scan for frate = 125
Considering guard sh with value 1 for bl ...
Considering guard zh with value 1 for bl ...
Considering guard jh with value 1 for bl ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, jh

Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 2 for ae ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard z with value 1 for k ...
Considering guard zh with value 1 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard y with value 7.199999999999999 for ae ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard z with value 1 for k ...
Considering guard zh with value 1 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, z

frate, target rule = 125 public <black> = (((sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_jh_p_z_bl> jh)] | [(jh <any_Cx_jh_p_z_bl>)]) (bl | ((<any_Cx_jh_p_z_bl> jh) | (jh <any_Cx_jh_p_z_bl>)))) ((([(<any_Vx_zh_jh_ae_noSlide> zh)] | [(zh <any_Vx_zh_jh_ae_noSlide>)]) ([(<any_Cx_zh_jh_k_bl> zh)] | [(zh <any_Cx_zh_jh_k_bl>)])) (ae | ((<any_Vx_zh_jh_ae_noSlide> zh) | (zh <any_Vx_zh_jh_ae_noSlide>)))) (([(<any_Cx_z_zh_k> z)] | [(z <any_Cx_z_zh_k>)]) (k | ((<any_Cx_z_zh_k> z) | (z <any_Cx_z_zh_k>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_z_k_thr> thr)] | [(thr <any_Cx_z_k_thr>)]) sil))
frate, target rule = 125 public <black> = (((sil [((sh <any_Cx_b_sh_hh>) | (<any_Cx_b_sh_hh> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil hh (sil [((sh <any_Cx_b_sh_hh>) | (<any_Cx_b_sh_hh> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_sh_hh_sh_b_l> sh)] | [(sh <any_Cx_sh_hh_sh_b_l>)]) (b | ((<any_Cx_sh_hh_sh_b_l> sh) | (sh <any_Cx_sh_hh_sh_b_l>)))) (([(<any_Cx_sh_sh_l_b> sh)] | [(sh <any_Cx_sh_sh_l_b>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_y_sh_ae_noSlide> y)] | [(y <any_Vx_y_sh_ae_noSlide>)]) ([(<any_Cx_y_sh_k_l> y)] | [(y <any_Cx_y_sh_k_l>)])) (ae | ((<any_Vx_y_sh_ae_noSlide> y) | (y <any_Vx_y_sh_ae_noSlide>)))) (([(<any_Cx_z_y_k> z)] | [(z <any_Cx_z_y_k>)]) (k | ((<any_Cx_z_y_k> z) | (z <any_Cx_z_y_k>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_z_k_p> p)] | [(p <any_Cx_z_k_p>)]) sil))
Running scan for frate = 105
Running scan for frate = 105
Considering guard jh with value 1 for bl ...
Considering guard sh with value 1 for bl ...
Considering guard zh with value 1 for bl ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, jh

Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 2 for ae ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard z with value 1 for k ...
Considering guard zh with value 1 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard y with value 7.199999999999999 for ae ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard zh with value 1 for k ...
Considering guard z with value 1 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

frate, target rule = 105 public <black> = (((sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_jh_p_z_bl> jh)] | [(jh <any_Cx_jh_p_z_bl>)]) (bl | ((<any_Cx_jh_p_z_bl> jh) | (jh <any_Cx_jh_p_z_bl>)))) ((([(<any_Vx_zh_jh_ae_noSlide> zh)] | [(zh <any_Vx_zh_jh_ae_noSlide>)]) ([(<any_Cx_zh_jh_k_bl> zh)] | [(zh <any_Cx_zh_jh_k_bl>)])) (ae | ((<any_Vx_zh_jh_ae_noSlide> zh) | (zh <any_Vx_zh_jh_ae_noSlide>)))) (([(<any_Cx_z_zh_k> z)] | [(z <any_Cx_z_zh_k>)]) (k | ((<any_Cx_z_zh_k> z) | (z <any_Cx_z_zh_k>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_z_k_thr> thr)] | [(thr <any_Cx_z_k_thr>)]) sil))
frate, target rule = 105 public <black> = (((sil [((l <any_Cx_b_l_hh>) | (<any_Cx_b_l_hh> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]) | (sil hh (sil [((l <any_Cx_b_l_hh>) | (<any_Cx_b_l_hh> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]))) (([(<any_Cx_sh_hh_l_b_l> sh)] | [(sh <any_Cx_sh_hh_l_b_l>)]) (b | ((<any_Cx_sh_hh_l_b_l> sh) | (sh <any_Cx_sh_hh_l_b_l>)))) (([(<any_Cx_sh_sh_l_b> sh)] | [(sh <any_Cx_sh_sh_l_b>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_y_sh_ae_noSlide> y)] | [(y <any_Vx_y_sh_ae_noSlide>)]) ([(<any_Cx_y_sh_k_l> y)] | [(y <any_Cx_y_sh_k_l>)])) (ae | ((<any_Vx_y_sh_ae_noSlide> y) | (y <any_Vx_y_sh_ae_noSlide>)))) (([(<any_Cx_zh_y_k> zh)] | [(zh <any_Cx_zh_y_k>)]) (k | ((<any_Cx_zh_y_k> zh) | (zh <any_Cx_zh_y_k>)))) (([(<any_vowel_noSlide> t)] | [(t <any_vowel_noSlide>)]) ([(<any_Cx_zh_k_t> t)] | [(t <any_Cx_zh_k_t>)]) sil))
Running scan for frate = 91
Running scan for frate = 91
Considering guard zh with value 1 for bl ...
Considering guard sh with value 1 for bl ...
Considering guard jh with value 1 for bl ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, zh

Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 2 for ae ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard z with value 1 for k ...
Considering guard zh with value 1 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard y with value 7.199999999999999 for ae ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard z with value 1 for k ...
Considering guard zh with value 1 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, z

frate, target rule = 91 public <black> = (((sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_bl> zh)] | [(zh <any_Cx_zh_p_z_bl>)]) (bl | ((<any_Cx_zh_p_z_bl> zh) | (zh <any_Cx_zh_p_z_bl>)))) ((([(<any_Vx_zh_zh_ae_noSlide> zh)] | [(zh <any_Vx_zh_zh_ae_noSlide>)]) ([(<any_Cx_zh_zh_k_bl> zh)] | [(zh <any_Cx_zh_zh_k_bl>)])) (ae | ((<any_Vx_zh_zh_ae_noSlide> zh) | (zh <any_Vx_zh_zh_ae_noSlide>)))) (([(<any_Cx_z_zh_k> z)] | [(z <any_Cx_z_zh_k>)]) (k | ((<any_Cx_z_zh_k> z) | (z <any_Cx_z_zh_k>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_z_k_g> g)] | [(g <any_Cx_z_k_g>)]) sil))
frate, target rule = 91 public <black> = (((sil [((dh <any_Cx_b_dh_hh>) | (<any_Cx_b_dh_hh> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]) | (sil hh (sil [((dh <any_Cx_b_dh_hh>) | (<any_Cx_b_dh_hh> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]))) (([(<any_Cx_sh_hh_dh_b_l> sh)] | [(sh <any_Cx_sh_hh_dh_b_l>)]) (b | ((<any_Cx_sh_hh_dh_b_l> sh) | (sh <any_Cx_sh_hh_dh_b_l>)))) (([(<any_Cx_sh_sh_l_b> sh)] | [(sh <any_Cx_sh_sh_l_b>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_y_sh_ae_noSlide> y)] | [(y <any_Vx_y_sh_ae_noSlide>)]) ([(<any_Cx_y_sh_k_l> y)] | [(y <any_Cx_y_sh_k_l>)])) (ae | ((<any_Vx_y_sh_ae_noSlide> y) | (y <any_Vx_y_sh_ae_noSlide>)))) (([(<any_Cx_z_y_k> z)] | [(z <any_Cx_z_y_k>)]) (k | ((<any_Cx_z_y_k> z) | (z <any_Cx_z_y_k>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_z_k_hh> hh)] | [(hh <any_Cx_z_k_hh>)]) sil))
Running scan for frate = 80
Running scan for frate = 80
Considering guard zh with value 1 for bl ...
Considering guard sh with value 1 for bl ...
Considering guard jh with value 1 for bl ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, zh

Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 2 for ae ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 1 for k ...
Considering guard z with value 1 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard y with value 7.199999999999999 for ae ...
candidateGuards = map[y:true]
Picking guard, y

frate, target rule = 80 public <black> = (((sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_bl> zh)] | [(zh <any_Cx_zh_p_z_bl>)]) (bl | ((<any_Cx_zh_p_z_bl> zh) | (zh <any_Cx_zh_p_z_bl>)))) ((([(<any_Vx_zh_zh_ae_noSlide> zh)] | [(zh <any_Vx_zh_zh_ae_noSlide>)]) ([(<any_Cx_zh_zh_k_bl> zh)] | [(zh <any_Cx_zh_zh_k_bl>)])) (ae | ((<any_Vx_zh_zh_ae_noSlide> zh) | (zh <any_Vx_zh_zh_ae_noSlide>)))) (([(<any_Cx_z_zh_k> z)] | [(z <any_Cx_z_zh_k>)]) (k | ((<any_Cx_z_zh_k> z) | (z <any_Cx_z_zh_k>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_z_k_thr> thr)] | [(thr <any_Cx_z_k_thr>)]) sil))
Considering guard z with value 1 for k ...
Considering guard zh with value 1 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Running scan for frate = 72
frate, target rule = 80 public <black> = (((sil [((p <any_Cx_b_p_hh>) | (<any_Cx_b_p_hh> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]) | (sil hh (sil [((p <any_Cx_b_p_hh>) | (<any_Cx_b_p_hh> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]))) (([(<any_Cx_sh_hh_p_b_l> sh)] | [(sh <any_Cx_sh_hh_p_b_l>)]) (b | ((<any_Cx_sh_hh_p_b_l> sh) | (sh <any_Cx_sh_hh_p_b_l>)))) (([(<any_Cx_sh_sh_l_b> sh)] | [(sh <any_Cx_sh_sh_l_b>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_y_sh_ae_noSlide> y)] | [(y <any_Vx_y_sh_ae_noSlide>)]) ([(<any_Cx_y_sh_k_l> y)] | [(y <any_Cx_y_sh_k_l>)])) (ae | ((<any_Vx_y_sh_ae_noSlide> y) | (y <any_Vx_y_sh_ae_noSlide>)))) (([(<any_Cx_z_y_k> z)] | [(z <any_Cx_z_y_k>)]) (k | ((<any_Cx_z_y_k> z) | (z <any_Cx_z_y_k>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_z_k_thr> thr)] | [(thr <any_Cx_z_k_thr>)]) sil))
Considering guard zh with value 1 for bl ...
Considering guard jh with value 1 for bl ...
Considering guard sh with value 1 for bl ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, zh

Running scan for frate = 72
Considering guard zh with value 2 for ae ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard z with value 1 for k ...
Considering guard zh with value 1 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 72 public <black> = (((sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_bl> zh)] | [(zh <any_Cx_zh_p_z_bl>)]) (bl | ((<any_Cx_zh_p_z_bl> zh) | (zh <any_Cx_zh_p_z_bl>)))) ((([(<any_Vx_zh_zh_ae_noSlide> zh)] | [(zh <any_Vx_zh_zh_ae_noSlide>)]) ([(<any_Cx_zh_zh_k_bl> zh)] | [(zh <any_Cx_zh_zh_k_bl>)])) (ae | ((<any_Vx_zh_zh_ae_noSlide> zh) | (zh <any_Vx_zh_zh_ae_noSlide>)))) (([(<any_Cx_z_zh_k> z)] | [(z <any_Cx_z_zh_k>)]) (k | ((<any_Cx_z_zh_k> z) | (z <any_Cx_z_zh_k>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_z_k_hh> hh)] | [(hh <any_Cx_z_k_hh>)]) sil))
Considering guard y with value 7.199999999999999 for ae ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard zh with value 1 for k ...
Considering guard z with value 1 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

frate, target rule = 72 public <black> = (((sil [((f <any_Cx_b_f_hh>) | (<any_Cx_b_f_hh> f))] [((f <any_vowel_noSlide>) | (<any_vowel_noSlide> f))]) | (sil hh (sil [((f <any_Cx_b_f_hh>) | (<any_Cx_b_f_hh> f))] [((f <any_vowel_noSlide>) | (<any_vowel_noSlide> f))]))) (([(<any_Cx_sh_hh_f_b_l> sh)] | [(sh <any_Cx_sh_hh_f_b_l>)]) (b | ((<any_Cx_sh_hh_f_b_l> sh) | (sh <any_Cx_sh_hh_f_b_l>)))) (([(<any_Cx_sh_sh_l_b> sh)] | [(sh <any_Cx_sh_sh_l_b>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_y_sh_ae_noSlide> y)] | [(y <any_Vx_y_sh_ae_noSlide>)]) ([(<any_Cx_y_sh_k_l> y)] | [(y <any_Cx_y_sh_k_l>)])) (ae | ((<any_Vx_y_sh_ae_noSlide> y) | (y <any_Vx_y_sh_ae_noSlide>)))) (([(<any_Cx_zh_y_k> zh)] | [(zh <any_Cx_zh_y_k>)]) (k | ((<any_Cx_zh_y_k> zh) | (zh <any_Cx_zh_y_k>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_zh_k_hh> hh)] | [(hh <any_Cx_zh_k_hh>)]) sil))

results =
{72 [{sil 0 10} {bl 11 24} {ih 25 35} {zh 36 39} {k 40 52} {sil 53 73}]}
{80 [{sil 0 12} {bl 13 25} {eh 26 32} {zh 33 35} {d 36 38} {z 39 46} {k 47 55} {sil 56 79}]}
{91 [{sil 0 14} {bl 15 30} {iy 31 43} {zh 44 51} {k 52 66} {sil 67 114}]}
{105 [{sil 0 17} {bl 18 35} {iy 36 50} {zh 51 54} {z 55 58} {g 59 63} {k 64 76} {sil 77 132}]}
{125 [{sil 0 20} {bl 21 38} {eh 39 59} {zh 60 68} {k 69 90} {sil 91 155}]}

normalised results =
{72 [{sil 0 10} {bl 15 33} {ih 35 49} {zh 50 54} {k 56 72} {sil 74 101}]}
{80 [{sil 0 12} {bl 16 31} {eh 33 40} {zh 41 41} {d 45 45} {z 49 58} {k 59 69} {sil 70 99}]}
{91 [{sil 0 14} {bl 16 33} {iy 34 47} {zh 48 56} {k 57 73} {sil 74 125}]}
{105 [{sil 0 17} {bl 17 33} {iy 34 48} {zh 49 51} {z 52 55} {g 56 60} {k 61 72} {sil 73 126}]}
{125 [{sil 0 20} {bl 17 30} {eh 31 47} {zh 48 54} {k 55 72} {sil 73 124}]}

ruleAligned = [{{bl 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ae 2} []} {{k 0} [{0 4} {1 6} {2 4} {3 6} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {bl 15 33} {ih 35 49} {zh 50 50} {k 56 72} {sil 74 74}]}
{80 [{sil 0 0} {bl 16 31} {eh 33 40} {zh 41 41} {d 45 45} {z 49 58} {k 59 69} {sil 70 70}]}
{91 [{sil 0 0} {bl 16 33} {iy 34 47} {zh 48 56} {k 57 73} {sil 74 74}]}
{105 [{sil 0 0} {bl 17 33} {iy 34 48} {zh 49 49} {z 52 52} {g 56 60} {k 61 72} {sil 73 73}]}
{125 [{sil 0 0} {bl 17 30} {eh 31 47} {zh 48 54} {k 55 72} {sil 73 73}]}

timeAligned = [{{bl 16 33} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{k 57 72} [{0 4} {2 4} {4 4} {1 6} {3 6}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 -1 30
i, iTime, newITime, timeStartFrom = 2 0 1 30
combinedVerdict    = [{bl 0} {ae 2} {k 0}]
ruleAlignedVerdict = [{bl 0} {ae 2} {k 0}]

score->
+2 for bl
-2 for ae
+2 for k
score<-: 2

results =
{72 [{sil 0 10} {b 11 15} {l 16 23} {eh 24 29} {y 30 32} {k 33 52} {sil 53 73}]}
{80 [{sil 0 11} {b 12 17} {l 18 25} {eh 26 32} {y 33 35} {d 36 38} {z 39 46} {k 47 55} {sil 56 79}]}
{91 [{sil 0 14} {b 15 19} {l 20 29} {eh 30 37} {y 38 41} {d 42 49} {z 50 53} {k 54 66} {sil 67 114}]}
{105 [{sil 0 16} {b 17 22} {l 23 36} {eh 37 43} {y 44 46} {k 47 49} {d 50 59} {t 60 76} {sil 77 132}]}
{125 [{sil 0 18} {b 19 24} {l 25 40} {y 41 43} {iy 44 59} {z 60 74} {d 75 90} {sil 91 155}]}

normalised results =
{72 [{sil 0 10} {b 15 21} {l 22 32} {eh 33 40} {y 42 42} {k 46 72} {sil 74 101}]}
{80 [{sil 0 11} {b 15 21} {l 23 31} {eh 33 40} {y 41 41} {d 45 45} {z 49 58} {k 59 69} {sil 70 99}]}
{91 [{sil 0 14} {b 16 21} {l 22 32} {eh 33 41} {y 42 45} {d 46 54} {z 55 58} {k 59 73} {sil 74 125}]}
{105 [{sil 0 16} {b 16 21} {l 22 34} {eh 35 41} {y 42 42} {k 45 45} {d 48 56} {t 57 72} {sil 73 126}]}
{125 [{sil 0 18} {b 15 19} {l 20 32} {y 33 33} {iy 35 47} {z 48 59} {d 60 72} {sil 73 124}]}

ruleAligned = [{{b 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{l 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{ae 2} []} {{eh 3} [{0 3} {1 3} {2 3} {3 3}]} {{k 1} [{0 5} {1 7} {2 7}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {b 15 21} {l 22 32} {eh 33 40} {y 42 42} {k 46 72} {sil 74 74}]}
{80 [{sil 0 0} {b 15 21} {l 23 31} {eh 33 40} {y 41 41} {d 45 45} {z 49 58} {k 59 69} {sil 70 70}]}
{91 [{sil 0 0} {b 16 21} {l 22 32} {eh 33 41} {y 42 42} {d 46 54} {z 55 55} {k 59 73} {sil 74 74}]}
{105 [{sil 0 0} {b 16 21} {l 22 34} {eh 35 41} {y 42 42} {k 45 45} {d 48 56} {t 57 72} {sil 73 73}]}
{125 [{sil 0 0} {b 15 19} {l 20 32} {y 33 33} {iy 35 47} {z 48 59} {d 60 72} {sil 73 73}]}

timeAligned = [{{b 15 21} [{0 1} {1 1} {4 1} {2 1} {3 1}]} {{l 22 32} [{0 2} {2 2} {3 2} {4 2} {1 2}]} {{eh 33 40} [{0 3} {1 3} {2 3} {3 3}]} {{k 59 69} [{0 5} {1 7} {2 7}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 19
i, iTime, newITime, timeStartFrom = 2 1 -1 31
i, iTime, newITime, timeStartFrom = 3 1 2 31
i, iTime, newITime, timeStartFrom = 4 2 3 40
combinedVerdict    = [{b 0} {l 0} {ae 2} {eh 3} {k 1}]
ruleAlignedVerdict = [{b 0} {l 0} {ae 2} {eh 3} {k 1}]

score->
+2 for b
+2 for l
-2 for ae
-2 for eh
+1 for k
score<-: 1
bestResult = {2 [{bl 0} {ae 2} {k 0}] [bl ae k]}
testPronounce bl good ae missing k good
publish->
phonsToAlphas = [{[bl] bl} {[ae] a} {[k] ck}]
getVerdict<-:new {bl [bl] 0}
getVerdict<-:new {a [ae] 2}
getVerdict<-:new {ck [k] 0}
lettersVerdicts = [{bl [bl] 0} {a [ae] 2} {ck [k] 0}]
publish<-
{
  "word": "black",
  "results": [
    {
      "letters": "bl",
      "phonemes": "bl",
      "verdict": "good"
    },
    {
      "letters": "a",
      "phonemes": "æ",
      "verdict": "missing"
    },
    {
      "letters": "ck",
      "phonemes": "k",
      "verdict": "good"
    }
  ],
  "err": null
}
