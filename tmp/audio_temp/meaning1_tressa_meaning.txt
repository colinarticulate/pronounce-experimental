Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_2bc96fd3-cd93-484f-99dc-9bae5ebe551d audiofile /Users/test/go/src/Phonemes/audio_clips/meaning1_tressa.wav word meaning dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  1.343625



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.31999999999999995 1.02 1.3399999999999999

 start3, duration3, end3 =  0.48 0.64 1.12

 Initial start, duration, end =  0.21999999999999995 1.1199999999999999 1.3399999999999999

 Cut at: start, duration =  0.21999999999999995 1.103625     guard_end =  1.323625 

Running scan for frate = 125
Running scan for frate = 125
Considering guard sh with value 1.6 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 1 for ing ...
Considering guard zh with value 1 for ing ...
Considering guard jh with value 1 for ing ...
Considering guard sh with value 1 for ing ...
candidateGuards = map[ch:true jh:true sh:true zh:true]
Picking guard, ch

Considering guard jh with value 1 for ng ...
Considering guard s with value 1 for ng ...
Considering guard sh with value 1 for ng ...
Considering guard z with value 1 for ng ...
candidateGuards = map[jh:true s:true sh:true z:true]
Picking guard, jh

frate, target rule = 125 public <meaning> = (((sil [((z <any_Cx_m_z_p>) | (<any_Cx_m_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_m_z_p>) | (<any_Cx_m_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_m> sh)] | [(sh <any_Cx_sh_p_z_m>)]) (m | ((<any_Cx_sh_p_z_m> sh) | (sh <any_Cx_sh_p_z_m>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_n_m> sh)] | [(sh <any_Cx_sh_sh_n_m>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_sh_n> sh)] | [(sh <any_Cx_sh_sh_n>)]) (n | ((<any_Cx_sh_sh_n_ing> sh) | (sh <any_Cx_sh_sh_n_ing>)))) (([(<any_Cx_ch_sh_ing_n> ch)] | [(ch <any_Cx_ch_sh_ing_n>)]) (ing | ((<any_Cx_ch_sh_ing_n> ch) | (ch <any_Cx_ch_sh_ing_n>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_ch_ing_f> f)] | [(f <any_Cx_ch_ing_f>)]) sil))
frate, target rule = 125 public <meaning> = (((sil [((l <any_Cx_m_l_p>) | (<any_Cx_m_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]) | (sil p (sil [((l <any_Cx_m_l_p>) | (<any_Cx_m_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]))) (([(<any_Cx_sh_p_l_m> sh)] | [(sh <any_Cx_sh_p_l_m>)]) (m | ((<any_Cx_sh_p_l_m> sh) | (sh <any_Cx_sh_p_l_m>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_n_m> sh)] | [(sh <any_Cx_sh_sh_n_m>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_sh_n> sh)] | [(sh <any_Cx_sh_sh_n>)]) (n | ((<any_Cx_sh_sh_n> sh) | (sh <any_Cx_sh_sh_n>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_ng_n> sh)] | [(sh <any_Cx_sh_sh_ng_n>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_jh_sh_ng> jh)] | [(jh <any_Cx_jh_sh_ng>)]) (ng | ((<any_Cx_jh_sh_ng> jh) | (jh <any_Cx_jh_sh_ng>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_jh_ng_m> m)] | [(m <any_Cx_jh_ng_m>)]) sil))
Running scan for frate = 105
Running scan for frate = 105
Considering guard sh with value 1.6 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for ing ...
Considering guard jh with value 1 for ing ...
Considering guard zh with value 1 for ing ...
Considering guard ch with value 1 for ing ...
candidateGuards = map[ch:true jh:true sh:true zh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 105 public <meaning> = (((sil [((z <any_Cx_m_z_p>) | (<any_Cx_m_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_m_z_p>) | (<any_Cx_m_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_m> sh)] | [(sh <any_Cx_sh_p_z_m>)]) (m | ((<any_Cx_sh_p_z_m> sh) | (sh <any_Cx_sh_p_z_m>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_n_m> sh)] | [(sh <any_Cx_sh_sh_n_m>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_sh_n> sh)] | [(sh <any_Cx_sh_sh_n>)]) (n | ((<any_Cx_sh_sh_n_ing> sh) | (sh <any_Cx_sh_sh_n_ing>)))) (([(<any_Cx_sh_sh_ing_n> sh)] | [(sh <any_Cx_sh_sh_ing_n>)]) (ing | ((<any_Cx_sh_sh_ing_n> sh) | (sh <any_Cx_sh_sh_ing_n>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_sh_ing_f> f)] | [(f <any_Cx_sh_ing_f>)]) sil))
Considering guard z with value 1 for ng ...
Considering guard sh with value 1 for ng ...
Considering guard s with value 1 for ng ...
Considering guard jh with value 1 for ng ...
candidateGuards = map[jh:true s:true sh:true z:true]
Picking guard, z

Running scan for frate = 91
frate, target rule = 105 public <meaning> = (((sil [((v <any_Cx_m_v_p>) | (<any_Cx_m_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]) | (sil p (sil [((v <any_Cx_m_v_p>) | (<any_Cx_m_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]))) (([(<any_Cx_sh_p_v_m> sh)] | [(sh <any_Cx_sh_p_v_m>)]) (m | ((<any_Cx_sh_p_v_m> sh) | (sh <any_Cx_sh_p_v_m>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_n_m> sh)] | [(sh <any_Cx_sh_sh_n_m>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_sh_n> sh)] | [(sh <any_Cx_sh_sh_n>)]) (n | ((<any_Cx_sh_sh_n> sh) | (sh <any_Cx_sh_sh_n>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_ng_n> sh)] | [(sh <any_Cx_sh_sh_ng_n>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_z_sh_ng> z)] | [(z <any_Cx_z_sh_ng>)]) (ng | ((<any_Cx_z_sh_ng> z) | (z <any_Cx_z_sh_ng>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_z_ng_n> n)] | [(n <any_Cx_z_ng_n>)]) sil))
Considering guard sh with value 1.6 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 91
Considering guard sh with value 3.2 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard jh with value 1 for ing ...
Considering guard sh with value 1 for ing ...
Considering guard zh with value 1 for ing ...
Considering guard ch with value 1 for ing ...
candidateGuards = map[ch:true jh:true sh:true zh:true]
Picking guard, jh

Considering guard sh with value 2 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 91 public <meaning> = (((sil [((v <any_Cx_m_v_p>) | (<any_Cx_m_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]) | (sil p (sil [((v <any_Cx_m_v_p>) | (<any_Cx_m_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]))) (([(<any_Cx_sh_p_v_m> sh)] | [(sh <any_Cx_sh_p_v_m>)]) (m | ((<any_Cx_sh_p_v_m> sh) | (sh <any_Cx_sh_p_v_m>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_n_m> sh)] | [(sh <any_Cx_sh_sh_n_m>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_sh_n> sh)] | [(sh <any_Cx_sh_sh_n>)]) (n | ((<any_Cx_sh_sh_n_ing> sh) | (sh <any_Cx_sh_sh_n_ing>)))) (([(<any_Cx_jh_sh_ing_n> jh)] | [(jh <any_Cx_jh_sh_ing_n>)]) (ing | ((<any_Cx_jh_sh_ing_n> jh) | (jh <any_Cx_jh_sh_ing_n>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_jh_ing_thr> thr)] | [(thr <any_Cx_jh_ing_thr>)]) sil))
Considering guard sh with value 1.6 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard z with value 1 for ng ...
Considering guard jh with value 1 for ng ...
Considering guard sh with value 1 for ng ...
Considering guard s with value 1 for ng ...
candidateGuards = map[jh:true s:true sh:true z:true]
Picking guard, sh

Running scan for frate = 80
frate, target rule = 91 public <meaning> = (((sil [((z <any_Cx_m_z_p>) | (<any_Cx_m_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_m_z_p>) | (<any_Cx_m_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_m> sh)] | [(sh <any_Cx_sh_p_z_m>)]) (m | ((<any_Cx_sh_p_z_m> sh) | (sh <any_Cx_sh_p_z_m>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_n_m> sh)] | [(sh <any_Cx_sh_sh_n_m>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_sh_n> sh)] | [(sh <any_Cx_sh_sh_n>)]) (n | ((<any_Cx_sh_sh_n> sh) | (sh <any_Cx_sh_sh_n>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_ng_n> sh)] | [(sh <any_Cx_sh_sh_ng_n>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_sh_sh_ng> sh)] | [(sh <any_Cx_sh_sh_ng>)]) (ng | ((<any_Cx_sh_sh_ng> sh) | (sh <any_Cx_sh_sh_ng>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_sh_ng_thr> thr)] | [(thr <any_Cx_sh_ng_thr>)]) sil))
Considering guard sh with value 1.6 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 80
Considering guard sh with value 2 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 1 for ing ...
Considering guard jh with value 1 for ing ...
Considering guard sh with value 1 for ing ...
Considering guard ch with value 1 for ing ...
candidateGuards = map[ch:true jh:true sh:true zh:true]
Picking guard, jh

Considering guard sh with value 3.2 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard jh with value 1 for ng ...
Considering guard z with value 1 for ng ...
Considering guard s with value 1 for ng ...
Considering guard sh with value 1 for ng ...
candidateGuards = map[jh:true s:true sh:true z:true]
Picking guard, jh

frate, target rule = 80 public <meaning> = (((sil [((l <any_Cx_m_l_p>) | (<any_Cx_m_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]) | (sil p (sil [((l <any_Cx_m_l_p>) | (<any_Cx_m_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]))) (([(<any_Cx_sh_p_l_m> sh)] | [(sh <any_Cx_sh_p_l_m>)]) (m | ((<any_Cx_sh_p_l_m> sh) | (sh <any_Cx_sh_p_l_m>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_n_m> sh)] | [(sh <any_Cx_sh_sh_n_m>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_sh_n> sh)] | [(sh <any_Cx_sh_sh_n>)]) (n | ((<any_Cx_sh_sh_n_ing> sh) | (sh <any_Cx_sh_sh_n_ing>)))) (([(<any_Cx_jh_sh_ing_n> jh)] | [(jh <any_Cx_jh_sh_ing_n>)]) (ing | ((<any_Cx_jh_sh_ing_n> jh) | (jh <any_Cx_jh_sh_ing_n>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_jh_ing_hh> hh)] | [(hh <any_Cx_jh_ing_hh>)]) sil))
frate, target rule = 80 public <meaning> = (((sil [((z <any_Cx_m_z_p>) | (<any_Cx_m_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_m_z_p>) | (<any_Cx_m_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_m> sh)] | [(sh <any_Cx_sh_p_z_m>)]) (m | ((<any_Cx_sh_p_z_m> sh) | (sh <any_Cx_sh_p_z_m>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_n_m> sh)] | [(sh <any_Cx_sh_sh_n_m>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_sh_n> sh)] | [(sh <any_Cx_sh_sh_n>)]) (n | ((<any_Cx_sh_sh_n> sh) | (sh <any_Cx_sh_sh_n>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_ng_n> sh)] | [(sh <any_Cx_sh_sh_ng_n>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_jh_sh_ng> jh)] | [(jh <any_Cx_jh_sh_ng>)]) (ng | ((<any_Cx_jh_sh_ng> jh) | (jh <any_Cx_jh_sh_ng>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_jh_ng_n> n)] | [(n <any_Cx_jh_ng_n>)]) sil))
Running scan for frate = 72
Running scan for frate = 72
Considering guard sh with value 1.6 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 1 for ing ...
Considering guard sh with value 1 for ing ...
Considering guard jh with value 1 for ing ...
Considering guard ch with value 1 for ing ...
candidateGuards = map[ch:true jh:true sh:true zh:true]
Picking guard, zh

Considering guard sh with value 1.6 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard s with value 1 for ng ...
Considering guard z with value 1 for ng ...
Considering guard sh with value 1 for ng ...
Considering guard jh with value 1 for ng ...
candidateGuards = map[jh:true s:true sh:true z:true]
Picking guard, s

frate, target rule = 72 public <meaning> = (((sil [((l <any_Cx_m_l_p>) | (<any_Cx_m_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]) | (sil p (sil [((l <any_Cx_m_l_p>) | (<any_Cx_m_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]))) (([(<any_Cx_sh_p_l_m> sh)] | [(sh <any_Cx_sh_p_l_m>)]) (m | ((<any_Cx_sh_p_l_m> sh) | (sh <any_Cx_sh_p_l_m>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_n_m> sh)] | [(sh <any_Cx_sh_sh_n_m>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_sh_n> sh)] | [(sh <any_Cx_sh_sh_n>)]) (n | ((<any_Cx_sh_sh_n_ing> sh) | (sh <any_Cx_sh_sh_n_ing>)))) (([(<any_Cx_zh_sh_ing_n> zh)] | [(zh <any_Cx_zh_sh_ing_n>)]) (ing | ((<any_Cx_zh_sh_ing_n> zh) | (zh <any_Cx_zh_sh_ing_n>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_zh_ing_m> m)] | [(m <any_Cx_zh_ing_m>)]) sil))
frate, target rule = 72 public <meaning> = (((sil [((v <any_Cx_m_v_p>) | (<any_Cx_m_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]) | (sil p (sil [((v <any_Cx_m_v_p>) | (<any_Cx_m_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]))) (([(<any_Cx_sh_p_v_m> sh)] | [(sh <any_Cx_sh_p_v_m>)]) (m | ((<any_Cx_sh_p_v_m> sh) | (sh <any_Cx_sh_p_v_m>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_n_m> sh)] | [(sh <any_Cx_sh_sh_n_m>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_sh_n> sh)] | [(sh <any_Cx_sh_sh_n>)]) (n | ((<any_Cx_sh_sh_n> sh) | (sh <any_Cx_sh_sh_n>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_ng_n> sh)] | [(sh <any_Cx_sh_sh_ng_n>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_s_sh_ng> s)] | [(s <any_Cx_s_sh_ng>)]) (ng | ((<any_Cx_s_sh_ng> s) | (s <any_Cx_s_sh_ng>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_s_ng_n> n)] | [(n <any_Cx_s_ng_n>)]) sil))

results =
{72 [{sil 0 11} {m 12 25} {iy 26 35} {n 36 41} {ih 42 47} {ng 48 60} {sil 61 71}]}
{80 [{sil 0 12} {m 13 27} {iy 28 39} {n 40 45} {ih 46 49} {ng 50 67} {sil 68 76}]}
{91 [{sil 0 15} {m 16 31} {iy 32 44} {n 45 52} {ih 53 55} {ng 56 76} {sil 77 99}]}
{105 [{sil 0 18} {m 19 36} {iy 37 52} {n 53 61} {ih 62 69} {ng 70 88} {sil 89 115}]}
{125 [{sil 0 19} {m 20 41} {iy 42 60} {n 61 69} {ih 70 81} {ng 82 103} {sil 104 134}]}

normalised results =
{72 [{sil 0 11} {m 17 35} {iy 36 49} {n 50 57} {ih 58 65} {ng 67 83} {sil 85 99}]}
{80 [{sil 0 12} {m 16 34} {iy 35 49} {n 50 56} {ih 58 61} {ng 63 84} {sil 85 95}]}
{91 [{sil 0 15} {m 18 34} {iy 35 48} {n 49 57} {ih 58 58} {ng 62 84} {sil 85 109}]}
{105 [{sil 0 18} {m 18 34} {iy 35 50} {n 50 58} {ih 59 66} {ng 67 84} {sil 85 110}]}
{125 [{sil 0 19} {m 16 33} {iy 34 48} {n 49 55} {ih 56 65} {ng 66 82} {sil 83 107}]}

ruleAligned = [{{m 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{iy 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{n 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{ih 0} [{0 4} {1 4} {3 4} {4 4}]} {{ng 0} [{0 5} {1 5} {2 5} {3 5} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {m 17 35} {iy 36 49} {n 50 57} {ih 58 65} {ng 67 83} {sil 85 85}]}
{80 [{sil 0 0} {m 16 34} {iy 35 49} {n 50 56} {ih 58 61} {ng 63 84} {sil 85 85}]}
{91 [{sil 0 0} {m 18 34} {iy 35 48} {n 49 57} {ih 58 58} {ng 62 84} {sil 85 85}]}
{105 [{sil 0 0} {m 18 34} {iy 35 50} {n 50 58} {ih 59 66} {ng 67 84} {sil 85 85}]}
{125 [{sil 0 0} {m 16 33} {iy 34 48} {n 49 55} {ih 56 65} {ng 66 82} {sil 83 83}]}

timeAligned = [{{m 17 34} [{0 1} {1 1} {4 1} {2 1} {3 1}]} {{iy 35 49} [{1 2} {2 2} {3 2} {4 2} {0 2}]} {{n 50 57} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{ih 58 65} [{0 4} {1 4} {4 4} {3 4}]} {{ng 66 84} [{1 5} {2 5} {4 5} {0 5} {3 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 33
i, iTime, newITime, timeStartFrom = 2 1 2 48
i, iTime, newITime, timeStartFrom = 3 2 3 55
i, iTime, newITime, timeStartFrom = 4 3 4 61
combinedVerdict    = [{m 0} {iy 0} {n 0} {ih 0} {ng 0}]
ruleAlignedVerdict = [{m 0} {iy 0} {n 0} {ih 0} {ng 0}]

score->
+2 for m
+2 for iy
+2 for n
+2 for ih
+2 for ng
score<-: 15

results =
{72 [{sil 0 11} {m 12 25} {iy 26 35} {n 36 40} {ing 41 60} {sil 61 71}]}
{80 [{sil 0 12} {m 13 27} {iy 28 39} {n 40 45} {ing 46 66} {sil 67 76}]}
{91 [{sil 0 15} {m 16 31} {iy 32 44} {n 45 51} {ing 52 76} {sil 77 99}]}
{105 [{sil 0 18} {m 19 36} {iy 37 52} {n 53 59} {ing 60 88} {sil 89 115}]}
{125 [{sil 0 19} {m 20 41} {iy 42 60} {n 61 69} {ing 70 103} {sil 104 134}]}

normalised results =
{72 [{sil 0 11} {m 17 35} {iy 36 49} {n 50 56} {ing 57 83} {sil 85 99}]}
{80 [{sil 0 12} {m 16 34} {iy 35 49} {n 50 56} {ing 58 83} {sil 84 95}]}
{91 [{sil 0 15} {m 18 34} {iy 35 48} {n 49 56} {ing 57 84} {sil 85 109}]}
{105 [{sil 0 18} {m 18 34} {iy 35 50} {n 50 56} {ing 57 84} {sil 85 110}]}
{125 [{sil 0 19} {m 16 33} {iy 34 48} {n 49 55} {ing 56 82} {sil 83 107}]}

ruleAligned = [{{m 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{iy 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{n 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{ing 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {m 17 35} {iy 36 49} {n 50 56} {ing 57 83} {sil 85 85}]}
{80 [{sil 0 0} {m 16 34} {iy 35 49} {n 50 56} {ing 58 83} {sil 84 84}]}
{91 [{sil 0 0} {m 18 34} {iy 35 48} {n 49 56} {ing 57 84} {sil 85 85}]}
{105 [{sil 0 0} {m 18 34} {iy 35 50} {n 50 56} {ing 57 84} {sil 85 85}]}
{125 [{sil 0 0} {m 16 33} {iy 34 48} {n 49 55} {ing 56 82} {sil 83 83}]}

timeAligned = [{{m 17 34} [{0 1} {1 1} {4 1} {2 1} {3 1}]} {{iy 35 49} [{1 2} {2 2} {3 2} {4 2} {0 2}]} {{n 50 56} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{ing 57 83} [{0 4} {2 4} {3 4} {4 4} {1 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 33
i, iTime, newITime, timeStartFrom = 2 1 2 48
i, iTime, newITime, timeStartFrom = 3 2 3 55
combinedVerdict    = [{m 0} {iy 0} {n 0} {ing 0}]
ruleAlignedVerdict = [{m 0} {iy 0} {n 0} {ing 0}]

score->
+2 for m
+2 for iy
+2 for n
+2 for ing
score<-: 13
testPronounce m good iy good n good ih good ng good
publish->
phonsToAlphas = [{[m] m} {[iy] ea} {[n] n} {[ih] i} {[ng] ng}]
getVerdict<-:new {m [m] 0}
getVerdict<-:new {ea [iy] 0}
getVerdict<-:new {n [n] 0}
getVerdict<-:new {i [ih] 0}
getVerdict<-:new {ng [ng] 0}
lettersVerdicts = [{m [m] 0} {ea [iy] 0} {n [n] 0} {i [ih] 0} {ng [ng] 0}]
publish<-
{
  "word": "meaning",
  "results": [
    {
      "letters": "m",
      "phonemes": "m",
      "verdict": "good"
    },
    {
      "letters": "ea",
      "phonemes": "iː",
      "verdict": "good"
    },
    {
      "letters": "n",
      "phonemes": "n",
      "verdict": "good"
    },
    {
      "letters": "i",
      "phonemes": "ɪ",
      "verdict": "good"
    },
    {
      "letters": "ng",
      "phonemes": "ŋ",
      "verdict": "good"
    }
  ],
  "err": null
}
