Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_bd6949bd-467e-4b16-a10f-100d1a1d315b audiofile /Users/test/go/src/Phonemes/audio_clips/climb1_colin.wav word climb dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  2.012062



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.64 0.94 1.58

 start3, duration3, end3 =  0.66 0.4 1.06

 Initial start, duration, end =  0.54 1.04 1.58

 Cut at: start, duration =  0.54 1.4520619999999997     guard_end =  1.9920619999999998 

Running scan for frate = 125
Running scan for frate = 125
Considering guard n with value 3 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard zh with value 1 for kl ...
Considering guard z with value 1 for kl ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard y with value 7.199999999999999 for l ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard zh with value 2.4000000000000004 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 1.4 for m ...
candidateGuards = map[ch:true]
Picking guard, ch

frate, target rule = 125 public <climb> = (((sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_kl> zh)] | [(zh <any_Cx_zh_p_z_kl>)]) (kl | ((<any_Cx_zh_p_z_kl> zh) | (zh <any_Cx_zh_p_z_kl>)))) ((([(<any_Vx_zh_zh_ay_noSlide> zh)] | [(zh <any_Vx_zh_zh_ay_noSlide>)]) ([(<any_Cx_zh_zh_m_kl> zh)] | [(zh <any_Cx_zh_zh_m_kl>)])) (ay | ((<any_Vx_zh_zh_ay_noSlide> zh) | (zh <any_Vx_zh_zh_ay_noSlide>)))) (([(<any_Cx_ch_zh_m> ch)] | [(ch <any_Cx_ch_zh_m>)]) (m | ((<any_Cx_ch_zh_m> ch) | (ch <any_Cx_ch_zh_m>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_ch_m_n> n)] | [(n <any_Cx_ch_m_n>)]) sil))
Considering guard ch with value 1.4 for m ...
candidateGuards = map[ch:true]
Picking guard, ch

Running scan for frate = 105
frate, target rule = 125 public <climb> = (((sil [((d <any_Cx_k_d_b>) | (<any_Cx_k_d_b> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil b (sil [((d <any_Cx_k_d_b>) | (<any_Cx_k_d_b> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_n_b_d_k_l> n)] | [(n <any_Cx_n_b_d_k_l>)]) (k | d | ((<any_Cx_n_b_d_k_l> n) | (n <any_Cx_n_b_d_k_l>)))) (([(<any_Cx_y_n_l_k> y)] | [(y <any_Cx_y_n_l_k>)]) (l | ((<any_Cx_y_n_l> y) | (y <any_Cx_y_n_l>)))) ((([(<any_Vx_sh_y_ay_noSlide> sh)] | [(sh <any_Vx_sh_y_ay_noSlide>)]) ([(<any_Cx_sh_y_m_l> sh)] | [(sh <any_Cx_sh_y_m_l>)])) (ay | ((<any_Vx_sh_y_ay_noSlide> sh) | (sh <any_Vx_sh_y_ay_noSlide>)))) (([(<any_Cx_ch_sh_m> ch)] | [(ch <any_Cx_ch_sh_m>)]) (m | ((<any_Cx_ch_sh_m> ch) | (ch <any_Cx_ch_sh_m>)))) (([(<any_vowel_noSlide> l)] | [(l <any_vowel_noSlide>)]) ([(<any_Cx_ch_m_l> l)] | [(l <any_Cx_ch_m_l>)]) sil))
Considering guard z with value 1 for kl ...
Considering guard zh with value 1 for kl ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Running scan for frate = 105
Considering guard zh with value 2.4000000000000004 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard n with value 3 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard y with value 7.199999999999999 for l ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 1.4 for m ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 1.4 for m ...
candidateGuards = map[ch:true]
Picking guard, ch

frate, target rule = 105 public <climb> = (((sil [((g <any_Cx_k_g_b>) | (<any_Cx_k_g_b> g))] [((g <any_vowel_noSlide>) | (<any_vowel_noSlide> g))]) | (sil b (sil [((g <any_Cx_k_g_b>) | (<any_Cx_k_g_b> g))] [((g <any_vowel_noSlide>) | (<any_vowel_noSlide> g))]))) (([(<any_Cx_n_b_g_k_l> n)] | [(n <any_Cx_n_b_g_k_l>)]) (k | d | ((<any_Cx_n_b_g_k_l> n) | (n <any_Cx_n_b_g_k_l>)))) (([(<any_Cx_y_n_l_k> y)] | [(y <any_Cx_y_n_l_k>)]) (l | ((<any_Cx_y_n_l> y) | (y <any_Cx_y_n_l>)))) ((([(<any_Vx_sh_y_ay_noSlide> sh)] | [(sh <any_Vx_sh_y_ay_noSlide>)]) ([(<any_Cx_sh_y_m_l> sh)] | [(sh <any_Cx_sh_y_m_l>)])) (ay | ((<any_Vx_sh_y_ay_noSlide> sh) | (sh <any_Vx_sh_y_ay_noSlide>)))) (([(<any_Cx_ch_sh_m> ch)] | [(ch <any_Cx_ch_sh_m>)]) (m | ((<any_Cx_ch_sh_m> ch) | (ch <any_Cx_ch_sh_m>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_ch_m_n> n)] | [(n <any_Cx_ch_m_n>)]) sil))
Running scan for frate = 91
frate, target rule = 105 public <climb> = (((sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_z_p_z_kl> z)] | [(z <any_Cx_z_p_z_kl>)]) (kl | ((<any_Cx_z_p_z_kl> z) | (z <any_Cx_z_p_z_kl>)))) ((([(<any_Vx_zh_z_ay_noSlide> zh)] | [(zh <any_Vx_zh_z_ay_noSlide>)]) ([(<any_Cx_zh_z_m_kl> zh)] | [(zh <any_Cx_zh_z_m_kl>)])) (ay | ((<any_Vx_zh_z_ay_noSlide> zh) | (zh <any_Vx_zh_z_ay_noSlide>)))) (([(<any_Cx_ch_zh_m> ch)] | [(ch <any_Cx_ch_zh_m>)]) (m | ((<any_Cx_ch_zh_m> ch) | (ch <any_Cx_ch_zh_m>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_ch_m_n> n)] | [(n <any_Cx_ch_m_n>)]) sil))
Running scan for frate = 91
Considering guard n with value 3 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard zh with value 1 for kl ...
Considering guard z with value 1 for kl ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard y with value 7.199999999999999 for l ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 1.4 for m ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard zh with value 2.4000000000000004 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 91 public <climb> = (((sil [((p <any_Cx_k_p_b>) | (<any_Cx_k_p_b> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]) | (sil b (sil [((p <any_Cx_k_p_b>) | (<any_Cx_k_p_b> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]))) (([(<any_Cx_n_b_p_k_l> n)] | [(n <any_Cx_n_b_p_k_l>)]) (k | d | ((<any_Cx_n_b_p_k_l> n) | (n <any_Cx_n_b_p_k_l>)))) (([(<any_Cx_y_n_l_k> y)] | [(y <any_Cx_y_n_l_k>)]) (l | ((<any_Cx_y_n_l> y) | (y <any_Cx_y_n_l>)))) ((([(<any_Vx_sh_y_ay_noSlide> sh)] | [(sh <any_Vx_sh_y_ay_noSlide>)]) ([(<any_Cx_sh_y_m_l> sh)] | [(sh <any_Cx_sh_y_m_l>)])) (ay | ((<any_Vx_sh_y_ay_noSlide> sh) | (sh <any_Vx_sh_y_ay_noSlide>)))) (([(<any_Cx_ch_sh_m> ch)] | [(ch <any_Cx_ch_sh_m>)]) (m | ((<any_Cx_ch_sh_m> ch) | (ch <any_Cx_ch_sh_m>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_ch_m_b> b)] | [(b <any_Cx_ch_m_b>)]) sil))
Running scan for frate = 80
Considering guard ch with value 1.4 for m ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard n with value 3 for k ...
candidateGuards = map[n:true]
Picking guard, n

frate, target rule = 91 public <climb> = (((sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_kl> zh)] | [(zh <any_Cx_zh_p_z_kl>)]) (kl | ((<any_Cx_zh_p_z_kl> zh) | (zh <any_Cx_zh_p_z_kl>)))) ((([(<any_Vx_zh_zh_ay_noSlide> zh)] | [(zh <any_Vx_zh_zh_ay_noSlide>)]) ([(<any_Cx_zh_zh_m_kl> zh)] | [(zh <any_Cx_zh_zh_m_kl>)])) (ay | ((<any_Vx_zh_zh_ay_noSlide> zh) | (zh <any_Vx_zh_zh_ay_noSlide>)))) (([(<any_Cx_ch_zh_m> ch)] | [(ch <any_Cx_ch_zh_m>)]) (m | ((<any_Cx_ch_zh_m> ch) | (ch <any_Cx_ch_zh_m>)))) (([(<any_vowel_noSlide> l)] | [(l <any_vowel_noSlide>)]) ([(<any_Cx_ch_m_l> l)] | [(l <any_Cx_ch_m_l>)]) sil))
Considering guard y with value 7.199999999999999 for l ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 80
Considering guard ch with value 1.4 for m ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard zh with value 1 for kl ...
Considering guard z with value 1 for kl ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

frate, target rule = 80 public <climb> = (((sil [((ch <any_Cx_k_ch_b>) | (<any_Cx_k_ch_b> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil b (sil [((ch <any_Cx_k_ch_b>) | (<any_Cx_k_ch_b> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_n_b_ch_k_l> n)] | [(n <any_Cx_n_b_ch_k_l>)]) (k | d | ((<any_Cx_n_b_ch_k_l> n) | (n <any_Cx_n_b_ch_k_l>)))) (([(<any_Cx_y_n_l_k> y)] | [(y <any_Cx_y_n_l_k>)]) (l | ((<any_Cx_y_n_l> y) | (y <any_Cx_y_n_l>)))) ((([(<any_Vx_sh_y_ay_noSlide> sh)] | [(sh <any_Vx_sh_y_ay_noSlide>)]) ([(<any_Cx_sh_y_m_l> sh)] | [(sh <any_Cx_sh_y_m_l>)])) (ay | ((<any_Vx_sh_y_ay_noSlide> sh) | (sh <any_Vx_sh_y_ay_noSlide>)))) (([(<any_Cx_ch_sh_m> ch)] | [(ch <any_Cx_ch_sh_m>)]) (m | ((<any_Cx_ch_sh_m> ch) | (ch <any_Cx_ch_sh_m>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_ch_m_d> d)] | [(d <any_Cx_ch_m_d>)]) sil))
Considering guard zh with value 2.4000000000000004 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 1.4 for m ...
candidateGuards = map[ch:true]
Picking guard, ch

Running scan for frate = 72
frate, target rule = 80 public <climb> = (((sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_kl> zh)] | [(zh <any_Cx_zh_p_z_kl>)]) (kl | ((<any_Cx_zh_p_z_kl> zh) | (zh <any_Cx_zh_p_z_kl>)))) ((([(<any_Vx_zh_zh_ay_noSlide> zh)] | [(zh <any_Vx_zh_zh_ay_noSlide>)]) ([(<any_Cx_zh_zh_m_kl> zh)] | [(zh <any_Cx_zh_zh_m_kl>)])) (ay | ((<any_Vx_zh_zh_ay_noSlide> zh) | (zh <any_Vx_zh_zh_ay_noSlide>)))) (([(<any_Cx_ch_zh_m> ch)] | [(ch <any_Cx_ch_zh_m>)]) (m | ((<any_Cx_ch_zh_m> ch) | (ch <any_Cx_ch_zh_m>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_ch_m_d> d)] | [(d <any_Cx_ch_m_d>)]) sil))
Considering guard n with value 3 for k ...
candidateGuards = map[n:true]
Picking guard, n

Running scan for frate = 72
Considering guard y with value 7.199999999999999 for l ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard z with value 1 for kl ...
Considering guard zh with value 1 for kl ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 2.4000000000000004 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 1.4 for m ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 1.4 for m ...
candidateGuards = map[ch:true]
Picking guard, ch

frate, target rule = 72 public <climb> = (((sil [((t <any_Cx_k_t_b>) | (<any_Cx_k_t_b> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil b (sil [((t <any_Cx_k_t_b>) | (<any_Cx_k_t_b> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_n_b_t_k_l> n)] | [(n <any_Cx_n_b_t_k_l>)]) (k | d | ((<any_Cx_n_b_t_k_l> n) | (n <any_Cx_n_b_t_k_l>)))) (([(<any_Cx_y_n_l_k> y)] | [(y <any_Cx_y_n_l_k>)]) (l | ((<any_Cx_y_n_l> y) | (y <any_Cx_y_n_l>)))) ((([(<any_Vx_sh_y_ay_noSlide> sh)] | [(sh <any_Vx_sh_y_ay_noSlide>)]) ([(<any_Cx_sh_y_m_l> sh)] | [(sh <any_Cx_sh_y_m_l>)])) (ay | ((<any_Vx_sh_y_ay_noSlide> sh) | (sh <any_Vx_sh_y_ay_noSlide>)))) (([(<any_Cx_ch_sh_m> ch)] | [(ch <any_Cx_ch_sh_m>)]) (m | ((<any_Cx_ch_sh_m> ch) | (ch <any_Cx_ch_sh_m>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_ch_m_d> d)] | [(d <any_Cx_ch_m_d>)]) sil))
frate, target rule = 72 public <climb> = (((sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_z_p_z_kl> z)] | [(z <any_Cx_z_p_z_kl>)]) (kl | ((<any_Cx_z_p_z_kl> z) | (z <any_Cx_z_p_z_kl>)))) ((([(<any_Vx_zh_z_ay_noSlide> zh)] | [(zh <any_Vx_zh_z_ay_noSlide>)]) ([(<any_Cx_zh_z_m_kl> zh)] | [(zh <any_Cx_zh_z_m_kl>)])) (ay | ((<any_Vx_zh_z_ay_noSlide> zh) | (zh <any_Vx_zh_z_ay_noSlide>)))) (([(<any_Cx_ch_zh_m> ch)] | [(ch <any_Cx_ch_zh_m>)]) (m | ((<any_Cx_ch_zh_m> ch) | (ch <any_Cx_ch_zh_m>)))) (([(<any_vowel_noSlide> l)] | [(l <any_vowel_noSlide>)]) ([(<any_Cx_ch_m_l> l)] | [(l <any_Cx_ch_m_l>)]) sil))

results =
{72 [{sil 0 11} {kl 12 24} {ay 25 43} {m 44 53} {sil 54 79}]}
{80 [{sil 0 12} {kl 13 27} {ay 28 48} {m 49 59} {sil 60 86}]}
{91 [{sil 0 15} {kl 16 31} {ay 32 58} {m 59 64} {l 65 67} {d 68 75} {sil 76 130}]}
{105 [{sil 0 18} {kl 19 35} {ay 36 67} {m 68 75} {ah 76 82} {n 83 92} {sil 93 151}]}
{125 [{sil 0 20} {kl 21 41} {ay 42 84} {m 85 107} {sil 108 178}]}

normalised results =
{72 [{sil 0 11} {kl 17 33} {ay 35 60} {m 61 74} {sil 75 110}]}
{80 [{sil 0 12} {kl 16 34} {ay 35 60} {m 61 74} {sil 75 108}]}
{91 [{sil 0 15} {kl 18 34} {ay 35 64} {m 65 70} {l 71 71} {d 75 82} {sil 84 143}]}
{105 [{sil 0 18} {kl 18 33} {ay 34 64} {m 65 71} {ah 72 78} {n 79 88} {sil 89 144}]}
{125 [{sil 0 20} {kl 17 33} {ay 34 67} {m 68 86} {sil 86 142}]}

ruleAligned = [{{kl 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ay 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{m 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {kl 17 33} {ay 35 60} {m 61 74} {sil 75 75}]}
{80 [{sil 0 0} {kl 16 34} {ay 35 60} {m 61 74} {sil 75 75}]}
{91 [{sil 0 0} {kl 18 34} {ay 35 64} {m 65 70} {l 71 71} {d 75 82} {sil 84 84}]}
{105 [{sil 0 0} {kl 18 33} {ay 34 64} {m 65 71} {ah 72 78} {n 79 88} {sil 89 89}]}
{125 [{sil 0 0} {kl 17 33} {ay 34 67} {m 68 86} {sil 86 86}]}

timeAligned = [{{kl 17 33} [{0 1} {1 1} {4 1} {2 1} {3 1}]} {{ay 35 64} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{m 65 74} [{0 3} {1 3} {2 3} {3 3} {4 3}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 33
i, iTime, newITime, timeStartFrom = 2 1 2 60
combinedVerdict    = [{kl 0} {ay 0} {m 0}]
ruleAlignedVerdict = [{kl 0} {ay 0} {m 0}]

score->
+2 for kl
+2 for ay
+2 for m
score<-: 11

results =
{72 [{sil 0 11} {k 12 20} {l 21 24} {ay 25 43} {m 44 53} {sil 54 79}]}
{80 [{sil 0 12} {k 13 23} {l 24 27} {ay 28 48} {m 49 59} {sil 60 86}]}
{91 [{sil 0 15} {k 16 26} {l 27 30} {ay 31 58} {m 59 65} {d 66 76} {b 77 79} {sil 80 130}]}
{105 [{sil 0 18} {k 19 30} {l 31 35} {ay 36 67} {m 68 75} {ah 76 82} {n 83 92} {sil 93 151}]}
{125 [{sil 0 20} {k 21 34} {l 35 40} {ay 41 84} {m 85 107} {sil 108 178}]}

normalised results =
{72 [{sil 0 11} {k 17 28} {l 29 33} {ay 35 60} {m 61 74} {sil 75 110}]}
{80 [{sil 0 12} {k 16 29} {l 30 34} {ay 35 60} {m 61 74} {sil 75 108}]}
{91 [{sil 0 15} {k 18 29} {l 30 33} {ay 34 64} {m 65 71} {d 73 84} {b 85 85} {sil 88 143}]}
{105 [{sil 0 18} {k 18 29} {l 30 33} {ay 34 64} {m 65 71} {ah 72 78} {n 79 88} {sil 89 144}]}
{125 [{sil 0 20} {k 17 27} {l 28 32} {ay 33 67} {m 68 86} {sil 86 142}]}

ruleAligned = [{{k 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{l 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{ay 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{m 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {k 17 28} {l 29 33} {ay 35 60} {m 61 74} {sil 75 75}]}
{80 [{sil 0 0} {k 16 29} {l 30 34} {ay 35 60} {m 61 74} {sil 75 75}]}
{91 [{sil 0 0} {k 18 29} {l 30 33} {ay 34 64} {m 65 71} {d 73 84} {b 85 85} {sil 88 88}]}
{105 [{sil 0 0} {k 18 29} {l 30 33} {ay 34 64} {m 65 71} {ah 72 78} {n 79 88} {sil 89 89}]}
{125 [{sil 0 0} {k 17 27} {l 28 32} {ay 33 67} {m 68 86} {sil 86 86}]}

timeAligned = [{{k 17 29} [{0 1} {1 1} {4 1} {2 1} {3 1}]} {{l 30 33} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{ay 34 64} [{2 3} {3 3} {4 3} {0 3} {1 3}]} {{m 65 74} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 27
i, iTime, newITime, timeStartFrom = 2 1 2 32
i, iTime, newITime, timeStartFrom = 3 2 3 60
combinedVerdict    = [{k 0} {l 0} {ay 0} {m 0}]
ruleAlignedVerdict = [{k 0} {l 0} {ay 0} {m 0}]

score->
+2 for k
+2 for l
+2 for ay
+2 for m
score<-: 13
testPronounce k good l good ay good m good
publish->
phonsToAlphas = [{[k] c} {[l] l} {[ay] i} {[m] mb}]
getVerdict<-:new {c [k] 0}
getVerdict<-:new {l [l] 0}
getVerdict<-:new {i [ay] 0}
getVerdict<-:new {mb [m] 0}
lettersVerdicts = [{c [k] 0} {l [l] 0} {i [ay] 0} {mb [m] 0}]
publish<-
{
  "word": "climb",
  "results": [
    {
      "letters": "c",
      "phonemes": "k",
      "verdict": "good"
    },
    {
      "letters": "l",
      "phonemes": "l",
      "verdict": "good"
    },
    {
      "letters": "i",
      "phonemes": "ɑɪ",
      "verdict": "good"
    },
    {
      "letters": "mb",
      "phonemes": "m",
      "verdict": "good"
    }
  ],
  "err": null
}
