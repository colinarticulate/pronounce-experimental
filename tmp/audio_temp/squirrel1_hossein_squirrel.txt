Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_f6af8cac-3bce-45e6-a4f8-a6681c8fceec audiofile /Users/test/go/src/Phonemes/audio_clips/squirrel1_hossein.wav word squirrel dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  2.794313



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.76 1.06 1.82

 start3, duration3, end3 =  0.76 0.6 1.3599999999999999

 Initial start, duration, end =  0.66 1.1600000000000001 1.82

 Cut at: start, duration =  0.66 1.61     guard_end =  2.27 

Running scan for frate = 125
Running scan for frate = 125
Running scan for frate = 125
Running scan for frate = 125
Running scan for frate = 125
Running scan for frate = 125
Running scan for frate = 125
Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Running scan for frate = 125
Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard zh with value 4 for w ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard zh with value 4 for w ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard m with value 4 for kw ...
Considering guard w with value 4 for kw ...
candidateGuards = map[m:true w:true]
Picking guard, m

Considering guard zh with value 4 for w ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard sh with value 3 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard z with value 1.6 for ih ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard sh with value 3 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard oy with value 6 for kw ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard y with value 3.5999999999999996 for r ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard s with value 4 for r ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard s with value 4 for r ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard sh with value 3 for axl ...
Considering guard ch with value 3 for axl ...
candidateGuards = map[ch:true sh:true]
Picking guard, sh

Considering guard sh with value 3 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 3 for axl ...
Considering guard sh with value 3 for axl ...
candidateGuards = map[ch:true sh:true]
Picking guard, ch

Considering guard zh with value 4 for w ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 3 for axl ...
Considering guard sh with value 3 for axl ...
candidateGuards = map[ch:true sh:true]
Picking guard, ch

Considering guard z with value 2 for r ...
Considering guard y with value 2 for r ...
candidateGuards = map[y:true z:true]
Picking guard, z

Considering guard sh with value 3 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 125 public <squirrel> = (((sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil p (sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_oy_p_sh_s_k> oy)] | [(oy <any_Cx_oy_p_sh_s_k>)]) (s | z | ((<any_Cx_oy_p_sh_s_k> oy) | (oy <any_Cx_oy_p_sh_s_k>)))) (([(<any_Cx_n_oy_k_w_s> n)] | [(n <any_Cx_n_oy_k_w_s>)]) (k | ((<any_Cx_n_oy_k_w> n) | (n <any_Cx_n_oy_k_w>)))) (([(<any_Cx_zh_n_w_ax_k> zh)] | [(zh <any_Cx_zh_n_w_ax_k>)]) (w | ((<any_Cx_zh_n_w_ax_k> zh) | (zh <any_Cx_zh_n_w_ax_k>)))) (([(<any_Cx_sh_zh_ax_r_w> sh)] | [(sh <any_Cx_sh_zh_ax_r_w>)]) (ax | ((<any_Cx_sh_zh_ax_r_w> sh) | (sh <any_Cx_sh_zh_ax_r_w>)))) (([(<any_Cx_y_sh_r_ax> y)] | [(y <any_Cx_y_sh_r_ax>)]) (r | ((<any_Cx_y_sh_r_axl_ax> y) | (y <any_Cx_y_sh_r_axl_ax>)))) (([(<any_Cx_sh_y_axl_r> sh)] | [(sh <any_Cx_sh_y_axl_r>)]) (axl | ((<any_Cx_sh_y_axl_r> sh) | (sh <any_Cx_sh_y_axl_r>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_sh_axl_f> f)] | [(f <any_Cx_sh_axl_f>)]) sil))
Considering guard y with value 3.5999999999999996 for ax ...
candidateGuards = map[y:true]
Picking guard, y

frate, target rule = 125 public <squirrel> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_oy_p_ch_s_k> oy)] | [(oy <any_Cx_oy_p_ch_s_k>)]) (s | z | ((<any_Cx_oy_p_ch_s_k> oy) | (oy <any_Cx_oy_p_ch_s_k>)))) (([(<any_Cx_n_oy_k_w_s> n)] | [(n <any_Cx_n_oy_k_w_s>)]) (k | ((<any_Cx_n_oy_k_w> n) | (n <any_Cx_n_oy_k_w>)))) (([(<any_Cx_zh_n_w_k> zh)] | [(zh <any_Cx_zh_n_w_k>)]) (w | ((<any_Cx_zh_n_w_k> zh) | (zh <any_Cx_zh_n_w_k>)))) ((([(<any_Vx_sh_zh_ih_noSlide> sh)] | [(sh <any_Vx_sh_zh_ih_noSlide>)]) ([(<any_Cx_sh_zh_r_w> sh)] | [(sh <any_Cx_sh_zh_r_w>)])) (ih | ((<any_Vx_sh_zh_ih_noSlide> sh) | (sh <any_Vx_sh_zh_ih_noSlide>)))) (([(<any_Cx_s_sh_r> s)] | [(s <any_Cx_s_sh_r>)]) (r | ((<any_Cx_s_sh_r_axl> s) | (s <any_Cx_s_sh_r_axl>)))) (([(<any_Cx_ch_s_axl_r> ch)] | [(ch <any_Cx_ch_s_axl_r>)]) (axl | ((<any_Cx_ch_s_axl_r> ch) | (ch <any_Cx_ch_s_axl_r>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_ch_axl_thr> thr)] | [(thr <any_Cx_ch_axl_thr>)]) sil))
Considering guard z with value 2 for r ...
candidateGuards = map[z:true]
Picking guard, z

frate, target rule = 125 public <squirrel> = (((sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]) | (sil p (sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]))) (([(<any_Cx_oy_p_th_s_kw> oy)] | [(oy <any_Cx_oy_p_th_s_kw>)]) (s | z | ((<any_Cx_oy_p_th_s_kw> oy) | (oy <any_Cx_oy_p_th_s_kw>)))) (([(<any_Cx_m_oy_kw_s> m)] | [(m <any_Cx_m_oy_kw_s>)]) (kw | ((<any_Cx_m_oy_kw> m) | (m <any_Cx_m_oy_kw>)))) ((([(<any_Vx_z_m_ih_noSlide> z)] | [(z <any_Vx_z_m_ih_noSlide>)]) ([(<any_Cx_z_m_r_kw> z)] | [(z <any_Cx_z_m_r_kw>)])) (ih | ((<any_Vx_z_m_ih_noSlide> z) | (z <any_Vx_z_m_ih_noSlide>)))) (([(<any_Cx_s_z_r> s)] | [(s <any_Cx_s_z_r>)]) (r | ((<any_Cx_s_z_r_axl> s) | (s <any_Cx_s_z_r_axl>)))) (([(<any_Cx_ch_s_axl_r> ch)] | [(ch <any_Cx_ch_s_axl_r>)]) (axl | ((<any_Cx_ch_s_axl_r> ch) | (ch <any_Cx_ch_s_axl_r>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_ch_axl_hh> hh)] | [(hh <any_Cx_ch_axl_hh>)]) sil))
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard y with value 3.5999999999999996 for ax ...
candidateGuards = map[y:true]
Picking guard, y

Running scan for frate = 105
Running scan for frate = 105
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 105
Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

frate, target rule = 125 public <squirrel> = (((sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil p (sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_oy_p_sh_s_k> oy)] | [(oy <any_Cx_oy_p_sh_s_k>)]) (s | z | ((<any_Cx_oy_p_sh_s_k> oy) | (oy <any_Cx_oy_p_sh_s_k>)))) (([(<any_Cx_n_oy_k_w_s> n)] | [(n <any_Cx_n_oy_k_w_s>)]) (k | ((<any_Cx_n_oy_k_w> n) | (n <any_Cx_n_oy_k_w>)))) (([(<any_Cx_zh_n_w_k> zh)] | [(zh <any_Cx_zh_n_w_k>)]) (w | ((<any_Cx_zh_n_w_k> zh) | (zh <any_Cx_zh_n_w_k>)))) ((([(<any_Vx_sh_zh_ih_noSlide> sh)] | [(sh <any_Vx_sh_zh_ih_noSlide>)]) ([(<any_Cx_sh_zh_r_w> sh)] | [(sh <any_Cx_sh_zh_r_w>)])) (ih | ((<any_Vx_sh_zh_ih_noSlide> sh) | (sh <any_Vx_sh_zh_ih_noSlide>)))) (([(<any_Cx_z_sh_r_ax> z)] | [(z <any_Cx_z_sh_r_ax>)]) (r | ((<any_Cx_z_sh_r_ax> z) | (z <any_Cx_z_sh_r_ax>)))) (([(<any_Cx_y_z_ax_r> y)] | [(y <any_Cx_y_z_ax_r>)]) (ax | ((<any_Cx_y_z_ax_l_r> y) | (y <any_Cx_y_z_ax_l_r>)))) (([(<any_Cx_sh_y_l_ax> sh)] | [(sh <any_Cx_sh_y_l_ax>)]) (l | ((<any_Cx_sh_y_l_ax> sh) | (sh <any_Cx_sh_y_l_ax>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_thr> thr)] | [(thr <any_Cx_sh_l_thr>)]) sil))
Considering guard m with value 4 for kw ...
Considering guard w with value 4 for kw ...
candidateGuards = map[m:true w:true]
Picking guard, m

Considering guard oy with value 6 for kw ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard m with value 4 for kw ...
Considering guard w with value 4 for kw ...
candidateGuards = map[m:true w:true]
Picking guard, m

Considering guard zh with value 4 for w ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard z with value 1.6 for ih ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard z with value 1.6 for ih ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard sh with value 3 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard s with value 4 for r ...
candidateGuards = map[s:true]
Picking guard, s

Running scan for frate = 105
Considering guard z with value 2 for r ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard zh with value 2 for ax ...
Considering guard z with value 2 for ax ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard s with value 4 for r ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard sh with value 3 for axl ...
Considering guard ch with value 3 for axl ...
candidateGuards = map[ch:true sh:true]
Picking guard, sh

Considering guard y with value 3.5999999999999996 for ax ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3.5999999999999996 for r ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 3 for axl ...
Considering guard sh with value 3 for axl ...
candidateGuards = map[ch:true sh:true]
Picking guard, ch

Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

frate, target rule = 105 public <squirrel> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_oy_p_ch_s_kw> oy)] | [(oy <any_Cx_oy_p_ch_s_kw>)]) (s | z | ((<any_Cx_oy_p_ch_s_kw> oy) | (oy <any_Cx_oy_p_ch_s_kw>)))) (([(<any_Cx_m_oy_kw_s> m)] | [(m <any_Cx_m_oy_kw_s>)]) (kw | ((<any_Cx_m_oy_kw> m) | (m <any_Cx_m_oy_kw>)))) ((([(<any_Vx_z_m_ih_noSlide> z)] | [(z <any_Vx_z_m_ih_noSlide>)]) ([(<any_Cx_z_m_r_kw> z)] | [(z <any_Cx_z_m_r_kw>)])) (ih | ((<any_Vx_z_m_ih_noSlide> z) | (z <any_Vx_z_m_ih_noSlide>)))) (([(<any_Cx_s_z_r> s)] | [(s <any_Cx_s_z_r>)]) (r | ((<any_Cx_s_z_r_axl> s) | (s <any_Cx_s_z_r_axl>)))) (([(<any_Cx_sh_s_axl_r> sh)] | [(sh <any_Cx_sh_s_axl_r>)]) (axl | ((<any_Cx_sh_s_axl_r> sh) | (sh <any_Cx_sh_s_axl_r>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_sh_axl_m> m)] | [(m <any_Cx_sh_axl_m>)]) sil))
Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

frate, target rule = 125 public <squirrel> = (((sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]) | (sil p (sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]))) (([(<any_Cx_oy_p_th_s_kw> oy)] | [(oy <any_Cx_oy_p_th_s_kw>)]) (s | z | ((<any_Cx_oy_p_th_s_kw> oy) | (oy <any_Cx_oy_p_th_s_kw>)))) (([(<any_Cx_m_oy_kw_s> m)] | [(m <any_Cx_m_oy_kw_s>)]) (kw | ((<any_Cx_m_oy_kw> m) | (m <any_Cx_m_oy_kw>)))) ((([(<any_Vx_z_m_ih_noSlide> z)] | [(z <any_Vx_z_m_ih_noSlide>)]) ([(<any_Cx_z_m_r_kw> z)] | [(z <any_Cx_z_m_r_kw>)])) (ih | ((<any_Vx_z_m_ih_noSlide> z) | (z <any_Vx_z_m_ih_noSlide>)))) (([(<any_Cx_z_z_r_ax> z)] | [(z <any_Cx_z_z_r_ax>)]) (r | ((<any_Cx_z_z_r_ax> z) | (z <any_Cx_z_z_r_ax>)))) (([(<any_Cx_y_z_ax_r> y)] | [(y <any_Cx_y_z_ax_r>)]) (ax | ((<any_Cx_y_z_ax_l_r> y) | (y <any_Cx_y_z_ax_l_r>)))) (([(<any_Cx_sh_y_l_ax> sh)] | [(sh <any_Cx_sh_y_l_ax>)]) (l | ((<any_Cx_sh_y_l_ax> sh) | (sh <any_Cx_sh_y_l_ax>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_thr> thr)] | [(thr <any_Cx_sh_l_thr>)]) sil))
frate, target rule = 125 public <squirrel> = (((sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil p (sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_oy_p_sh_s_k> oy)] | [(oy <any_Cx_oy_p_sh_s_k>)]) (s | z | ((<any_Cx_oy_p_sh_s_k> oy) | (oy <any_Cx_oy_p_sh_s_k>)))) (([(<any_Cx_n_oy_k_w_s> n)] | [(n <any_Cx_n_oy_k_w_s>)]) (k | ((<any_Cx_n_oy_k_w> n) | (n <any_Cx_n_oy_k_w>)))) (([(<any_Cx_zh_n_w_ax_k> zh)] | [(zh <any_Cx_zh_n_w_ax_k>)]) (w | ((<any_Cx_zh_n_w_ax_k> zh) | (zh <any_Cx_zh_n_w_ax_k>)))) (([(<any_Cx_sh_zh_ax_r_w> sh)] | [(sh <any_Cx_sh_zh_ax_r_w>)]) (ax | ((<any_Cx_sh_zh_ax_r_w> sh) | (sh <any_Cx_sh_zh_ax_r_w>)))) (([(<any_Cx_z_sh_r_ax_ax> z)] | [(z <any_Cx_z_sh_r_ax_ax>)]) (r | ((<any_Cx_z_sh_r_ax_ax> z) | (z <any_Cx_z_sh_r_ax_ax>)))) (([(<any_Cx_y_z_ax_r> y)] | [(y <any_Cx_y_z_ax_r>)]) (ax | ((<any_Cx_y_z_ax_l_r> y) | (y <any_Cx_y_z_ax_l_r>)))) (([(<any_Cx_sh_y_l_ax> sh)] | [(sh <any_Cx_sh_y_l_ax>)]) (l | ((<any_Cx_sh_y_l_ax> sh) | (sh <any_Cx_sh_y_l_ax>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_d> d)] | [(d <any_Cx_sh_l_d>)]) sil))
frate, target rule = 105 public <squirrel> = (((sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]) | (sil p (sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]))) (([(<any_Cx_oy_p_th_s_k> oy)] | [(oy <any_Cx_oy_p_th_s_k>)]) (s | z | ((<any_Cx_oy_p_th_s_k> oy) | (oy <any_Cx_oy_p_th_s_k>)))) (([(<any_Cx_n_oy_k_w_s> n)] | [(n <any_Cx_n_oy_k_w_s>)]) (k | ((<any_Cx_n_oy_k_w> n) | (n <any_Cx_n_oy_k_w>)))) (([(<any_Cx_zh_n_w_k> zh)] | [(zh <any_Cx_zh_n_w_k>)]) (w | ((<any_Cx_zh_n_w_k> zh) | (zh <any_Cx_zh_n_w_k>)))) ((([(<any_Vx_sh_zh_ih_noSlide> sh)] | [(sh <any_Vx_sh_zh_ih_noSlide>)]) ([(<any_Cx_sh_zh_r_w> sh)] | [(sh <any_Cx_sh_zh_r_w>)])) (ih | ((<any_Vx_sh_zh_ih_noSlide> sh) | (sh <any_Vx_sh_zh_ih_noSlide>)))) (([(<any_Cx_s_sh_r> s)] | [(s <any_Cx_s_sh_r>)]) (r | ((<any_Cx_s_sh_r_axl> s) | (s <any_Cx_s_sh_r_axl>)))) (([(<any_Cx_ch_s_axl_r> ch)] | [(ch <any_Cx_ch_s_axl_r>)]) (axl | ((<any_Cx_ch_s_axl_r> ch) | (ch <any_Cx_ch_s_axl_r>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_ch_axl_p> p)] | [(p <any_Cx_ch_axl_p>)]) sil))
Considering guard zh with value 4 for w ...
candidateGuards = map[zh:true]
Picking guard, zh

Running scan for frate = 91
Considering guard sh with value 3 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Running scan for frate = 105
Running scan for frate = 91
Considering guard z with value 2 for r ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard w with value 4 for kw ...
Considering guard m with value 4 for kw ...
candidateGuards = map[m:true w:true]
Picking guard, m

Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard y with value 3.5999999999999996 for ax ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 4 for w ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 4 for w ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 3 for axl ...
Considering guard sh with value 3 for axl ...
candidateGuards = map[ch:true sh:true]
Picking guard, sh

frate, target rule = 105 public <squirrel> = (((sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil p (sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_oy_p_sh_s_k> oy)] | [(oy <any_Cx_oy_p_sh_s_k>)]) (s | z | ((<any_Cx_oy_p_sh_s_k> oy) | (oy <any_Cx_oy_p_sh_s_k>)))) (([(<any_Cx_n_oy_k_w_s> n)] | [(n <any_Cx_n_oy_k_w_s>)]) (k | ((<any_Cx_n_oy_k_w> n) | (n <any_Cx_n_oy_k_w>)))) (([(<any_Cx_zh_n_w_k> zh)] | [(zh <any_Cx_zh_n_w_k>)]) (w | ((<any_Cx_zh_n_w_k> zh) | (zh <any_Cx_zh_n_w_k>)))) ((([(<any_Vx_sh_zh_ih_noSlide> sh)] | [(sh <any_Vx_sh_zh_ih_noSlide>)]) ([(<any_Cx_sh_zh_r_w> sh)] | [(sh <any_Cx_sh_zh_r_w>)])) (ih | ((<any_Vx_sh_zh_ih_noSlide> sh) | (sh <any_Vx_sh_zh_ih_noSlide>)))) (([(<any_Cx_z_sh_r_ax> z)] | [(z <any_Cx_z_sh_r_ax>)]) (r | ((<any_Cx_z_sh_r_ax> z) | (z <any_Cx_z_sh_r_ax>)))) (([(<any_Cx_y_z_ax_r> y)] | [(y <any_Cx_y_z_ax_r>)]) (ax | ((<any_Cx_y_z_ax_l_r> y) | (y <any_Cx_y_z_ax_l_r>)))) (([(<any_Cx_sh_y_l_ax> sh)] | [(sh <any_Cx_sh_y_l_ax>)]) (l | ((<any_Cx_sh_y_l_ax> sh) | (sh <any_Cx_sh_y_l_ax>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_thr> thr)] | [(thr <any_Cx_sh_l_thr>)]) sil))
Considering guard sh with value 3 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard z with value 1.6 for ih ...
candidateGuards = map[z:true]
Picking guard, z

frate, target rule = 125 public <squirrel> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_oy_p_ch_s_kw> oy)] | [(oy <any_Cx_oy_p_ch_s_kw>)]) (s | z | ((<any_Cx_oy_p_ch_s_kw> oy) | (oy <any_Cx_oy_p_ch_s_kw>)))) (([(<any_Cx_oy_oy_kw_ax_s> oy)] | [(oy <any_Cx_oy_oy_kw_ax_s>)]) (kw | ((<any_Cx_oy_oy_kw_ax> oy) | (oy <any_Cx_oy_oy_kw_ax>)))) (([(<any_Cx_zh_oy_ax_r_kw> zh)] | [(zh <any_Cx_zh_oy_ax_r_kw>)]) (ax | ((<any_Cx_zh_oy_ax_r_kw> zh) | (zh <any_Cx_zh_oy_ax_r_kw>)))) (([(<any_Cx_y_zh_r_ax> y)] | [(y <any_Cx_y_zh_r_ax>)]) (r | ((<any_Cx_y_zh_r_axl_ax> y) | (y <any_Cx_y_zh_r_axl_ax>)))) (([(<any_Cx_sh_y_axl_r> sh)] | [(sh <any_Cx_sh_y_axl_r>)]) (axl | ((<any_Cx_sh_y_axl_r> sh) | (sh <any_Cx_sh_y_axl_r>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_sh_axl_f> f)] | [(f <any_Cx_sh_axl_f>)]) sil))
Considering guard y with value 3.5999999999999996 for r ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard s with value 4 for r ...
candidateGuards = map[s:true]
Picking guard, s

Running scan for frate = 105
Considering guard s with value 4 for r ...
candidateGuards = map[s:true]
Picking guard, s

Running scan for frate = 91
Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard ch with value 3 for axl ...
Considering guard sh with value 3 for axl ...
candidateGuards = map[ch:true sh:true]
Picking guard, ch

Considering guard ch with value 3 for axl ...
Considering guard sh with value 3 for axl ...
candidateGuards = map[ch:true sh:true]
Picking guard, ch

Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard zh with value 4 for w ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 3 for axl ...
Considering guard sh with value 3 for axl ...
candidateGuards = map[ch:true sh:true]
Picking guard, ch

frate, target rule = 91 public <squirrel> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_oy_p_ch_s_kw> oy)] | [(oy <any_Cx_oy_p_ch_s_kw>)]) (s | z | ((<any_Cx_oy_p_ch_s_kw> oy) | (oy <any_Cx_oy_p_ch_s_kw>)))) (([(<any_Cx_m_oy_kw_s> m)] | [(m <any_Cx_m_oy_kw_s>)]) (kw | ((<any_Cx_m_oy_kw> m) | (m <any_Cx_m_oy_kw>)))) ((([(<any_Vx_z_m_ih_noSlide> z)] | [(z <any_Vx_z_m_ih_noSlide>)]) ([(<any_Cx_z_m_r_kw> z)] | [(z <any_Cx_z_m_r_kw>)])) (ih | ((<any_Vx_z_m_ih_noSlide> z) | (z <any_Vx_z_m_ih_noSlide>)))) (([(<any_Cx_s_z_r> s)] | [(s <any_Cx_s_z_r>)]) (r | ((<any_Cx_s_z_r_axl> s) | (s <any_Cx_s_z_r_axl>)))) (([(<any_Cx_ch_s_axl_r> ch)] | [(ch <any_Cx_ch_s_axl_r>)]) (axl | ((<any_Cx_ch_s_axl_r> ch) | (ch <any_Cx_ch_s_axl_r>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_ch_axl_hh> hh)] | [(hh <any_Cx_ch_axl_hh>)]) sil))
frate, target rule = 105 public <squirrel> = (((sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_oy_p_z_s_k> oy)] | [(oy <any_Cx_oy_p_z_s_k>)]) (s | z | ((<any_Cx_oy_p_z_s_k> oy) | (oy <any_Cx_oy_p_z_s_k>)))) (([(<any_Cx_n_oy_k_w_s> n)] | [(n <any_Cx_n_oy_k_w_s>)]) (k | ((<any_Cx_n_oy_k_w> n) | (n <any_Cx_n_oy_k_w>)))) (([(<any_Cx_zh_n_w_ax_k> zh)] | [(zh <any_Cx_zh_n_w_ax_k>)]) (w | ((<any_Cx_zh_n_w_ax_k> zh) | (zh <any_Cx_zh_n_w_ax_k>)))) (([(<any_Cx_sh_zh_ax_r_w> sh)] | [(sh <any_Cx_sh_zh_ax_r_w>)]) (ax | ((<any_Cx_sh_zh_ax_r_w> sh) | (sh <any_Cx_sh_zh_ax_r_w>)))) (([(<any_Cx_y_sh_r_ax> y)] | [(y <any_Cx_y_sh_r_ax>)]) (r | ((<any_Cx_y_sh_r_axl_ax> y) | (y <any_Cx_y_sh_r_axl_ax>)))) (([(<any_Cx_ch_y_axl_r> ch)] | [(ch <any_Cx_ch_y_axl_r>)]) (axl | ((<any_Cx_ch_y_axl_r> ch) | (ch <any_Cx_ch_y_axl_r>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_ch_axl_ng> ng)] | [(ng <any_Cx_ch_axl_ng>)]) sil))
Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard m with value 4 for kw ...
Considering guard w with value 4 for kw ...
candidateGuards = map[m:true w:true]
Picking guard, m

Considering guard sh with value 3 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard z with value 2 for ax ...
Considering guard zh with value 2 for ax ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard z with value 1.6 for ih ...
candidateGuards = map[z:true]
Picking guard, z

Running scan for frate = 80
Considering guard z with value 2 for r ...
Considering guard y with value 2 for r ...
candidateGuards = map[y:true z:true]
Picking guard, z

Considering guard zh with value 4 for w ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 91 public <squirrel> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_oy_p_ch_s_k> oy)] | [(oy <any_Cx_oy_p_ch_s_k>)]) (s | z | ((<any_Cx_oy_p_ch_s_k> oy) | (oy <any_Cx_oy_p_ch_s_k>)))) (([(<any_Cx_n_oy_k_w_s> n)] | [(n <any_Cx_n_oy_k_w_s>)]) (k | ((<any_Cx_n_oy_k_w> n) | (n <any_Cx_n_oy_k_w>)))) (([(<any_Cx_zh_n_w_k> zh)] | [(zh <any_Cx_zh_n_w_k>)]) (w | ((<any_Cx_zh_n_w_k> zh) | (zh <any_Cx_zh_n_w_k>)))) ((([(<any_Vx_sh_zh_ih_noSlide> sh)] | [(sh <any_Vx_sh_zh_ih_noSlide>)]) ([(<any_Cx_sh_zh_r_w> sh)] | [(sh <any_Cx_sh_zh_r_w>)])) (ih | ((<any_Vx_sh_zh_ih_noSlide> sh) | (sh <any_Vx_sh_zh_ih_noSlide>)))) (([(<any_Cx_s_sh_r> s)] | [(s <any_Cx_s_sh_r>)]) (r | ((<any_Cx_s_sh_r_axl> s) | (s <any_Cx_s_sh_r_axl>)))) (([(<any_Cx_ch_s_axl_r> ch)] | [(ch <any_Cx_ch_s_axl_r>)]) (axl | ((<any_Cx_ch_s_axl_r> ch) | (ch <any_Cx_ch_s_axl_r>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_ch_axl_ng> ng)] | [(ng <any_Cx_ch_axl_ng>)]) sil))
Considering guard y with value 2 for r ...
Considering guard z with value 2 for r ...
candidateGuards = map[y:true z:true]
Picking guard, z

Considering guard z with value 2 for r ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard y with value 3.5999999999999996 for ax ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 3 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Running scan for frate = 105
Considering guard y with value 3.5999999999999996 for ax ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3.5999999999999996 for ax ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 80
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard z with value 2 for r ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

frate, target rule = 105 public <squirrel> = (((sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil p (sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_oy_p_sh_s_k> oy)] | [(oy <any_Cx_oy_p_sh_s_k>)]) (s | z | ((<any_Cx_oy_p_sh_s_k> oy) | (oy <any_Cx_oy_p_sh_s_k>)))) (([(<any_Cx_n_oy_k_w_s> n)] | [(n <any_Cx_n_oy_k_w_s>)]) (k | ((<any_Cx_n_oy_k_w> n) | (n <any_Cx_n_oy_k_w>)))) (([(<any_Cx_zh_n_w_ax_k> zh)] | [(zh <any_Cx_zh_n_w_ax_k>)]) (w | ((<any_Cx_zh_n_w_ax_k> zh) | (zh <any_Cx_zh_n_w_ax_k>)))) (([(<any_Cx_sh_zh_ax_r_w> sh)] | [(sh <any_Cx_sh_zh_ax_r_w>)]) (ax | ((<any_Cx_sh_zh_ax_r_w> sh) | (sh <any_Cx_sh_zh_ax_r_w>)))) (([(<any_Cx_z_sh_r_ax_ax> z)] | [(z <any_Cx_z_sh_r_ax_ax>)]) (r | ((<any_Cx_z_sh_r_ax_ax> z) | (z <any_Cx_z_sh_r_ax_ax>)))) (([(<any_Cx_y_z_ax_r> y)] | [(y <any_Cx_y_z_ax_r>)]) (ax | ((<any_Cx_y_z_ax_l_r> y) | (y <any_Cx_y_z_ax_l_r>)))) (([(<any_Cx_sh_y_l_ax> sh)] | [(sh <any_Cx_sh_y_l_ax>)]) (l | ((<any_Cx_sh_y_l_ax> sh) | (sh <any_Cx_sh_y_l_ax>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_f> f)] | [(f <any_Cx_sh_l_f>)]) sil))
Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard y with value 3.5999999999999996 for ax ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard oy with value 6 for kw ...
candidateGuards = map[oy:true]
Picking guard, oy

Running scan for frate = 91
frate, target rule = 105 public <squirrel> = (((sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil p (sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_oy_p_sh_s_kw> oy)] | [(oy <any_Cx_oy_p_sh_s_kw>)]) (s | z | ((<any_Cx_oy_p_sh_s_kw> oy) | (oy <any_Cx_oy_p_sh_s_kw>)))) (([(<any_Cx_m_oy_kw_s> m)] | [(m <any_Cx_m_oy_kw_s>)]) (kw | ((<any_Cx_m_oy_kw> m) | (m <any_Cx_m_oy_kw>)))) ((([(<any_Vx_z_m_ih_noSlide> z)] | [(z <any_Vx_z_m_ih_noSlide>)]) ([(<any_Cx_z_m_r_kw> z)] | [(z <any_Cx_z_m_r_kw>)])) (ih | ((<any_Vx_z_m_ih_noSlide> z) | (z <any_Vx_z_m_ih_noSlide>)))) (([(<any_Cx_z_z_r_ax> z)] | [(z <any_Cx_z_z_r_ax>)]) (r | ((<any_Cx_z_z_r_ax> z) | (z <any_Cx_z_z_r_ax>)))) (([(<any_Cx_y_z_ax_r> y)] | [(y <any_Cx_y_z_ax_r>)]) (ax | ((<any_Cx_y_z_ax_l_r> y) | (y <any_Cx_y_z_ax_l_r>)))) (([(<any_Cx_sh_y_l_ax> sh)] | [(sh <any_Cx_sh_y_l_ax>)]) (l | ((<any_Cx_sh_y_l_ax> sh) | (sh <any_Cx_sh_y_l_ax>)))) (([(<any_vowel_noSlide> r)] | [(r <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_r> r)] | [(r <any_Cx_sh_l_r>)]) sil))
Considering guard w with value 4 for kw ...
Considering guard m with value 4 for kw ...
candidateGuards = map[m:true w:true]
Picking guard, w

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 125 public <squirrel> = (((sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil p (sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_oy_p_t_s_kw> oy)] | [(oy <any_Cx_oy_p_t_s_kw>)]) (s | z | ((<any_Cx_oy_p_t_s_kw> oy) | (oy <any_Cx_oy_p_t_s_kw>)))) (([(<any_Cx_oy_oy_kw_ax_s> oy)] | [(oy <any_Cx_oy_oy_kw_ax_s>)]) (kw | ((<any_Cx_oy_oy_kw_ax> oy) | (oy <any_Cx_oy_oy_kw_ax>)))) (([(<any_Cx_z_oy_ax_r_kw> z)] | [(z <any_Cx_z_oy_ax_r_kw>)]) (ax | ((<any_Cx_z_oy_ax_r_kw> z) | (z <any_Cx_z_oy_ax_r_kw>)))) (([(<any_Cx_z_z_r_ax_ax> z)] | [(z <any_Cx_z_z_r_ax_ax>)]) (r | ((<any_Cx_z_z_r_ax_ax> z) | (z <any_Cx_z_z_r_ax_ax>)))) (([(<any_Cx_y_z_ax_r> y)] | [(y <any_Cx_y_z_ax_r>)]) (ax | ((<any_Cx_y_z_ax_l_r> y) | (y <any_Cx_y_z_ax_l_r>)))) (([(<any_Cx_sh_y_l_ax> sh)] | [(sh <any_Cx_sh_y_l_ax>)]) (l | ((<any_Cx_sh_y_l_ax> sh) | (sh <any_Cx_sh_y_l_ax>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_b> b)] | [(b <any_Cx_sh_l_b>)]) sil))
Considering guard zh with value 2 for ax ...
Considering guard z with value 2 for ax ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard z with value 1.6 for ih ...
candidateGuards = map[z:true]
Picking guard, z

frate, target rule = 91 public <squirrel> = (((sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]) | (sil p (sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]))) (([(<any_Cx_oy_p_th_s_k> oy)] | [(oy <any_Cx_oy_p_th_s_k>)]) (s | z | ((<any_Cx_oy_p_th_s_k> oy) | (oy <any_Cx_oy_p_th_s_k>)))) (([(<any_Cx_n_oy_k_w_s> n)] | [(n <any_Cx_n_oy_k_w_s>)]) (k | ((<any_Cx_n_oy_k_w> n) | (n <any_Cx_n_oy_k_w>)))) (([(<any_Cx_zh_n_w_k> zh)] | [(zh <any_Cx_zh_n_w_k>)]) (w | ((<any_Cx_zh_n_w_k> zh) | (zh <any_Cx_zh_n_w_k>)))) ((([(<any_Vx_sh_zh_ih_noSlide> sh)] | [(sh <any_Vx_sh_zh_ih_noSlide>)]) ([(<any_Cx_sh_zh_r_w> sh)] | [(sh <any_Cx_sh_zh_r_w>)])) (ih | ((<any_Vx_sh_zh_ih_noSlide> sh) | (sh <any_Vx_sh_zh_ih_noSlide>)))) (([(<any_Cx_z_sh_r_ax> z)] | [(z <any_Cx_z_sh_r_ax>)]) (r | ((<any_Cx_z_sh_r_ax> z) | (z <any_Cx_z_sh_r_ax>)))) (([(<any_Cx_y_z_ax_r> y)] | [(y <any_Cx_y_z_ax_r>)]) (ax | ((<any_Cx_y_z_ax_l_r> y) | (y <any_Cx_y_z_ax_l_r>)))) (([(<any_Cx_sh_y_l_ax> sh)] | [(sh <any_Cx_sh_y_l_ax>)]) (l | ((<any_Cx_sh_y_l_ax> sh) | (sh <any_Cx_sh_y_l_ax>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_d> d)] | [(d <any_Cx_sh_l_d>)]) sil))
Considering guard y with value 3.5999999999999996 for r ...
candidateGuards = map[y:true]
Picking guard, y

Running scan for frate = 91
Running scan for frate = 91
Running scan for frate = 105
Considering guard s with value 4 for r ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard zh with value 4 for w ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 3 for axl ...
Considering guard sh with value 3 for axl ...
candidateGuards = map[ch:true sh:true]
Picking guard, ch

Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard sh with value 3 for axl ...
Considering guard ch with value 3 for axl ...
candidateGuards = map[ch:true sh:true]
Picking guard, sh

Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard sh with value 3 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard m with value 4 for kw ...
Considering guard w with value 4 for kw ...
candidateGuards = map[m:true w:true]
Picking guard, m

Running scan for frate = 80
frate, target rule = 105 public <squirrel> = (((sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil p (sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_oy_p_sh_s_kw> oy)] | [(oy <any_Cx_oy_p_sh_s_kw>)]) (s | z | ((<any_Cx_oy_p_sh_s_kw> oy) | (oy <any_Cx_oy_p_sh_s_kw>)))) (([(<any_Cx_oy_oy_kw_ax_s> oy)] | [(oy <any_Cx_oy_oy_kw_ax_s>)]) (kw | ((<any_Cx_oy_oy_kw_ax> oy) | (oy <any_Cx_oy_oy_kw_ax>)))) (([(<any_Cx_zh_oy_ax_r_kw> zh)] | [(zh <any_Cx_zh_oy_ax_r_kw>)]) (ax | ((<any_Cx_zh_oy_ax_r_kw> zh) | (zh <any_Cx_zh_oy_ax_r_kw>)))) (([(<any_Cx_y_zh_r_ax> y)] | [(y <any_Cx_y_zh_r_ax>)]) (r | ((<any_Cx_y_zh_r_axl_ax> y) | (y <any_Cx_y_zh_r_axl_ax>)))) (([(<any_Cx_ch_y_axl_r> ch)] | [(ch <any_Cx_ch_y_axl_r>)]) (axl | ((<any_Cx_ch_y_axl_r> ch) | (ch <any_Cx_ch_y_axl_r>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_ch_axl_ng> ng)] | [(ng <any_Cx_ch_axl_ng>)]) sil))
Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

frate, target rule = 80 public <squirrel> = (((sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_oy_p_z_s_kw> oy)] | [(oy <any_Cx_oy_p_z_s_kw>)]) (s | z | ((<any_Cx_oy_p_z_s_kw> oy) | (oy <any_Cx_oy_p_z_s_kw>)))) (([(<any_Cx_w_oy_kw_s> w)] | [(w <any_Cx_w_oy_kw_s>)]) (kw | ((<any_Cx_w_oy_kw> w) | (w <any_Cx_w_oy_kw>)))) ((([(<any_Vx_z_w_ih_noSlide> z)] | [(z <any_Vx_z_w_ih_noSlide>)]) ([(<any_Cx_z_w_r_kw> z)] | [(z <any_Cx_z_w_r_kw>)])) (ih | ((<any_Vx_z_w_ih_noSlide> z) | (z <any_Vx_z_w_ih_noSlide>)))) (([(<any_Cx_s_z_r> s)] | [(s <any_Cx_s_z_r>)]) (r | ((<any_Cx_s_z_r_axl> s) | (s <any_Cx_s_z_r_axl>)))) (([(<any_Cx_sh_s_axl_r> sh)] | [(sh <any_Cx_sh_s_axl_r>)]) (axl | ((<any_Cx_sh_s_axl_r> sh) | (sh <any_Cx_sh_s_axl_r>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_sh_axl_f> f)] | [(f <any_Cx_sh_axl_f>)]) sil))
Considering guard oy with value 6 for kw ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard s with value 4 for r ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard z with value 1.6 for ih ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard z with value 2 for ax ...
Considering guard zh with value 2 for ax ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard ch with value 3 for axl ...
Considering guard sh with value 3 for axl ...
candidateGuards = map[ch:true sh:true]
Picking guard, ch

Considering guard z with value 2 for r ...
candidateGuards = map[z:true]
Picking guard, z

Running scan for frate = 72
Considering guard zh with value 4 for w ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard z with value 2 for r ...
Considering guard y with value 2 for r ...
candidateGuards = map[y:true z:true]
Picking guard, y

Considering guard y with value 3.5999999999999996 for ax ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 3 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

frate, target rule = 80 public <squirrel> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_oy_p_ch_s_k> oy)] | [(oy <any_Cx_oy_p_ch_s_k>)]) (s | z | ((<any_Cx_oy_p_ch_s_k> oy) | (oy <any_Cx_oy_p_ch_s_k>)))) (([(<any_Cx_n_oy_k_w_s> n)] | [(n <any_Cx_n_oy_k_w_s>)]) (k | ((<any_Cx_n_oy_k_w> n) | (n <any_Cx_n_oy_k_w>)))) (([(<any_Cx_zh_n_w_k> zh)] | [(zh <any_Cx_zh_n_w_k>)]) (w | ((<any_Cx_zh_n_w_k> zh) | (zh <any_Cx_zh_n_w_k>)))) ((([(<any_Vx_sh_zh_ih_noSlide> sh)] | [(sh <any_Vx_sh_zh_ih_noSlide>)]) ([(<any_Cx_sh_zh_r_w> sh)] | [(sh <any_Cx_sh_zh_r_w>)])) (ih | ((<any_Vx_sh_zh_ih_noSlide> sh) | (sh <any_Vx_sh_zh_ih_noSlide>)))) (([(<any_Cx_s_sh_r> s)] | [(s <any_Cx_s_sh_r>)]) (r | ((<any_Cx_s_sh_r_axl> s) | (s <any_Cx_s_sh_r_axl>)))) (([(<any_Cx_ch_s_axl_r> ch)] | [(ch <any_Cx_ch_s_axl_r>)]) (axl | ((<any_Cx_ch_s_axl_r> ch) | (ch <any_Cx_ch_s_axl_r>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_ch_axl_m> m)] | [(m <any_Cx_ch_axl_m>)]) sil))
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard y with value 3.5999999999999996 for ax ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard z with value 2 for r ...
Considering guard y with value 2 for r ...
candidateGuards = map[y:true z:true]
Picking guard, z

Considering guard w with value 4 for kw ...
Considering guard m with value 4 for kw ...
candidateGuards = map[m:true w:true]
Picking guard, w

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard y with value 3.5999999999999996 for ax ...
candidateGuards = map[y:true]
Picking guard, y

frate, target rule = 91 public <squirrel> = (((sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]) | (sil p (sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]))) (([(<any_Cx_oy_p_th_s_kw> oy)] | [(oy <any_Cx_oy_p_th_s_kw>)]) (s | z | ((<any_Cx_oy_p_th_s_kw> oy) | (oy <any_Cx_oy_p_th_s_kw>)))) (([(<any_Cx_m_oy_kw_s> m)] | [(m <any_Cx_m_oy_kw_s>)]) (kw | ((<any_Cx_m_oy_kw> m) | (m <any_Cx_m_oy_kw>)))) ((([(<any_Vx_z_m_ih_noSlide> z)] | [(z <any_Vx_z_m_ih_noSlide>)]) ([(<any_Cx_z_m_r_kw> z)] | [(z <any_Cx_z_m_r_kw>)])) (ih | ((<any_Vx_z_m_ih_noSlide> z) | (z <any_Vx_z_m_ih_noSlide>)))) (([(<any_Cx_z_z_r_ax> z)] | [(z <any_Cx_z_z_r_ax>)]) (r | ((<any_Cx_z_z_r_ax> z) | (z <any_Cx_z_z_r_ax>)))) (([(<any_Cx_y_z_ax_r> y)] | [(y <any_Cx_y_z_ax_r>)]) (ax | ((<any_Cx_y_z_ax_l_r> y) | (y <any_Cx_y_z_ax_l_r>)))) (([(<any_Cx_sh_y_l_ax> sh)] | [(sh <any_Cx_sh_y_l_ax>)]) (l | ((<any_Cx_sh_y_l_ax> sh) | (sh <any_Cx_sh_y_l_ax>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_thr> thr)] | [(thr <any_Cx_sh_l_thr>)]) sil))
Considering guard z with value 1.6 for ih ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard zh with value 4 for w ...
candidateGuards = map[zh:true]
Picking guard, zh

Running scan for frate = 72
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 91
Considering guard s with value 4 for r ...
candidateGuards = map[s:true]
Picking guard, s

frate, target rule = 105 public <squirrel> = (((sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]) | (sil p (sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]))) (([(<any_Cx_oy_p_th_s_kw> oy)] | [(oy <any_Cx_oy_p_th_s_kw>)]) (s | z | ((<any_Cx_oy_p_th_s_kw> oy) | (oy <any_Cx_oy_p_th_s_kw>)))) (([(<any_Cx_oy_oy_kw_ax_s> oy)] | [(oy <any_Cx_oy_oy_kw_ax_s>)]) (kw | ((<any_Cx_oy_oy_kw_ax> oy) | (oy <any_Cx_oy_oy_kw_ax>)))) (([(<any_Cx_z_oy_ax_r_kw> z)] | [(z <any_Cx_z_oy_ax_r_kw>)]) (ax | ((<any_Cx_z_oy_ax_r_kw> z) | (z <any_Cx_z_oy_ax_r_kw>)))) (([(<any_Cx_y_z_r_ax_ax> y)] | [(y <any_Cx_y_z_r_ax_ax>)]) (r | ((<any_Cx_y_z_r_ax_ax> y) | (y <any_Cx_y_z_r_ax_ax>)))) (([(<any_Cx_y_y_ax_r> y)] | [(y <any_Cx_y_y_ax_r>)]) (ax | ((<any_Cx_y_y_ax_l_r> y) | (y <any_Cx_y_y_ax_l_r>)))) (([(<any_Cx_sh_y_l_ax> sh)] | [(sh <any_Cx_sh_y_l_ax>)]) (l | ((<any_Cx_sh_y_l_ax> sh) | (sh <any_Cx_sh_y_l_ax>)))) (([(<any_vowel_noSlide> w)] | [(w <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_w> w)] | [(w <any_Cx_sh_l_w>)]) sil))
Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard sh with value 3 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for axl ...
Considering guard ch with value 3 for axl ...
candidateGuards = map[ch:true sh:true]
Picking guard, sh

frate, target rule = 91 public <squirrel> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_oy_p_ch_s_k> oy)] | [(oy <any_Cx_oy_p_ch_s_k>)]) (s | z | ((<any_Cx_oy_p_ch_s_k> oy) | (oy <any_Cx_oy_p_ch_s_k>)))) (([(<any_Cx_n_oy_k_w_s> n)] | [(n <any_Cx_n_oy_k_w_s>)]) (k | ((<any_Cx_n_oy_k_w> n) | (n <any_Cx_n_oy_k_w>)))) (([(<any_Cx_zh_n_w_ax_k> zh)] | [(zh <any_Cx_zh_n_w_ax_k>)]) (w | ((<any_Cx_zh_n_w_ax_k> zh) | (zh <any_Cx_zh_n_w_ax_k>)))) (([(<any_Cx_sh_zh_ax_r_w> sh)] | [(sh <any_Cx_sh_zh_ax_r_w>)]) (ax | ((<any_Cx_sh_zh_ax_r_w> sh) | (sh <any_Cx_sh_zh_ax_r_w>)))) (([(<any_Cx_z_sh_r_ax_ax> z)] | [(z <any_Cx_z_sh_r_ax_ax>)]) (r | ((<any_Cx_z_sh_r_ax_ax> z) | (z <any_Cx_z_sh_r_ax_ax>)))) (([(<any_Cx_y_z_ax_r> y)] | [(y <any_Cx_y_z_ax_r>)]) (ax | ((<any_Cx_y_z_ax_l_r> y) | (y <any_Cx_y_z_ax_l_r>)))) (([(<any_Cx_sh_y_l_ax> sh)] | [(sh <any_Cx_sh_y_l_ax>)]) (l | ((<any_Cx_sh_y_l_ax> sh) | (sh <any_Cx_sh_y_l_ax>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_f> f)] | [(f <any_Cx_sh_l_f>)]) sil))
Considering guard y with value 3.5999999999999996 for r ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

frate, target rule = 72 public <squirrel> = (((sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil p (sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_oy_p_t_s_kw> oy)] | [(oy <any_Cx_oy_p_t_s_kw>)]) (s | z | ((<any_Cx_oy_p_t_s_kw> oy) | (oy <any_Cx_oy_p_t_s_kw>)))) (([(<any_Cx_w_oy_kw_s> w)] | [(w <any_Cx_w_oy_kw_s>)]) (kw | ((<any_Cx_w_oy_kw> w) | (w <any_Cx_w_oy_kw>)))) ((([(<any_Vx_z_w_ih_noSlide> z)] | [(z <any_Vx_z_w_ih_noSlide>)]) ([(<any_Cx_z_w_r_kw> z)] | [(z <any_Cx_z_w_r_kw>)])) (ih | ((<any_Vx_z_w_ih_noSlide> z) | (z <any_Vx_z_w_ih_noSlide>)))) (([(<any_Cx_s_z_r> s)] | [(s <any_Cx_s_z_r>)]) (r | ((<any_Cx_s_z_r_axl> s) | (s <any_Cx_s_z_r_axl>)))) (([(<any_Cx_sh_s_axl_r> sh)] | [(sh <any_Cx_sh_s_axl_r>)]) (axl | ((<any_Cx_sh_s_axl_r> sh) | (sh <any_Cx_sh_s_axl_r>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_sh_axl_f> f)] | [(f <any_Cx_sh_axl_f>)]) sil))
Running scan for frate = 80
Running scan for frate = 80
Considering guard sh with value 3 for axl ...
Considering guard ch with value 3 for axl ...
candidateGuards = map[ch:true sh:true]
Picking guard, sh

Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard zh with value 4 for w ...
candidateGuards = map[zh:true]
Picking guard, zh

Running scan for frate = 91
Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard oy with value 6 for kw ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

frate, target rule = 91 public <squirrel> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_oy_p_ch_s_k> oy)] | [(oy <any_Cx_oy_p_ch_s_k>)]) (s | z | ((<any_Cx_oy_p_ch_s_k> oy) | (oy <any_Cx_oy_p_ch_s_k>)))) (([(<any_Cx_n_oy_k_w_s> n)] | [(n <any_Cx_n_oy_k_w_s>)]) (k | ((<any_Cx_n_oy_k_w> n) | (n <any_Cx_n_oy_k_w>)))) (([(<any_Cx_zh_n_w_ax_k> zh)] | [(zh <any_Cx_zh_n_w_ax_k>)]) (w | ((<any_Cx_zh_n_w_ax_k> zh) | (zh <any_Cx_zh_n_w_ax_k>)))) (([(<any_Cx_sh_zh_ax_r_w> sh)] | [(sh <any_Cx_sh_zh_ax_r_w>)]) (ax | ((<any_Cx_sh_zh_ax_r_w> sh) | (sh <any_Cx_sh_zh_ax_r_w>)))) (([(<any_Cx_y_sh_r_ax> y)] | [(y <any_Cx_y_sh_r_ax>)]) (r | ((<any_Cx_y_sh_r_axl_ax> y) | (y <any_Cx_y_sh_r_axl_ax>)))) (([(<any_Cx_sh_y_axl_r> sh)] | [(sh <any_Cx_sh_y_axl_r>)]) (axl | ((<any_Cx_sh_y_axl_r> sh) | (sh <any_Cx_sh_y_axl_r>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_sh_axl_m> m)] | [(m <any_Cx_sh_axl_m>)]) sil))
Considering guard zh with value 2 for ax ...
Considering guard z with value 2 for ax ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard zh with value 4 for w ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 3 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 4 for w ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard y with value 3.5999999999999996 for r ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard sh with value 3 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard s with value 4 for r ...
candidateGuards = map[s:true]
Picking guard, s

Considering guard z with value 2 for r ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard oy with value 6 for kw ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard z with value 2 for r ...
Considering guard y with value 2 for r ...
candidateGuards = map[y:true z:true]
Picking guard, z

Considering guard w with value 4 for kw ...
Considering guard m with value 4 for kw ...
candidateGuards = map[m:true w:true]
Picking guard, w

Running scan for frate = 80
Considering guard y with value 3.5999999999999996 for ax ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3.5999999999999996 for ax ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard zh with value 2 for ax ...
Considering guard z with value 2 for ax ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard ch with value 3 for axl ...
Considering guard sh with value 3 for axl ...
candidateGuards = map[ch:true sh:true]
Picking guard, ch

Considering guard ch with value 3 for axl ...
Considering guard sh with value 3 for axl ...
candidateGuards = map[ch:true sh:true]
Picking guard, ch

Considering guard z with value 1.6 for ih ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard z with value 2 for r ...
Considering guard y with value 2 for r ...
candidateGuards = map[y:true z:true]
Picking guard, z

Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard z with value 2 for r ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard y with value 3.5999999999999996 for ax ...
candidateGuards = map[y:true]
Picking guard, y

frate, target rule = 91 public <squirrel> = (((sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]) | (sil p (sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]))) (([(<any_Cx_oy_p_th_s_kw> oy)] | [(oy <any_Cx_oy_p_th_s_kw>)]) (s | z | ((<any_Cx_oy_p_th_s_kw> oy) | (oy <any_Cx_oy_p_th_s_kw>)))) (([(<any_Cx_oy_oy_kw_ax_s> oy)] | [(oy <any_Cx_oy_oy_kw_ax_s>)]) (kw | ((<any_Cx_oy_oy_kw_ax> oy) | (oy <any_Cx_oy_oy_kw_ax>)))) (([(<any_Cx_z_oy_ax_r_kw> z)] | [(z <any_Cx_z_oy_ax_r_kw>)]) (ax | ((<any_Cx_z_oy_ax_r_kw> z) | (z <any_Cx_z_oy_ax_r_kw>)))) (([(<any_Cx_y_z_r_ax> y)] | [(y <any_Cx_y_z_r_ax>)]) (r | ((<any_Cx_y_z_r_axl_ax> y) | (y <any_Cx_y_z_r_axl_ax>)))) (([(<any_Cx_ch_y_axl_r> ch)] | [(ch <any_Cx_ch_y_axl_r>)]) (axl | ((<any_Cx_ch_y_axl_r> ch) | (ch <any_Cx_ch_y_axl_r>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_ch_axl_thr> thr)] | [(thr <any_Cx_ch_axl_thr>)]) sil))
Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

frate, target rule = 72 public <squirrel> = (((sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_oy_p_z_s_k> oy)] | [(oy <any_Cx_oy_p_z_s_k>)]) (s | z | ((<any_Cx_oy_p_z_s_k> oy) | (oy <any_Cx_oy_p_z_s_k>)))) (([(<any_Cx_n_oy_k_w_s> n)] | [(n <any_Cx_n_oy_k_w_s>)]) (k | ((<any_Cx_n_oy_k_w> n) | (n <any_Cx_n_oy_k_w>)))) (([(<any_Cx_zh_n_w_k> zh)] | [(zh <any_Cx_zh_n_w_k>)]) (w | ((<any_Cx_zh_n_w_k> zh) | (zh <any_Cx_zh_n_w_k>)))) ((([(<any_Vx_sh_zh_ih_noSlide> sh)] | [(sh <any_Vx_sh_zh_ih_noSlide>)]) ([(<any_Cx_sh_zh_r_w> sh)] | [(sh <any_Cx_sh_zh_r_w>)])) (ih | ((<any_Vx_sh_zh_ih_noSlide> sh) | (sh <any_Vx_sh_zh_ih_noSlide>)))) (([(<any_Cx_s_sh_r> s)] | [(s <any_Cx_s_sh_r>)]) (r | ((<any_Cx_s_sh_r_axl> s) | (s <any_Cx_s_sh_r_axl>)))) (([(<any_Cx_ch_s_axl_r> ch)] | [(ch <any_Cx_ch_s_axl_r>)]) (axl | ((<any_Cx_ch_s_axl_r> ch) | (ch <any_Cx_ch_s_axl_r>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_ch_axl_f> f)] | [(f <any_Cx_ch_axl_f>)]) sil))
Considering guard y with value 3.5999999999999996 for ax ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 80 public <squirrel> = (((sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_oy_p_z_s_k> oy)] | [(oy <any_Cx_oy_p_z_s_k>)]) (s | z | ((<any_Cx_oy_p_z_s_k> oy) | (oy <any_Cx_oy_p_z_s_k>)))) (([(<any_Cx_n_oy_k_w_s> n)] | [(n <any_Cx_n_oy_k_w_s>)]) (k | ((<any_Cx_n_oy_k_w> n) | (n <any_Cx_n_oy_k_w>)))) (([(<any_Cx_zh_n_w_ax_k> zh)] | [(zh <any_Cx_zh_n_w_ax_k>)]) (w | ((<any_Cx_zh_n_w_ax_k> zh) | (zh <any_Cx_zh_n_w_ax_k>)))) (([(<any_Cx_sh_zh_ax_r_w> sh)] | [(sh <any_Cx_sh_zh_ax_r_w>)]) (ax | ((<any_Cx_sh_zh_ax_r_w> sh) | (sh <any_Cx_sh_zh_ax_r_w>)))) (([(<any_Cx_z_sh_r_ax_ax> z)] | [(z <any_Cx_z_sh_r_ax_ax>)]) (r | ((<any_Cx_z_sh_r_ax_ax> z) | (z <any_Cx_z_sh_r_ax_ax>)))) (([(<any_Cx_y_z_ax_r> y)] | [(y <any_Cx_y_z_ax_r>)]) (ax | ((<any_Cx_y_z_ax_l_r> y) | (y <any_Cx_y_z_ax_l_r>)))) (([(<any_Cx_sh_y_l_ax> sh)] | [(sh <any_Cx_sh_y_l_ax>)]) (l | ((<any_Cx_sh_y_l_ax> sh) | (sh <any_Cx_sh_y_l_ax>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_d> d)] | [(d <any_Cx_sh_l_d>)]) sil))
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 80 public <squirrel> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_oy_p_ch_s_k> oy)] | [(oy <any_Cx_oy_p_ch_s_k>)]) (s | z | ((<any_Cx_oy_p_ch_s_k> oy) | (oy <any_Cx_oy_p_ch_s_k>)))) (([(<any_Cx_n_oy_k_w_s> n)] | [(n <any_Cx_n_oy_k_w_s>)]) (k | ((<any_Cx_n_oy_k_w> n) | (n <any_Cx_n_oy_k_w>)))) (([(<any_Cx_zh_n_w_k> zh)] | [(zh <any_Cx_zh_n_w_k>)]) (w | ((<any_Cx_zh_n_w_k> zh) | (zh <any_Cx_zh_n_w_k>)))) ((([(<any_Vx_sh_zh_ih_noSlide> sh)] | [(sh <any_Vx_sh_zh_ih_noSlide>)]) ([(<any_Cx_sh_zh_r_w> sh)] | [(sh <any_Cx_sh_zh_r_w>)])) (ih | ((<any_Vx_sh_zh_ih_noSlide> sh) | (sh <any_Vx_sh_zh_ih_noSlide>)))) (([(<any_Cx_z_sh_r_ax> z)] | [(z <any_Cx_z_sh_r_ax>)]) (r | ((<any_Cx_z_sh_r_ax> z) | (z <any_Cx_z_sh_r_ax>)))) (([(<any_Cx_y_z_ax_r> y)] | [(y <any_Cx_y_z_ax_r>)]) (ax | ((<any_Cx_y_z_ax_l_r> y) | (y <any_Cx_y_z_ax_l_r>)))) (([(<any_Cx_sh_y_l_ax> sh)] | [(sh <any_Cx_sh_y_l_ax>)]) (l | ((<any_Cx_sh_y_l_ax> sh) | (sh <any_Cx_sh_y_l_ax>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_d> d)] | [(d <any_Cx_sh_l_d>)]) sil))
Considering guard zh with value 4 for w ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 91 public <squirrel> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_oy_p_ch_s_kw> oy)] | [(oy <any_Cx_oy_p_ch_s_kw>)]) (s | z | ((<any_Cx_oy_p_ch_s_kw> oy) | (oy <any_Cx_oy_p_ch_s_kw>)))) (([(<any_Cx_oy_oy_kw_ax_s> oy)] | [(oy <any_Cx_oy_oy_kw_ax_s>)]) (kw | ((<any_Cx_oy_oy_kw_ax> oy) | (oy <any_Cx_oy_oy_kw_ax>)))) (([(<any_Cx_zh_oy_ax_r_kw> zh)] | [(zh <any_Cx_zh_oy_ax_r_kw>)]) (ax | ((<any_Cx_zh_oy_ax_r_kw> zh) | (zh <any_Cx_zh_oy_ax_r_kw>)))) (([(<any_Cx_z_zh_r_ax_ax> z)] | [(z <any_Cx_z_zh_r_ax_ax>)]) (r | ((<any_Cx_z_zh_r_ax_ax> z) | (z <any_Cx_z_zh_r_ax_ax>)))) (([(<any_Cx_y_z_ax_r> y)] | [(y <any_Cx_y_z_ax_r>)]) (ax | ((<any_Cx_y_z_ax_l_r> y) | (y <any_Cx_y_z_ax_l_r>)))) (([(<any_Cx_sh_y_l_ax> sh)] | [(sh <any_Cx_sh_y_l_ax>)]) (l | ((<any_Cx_sh_y_l_ax> sh) | (sh <any_Cx_sh_y_l_ax>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_thr> thr)] | [(thr <any_Cx_sh_l_thr>)]) sil))
frate, target rule = 80 public <squirrel> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_oy_p_ch_s_kw> oy)] | [(oy <any_Cx_oy_p_ch_s_kw>)]) (s | z | ((<any_Cx_oy_p_ch_s_kw> oy) | (oy <any_Cx_oy_p_ch_s_kw>)))) (([(<any_Cx_w_oy_kw_s> w)] | [(w <any_Cx_w_oy_kw_s>)]) (kw | ((<any_Cx_w_oy_kw> w) | (w <any_Cx_w_oy_kw>)))) ((([(<any_Vx_z_w_ih_noSlide> z)] | [(z <any_Vx_z_w_ih_noSlide>)]) ([(<any_Cx_z_w_r_kw> z)] | [(z <any_Cx_z_w_r_kw>)])) (ih | ((<any_Vx_z_w_ih_noSlide> z) | (z <any_Vx_z_w_ih_noSlide>)))) (([(<any_Cx_z_z_r_ax> z)] | [(z <any_Cx_z_z_r_ax>)]) (r | ((<any_Cx_z_z_r_ax> z) | (z <any_Cx_z_z_r_ax>)))) (([(<any_Cx_y_z_ax_r> y)] | [(y <any_Cx_y_z_ax_r>)]) (ax | ((<any_Cx_y_z_ax_l_r> y) | (y <any_Cx_y_z_ax_l_r>)))) (([(<any_Cx_sh_y_l_ax> sh)] | [(sh <any_Cx_sh_y_l_ax>)]) (l | ((<any_Cx_sh_y_l_ax> sh) | (sh <any_Cx_sh_y_l_ax>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_thr> thr)] | [(thr <any_Cx_sh_l_thr>)]) sil))
Running scan for frate = 80
Considering guard sh with value 3 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 72
Running scan for frate = 72
Considering guard y with value 3.5999999999999996 for r ...
candidateGuards = map[y:true]
Picking guard, y

Running scan for frate = 80
Running scan for frate = 72
Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard ch with value 3 for axl ...
Considering guard sh with value 3 for axl ...
candidateGuards = map[ch:true sh:true]
Picking guard, sh

Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard m with value 4 for kw ...
Considering guard w with value 4 for kw ...
candidateGuards = map[m:true w:true]
Picking guard, m

frate, target rule = 80 public <squirrel> = (((sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil p (sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_oy_p_t_s_k> oy)] | [(oy <any_Cx_oy_p_t_s_k>)]) (s | z | ((<any_Cx_oy_p_t_s_k> oy) | (oy <any_Cx_oy_p_t_s_k>)))) (([(<any_Cx_n_oy_k_w_s> n)] | [(n <any_Cx_n_oy_k_w_s>)]) (k | ((<any_Cx_n_oy_k_w> n) | (n <any_Cx_n_oy_k_w>)))) (([(<any_Cx_zh_n_w_ax_k> zh)] | [(zh <any_Cx_zh_n_w_ax_k>)]) (w | ((<any_Cx_zh_n_w_ax_k> zh) | (zh <any_Cx_zh_n_w_ax_k>)))) (([(<any_Cx_sh_zh_ax_r_w> sh)] | [(sh <any_Cx_sh_zh_ax_r_w>)]) (ax | ((<any_Cx_sh_zh_ax_r_w> sh) | (sh <any_Cx_sh_zh_ax_r_w>)))) (([(<any_Cx_y_sh_r_ax> y)] | [(y <any_Cx_y_sh_r_ax>)]) (r | ((<any_Cx_y_sh_r_axl_ax> y) | (y <any_Cx_y_sh_r_axl_ax>)))) (([(<any_Cx_sh_y_axl_r> sh)] | [(sh <any_Cx_sh_y_axl_r>)]) (axl | ((<any_Cx_sh_y_axl_r> sh) | (sh <any_Cx_sh_y_axl_r>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_sh_axl_m> m)] | [(m <any_Cx_sh_axl_m>)]) sil))
Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard oy with value 6 for kw ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard zh with value 4 for w ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard z with value 1.6 for ih ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard oy with value 6 for kw ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard zh with value 2 for ax ...
Considering guard z with value 2 for ax ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard z with value 2 for r ...
candidateGuards = map[z:true]
Picking guard, z

Running scan for frate = 72
Considering guard sh with value 3 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 2 for ax ...
Considering guard z with value 2 for ax ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard zh with value 4 for w ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard y with value 2 for r ...
Considering guard z with value 2 for r ...
candidateGuards = map[y:true z:true]
Picking guard, y

Considering guard z with value 2 for r ...
Considering guard y with value 2 for r ...
candidateGuards = map[y:true z:true]
Picking guard, z

Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard y with value 3.5999999999999996 for ax ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 3 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard y with value 3.5999999999999996 for r ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3.5999999999999996 for ax ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 3.5999999999999996 for ax ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard ch with value 3 for axl ...
Considering guard sh with value 3 for axl ...
candidateGuards = map[ch:true sh:true]
Picking guard, sh

Considering guard z with value 2 for r ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 72 public <squirrel> = (((sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]) | (sil p (sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]))) (([(<any_Cx_oy_p_th_s_kw> oy)] | [(oy <any_Cx_oy_p_th_s_kw>)]) (s | z | ((<any_Cx_oy_p_th_s_kw> oy) | (oy <any_Cx_oy_p_th_s_kw>)))) (([(<any_Cx_m_oy_kw_s> m)] | [(m <any_Cx_m_oy_kw_s>)]) (kw | ((<any_Cx_m_oy_kw> m) | (m <any_Cx_m_oy_kw>)))) ((([(<any_Vx_z_m_ih_noSlide> z)] | [(z <any_Vx_z_m_ih_noSlide>)]) ([(<any_Cx_z_m_r_kw> z)] | [(z <any_Cx_z_m_r_kw>)])) (ih | ((<any_Vx_z_m_ih_noSlide> z) | (z <any_Vx_z_m_ih_noSlide>)))) (([(<any_Cx_z_z_r_ax> z)] | [(z <any_Cx_z_z_r_ax>)]) (r | ((<any_Cx_z_z_r_ax> z) | (z <any_Cx_z_z_r_ax>)))) (([(<any_Cx_y_z_ax_r> y)] | [(y <any_Cx_y_z_ax_r>)]) (ax | ((<any_Cx_y_z_ax_l_r> y) | (y <any_Cx_y_z_ax_l_r>)))) (([(<any_Cx_sh_y_l_ax> sh)] | [(sh <any_Cx_sh_y_l_ax>)]) (l | ((<any_Cx_sh_y_l_ax> sh) | (sh <any_Cx_sh_y_l_ax>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_d> d)] | [(d <any_Cx_sh_l_d>)]) sil))
Considering guard zh with value 4 for w ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard y with value 3.5999999999999996 for ax ...
candidateGuards = map[y:true]
Picking guard, y

frate, target rule = 80 public <squirrel> = (((sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_oy_p_z_s_kw> oy)] | [(oy <any_Cx_oy_p_z_s_kw>)]) (s | z | ((<any_Cx_oy_p_z_s_kw> oy) | (oy <any_Cx_oy_p_z_s_kw>)))) (([(<any_Cx_oy_oy_kw_ax_s> oy)] | [(oy <any_Cx_oy_oy_kw_ax_s>)]) (kw | ((<any_Cx_oy_oy_kw_ax> oy) | (oy <any_Cx_oy_oy_kw_ax>)))) (([(<any_Cx_zh_oy_ax_r_kw> zh)] | [(zh <any_Cx_zh_oy_ax_r_kw>)]) (ax | ((<any_Cx_zh_oy_ax_r_kw> zh) | (zh <any_Cx_zh_oy_ax_r_kw>)))) (([(<any_Cx_y_zh_r_ax> y)] | [(y <any_Cx_y_zh_r_ax>)]) (r | ((<any_Cx_y_zh_r_axl_ax> y) | (y <any_Cx_y_zh_r_axl_ax>)))) (([(<any_Cx_sh_y_axl_r> sh)] | [(sh <any_Cx_sh_y_axl_r>)]) (axl | ((<any_Cx_sh_y_axl_r> sh) | (sh <any_Cx_sh_y_axl_r>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_sh_axl_n> n)] | [(n <any_Cx_sh_axl_n>)]) sil))
frate, target rule = 80 public <squirrel> = (((sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]) | (sil p (sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]))) (([(<any_Cx_oy_p_th_s_kw> oy)] | [(oy <any_Cx_oy_p_th_s_kw>)]) (s | z | ((<any_Cx_oy_p_th_s_kw> oy) | (oy <any_Cx_oy_p_th_s_kw>)))) (([(<any_Cx_oy_oy_kw_ax_s> oy)] | [(oy <any_Cx_oy_oy_kw_ax_s>)]) (kw | ((<any_Cx_oy_oy_kw_ax> oy) | (oy <any_Cx_oy_oy_kw_ax>)))) (([(<any_Cx_z_oy_ax_r_kw> z)] | [(z <any_Cx_z_oy_ax_r_kw>)]) (ax | ((<any_Cx_z_oy_ax_r_kw> z) | (z <any_Cx_z_oy_ax_r_kw>)))) (([(<any_Cx_y_z_r_ax_ax> y)] | [(y <any_Cx_y_z_r_ax_ax>)]) (r | ((<any_Cx_y_z_r_ax_ax> y) | (y <any_Cx_y_z_r_ax_ax>)))) (([(<any_Cx_y_y_ax_r> y)] | [(y <any_Cx_y_y_ax_r>)]) (ax | ((<any_Cx_y_y_ax_l_r> y) | (y <any_Cx_y_y_ax_l_r>)))) (([(<any_Cx_sh_y_l_ax> sh)] | [(sh <any_Cx_sh_y_l_ax>)]) (l | ((<any_Cx_sh_y_l_ax> sh) | (sh <any_Cx_sh_y_l_ax>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_thr> thr)] | [(thr <any_Cx_sh_l_thr>)]) sil))
Considering guard sh with value 3 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 72 public <squirrel> = (((sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil p (sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_oy_p_sh_s_k> oy)] | [(oy <any_Cx_oy_p_sh_s_k>)]) (s | z | ((<any_Cx_oy_p_sh_s_k> oy) | (oy <any_Cx_oy_p_sh_s_k>)))) (([(<any_Cx_n_oy_k_w_s> n)] | [(n <any_Cx_n_oy_k_w_s>)]) (k | ((<any_Cx_n_oy_k_w> n) | (n <any_Cx_n_oy_k_w>)))) (([(<any_Cx_zh_n_w_ax_k> zh)] | [(zh <any_Cx_zh_n_w_ax_k>)]) (w | ((<any_Cx_zh_n_w_ax_k> zh) | (zh <any_Cx_zh_n_w_ax_k>)))) (([(<any_Cx_sh_zh_ax_r_w> sh)] | [(sh <any_Cx_sh_zh_ax_r_w>)]) (ax | ((<any_Cx_sh_zh_ax_r_w> sh) | (sh <any_Cx_sh_zh_ax_r_w>)))) (([(<any_Cx_z_sh_r_ax_ax> z)] | [(z <any_Cx_z_sh_r_ax_ax>)]) (r | ((<any_Cx_z_sh_r_ax_ax> z) | (z <any_Cx_z_sh_r_ax_ax>)))) (([(<any_Cx_y_z_ax_r> y)] | [(y <any_Cx_y_z_ax_r>)]) (ax | ((<any_Cx_y_z_ax_l_r> y) | (y <any_Cx_y_z_ax_l_r>)))) (([(<any_Cx_sh_y_l_ax> sh)] | [(sh <any_Cx_sh_y_l_ax>)]) (l | ((<any_Cx_sh_y_l_ax> sh) | (sh <any_Cx_sh_y_l_ax>)))) (([(<any_vowel_noSlide> r)] | [(r <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_r> r)] | [(r <any_Cx_sh_l_r>)]) sil))
Running scan for frate = 72
Considering guard y with value 3.5999999999999996 for r ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard ch with value 3 for axl ...
Considering guard sh with value 3 for axl ...
candidateGuards = map[ch:true sh:true]
Picking guard, ch

Running scan for frate = 72
Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

frate, target rule = 72 public <squirrel> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_oy_p_ch_s_k> oy)] | [(oy <any_Cx_oy_p_ch_s_k>)]) (s | z | ((<any_Cx_oy_p_ch_s_k> oy) | (oy <any_Cx_oy_p_ch_s_k>)))) (([(<any_Cx_n_oy_k_w_s> n)] | [(n <any_Cx_n_oy_k_w_s>)]) (k | ((<any_Cx_n_oy_k_w> n) | (n <any_Cx_n_oy_k_w>)))) (([(<any_Cx_zh_n_w_k> zh)] | [(zh <any_Cx_zh_n_w_k>)]) (w | ((<any_Cx_zh_n_w_k> zh) | (zh <any_Cx_zh_n_w_k>)))) ((([(<any_Vx_sh_zh_ih_noSlide> sh)] | [(sh <any_Vx_sh_zh_ih_noSlide>)]) ([(<any_Cx_sh_zh_r_w> sh)] | [(sh <any_Cx_sh_zh_r_w>)])) (ih | ((<any_Vx_sh_zh_ih_noSlide> sh) | (sh <any_Vx_sh_zh_ih_noSlide>)))) (([(<any_Cx_z_sh_r_ax> z)] | [(z <any_Cx_z_sh_r_ax>)]) (r | ((<any_Cx_z_sh_r_ax> z) | (z <any_Cx_z_sh_r_ax>)))) (([(<any_Cx_y_z_ax_r> y)] | [(y <any_Cx_y_z_ax_r>)]) (ax | ((<any_Cx_y_z_ax_l_r> y) | (y <any_Cx_y_z_ax_l_r>)))) (([(<any_Cx_sh_y_l_ax> sh)] | [(sh <any_Cx_sh_y_l_ax>)]) (l | ((<any_Cx_sh_y_l_ax> sh) | (sh <any_Cx_sh_y_l_ax>)))) (([(<any_vowel_noSlide> w)] | [(w <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_w> w)] | [(w <any_Cx_sh_l_w>)]) sil))
Considering guard oy with value 6 for kw ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

frate, target rule = 72 public <squirrel> = (((sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_oy_p_z_s_k> oy)] | [(oy <any_Cx_oy_p_z_s_k>)]) (s | z | ((<any_Cx_oy_p_z_s_k> oy) | (oy <any_Cx_oy_p_z_s_k>)))) (([(<any_Cx_n_oy_k_w_s> n)] | [(n <any_Cx_n_oy_k_w_s>)]) (k | ((<any_Cx_n_oy_k_w> n) | (n <any_Cx_n_oy_k_w>)))) (([(<any_Cx_zh_n_w_ax_k> zh)] | [(zh <any_Cx_zh_n_w_ax_k>)]) (w | ((<any_Cx_zh_n_w_ax_k> zh) | (zh <any_Cx_zh_n_w_ax_k>)))) (([(<any_Cx_sh_zh_ax_r_w> sh)] | [(sh <any_Cx_sh_zh_ax_r_w>)]) (ax | ((<any_Cx_sh_zh_ax_r_w> sh) | (sh <any_Cx_sh_zh_ax_r_w>)))) (([(<any_Cx_y_sh_r_ax> y)] | [(y <any_Cx_y_sh_r_ax>)]) (r | ((<any_Cx_y_sh_r_axl_ax> y) | (y <any_Cx_y_sh_r_axl_ax>)))) (([(<any_Cx_ch_y_axl_r> ch)] | [(ch <any_Cx_ch_y_axl_r>)]) (axl | ((<any_Cx_ch_y_axl_r> ch) | (ch <any_Cx_ch_y_axl_r>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_ch_axl_m> m)] | [(m <any_Cx_ch_axl_m>)]) sil))
Considering guard oy with value 6 for kw ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard z with value 2 for ax ...
Considering guard zh with value 2 for ax ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard zh with value 2 for ax ...
Considering guard z with value 2 for ax ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard y with value 3.5999999999999996 for r ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard ch with value 3 for axl ...
Considering guard sh with value 3 for axl ...
candidateGuards = map[ch:true sh:true]
Picking guard, ch

Considering guard z with value 2 for r ...
Considering guard y with value 2 for r ...
candidateGuards = map[y:true z:true]
Picking guard, z

Considering guard y with value 3.5999999999999996 for ax ...
candidateGuards = map[y:true]
Picking guard, y

frate, target rule = 72 public <squirrel> = (((sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil p (sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_oy_p_t_s_kw> oy)] | [(oy <any_Cx_oy_p_t_s_kw>)]) (s | z | ((<any_Cx_oy_p_t_s_kw> oy) | (oy <any_Cx_oy_p_t_s_kw>)))) (([(<any_Cx_oy_oy_kw_ax_s> oy)] | [(oy <any_Cx_oy_oy_kw_ax_s>)]) (kw | ((<any_Cx_oy_oy_kw_ax> oy) | (oy <any_Cx_oy_oy_kw_ax>)))) (([(<any_Cx_z_oy_ax_r_kw> z)] | [(z <any_Cx_z_oy_ax_r_kw>)]) (ax | ((<any_Cx_z_oy_ax_r_kw> z) | (z <any_Cx_z_oy_ax_r_kw>)))) (([(<any_Cx_y_z_r_ax> y)] | [(y <any_Cx_y_z_r_ax>)]) (r | ((<any_Cx_y_z_r_axl_ax> y) | (y <any_Cx_y_z_r_axl_ax>)))) (([(<any_Cx_ch_y_axl_r> ch)] | [(ch <any_Cx_ch_y_axl_r>)]) (axl | ((<any_Cx_ch_y_axl_r> ch) | (ch <any_Cx_ch_y_axl_r>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_ch_axl_hh> hh)] | [(hh <any_Cx_ch_axl_hh>)]) sil))
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 72 public <squirrel> = (((sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil p (sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_oy_p_t_s_kw> oy)] | [(oy <any_Cx_oy_p_t_s_kw>)]) (s | z | ((<any_Cx_oy_p_t_s_kw> oy) | (oy <any_Cx_oy_p_t_s_kw>)))) (([(<any_Cx_oy_oy_kw_ax_s> oy)] | [(oy <any_Cx_oy_oy_kw_ax_s>)]) (kw | ((<any_Cx_oy_oy_kw_ax> oy) | (oy <any_Cx_oy_oy_kw_ax>)))) (([(<any_Cx_zh_oy_ax_r_kw> zh)] | [(zh <any_Cx_zh_oy_ax_r_kw>)]) (ax | ((<any_Cx_zh_oy_ax_r_kw> zh) | (zh <any_Cx_zh_oy_ax_r_kw>)))) (([(<any_Cx_z_zh_r_ax_ax> z)] | [(z <any_Cx_z_zh_r_ax_ax>)]) (r | ((<any_Cx_z_zh_r_ax_ax> z) | (z <any_Cx_z_zh_r_ax_ax>)))) (([(<any_Cx_y_z_ax_r> y)] | [(y <any_Cx_y_z_ax_r>)]) (ax | ((<any_Cx_y_z_ax_l_r> y) | (y <any_Cx_y_z_ax_l_r>)))) (([(<any_Cx_sh_y_l_ax> sh)] | [(sh <any_Cx_sh_y_l_ax>)]) (l | ((<any_Cx_sh_y_l_ax> sh) | (sh <any_Cx_sh_y_l_ax>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_d> d)] | [(d <any_Cx_sh_l_d>)]) sil))

results =
{72 [{sil 0 13} {eh 14 19} {z 20 24} {s 25 29} {k 30 35} {w 36 41} {ih 42 45} {r 46 49} {axl 50 65} {sil 66 77}]}
{80 [{sil 0 21} {z 22 32} {k 33 40} {w 41 46} {ih 47 49} {r 50 55} {axl 56 70} {sil 71 85}]}
{91 [{sil 0 24} {z 25 41} {k 42 46} {w 47 53} {ih 54 56} {r 57 63} {axl 64 90} {sil 91 145}]}
{105 [{sil 0 18} {th 19 21} {eh 22 29} {z 30 48} {k 49 53} {w 54 61} {ih 62 65} {r 66 72} {axl 73 78} {uh 79 90} {p 91 102} {sil 103 168}]}
{125 [{sil 0 32} {z 33 54} {k 55 61} {w 62 68} {uh 69 108} {sh 109 111} {r 112 116} {axl 117 119} {sil 120 198}]}

normalised results =
{72 [{sil 0 13} {eh 19 26} {z 28 33} {s 35 40} {k 42 49} {w 50 57} {ih 58 63} {r 64 68} {axl 69 90} {sil 92 107}]}
{80 [{sil 0 21} {z 28 40} {k 41 50} {w 51 58} {ih 59 59} {r 63 69} {axl 70 88} {sil 89 106}]}
{91 [{sil 0 24} {z 27 45} {k 46 51} {w 52 58} {ih 59 59} {r 63 69} {axl 70 99} {sil 100 159}]}
{105 [{sil 0 18} {th 18 18} {eh 21 28} {z 29 46} {k 47 50} {w 51 58} {ih 59 62} {r 63 69} {axl 70 74} {uh 75 86} {p 87 97} {sil 98 160}]}
{125 [{sil 0 32} {z 26 43} {k 44 49} {w 50 54} {uh 55 86} {sh 87 87} {r 90 93} {axl 94 94} {sil 96 158}]}

ruleAligned = [{{s 2} []} {{z 3} [{1 1} {2 1} {3 3} {4 1}]} {{k 0} [{0 4} {1 2} {2 2} {3 4} {4 2}]} {{w 0} [{0 5} {1 3} {2 3} {3 5} {4 3}]} {{ih 2} [{0 6} {3 6}]} {{r 0} [{0 7} {1 5} {2 5} {3 7} {4 6}]} {{axl 0} [{0 8} {1 6} {2 6} {3 8}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {eh 19 26} {z 28 28} {s 35 35} {k 42 49} {w 50 57} {ih 58 63} {r 64 68} {axl 69 90} {sil 92 92}]}
{80 [{sil 0 0} {z 28 40} {k 41 50} {w 51 58} {ih 59 59} {r 63 69} {axl 70 88} {sil 89 89}]}
{91 [{sil 0 0} {z 27 45} {k 46 51} {w 52 58} {ih 59 59} {r 63 69} {axl 70 99} {sil 100 100}]}
{105 [{sil 0 0} {th 18 18} {eh 21 28} {z 29 46} {k 47 50} {w 51 58} {ih 59 62} {r 63 69} {axl 70 74} {uh 75 86} {p 87 97} {sil 98 98}]}
{125 [{sil 0 0} {z 26 43} {k 44 49} {w 50 54} {uh 55 86} {sh 87 87} {r 90 93} {axl 94 94} {sil 96 96}]}

timeAligned = [{{z 28 43} [{1 1} {2 1} {4 1} {3 3}]} {{k 44 50} [{0 4} {1 2} {4 2} {2 2} {3 4}]} {{w 51 58} [{0 5} {1 3} {3 5} {4 3} {2 3}]} {{r 63 69} [{1 5} {2 5} {3 7} {0 7}]} {{axl 70 88} [{0 8} {1 6} {2 6} {3 8}]}]

i, iTime, newITime, timeStartFrom = 0 0 -1 0
i, iTime, newITime, timeStartFrom = 1 0 0 0
i, iTime, newITime, timeStartFrom = 2 0 1 40
i, iTime, newITime, timeStartFrom = 3 1 2 49
i, iTime, newITime, timeStartFrom = 4 2 -1 54
i, iTime, newITime, timeStartFrom = 5 2 3 54
i, iTime, newITime, timeStartFrom = 6 3 4 68
combinedVerdict    = [{s 2} {z 3} {k 0} {w 0} {ih 2} {r 0} {axl 0}]
ruleAlignedVerdict = [{s 2} {z 3} {k 0} {w 0} {ih 2} {r 0} {axl 0}]

score->
-2 for s
-2 for z
+2 for k
+2 for w
-2 for ih
+2 for r
+2 for axl
score<-: 2

results =
{72 [{sil 0 12} {t 13 16} {ih 17 21} {s 22 29} {kw 30 41} {ih 42 45} {r 46 49} {axl 50 65} {sil 66 77}]}
{80 [{sil 0 14} {eh 15 22} {z 23 27} {s 28 32} {kw 33 45} {ih 46 49} {r 50 55} {axl 56 70} {sil 71 85}]}
{91 [{sil 0 24} {z 25 40} {kw 41 52} {ih 53 56} {r 57 63} {axl 64 90} {sil 91 145}]}
{105 [{sil 0 22} {ch 23 25} {eh 26 29} {z 30 47} {kw 48 60} {ih 61 65} {r 66 72} {axl 73 77} {ah 78 96} {m 97 102} {sil 103 168}]}
{125 [{sil 0 32} {z 33 54} {kw 55 66} {uh 67 110} {z 111 113} {r 114 116} {axl 117 119} {sil 120 198}]}

normalised results =
{72 [{sil 0 12} {t 18 22} {ih 24 29} {s 31 40} {kw 42 57} {ih 58 63} {r 64 68} {axl 69 90} {sil 92 107}]}
{80 [{sil 0 14} {eh 19 28} {z 29 34} {s 35 40} {kw 41 56} {ih 58 61} {r 63 69} {axl 70 88} {sil 89 106}]}
{91 [{sil 0 24} {z 27 44} {kw 45 57} {ih 58 62} {r 63 69} {axl 70 99} {sil 100 159}]}
{105 [{sil 0 22} {ch 22 22} {eh 25 28} {z 29 45} {kw 46 57} {ih 58 62} {r 63 69} {axl 70 73} {ah 74 91} {m 92 97} {sil 98 160}]}
{125 [{sil 0 32} {z 26 43} {kw 44 53} {uh 54 88} {z 89 89} {r 91 91} {axl 94 94} {sil 96 158}]}

ruleAligned = [{{z 3} [{2 1} {3 3} {4 1}]} {{s 2} [{0 3}]} {{kw 0} [{0 4} {1 4} {2 2} {3 4} {4 2}]} {{ih 0} [{0 5} {1 5} {2 3} {3 5}]} {{r 0} [{0 6} {1 6} {2 4} {3 6}]} {{axl 0} [{0 7} {1 7} {2 5} {3 7}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {t 18 18} {ih 24 29} {s 31 40} {kw 42 57} {ih 58 63} {r 64 68} {axl 69 90} {sil 92 92}]}
{80 [{sil 0 0} {eh 19 28} {z 29 34} {s 35 35} {kw 41 56} {ih 58 61} {r 63 69} {axl 70 88} {sil 89 89}]}
{91 [{sil 0 0} {z 27 44} {kw 45 57} {ih 58 62} {r 63 69} {axl 70 99} {sil 100 100}]}
{105 [{sil 0 0} {ch 22 22} {eh 25 25} {z 29 45} {kw 46 57} {ih 58 62} {r 63 69} {axl 70 73} {ah 74 91} {m 92 97} {sil 98 98}]}
{125 [{sil 0 0} {z 26 43} {kw 44 53} {uh 54 88} {z 89 89} {r 91 91} {axl 94 94} {sil 96 96}]}

timeAligned = [{{z 29 43} [{1 2} {2 1} {3 3} {4 1}]} {{kw 44 57} [{0 4} {1 4} {4 2} {2 2} {3 4}]} {{ih 58 62} [{0 5} {1 5} {2 3} {3 5}]} {{r 63 69} [{1 6} {2 4} {3 6} {0 6}]} {{axl 70 88} [{0 7} {1 7} {2 5} {3 7}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 -1 43
i, iTime, newITime, timeStartFrom = 2 0 1 43
i, iTime, newITime, timeStartFrom = 3 1 2 53
i, iTime, newITime, timeStartFrom = 4 2 3 61
i, iTime, newITime, timeStartFrom = 5 3 4 68
combinedVerdict    = [{z 3} {s 2} {kw 0} {ih 0} {r 0} {axl 0}]
ruleAlignedVerdict = [{z 3} {s 2} {kw 0} {ih 0} {r 0} {axl 0}]

score->
-2 for z
-2 for s
+2 for kw
+2 for ih
+2 for r
+2 for axl
score<-: 4

results =
{72 [{sil 0 13} {eh 14 19} {z 20 24} {s 25 29} {k 30 35} {w 36 40} {ax 41 45} {r 46 49} {axl 50 65} {sil 66 77}]}
{80 [{sil 0 14} {t 15 18} {ih 19 23} {z 24 32} {k 33 40} {w 41 45} {ax 46 50} {r 51 55} {axl 56 70} {sil 71 85}]}
{91 [{sil 0 24} {z 25 41} {k 42 46} {w 47 53} {ax 54 58} {r 59 63} {axl 64 67} {uh 68 79} {m 80 87} {sil 88 145}]}
{105 [{sil 0 19} {eh 20 29} {z 30 45} {s 46 48} {k 49 53} {w 54 61} {ax 62 68} {r 69 72} {axl 73 77} {ah 78 100} {ng 101 103} {sil 104 168}]}
{125 [{sil 0 32} {z 33 54} {k 55 61} {w 62 71} {ax 72 82} {r 83 85} {axl 86 119} {sil 120 198}]}

normalised results =
{72 [{sil 0 13} {eh 19 26} {z 28 33} {s 35 40} {k 42 49} {w 50 56} {ax 57 63} {r 64 68} {axl 69 90} {sil 92 107}]}
{80 [{sil 0 14} {t 19 23} {ih 24 29} {z 30 40} {k 41 50} {w 51 56} {ax 58 63} {r 64 69} {axl 70 88} {sil 89 106}]}
{91 [{sil 0 24} {z 27 45} {k 46 51} {w 52 58} {ax 59 64} {r 65 69} {axl 70 74} {uh 75 87} {m 88 96} {sil 97 159}]}
{105 [{sil 0 19} {eh 19 28} {z 29 43} {s 44 44} {k 47 50} {w 51 58} {ax 59 65} {r 66 69} {axl 70 73} {ah 74 95} {ng 96 96} {sil 99 160}]}
{125 [{sil 0 32} {z 26 43} {k 44 49} {w 50 57} {ax 58 66} {r 66 66} {axl 69 95} {sil 96 158}]}

ruleAligned = [{{s 2} []} {{z 3} [{1 3} {2 1} {4 1}]} {{k 0} [{0 4} {1 4} {2 2} {3 4} {4 2}]} {{w 0} [{0 5} {1 5} {2 3} {3 5} {4 3}]} {{ax 0} [{0 6} {1 6} {2 4} {3 6} {4 4}]} {{r 0} [{0 7} {1 7} {2 5} {3 7}]} {{axl 0} [{0 8} {1 8} {2 6} {3 8} {4 6}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {eh 19 26} {z 28 28} {s 35 35} {k 42 49} {w 50 56} {ax 57 63} {r 64 68} {axl 69 90} {sil 92 92}]}
{80 [{sil 0 0} {t 19 23} {ih 24 29} {z 30 40} {k 41 50} {w 51 56} {ax 58 63} {r 64 69} {axl 70 88} {sil 89 89}]}
{91 [{sil 0 0} {z 27 45} {k 46 51} {w 52 58} {ax 59 64} {r 65 69} {axl 70 74} {uh 75 87} {m 88 96} {sil 97 97}]}
{105 [{sil 0 0} {eh 19 28} {z 29 43} {s 44 44} {k 47 50} {w 51 58} {ax 59 65} {r 66 69} {axl 70 73} {ah 74 95} {ng 96 96} {sil 99 99}]}
{125 [{sil 0 0} {z 26 43} {k 44 49} {w 50 57} {ax 58 66} {r 66 66} {axl 69 95} {sil 96 96}]}

timeAligned = [{{z 29 43} [{2 1} {3 2} {4 1} {1 3}]} {{k 44 50} [{0 4} {1 4} {4 2} {2 2} {3 4}]} {{w 51 57} [{0 5} {1 5} {3 5} {4 3} {2 3}]} {{ax 58 64} [{0 6} {1 6} {4 4} {2 4} {3 6}]} {{r 65 69} [{0 7} {1 7} {2 5} {3 7}]} {{axl 70 88} [{0 8} {1 8} {2 6} {3 8} {4 6}]}]

i, iTime, newITime, timeStartFrom = 0 0 -1 0
i, iTime, newITime, timeStartFrom = 1 0 0 0
i, iTime, newITime, timeStartFrom = 2 0 1 40
i, iTime, newITime, timeStartFrom = 3 1 2 49
i, iTime, newITime, timeStartFrom = 4 2 3 56
i, iTime, newITime, timeStartFrom = 5 3 4 63
i, iTime, newITime, timeStartFrom = 6 4 5 68
combinedVerdict    = [{s 2} {z 3} {k 0} {w 0} {ax 0} {r 0} {axl 0}]
ruleAlignedVerdict = [{s 2} {z 3} {k 0} {w 0} {ax 0} {r 0} {axl 0}]

score->
-2 for s
-2 for z
+2 for k
+2 for w
+2 for ax
+2 for r
+2 for axl
score<-: 6

results =
{72 [{sil 0 12} {t 13 16} {ih 17 21} {s 22 29} {kw 30 40} {ax 41 45} {r 46 51} {ax 52 56} {l 57 65} {sil 66 77}]}
{80 [{sil 0 14} {th 15 18} {ih 19 23} {z 24 32} {kw 33 45} {ax 46 50} {r 51 56} {ax 57 62} {l 63 70} {sil 71 85}]}
{91 [{sil 0 24} {z 25 40} {kw 41 52} {ax 53 58} {r 59 64} {ax 65 69} {l 70 87} {sil 88 145}]}
{105 [{sil 0 18} {th 19 21} {eh 22 29} {z 30 47} {kw 48 60} {ax 61 68} {r 69 75} {ax 76 83} {l 84 101} {sil 102 168}]}
{125 [{sil 0 32} {z 33 54} {kw 55 67} {ax 68 82} {r 83 87} {ax 88 93} {l 94 119} {sil 120 198}]}

normalised results =
{72 [{sil 0 12} {t 18 22} {ih 24 29} {s 31 40} {kw 42 56} {ax 57 63} {r 64 71} {ax 72 78} {l 79 90} {sil 92 107}]}
{80 [{sil 0 14} {th 19 23} {ih 24 29} {z 30 40} {kw 41 56} {ax 58 63} {r 64 70} {ax 71 78} {l 79 88} {sil 89 106}]}
{91 [{sil 0 24} {z 27 44} {kw 45 57} {ax 58 64} {r 65 70} {ax 71 76} {l 77 96} {sil 97 159}]}
{105 [{sil 0 18} {th 18 18} {eh 21 28} {z 29 45} {kw 46 57} {ax 58 65} {r 66 71} {ax 72 79} {l 80 96} {sil 97 160}]}
{125 [{sil 0 32} {z 26 43} {kw 44 54} {ax 54 66} {r 66 70} {ax 70 74} {l 75 95} {sil 96 158}]}

ruleAligned = [{{z 3} [{1 3} {2 1} {3 3} {4 1}]} {{s 2} [{0 3}]} {{kw 0} [{0 4} {1 4} {2 2} {3 4} {4 2}]} {{ax 0} [{0 5} {1 5} {2 3} {3 5} {4 3}]} {{r 0} [{0 6} {1 6} {2 4} {3 6} {4 4}]} {{ax 0} [{0 7} {1 7} {2 5} {3 7} {4 5}]} {{l 0} [{0 8} {1 8} {2 6} {3 8} {4 6}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {t 18 18} {ih 24 29} {s 31 40} {kw 42 56} {ax 57 63} {r 64 71} {ax 72 78} {l 79 90} {sil 92 92}]}
{80 [{sil 0 0} {th 19 23} {ih 24 29} {z 30 40} {kw 41 56} {ax 58 63} {r 64 70} {ax 71 78} {l 79 88} {sil 89 89}]}
{91 [{sil 0 0} {z 27 44} {kw 45 57} {ax 58 64} {r 65 70} {ax 71 76} {l 77 96} {sil 97 97}]}
{105 [{sil 0 0} {th 18 18} {eh 21 28} {z 29 45} {kw 46 57} {ax 58 65} {r 66 71} {ax 72 79} {l 80 96} {sil 97 97}]}
{125 [{sil 0 0} {z 26 43} {kw 44 54} {ax 54 66} {r 66 70} {ax 70 74} {l 75 95} {sil 96 96}]}

timeAligned = [{{z 29 43} [{2 1} {3 3} {4 1} {1 3}]} {{kw 44 56} [{0 4} {1 4} {4 2} {2 2} {3 4}]} {{ax 58 64} [{0 5} {1 5} {2 3} {3 5} {4 3}]} {{r 65 70} [{0 6} {1 6} {2 4} {3 6} {4 4}]} {{ax 71 78} [{1 7} {2 5} {4 5} {0 7} {3 7}]} {{l 79 95} [{0 8} {1 8} {2 6} {4 6} {3 8}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 -1 40
i, iTime, newITime, timeStartFrom = 2 0 1 40
i, iTime, newITime, timeStartFrom = 3 1 2 54
i, iTime, newITime, timeStartFrom = 4 2 3 63
i, iTime, newITime, timeStartFrom = 5 3 4 70
i, iTime, newITime, timeStartFrom = 6 4 5 74
combinedVerdict    = [{z 3} {s 2} {kw 0} {ax 0} {r 0} {ax 0} {l 0}]
ruleAlignedVerdict = [{z 3} {s 2} {kw 0} {ax 0} {r 0} {ax 0} {l 0}]

score->
-2 for z
-2 for s
+2 for kw
+2 for ax
+2 for r
+2 for ax
+2 for l
score<-: 6

results =
{72 [{sil 0 12} {t 13 16} {ih 17 21} {s 22 29} {kw 30 40} {ax 41 45} {r 46 49} {axl 50 65} {sil 66 77}]}
{80 [{sil 0 14} {eh 15 22} {z 23 27} {s 28 32} {kw 33 45} {ax 46 50} {r 51 55} {axl 56 70} {sil 71 85}]}
{91 [{sil 0 16} {th 17 21} {ih 22 26} {z 27 40} {kw 41 52} {ax 53 58} {r 59 63} {axl 64 90} {sil 91 145}]}
{105 [{sil 0 22} {sh 23 25} {eh 26 29} {z 30 47} {kw 48 60} {ax 61 68} {r 69 72} {axl 73 77} {ah 78 100} {ng 101 103} {sil 104 168}]}
{125 [{sil 0 32} {z 33 54} {kw 55 67} {ax 68 82} {r 83 85} {axl 86 119} {sil 120 198}]}

normalised results =
{72 [{sil 0 12} {t 18 22} {ih 24 29} {s 31 40} {kw 42 56} {ax 57 63} {r 64 68} {axl 69 90} {sil 92 107}]}
{80 [{sil 0 14} {eh 19 28} {z 29 34} {s 35 40} {kw 41 56} {ax 58 63} {r 64 69} {axl 70 88} {sil 89 106}]}
{91 [{sil 0 16} {th 19 23} {ih 24 29} {z 30 44} {kw 45 57} {ax 58 64} {r 65 69} {axl 70 99} {sil 100 159}]}
{105 [{sil 0 22} {sh 22 22} {eh 25 28} {z 29 45} {kw 46 57} {ax 58 65} {r 66 69} {axl 70 73} {ah 74 95} {ng 96 96} {sil 99 160}]}
{125 [{sil 0 32} {z 26 43} {kw 44 54} {ax 54 66} {r 66 66} {axl 69 95} {sil 96 158}]}

ruleAligned = [{{z 3} [{2 3} {3 3} {4 1}]} {{s 2} [{0 3}]} {{kw 0} [{0 4} {1 4} {2 4} {3 4} {4 2}]} {{ax 0} [{0 5} {1 5} {2 5} {3 5} {4 3}]} {{r 0} [{0 6} {1 6} {2 6} {3 6}]} {{axl 0} [{0 7} {1 7} {2 7} {3 7} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {t 18 18} {ih 24 29} {s 31 40} {kw 42 56} {ax 57 63} {r 64 68} {axl 69 90} {sil 92 92}]}
{80 [{sil 0 0} {eh 19 28} {z 29 34} {s 35 35} {kw 41 56} {ax 58 63} {r 64 69} {axl 70 88} {sil 89 89}]}
{91 [{sil 0 0} {th 19 23} {ih 24 29} {z 30 44} {kw 45 57} {ax 58 64} {r 65 69} {axl 70 99} {sil 100 100}]}
{105 [{sil 0 0} {sh 22 22} {eh 25 25} {z 29 45} {kw 46 57} {ax 58 65} {r 66 69} {axl 70 73} {ah 74 95} {ng 96 96} {sil 99 99}]}
{125 [{sil 0 0} {z 26 43} {kw 44 54} {ax 54 66} {r 66 66} {axl 69 95} {sil 96 96}]}

timeAligned = [{{z 29 43} [{1 2} {3 3} {4 1} {2 3}]} {{kw 44 56} [{0 4} {1 4} {4 2} {2 4} {3 4}]} {{ax 58 64} [{0 5} {1 5} {2 5} {3 5} {4 3}]} {{r 65 69} [{0 6} {1 6} {2 6} {3 6}]} {{axl 70 90} [{0 7} {1 7} {2 7} {3 7} {4 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 -1 43
i, iTime, newITime, timeStartFrom = 2 0 1 43
i, iTime, newITime, timeStartFrom = 3 1 2 54
i, iTime, newITime, timeStartFrom = 4 2 3 63
i, iTime, newITime, timeStartFrom = 5 3 4 68
combinedVerdict    = [{z 3} {s 2} {kw 0} {ax 0} {r 0} {axl 0}]
ruleAlignedVerdict = [{z 3} {s 2} {kw 0} {ax 0} {r 0} {axl 0}]

score->
-2 for z
-2 for s
+2 for kw
+2 for ax
+2 for r
+2 for axl
score<-: 4

results =
{72 [{sil 0 19} {z 20 29} {k 30 35} {w 36 40} {ax 41 45} {r 46 51} {ax 52 56} {l 57 65} {sil 66 77}]}
{80 [{sil 0 14} {eh 15 22} {z 23 27} {s 28 32} {k 33 40} {w 41 45} {ax 46 50} {r 51 56} {ax 57 62} {l 63 70} {sil 71 85}]}
{91 [{sil 0 24} {z 25 41} {k 42 46} {w 47 53} {ax 54 58} {r 59 64} {ax 65 69} {l 70 72} {uh 73 83} {f 84 88} {sil 89 145}]}
{105 [{sil 0 22} {sh 23 25} {eh 26 29} {z 30 48} {k 49 53} {w 54 61} {ax 62 68} {r 69 71} {ax 72 74} {l 75 77} {ah 78 97} {f 98 101} {sil 102 168}]}
{125 [{sil 0 32} {z 33 54} {k 55 61} {w 62 71} {ax 72 82} {r 83 87} {ax 88 93} {l 94 119} {sil 120 198}]}

normalised results =
{72 [{sil 0 19} {z 28 40} {k 42 49} {w 50 56} {ax 57 63} {r 64 71} {ax 72 78} {l 79 90} {sil 92 107}]}
{80 [{sil 0 14} {eh 19 28} {z 29 34} {s 35 40} {k 41 50} {w 51 56} {ax 58 63} {r 64 70} {ax 71 78} {l 79 88} {sil 89 106}]}
{91 [{sil 0 24} {z 27 45} {k 46 51} {w 52 58} {ax 59 64} {r 65 70} {ax 71 76} {l 77 77} {uh 80 91} {f 92 97} {sil 98 159}]}
{105 [{sil 0 22} {sh 22 22} {eh 25 28} {z 29 46} {k 47 50} {w 51 58} {ax 59 65} {r 66 66} {ax 69 69} {l 71 71} {ah 74 92} {f 93 96} {sil 97 160}]}
{125 [{sil 0 32} {z 26 43} {k 44 49} {w 50 57} {ax 58 66} {r 66 70} {ax 70 74} {l 75 95} {sil 96 158}]}

ruleAligned = [{{s 2} []} {{z 3} [{0 1} {2 1} {3 3} {4 1}]} {{k 0} [{0 2} {1 4} {2 2} {3 4} {4 2}]} {{w 0} [{0 3} {1 5} {2 3} {3 5} {4 3}]} {{ax 0} [{0 4} {1 6} {2 4} {3 6} {4 4}]} {{r 0} [{0 5} {1 7} {2 5} {4 5}]} {{ax 0} [{0 6} {1 8} {2 6} {4 6}]} {{l 1} [{0 7} {1 9} {4 7}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {z 28 40} {k 42 49} {w 50 56} {ax 57 63} {r 64 71} {ax 72 78} {l 79 90} {sil 92 92}]}
{80 [{sil 0 0} {eh 19 28} {z 29 34} {s 35 35} {k 41 50} {w 51 56} {ax 58 63} {r 64 70} {ax 71 78} {l 79 88} {sil 89 89}]}
{91 [{sil 0 0} {z 27 45} {k 46 51} {w 52 58} {ax 59 64} {r 65 70} {ax 71 76} {l 77 77} {uh 80 91} {f 92 97} {sil 98 98}]}
{105 [{sil 0 0} {sh 22 22} {eh 25 25} {z 29 46} {k 47 50} {w 51 58} {ax 59 65} {r 66 66} {ax 69 69} {l 71 71} {ah 74 92} {f 93 93} {sil 97 97}]}
{125 [{sil 0 0} {z 26 43} {k 44 49} {w 50 57} {ax 58 66} {r 66 70} {ax 70 74} {l 75 95} {sil 96 96}]}

timeAligned = [{{z 28 43} [{0 1} {2 1} {4 1} {1 2} {3 3}]} {{k 44 50} [{0 2} {1 4} {4 2} {2 2} {3 4}]} {{w 51 57} [{0 3} {1 5} {3 5} {4 3} {2 3}]} {{ax 58 64} [{0 4} {1 6} {4 4} {2 4} {3 6}]} {{r 65 70} [{0 5} {1 7} {2 5} {4 5}]} {{ax 71 76} [{1 8} {2 6} {4 6} {0 6}]} {{l 79 88} [{0 7} {1 9} {4 7}]}]

i, iTime, newITime, timeStartFrom = 0 0 -1 0
i, iTime, newITime, timeStartFrom = 1 0 0 0
i, iTime, newITime, timeStartFrom = 2 0 1 40
i, iTime, newITime, timeStartFrom = 3 1 2 49
i, iTime, newITime, timeStartFrom = 4 2 3 56
i, iTime, newITime, timeStartFrom = 5 3 4 63
i, iTime, newITime, timeStartFrom = 6 4 5 70
i, iTime, newITime, timeStartFrom = 7 5 6 74
combinedVerdict    = [{s 2} {z 3} {k 0} {w 0} {ax 0} {r 0} {ax 0} {l 1}]
ruleAlignedVerdict = [{s 2} {z 3} {k 0} {w 0} {ax 0} {r 0} {ax 0} {l 1}]

score->
-2 for s
-2 for z
+2 for k
+2 for w
+2 for ax
+2 for r
+2 for ax
+1 for l
score<-: 7

results =
{72 [{sil 0 13} {th 14 16} {ih 17 21} {s 22 29} {kw 30 41} {ih 42 45} {r 46 51} {ax 52 56} {l 57 65} {sil 66 77}]}
{80 [{sil 0 21} {z 22 32} {kw 33 45} {ih 46 49} {r 50 56} {ax 57 62} {l 63 70} {sil 71 85}]}
{91 [{sil 0 16} {th 17 21} {ih 22 26} {z 27 40} {kw 41 52} {ih 53 56} {r 57 64} {ax 65 69} {l 70 87} {sil 88 145}]}
{105 [{sil 0 22} {sh 23 25} {eh 26 29} {z 30 47} {kw 48 58} {ih 59 61} {r 62 64} {ax 65 68} {l 69 71} {r 72 74} {ah 75 102} {sil 103 168}]}
{125 [{sil 0 32} {z 33 54} {kw 55 66} {uh 67 107} {z 108 110} {r 111 113} {ax 114 116} {l 117 119} {sil 120 198}]}

normalised results =
{72 [{sil 0 13} {th 19 19} {ih 24 29} {s 31 40} {kw 42 57} {ih 58 63} {r 64 71} {ax 72 78} {l 79 90} {sil 92 107}]}
{80 [{sil 0 21} {z 28 40} {kw 41 56} {ih 58 61} {r 63 70} {ax 71 78} {l 79 88} {sil 89 106}]}
{91 [{sil 0 16} {th 19 23} {ih 24 29} {z 30 44} {kw 45 57} {ih 58 62} {r 63 70} {ax 71 76} {l 77 96} {sil 97 159}]}
{105 [{sil 0 22} {sh 22 22} {eh 25 28} {z 29 45} {kw 46 55} {ih 56 56} {r 59 59} {ax 62 65} {l 66 66} {r 69 69} {ah 71 97} {sil 98 160}]}
{125 [{sil 0 32} {z 26 43} {kw 44 53} {uh 54 86} {z 86 86} {r 89 89} {ax 91 91} {l 94 94} {sil 96 158}]}

ruleAligned = [{{z 3} [{1 1} {2 3} {3 3} {4 1}]} {{s 2} [{0 3}]} {{kw 0} [{0 4} {1 2} {2 4} {3 4} {4 2}]} {{ih 1} [{0 5} {1 3} {2 5}]} {{r 1} [{0 6} {1 4} {2 6}]} {{ax 0} [{0 7} {1 5} {2 7} {3 7}]} {{l 1} [{0 8} {1 6} {2 8}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {th 19 19} {ih 24 29} {s 31 40} {kw 42 57} {ih 58 63} {r 64 71} {ax 72 78} {l 79 90} {sil 92 92}]}
{80 [{sil 0 0} {z 28 40} {kw 41 56} {ih 58 61} {r 63 70} {ax 71 78} {l 79 88} {sil 89 89}]}
{91 [{sil 0 0} {th 19 19} {ih 24 29} {z 30 44} {kw 45 57} {ih 58 62} {r 63 70} {ax 71 76} {l 77 96} {sil 97 97}]}
{105 [{sil 0 0} {sh 22 22} {eh 25 25} {z 29 45} {kw 46 55} {ih 56 56} {r 59 59} {ax 62 65} {l 66 66} {r 69 69} {ah 71 97} {sil 98 98}]}
{125 [{sil 0 0} {z 26 43} {kw 44 53} {uh 54 86} {z 86 86} {r 89 89} {ax 91 91} {l 94 94} {sil 96 96}]}

timeAligned = [{{z 29 43} [{1 1} {3 3} {4 1} {2 3}]} {{kw 44 56} [{0 4} {1 2} {4 2} {2 4} {3 4}]} {{ih 58 61} [{0 5} {1 3} {2 5}]} {{r 64 70} [{0 6} {1 4} {2 6}]} {{ax 72 76} [{0 7} {1 5} {2 7}]} {{l 79 88} [{0 8} {1 6} {2 8}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 -1 40
i, iTime, newITime, timeStartFrom = 2 0 1 40
i, iTime, newITime, timeStartFrom = 3 1 2 53
i, iTime, newITime, timeStartFrom = 4 2 3 61
i, iTime, newITime, timeStartFrom = 5 3 4 70
i, iTime, newITime, timeStartFrom = 6 4 5 76
combinedVerdict    = [{z 3} {s 2} {kw 0} {ih 1} {r 1} {ax 0} {l 1}]
ruleAlignedVerdict = [{z 3} {s 2} {kw 0} {ih 1} {r 1} {ax 0} {l 1}]

score->
-2 for z
-2 for s
+2 for kw
+1 for ih
+1 for r
+2 for ax
+1 for l
score<-: 3

results =
{72 [{sil 0 19} {z 20 29} {k 30 35} {w 36 41} {ih 42 45} {r 46 51} {ax 52 56} {l 57 65} {sil 66 77}]}
{80 [{sil 0 21} {z 22 32} {k 33 40} {w 41 46} {ih 47 49} {r 50 56} {ax 57 62} {l 63 70} {sil 71 85}]}
{91 [{sil 0 16} {th 17 21} {ih 22 26} {z 27 41} {k 42 46} {w 47 53} {ih 54 56} {r 57 64} {ax 65 69} {l 70 72} {uh 73 78} {d 79 88} {sil 89 145}]}
{105 [{sil 0 14} {z 15 17} {k 18 23} {w 24 26} {ih 27 31} {z 32 44} {v 45 48} {ax 49 52} {l 53 60} {thr 61 75} {ah 76 102} {sil 103 168}]}
{125 [{sil 0 32} {z 33 54} {k 55 61} {w 62 68} {uh 69 107} {sh 108 110} {r 111 113} {ax 114 116} {l 117 119} {sil 120 198}]}

normalised results =
{72 [{sil 0 19} {z 28 40} {k 42 49} {w 50 57} {ih 58 63} {r 64 71} {ax 72 78} {l 79 90} {sil 92 107}]}
{80 [{sil 0 21} {z 28 40} {k 41 50} {w 51 58} {ih 59 59} {r 63 70} {ax 71 78} {l 79 88} {sil 89 106}]}
{91 [{sil 0 16} {th 19 23} {ih 24 29} {z 30 45} {k 46 51} {w 52 58} {ih 59 59} {r 63 70} {ax 71 76} {l 77 77} {uh 80 86} {d 87 97} {sil 98 159}]}
{105 [{sil 0 14} {z 14 14} {k 17 22} {w 23 23} {ih 26 30} {z 30 42} {v 43 46} {ax 47 50} {l 50 57} {thr 58 71} {ah 72 97} {sil 98 160}]}
{125 [{sil 0 32} {z 26 43} {k 44 49} {w 50 54} {uh 55 86} {sh 86 86} {r 89 89} {ax 91 91} {l 94 94} {sil 96 158}]}

ruleAligned = [{{s 2} []} {{z 3} [{0 1} {1 1} {2 3} {4 1}]} {{k 0} [{0 2} {1 2} {2 4} {3 2} {4 2}]} {{w 0} [{0 3} {1 3} {2 5} {4 3}]} {{ih 2} [{0 4} {3 4}]} {{r 1} [{0 5} {1 5} {2 7}]} {{ax 0} [{0 6} {1 6} {2 8} {3 7}]} {{l 1} [{0 7} {1 7} {3 8}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {z 28 40} {k 42 49} {w 50 57} {ih 58 63} {r 64 71} {ax 72 78} {l 79 90} {sil 92 92}]}
{80 [{sil 0 0} {z 28 40} {k 41 50} {w 51 58} {ih 59 59} {r 63 70} {ax 71 78} {l 79 88} {sil 89 89}]}
{91 [{sil 0 0} {th 19 23} {ih 24 29} {z 30 45} {k 46 51} {w 52 58} {ih 59 59} {r 63 70} {ax 71 76} {l 77 77} {uh 80 86} {d 87 97} {sil 98 98}]}
{105 [{sil 0 0} {z 14 14} {k 17 22} {w 23 23} {ih 26 30} {z 30 42} {v 43 43} {ax 47 50} {l 50 57} {thr 58 71} {ah 72 97} {sil 98 98}]}
{125 [{sil 0 0} {z 26 43} {k 44 49} {w 50 54} {uh 55 86} {sh 86 86} {r 89 89} {ax 91 91} {l 94 94} {sil 96 96}]}

timeAligned = [{{z 28 42} [{0 1} {1 1} {4 1} {2 3} {3 5}]} {{k 44 49} [{0 2} {1 2} {4 2} {2 4}]} {{w 51 57} [{0 3} {1 3} {4 3} {2 5}]} {{r 64 70} [{0 5} {1 5} {2 7}]} {{ax 72 76} [{0 6} {1 6} {2 8}]}]

i, iTime, newITime, timeStartFrom = 0 0 -1 0
i, iTime, newITime, timeStartFrom = 1 0 0 0
i, iTime, newITime, timeStartFrom = 2 0 1 40
i, iTime, newITime, timeStartFrom = 3 1 2 49
i, iTime, newITime, timeStartFrom = 4 2 -1 54
i, iTime, newITime, timeStartFrom = 5 2 3 54
i, iTime, newITime, timeStartFrom = 6 3 4 70
i, iTime, newITime, timeStartFrom = 7 4 -1 76
combinedVerdict    = [{s 2} {z 3} {k 0} {w 0} {ih 2} {r 1} {ax 0} {l 2}]
ruleAlignedVerdict = [{s 2} {z 3} {k 0} {w 0} {ih 2} {r 1} {ax 0} {l 1}]

score->
-2 for s
-2 for z
+2 for k
+2 for w
-2 for ih
+1 for r
+2 for ax
-2 for l
score<-: -1
bestResult = {7 [{s 2} {z 3} {k 0} {w 0} {ax 0} {r 0} {ax 0} {l 1}] [s k w ax r ax l]}
testPronounce s missing z surprise k good w good ax good r good ax good l possible
publish->
phonsToAlphas = [{[s] s} {[k w] qu} {[ax] i} {[r] rr} {[ax] e} {[l] l}]
getVerdict<-:new {s [s] 2}
getVerdict<-:new {i [ax] 0}
getVerdict<-:new {rr [r] 0}
getVerdict<-:new {e [ax] 0}
getVerdict<-:new {l [l] 1}
lettersVerdicts = [{s [s] 2} {z [z] 3} {qu [k w] 0} {i [ax] 0} {rr [r] 0} {e [ax] 0} {l [l] 1}]
publish<-
{
  "word": "squirrel",
  "results": [
    {
      "letters": "s",
      "phonemes": "s",
      "verdict": "missing"
    },
    {
      "letters": "z",
      "phonemes": "z",
      "verdict": "surprise"
    },
    {
      "letters": "qu",
      "phonemes": "k w",
      "verdict": "good"
    },
    {
      "letters": "i",
      "phonemes": "ə",
      "verdict": "good"
    },
    {
      "letters": "rr",
      "phonemes": "ɹ",
      "verdict": "good"
    },
    {
      "letters": "e",
      "phonemes": "ə",
      "verdict": "good"
    },
    {
      "letters": "l",
      "phonemes": "l",
      "verdict": "possible"
    }
  ],
  "err": null
}
