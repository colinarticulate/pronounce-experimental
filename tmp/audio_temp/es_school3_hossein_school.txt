Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_53d78c01-9890-47a7-a0a4-b413694c3588 audiofile /Users/test/go/src/Phonemes/audio_clips/es_school3_hossein.wav word school dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  2.410312



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.9 0.9199999999999999 1.8199999999999998

 start3, duration3, end3 =  0.9 0.32 1.22

 Initial start, duration, end =  0.8 1.0199999999999998 1.8199999999999998

 Cut at: start, duration =  0.8 1.4699999999999998     guard_end =  2.2699999999999996 

Running scan for frate = 125
Running scan for frate = 125
Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard n with value 3 for uwl ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard z with value 5 for uw ...
Considering guard zh with value 5 for uw ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 125 public <school> = (((sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]) | (sil p (sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]))) (([(<any_Cx_oy_p_th_s_k> oy)] | [(oy <any_Cx_oy_p_th_s_k>)]) (s | z | ((<any_Cx_oy_p_th_s_k> oy) | (oy <any_Cx_oy_p_th_s_k>)))) (([(<any_Cx_n_oy_k_s> n)] | [(n <any_Cx_n_oy_k_s>)]) (k | ((<any_Cx_n_oy_k_uwl> n) | (n <any_Cx_n_oy_k_uwl>)))) (([(<any_Cx_n_n_uwl_k> n)] | [(n <any_Cx_n_n_uwl_k>)]) (uwl | ((<any_Cx_n_n_uwl_k> n) | (n <any_Cx_n_n_uwl_k>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_n_uwl_f> f)] | [(f <any_Cx_n_uwl_f>)]) sil))
frate, target rule = 125 public <school> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_oy_p_ch_s_k> oy)] | [(oy <any_Cx_oy_p_ch_s_k>)]) (s | z | ((<any_Cx_oy_p_ch_s_k> oy) | (oy <any_Cx_oy_p_ch_s_k>)))) (([(<any_Cx_n_oy_k_s> n)] | [(n <any_Cx_n_oy_k_s>)]) (k | ((<any_Cx_n_oy_k> n) | (n <any_Cx_n_oy_k>)))) ((([(<any_Vx_z_n_uw_noSlide> z)] | [(z <any_Vx_z_n_uw_noSlide>)]) ([(<any_Cx_z_n_l_k> z)] | [(z <any_Cx_z_n_l_k>)])) (uw | ((<any_Vx_z_n_uw_noSlide> z) | (z <any_Vx_z_n_uw_noSlide>)))) (([(<any_Cx_sh_z_l> sh)] | [(sh <any_Cx_sh_z_l>)]) (l | ((<any_Cx_sh_z_l> sh) | (sh <any_Cx_sh_z_l>)))) (([(<any_vowel_noSlide> w)] | [(w <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_w> w)] | [(w <any_Cx_sh_l_w>)]) sil))
Running scan for frate = 105
Running scan for frate = 105
Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard n with value 3 for uwl ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

frate, target rule = 105 public <school> = (((sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]) | (sil p (sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]))) (([(<any_Cx_oy_p_th_s_k> oy)] | [(oy <any_Cx_oy_p_th_s_k>)]) (s | z | ((<any_Cx_oy_p_th_s_k> oy) | (oy <any_Cx_oy_p_th_s_k>)))) (([(<any_Cx_n_oy_k_s> n)] | [(n <any_Cx_n_oy_k_s>)]) (k | ((<any_Cx_n_oy_k_uwl> n) | (n <any_Cx_n_oy_k_uwl>)))) (([(<any_Cx_n_n_uwl_k> n)] | [(n <any_Cx_n_n_uwl_k>)]) (uwl | ((<any_Cx_n_n_uwl_k> n) | (n <any_Cx_n_n_uwl_k>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_n_uwl_m> m)] | [(m <any_Cx_n_uwl_m>)]) sil))
Considering guard z with value 5 for uw ...
Considering guard zh with value 5 for uw ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Running scan for frate = 91
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

frate, target rule = 105 public <school> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_oy_p_ch_s_k> oy)] | [(oy <any_Cx_oy_p_ch_s_k>)]) (s | z | ((<any_Cx_oy_p_ch_s_k> oy) | (oy <any_Cx_oy_p_ch_s_k>)))) (([(<any_Cx_n_oy_k_s> n)] | [(n <any_Cx_n_oy_k_s>)]) (k | ((<any_Cx_n_oy_k> n) | (n <any_Cx_n_oy_k>)))) ((([(<any_Vx_z_n_uw_noSlide> z)] | [(z <any_Vx_z_n_uw_noSlide>)]) ([(<any_Cx_z_n_l_k> z)] | [(z <any_Cx_z_n_l_k>)])) (uw | ((<any_Vx_z_n_uw_noSlide> z) | (z <any_Vx_z_n_uw_noSlide>)))) (([(<any_Cx_sh_z_l> sh)] | [(sh <any_Cx_sh_z_l>)]) (l | ((<any_Cx_sh_z_l> sh) | (sh <any_Cx_sh_z_l>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_d> d)] | [(d <any_Cx_sh_l_d>)]) sil))
Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard n with value 3 for uwl ...
candidateGuards = map[n:true]
Picking guard, n

Running scan for frate = 91
frate, target rule = 91 public <school> = (((sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil p (sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_oy_p_sh_s_k> oy)] | [(oy <any_Cx_oy_p_sh_s_k>)]) (s | z | ((<any_Cx_oy_p_sh_s_k> oy) | (oy <any_Cx_oy_p_sh_s_k>)))) (([(<any_Cx_n_oy_k_s> n)] | [(n <any_Cx_n_oy_k_s>)]) (k | ((<any_Cx_n_oy_k_uwl> n) | (n <any_Cx_n_oy_k_uwl>)))) (([(<any_Cx_n_n_uwl_k> n)] | [(n <any_Cx_n_n_uwl_k>)]) (uwl | ((<any_Cx_n_n_uwl_k> n) | (n <any_Cx_n_n_uwl_k>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_n_uwl_hh> hh)] | [(hh <any_Cx_n_uwl_hh>)]) sil))
Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Running scan for frate = 80
Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard zh with value 5 for uw ...
Considering guard z with value 5 for uw ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

frate, target rule = 91 public <school> = (((sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]) | (sil p (sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]))) (([(<any_Cx_oy_p_th_s_k> oy)] | [(oy <any_Cx_oy_p_th_s_k>)]) (s | z | ((<any_Cx_oy_p_th_s_k> oy) | (oy <any_Cx_oy_p_th_s_k>)))) (([(<any_Cx_n_oy_k_s> n)] | [(n <any_Cx_n_oy_k_s>)]) (k | ((<any_Cx_n_oy_k> n) | (n <any_Cx_n_oy_k>)))) ((([(<any_Vx_zh_n_uw_noSlide> zh)] | [(zh <any_Vx_zh_n_uw_noSlide>)]) ([(<any_Cx_zh_n_l_k> zh)] | [(zh <any_Cx_zh_n_l_k>)])) (uw | ((<any_Vx_zh_n_uw_noSlide> zh) | (zh <any_Vx_zh_n_uw_noSlide>)))) (([(<any_Cx_sh_zh_l> sh)] | [(sh <any_Cx_sh_zh_l>)]) (l | ((<any_Cx_sh_zh_l> sh) | (sh <any_Cx_sh_zh_l>)))) (([(<any_vowel_noSlide> r)] | [(r <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_r> r)] | [(r <any_Cx_sh_l_r>)]) sil))
Considering guard n with value 3 for uwl ...
candidateGuards = map[n:true]
Picking guard, n

Running scan for frate = 80
frate, target rule = 80 public <school> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_oy_p_ch_s_k> oy)] | [(oy <any_Cx_oy_p_ch_s_k>)]) (s | z | ((<any_Cx_oy_p_ch_s_k> oy) | (oy <any_Cx_oy_p_ch_s_k>)))) (([(<any_Cx_n_oy_k_s> n)] | [(n <any_Cx_n_oy_k_s>)]) (k | ((<any_Cx_n_oy_k_uwl> n) | (n <any_Cx_n_oy_k_uwl>)))) (([(<any_Cx_n_n_uwl_k> n)] | [(n <any_Cx_n_n_uwl_k>)]) (uwl | ((<any_Cx_n_n_uwl_k> n) | (n <any_Cx_n_n_uwl_k>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_n_uwl_n> n)] | [(n <any_Cx_n_uwl_n>)]) sil))
Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Running scan for frate = 72
Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard zh with value 5 for uw ...
Considering guard z with value 5 for uw ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard n with value 3 for uwl ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 72 public <school> = (((sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil p (sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_oy_p_t_s_k> oy)] | [(oy <any_Cx_oy_p_t_s_k>)]) (s | z | ((<any_Cx_oy_p_t_s_k> oy) | (oy <any_Cx_oy_p_t_s_k>)))) (([(<any_Cx_n_oy_k_s> n)] | [(n <any_Cx_n_oy_k_s>)]) (k | ((<any_Cx_n_oy_k_uwl> n) | (n <any_Cx_n_oy_k_uwl>)))) (([(<any_Cx_n_n_uwl_k> n)] | [(n <any_Cx_n_n_uwl_k>)]) (uwl | ((<any_Cx_n_n_uwl_k> n) | (n <any_Cx_n_n_uwl_k>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_n_uwl_m> m)] | [(m <any_Cx_n_uwl_m>)]) sil))
frate, target rule = 80 public <school> = (((sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]) | (sil p (sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]))) (([(<any_Cx_oy_p_th_s_k> oy)] | [(oy <any_Cx_oy_p_th_s_k>)]) (s | z | ((<any_Cx_oy_p_th_s_k> oy) | (oy <any_Cx_oy_p_th_s_k>)))) (([(<any_Cx_n_oy_k_s> n)] | [(n <any_Cx_n_oy_k_s>)]) (k | ((<any_Cx_n_oy_k> n) | (n <any_Cx_n_oy_k>)))) ((([(<any_Vx_zh_n_uw_noSlide> zh)] | [(zh <any_Vx_zh_n_uw_noSlide>)]) ([(<any_Cx_zh_n_l_k> zh)] | [(zh <any_Cx_zh_n_l_k>)])) (uw | ((<any_Vx_zh_n_uw_noSlide> zh) | (zh <any_Vx_zh_n_uw_noSlide>)))) (([(<any_Cx_sh_zh_l> sh)] | [(sh <any_Cx_sh_zh_l>)]) (l | ((<any_Cx_sh_zh_l> sh) | (sh <any_Cx_sh_zh_l>)))) (([(<any_vowel_noSlide> r)] | [(r <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_r> r)] | [(r <any_Cx_sh_l_r>)]) sil))
Running scan for frate = 72
Considering guard oy with value 1 for s ...
candidateGuards = map[oy:true]
Picking guard, oy

Considering guard n with value 6 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard z with value 5 for uw ...
Considering guard zh with value 5 for uw ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 72 public <school> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_oy_p_ch_s_k> oy)] | [(oy <any_Cx_oy_p_ch_s_k>)]) (s | z | ((<any_Cx_oy_p_ch_s_k> oy) | (oy <any_Cx_oy_p_ch_s_k>)))) (([(<any_Cx_n_oy_k_s> n)] | [(n <any_Cx_n_oy_k_s>)]) (k | ((<any_Cx_n_oy_k> n) | (n <any_Cx_n_oy_k>)))) ((([(<any_Vx_zh_n_uw_noSlide> zh)] | [(zh <any_Vx_zh_n_uw_noSlide>)]) ([(<any_Cx_zh_n_l_k> zh)] | [(zh <any_Cx_zh_n_l_k>)])) (uw | ((<any_Vx_zh_n_uw_noSlide> zh) | (zh <any_Vx_zh_n_uw_noSlide>)))) (([(<any_Cx_sh_zh_l> sh)] | [(sh <any_Cx_sh_zh_l>)]) (l | ((<any_Cx_sh_zh_l> sh) | (sh <any_Cx_sh_zh_l>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_sh_l_d> d)] | [(d <any_Cx_sh_l_d>)]) sil))

results =
{72 [{sil 0 11} {t 12 15} {ih 16 22} {s 23 33} {k 34 44} {l 45 58} {n 59 63} {sil 64 78}]}
{80 [{sil 0 14} {ch 15 17} {ih 18 25} {s 26 37} {k 38 48} {l 49 65} {n 66 70} {sil 71 84}]}
{91 [{sil 0 11} {sh 12 14} {eh 15 26} {z 27 43} {k 44 58} {uwl 59 79} {sil 80 132}]}
{105 [{sil 0 18} {th 19 21} {eh 22 31} {z 32 49} {k 50 67} {uwl 68 92} {sil 93 153}]}
{125 [{sil 0 20} {th 21 23} {eh 24 35} {z 36 57} {k 58 78} {uwl 79 120} {sil 121 180}]}

normalised results =
{72 [{sil 0 11} {t 17 21} {ih 22 31} {s 32 46} {k 47 61} {l 63 81} {n 82 88} {sil 89 108}]}
{80 [{sil 0 14} {ch 19 19} {ih 23 31} {s 33 46} {k 48 60} {l 61 81} {n 83 88} {sil 89 105}]}
{91 [{sil 0 11} {sh 13 13} {eh 16 29} {z 30 47} {k 48 64} {uwl 65 87} {sil 88 145}]}
{105 [{sil 0 18} {th 18 18} {eh 21 30} {z 30 47} {k 48 64} {uwl 65 88} {sil 89 146}]}
{125 [{sil 0 20} {th 17 17} {eh 19 28} {z 29 46} {k 46 62} {uwl 63 96} {sil 97 144}]}

ruleAligned = [{{eh 3} [{2 2} {3 2} {4 2}]} {{z 3} [{2 3} {3 3} {4 3}]} {{s 2} [{0 3} {1 3}]} {{k 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{uwl 1} [{2 5} {3 5} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {t 17 17} {ih 22 31} {s 32 46} {k 47 61} {l 63 81} {n 82 88} {sil 89 89}]}
{80 [{sil 0 0} {ch 19 19} {ih 23 31} {s 33 46} {k 48 60} {l 61 81} {n 83 88} {sil 89 89}]}
{91 [{sil 0 0} {sh 13 13} {eh 16 29} {z 30 47} {k 48 64} {uwl 65 87} {sil 88 88}]}
{105 [{sil 0 0} {th 18 18} {eh 21 30} {z 30 47} {k 48 64} {uwl 65 88} {sil 89 89}]}
{125 [{sil 0 0} {th 17 17} {eh 19 28} {z 29 46} {k 46 62} {uwl 63 96} {sil 97 97}]}

timeAligned = [{{eh 21 28} [{2 2} {3 2} {4 2}]} {{z 30 46} [{2 3} {3 3} {4 3}]} {{k 48 62} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{uwl 65 87} [{2 5} {3 5} {4 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 28
i, iTime, newITime, timeStartFrom = 2 1 -1 46
i, iTime, newITime, timeStartFrom = 3 1 2 46
i, iTime, newITime, timeStartFrom = 4 2 3 60
combinedVerdict    = [{eh 3} {z 3} {s 2} {k 0} {uwl 1}]
ruleAlignedVerdict = [{eh 3} {z 3} {s 2} {k 0} {uwl 1}]

score->
-2 for eh
-2 for z
-2 for s
+2 for k
+1 for uwl
score<-: -3

results =
{72 [{sil 0 12} {ch 13 15} {ih 16 22} {s 23 33} {k 34 45} {uw 46 53} {l 54 63} {sil 64 78}]}
{80 [{sil 0 14} {th 15 17} {ih 18 25} {s 26 37} {k 38 51} {uw 52 58} {l 59 70} {sil 71 84}]}
{91 [{sil 0 15} {th 16 18} {ih 19 28} {s 29 42} {k 43 58} {uw 59 65} {l 66 79} {sil 80 132}]}
{105 [{sil 0 14} {s 15 17} {k 18 24} {ih 25 31} {z 32 42} {z 43 51} {ah 52 62} {l 63 92} {sil 93 153}]}
{125 [{sil 0 16} {s 17 19} {k 20 26} {eh 27 35} {z 36 72} {l 73 107} {sil 108 180}]}

normalised results =
{72 [{sil 0 12} {ch 18 18} {ih 22 31} {s 32 46} {k 47 63} {uw 64 74} {l 75 88} {sil 89 108}]}
{80 [{sil 0 14} {th 19 19} {ih 23 31} {s 33 46} {k 48 64} {uw 65 73} {l 74 88} {sil 89 105}]}
{91 [{sil 0 15} {th 18 18} {ih 21 31} {s 32 46} {k 47 64} {uw 65 71} {l 73 87} {sil 88 145}]}
{105 [{sil 0 14} {s 14 14} {k 17 23} {ih 24 30} {z 30 40} {z 41 49} {ah 50 59} {l 60 88} {sil 89 146}]}
{125 [{sil 0 16} {s 14 14} {k 16 21} {eh 22 28} {z 29 58} {l 58 86} {sil 86 144}]}

ruleAligned = [{{ih 3} [{0 2} {1 2} {2 2}]} {{s 1} [{0 3} {1 3} {2 3}]} {{k 0} [{0 4} {1 4} {2 4} {3 2} {4 2}]} {{uw 1} [{0 5} {1 5} {2 5}]} {{l 0} [{0 6} {1 6} {2 6} {3 7} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {ch 18 18} {ih 22 31} {s 32 46} {k 47 63} {uw 64 74} {l 75 88} {sil 89 89}]}
{80 [{sil 0 0} {th 19 19} {ih 23 31} {s 33 46} {k 48 64} {uw 65 73} {l 74 88} {sil 89 89}]}
{91 [{sil 0 0} {th 18 18} {ih 21 31} {s 32 46} {k 47 64} {uw 65 71} {l 73 87} {sil 88 88}]}
{105 [{sil 0 0} {s 14 14} {k 17 23} {ih 24 30} {z 30 40} {z 41 49} {ah 50 59} {l 60 88} {sil 89 89}]}
{125 [{sil 0 0} {s 14 14} {k 16 21} {eh 22 28} {z 29 58} {l 58 86} {sil 86 86}]}

timeAligned = [{{ih 23 31} [{0 2} {1 2} {2 2} {3 3}]} {{s 33 46} [{0 3} {1 3} {2 3}]} {{k 48 63} [{0 4} {1 4} {2 4}]} {{uw 65 71} [{0 5} {1 5} {2 5}]} {{l 73 88} [{2 6} {3 7} {4 5} {1 6} {0 6}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 31
i, iTime, newITime, timeStartFrom = 2 1 2 46
i, iTime, newITime, timeStartFrom = 3 2 3 63
i, iTime, newITime, timeStartFrom = 4 3 4 71
combinedVerdict    = [{ih 3} {s 1} {k 0} {uw 1} {l 0}]
ruleAlignedVerdict = [{ih 3} {s 1} {k 0} {uw 1} {l 0}]

score->
-2 for ih
+1 for s
+2 for k
+1 for uw
+2 for l
score<-: 4
testPronounce ih surprise s possible k good uw possible l good
publish->
phonsToAlphas = [{[s] s} {[k] ch} {[uw] oo} {[l] l}]
getVerdict<-:new {s [s] 1}
getVerdict<-:new {ch [k] 0}
getVerdict<-:new {oo [uw] 1}
getVerdict<-:new {l [l] 0}
lettersVerdicts = [{ih [ih] 3} {s [s] 1} {ch [k] 0} {oo [uw] 1} {l [l] 0}]
publish<-
{
  "word": "school",
  "results": [
    {
      "letters": "ih",
      "phonemes": "ɪ",
      "verdict": "surprise"
    },
    {
      "letters": "s",
      "phonemes": "s",
      "verdict": "possible"
    },
    {
      "letters": "ch",
      "phonemes": "k",
      "verdict": "good"
    },
    {
      "letters": "oo",
      "phonemes": "u",
      "verdict": "possible"
    },
    {
      "letters": "l",
      "phonemes": "l",
      "verdict": "good"
    }
  ],
  "err": null
}
