Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_77abbd50-dfe1-41ab-89d9-878d145ff85d audiofile /Users/test/go/src/Phonemes/audio_clips/dandelion1_rishka.wav word dandelion dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  3.691813



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  1.5799999999999998 1.26 2.84

 start3, duration3, end3 =  1.5999999999999999 1.2000000000000002 2.8

 Initial start, duration, end =  1.4799999999999998 1.36 2.84

 Cut at: start, duration =  1.4799999999999998 1.81     guard_end =  3.29 

Running scan for frate = 125
Running scan for frate = 125
Running scan for frate = 125
Running scan for frate = 125
Running scan for frate = 125
Running scan for frate = 125
Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for ae ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for ae ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for ae ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for ae ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for ae ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for ae ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for ihl ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for ihl ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 1.6 for ax ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 0.8 for n ...
Considering guard zh with value 0.8 for n ...
candidateGuards = map[sh:true zh:true]
Picking guard, zh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 0.8 for axn ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1.6 for ax ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1.6 for ax ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 0.8 for axn ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 0.8 for n ...
Considering guard zh with value 0.8 for n ...
candidateGuards = map[sh:true zh:true]
Picking guard, zh

Considering guard sh with value 0.8 for n ...
Considering guard zh with value 0.8 for n ...
candidateGuards = map[sh:true zh:true]
Picking guard, sh

frate, target rule = 125 public <dandelion> = (((sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_d> sh)] | [(sh <any_Cx_sh_p_z_d>)]) (d | ((<any_Cx_sh_p_z_d> sh) | (sh <any_Cx_sh_p_z_d>)))) ((([(<any_Vx_sh_sh_ae_noSlide> sh)] | [(sh <any_Vx_sh_sh_ae_noSlide>)]) ([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)])) (ae | ((<any_Vx_sh_sh_ae_noSlide> sh) | (sh <any_Vx_sh_sh_ae_noSlide>)))) (([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)]) (n | ((<any_Cx_sh_sh_n_d> sh) | (sh <any_Cx_sh_sh_n_d>)))) (([(<any_Cx_sh_sh_d_ihl_n> sh)] | [(sh <any_Cx_sh_sh_d_ihl_n>)]) (d | ((<any_Cx_sh_sh_d_ihl_n> sh) | (sh <any_Cx_sh_sh_d_ihl_n>)))) (([(<any_Cx_sh_sh_ihl_d> sh)] | [(sh <any_Cx_sh_sh_ihl_d>)]) (ihl | ((<any_Cx_sh_sh_ihl_d> sh) | (sh <any_Cx_sh_sh_ihl_d>)))) ((([(<any_Vx_sh_sh_ay_noSlide> sh)] | [(sh <any_Vx_sh_sh_ay_noSlide>)]) ([(<any_Cx_sh_sh_ax_ihl> sh)] | [(sh <any_Cx_sh_sh_ax_ihl>)])) (ay | ((<any_Vx_sh_sh_ay_noSlide> sh) | (sh <any_Vx_sh_sh_ay_noSlide>)))) (([(<any_Cx_zh_sh_ax> zh)] | [(zh <any_Cx_zh_sh_ax>)]) (ax | ((<any_Cx_zh_sh_ax_n> zh) | (zh <any_Cx_zh_sh_ax_n>)))) (([(<any_Cx_zh_zh_n_ax> zh)] | [(zh <any_Cx_zh_zh_n_ax>)]) (n | ((<any_Cx_zh_zh_n_ax> zh) | (zh <any_Cx_zh_zh_n_ax>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_zh_n_thr> thr)] | [(thr <any_Cx_zh_n_thr>)]) sil))
Considering guard zh with value 0.8 for axn ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 125 public <dandelion> = (((sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_d> sh)] | [(sh <any_Cx_sh_p_z_d>)]) (d | ((<any_Cx_sh_p_z_d> sh) | (sh <any_Cx_sh_p_z_d>)))) ((([(<any_Vx_sh_sh_ae_noSlide> sh)] | [(sh <any_Vx_sh_sh_ae_noSlide>)]) ([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)])) (ae | ((<any_Vx_sh_sh_ae_noSlide> sh) | (sh <any_Vx_sh_sh_ae_noSlide>)))) (([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)]) (n | ((<any_Cx_sh_sh_n_d> sh) | (sh <any_Cx_sh_sh_n_d>)))) (([(<any_Cx_sh_sh_d_ihl_n> sh)] | [(sh <any_Cx_sh_sh_d_ihl_n>)]) (d | ((<any_Cx_sh_sh_d_ihl_n> sh) | (sh <any_Cx_sh_sh_d_ihl_n>)))) (([(<any_Cx_sh_sh_ihl_d> sh)] | [(sh <any_Cx_sh_sh_ihl_d>)]) (ihl | ((<any_Cx_sh_sh_ihl_d> sh) | (sh <any_Cx_sh_sh_ihl_d>)))) ((([(<any_Vx_sh_sh_ay_noSlide> sh)] | [(sh <any_Vx_sh_sh_ay_noSlide>)]) ([(<any_Cx_sh_sh_axn_ihl> sh)] | [(sh <any_Cx_sh_sh_axn_ihl>)])) (ay | ((<any_Vx_sh_sh_ay_noSlide> sh) | (sh <any_Vx_sh_sh_ay_noSlide>)))) (([(<any_Cx_zh_sh_axn> zh)] | [(zh <any_Cx_zh_sh_axn>)]) (axn | ((<any_Cx_zh_sh_axn> zh) | (zh <any_Cx_zh_sh_axn>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_zh_axn_n> n)] | [(n <any_Cx_zh_axn_n>)]) sil))
frate, target rule = 125 public <dandelion> = (((sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_d> sh)] | [(sh <any_Cx_sh_p_z_d>)]) (d | ((<any_Cx_sh_p_z_d> sh) | (sh <any_Cx_sh_p_z_d>)))) ((([(<any_Vx_sh_sh_ae_noSlide> sh)] | [(sh <any_Vx_sh_sh_ae_noSlide>)]) ([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)])) (ae | ((<any_Vx_sh_sh_ae_noSlide> sh) | (sh <any_Vx_sh_sh_ae_noSlide>)))) (([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)]) (n | ((<any_Cx_sh_sh_n_d> sh) | (sh <any_Cx_sh_sh_n_d>)))) (([(<any_Cx_sh_sh_d_n> sh)] | [(sh <any_Cx_sh_sh_d_n>)]) (d | ((<any_Cx_sh_sh_d_n> sh) | (sh <any_Cx_sh_sh_d_n>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_l_d> sh)] | [(sh <any_Cx_sh_sh_l_d>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_sh_sh_ay_noSlide> sh)] | [(sh <any_Vx_sh_sh_ay_noSlide>)]) ([(<any_Cx_sh_sh_axn_l> sh)] | [(sh <any_Cx_sh_sh_axn_l>)])) (ay | ((<any_Vx_sh_sh_ay_noSlide> sh) | (sh <any_Vx_sh_sh_ay_noSlide>)))) (([(<any_Cx_zh_sh_axn> zh)] | [(zh <any_Cx_zh_sh_axn>)]) (axn | ((<any_Cx_zh_sh_axn> zh) | (zh <any_Cx_zh_sh_axn>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_zh_axn_thr> thr)] | [(thr <any_Cx_zh_axn_thr>)]) sil))
frate, target rule = 125 public <dandelion> = (((sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_d> sh)] | [(sh <any_Cx_sh_p_z_d>)]) (d | ((<any_Cx_sh_p_z_d> sh) | (sh <any_Cx_sh_p_z_d>)))) ((([(<any_Vx_sh_sh_ae_noSlide> sh)] | [(sh <any_Vx_sh_sh_ae_noSlide>)]) ([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)])) (ae | ((<any_Vx_sh_sh_ae_noSlide> sh) | (sh <any_Vx_sh_sh_ae_noSlide>)))) (([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)]) (n | ((<any_Cx_sh_sh_n_d> sh) | (sh <any_Cx_sh_sh_n_d>)))) (([(<any_Cx_sh_sh_d_n> sh)] | [(sh <any_Cx_sh_sh_d_n>)]) (d | ((<any_Cx_sh_sh_d_n> sh) | (sh <any_Cx_sh_sh_d_n>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_l_d> sh)] | [(sh <any_Cx_sh_sh_l_d>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_sh_sh_ay_noSlide> sh)] | [(sh <any_Vx_sh_sh_ay_noSlide>)]) ([(<any_Cx_sh_sh_ax_l> sh)] | [(sh <any_Cx_sh_sh_ax_l>)])) (ay | ((<any_Vx_sh_sh_ay_noSlide> sh) | (sh <any_Vx_sh_sh_ay_noSlide>)))) (([(<any_Cx_zh_sh_ax> zh)] | [(zh <any_Cx_zh_sh_ax>)]) (ax | ((<any_Cx_zh_sh_ax_n> zh) | (zh <any_Cx_zh_sh_ax_n>)))) (([(<any_Cx_zh_zh_n_ax> zh)] | [(zh <any_Cx_zh_zh_n_ax>)]) (n | ((<any_Cx_zh_zh_n_ax> zh) | (zh <any_Cx_zh_zh_n_ax>)))) (([(<any_vowel_noSlide> z)] | [(z <any_vowel_noSlide>)]) ([(<any_Cx_zh_n_z> z)] | [(z <any_Cx_zh_n_z>)]) sil))
frate, target rule = 125 public <dandelion> = (((sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_d> sh)] | [(sh <any_Cx_sh_p_z_d>)]) (d | ((<any_Cx_sh_p_z_d> sh) | (sh <any_Cx_sh_p_z_d>)))) ((([(<any_Vx_sh_sh_ae_noSlide> sh)] | [(sh <any_Vx_sh_sh_ae_noSlide>)]) ([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)])) (ae | ((<any_Vx_sh_sh_ae_noSlide> sh) | (sh <any_Vx_sh_sh_ae_noSlide>)))) (([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)]) (n | ((<any_Cx_sh_sh_n_d> sh) | (sh <any_Cx_sh_sh_n_d>)))) (([(<any_Cx_sh_sh_d_n> sh)] | [(sh <any_Cx_sh_sh_d_n>)]) (d | ((<any_Cx_sh_sh_d_n> sh) | (sh <any_Cx_sh_sh_d_n>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_l_d> sh)] | [(sh <any_Cx_sh_sh_l_d>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_sh_sh_ay_noSlide> sh)] | [(sh <any_Vx_sh_sh_ay_noSlide>)]) ([(<any_Cx_sh_sh_axn_l> sh)] | [(sh <any_Cx_sh_sh_axn_l>)])) (ay | ((<any_Vx_sh_sh_ay_noSlide> sh) | (sh <any_Vx_sh_sh_ay_noSlide>)))) (([(<any_Cx_zh_sh_axn> zh)] | [(zh <any_Cx_zh_sh_axn>)]) (axn | ((<any_Cx_zh_sh_axn> zh) | (zh <any_Cx_zh_sh_axn>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_zh_axn_thr> thr)] | [(thr <any_Cx_zh_axn_thr>)]) sil))
frate, target rule = 125 public <dandelion> = (((sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_d> sh)] | [(sh <any_Cx_sh_p_z_d>)]) (d | ((<any_Cx_sh_p_z_d> sh) | (sh <any_Cx_sh_p_z_d>)))) ((([(<any_Vx_sh_sh_ae_noSlide> sh)] | [(sh <any_Vx_sh_sh_ae_noSlide>)]) ([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)])) (ae | ((<any_Vx_sh_sh_ae_noSlide> sh) | (sh <any_Vx_sh_sh_ae_noSlide>)))) (([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)]) (n | ((<any_Cx_sh_sh_n_d> sh) | (sh <any_Cx_sh_sh_n_d>)))) (([(<any_Cx_sh_sh_d_n> sh)] | [(sh <any_Cx_sh_sh_d_n>)]) (d | ((<any_Cx_sh_sh_d_n> sh) | (sh <any_Cx_sh_sh_d_n>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_l_d> sh)] | [(sh <any_Cx_sh_sh_l_d>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_sh_sh_ay_noSlide> sh)] | [(sh <any_Vx_sh_sh_ay_noSlide>)]) ([(<any_Cx_sh_sh_ax_l> sh)] | [(sh <any_Cx_sh_sh_ax_l>)])) (ay | ((<any_Vx_sh_sh_ay_noSlide> sh) | (sh <any_Vx_sh_sh_ay_noSlide>)))) (([(<any_Cx_zh_sh_ax> zh)] | [(zh <any_Cx_zh_sh_ax>)]) (ax | ((<any_Cx_zh_sh_ax_n> zh) | (zh <any_Cx_zh_sh_ax_n>)))) (([(<any_Cx_sh_zh_n_ax> sh)] | [(sh <any_Cx_sh_zh_n_ax>)]) (n | ((<any_Cx_sh_zh_n_ax> sh) | (sh <any_Cx_sh_zh_n_ax>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_sh_n_thr> thr)] | [(thr <any_Cx_sh_n_thr>)]) sil))
Running scan for frate = 105
Running scan for frate = 105
Running scan for frate = 105
Running scan for frate = 105
Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 105
Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 105
Considering guard sh with value 6 for ae ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for ae ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for ae ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for ae ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for ae ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 0.8 for axn ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 0.8 for axn ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 6 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 105 public <dandelion> = (((sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_d> sh)] | [(sh <any_Cx_sh_p_z_d>)]) (d | ((<any_Cx_sh_p_z_d> sh) | (sh <any_Cx_sh_p_z_d>)))) ((([(<any_Vx_sh_sh_ae_noSlide> sh)] | [(sh <any_Vx_sh_sh_ae_noSlide>)]) ([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)])) (ae | ((<any_Vx_sh_sh_ae_noSlide> sh) | (sh <any_Vx_sh_sh_ae_noSlide>)))) (([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)]) (n | ((<any_Cx_sh_sh_n_d> sh) | (sh <any_Cx_sh_sh_n_d>)))) (([(<any_Cx_sh_sh_d_n> sh)] | [(sh <any_Cx_sh_sh_d_n>)]) (d | ((<any_Cx_sh_sh_d_n> sh) | (sh <any_Cx_sh_sh_d_n>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_l_d> sh)] | [(sh <any_Cx_sh_sh_l_d>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_sh_sh_ay_noSlide> sh)] | [(sh <any_Vx_sh_sh_ay_noSlide>)]) ([(<any_Cx_sh_sh_axn_l> sh)] | [(sh <any_Cx_sh_sh_axn_l>)])) (ay | ((<any_Vx_sh_sh_ay_noSlide> sh) | (sh <any_Vx_sh_sh_ay_noSlide>)))) (([(<any_Cx_zh_sh_axn> zh)] | [(zh <any_Cx_zh_sh_axn>)]) (axn | ((<any_Cx_zh_sh_axn> zh) | (zh <any_Cx_zh_sh_axn>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_zh_axn_ng> ng)] | [(ng <any_Cx_zh_axn_ng>)]) sil))
Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 105 public <dandelion> = (((sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_d> sh)] | [(sh <any_Cx_sh_p_z_d>)]) (d | ((<any_Cx_sh_p_z_d> sh) | (sh <any_Cx_sh_p_z_d>)))) ((([(<any_Vx_sh_sh_ae_noSlide> sh)] | [(sh <any_Vx_sh_sh_ae_noSlide>)]) ([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)])) (ae | ((<any_Vx_sh_sh_ae_noSlide> sh) | (sh <any_Vx_sh_sh_ae_noSlide>)))) (([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)]) (n | ((<any_Cx_sh_sh_n_d> sh) | (sh <any_Cx_sh_sh_n_d>)))) (([(<any_Cx_sh_sh_d_n> sh)] | [(sh <any_Cx_sh_sh_d_n>)]) (d | ((<any_Cx_sh_sh_d_n> sh) | (sh <any_Cx_sh_sh_d_n>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_l_d> sh)] | [(sh <any_Cx_sh_sh_l_d>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_sh_sh_ay_noSlide> sh)] | [(sh <any_Vx_sh_sh_ay_noSlide>)]) ([(<any_Cx_sh_sh_axn_l> sh)] | [(sh <any_Cx_sh_sh_axn_l>)])) (ay | ((<any_Vx_sh_sh_ay_noSlide> sh) | (sh <any_Vx_sh_sh_ay_noSlide>)))) (([(<any_Cx_zh_sh_axn> zh)] | [(zh <any_Cx_zh_sh_axn>)]) (axn | ((<any_Cx_zh_sh_axn> zh) | (zh <any_Cx_zh_sh_axn>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_zh_axn_n> n)] | [(n <any_Cx_zh_axn_n>)]) sil))
Considering guard sh with value 6 for ae ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 1.6 for ax ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for ihl ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 0.8 for n ...
Considering guard sh with value 0.8 for n ...
candidateGuards = map[sh:true zh:true]
Picking guard, zh

Considering guard zh with value 1.6 for ax ...
candidateGuards = map[zh:true]
Picking guard, zh

Running scan for frate = 91
Considering guard sh with value 6 for ihl ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 0.8 for n ...
Considering guard zh with value 0.8 for n ...
candidateGuards = map[sh:true zh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for ae ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 0.8 for axn ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 105 public <dandelion> = (((sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_d> sh)] | [(sh <any_Cx_sh_p_z_d>)]) (d | ((<any_Cx_sh_p_z_d> sh) | (sh <any_Cx_sh_p_z_d>)))) ((([(<any_Vx_sh_sh_ae_noSlide> sh)] | [(sh <any_Vx_sh_sh_ae_noSlide>)]) ([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)])) (ae | ((<any_Vx_sh_sh_ae_noSlide> sh) | (sh <any_Vx_sh_sh_ae_noSlide>)))) (([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)]) (n | ((<any_Cx_sh_sh_n_d> sh) | (sh <any_Cx_sh_sh_n_d>)))) (([(<any_Cx_sh_sh_d_n> sh)] | [(sh <any_Cx_sh_sh_d_n>)]) (d | ((<any_Cx_sh_sh_d_n> sh) | (sh <any_Cx_sh_sh_d_n>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_l_d> sh)] | [(sh <any_Cx_sh_sh_l_d>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_sh_sh_ay_noSlide> sh)] | [(sh <any_Vx_sh_sh_ay_noSlide>)]) ([(<any_Cx_sh_sh_ax_l> sh)] | [(sh <any_Cx_sh_sh_ax_l>)])) (ay | ((<any_Vx_sh_sh_ay_noSlide> sh) | (sh <any_Vx_sh_sh_ay_noSlide>)))) (([(<any_Cx_zh_sh_ax> zh)] | [(zh <any_Cx_zh_sh_ax>)]) (ax | ((<any_Cx_zh_sh_ax_n> zh) | (zh <any_Cx_zh_sh_ax_n>)))) (([(<any_Cx_sh_zh_n_ax> sh)] | [(sh <any_Cx_sh_zh_n_ax>)]) (n | ((<any_Cx_sh_zh_n_ax> sh) | (sh <any_Cx_sh_zh_n_ax>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_sh_n_thr> thr)] | [(thr <any_Cx_sh_n_thr>)]) sil))
frate, target rule = 105 public <dandelion> = (((sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_d> sh)] | [(sh <any_Cx_sh_p_z_d>)]) (d | ((<any_Cx_sh_p_z_d> sh) | (sh <any_Cx_sh_p_z_d>)))) ((([(<any_Vx_sh_sh_ae_noSlide> sh)] | [(sh <any_Vx_sh_sh_ae_noSlide>)]) ([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)])) (ae | ((<any_Vx_sh_sh_ae_noSlide> sh) | (sh <any_Vx_sh_sh_ae_noSlide>)))) (([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)]) (n | ((<any_Cx_sh_sh_n_d> sh) | (sh <any_Cx_sh_sh_n_d>)))) (([(<any_Cx_sh_sh_d_n> sh)] | [(sh <any_Cx_sh_sh_d_n>)]) (d | ((<any_Cx_sh_sh_d_n> sh) | (sh <any_Cx_sh_sh_d_n>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_l_d> sh)] | [(sh <any_Cx_sh_sh_l_d>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_sh_sh_ay_noSlide> sh)] | [(sh <any_Vx_sh_sh_ay_noSlide>)]) ([(<any_Cx_sh_sh_ax_l> sh)] | [(sh <any_Cx_sh_sh_ax_l>)])) (ay | ((<any_Vx_sh_sh_ay_noSlide> sh) | (sh <any_Vx_sh_sh_ay_noSlide>)))) (([(<any_Cx_zh_sh_ax> zh)] | [(zh <any_Cx_zh_sh_ax>)]) (ax | ((<any_Cx_zh_sh_ax_n> zh) | (zh <any_Cx_zh_sh_ax_n>)))) (([(<any_Cx_zh_zh_n_ax> zh)] | [(zh <any_Cx_zh_zh_n_ax>)]) (n | ((<any_Cx_zh_zh_n_ax> zh) | (zh <any_Cx_zh_zh_n_ax>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_zh_n_d> d)] | [(d <any_Cx_zh_n_d>)]) sil))
Running scan for frate = 91
Considering guard zh with value 1.6 for ax ...
candidateGuards = map[zh:true]
Picking guard, zh

Running scan for frate = 91
Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 105 public <dandelion> = (((sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_d> sh)] | [(sh <any_Cx_sh_p_z_d>)]) (d | ((<any_Cx_sh_p_z_d> sh) | (sh <any_Cx_sh_p_z_d>)))) ((([(<any_Vx_sh_sh_ae_noSlide> sh)] | [(sh <any_Vx_sh_sh_ae_noSlide>)]) ([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)])) (ae | ((<any_Vx_sh_sh_ae_noSlide> sh) | (sh <any_Vx_sh_sh_ae_noSlide>)))) (([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)]) (n | ((<any_Cx_sh_sh_n_d> sh) | (sh <any_Cx_sh_sh_n_d>)))) (([(<any_Cx_sh_sh_d_ihl_n> sh)] | [(sh <any_Cx_sh_sh_d_ihl_n>)]) (d | ((<any_Cx_sh_sh_d_ihl_n> sh) | (sh <any_Cx_sh_sh_d_ihl_n>)))) (([(<any_Cx_sh_sh_ihl_d> sh)] | [(sh <any_Cx_sh_sh_ihl_d>)]) (ihl | ((<any_Cx_sh_sh_ihl_d> sh) | (sh <any_Cx_sh_sh_ihl_d>)))) ((([(<any_Vx_sh_sh_ay_noSlide> sh)] | [(sh <any_Vx_sh_sh_ay_noSlide>)]) ([(<any_Cx_sh_sh_axn_ihl> sh)] | [(sh <any_Cx_sh_sh_axn_ihl>)])) (ay | ((<any_Vx_sh_sh_ay_noSlide> sh) | (sh <any_Vx_sh_sh_ay_noSlide>)))) (([(<any_Cx_zh_sh_axn> zh)] | [(zh <any_Cx_zh_sh_axn>)]) (axn | ((<any_Cx_zh_sh_axn> zh) | (zh <any_Cx_zh_sh_axn>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_zh_axn_thr> thr)] | [(thr <any_Cx_zh_axn_thr>)]) sil))
Considering guard zh with value 0.8 for n ...
Considering guard sh with value 0.8 for n ...
candidateGuards = map[sh:true zh:true]
Picking guard, zh

Considering guard sh with value 6 for ae ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 91
Considering guard sh with value 6 for ae ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 91
Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 105 public <dandelion> = (((sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_d> sh)] | [(sh <any_Cx_sh_p_z_d>)]) (d | ((<any_Cx_sh_p_z_d> sh) | (sh <any_Cx_sh_p_z_d>)))) ((([(<any_Vx_sh_sh_ae_noSlide> sh)] | [(sh <any_Vx_sh_sh_ae_noSlide>)]) ([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)])) (ae | ((<any_Vx_sh_sh_ae_noSlide> sh) | (sh <any_Vx_sh_sh_ae_noSlide>)))) (([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)]) (n | ((<any_Cx_sh_sh_n_d> sh) | (sh <any_Cx_sh_sh_n_d>)))) (([(<any_Cx_sh_sh_d_ihl_n> sh)] | [(sh <any_Cx_sh_sh_d_ihl_n>)]) (d | ((<any_Cx_sh_sh_d_ihl_n> sh) | (sh <any_Cx_sh_sh_d_ihl_n>)))) (([(<any_Cx_sh_sh_ihl_d> sh)] | [(sh <any_Cx_sh_sh_ihl_d>)]) (ihl | ((<any_Cx_sh_sh_ihl_d> sh) | (sh <any_Cx_sh_sh_ihl_d>)))) ((([(<any_Vx_sh_sh_ay_noSlide> sh)] | [(sh <any_Vx_sh_sh_ay_noSlide>)]) ([(<any_Cx_sh_sh_ax_ihl> sh)] | [(sh <any_Cx_sh_sh_ax_ihl>)])) (ay | ((<any_Vx_sh_sh_ay_noSlide> sh) | (sh <any_Vx_sh_sh_ay_noSlide>)))) (([(<any_Cx_zh_sh_ax> zh)] | [(zh <any_Cx_zh_sh_ax>)]) (ax | ((<any_Cx_zh_sh_ax_n> zh) | (zh <any_Cx_zh_sh_ax_n>)))) (([(<any_Cx_zh_zh_n_ax> zh)] | [(zh <any_Cx_zh_zh_n_ax>)]) (n | ((<any_Cx_zh_zh_n_ax> zh) | (zh <any_Cx_zh_zh_n_ax>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_zh_n_ng> ng)] | [(ng <any_Cx_zh_n_ng>)]) sil))
Considering guard sh with value 6 for ae ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for ae ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 1.6 for ax ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 91
Considering guard sh with value 6 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 0.8 for n ...
Considering guard zh with value 0.8 for n ...
candidateGuards = map[sh:true zh:true]
Picking guard, sh

Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for ihl ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 0.8 for axn ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 91 public <dandelion> = (((sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_d> sh)] | [(sh <any_Cx_sh_p_z_d>)]) (d | ((<any_Cx_sh_p_z_d> sh) | (sh <any_Cx_sh_p_z_d>)))) ((([(<any_Vx_sh_sh_ae_noSlide> sh)] | [(sh <any_Vx_sh_sh_ae_noSlide>)]) ([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)])) (ae | ((<any_Vx_sh_sh_ae_noSlide> sh) | (sh <any_Vx_sh_sh_ae_noSlide>)))) (([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)]) (n | ((<any_Cx_sh_sh_n_d> sh) | (sh <any_Cx_sh_sh_n_d>)))) (([(<any_Cx_sh_sh_d_n> sh)] | [(sh <any_Cx_sh_sh_d_n>)]) (d | ((<any_Cx_sh_sh_d_n> sh) | (sh <any_Cx_sh_sh_d_n>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_l_d> sh)] | [(sh <any_Cx_sh_sh_l_d>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_sh_sh_ay_noSlide> sh)] | [(sh <any_Vx_sh_sh_ay_noSlide>)]) ([(<any_Cx_sh_sh_ax_l> sh)] | [(sh <any_Cx_sh_sh_ax_l>)])) (ay | ((<any_Vx_sh_sh_ay_noSlide> sh) | (sh <any_Vx_sh_sh_ay_noSlide>)))) (([(<any_Cx_zh_sh_ax> zh)] | [(zh <any_Cx_zh_sh_ax>)]) (ax | ((<any_Cx_zh_sh_ax_n> zh) | (zh <any_Cx_zh_sh_ax_n>)))) (([(<any_Cx_sh_zh_n_ax> sh)] | [(sh <any_Cx_sh_zh_n_ax>)]) (n | ((<any_Cx_sh_zh_n_ax> sh) | (sh <any_Cx_sh_zh_n_ax>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_sh_n_d> d)] | [(d <any_Cx_sh_n_d>)]) sil))
Considering guard sh with value 6 for ae ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 0.8 for axn ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 91 public <dandelion> = (((sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_d> sh)] | [(sh <any_Cx_sh_p_z_d>)]) (d | ((<any_Cx_sh_p_z_d> sh) | (sh <any_Cx_sh_p_z_d>)))) ((([(<any_Vx_sh_sh_ae_noSlide> sh)] | [(sh <any_Vx_sh_sh_ae_noSlide>)]) ([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)])) (ae | ((<any_Vx_sh_sh_ae_noSlide> sh) | (sh <any_Vx_sh_sh_ae_noSlide>)))) (([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)]) (n | ((<any_Cx_sh_sh_n_d> sh) | (sh <any_Cx_sh_sh_n_d>)))) (([(<any_Cx_sh_sh_d_n> sh)] | [(sh <any_Cx_sh_sh_d_n>)]) (d | ((<any_Cx_sh_sh_d_n> sh) | (sh <any_Cx_sh_sh_d_n>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_l_d> sh)] | [(sh <any_Cx_sh_sh_l_d>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_sh_sh_ay_noSlide> sh)] | [(sh <any_Vx_sh_sh_ay_noSlide>)]) ([(<any_Cx_sh_sh_axn_l> sh)] | [(sh <any_Cx_sh_sh_axn_l>)])) (ay | ((<any_Vx_sh_sh_ay_noSlide> sh) | (sh <any_Vx_sh_sh_ay_noSlide>)))) (([(<any_Cx_zh_sh_axn> zh)] | [(zh <any_Cx_zh_sh_axn>)]) (axn | ((<any_Cx_zh_sh_axn> zh) | (zh <any_Cx_zh_sh_axn>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_zh_axn_thr> thr)] | [(thr <any_Cx_zh_axn_thr>)]) sil))
Considering guard zh with value 0.8 for axn ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 1.6 for ax ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 91 public <dandelion> = (((sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_d> sh)] | [(sh <any_Cx_sh_p_z_d>)]) (d | ((<any_Cx_sh_p_z_d> sh) | (sh <any_Cx_sh_p_z_d>)))) ((([(<any_Vx_sh_sh_ae_noSlide> sh)] | [(sh <any_Vx_sh_sh_ae_noSlide>)]) ([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)])) (ae | ((<any_Vx_sh_sh_ae_noSlide> sh) | (sh <any_Vx_sh_sh_ae_noSlide>)))) (([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)]) (n | ((<any_Cx_sh_sh_n_d> sh) | (sh <any_Cx_sh_sh_n_d>)))) (([(<any_Cx_sh_sh_d_n> sh)] | [(sh <any_Cx_sh_sh_d_n>)]) (d | ((<any_Cx_sh_sh_d_n> sh) | (sh <any_Cx_sh_sh_d_n>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_l_d> sh)] | [(sh <any_Cx_sh_sh_l_d>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_sh_sh_ay_noSlide> sh)] | [(sh <any_Vx_sh_sh_ay_noSlide>)]) ([(<any_Cx_sh_sh_axn_l> sh)] | [(sh <any_Cx_sh_sh_axn_l>)])) (ay | ((<any_Vx_sh_sh_ay_noSlide> sh) | (sh <any_Vx_sh_sh_ay_noSlide>)))) (([(<any_Cx_zh_sh_axn> zh)] | [(zh <any_Cx_zh_sh_axn>)]) (axn | ((<any_Cx_zh_sh_axn> zh) | (zh <any_Cx_zh_sh_axn>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_zh_axn_ng> ng)] | [(ng <any_Cx_zh_axn_ng>)]) sil))
Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 0.8 for n ...
Considering guard sh with value 0.8 for n ...
candidateGuards = map[sh:true zh:true]
Picking guard, zh

frate, target rule = 91 public <dandelion> = (((sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_d> sh)] | [(sh <any_Cx_sh_p_z_d>)]) (d | ((<any_Cx_sh_p_z_d> sh) | (sh <any_Cx_sh_p_z_d>)))) ((([(<any_Vx_sh_sh_ae_noSlide> sh)] | [(sh <any_Vx_sh_sh_ae_noSlide>)]) ([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)])) (ae | ((<any_Vx_sh_sh_ae_noSlide> sh) | (sh <any_Vx_sh_sh_ae_noSlide>)))) (([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)]) (n | ((<any_Cx_sh_sh_n_d> sh) | (sh <any_Cx_sh_sh_n_d>)))) (([(<any_Cx_sh_sh_d_ihl_n> sh)] | [(sh <any_Cx_sh_sh_d_ihl_n>)]) (d | ((<any_Cx_sh_sh_d_ihl_n> sh) | (sh <any_Cx_sh_sh_d_ihl_n>)))) (([(<any_Cx_sh_sh_ihl_d> sh)] | [(sh <any_Cx_sh_sh_ihl_d>)]) (ihl | ((<any_Cx_sh_sh_ihl_d> sh) | (sh <any_Cx_sh_sh_ihl_d>)))) ((([(<any_Vx_sh_sh_ay_noSlide> sh)] | [(sh <any_Vx_sh_sh_ay_noSlide>)]) ([(<any_Cx_sh_sh_axn_ihl> sh)] | [(sh <any_Cx_sh_sh_axn_ihl>)])) (ay | ((<any_Vx_sh_sh_ay_noSlide> sh) | (sh <any_Vx_sh_sh_ay_noSlide>)))) (([(<any_Cx_zh_sh_axn> zh)] | [(zh <any_Cx_zh_sh_axn>)]) (axn | ((<any_Cx_zh_sh_axn> zh) | (zh <any_Cx_zh_sh_axn>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_zh_axn_ng> ng)] | [(ng <any_Cx_zh_axn_ng>)]) sil))
Running scan for frate = 80
Running scan for frate = 80
Considering guard sh with value 6 for ihl ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 80
Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 91 public <dandelion> = (((sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_d> sh)] | [(sh <any_Cx_sh_p_z_d>)]) (d | ((<any_Cx_sh_p_z_d> sh) | (sh <any_Cx_sh_p_z_d>)))) ((([(<any_Vx_sh_sh_ae_noSlide> sh)] | [(sh <any_Vx_sh_sh_ae_noSlide>)]) ([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)])) (ae | ((<any_Vx_sh_sh_ae_noSlide> sh) | (sh <any_Vx_sh_sh_ae_noSlide>)))) (([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)]) (n | ((<any_Cx_sh_sh_n_d> sh) | (sh <any_Cx_sh_sh_n_d>)))) (([(<any_Cx_sh_sh_d_n> sh)] | [(sh <any_Cx_sh_sh_d_n>)]) (d | ((<any_Cx_sh_sh_d_n> sh) | (sh <any_Cx_sh_sh_d_n>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_l_d> sh)] | [(sh <any_Cx_sh_sh_l_d>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_sh_sh_ay_noSlide> sh)] | [(sh <any_Vx_sh_sh_ay_noSlide>)]) ([(<any_Cx_sh_sh_ax_l> sh)] | [(sh <any_Cx_sh_sh_ax_l>)])) (ay | ((<any_Vx_sh_sh_ay_noSlide> sh) | (sh <any_Vx_sh_sh_ay_noSlide>)))) (([(<any_Cx_zh_sh_ax> zh)] | [(zh <any_Cx_zh_sh_ax>)]) (ax | ((<any_Cx_zh_sh_ax_n> zh) | (zh <any_Cx_zh_sh_ax_n>)))) (([(<any_Cx_zh_zh_n_ax> zh)] | [(zh <any_Cx_zh_zh_n_ax>)]) (n | ((<any_Cx_zh_zh_n_ax> zh) | (zh <any_Cx_zh_zh_n_ax>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_zh_n_ng> ng)] | [(ng <any_Cx_zh_n_ng>)]) sil))
Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 80
Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 1.6 for ax ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 6 for ae ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for ae ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 0.8 for n ...
Considering guard zh with value 0.8 for n ...
candidateGuards = map[sh:true zh:true]
Picking guard, sh

Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for ae ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 80
Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 91 public <dandelion> = (((sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_d> sh)] | [(sh <any_Cx_sh_p_z_d>)]) (d | ((<any_Cx_sh_p_z_d> sh) | (sh <any_Cx_sh_p_z_d>)))) ((([(<any_Vx_sh_sh_ae_noSlide> sh)] | [(sh <any_Vx_sh_sh_ae_noSlide>)]) ([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)])) (ae | ((<any_Vx_sh_sh_ae_noSlide> sh) | (sh <any_Vx_sh_sh_ae_noSlide>)))) (([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)]) (n | ((<any_Cx_sh_sh_n_d> sh) | (sh <any_Cx_sh_sh_n_d>)))) (([(<any_Cx_sh_sh_d_ihl_n> sh)] | [(sh <any_Cx_sh_sh_d_ihl_n>)]) (d | ((<any_Cx_sh_sh_d_ihl_n> sh) | (sh <any_Cx_sh_sh_d_ihl_n>)))) (([(<any_Cx_sh_sh_ihl_d> sh)] | [(sh <any_Cx_sh_sh_ihl_d>)]) (ihl | ((<any_Cx_sh_sh_ihl_d> sh) | (sh <any_Cx_sh_sh_ihl_d>)))) ((([(<any_Vx_sh_sh_ay_noSlide> sh)] | [(sh <any_Vx_sh_sh_ay_noSlide>)]) ([(<any_Cx_sh_sh_ax_ihl> sh)] | [(sh <any_Cx_sh_sh_ax_ihl>)])) (ay | ((<any_Vx_sh_sh_ay_noSlide> sh) | (sh <any_Vx_sh_sh_ay_noSlide>)))) (([(<any_Cx_zh_sh_ax> zh)] | [(zh <any_Cx_zh_sh_ax>)]) (ax | ((<any_Cx_zh_sh_ax_n> zh) | (zh <any_Cx_zh_sh_ax_n>)))) (([(<any_Cx_sh_zh_n_ax> sh)] | [(sh <any_Cx_sh_zh_n_ax>)]) (n | ((<any_Cx_sh_zh_n_ax> sh) | (sh <any_Cx_sh_zh_n_ax>)))) (([(<any_vowel_noSlide> z)] | [(z <any_vowel_noSlide>)]) ([(<any_Cx_sh_n_z> z)] | [(z <any_Cx_sh_n_z>)]) sil))
Considering guard sh with value 6 for ae ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for ae ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 80
Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for ihl ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 1.6 for ax ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for ae ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 0.8 for axn ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 6 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 0.8 for n ...
Considering guard zh with value 0.8 for n ...
candidateGuards = map[sh:true zh:true]
Picking guard, sh

Considering guard zh with value 0.8 for axn ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 0.8 for axn ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 80 public <dandelion> = (((sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_d> sh)] | [(sh <any_Cx_sh_p_z_d>)]) (d | ((<any_Cx_sh_p_z_d> sh) | (sh <any_Cx_sh_p_z_d>)))) ((([(<any_Vx_sh_sh_ae_noSlide> sh)] | [(sh <any_Vx_sh_sh_ae_noSlide>)]) ([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)])) (ae | ((<any_Vx_sh_sh_ae_noSlide> sh) | (sh <any_Vx_sh_sh_ae_noSlide>)))) (([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)]) (n | ((<any_Cx_sh_sh_n_d> sh) | (sh <any_Cx_sh_sh_n_d>)))) (([(<any_Cx_sh_sh_d_ihl_n> sh)] | [(sh <any_Cx_sh_sh_d_ihl_n>)]) (d | ((<any_Cx_sh_sh_d_ihl_n> sh) | (sh <any_Cx_sh_sh_d_ihl_n>)))) (([(<any_Cx_sh_sh_ihl_d> sh)] | [(sh <any_Cx_sh_sh_ihl_d>)]) (ihl | ((<any_Cx_sh_sh_ihl_d> sh) | (sh <any_Cx_sh_sh_ihl_d>)))) ((([(<any_Vx_sh_sh_ay_noSlide> sh)] | [(sh <any_Vx_sh_sh_ay_noSlide>)]) ([(<any_Cx_sh_sh_axn_ihl> sh)] | [(sh <any_Cx_sh_sh_axn_ihl>)])) (ay | ((<any_Vx_sh_sh_ay_noSlide> sh) | (sh <any_Vx_sh_sh_ay_noSlide>)))) (([(<any_Cx_zh_sh_axn> zh)] | [(zh <any_Cx_zh_sh_axn>)]) (axn | ((<any_Cx_zh_sh_axn> zh) | (zh <any_Cx_zh_sh_axn>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_zh_axn_ng> ng)] | [(ng <any_Cx_zh_axn_ng>)]) sil))
Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 80 public <dandelion> = (((sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_d> sh)] | [(sh <any_Cx_sh_p_z_d>)]) (d | ((<any_Cx_sh_p_z_d> sh) | (sh <any_Cx_sh_p_z_d>)))) ((([(<any_Vx_sh_sh_ae_noSlide> sh)] | [(sh <any_Vx_sh_sh_ae_noSlide>)]) ([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)])) (ae | ((<any_Vx_sh_sh_ae_noSlide> sh) | (sh <any_Vx_sh_sh_ae_noSlide>)))) (([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)]) (n | ((<any_Cx_sh_sh_n_d> sh) | (sh <any_Cx_sh_sh_n_d>)))) (([(<any_Cx_sh_sh_d_n> sh)] | [(sh <any_Cx_sh_sh_d_n>)]) (d | ((<any_Cx_sh_sh_d_n> sh) | (sh <any_Cx_sh_sh_d_n>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_l_d> sh)] | [(sh <any_Cx_sh_sh_l_d>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_sh_sh_ay_noSlide> sh)] | [(sh <any_Vx_sh_sh_ay_noSlide>)]) ([(<any_Cx_sh_sh_ax_l> sh)] | [(sh <any_Cx_sh_sh_ax_l>)])) (ay | ((<any_Vx_sh_sh_ay_noSlide> sh) | (sh <any_Vx_sh_sh_ay_noSlide>)))) (([(<any_Cx_zh_sh_ax> zh)] | [(zh <any_Cx_zh_sh_ax>)]) (ax | ((<any_Cx_zh_sh_ax_n> zh) | (zh <any_Cx_zh_sh_ax_n>)))) (([(<any_Cx_sh_zh_n_ax> sh)] | [(sh <any_Cx_sh_zh_n_ax>)]) (n | ((<any_Cx_sh_zh_n_ax> sh) | (sh <any_Cx_sh_zh_n_ax>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_sh_n_ng> ng)] | [(ng <any_Cx_sh_n_ng>)]) sil))
Considering guard sh with value 6 for ihl ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 80 public <dandelion> = (((sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_d> sh)] | [(sh <any_Cx_sh_p_z_d>)]) (d | ((<any_Cx_sh_p_z_d> sh) | (sh <any_Cx_sh_p_z_d>)))) ((([(<any_Vx_sh_sh_ae_noSlide> sh)] | [(sh <any_Vx_sh_sh_ae_noSlide>)]) ([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)])) (ae | ((<any_Vx_sh_sh_ae_noSlide> sh) | (sh <any_Vx_sh_sh_ae_noSlide>)))) (([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)]) (n | ((<any_Cx_sh_sh_n_d> sh) | (sh <any_Cx_sh_sh_n_d>)))) (([(<any_Cx_sh_sh_d_n> sh)] | [(sh <any_Cx_sh_sh_d_n>)]) (d | ((<any_Cx_sh_sh_d_n> sh) | (sh <any_Cx_sh_sh_d_n>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_l_d> sh)] | [(sh <any_Cx_sh_sh_l_d>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_sh_sh_ay_noSlide> sh)] | [(sh <any_Vx_sh_sh_ay_noSlide>)]) ([(<any_Cx_sh_sh_axn_l> sh)] | [(sh <any_Cx_sh_sh_axn_l>)])) (ay | ((<any_Vx_sh_sh_ay_noSlide> sh) | (sh <any_Vx_sh_sh_ay_noSlide>)))) (([(<any_Cx_zh_sh_axn> zh)] | [(zh <any_Cx_zh_sh_axn>)]) (axn | ((<any_Cx_zh_sh_axn> zh) | (zh <any_Cx_zh_sh_axn>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_zh_axn_f> f)] | [(f <any_Cx_zh_axn_f>)]) sil))
frate, target rule = 80 public <dandelion> = (((sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_d> sh)] | [(sh <any_Cx_sh_p_z_d>)]) (d | ((<any_Cx_sh_p_z_d> sh) | (sh <any_Cx_sh_p_z_d>)))) ((([(<any_Vx_sh_sh_ae_noSlide> sh)] | [(sh <any_Vx_sh_sh_ae_noSlide>)]) ([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)])) (ae | ((<any_Vx_sh_sh_ae_noSlide> sh) | (sh <any_Vx_sh_sh_ae_noSlide>)))) (([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)]) (n | ((<any_Cx_sh_sh_n_d> sh) | (sh <any_Cx_sh_sh_n_d>)))) (([(<any_Cx_sh_sh_d_n> sh)] | [(sh <any_Cx_sh_sh_d_n>)]) (d | ((<any_Cx_sh_sh_d_n> sh) | (sh <any_Cx_sh_sh_d_n>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_l_d> sh)] | [(sh <any_Cx_sh_sh_l_d>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_sh_sh_ay_noSlide> sh)] | [(sh <any_Vx_sh_sh_ay_noSlide>)]) ([(<any_Cx_sh_sh_axn_l> sh)] | [(sh <any_Cx_sh_sh_axn_l>)])) (ay | ((<any_Vx_sh_sh_ay_noSlide> sh) | (sh <any_Vx_sh_sh_ay_noSlide>)))) (([(<any_Cx_zh_sh_axn> zh)] | [(zh <any_Cx_zh_sh_axn>)]) (axn | ((<any_Cx_zh_sh_axn> zh) | (zh <any_Cx_zh_sh_axn>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_zh_axn_ng> ng)] | [(ng <any_Cx_zh_axn_ng>)]) sil))
Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 1.6 for ax ...
candidateGuards = map[zh:true]
Picking guard, zh

Running scan for frate = 72
Considering guard zh with value 1.6 for ax ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 0.8 for n ...
Considering guard sh with value 0.8 for n ...
candidateGuards = map[sh:true zh:true]
Picking guard, sh

Running scan for frate = 72
Running scan for frate = 72
Considering guard zh with value 0.8 for n ...
Considering guard sh with value 0.8 for n ...
candidateGuards = map[sh:true zh:true]
Picking guard, zh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 80 public <dandelion> = (((sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_d> sh)] | [(sh <any_Cx_sh_p_z_d>)]) (d | ((<any_Cx_sh_p_z_d> sh) | (sh <any_Cx_sh_p_z_d>)))) ((([(<any_Vx_sh_sh_ae_noSlide> sh)] | [(sh <any_Vx_sh_sh_ae_noSlide>)]) ([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)])) (ae | ((<any_Vx_sh_sh_ae_noSlide> sh) | (sh <any_Vx_sh_sh_ae_noSlide>)))) (([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)]) (n | ((<any_Cx_sh_sh_n_d> sh) | (sh <any_Cx_sh_sh_n_d>)))) (([(<any_Cx_sh_sh_d_n> sh)] | [(sh <any_Cx_sh_sh_d_n>)]) (d | ((<any_Cx_sh_sh_d_n> sh) | (sh <any_Cx_sh_sh_d_n>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_l_d> sh)] | [(sh <any_Cx_sh_sh_l_d>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_sh_sh_ay_noSlide> sh)] | [(sh <any_Vx_sh_sh_ay_noSlide>)]) ([(<any_Cx_sh_sh_ax_l> sh)] | [(sh <any_Cx_sh_sh_ax_l>)])) (ay | ((<any_Vx_sh_sh_ay_noSlide> sh) | (sh <any_Vx_sh_sh_ay_noSlide>)))) (([(<any_Cx_zh_sh_ax> zh)] | [(zh <any_Cx_zh_sh_ax>)]) (ax | ((<any_Cx_zh_sh_ax_n> zh) | (zh <any_Cx_zh_sh_ax_n>)))) (([(<any_Cx_sh_zh_n_ax> sh)] | [(sh <any_Cx_sh_zh_n_ax>)]) (n | ((<any_Cx_sh_zh_n_ax> sh) | (sh <any_Cx_sh_zh_n_ax>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_sh_n_b> b)] | [(b <any_Cx_sh_n_b>)]) sil))
Considering guard sh with value 6 for ae ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 72
frate, target rule = 80 public <dandelion> = (((sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_d> sh)] | [(sh <any_Cx_sh_p_z_d>)]) (d | ((<any_Cx_sh_p_z_d> sh) | (sh <any_Cx_sh_p_z_d>)))) ((([(<any_Vx_sh_sh_ae_noSlide> sh)] | [(sh <any_Vx_sh_sh_ae_noSlide>)]) ([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)])) (ae | ((<any_Vx_sh_sh_ae_noSlide> sh) | (sh <any_Vx_sh_sh_ae_noSlide>)))) (([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)]) (n | ((<any_Cx_sh_sh_n_d> sh) | (sh <any_Cx_sh_sh_n_d>)))) (([(<any_Cx_sh_sh_d_ihl_n> sh)] | [(sh <any_Cx_sh_sh_d_ihl_n>)]) (d | ((<any_Cx_sh_sh_d_ihl_n> sh) | (sh <any_Cx_sh_sh_d_ihl_n>)))) (([(<any_Cx_sh_sh_ihl_d> sh)] | [(sh <any_Cx_sh_sh_ihl_d>)]) (ihl | ((<any_Cx_sh_sh_ihl_d> sh) | (sh <any_Cx_sh_sh_ihl_d>)))) ((([(<any_Vx_sh_sh_ay_noSlide> sh)] | [(sh <any_Vx_sh_sh_ay_noSlide>)]) ([(<any_Cx_sh_sh_ax_ihl> sh)] | [(sh <any_Cx_sh_sh_ax_ihl>)])) (ay | ((<any_Vx_sh_sh_ay_noSlide> sh) | (sh <any_Vx_sh_sh_ay_noSlide>)))) (([(<any_Cx_zh_sh_ax> zh)] | [(zh <any_Cx_zh_sh_ax>)]) (ax | ((<any_Cx_zh_sh_ax_n> zh) | (zh <any_Cx_zh_sh_ax_n>)))) (([(<any_Cx_zh_zh_n_ax> zh)] | [(zh <any_Cx_zh_zh_n_ax>)]) (n | ((<any_Cx_zh_zh_n_ax> zh) | (zh <any_Cx_zh_zh_n_ax>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_zh_n_d> d)] | [(d <any_Cx_zh_n_d>)]) sil))
Considering guard sh with value 6 for ae ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for ae ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for ae ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 72
Considering guard sh with value 6 for ihl ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 72
Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for ae ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 0.8 for axn ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for ae ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 1.6 for ax ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 72 public <dandelion> = (((sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_d> sh)] | [(sh <any_Cx_sh_p_z_d>)]) (d | ((<any_Cx_sh_p_z_d> sh) | (sh <any_Cx_sh_p_z_d>)))) ((([(<any_Vx_sh_sh_ae_noSlide> sh)] | [(sh <any_Vx_sh_sh_ae_noSlide>)]) ([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)])) (ae | ((<any_Vx_sh_sh_ae_noSlide> sh) | (sh <any_Vx_sh_sh_ae_noSlide>)))) (([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)]) (n | ((<any_Cx_sh_sh_n_d> sh) | (sh <any_Cx_sh_sh_n_d>)))) (([(<any_Cx_sh_sh_d_ihl_n> sh)] | [(sh <any_Cx_sh_sh_d_ihl_n>)]) (d | ((<any_Cx_sh_sh_d_ihl_n> sh) | (sh <any_Cx_sh_sh_d_ihl_n>)))) (([(<any_Cx_sh_sh_ihl_d> sh)] | [(sh <any_Cx_sh_sh_ihl_d>)]) (ihl | ((<any_Cx_sh_sh_ihl_d> sh) | (sh <any_Cx_sh_sh_ihl_d>)))) ((([(<any_Vx_sh_sh_ay_noSlide> sh)] | [(sh <any_Vx_sh_sh_ay_noSlide>)]) ([(<any_Cx_sh_sh_axn_ihl> sh)] | [(sh <any_Cx_sh_sh_axn_ihl>)])) (ay | ((<any_Vx_sh_sh_ay_noSlide> sh) | (sh <any_Vx_sh_sh_ay_noSlide>)))) (([(<any_Cx_zh_sh_axn> zh)] | [(zh <any_Cx_zh_sh_axn>)]) (axn | ((<any_Cx_zh_sh_axn> zh) | (zh <any_Cx_zh_sh_axn>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_zh_axn_ng> ng)] | [(ng <any_Cx_zh_axn_ng>)]) sil))
Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 0.8 for axn ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 0.8 for n ...
Considering guard sh with value 0.8 for n ...
candidateGuards = map[sh:true zh:true]
Picking guard, zh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 0.8 for axn ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for ihl ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 72 public <dandelion> = (((sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_d> sh)] | [(sh <any_Cx_sh_p_z_d>)]) (d | ((<any_Cx_sh_p_z_d> sh) | (sh <any_Cx_sh_p_z_d>)))) ((([(<any_Vx_sh_sh_ae_noSlide> sh)] | [(sh <any_Vx_sh_sh_ae_noSlide>)]) ([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)])) (ae | ((<any_Vx_sh_sh_ae_noSlide> sh) | (sh <any_Vx_sh_sh_ae_noSlide>)))) (([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)]) (n | ((<any_Cx_sh_sh_n_d> sh) | (sh <any_Cx_sh_sh_n_d>)))) (([(<any_Cx_sh_sh_d_n> sh)] | [(sh <any_Cx_sh_sh_d_n>)]) (d | ((<any_Cx_sh_sh_d_n> sh) | (sh <any_Cx_sh_sh_d_n>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_l_d> sh)] | [(sh <any_Cx_sh_sh_l_d>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_sh_sh_ay_noSlide> sh)] | [(sh <any_Vx_sh_sh_ay_noSlide>)]) ([(<any_Cx_sh_sh_axn_l> sh)] | [(sh <any_Cx_sh_sh_axn_l>)])) (ay | ((<any_Vx_sh_sh_ay_noSlide> sh) | (sh <any_Vx_sh_sh_ay_noSlide>)))) (([(<any_Cx_zh_sh_axn> zh)] | [(zh <any_Cx_zh_sh_axn>)]) (axn | ((<any_Cx_zh_sh_axn> zh) | (zh <any_Cx_zh_sh_axn>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_zh_axn_m> m)] | [(m <any_Cx_zh_axn_m>)]) sil))
Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 72 public <dandelion> = (((sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_d> sh)] | [(sh <any_Cx_sh_p_z_d>)]) (d | ((<any_Cx_sh_p_z_d> sh) | (sh <any_Cx_sh_p_z_d>)))) ((([(<any_Vx_sh_sh_ae_noSlide> sh)] | [(sh <any_Vx_sh_sh_ae_noSlide>)]) ([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)])) (ae | ((<any_Vx_sh_sh_ae_noSlide> sh) | (sh <any_Vx_sh_sh_ae_noSlide>)))) (([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)]) (n | ((<any_Cx_sh_sh_n_d> sh) | (sh <any_Cx_sh_sh_n_d>)))) (([(<any_Cx_sh_sh_d_n> sh)] | [(sh <any_Cx_sh_sh_d_n>)]) (d | ((<any_Cx_sh_sh_d_n> sh) | (sh <any_Cx_sh_sh_d_n>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_l_d> sh)] | [(sh <any_Cx_sh_sh_l_d>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_sh_sh_ay_noSlide> sh)] | [(sh <any_Vx_sh_sh_ay_noSlide>)]) ([(<any_Cx_sh_sh_ax_l> sh)] | [(sh <any_Cx_sh_sh_ax_l>)])) (ay | ((<any_Vx_sh_sh_ay_noSlide> sh) | (sh <any_Vx_sh_sh_ay_noSlide>)))) (([(<any_Cx_zh_sh_ax> zh)] | [(zh <any_Cx_zh_sh_ax>)]) (ax | ((<any_Cx_zh_sh_ax_n> zh) | (zh <any_Cx_zh_sh_ax_n>)))) (([(<any_Cx_zh_zh_n_ax> zh)] | [(zh <any_Cx_zh_zh_n_ax>)]) (n | ((<any_Cx_zh_zh_n_ax> zh) | (zh <any_Cx_zh_zh_n_ax>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_zh_n_b> b)] | [(b <any_Cx_zh_n_b>)]) sil))
Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 72 public <dandelion> = (((sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_d> sh)] | [(sh <any_Cx_sh_p_z_d>)]) (d | ((<any_Cx_sh_p_z_d> sh) | (sh <any_Cx_sh_p_z_d>)))) ((([(<any_Vx_sh_sh_ae_noSlide> sh)] | [(sh <any_Vx_sh_sh_ae_noSlide>)]) ([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)])) (ae | ((<any_Vx_sh_sh_ae_noSlide> sh) | (sh <any_Vx_sh_sh_ae_noSlide>)))) (([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)]) (n | ((<any_Cx_sh_sh_n_d> sh) | (sh <any_Cx_sh_sh_n_d>)))) (([(<any_Cx_sh_sh_d_n> sh)] | [(sh <any_Cx_sh_sh_d_n>)]) (d | ((<any_Cx_sh_sh_d_n> sh) | (sh <any_Cx_sh_sh_d_n>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_l_d> sh)] | [(sh <any_Cx_sh_sh_l_d>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_sh_sh_ay_noSlide> sh)] | [(sh <any_Vx_sh_sh_ay_noSlide>)]) ([(<any_Cx_sh_sh_axn_l> sh)] | [(sh <any_Cx_sh_sh_axn_l>)])) (ay | ((<any_Vx_sh_sh_ay_noSlide> sh) | (sh <any_Vx_sh_sh_ay_noSlide>)))) (([(<any_Cx_zh_sh_axn> zh)] | [(zh <any_Cx_zh_sh_axn>)]) (axn | ((<any_Cx_zh_sh_axn> zh) | (zh <any_Cx_zh_sh_axn>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_zh_axn_n> n)] | [(n <any_Cx_zh_axn_n>)]) sil))
Considering guard zh with value 1.6 for ax ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1.6 for ax ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 0.8 for n ...
Considering guard zh with value 0.8 for n ...
candidateGuards = map[sh:true zh:true]
Picking guard, sh

Considering guard zh with value 0.8 for n ...
Considering guard sh with value 0.8 for n ...
candidateGuards = map[sh:true zh:true]
Picking guard, zh

frate, target rule = 72 public <dandelion> = (((sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_d> sh)] | [(sh <any_Cx_sh_p_z_d>)]) (d | ((<any_Cx_sh_p_z_d> sh) | (sh <any_Cx_sh_p_z_d>)))) ((([(<any_Vx_sh_sh_ae_noSlide> sh)] | [(sh <any_Vx_sh_sh_ae_noSlide>)]) ([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)])) (ae | ((<any_Vx_sh_sh_ae_noSlide> sh) | (sh <any_Vx_sh_sh_ae_noSlide>)))) (([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)]) (n | ((<any_Cx_sh_sh_n_d> sh) | (sh <any_Cx_sh_sh_n_d>)))) (([(<any_Cx_sh_sh_d_n> sh)] | [(sh <any_Cx_sh_sh_d_n>)]) (d | ((<any_Cx_sh_sh_d_n> sh) | (sh <any_Cx_sh_sh_d_n>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_l_d> sh)] | [(sh <any_Cx_sh_sh_l_d>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_sh_sh_ay_noSlide> sh)] | [(sh <any_Vx_sh_sh_ay_noSlide>)]) ([(<any_Cx_sh_sh_ax_l> sh)] | [(sh <any_Cx_sh_sh_ax_l>)])) (ay | ((<any_Vx_sh_sh_ay_noSlide> sh) | (sh <any_Vx_sh_sh_ay_noSlide>)))) (([(<any_Cx_zh_sh_ax> zh)] | [(zh <any_Cx_zh_sh_ax>)]) (ax | ((<any_Cx_zh_sh_ax_n> zh) | (zh <any_Cx_zh_sh_ax_n>)))) (([(<any_Cx_sh_zh_n_ax> sh)] | [(sh <any_Cx_sh_zh_n_ax>)]) (n | ((<any_Cx_sh_zh_n_ax> sh) | (sh <any_Cx_sh_zh_n_ax>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_sh_n_d> d)] | [(d <any_Cx_sh_n_d>)]) sil))
frate, target rule = 72 public <dandelion> = (((sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_d_z_p>) | (<any_Cx_d_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_d> sh)] | [(sh <any_Cx_sh_p_z_d>)]) (d | ((<any_Cx_sh_p_z_d> sh) | (sh <any_Cx_sh_p_z_d>)))) ((([(<any_Vx_sh_sh_ae_noSlide> sh)] | [(sh <any_Vx_sh_sh_ae_noSlide>)]) ([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)])) (ae | ((<any_Vx_sh_sh_ae_noSlide> sh) | (sh <any_Vx_sh_sh_ae_noSlide>)))) (([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)]) (n | ((<any_Cx_sh_sh_n_d> sh) | (sh <any_Cx_sh_sh_n_d>)))) (([(<any_Cx_sh_sh_d_ihl_n> sh)] | [(sh <any_Cx_sh_sh_d_ihl_n>)]) (d | ((<any_Cx_sh_sh_d_ihl_n> sh) | (sh <any_Cx_sh_sh_d_ihl_n>)))) (([(<any_Cx_sh_sh_ihl_d> sh)] | [(sh <any_Cx_sh_sh_ihl_d>)]) (ihl | ((<any_Cx_sh_sh_ihl_d> sh) | (sh <any_Cx_sh_sh_ihl_d>)))) ((([(<any_Vx_sh_sh_ay_noSlide> sh)] | [(sh <any_Vx_sh_sh_ay_noSlide>)]) ([(<any_Cx_sh_sh_ax_ihl> sh)] | [(sh <any_Cx_sh_sh_ax_ihl>)])) (ay | ((<any_Vx_sh_sh_ay_noSlide> sh) | (sh <any_Vx_sh_sh_ay_noSlide>)))) (([(<any_Cx_zh_sh_ax> zh)] | [(zh <any_Cx_zh_sh_ax>)]) (ax | ((<any_Cx_zh_sh_ax_n> zh) | (zh <any_Cx_zh_sh_ax_n>)))) (([(<any_Cx_zh_zh_n_ax> zh)] | [(zh <any_Cx_zh_zh_n_ax>)]) (n | ((<any_Cx_zh_zh_n_ax> zh) | (zh <any_Cx_zh_zh_n_ax>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_zh_n_d> d)] | [(d <any_Cx_zh_n_d>)]) sil))

results =
{72 [{sil 0 10} {d 11 16} {ae 17 24} {n 25 34} {d 35 38} {iy 39 43} {l 44 47} {ay 48 70} {ax 71 73} {n 74 80} {sil 81 89}]}
{80 [{sil 0 12} {d 13 17} {ae 18 26} {n 27 38} {d 39 43} {iy 44 48} {l 49 53} {ay 54 78} {ax 79 81} {n 82 89} {sil 90 97}]}
{91 [{sil 0 13} {d 14 20} {ae 21 30} {n 31 44} {d 45 49} {iy 50 54} {l 55 60} {ay 61 88} {ax 89 92} {n 93 102} {sil 103 163}]}
{105 [{sil 0 17} {d 18 23} {ae 24 35} {n 36 52} {d 53 57} {iy 58 63} {l 64 69} {ay 70 103} {ax 104 107} {n 108 126} {sil 127 189}]}
{125 [{sil 0 19} {d 20 26} {ae 27 40} {n 41 58} {d 59 66} {iy 67 73} {l 74 80} {ay 81 122} {ax 123 125} {n 126 148} {sil 149 223}]}

normalised results =
{72 [{sil 0 10} {d 15 22} {ae 24 33} {n 35 47} {d 49 53} {iy 54 60} {l 61 65} {ay 67 97} {ax 99 99} {n 103 111} {sil 113 124}]}
{80 [{sil 0 12} {d 16 21} {ae 23 33} {n 34 48} {d 49 54} {iy 55 60} {l 61 66} {ay 68 98} {ax 99 99} {n 103 111} {sil 113 121}]}
{91 [{sil 0 13} {d 15 22} {ae 23 33} {n 34 48} {d 49 54} {iy 55 59} {l 60 66} {ay 67 97} {ax 98 101} {n 102 112} {sil 113 179}]}
{105 [{sil 0 17} {d 17 22} {ae 23 33} {n 34 50} {d 50 54} {iy 55 60} {l 61 66} {ay 67 98} {ax 99 102} {n 103 120} {sil 121 180}]}
{125 [{sil 0 19} {d 16 21} {ae 22 32} {n 33 46} {d 47 53} {iy 54 58} {l 59 64} {ay 65 98} {ax 98 98} {n 101 118} {sil 119 178}]}

ruleAligned = [{{d 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ae 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{n 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{d 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{iy 0} [{0 5} {1 5} {2 5} {3 5} {4 5}]} {{l 0} [{0 6} {1 6} {2 6} {3 6} {4 6}]} {{ay 0} [{0 7} {1 7} {2 7} {3 7} {4 7}]} {{ax 2} [{2 8} {3 8}]} {{n 0} [{0 9} {1 9} {2 9} {3 9} {4 9}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {d 15 22} {ae 24 33} {n 35 47} {d 49 53} {iy 54 60} {l 61 65} {ay 67 97} {ax 99 99} {n 103 111} {sil 113 113}]}
{80 [{sil 0 0} {d 16 21} {ae 23 33} {n 34 48} {d 49 54} {iy 55 60} {l 61 66} {ay 68 98} {ax 99 99} {n 103 111} {sil 113 113}]}
{91 [{sil 0 0} {d 15 22} {ae 23 33} {n 34 48} {d 49 54} {iy 55 59} {l 60 66} {ay 67 97} {ax 98 101} {n 102 112} {sil 113 113}]}
{105 [{sil 0 0} {d 17 22} {ae 23 33} {n 34 50} {d 50 54} {iy 55 60} {l 61 66} {ay 67 98} {ax 99 102} {n 103 120} {sil 121 121}]}
{125 [{sil 0 0} {d 16 21} {ae 22 32} {n 33 46} {d 47 53} {iy 54 58} {l 59 64} {ay 65 98} {ax 98 98} {n 101 118} {sil 119 119}]}

timeAligned = [{{d 16 22} [{0 1} {1 1} {2 1} {4 1} {3 1}]} {{ae 23 33} [{1 2} {2 2} {3 2} {4 2} {0 2}]} {{n 34 48} [{1 3} {2 3} {3 3} {4 3} {0 3}]} {{d 49 54} [{0 4} {1 4} {2 4} {4 4} {3 4}]} {{iy 55 60} [{0 5} {1 5} {2 5} {3 5} {4 5}]} {{l 61 66} [{0 6} {1 6} {2 6} {3 6} {4 6}]} {{ay 67 98} [{0 7} {2 7} {3 7} {4 7} {1 7}]} {{n 103 112} [{0 9} {1 9} {2 9} {3 9} {4 9}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 21
i, iTime, newITime, timeStartFrom = 2 1 2 32
i, iTime, newITime, timeStartFrom = 3 2 3 46
i, iTime, newITime, timeStartFrom = 4 3 4 53
i, iTime, newITime, timeStartFrom = 5 4 5 58
i, iTime, newITime, timeStartFrom = 6 5 6 64
i, iTime, newITime, timeStartFrom = 7 6 -1 97
i, iTime, newITime, timeStartFrom = 8 6 7 97
combinedVerdict    = [{d 0} {ae 0} {n 0} {d 0} {iy 0} {l 0} {ay 0} {ax 2} {n 0}]
ruleAlignedVerdict = [{d 0} {ae 0} {n 0} {d 0} {iy 0} {l 0} {ay 0} {ax 2} {n 0}]

score->
+2 for d
+2 for ae
+2 for n
+2 for d
+2 for iy
+2 for l
+2 for ay
-2 for ax
+2 for n
score<-: 14

results =
{72 [{sil 0 10} {d 11 16} {ae 17 24} {n 25 34} {d 35 38} {ih 39 43} {l 44 47} {ay 48 72} {axn 73 80} {sil 81 89}]}
{80 [{sil 0 12} {d 13 17} {ae 18 26} {n 27 38} {d 39 42} {ih 43 48} {l 49 53} {ay 54 80} {axn 81 89} {sil 90 97}]}
{91 [{sil 0 13} {d 14 20} {ae 21 30} {n 31 44} {d 45 48} {ih 49 54} {l 55 60} {ay 61 91} {axn 92 102} {sil 103 163}]}
{105 [{sil 0 17} {d 18 23} {ae 24 35} {n 36 52} {d 53 56} {ih 57 64} {l 65 69} {ay 70 106} {axn 107 127} {sil 128 189}]}
{125 [{sil 0 19} {d 20 26} {ae 27 40} {n 41 58} {d 59 65} {ih 66 74} {l 75 80} {ay 81 124} {axn 125 148} {sil 149 223}]}

normalised results =
{72 [{sil 0 10} {d 15 22} {ae 24 33} {n 35 47} {d 49 53} {ih 54 60} {l 61 65} {ay 67 100} {axn 101 111} {sil 113 124}]}
{80 [{sil 0 12} {d 16 21} {ae 23 33} {n 34 48} {d 49 53} {ih 54 60} {l 61 66} {ay 68 100} {axn 101 111} {sil 113 121}]}
{91 [{sil 0 13} {d 15 22} {ae 23 33} {n 34 48} {d 49 53} {ih 54 59} {l 60 66} {ay 67 100} {axn 101 112} {sil 113 179}]}
{105 [{sil 0 17} {d 17 22} {ae 23 33} {n 34 50} {d 50 53} {ih 54 61} {l 62 66} {ay 67 101} {axn 102 121} {sil 122 180}]}
{125 [{sil 0 19} {d 16 21} {ae 22 32} {n 33 46} {d 47 52} {ih 53 59} {l 60 64} {ay 65 99} {axn 100 118} {sil 119 178}]}

ruleAligned = [{{d 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ae 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{n 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{d 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{ih 0} [{0 5} {1 5} {2 5} {3 5} {4 5}]} {{l 0} [{0 6} {1 6} {2 6} {3 6} {4 6}]} {{ay 0} [{0 7} {1 7} {2 7} {3 7} {4 7}]} {{axn 0} [{0 8} {1 8} {2 8} {3 8} {4 8}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {d 15 22} {ae 24 33} {n 35 47} {d 49 53} {ih 54 60} {l 61 65} {ay 67 100} {axn 101 111} {sil 113 113}]}
{80 [{sil 0 0} {d 16 21} {ae 23 33} {n 34 48} {d 49 53} {ih 54 60} {l 61 66} {ay 68 100} {axn 101 111} {sil 113 113}]}
{91 [{sil 0 0} {d 15 22} {ae 23 33} {n 34 48} {d 49 53} {ih 54 59} {l 60 66} {ay 67 100} {axn 101 112} {sil 113 113}]}
{105 [{sil 0 0} {d 17 22} {ae 23 33} {n 34 50} {d 50 53} {ih 54 61} {l 62 66} {ay 67 101} {axn 102 121} {sil 122 122}]}
{125 [{sil 0 0} {d 16 21} {ae 22 32} {n 33 46} {d 47 52} {ih 53 59} {l 60 64} {ay 65 99} {axn 100 118} {sil 119 119}]}

timeAligned = [{{d 16 22} [{0 1} {1 1} {2 1} {4 1} {3 1}]} {{ae 23 33} [{1 2} {2 2} {3 2} {4 2} {0 2}]} {{n 34 48} [{1 3} {2 3} {3 3} {4 3} {0 3}]} {{d 49 53} [{0 4} {1 4} {2 4} {4 4} {3 4}]} {{ih 54 60} [{0 5} {1 5} {2 5} {3 5} {4 5}]} {{l 61 66} [{0 6} {1 6} {2 6} {4 6} {3 6}]} {{ay 67 100} [{0 7} {2 7} {3 7} {4 7} {1 7}]} {{axn 101 112} [{0 8} {1 8} {2 8} {4 8} {3 8}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 21
i, iTime, newITime, timeStartFrom = 2 1 2 32
i, iTime, newITime, timeStartFrom = 3 2 3 46
i, iTime, newITime, timeStartFrom = 4 3 4 52
i, iTime, newITime, timeStartFrom = 5 4 5 59
i, iTime, newITime, timeStartFrom = 6 5 6 64
i, iTime, newITime, timeStartFrom = 7 6 7 99
combinedVerdict    = [{d 0} {ae 0} {n 0} {d 0} {ih 0} {l 0} {ay 0} {axn 0}]
ruleAlignedVerdict = [{d 0} {ae 0} {n 0} {d 0} {ih 0} {l 0} {ay 0} {axn 0}]

score->
+2 for d
+2 for ae
+2 for n
+2 for d
+2 for ih
+2 for l
+2 for ay
+2 for axn
score<-: 21

results =
{72 [{sil 0 10} {d 11 16} {ae 17 24} {n 25 34} {d 35 38} {ih 39 43} {l 44 47} {ay 48 70} {ax 71 73} {n 74 80} {sil 81 89}]}
{80 [{sil 0 12} {d 13 17} {ae 18 26} {n 27 38} {d 39 42} {ih 43 48} {l 49 53} {ay 54 78} {ax 79 81} {n 82 89} {sil 90 97}]}
{91 [{sil 0 13} {d 14 20} {ae 21 30} {n 31 44} {d 45 48} {ih 49 54} {l 55 60} {ay 61 88} {ax 89 92} {n 93 102} {sil 103 163}]}
{105 [{sil 0 17} {d 18 23} {ae 24 35} {n 36 52} {d 53 56} {ih 57 64} {l 65 69} {ay 70 103} {ax 104 107} {n 108 126} {sil 127 189}]}
{125 [{sil 0 19} {d 20 26} {ae 27 40} {n 41 58} {d 59 65} {ih 66 74} {l 75 80} {ay 81 122} {ax 123 125} {n 126 148} {sil 149 223}]}

normalised results =
{72 [{sil 0 10} {d 15 22} {ae 24 33} {n 35 47} {d 49 53} {ih 54 60} {l 61 65} {ay 67 97} {ax 99 99} {n 103 111} {sil 113 124}]}
{80 [{sil 0 12} {d 16 21} {ae 23 33} {n 34 48} {d 49 53} {ih 54 60} {l 61 66} {ay 68 98} {ax 99 99} {n 103 111} {sil 113 121}]}
{91 [{sil 0 13} {d 15 22} {ae 23 33} {n 34 48} {d 49 53} {ih 54 59} {l 60 66} {ay 67 97} {ax 98 101} {n 102 112} {sil 113 179}]}
{105 [{sil 0 17} {d 17 22} {ae 23 33} {n 34 50} {d 50 53} {ih 54 61} {l 62 66} {ay 67 98} {ax 99 102} {n 103 120} {sil 121 180}]}
{125 [{sil 0 19} {d 16 21} {ae 22 32} {n 33 46} {d 47 52} {ih 53 59} {l 60 64} {ay 65 98} {ax 98 98} {n 101 118} {sil 119 178}]}

ruleAligned = [{{d 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ae 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{n 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{d 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{ih 0} [{0 5} {1 5} {2 5} {3 5} {4 5}]} {{l 0} [{0 6} {1 6} {2 6} {3 6} {4 6}]} {{ay 0} [{0 7} {1 7} {2 7} {3 7} {4 7}]} {{ax 2} [{2 8} {3 8}]} {{n 0} [{0 9} {1 9} {2 9} {3 9} {4 9}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {d 15 22} {ae 24 33} {n 35 47} {d 49 53} {ih 54 60} {l 61 65} {ay 67 97} {ax 99 99} {n 103 111} {sil 113 113}]}
{80 [{sil 0 0} {d 16 21} {ae 23 33} {n 34 48} {d 49 53} {ih 54 60} {l 61 66} {ay 68 98} {ax 99 99} {n 103 111} {sil 113 113}]}
{91 [{sil 0 0} {d 15 22} {ae 23 33} {n 34 48} {d 49 53} {ih 54 59} {l 60 66} {ay 67 97} {ax 98 101} {n 102 112} {sil 113 113}]}
{105 [{sil 0 0} {d 17 22} {ae 23 33} {n 34 50} {d 50 53} {ih 54 61} {l 62 66} {ay 67 98} {ax 99 102} {n 103 120} {sil 121 121}]}
{125 [{sil 0 0} {d 16 21} {ae 22 32} {n 33 46} {d 47 52} {ih 53 59} {l 60 64} {ay 65 98} {ax 98 98} {n 101 118} {sil 119 119}]}

timeAligned = [{{d 16 22} [{0 1} {1 1} {2 1} {4 1} {3 1}]} {{ae 23 33} [{1 2} {2 2} {3 2} {4 2} {0 2}]} {{n 34 48} [{1 3} {2 3} {3 3} {4 3} {0 3}]} {{d 49 53} [{0 4} {1 4} {2 4} {4 4} {3 4}]} {{ih 54 60} [{0 5} {1 5} {2 5} {3 5} {4 5}]} {{l 61 66} [{0 6} {1 6} {2 6} {4 6} {3 6}]} {{ay 67 98} [{0 7} {2 7} {3 7} {4 7} {1 7}]} {{n 103 112} [{0 9} {1 9} {2 9} {3 9} {4 9}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 21
i, iTime, newITime, timeStartFrom = 2 1 2 32
i, iTime, newITime, timeStartFrom = 3 2 3 46
i, iTime, newITime, timeStartFrom = 4 3 4 52
i, iTime, newITime, timeStartFrom = 5 4 5 59
i, iTime, newITime, timeStartFrom = 6 5 6 64
i, iTime, newITime, timeStartFrom = 7 6 -1 97
i, iTime, newITime, timeStartFrom = 8 6 7 97
combinedVerdict    = [{d 0} {ae 0} {n 0} {d 0} {ih 0} {l 0} {ay 0} {ax 2} {n 0}]
ruleAlignedVerdict = [{d 0} {ae 0} {n 0} {d 0} {ih 0} {l 0} {ay 0} {ax 2} {n 0}]

score->
+2 for d
+2 for ae
+2 for n
+2 for d
+2 for ih
+2 for l
+2 for ay
-2 for ax
+2 for n
score<-: 14

results =
{72 [{sil 0 10} {d 11 16} {ae 17 24} {n 25 34} {d 35 38} {iy 39 43} {l 44 47} {ay 48 72} {axn 73 80} {sil 81 89}]}
{80 [{sil 0 12} {d 13 17} {ae 18 26} {n 27 38} {d 39 43} {iy 44 48} {l 49 53} {ay 54 80} {axn 81 89} {sil 90 97}]}
{91 [{sil 0 13} {d 14 20} {ae 21 30} {n 31 44} {d 45 49} {iy 50 54} {l 55 60} {ay 61 91} {axn 92 102} {sil 103 163}]}
{105 [{sil 0 17} {d 18 23} {ae 24 35} {n 36 52} {d 53 57} {iy 58 63} {l 64 69} {ay 70 106} {axn 107 127} {sil 128 189}]}
{125 [{sil 0 19} {d 20 26} {ae 27 40} {n 41 58} {d 59 66} {iy 67 73} {l 74 80} {ay 81 124} {axn 125 148} {sil 149 223}]}

normalised results =
{72 [{sil 0 10} {d 15 22} {ae 24 33} {n 35 47} {d 49 53} {iy 54 60} {l 61 65} {ay 67 100} {axn 101 111} {sil 113 124}]}
{80 [{sil 0 12} {d 16 21} {ae 23 33} {n 34 48} {d 49 54} {iy 55 60} {l 61 66} {ay 68 100} {axn 101 111} {sil 113 121}]}
{91 [{sil 0 13} {d 15 22} {ae 23 33} {n 34 48} {d 49 54} {iy 55 59} {l 60 66} {ay 67 100} {axn 101 112} {sil 113 179}]}
{105 [{sil 0 17} {d 17 22} {ae 23 33} {n 34 50} {d 50 54} {iy 55 60} {l 61 66} {ay 67 101} {axn 102 121} {sil 122 180}]}
{125 [{sil 0 19} {d 16 21} {ae 22 32} {n 33 46} {d 47 53} {iy 54 58} {l 59 64} {ay 65 99} {axn 100 118} {sil 119 178}]}

ruleAligned = [{{d 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ae 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{n 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{d 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{iy 0} [{0 5} {1 5} {2 5} {3 5} {4 5}]} {{l 0} [{0 6} {1 6} {2 6} {3 6} {4 6}]} {{ay 0} [{0 7} {1 7} {2 7} {3 7} {4 7}]} {{axn 0} [{0 8} {1 8} {2 8} {3 8} {4 8}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {d 15 22} {ae 24 33} {n 35 47} {d 49 53} {iy 54 60} {l 61 65} {ay 67 100} {axn 101 111} {sil 113 113}]}
{80 [{sil 0 0} {d 16 21} {ae 23 33} {n 34 48} {d 49 54} {iy 55 60} {l 61 66} {ay 68 100} {axn 101 111} {sil 113 113}]}
{91 [{sil 0 0} {d 15 22} {ae 23 33} {n 34 48} {d 49 54} {iy 55 59} {l 60 66} {ay 67 100} {axn 101 112} {sil 113 113}]}
{105 [{sil 0 0} {d 17 22} {ae 23 33} {n 34 50} {d 50 54} {iy 55 60} {l 61 66} {ay 67 101} {axn 102 121} {sil 122 122}]}
{125 [{sil 0 0} {d 16 21} {ae 22 32} {n 33 46} {d 47 53} {iy 54 58} {l 59 64} {ay 65 99} {axn 100 118} {sil 119 119}]}

timeAligned = [{{d 16 22} [{0 1} {1 1} {2 1} {4 1} {3 1}]} {{ae 23 33} [{1 2} {2 2} {3 2} {4 2} {0 2}]} {{n 34 48} [{1 3} {2 3} {3 3} {4 3} {0 3}]} {{d 49 54} [{0 4} {1 4} {2 4} {4 4} {3 4}]} {{iy 55 60} [{0 5} {1 5} {2 5} {3 5} {4 5}]} {{l 61 66} [{0 6} {1 6} {2 6} {3 6} {4 6}]} {{ay 67 100} [{0 7} {2 7} {3 7} {4 7} {1 7}]} {{axn 101 112} [{0 8} {1 8} {2 8} {4 8} {3 8}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 21
i, iTime, newITime, timeStartFrom = 2 1 2 32
i, iTime, newITime, timeStartFrom = 3 2 3 46
i, iTime, newITime, timeStartFrom = 4 3 4 53
i, iTime, newITime, timeStartFrom = 5 4 5 58
i, iTime, newITime, timeStartFrom = 6 5 6 64
i, iTime, newITime, timeStartFrom = 7 6 7 99
combinedVerdict    = [{d 0} {ae 0} {n 0} {d 0} {iy 0} {l 0} {ay 0} {axn 0}]
ruleAlignedVerdict = [{d 0} {ae 0} {n 0} {d 0} {iy 0} {l 0} {ay 0} {axn 0}]

score->
+2 for d
+2 for ae
+2 for n
+2 for d
+2 for iy
+2 for l
+2 for ay
+2 for axn
score<-: 21

results =
{72 [{sil 0 10} {d 11 16} {ae 17 24} {n 25 34} {d 35 38} {ihl 39 47} {ay 48 72} {axn 73 80} {sil 81 89}]}
{80 [{sil 0 12} {d 13 17} {ae 18 26} {n 27 38} {d 39 43} {ihl 44 52} {ay 53 80} {axn 81 89} {sil 90 97}]}
{91 [{sil 0 13} {d 14 20} {ae 21 30} {n 31 44} {d 45 49} {ihl 50 59} {ay 60 91} {axn 92 102} {sil 103 163}]}
{105 [{sil 0 17} {d 18 23} {ae 24 35} {n 36 52} {d 53 57} {ihl 58 69} {ay 70 106} {axn 107 127} {sil 128 189}]}
{125 [{sil 0 19} {d 20 26} {ae 27 40} {n 41 58} {d 59 66} {ihl 67 79} {ay 80 124} {axn 125 148} {sil 149 223}]}

normalised results =
{72 [{sil 0 10} {d 15 22} {ae 24 33} {n 35 47} {d 49 53} {ihl 54 65} {ay 67 100} {axn 101 111} {sil 113 124}]}
{80 [{sil 0 12} {d 16 21} {ae 23 33} {n 34 48} {d 49 54} {ihl 55 65} {ay 66 100} {axn 101 111} {sil 113 121}]}
{91 [{sil 0 13} {d 15 22} {ae 23 33} {n 34 48} {d 49 54} {ihl 55 65} {ay 66 100} {axn 101 112} {sil 113 179}]}
{105 [{sil 0 17} {d 17 22} {ae 23 33} {n 34 50} {d 50 54} {ihl 55 66} {ay 67 101} {axn 102 121} {sil 122 180}]}
{125 [{sil 0 19} {d 16 21} {ae 22 32} {n 33 46} {d 47 53} {ihl 54 63} {ay 64 99} {axn 100 118} {sil 119 178}]}

ruleAligned = [{{d 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ae 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{n 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{d 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{ihl 0} [{0 5} {1 5} {2 5} {3 5} {4 5}]} {{ay 0} [{0 6} {1 6} {2 6} {3 6} {4 6}]} {{axn 0} [{0 7} {1 7} {2 7} {3 7} {4 7}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {d 15 22} {ae 24 33} {n 35 47} {d 49 53} {ihl 54 65} {ay 67 100} {axn 101 111} {sil 113 113}]}
{80 [{sil 0 0} {d 16 21} {ae 23 33} {n 34 48} {d 49 54} {ihl 55 65} {ay 66 100} {axn 101 111} {sil 113 113}]}
{91 [{sil 0 0} {d 15 22} {ae 23 33} {n 34 48} {d 49 54} {ihl 55 65} {ay 66 100} {axn 101 112} {sil 113 113}]}
{105 [{sil 0 0} {d 17 22} {ae 23 33} {n 34 50} {d 50 54} {ihl 55 66} {ay 67 101} {axn 102 121} {sil 122 122}]}
{125 [{sil 0 0} {d 16 21} {ae 22 32} {n 33 46} {d 47 53} {ihl 54 63} {ay 64 99} {axn 100 118} {sil 119 119}]}

timeAligned = [{{d 16 22} [{0 1} {1 1} {2 1} {4 1} {3 1}]} {{ae 23 33} [{1 2} {2 2} {3 2} {4 2} {0 2}]} {{n 34 48} [{1 3} {2 3} {3 3} {4 3} {0 3}]} {{d 49 54} [{0 4} {1 4} {2 4} {4 4} {3 4}]} {{ihl 55 65} [{0 5} {1 5} {2 5} {3 5} {4 5}]} {{ay 66 100} [{1 6} {2 6} {4 6} {0 6} {3 6}]} {{axn 101 112} [{0 7} {1 7} {2 7} {4 7} {3 7}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 21
i, iTime, newITime, timeStartFrom = 2 1 2 32
i, iTime, newITime, timeStartFrom = 3 2 3 46
i, iTime, newITime, timeStartFrom = 4 3 4 53
i, iTime, newITime, timeStartFrom = 5 4 5 63
i, iTime, newITime, timeStartFrom = 6 5 6 99
combinedVerdict    = [{d 0} {ae 0} {n 0} {d 0} {ihl 0} {ay 0} {axn 0}]
ruleAlignedVerdict = [{d 0} {ae 0} {n 0} {d 0} {ihl 0} {ay 0} {axn 0}]

score->
+2 for d
+2 for ae
+2 for n
+2 for d
+2 for ihl
+2 for ay
+2 for axn
score<-: 19

results =
{72 [{sil 0 10} {d 11 16} {ae 17 24} {n 25 34} {d 35 38} {ihl 39 47} {ay 48 70} {ax 71 73} {n 74 80} {sil 81 89}]}
{80 [{sil 0 12} {d 13 17} {ae 18 26} {n 27 38} {d 39 43} {ihl 44 52} {ay 53 78} {ax 79 81} {n 82 89} {sil 90 97}]}
{91 [{sil 0 13} {d 14 20} {ae 21 30} {n 31 44} {d 45 49} {ihl 50 59} {ay 60 88} {ax 89 92} {n 93 102} {sil 103 163}]}
{105 [{sil 0 17} {d 18 23} {ae 24 35} {n 36 52} {d 53 57} {ihl 58 69} {ay 70 103} {ax 104 107} {n 108 126} {sil 127 189}]}
{125 [{sil 0 19} {d 20 26} {ae 27 40} {n 41 58} {d 59 66} {ihl 67 79} {ay 80 122} {ax 123 125} {n 126 148} {sil 149 223}]}

normalised results =
{72 [{sil 0 10} {d 15 22} {ae 24 33} {n 35 47} {d 49 53} {ihl 54 65} {ay 67 97} {ax 99 99} {n 103 111} {sil 113 124}]}
{80 [{sil 0 12} {d 16 21} {ae 23 33} {n 34 48} {d 49 54} {ihl 55 65} {ay 66 98} {ax 99 99} {n 103 111} {sil 113 121}]}
{91 [{sil 0 13} {d 15 22} {ae 23 33} {n 34 48} {d 49 54} {ihl 55 65} {ay 66 97} {ax 98 101} {n 102 112} {sil 113 179}]}
{105 [{sil 0 17} {d 17 22} {ae 23 33} {n 34 50} {d 50 54} {ihl 55 66} {ay 67 98} {ax 99 102} {n 103 120} {sil 121 180}]}
{125 [{sil 0 19} {d 16 21} {ae 22 32} {n 33 46} {d 47 53} {ihl 54 63} {ay 64 98} {ax 98 98} {n 101 118} {sil 119 178}]}

ruleAligned = [{{d 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ae 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{n 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{d 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{ihl 0} [{0 5} {1 5} {2 5} {3 5} {4 5}]} {{ay 0} [{0 6} {1 6} {2 6} {3 6} {4 6}]} {{ax 2} [{2 7} {3 7}]} {{n 0} [{0 8} {1 8} {2 8} {3 8} {4 8}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {d 15 22} {ae 24 33} {n 35 47} {d 49 53} {ihl 54 65} {ay 67 97} {ax 99 99} {n 103 111} {sil 113 113}]}
{80 [{sil 0 0} {d 16 21} {ae 23 33} {n 34 48} {d 49 54} {ihl 55 65} {ay 66 98} {ax 99 99} {n 103 111} {sil 113 113}]}
{91 [{sil 0 0} {d 15 22} {ae 23 33} {n 34 48} {d 49 54} {ihl 55 65} {ay 66 97} {ax 98 101} {n 102 112} {sil 113 113}]}
{105 [{sil 0 0} {d 17 22} {ae 23 33} {n 34 50} {d 50 54} {ihl 55 66} {ay 67 98} {ax 99 102} {n 103 120} {sil 121 121}]}
{125 [{sil 0 0} {d 16 21} {ae 22 32} {n 33 46} {d 47 53} {ihl 54 63} {ay 64 98} {ax 98 98} {n 101 118} {sil 119 119}]}

timeAligned = [{{d 16 22} [{0 1} {1 1} {2 1} {4 1} {3 1}]} {{ae 23 33} [{1 2} {2 2} {3 2} {4 2} {0 2}]} {{n 34 48} [{1 3} {2 3} {3 3} {4 3} {0 3}]} {{d 49 54} [{0 4} {1 4} {2 4} {4 4} {3 4}]} {{ihl 55 65} [{0 5} {1 5} {2 5} {3 5} {4 5}]} {{ay 66 98} [{1 6} {2 6} {4 6} {0 6} {3 6}]} {{n 103 112} [{0 8} {1 8} {2 8} {3 8} {4 8}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 21
i, iTime, newITime, timeStartFrom = 2 1 2 32
i, iTime, newITime, timeStartFrom = 3 2 3 46
i, iTime, newITime, timeStartFrom = 4 3 4 53
i, iTime, newITime, timeStartFrom = 5 4 5 63
i, iTime, newITime, timeStartFrom = 6 5 -1 97
i, iTime, newITime, timeStartFrom = 7 5 6 97
combinedVerdict    = [{d 0} {ae 0} {n 0} {d 0} {ihl 0} {ay 0} {ax 2} {n 0}]
ruleAlignedVerdict = [{d 0} {ae 0} {n 0} {d 0} {ihl 0} {ay 0} {ax 2} {n 0}]

score->
+2 for d
+2 for ae
+2 for n
+2 for d
+2 for ihl
+2 for ay
-2 for ax
+2 for n
score<-: 12
testPronounce d good ae good n good d good ih good l good ay good axn good
publish->
phonsToAlphas = [{[d] d} {[ae] a} {[n] n} {[d] d} {[ih] e} {[l] l} {[ay] i} {[axn] on}]
getVerdict<-:new {d [d] 0}
getVerdict<-:new {a [ae] 0}
getVerdict<-:new {n [n] 0}
getVerdict<-:new {d [d] 0}
getVerdict<-:new {e [ih] 0}
getVerdict<-:new {l [l] 0}
getVerdict<-:new {i [ay] 0}
getVerdict<-:new {on [axn] 0}
lettersVerdicts = [{d [d] 0} {a [ae] 0} {n [n] 0} {d [d] 0} {e [ih] 0} {l [l] 0} {i [ay] 0} {on [axn] 0}]
publish<-
{
  "word": "dandelion",
  "results": [
    {
      "letters": "d",
      "phonemes": "d",
      "verdict": "good"
    },
    {
      "letters": "a",
      "phonemes": "æ",
      "verdict": "good"
    },
    {
      "letters": "n",
      "phonemes": "n",
      "verdict": "good"
    },
    {
      "letters": "d",
      "phonemes": "d",
      "verdict": "good"
    },
    {
      "letters": "e",
      "phonemes": "ɪ",
      "verdict": "good"
    },
    {
      "letters": "l",
      "phonemes": "l",
      "verdict": "good"
    },
    {
      "letters": "i",
      "phonemes": "ɑɪ",
      "verdict": "good"
    },
    {
      "letters": "on",
      "phonemes": "ən",
      "verdict": "good"
    }
  ],
  "err": null
}
