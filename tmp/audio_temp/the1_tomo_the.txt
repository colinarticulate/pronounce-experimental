Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_ddc88f84-5885-4ee5-b44b-26198671e277 audiofile /Users/test/go/src/Phonemes/audio_clips/the1_tomo.wav word the dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  1.33125



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.52 0.44000000000000006 0.9600000000000001

 start3, duration3, end3 =  0.56 0.36 0.92

 Initial start, duration, end =  0.42000000000000004 0.54 0.9600000000000001

 Cut at: start, duration =  0.42000000000000004 0.89125     guard_end =  1.31125 

Running scan for frate = 125
Running scan for frate = 125
Considering guard zh with value 1 for dh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 125 public <the> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_dh> zh)] | [(zh <any_Cx_zh_p_z_dh>)]) (dh | t | ((<any_Cx_zh_p_z_dh_axr> zh) | (zh <any_Cx_zh_p_z_dh_axr>)))) (([(<any_Cx_zh_zh_axr_dh> zh)] | [(zh <any_Cx_zh_zh_axr_dh>)]) (axr | ((<any_Cx_zh_zh_axr> zh) | (zh <any_Cx_zh_zh_axr>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_hh> hh)] | [(hh <any_Cx_zh_axr_hh>)]) sil))
Considering guard ch with value 3 for dh ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 3 for iy ...
candidateGuards = map[ch:true]
Picking guard, ch

Running scan for frate = 105
frate, target rule = 125 public <the> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ch_p_z_dh> ch)] | [(ch <any_Cx_ch_p_z_dh>)]) (dh | t | ((<any_Cx_ch_p_z_dh> ch) | (ch <any_Cx_ch_p_z_dh>)))) ((([(<any_Vx_ch_ch_iy_noSlide> ch)] | [(ch <any_Vx_ch_ch_iy_noSlide>)]) ([(<any_Cx_ch_ch_dh> ch)] | [(ch <any_Cx_ch_ch_dh>)])) (iy | ((<any_Vx_ch_ch_iy_noSlide> ch) | (ch <any_Vx_ch_ch_iy_noSlide>)))) (([(<any_Cx_ch_iy_ng> ng)] | [(ng <any_Cx_ch_iy_ng>)]) ([(<any_Vx_ch_iy_ng> ng)] | [(ng <any_Vx_ch_iy_ng>)]) sil))
Considering guard zh with value 1 for dh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

Running scan for frate = 105
frate, target rule = 105 public <the> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_dh> zh)] | [(zh <any_Cx_zh_p_z_dh>)]) (dh | t | ((<any_Cx_zh_p_z_dh_axr> zh) | (zh <any_Cx_zh_p_z_dh_axr>)))) (([(<any_Cx_zh_zh_axr_dh> zh)] | [(zh <any_Cx_zh_zh_axr_dh>)]) (axr | ((<any_Cx_zh_zh_axr> zh) | (zh <any_Cx_zh_zh_axr>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_thr> thr)] | [(thr <any_Cx_zh_axr_thr>)]) sil))
Considering guard ch with value 3 for dh ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 3 for iy ...
candidateGuards = map[ch:true]
Picking guard, ch

Running scan for frate = 91
frate, target rule = 105 public <the> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ch_p_z_dh> ch)] | [(ch <any_Cx_ch_p_z_dh>)]) (dh | t | ((<any_Cx_ch_p_z_dh> ch) | (ch <any_Cx_ch_p_z_dh>)))) ((([(<any_Vx_ch_ch_iy_noSlide> ch)] | [(ch <any_Vx_ch_ch_iy_noSlide>)]) ([(<any_Cx_ch_ch_dh> ch)] | [(ch <any_Cx_ch_ch_dh>)])) (iy | ((<any_Vx_ch_ch_iy_noSlide> ch) | (ch <any_Vx_ch_ch_iy_noSlide>)))) (([(<any_Cx_ch_iy_hh> hh)] | [(hh <any_Cx_ch_iy_hh>)]) ([(<any_Vx_ch_iy_hh> hh)] | [(hh <any_Vx_ch_iy_hh>)]) sil))
Considering guard zh with value 1 for dh ...
candidateGuards = map[zh:true]
Picking guard, zh

Running scan for frate = 91
Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 3 for dh ...
candidateGuards = map[ch:true]
Picking guard, ch

frate, target rule = 91 public <the> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_dh> zh)] | [(zh <any_Cx_zh_p_z_dh>)]) (dh | t | ((<any_Cx_zh_p_z_dh_axr> zh) | (zh <any_Cx_zh_p_z_dh_axr>)))) (([(<any_Cx_zh_zh_axr_dh> zh)] | [(zh <any_Cx_zh_zh_axr_dh>)]) (axr | ((<any_Cx_zh_zh_axr> zh) | (zh <any_Cx_zh_zh_axr>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_f> f)] | [(f <any_Cx_zh_axr_f>)]) sil))
Considering guard ch with value 3 for iy ...
candidateGuards = map[ch:true]
Picking guard, ch

Running scan for frate = 80
frate, target rule = 91 public <the> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ch_p_z_dh> ch)] | [(ch <any_Cx_ch_p_z_dh>)]) (dh | t | ((<any_Cx_ch_p_z_dh> ch) | (ch <any_Cx_ch_p_z_dh>)))) ((([(<any_Vx_ch_ch_iy_noSlide> ch)] | [(ch <any_Vx_ch_ch_iy_noSlide>)]) ([(<any_Cx_ch_ch_dh> ch)] | [(ch <any_Cx_ch_ch_dh>)])) (iy | ((<any_Vx_ch_ch_iy_noSlide> ch) | (ch <any_Vx_ch_ch_iy_noSlide>)))) (([(<any_Cx_ch_iy_f> f)] | [(f <any_Cx_ch_iy_f>)]) ([(<any_Vx_ch_iy_f> f)] | [(f <any_Vx_ch_iy_f>)]) sil))
Considering guard zh with value 1 for dh ...
candidateGuards = map[zh:true]
Picking guard, zh

Running scan for frate = 80
Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 3 for dh ...
candidateGuards = map[ch:true]
Picking guard, ch

frate, target rule = 80 public <the> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_dh> zh)] | [(zh <any_Cx_zh_p_z_dh>)]) (dh | t | ((<any_Cx_zh_p_z_dh_axr> zh) | (zh <any_Cx_zh_p_z_dh_axr>)))) (([(<any_Cx_zh_zh_axr_dh> zh)] | [(zh <any_Cx_zh_zh_axr_dh>)]) (axr | ((<any_Cx_zh_zh_axr> zh) | (zh <any_Cx_zh_zh_axr>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_n> n)] | [(n <any_Cx_zh_axr_n>)]) sil))
Considering guard ch with value 3 for iy ...
candidateGuards = map[ch:true]
Picking guard, ch

Running scan for frate = 72
frate, target rule = 80 public <the> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ch_p_z_dh> ch)] | [(ch <any_Cx_ch_p_z_dh>)]) (dh | t | ((<any_Cx_ch_p_z_dh> ch) | (ch <any_Cx_ch_p_z_dh>)))) ((([(<any_Vx_ch_ch_iy_noSlide> ch)] | [(ch <any_Vx_ch_ch_iy_noSlide>)]) ([(<any_Cx_ch_ch_dh> ch)] | [(ch <any_Cx_ch_ch_dh>)])) (iy | ((<any_Vx_ch_ch_iy_noSlide> ch) | (ch <any_Vx_ch_ch_iy_noSlide>)))) (([(<any_Cx_ch_iy_thr> thr)] | [(thr <any_Cx_ch_iy_thr>)]) ([(<any_Vx_ch_iy_thr> thr)] | [(thr <any_Vx_ch_iy_thr>)]) sil))
Considering guard zh with value 1 for dh ...
candidateGuards = map[zh:true]
Picking guard, zh

Running scan for frate = 72
Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 3 for dh ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 3 for iy ...
candidateGuards = map[ch:true]
Picking guard, ch

frate, target rule = 72 public <the> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_dh> zh)] | [(zh <any_Cx_zh_p_z_dh>)]) (dh | t | ((<any_Cx_zh_p_z_dh_axr> zh) | (zh <any_Cx_zh_p_z_dh_axr>)))) (([(<any_Cx_zh_zh_axr_dh> zh)] | [(zh <any_Cx_zh_zh_axr_dh>)]) (axr | ((<any_Cx_zh_zh_axr> zh) | (zh <any_Cx_zh_zh_axr>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_thr> thr)] | [(thr <any_Cx_zh_axr_thr>)]) sil))
frate, target rule = 72 public <the> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ch_p_z_dh> ch)] | [(ch <any_Cx_ch_p_z_dh>)]) (dh | t | ((<any_Cx_ch_p_z_dh> ch) | (ch <any_Cx_ch_p_z_dh>)))) ((([(<any_Vx_ch_ch_iy_noSlide> ch)] | [(ch <any_Vx_ch_ch_iy_noSlide>)]) ([(<any_Cx_ch_ch_dh> ch)] | [(ch <any_Cx_ch_ch_dh>)])) (iy | ((<any_Vx_ch_ch_iy_noSlide> ch) | (ch <any_Vx_ch_ch_iy_noSlide>)))) (([(<any_Cx_ch_iy_ng> ng)] | [(ng <any_Cx_ch_iy_ng>)]) ([(<any_Vx_ch_iy_ng> ng)] | [(ng <any_Vx_ch_iy_ng>)]) sil))

results =
{72 [{sil 0 12} {t 13 25} {axr 26 30} {sil 31 46}]}
{80 [{sil 0 13} {z 14 16} {ih 17 26} {t 27 29} {axr 30 33} {sil 34 48}]}
{91 [{sil 0 16} {z 17 19} {ih 20 30} {t 31 33} {axr 34 37} {sil 38 79}]}
{105 [{sil 0 17} {z 18 20} {d 21 26} {ih 27 37} {z 38 40} {t 41 64} {axr 65 87} {sil 88 92}]}
{125 [{sil 0 25} {ih 26 42} {z 43 45} {t 46 61} {axr 62 98} {sil 99 108}]}

normalised results =
{72 [{sil 0 12} {t 18 35} {axr 36 42} {sil 43 64}]}
{80 [{sil 0 13} {z 18 18} {ih 21 33} {t 34 34} {axr 38 41} {sil 43 60}]}
{91 [{sil 0 16} {z 19 19} {ih 22 33} {t 34 34} {axr 37 41} {sil 42 87}]}
{105 [{sil 0 17} {z 17 17} {d 20 25} {ih 26 35} {z 36 36} {t 39 61} {axr 62 83} {sil 84 88}]}
{125 [{sil 0 25} {ih 21 34} {z 34 34} {t 37 49} {axr 50 78} {sil 79 86}]}

ruleAligned = [{{ih 3} [{1 2} {2 2} {3 3} {4 1}]} {{dh 2} []} {{t 3} [{0 1} {3 5} {4 3}]} {{axr 0} [{0 2} {1 4} {2 4} {3 6} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {t 18 35} {axr 36 42} {sil 43 43}]}
{80 [{sil 0 0} {z 18 18} {ih 21 33} {t 34 34} {axr 38 41} {sil 43 43}]}
{91 [{sil 0 0} {z 19 19} {ih 22 33} {t 34 34} {axr 37 41} {sil 42 42}]}
{105 [{sil 0 0} {z 17 17} {d 20 25} {ih 26 35} {z 36 36} {t 39 61} {axr 62 83} {sil 84 84}]}
{125 [{sil 0 0} {ih 21 34} {z 34 34} {t 37 49} {axr 50 78} {sil 79 79}]}

timeAligned = [{{ih 22 33} [{1 2} {2 2} {4 1} {3 3}]} {{axr 38 41} [{0 2} {1 4} {2 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 -1 33
i, iTime, newITime, timeStartFrom = 2 0 -1 33
i, iTime, newITime, timeStartFrom = 3 0 1 33
combinedVerdict    = [{ih 3} {dh 2} {axr 0}]
ruleAlignedVerdict = [{ih 3} {dh 2} {t 3} {axr 0}]

score->
-2 for ih
-2 for dh
+2 for axr
score<-: -2

results =
{72 [{sil 0 12} {t 13 18} {ih 19 23} {ch 24 27} {sil 28 46}]}
{80 [{sil 0 14} {t 15 20} {ih 21 26} {ch 27 30} {sil 31 48}]}
{91 [{sil 0 16} {t 17 22} {ih 23 32} {ch 33 35} {sil 36 79}]}
{105 [{sil 0 19} {t 20 26} {ih 27 38} {ch 39 41} {sil 42 92}]}
{125 [{sil 0 21} {t 22 28} {ih 29 43} {ch 44 46} {sil 47 108}]}

normalised results =
{72 [{sil 0 12} {t 18 25} {ih 26 32} {ch 33 38} {sil 39 64}]}
{80 [{sil 0 14} {t 19 25} {ih 26 33} {ch 34 38} {sil 39 60}]}
{91 [{sil 0 16} {t 19 24} {ih 25 35} {ch 36 36} {sil 40 87}]}
{105 [{sil 0 19} {t 19 25} {ih 26 36} {ch 37 37} {sil 40 88}]}
{125 [{sil 0 21} {t 18 22} {ih 23 34} {ch 35 35} {sil 38 86}]}

ruleAligned = [{{dh 2} []} {{t 3} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{iy 2} []} {{ih 3} [{0 2} {1 2} {2 2} {3 2} {4 2}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {t 18 25} {ih 26 32} {ch 33 38} {sil 39 39}]}
{80 [{sil 0 0} {t 19 25} {ih 26 33} {ch 34 34} {sil 39 39}]}
{91 [{sil 0 0} {t 19 24} {ih 25 35} {ch 36 36} {sil 40 40}]}
{105 [{sil 0 0} {t 19 25} {ih 26 36} {ch 37 37} {sil 40 40}]}
{125 [{sil 0 0} {t 18 22} {ih 23 34} {ch 35 35} {sil 38 38}]}

timeAligned = [{{t 19 25} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ih 26 34} [{0 2} {1 2} {2 2} {3 2} {4 2}]}]

i, iTime, newITime, timeStartFrom = 0 0 -1 0
i, iTime, newITime, timeStartFrom = 1 0 0 0
i, iTime, newITime, timeStartFrom = 2 0 -1 22
i, iTime, newITime, timeStartFrom = 3 0 1 22
combinedVerdict    = [{dh 2} {t 3} {iy 2} {ih 3}]
ruleAlignedVerdict = [{dh 2} {t 3} {iy 2} {ih 3}]

score->
-2 for dh
-2 for t
-2 for iy
-2 for ih
score<-: -8
bestResult = {-2 [{ih 3} {dh 2} {axr 0}] [dh axr]}
testPronounce ih surprise dh missing axr good
publish->
phonsToAlphas = [{[dh] th} {[axr] e}]
getVerdict<-:new {th [dh] 2}
getVerdict<-:new {e [axr] 0}
lettersVerdicts = [{ih [ih] 3} {th [dh] 2} {e [axr] 0}]
publish<-
{
  "word": "the",
  "results": [
    {
      "letters": "ih",
      "phonemes": "ɪ",
      "verdict": "surprise"
    },
    {
      "letters": "th",
      "phonemes": "ð",
      "verdict": "missing"
    },
    {
      "letters": "e",
      "phonemes": "əɹ",
      "verdict": "good"
    }
  ],
  "err": null
}
