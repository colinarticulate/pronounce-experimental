Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_4d3800b7-5adf-4483-b86e-23e6df7e9765 audiofile /Users/test/go/src/Phonemes/audio_clips/was1_philip.wav word was dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  2.858312



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  1.0999999999999999 0.76 1.8599999999999999

 start3, duration3, end3 =  1.0999999999999999 0.7 1.7999999999999998

 Initial start, duration, end =  0.9999999999999999 0.86 1.8599999999999999

 Cut at: start, duration =  0.9999999999999999 1.31     guard_end =  2.31 

Running scan for frate = 125
Considering guard sh with value 0.8 for w ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 5 for oh ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ng with value 1 for z ...
candidateGuards = map[ng:true]
Picking guard, ng

Running scan for frate = 125
Considering guard sh with value 0.8 for w ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 5 for ax ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard y with value 5 for z ...
Considering guard ch with value 5 for z ...
candidateGuards = map[ch:true y:true]
Picking guard, y

frate, target rule = 125 public <was> = (((sil [((d <any_Cx_w_d_p>) | (<any_Cx_w_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil p (sil [((d <any_Cx_w_d_p>) | (<any_Cx_w_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_sh_p_d_w_ax> sh)] | [(sh <any_Cx_sh_p_d_w_ax>)]) (w | v | ((<any_Cx_sh_p_d_w_ax> sh) | (sh <any_Cx_sh_p_d_w_ax>)))) (([(<any_Cx_ch_sh_ax_w> ch)] | [(ch <any_Cx_ch_sh_ax_w>)]) (ax | ((<any_Cx_ch_sh_ax_z> ch) | (ch <any_Cx_ch_sh_ax_z>)))) (([(<any_Cx_y_ch_z_ax> y)] | [(y <any_Cx_y_ch_z_ax>)]) (z | ((<any_Cx_y_ch_z_ax> y) | (y <any_Cx_y_ch_z_ax>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_y_z_v> v)] | [(v <any_Cx_y_z_v>)]) sil))
Running scan for frate = 105
Considering guard sh with value 0.8 for w ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 5 for ax ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 5 for z ...
Considering guard y with value 5 for z ...
candidateGuards = map[ch:true y:true]
Picking guard, ch

frate, target rule = 125 public <was> = (((sil [((m <any_Cx_w_m_p>) | (<any_Cx_w_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]) | (sil p (sil [((m <any_Cx_w_m_p>) | (<any_Cx_w_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]))) (([(<any_Cx_sh_p_m_w_oh> sh)] | [(sh <any_Cx_sh_p_m_w_oh>)]) (w | v | ((<any_Cx_sh_p_m_w_oh> sh) | (sh <any_Cx_sh_p_m_w_oh>)))) (([(<any_Cx_ch_sh_oh_w> ch)] | [(ch <any_Cx_ch_sh_oh_w>)]) (oh | ((<any_Cx_ch_sh_oh_z> ch) | (ch <any_Cx_ch_sh_oh_z>)))) (([(<any_Cx_ng_ch_z_oh> ng)] | [(ng <any_Cx_ng_ch_z_oh>)]) (z | ((<any_Cx_ng_ch_z_oh> ng) | (ng <any_Cx_ng_ch_z_oh>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_ng_z_thr> thr)] | [(thr <any_Cx_ng_z_thr>)]) sil))
frate, target rule = 105 public <was> = (((sil [((z <any_Cx_w_z_p>) | (<any_Cx_w_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_w_z_p>) | (<any_Cx_w_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_w_ax> sh)] | [(sh <any_Cx_sh_p_z_w_ax>)]) (w | v | ((<any_Cx_sh_p_z_w_ax> sh) | (sh <any_Cx_sh_p_z_w_ax>)))) (([(<any_Cx_ch_sh_ax_w> ch)] | [(ch <any_Cx_ch_sh_ax_w>)]) (ax | ((<any_Cx_ch_sh_ax_z> ch) | (ch <any_Cx_ch_sh_ax_z>)))) (([(<any_Cx_ch_ch_z_ax> ch)] | [(ch <any_Cx_ch_ch_z_ax>)]) (z | ((<any_Cx_ch_ch_z_ax> ch) | (ch <any_Cx_ch_ch_z_ax>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_ch_z_b> b)] | [(b <any_Cx_ch_z_b>)]) sil))
Running scan for frate = 105
Running scan for frate = 91
Considering guard sh with value 0.8 for w ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 5 for ax ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 5 for z ...
Considering guard y with value 5 for z ...
candidateGuards = map[ch:true y:true]
Picking guard, ch

frate, target rule = 91 public <was> = (((sil [((r <any_Cx_w_r_p>) | (<any_Cx_w_r_p> r))] [((r <any_vowel_noSlide>) | (<any_vowel_noSlide> r))]) | (sil p (sil [((r <any_Cx_w_r_p>) | (<any_Cx_w_r_p> r))] [((r <any_vowel_noSlide>) | (<any_vowel_noSlide> r))]))) (([(<any_Cx_sh_p_r_w_ax> sh)] | [(sh <any_Cx_sh_p_r_w_ax>)]) (w | v | ((<any_Cx_sh_p_r_w_ax> sh) | (sh <any_Cx_sh_p_r_w_ax>)))) (([(<any_Cx_ch_sh_ax_w> ch)] | [(ch <any_Cx_ch_sh_ax_w>)]) (ax | ((<any_Cx_ch_sh_ax_z> ch) | (ch <any_Cx_ch_sh_ax_z>)))) (([(<any_Cx_ch_ch_z_ax> ch)] | [(ch <any_Cx_ch_ch_z_ax>)]) (z | ((<any_Cx_ch_ch_z_ax> ch) | (ch <any_Cx_ch_ch_z_ax>)))) (([(<any_vowel_noSlide> s)] | [(s <any_vowel_noSlide>)]) ([(<any_Cx_ch_z_s> s)] | [(s <any_Cx_ch_z_s>)]) sil))
Running scan for frate = 80
Considering guard sh with value 0.8 for w ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 5 for ax ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard sh with value 0.8 for w ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 5 for z ...
Considering guard y with value 5 for z ...
candidateGuards = map[ch:true y:true]
Picking guard, ch

Considering guard ch with value 5 for oh ...
candidateGuards = map[ch:true]
Picking guard, ch

frate, target rule = 80 public <was> = (((sil [((d <any_Cx_w_d_p>) | (<any_Cx_w_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil p (sil [((d <any_Cx_w_d_p>) | (<any_Cx_w_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_sh_p_d_w_ax> sh)] | [(sh <any_Cx_sh_p_d_w_ax>)]) (w | v | ((<any_Cx_sh_p_d_w_ax> sh) | (sh <any_Cx_sh_p_d_w_ax>)))) (([(<any_Cx_ch_sh_ax_w> ch)] | [(ch <any_Cx_ch_sh_ax_w>)]) (ax | ((<any_Cx_ch_sh_ax_z> ch) | (ch <any_Cx_ch_sh_ax_z>)))) (([(<any_Cx_ch_ch_z_ax> ch)] | [(ch <any_Cx_ch_ch_z_ax>)]) (z | ((<any_Cx_ch_ch_z_ax> ch) | (ch <any_Cx_ch_ch_z_ax>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_ch_z_thr> thr)] | [(thr <any_Cx_ch_z_thr>)]) sil))
Considering guard ng with value 1 for z ...
candidateGuards = map[ng:true]
Picking guard, ng

Running scan for frate = 72
frate, target rule = 105 public <was> = (((sil [((r <any_Cx_w_r_p>) | (<any_Cx_w_r_p> r))] [((r <any_vowel_noSlide>) | (<any_vowel_noSlide> r))]) | (sil p (sil [((r <any_Cx_w_r_p>) | (<any_Cx_w_r_p> r))] [((r <any_vowel_noSlide>) | (<any_vowel_noSlide> r))]))) (([(<any_Cx_sh_p_r_w_oh> sh)] | [(sh <any_Cx_sh_p_r_w_oh>)]) (w | v | ((<any_Cx_sh_p_r_w_oh> sh) | (sh <any_Cx_sh_p_r_w_oh>)))) (([(<any_Cx_ch_sh_oh_w> ch)] | [(ch <any_Cx_ch_sh_oh_w>)]) (oh | ((<any_Cx_ch_sh_oh_z> ch) | (ch <any_Cx_ch_sh_oh_z>)))) (([(<any_Cx_ng_ch_z_oh> ng)] | [(ng <any_Cx_ng_ch_z_oh>)]) (z | ((<any_Cx_ng_ch_z_oh> ng) | (ng <any_Cx_ng_ch_z_oh>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_ng_z_v> v)] | [(v <any_Cx_ng_z_v>)]) sil))
Considering guard sh with value 0.8 for w ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 91
Considering guard ch with value 5 for ax ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard y with value 5 for z ...
Considering guard ch with value 5 for z ...
candidateGuards = map[ch:true y:true]
Picking guard, y

Considering guard sh with value 0.8 for w ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 72 public <was> = (((sil [((l <any_Cx_w_l_p>) | (<any_Cx_w_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]) | (sil p (sil [((l <any_Cx_w_l_p>) | (<any_Cx_w_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]))) (([(<any_Cx_sh_p_l_w_ax> sh)] | [(sh <any_Cx_sh_p_l_w_ax>)]) (w | v | ((<any_Cx_sh_p_l_w_ax> sh) | (sh <any_Cx_sh_p_l_w_ax>)))) (([(<any_Cx_ch_sh_ax_w> ch)] | [(ch <any_Cx_ch_sh_ax_w>)]) (ax | ((<any_Cx_ch_sh_ax_z> ch) | (ch <any_Cx_ch_sh_ax_z>)))) (([(<any_Cx_y_ch_z_ax> y)] | [(y <any_Cx_y_ch_z_ax>)]) (z | ((<any_Cx_y_ch_z_ax> y) | (y <any_Cx_y_ch_z_ax>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_y_z_thr> thr)] | [(thr <any_Cx_y_z_thr>)]) sil))
Considering guard ch with value 5 for oh ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ng with value 1 for z ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 91 public <was> = (((sil [((n <any_Cx_w_n_p>) | (<any_Cx_w_n_p> n))] [((n <any_vowel_noSlide>) | (<any_vowel_noSlide> n))]) | (sil p (sil [((n <any_Cx_w_n_p>) | (<any_Cx_w_n_p> n))] [((n <any_vowel_noSlide>) | (<any_vowel_noSlide> n))]))) (([(<any_Cx_sh_p_n_w_oh> sh)] | [(sh <any_Cx_sh_p_n_w_oh>)]) (w | v | ((<any_Cx_sh_p_n_w_oh> sh) | (sh <any_Cx_sh_p_n_w_oh>)))) (([(<any_Cx_ch_sh_oh_w> ch)] | [(ch <any_Cx_ch_sh_oh_w>)]) (oh | ((<any_Cx_ch_sh_oh_z> ch) | (ch <any_Cx_ch_sh_oh_z>)))) (([(<any_Cx_ng_ch_z_oh> ng)] | [(ng <any_Cx_ng_ch_z_oh>)]) (z | ((<any_Cx_ng_ch_z_oh> ng) | (ng <any_Cx_ng_ch_z_oh>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_ng_z_thr> thr)] | [(thr <any_Cx_ng_z_thr>)]) sil))
Running scan for frate = 80
Considering guard sh with value 0.8 for w ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 5 for oh ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ng with value 1 for z ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 80 public <was> = (((sil [((z <any_Cx_w_z_p>) | (<any_Cx_w_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_w_z_p>) | (<any_Cx_w_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_w_oh> sh)] | [(sh <any_Cx_sh_p_z_w_oh>)]) (w | v | ((<any_Cx_sh_p_z_w_oh> sh) | (sh <any_Cx_sh_p_z_w_oh>)))) (([(<any_Cx_ch_sh_oh_w> ch)] | [(ch <any_Cx_ch_sh_oh_w>)]) (oh | ((<any_Cx_ch_sh_oh_z> ch) | (ch <any_Cx_ch_sh_oh_z>)))) (([(<any_Cx_ng_ch_z_oh> ng)] | [(ng <any_Cx_ng_ch_z_oh>)]) (z | ((<any_Cx_ng_ch_z_oh> ng) | (ng <any_Cx_ng_ch_z_oh>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_ng_z_thr> thr)] | [(thr <any_Cx_ng_z_thr>)]) sil))
Running scan for frate = 72
Considering guard sh with value 0.8 for w ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 5 for oh ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ng with value 1 for z ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 72 public <was> = (((sil [((z <any_Cx_w_z_p>) | (<any_Cx_w_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_w_z_p>) | (<any_Cx_w_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_w_oh> sh)] | [(sh <any_Cx_sh_p_z_w_oh>)]) (w | v | ((<any_Cx_sh_p_z_w_oh> sh) | (sh <any_Cx_sh_p_z_w_oh>)))) (([(<any_Cx_ch_sh_oh_w> ch)] | [(ch <any_Cx_ch_sh_oh_w>)]) (oh | ((<any_Cx_ch_sh_oh_z> ch) | (ch <any_Cx_ch_sh_oh_z>)))) (([(<any_Cx_ng_ch_z_oh> ng)] | [(ng <any_Cx_ng_ch_z_oh>)]) (z | ((<any_Cx_ng_ch_z_oh> ng) | (ng <any_Cx_ng_ch_z_oh>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_ng_z_v> v)] | [(v <any_Cx_ng_z_v>)]) sil))

results =
{72 [{sil 0 12} {l 13 22} {oh 23 37} {v 38 47} {v 48 51} {ch 52 54} {z 55 59} {sil 60 88}]}
{80 [{sil 0 15} {d 16 23} {oh 24 42} {v 43 50} {ax 51 53} {z 54 65} {sil 66 95}]}
{91 [{sil 0 15} {w 16 33} {l 34 54} {ch 55 57} {z 58 80} {sil 81 117}]}
{105 [{sil 0 18} {w 19 38} {l 39 63} {ch 64 66} {z 67 87} {sil 88 136}]}
{125 [{sil 0 21} {w 22 45} {l 46 74} {ch 75 77} {z 78 100} {sil 101 160}]}

normalised results =
{72 [{sil 0 12} {l 18 31} {oh 32 51} {v 53 65} {v 67 71} {ch 72 72} {z 76 82} {sil 83 122}]}
{80 [{sil 0 15} {d 20 29} {oh 30 53} {v 54 63} {ax 64 64} {z 68 81} {sil 83 119}]}
{91 [{sil 0 15} {w 18 36} {l 37 59} {ch 60 60} {z 64 88} {sil 89 129}]}
{105 [{sil 0 18} {w 18 36} {l 37 60} {ch 61 61} {z 64 83} {sil 84 130}]}
{125 [{sil 0 21} {w 18 36} {l 37 59} {ch 60 60} {z 62 80} {sil 81 128}]}

ruleAligned = [{{w 1} [{2 1} {3 1} {4 1}]} {{ax 2} []} {{l 3} [{2 2} {3 2} {4 2}]} {{z 0} [{0 6} {1 5} {2 4} {3 4} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {l 18 31} {oh 32 51} {v 53 65} {v 67 71} {ch 72 72} {z 76 82} {sil 83 83}]}
{80 [{sil 0 0} {d 20 29} {oh 30 53} {v 54 63} {ax 64 64} {z 68 81} {sil 83 83}]}
{91 [{sil 0 0} {w 18 36} {l 37 59} {ch 60 60} {z 64 88} {sil 89 89}]}
{105 [{sil 0 0} {w 18 36} {l 37 60} {ch 61 61} {z 64 83} {sil 84 84}]}
{125 [{sil 0 0} {w 18 36} {l 37 59} {ch 60 60} {z 62 80} {sil 81 81}]}

timeAligned = [{{w 18 36} [{2 1} {3 1} {4 1}]} {{l 37 59} [{2 2} {3 2} {4 2}]} {{z 64 82} [{2 4} {3 4} {4 4} {1 5} {0 6}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 -1 36
i, iTime, newITime, timeStartFrom = 2 0 1 36
i, iTime, newITime, timeStartFrom = 3 1 2 59
combinedVerdict    = [{w 1} {ax 2} {l 3} {z 0}]
ruleAlignedVerdict = [{w 1} {ax 2} {l 3} {z 0}]

score->
+1 for w
-2 for ax
-2 for l
+2 for z
score<-: -1

results =
{72 [{sil 0 11} {w 12 23} {oh 24 35} {ng 36 38} {v 39 47} {z 48 59} {sil 60 88}]}
{80 [{sil 0 13} {w 14 26} {oh 27 39} {ng 40 42} {v 43 52} {z 53 65} {sil 66 95}]}
{91 [{sil 0 15} {w 16 29} {oh 30 45} {ng 46 51} {m 52 56} {z 57 80} {sil 81 117}]}
{105 [{sil 0 18} {w 19 34} {oh 35 54} {ng 55 59} {m 60 66} {z 67 87} {sil 88 136}]}
{125 [{sil 0 21} {w 22 38} {oh 39 71} {z 72 100} {sil 101 160}]}

normalised results =
{72 [{sil 0 11} {w 17 32} {oh 33 49} {ng 50 50} {v 54 65} {z 67 82} {sil 83 122}]}
{80 [{sil 0 13} {w 18 33} {oh 34 49} {ng 50 50} {v 54 65} {z 66 81} {sil 83 119}]}
{91 [{sil 0 15} {w 18 32} {oh 33 49} {ng 51 56} {m 57 62} {z 63 88} {sil 89 129}]}
{105 [{sil 0 18} {w 18 32} {oh 33 51} {ng 52 56} {m 57 63} {z 64 83} {sil 84 130}]}
{125 [{sil 0 21} {w 18 30} {oh 31 57} {z 58 80} {sil 81 128}]}

ruleAligned = [{{w 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{oh 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{z 0} [{0 5} {1 5} {2 5} {3 5} {4 3}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {w 17 32} {oh 33 49} {ng 50 50} {v 54 65} {z 67 82} {sil 83 83}]}
{80 [{sil 0 0} {w 18 33} {oh 34 49} {ng 50 50} {v 54 65} {z 66 81} {sil 83 83}]}
{91 [{sil 0 0} {w 18 32} {oh 33 49} {ng 51 56} {m 57 62} {z 63 88} {sil 89 89}]}
{105 [{sil 0 0} {w 18 32} {oh 33 51} {ng 52 52} {m 57 63} {z 64 83} {sil 84 84}]}
{125 [{sil 0 0} {w 18 30} {oh 31 57} {z 58 80} {sil 81 81}]}

timeAligned = [{{w 18 32} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{oh 33 49} [{0 2} {2 2} {3 2} {4 2} {1 2}]} {{z 64 82} [{2 5} {3 5} {4 3} {1 5} {0 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 30
i, iTime, newITime, timeStartFrom = 2 1 2 49
combinedVerdict    = [{w 0} {oh 0} {z 0}]
ruleAlignedVerdict = [{w 0} {oh 0} {z 0}]

score->
+2 for w
+2 for oh
+2 for z
score<-: 11
testPronounce w good oh good z good
publish->
phonsToAlphas = [{[w] w} {[oh] a} {[z] s}]
getVerdict<-:new {w [w] 0}
getVerdict<-:new {a [oh] 0}
getVerdict<-:new {s [z] 0}
lettersVerdicts = [{w [w] 0} {a [oh] 0} {s [z] 0}]
publish<-
{
  "word": "was",
  "results": [
    {
      "letters": "w",
      "phonemes": "w",
      "verdict": "good"
    },
    {
      "letters": "a",
      "phonemes": "ɒ",
      "verdict": "good"
    },
    {
      "letters": "s",
      "phonemes": "z",
      "verdict": "good"
    }
  ],
  "err": null
}
