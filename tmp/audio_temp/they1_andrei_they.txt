Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_b195815c-0d40-4d7f-9374-af97446c9bb2 audiofile /Users/test/go/src/Phonemes/audio_clips/they1_andrei.wav word they dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  4.543625



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0 3.42 3.42

 start3, duration3, end3 =  0.78 0.82 1.6

 Initial start, duration, end =  0 3.42 3.42

 Cut at: start, duration =  0 3.87     guard_end =  3.87 

Running scan for frate = 125
Considering guard ch with value 1.7999999999999998 for dh ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 1.7999999999999998 for ey ...
candidateGuards = map[ch:true]
Picking guard, ch

frate, target rule = 125 public <they> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ch_p_z_dh> ch)] | [(ch <any_Cx_ch_p_z_dh>)]) (dh | t | ((<any_Cx_ch_p_z_dh> ch) | (ch <any_Cx_ch_p_z_dh>)))) ((([(<any_Vx_ch_ch_ey_noSlide> ch)] | [(ch <any_Vx_ch_ch_ey_noSlide>)]) ([(<any_Cx_ch_ch_dh> ch)] | [(ch <any_Cx_ch_ch_dh>)])) (ey | ((<any_Vx_ch_ch_ey_noSlide> ch) | (ch <any_Vx_ch_ch_ey_noSlide>)))) (([(<any_Cx_ch_ey_f> f)] | [(f <any_Cx_ch_ey_f>)]) ([(<any_Vx_ch_ey_f> f)] | [(f <any_Vx_ch_ey_f>)]) sil))
Running scan for frate = 105
Considering guard ch with value 1.7999999999999998 for dh ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 1.7999999999999998 for ey ...
candidateGuards = map[ch:true]
Picking guard, ch

frate, target rule = 105 public <they> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ch_p_z_dh> ch)] | [(ch <any_Cx_ch_p_z_dh>)]) (dh | t | ((<any_Cx_ch_p_z_dh> ch) | (ch <any_Cx_ch_p_z_dh>)))) ((([(<any_Vx_ch_ch_ey_noSlide> ch)] | [(ch <any_Vx_ch_ch_ey_noSlide>)]) ([(<any_Cx_ch_ch_dh> ch)] | [(ch <any_Cx_ch_ch_dh>)])) (ey | ((<any_Vx_ch_ch_ey_noSlide> ch) | (ch <any_Vx_ch_ch_ey_noSlide>)))) (([(<any_Cx_ch_ey_f> f)] | [(f <any_Cx_ch_ey_f>)]) ([(<any_Vx_ch_ey_f> f)] | [(f <any_Vx_ch_ey_f>)]) sil))
Running scan for frate = 91
Considering guard ch with value 1.7999999999999998 for dh ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 1.7999999999999998 for ey ...
candidateGuards = map[ch:true]
Picking guard, ch

frate, target rule = 91 public <they> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ch_p_z_dh> ch)] | [(ch <any_Cx_ch_p_z_dh>)]) (dh | t | ((<any_Cx_ch_p_z_dh> ch) | (ch <any_Cx_ch_p_z_dh>)))) ((([(<any_Vx_ch_ch_ey_noSlide> ch)] | [(ch <any_Vx_ch_ch_ey_noSlide>)]) ([(<any_Cx_ch_ch_dh> ch)] | [(ch <any_Cx_ch_ch_dh>)])) (ey | ((<any_Vx_ch_ch_ey_noSlide> ch) | (ch <any_Vx_ch_ch_ey_noSlide>)))) (([(<any_Cx_ch_ey_n> n)] | [(n <any_Cx_ch_ey_n>)]) ([(<any_Vx_ch_ey_n> n)] | [(n <any_Vx_ch_ey_n>)]) sil))
Running scan for frate = 80
Considering guard ch with value 1.7999999999999998 for dh ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 1.7999999999999998 for ey ...
candidateGuards = map[ch:true]
Picking guard, ch

frate, target rule = 80 public <they> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ch_p_z_dh> ch)] | [(ch <any_Cx_ch_p_z_dh>)]) (dh | t | ((<any_Cx_ch_p_z_dh> ch) | (ch <any_Cx_ch_p_z_dh>)))) ((([(<any_Vx_ch_ch_ey_noSlide> ch)] | [(ch <any_Vx_ch_ch_ey_noSlide>)]) ([(<any_Cx_ch_ch_dh> ch)] | [(ch <any_Cx_ch_ch_dh>)])) (ey | ((<any_Vx_ch_ch_ey_noSlide> ch) | (ch <any_Vx_ch_ch_ey_noSlide>)))) (([(<any_Cx_ch_ey_hh> hh)] | [(hh <any_Cx_ch_ey_hh>)]) ([(<any_Vx_ch_ey_hh> hh)] | [(hh <any_Vx_ch_ey_hh>)]) sil))
Running scan for frate = 72
Considering guard ch with value 1.7999999999999998 for dh ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 1.7999999999999998 for ey ...
candidateGuards = map[ch:true]
Picking guard, ch

frate, target rule = 72 public <they> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ch_p_z_dh> ch)] | [(ch <any_Cx_ch_p_z_dh>)]) (dh | t | ((<any_Cx_ch_p_z_dh> ch) | (ch <any_Cx_ch_p_z_dh>)))) ((([(<any_Vx_ch_ch_ey_noSlide> ch)] | [(ch <any_Vx_ch_ch_ey_noSlide>)]) ([(<any_Cx_ch_ch_dh> ch)] | [(ch <any_Cx_ch_ch_dh>)])) (ey | ((<any_Vx_ch_ch_ey_noSlide> ch) | (ch <any_Vx_ch_ch_ey_noSlide>)))) (([(<any_Cx_ch_ey_f> f)] | [(f <any_Cx_ch_ey_f>)]) ([(<any_Vx_ch_ey_f> f)] | [(f <any_Vx_ch_ey_f>)]) sil))

results =
{72 [{sil 0 60} {dh 61 82} {ey 83 106} {sil 107 113}]}
{80 [{sil 0 67} {dh 68 93} {ey 94 118} {sil 119 123}]}
{91 [{sil 0 6} {v 7 75} {z 76 78} {dh 79 104} {ey 105 111} {ehr 112 155} {n 156 159} {sil 160 350}]}
{105 [{sil 0 5} {dh 6 8} {ey 9 11} {f 12 89} {dh 90 124} {ehr 125 161} {f 162 169} {sil 170 406}]}
{125 [{sil 0 3} {dh 4 7} {ey 8 10} {f 11 103} {dh 104 144} {ih 145 189} {f 190 198} {sil 199 480}]}

normalised results =
{72 [{sil 0 60} {dh 85 114} {ey 115 147} {sil 149 157}]}
{80 [{sil 0 67} {dh 85 116} {ey 118 148} {sil 149 154}]}
{91 [{sil 0 6} {v 8 82} {z 84 84} {dh 87 114} {ey 115 122} {ehr 123 170} {n 171 175} {sil 176 385}]}
{105 [{sil 0 5} {dh 6 6} {ey 9 9} {f 11 85} {dh 86 118} {ehr 119 153} {f 154 161} {sil 162 387}]}
{125 [{sil 0 3} {dh 3 6} {ey 6 6} {f 9 82} {dh 83 115} {ih 116 151} {f 152 158} {sil 159 384}]}

ruleAligned = [{{dh 0} [{0 1} {1 1} {2 3} {4 1}]} {{ey 1} [{0 2} {1 2} {2 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {dh 85 114} {ey 115 147} {sil 149 149}]}
{80 [{sil 0 0} {dh 85 116} {ey 118 148} {sil 149 149}]}
{91 [{sil 0 0} {v 8 82} {z 84 84} {dh 87 114} {ey 115 122} {ehr 123 123} {n 171 175} {sil 176 176}]}
{105 [{sil 0 0} {dh 6 6} {ey 9 9} {f 11 11} {dh 86 118} {ehr 119 153} {f 154 161} {sil 162 162}]}
{125 [{sil 0 0} {dh 3 6} {ey 6 6} {f 9 9} {dh 83 115} {ih 116 151} {f 152 152} {sil 159 159}]}

timeAligned = [{{dh 85 115} [{0 1} {1 1} {4 4} {3 4} {2 3}]} {{ey 118 122} [{0 2} {1 2} {2 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 114
combinedVerdict    = [{dh 0} {ey 1}]
ruleAlignedVerdict = [{dh 0} {ey 1}]

score->
+2 for dh
+1 for ey
score<-: 8
testPronounce dh good ey possible
publish->
phonsToAlphas = [{[dh] th} {[ey] ey}]
getVerdict<-:new {th [dh] 0}
getVerdict<-:new {ey [ey] 1}
lettersVerdicts = [{th [dh] 0} {ey [ey] 1}]
publish<-
{
  "word": "they",
  "results": [
    {
      "letters": "th",
      "phonemes": "ð",
      "verdict": "good"
    },
    {
      "letters": "ey",
      "phonemes": "eɪ",
      "verdict": "possible"
    }
  ],
  "err": null
}
