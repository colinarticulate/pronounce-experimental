Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_4574b823-5078-4f2a-b732-e4bb077a92bc audiofile /Users/test/go/src/Phonemes/audio_clips/billing2_tressa.wav word billing dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  1.471625



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.54 0.84 1.38

 start3, duration3, end3 =  0.54 0.76 1.3

 Initial start, duration, end =  0.44000000000000006 0.9399999999999998 1.38

 Cut at: start, duration =  0.44000000000000006 1.011625     guard_end =  1.451625 

Running scan for frate = 125
Running scan for frate = 125
Running scan for frate = 125
Running scan for frate = 125
Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for b ...
Considering guard jh with value 1 for b ...
Considering guard s with value 1 for b ...
candidateGuards = map[jh:true s:true sh:true]
Picking guard, jh

Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard jh with value 1 for b ...
Considering guard s with value 1 for b ...
Considering guard sh with value 1 for b ...
candidateGuards = map[jh:true s:true sh:true]
Picking guard, jh

Considering guard sh with value 2 for ihl ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ihl ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for ing ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for ing ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard s with value 1 for ng ...
Considering guard z with value 1 for ng ...
Considering guard sh with value 1 for ng ...
Considering guard jh with value 1 for ng ...
candidateGuards = map[jh:true s:true sh:true z:true]
Picking guard, s

frate, target rule = 125 public <billing> = (((sil [((p <any_Cx_b_p_hh>) | (<any_Cx_b_p_hh> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]) | (sil hh (sil [((p <any_Cx_b_p_hh>) | (<any_Cx_b_p_hh> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]))) (([(<any_Cx_sh_hh_p_b_ihl> sh)] | [(sh <any_Cx_sh_hh_p_b_ihl>)]) (b | ((<any_Cx_sh_hh_p_b_ihl> sh) | (sh <any_Cx_sh_hh_p_b_ihl>)))) (([(<any_Cx_sh_sh_ihl_b> sh)] | [(sh <any_Cx_sh_sh_ihl_b>)]) (ihl | ((<any_Cx_sh_sh_ihl_ing> sh) | (sh <any_Cx_sh_sh_ihl_ing>)))) (([(<any_Cx_sh_sh_ing_ihl> sh)] | [(sh <any_Cx_sh_sh_ing_ihl>)]) (ing | ((<any_Cx_sh_sh_ing_ihl> sh) | (sh <any_Cx_sh_sh_ing_ihl>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_sh_ing_m> m)] | [(m <any_Cx_sh_ing_m>)]) sil))
Considering guard z with value 1 for ng ...
Considering guard sh with value 1 for ng ...
Considering guard s with value 1 for ng ...
Considering guard jh with value 1 for ng ...
candidateGuards = map[jh:true s:true sh:true z:true]
Picking guard, s

frate, target rule = 125 public <billing> = (((sil [((dh <any_Cx_b_dh_hh>) | (<any_Cx_b_dh_hh> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]) | (sil hh (sil [((dh <any_Cx_b_dh_hh>) | (<any_Cx_b_dh_hh> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]))) (([(<any_Cx_jh_hh_dh_b> jh)] | [(jh <any_Cx_jh_hh_dh_b>)]) (b | ((<any_Cx_jh_hh_dh_b> jh) | (jh <any_Cx_jh_hh_dh_b>)))) ((([(<any_Vx_sh_jh_ih_noSlide> sh)] | [(sh <any_Vx_sh_jh_ih_noSlide>)]) ([(<any_Cx_sh_jh_l_b> sh)] | [(sh <any_Cx_sh_jh_l_b>)])) (ih | ((<any_Vx_sh_jh_ih_noSlide> sh) | (sh <any_Vx_sh_jh_ih_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l_ing> sh) | (sh <any_Cx_sh_sh_l_ing>)))) (([(<any_Cx_sh_sh_ing_l> sh)] | [(sh <any_Cx_sh_sh_ing_l>)]) (ing | ((<any_Cx_sh_sh_ing_l> sh) | (sh <any_Cx_sh_sh_ing_l>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_sh_ing_thr> thr)] | [(thr <any_Cx_sh_ing_thr>)]) sil))
frate, target rule = 125 public <billing> = (((sil [((l <any_Cx_b_l_hh>) | (<any_Cx_b_l_hh> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]) | (sil hh (sil [((l <any_Cx_b_l_hh>) | (<any_Cx_b_l_hh> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]))) (([(<any_Cx_sh_hh_l_b_ihl> sh)] | [(sh <any_Cx_sh_hh_l_b_ihl>)]) (b | ((<any_Cx_sh_hh_l_b_ihl> sh) | (sh <any_Cx_sh_hh_l_b_ihl>)))) (([(<any_Cx_sh_sh_ihl_b> sh)] | [(sh <any_Cx_sh_sh_ihl_b>)]) (ihl | ((<any_Cx_sh_sh_ihl> sh) | (sh <any_Cx_sh_sh_ihl>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_ng_ihl> sh)] | [(sh <any_Cx_sh_sh_ng_ihl>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_s_sh_ng> s)] | [(s <any_Cx_s_sh_ng>)]) (ng | ((<any_Cx_s_sh_ng> s) | (s <any_Cx_s_sh_ng>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_s_ng_m> m)] | [(m <any_Cx_s_ng_m>)]) sil))
Running scan for frate = 105
frate, target rule = 125 public <billing> = (((sil [((p <any_Cx_b_p_hh>) | (<any_Cx_b_p_hh> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]) | (sil hh (sil [((p <any_Cx_b_p_hh>) | (<any_Cx_b_p_hh> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]))) (([(<any_Cx_jh_hh_p_b> jh)] | [(jh <any_Cx_jh_hh_p_b>)]) (b | ((<any_Cx_jh_hh_p_b> jh) | (jh <any_Cx_jh_hh_p_b>)))) ((([(<any_Vx_sh_jh_ih_noSlide> sh)] | [(sh <any_Vx_sh_jh_ih_noSlide>)]) ([(<any_Cx_sh_jh_l_b> sh)] | [(sh <any_Cx_sh_jh_l_b>)])) (ih | ((<any_Vx_sh_jh_ih_noSlide> sh) | (sh <any_Vx_sh_jh_ih_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_ng_l> sh)] | [(sh <any_Cx_sh_sh_ng_l>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_s_sh_ng> s)] | [(s <any_Cx_s_sh_ng>)]) (ng | ((<any_Cx_s_sh_ng> s) | (s <any_Cx_s_sh_ng>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_s_ng_f> f)] | [(f <any_Cx_s_ng_f>)]) sil))
Running scan for frate = 105
Running scan for frate = 105
Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 105
Considering guard sh with value 2 for ihl ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ihl ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard jh with value 1 for b ...
Considering guard s with value 1 for b ...
Considering guard sh with value 1 for b ...
candidateGuards = map[jh:true s:true sh:true]
Picking guard, jh

Considering guard sh with value 1 for ing ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard s with value 1 for ng ...
Considering guard z with value 1 for ng ...
Considering guard sh with value 1 for ng ...
Considering guard jh with value 1 for ng ...
candidateGuards = map[jh:true s:true sh:true z:true]
Picking guard, s

Considering guard sh with value 1 for b ...
Considering guard jh with value 1 for b ...
Considering guard s with value 1 for b ...
candidateGuards = map[jh:true s:true sh:true]
Picking guard, s

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 105 public <billing> = (((sil [((p <any_Cx_b_p_hh>) | (<any_Cx_b_p_hh> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]) | (sil hh (sil [((p <any_Cx_b_p_hh>) | (<any_Cx_b_p_hh> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]))) (([(<any_Cx_sh_hh_p_b_ihl> sh)] | [(sh <any_Cx_sh_hh_p_b_ihl>)]) (b | ((<any_Cx_sh_hh_p_b_ihl> sh) | (sh <any_Cx_sh_hh_p_b_ihl>)))) (([(<any_Cx_sh_sh_ihl_b> sh)] | [(sh <any_Cx_sh_sh_ihl_b>)]) (ihl | ((<any_Cx_sh_sh_ihl> sh) | (sh <any_Cx_sh_sh_ihl>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_ng_ihl> sh)] | [(sh <any_Cx_sh_sh_ng_ihl>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_s_sh_ng> s)] | [(s <any_Cx_s_sh_ng>)]) (ng | ((<any_Cx_s_sh_ng> s) | (s <any_Cx_s_sh_ng>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_s_ng_f> f)] | [(f <any_Cx_s_ng_f>)]) sil))
frate, target rule = 105 public <billing> = (((sil [((dh <any_Cx_b_dh_hh>) | (<any_Cx_b_dh_hh> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]) | (sil hh (sil [((dh <any_Cx_b_dh_hh>) | (<any_Cx_b_dh_hh> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]))) (([(<any_Cx_sh_hh_dh_b_ihl> sh)] | [(sh <any_Cx_sh_hh_dh_b_ihl>)]) (b | ((<any_Cx_sh_hh_dh_b_ihl> sh) | (sh <any_Cx_sh_hh_dh_b_ihl>)))) (([(<any_Cx_sh_sh_ihl_b> sh)] | [(sh <any_Cx_sh_sh_ihl_b>)]) (ihl | ((<any_Cx_sh_sh_ihl_ing> sh) | (sh <any_Cx_sh_sh_ihl_ing>)))) (([(<any_Cx_sh_sh_ing_ihl> sh)] | [(sh <any_Cx_sh_sh_ing_ihl>)]) (ing | ((<any_Cx_sh_sh_ing_ihl> sh) | (sh <any_Cx_sh_sh_ing_ihl>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_sh_ing_n> n)] | [(n <any_Cx_sh_ing_n>)]) sil))
Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard z with value 1 for ng ...
Considering guard sh with value 1 for ng ...
Considering guard s with value 1 for ng ...
Considering guard jh with value 1 for ng ...
candidateGuards = map[jh:true s:true sh:true z:true]
Picking guard, z

Running scan for frate = 91
Considering guard sh with value 1 for ing ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 91
Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 105 public <billing> = (((sil [((d <any_Cx_b_d_hh>) | (<any_Cx_b_d_hh> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil hh (sil [((d <any_Cx_b_d_hh>) | (<any_Cx_b_d_hh> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_jh_hh_d_b> jh)] | [(jh <any_Cx_jh_hh_d_b>)]) (b | ((<any_Cx_jh_hh_d_b> jh) | (jh <any_Cx_jh_hh_d_b>)))) ((([(<any_Vx_sh_jh_ih_noSlide> sh)] | [(sh <any_Vx_sh_jh_ih_noSlide>)]) ([(<any_Cx_sh_jh_l_b> sh)] | [(sh <any_Cx_sh_jh_l_b>)])) (ih | ((<any_Vx_sh_jh_ih_noSlide> sh) | (sh <any_Vx_sh_jh_ih_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_ng_l> sh)] | [(sh <any_Cx_sh_sh_ng_l>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_z_sh_ng> z)] | [(z <any_Cx_z_sh_ng>)]) (ng | ((<any_Cx_z_sh_ng> z) | (z <any_Cx_z_sh_ng>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_z_ng_f> f)] | [(f <any_Cx_z_ng_f>)]) sil))
Considering guard sh with value 2 for ihl ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 105 public <billing> = (((sil [((f <any_Cx_b_f_hh>) | (<any_Cx_b_f_hh> f))] [((f <any_vowel_noSlide>) | (<any_vowel_noSlide> f))]) | (sil hh (sil [((f <any_Cx_b_f_hh>) | (<any_Cx_b_f_hh> f))] [((f <any_vowel_noSlide>) | (<any_vowel_noSlide> f))]))) (([(<any_Cx_s_hh_f_b> s)] | [(s <any_Cx_s_hh_f_b>)]) (b | ((<any_Cx_s_hh_f_b> s) | (s <any_Cx_s_hh_f_b>)))) ((([(<any_Vx_sh_s_ih_noSlide> sh)] | [(sh <any_Vx_sh_s_ih_noSlide>)]) ([(<any_Cx_sh_s_l_b> sh)] | [(sh <any_Cx_sh_s_l_b>)])) (ih | ((<any_Vx_sh_s_ih_noSlide> sh) | (sh <any_Vx_sh_s_ih_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l_ing> sh) | (sh <any_Cx_sh_sh_l_ing>)))) (([(<any_Cx_sh_sh_ing_l> sh)] | [(sh <any_Cx_sh_sh_ing_l>)]) (ing | ((<any_Cx_sh_sh_ing_l> sh) | (sh <any_Cx_sh_sh_ing_l>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_sh_ing_thr> thr)] | [(thr <any_Cx_sh_ing_thr>)]) sil))
Considering guard sh with value 2 for ihl ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 91
Considering guard sh with value 1 for ing ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard s with value 1 for ng ...
Considering guard z with value 1 for ng ...
Considering guard sh with value 1 for ng ...
Considering guard jh with value 1 for ng ...
candidateGuards = map[jh:true s:true sh:true z:true]
Picking guard, s

Running scan for frate = 91
Considering guard s with value 1 for b ...
Considering guard jh with value 1 for b ...
Considering guard sh with value 1 for b ...
candidateGuards = map[jh:true s:true sh:true]
Picking guard, s

frate, target rule = 91 public <billing> = (((sil [((l <any_Cx_b_l_hh>) | (<any_Cx_b_l_hh> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]) | (sil hh (sil [((l <any_Cx_b_l_hh>) | (<any_Cx_b_l_hh> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]))) (([(<any_Cx_sh_hh_l_b_ihl> sh)] | [(sh <any_Cx_sh_hh_l_b_ihl>)]) (b | ((<any_Cx_sh_hh_l_b_ihl> sh) | (sh <any_Cx_sh_hh_l_b_ihl>)))) (([(<any_Cx_sh_sh_ihl_b> sh)] | [(sh <any_Cx_sh_sh_ihl_b>)]) (ihl | ((<any_Cx_sh_sh_ihl_ing> sh) | (sh <any_Cx_sh_sh_ihl_ing>)))) (([(<any_Cx_sh_sh_ing_ihl> sh)] | [(sh <any_Cx_sh_sh_ing_ihl>)]) (ing | ((<any_Cx_sh_sh_ing_ihl> sh) | (sh <any_Cx_sh_sh_ing_ihl>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_sh_ing_hh> hh)] | [(hh <any_Cx_sh_ing_hh>)]) sil))
frate, target rule = 91 public <billing> = (((sil [((v <any_Cx_b_v_hh>) | (<any_Cx_b_v_hh> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]) | (sil hh (sil [((v <any_Cx_b_v_hh>) | (<any_Cx_b_v_hh> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]))) (([(<any_Cx_sh_hh_v_b_ihl> sh)] | [(sh <any_Cx_sh_hh_v_b_ihl>)]) (b | ((<any_Cx_sh_hh_v_b_ihl> sh) | (sh <any_Cx_sh_hh_v_b_ihl>)))) (([(<any_Cx_sh_sh_ihl_b> sh)] | [(sh <any_Cx_sh_sh_ihl_b>)]) (ihl | ((<any_Cx_sh_sh_ihl> sh) | (sh <any_Cx_sh_sh_ihl>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_ng_ihl> sh)] | [(sh <any_Cx_sh_sh_ng_ihl>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_s_sh_ng> s)] | [(s <any_Cx_s_sh_ng>)]) (ng | ((<any_Cx_s_sh_ng> s) | (s <any_Cx_s_sh_ng>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_s_ng_hh> hh)] | [(hh <any_Cx_s_ng_hh>)]) sil))
Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard s with value 1 for b ...
Considering guard sh with value 1 for b ...
Considering guard jh with value 1 for b ...
candidateGuards = map[jh:true s:true sh:true]
Picking guard, s

Running scan for frate = 80
Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 80
Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard jh with value 1 for ng ...
Considering guard z with value 1 for ng ...
Considering guard sh with value 1 for ng ...
Considering guard s with value 1 for ng ...
candidateGuards = map[jh:true s:true sh:true z:true]
Picking guard, sh

Considering guard sh with value 1 for ing ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ihl ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ihl ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for ing ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 91 public <billing> = (((sil [((d <any_Cx_b_d_hh>) | (<any_Cx_b_d_hh> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil hh (sil [((d <any_Cx_b_d_hh>) | (<any_Cx_b_d_hh> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_s_hh_d_b> s)] | [(s <any_Cx_s_hh_d_b>)]) (b | ((<any_Cx_s_hh_d_b> s) | (s <any_Cx_s_hh_d_b>)))) ((([(<any_Vx_sh_s_ih_noSlide> sh)] | [(sh <any_Vx_sh_s_ih_noSlide>)]) ([(<any_Cx_sh_s_l_b> sh)] | [(sh <any_Cx_sh_s_l_b>)])) (ih | ((<any_Vx_sh_s_ih_noSlide> sh) | (sh <any_Vx_sh_s_ih_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_ng_l> sh)] | [(sh <any_Cx_sh_sh_ng_l>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_sh_sh_ng> sh)] | [(sh <any_Cx_sh_sh_ng>)]) (ng | ((<any_Cx_sh_sh_ng> sh) | (sh <any_Cx_sh_sh_ng>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_sh_ng_thr> thr)] | [(thr <any_Cx_sh_ng_thr>)]) sil))
Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 91 public <billing> = (((sil [((dh <any_Cx_b_dh_hh>) | (<any_Cx_b_dh_hh> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]) | (sil hh (sil [((dh <any_Cx_b_dh_hh>) | (<any_Cx_b_dh_hh> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]))) (([(<any_Cx_s_hh_dh_b> s)] | [(s <any_Cx_s_hh_dh_b>)]) (b | ((<any_Cx_s_hh_dh_b> s) | (s <any_Cx_s_hh_dh_b>)))) ((([(<any_Vx_sh_s_ih_noSlide> sh)] | [(sh <any_Vx_sh_s_ih_noSlide>)]) ([(<any_Cx_sh_s_l_b> sh)] | [(sh <any_Cx_sh_s_l_b>)])) (ih | ((<any_Vx_sh_s_ih_noSlide> sh) | (sh <any_Vx_sh_s_ih_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l_ing> sh) | (sh <any_Cx_sh_sh_l_ing>)))) (([(<any_Cx_sh_sh_ing_l> sh)] | [(sh <any_Cx_sh_sh_ing_l>)]) (ing | ((<any_Cx_sh_sh_ing_l> sh) | (sh <any_Cx_sh_sh_ing_l>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_sh_ing_n> n)] | [(n <any_Cx_sh_ing_n>)]) sil))
frate, target rule = 80 public <billing> = (((sil [((dh <any_Cx_b_dh_hh>) | (<any_Cx_b_dh_hh> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]) | (sil hh (sil [((dh <any_Cx_b_dh_hh>) | (<any_Cx_b_dh_hh> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]))) (([(<any_Cx_sh_hh_dh_b_ihl> sh)] | [(sh <any_Cx_sh_hh_dh_b_ihl>)]) (b | ((<any_Cx_sh_hh_dh_b_ihl> sh) | (sh <any_Cx_sh_hh_dh_b_ihl>)))) (([(<any_Cx_sh_sh_ihl_b> sh)] | [(sh <any_Cx_sh_sh_ihl_b>)]) (ihl | ((<any_Cx_sh_sh_ihl_ing> sh) | (sh <any_Cx_sh_sh_ihl_ing>)))) (([(<any_Cx_sh_sh_ing_ihl> sh)] | [(sh <any_Cx_sh_sh_ing_ihl>)]) (ing | ((<any_Cx_sh_sh_ing_ihl> sh) | (sh <any_Cx_sh_sh_ing_ihl>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_sh_ing_ng> ng)] | [(ng <any_Cx_sh_ing_ng>)]) sil))
Considering guard s with value 1 for ng ...
Considering guard sh with value 1 for ng ...
Considering guard z with value 1 for ng ...
Considering guard jh with value 1 for ng ...
candidateGuards = map[jh:true s:true sh:true z:true]
Picking guard, s

Running scan for frate = 80
Running scan for frate = 80
Running scan for frate = 72
Considering guard s with value 1 for b ...
Considering guard jh with value 1 for b ...
Considering guard sh with value 1 for b ...
candidateGuards = map[jh:true s:true sh:true]
Picking guard, s

Considering guard sh with value 1 for b ...
Considering guard s with value 1 for b ...
Considering guard jh with value 1 for b ...
candidateGuards = map[jh:true s:true sh:true]
Picking guard, sh

Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 80 public <billing> = (((sil [((dh <any_Cx_b_dh_hh>) | (<any_Cx_b_dh_hh> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]) | (sil hh (sil [((dh <any_Cx_b_dh_hh>) | (<any_Cx_b_dh_hh> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]))) (([(<any_Cx_sh_hh_dh_b_ihl> sh)] | [(sh <any_Cx_sh_hh_dh_b_ihl>)]) (b | ((<any_Cx_sh_hh_dh_b_ihl> sh) | (sh <any_Cx_sh_hh_dh_b_ihl>)))) (([(<any_Cx_sh_sh_ihl_b> sh)] | [(sh <any_Cx_sh_sh_ihl_b>)]) (ihl | ((<any_Cx_sh_sh_ihl> sh) | (sh <any_Cx_sh_sh_ihl>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_ng_ihl> sh)] | [(sh <any_Cx_sh_sh_ng_ihl>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_s_sh_ng> s)] | [(s <any_Cx_s_sh_ng>)]) (ng | ((<any_Cx_s_sh_ng> s) | (s <any_Cx_s_sh_ng>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_s_ng_ng> ng)] | [(ng <any_Cx_s_ng_ng>)]) sil))
Considering guard sh with value 2 for ihl ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for ing ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for ing ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 72
frate, target rule = 72 public <billing> = (((sil [((hh <any_Cx_b_hh_hh>) | (<any_Cx_b_hh_hh> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil hh (sil [((hh <any_Cx_b_hh_hh>) | (<any_Cx_b_hh_hh> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_sh_hh_hh_b_ihl> sh)] | [(sh <any_Cx_sh_hh_hh_b_ihl>)]) (b | ((<any_Cx_sh_hh_hh_b_ihl> sh) | (sh <any_Cx_sh_hh_hh_b_ihl>)))) (([(<any_Cx_sh_sh_ihl_b> sh)] | [(sh <any_Cx_sh_sh_ihl_b>)]) (ihl | ((<any_Cx_sh_sh_ihl_ing> sh) | (sh <any_Cx_sh_sh_ihl_ing>)))) (([(<any_Cx_sh_sh_ing_ihl> sh)] | [(sh <any_Cx_sh_sh_ing_ihl>)]) (ing | ((<any_Cx_sh_sh_ing_ihl> sh) | (sh <any_Cx_sh_sh_ing_ihl>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_sh_ing_thr> thr)] | [(thr <any_Cx_sh_ing_thr>)]) sil))
Considering guard z with value 1 for ng ...
Considering guard s with value 1 for ng ...
Considering guard sh with value 1 for ng ...
Considering guard jh with value 1 for ng ...
candidateGuards = map[jh:true s:true sh:true z:true]
Picking guard, jh

frate, target rule = 80 public <billing> = (((sil [((l <any_Cx_b_l_hh>) | (<any_Cx_b_l_hh> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]) | (sil hh (sil [((l <any_Cx_b_l_hh>) | (<any_Cx_b_l_hh> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]))) (([(<any_Cx_sh_hh_l_b> sh)] | [(sh <any_Cx_sh_hh_l_b>)]) (b | ((<any_Cx_sh_hh_l_b> sh) | (sh <any_Cx_sh_hh_l_b>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_l_b> sh)] | [(sh <any_Cx_sh_sh_l_b>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l_ing> sh) | (sh <any_Cx_sh_sh_l_ing>)))) (([(<any_Cx_sh_sh_ing_l> sh)] | [(sh <any_Cx_sh_sh_ing_l>)]) (ing | ((<any_Cx_sh_sh_ing_l> sh) | (sh <any_Cx_sh_sh_ing_l>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_sh_ing_f> f)] | [(f <any_Cx_sh_ing_f>)]) sil))
Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ihl ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 80 public <billing> = (((sil [((d <any_Cx_b_d_hh>) | (<any_Cx_b_d_hh> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil hh (sil [((d <any_Cx_b_d_hh>) | (<any_Cx_b_d_hh> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_s_hh_d_b> s)] | [(s <any_Cx_s_hh_d_b>)]) (b | ((<any_Cx_s_hh_d_b> s) | (s <any_Cx_s_hh_d_b>)))) ((([(<any_Vx_sh_s_ih_noSlide> sh)] | [(sh <any_Vx_sh_s_ih_noSlide>)]) ([(<any_Cx_sh_s_l_b> sh)] | [(sh <any_Cx_sh_s_l_b>)])) (ih | ((<any_Vx_sh_s_ih_noSlide> sh) | (sh <any_Vx_sh_s_ih_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_ng_l> sh)] | [(sh <any_Cx_sh_sh_ng_l>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_jh_sh_ng> jh)] | [(jh <any_Cx_jh_sh_ng>)]) (ng | ((<any_Cx_jh_sh_ng> jh) | (jh <any_Cx_jh_sh_ng>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_jh_ng_m> m)] | [(m <any_Cx_jh_ng_m>)]) sil))
Running scan for frate = 72
Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard s with value 1 for b ...
Considering guard jh with value 1 for b ...
Considering guard sh with value 1 for b ...
candidateGuards = map[jh:true s:true sh:true]
Picking guard, s

Running scan for frate = 72
Considering guard z with value 1 for ng ...
Considering guard sh with value 1 for ng ...
Considering guard s with value 1 for ng ...
Considering guard jh with value 1 for ng ...
candidateGuards = map[jh:true s:true sh:true z:true]
Picking guard, z

Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for b ...
Considering guard s with value 1 for b ...
Considering guard jh with value 1 for b ...
candidateGuards = map[jh:true s:true sh:true]
Picking guard, jh

frate, target rule = 72 public <billing> = (((sil [((sh <any_Cx_b_sh_hh>) | (<any_Cx_b_sh_hh> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil hh (sil [((sh <any_Cx_b_sh_hh>) | (<any_Cx_b_sh_hh> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_sh_hh_sh_b_ihl> sh)] | [(sh <any_Cx_sh_hh_sh_b_ihl>)]) (b | ((<any_Cx_sh_hh_sh_b_ihl> sh) | (sh <any_Cx_sh_hh_sh_b_ihl>)))) (([(<any_Cx_sh_sh_ihl_b> sh)] | [(sh <any_Cx_sh_sh_ihl_b>)]) (ihl | ((<any_Cx_sh_sh_ihl> sh) | (sh <any_Cx_sh_sh_ihl>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_ng_ihl> sh)] | [(sh <any_Cx_sh_sh_ng_ihl>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_z_sh_ng> z)] | [(z <any_Cx_z_sh_ng>)]) (ng | ((<any_Cx_z_sh_ng> z) | (z <any_Cx_z_sh_ng>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_z_ng_p> p)] | [(p <any_Cx_z_ng_p>)]) sil))
Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for ing ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 72 public <billing> = (((sil [((dh <any_Cx_b_dh_hh>) | (<any_Cx_b_dh_hh> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]) | (sil hh (sil [((dh <any_Cx_b_dh_hh>) | (<any_Cx_b_dh_hh> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]))) (([(<any_Cx_s_hh_dh_b> s)] | [(s <any_Cx_s_hh_dh_b>)]) (b | ((<any_Cx_s_hh_dh_b> s) | (s <any_Cx_s_hh_dh_b>)))) ((([(<any_Vx_sh_s_ih_noSlide> sh)] | [(sh <any_Vx_sh_s_ih_noSlide>)]) ([(<any_Cx_sh_s_l_b> sh)] | [(sh <any_Cx_sh_s_l_b>)])) (ih | ((<any_Vx_sh_s_ih_noSlide> sh) | (sh <any_Vx_sh_s_ih_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l_ing> sh) | (sh <any_Cx_sh_sh_l_ing>)))) (([(<any_Cx_sh_sh_ing_l> sh)] | [(sh <any_Cx_sh_sh_ing_l>)]) (ing | ((<any_Cx_sh_sh_ing_l> sh) | (sh <any_Cx_sh_sh_ing_l>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_sh_ing_hh> hh)] | [(hh <any_Cx_sh_ing_hh>)]) sil))
Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard s with value 1 for ng ...
Considering guard z with value 1 for ng ...
Considering guard jh with value 1 for ng ...
Considering guard sh with value 1 for ng ...
candidateGuards = map[jh:true s:true sh:true z:true]
Picking guard, z

frate, target rule = 72 public <billing> = (((sil [((dh <any_Cx_b_dh_hh>) | (<any_Cx_b_dh_hh> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]) | (sil hh (sil [((dh <any_Cx_b_dh_hh>) | (<any_Cx_b_dh_hh> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]))) (([(<any_Cx_jh_hh_dh_b> jh)] | [(jh <any_Cx_jh_hh_dh_b>)]) (b | ((<any_Cx_jh_hh_dh_b> jh) | (jh <any_Cx_jh_hh_dh_b>)))) ((([(<any_Vx_sh_jh_ih_noSlide> sh)] | [(sh <any_Vx_sh_jh_ih_noSlide>)]) ([(<any_Cx_sh_jh_l_b> sh)] | [(sh <any_Cx_sh_jh_l_b>)])) (ih | ((<any_Vx_sh_jh_ih_noSlide> sh) | (sh <any_Vx_sh_jh_ih_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_ng_l> sh)] | [(sh <any_Cx_sh_sh_ng_l>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_z_sh_ng> z)] | [(z <any_Cx_z_sh_ng>)]) (ng | ((<any_Cx_z_sh_ng> z) | (z <any_Cx_z_sh_ng>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_z_ng_hh> hh)] | [(hh <any_Cx_z_ng_hh>)]) sil))

results =
{72 [{sil 0 9} {b 10 14} {ihl 15 30} {ing 31 52} {sil 53 71}]}
{80 [{sil 0 11} {b 12 16} {ihl 17 34} {ing 35 56} {sil 57 78}]}
{91 [{sil 0 13} {b 14 18} {ihl 19 38} {ing 39 74} {sil 75 90}]}
{105 [{sil 0 15} {b 16 21} {ihl 22 44} {ing 45 75} {sil 76 105}]}
{125 [{sil 0 18} {b 19 23} {ihl 24 50} {ing 51 86} {sil 87 123}]}

normalised results =
{72 [{sil 0 9} {b 14 19} {ihl 21 42} {ing 43 72} {sil 74 99}]}
{80 [{sil 0 11} {b 15 20} {ihl 21 43} {ing 44 70} {sil 71 98}]}
{91 [{sil 0 13} {b 15 20} {ihl 21 42} {ing 43 81} {sil 82 99}]}
{105 [{sil 0 15} {b 15 20} {ihl 21 42} {ing 43 71} {sil 72 100}]}
{125 [{sil 0 18} {b 15 18} {ihl 19 40} {ing 41 69} {sil 70 98}]}

ruleAligned = [{{b 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ihl 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{ing 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {b 14 19} {ihl 21 42} {ing 43 72} {sil 74 74}]}
{80 [{sil 0 0} {b 15 20} {ihl 21 43} {ing 44 70} {sil 71 71}]}
{91 [{sil 0 0} {b 15 20} {ihl 21 42} {ing 43 81} {sil 82 82}]}
{105 [{sil 0 0} {b 15 20} {ihl 21 42} {ing 43 71} {sil 72 72}]}
{125 [{sil 0 0} {b 15 18} {ihl 19 40} {ing 41 69} {sil 70 70}]}

timeAligned = [{{b 15 20} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ihl 21 42} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{ing 43 71} [{0 3} {2 3} {3 3} {4 3} {1 3}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 18
i, iTime, newITime, timeStartFrom = 2 1 2 40
combinedVerdict    = [{b 0} {ihl 0} {ing 0}]
ruleAlignedVerdict = [{b 0} {ihl 0} {ing 0}]

score->
+2 for b
+2 for ihl
+2 for ing
score<-: 11

results =
{72 [{sil 0 9} {b 10 14} {ihl 15 30} {ih 31 38} {ng 39 52} {sil 53 71}]}
{80 [{sil 0 11} {b 12 16} {ihl 17 33} {ih 34 42} {ng 43 56} {sil 57 78}]}
{91 [{sil 0 13} {b 14 18} {ihl 19 38} {ih 39 46} {ng 47 75} {sil 76 90}]}
{105 [{sil 0 15} {b 16 21} {ihl 22 44} {ih 45 52} {ng 53 75} {sil 76 105}]}
{125 [{sil 0 18} {b 19 23} {ihl 24 50} {ih 51 66} {ng 67 86} {sil 87 123}]}

normalised results =
{72 [{sil 0 9} {b 14 19} {ihl 21 42} {ih 43 53} {ng 54 72} {sil 74 99}]}
{80 [{sil 0 11} {b 15 20} {ihl 21 41} {ih 43 53} {ng 54 70} {sil 71 98}]}
{91 [{sil 0 13} {b 15 20} {ihl 21 42} {ih 43 51} {ng 52 82} {sil 84 99}]}
{105 [{sil 0 15} {b 15 20} {ihl 21 42} {ih 43 50} {ng 50 71} {sil 72 100}]}
{125 [{sil 0 18} {b 15 18} {ihl 19 40} {ih 41 53} {ng 54 69} {sil 70 98}]}

ruleAligned = [{{b 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ihl 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{ih 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{ng 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {b 14 19} {ihl 21 42} {ih 43 53} {ng 54 72} {sil 74 74}]}
{80 [{sil 0 0} {b 15 20} {ihl 21 41} {ih 43 53} {ng 54 70} {sil 71 71}]}
{91 [{sil 0 0} {b 15 20} {ihl 21 42} {ih 43 51} {ng 52 82} {sil 84 84}]}
{105 [{sil 0 0} {b 15 20} {ihl 21 42} {ih 43 50} {ng 50 71} {sil 72 72}]}
{125 [{sil 0 0} {b 15 18} {ihl 19 40} {ih 41 53} {ng 54 69} {sil 70 70}]}

timeAligned = [{{b 15 20} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ihl 21 42} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{ih 43 53} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{ng 54 71} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 18
i, iTime, newITime, timeStartFrom = 2 1 2 40
i, iTime, newITime, timeStartFrom = 3 2 3 50
combinedVerdict    = [{b 0} {ihl 0} {ih 0} {ng 0}]
ruleAlignedVerdict = [{b 0} {ihl 0} {ih 0} {ng 0}]

score->
+2 for b
+2 for ihl
+2 for ih
+2 for ng
score<-: 13

results =
{72 [{sil 0 9} {b 10 13} {ih 14 20} {l 21 30} {ing 31 52} {sil 53 71}]}
{80 [{sil 0 11} {b 12 15} {ih 16 22} {l 23 33} {ing 34 56} {sil 57 78}]}
{91 [{sil 0 13} {b 14 17} {ih 18 26} {l 27 38} {ing 39 74} {sil 75 90}]}
{105 [{sil 0 15} {b 16 20} {ih 21 30} {l 31 44} {ing 45 75} {sil 76 105}]}
{125 [{sil 0 18} {b 19 22} {ih 23 34} {l 35 50} {ing 51 86} {sil 87 123}]}

normalised results =
{72 [{sil 0 9} {b 14 18} {ih 19 28} {l 29 42} {ing 43 72} {sil 74 99}]}
{80 [{sil 0 11} {b 15 19} {ih 20 28} {l 29 41} {ing 43 70} {sil 71 98}]}
{91 [{sil 0 13} {b 15 19} {ih 20 29} {l 30 42} {ing 43 81} {sil 82 99}]}
{105 [{sil 0 15} {b 15 19} {ih 20 29} {l 30 42} {ing 43 71} {sil 72 100}]}
{125 [{sil 0 18} {b 15 18} {ih 18 27} {l 28 40} {ing 41 69} {sil 70 98}]}

ruleAligned = [{{b 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ih 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{l 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{ing 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {b 14 18} {ih 19 28} {l 29 42} {ing 43 72} {sil 74 74}]}
{80 [{sil 0 0} {b 15 19} {ih 20 28} {l 29 41} {ing 43 70} {sil 71 71}]}
{91 [{sil 0 0} {b 15 19} {ih 20 29} {l 30 42} {ing 43 81} {sil 82 82}]}
{105 [{sil 0 0} {b 15 19} {ih 20 29} {l 30 42} {ing 43 71} {sil 72 72}]}
{125 [{sil 0 0} {b 15 18} {ih 18 27} {l 28 40} {ing 41 69} {sil 70 70}]}

timeAligned = [{{b 15 19} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ih 20 28} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{l 29 42} [{0 3} {1 3} {4 3} {2 3} {3 3}]} {{ing 43 71} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 18
i, iTime, newITime, timeStartFrom = 2 1 2 27
i, iTime, newITime, timeStartFrom = 3 2 3 40
combinedVerdict    = [{b 0} {ih 0} {l 0} {ing 0}]
ruleAlignedVerdict = [{b 0} {ih 0} {l 0} {ing 0}]

score->
+2 for b
+2 for ih
+2 for l
+2 for ing
score<-: 13

results =
{72 [{sil 0 9} {b 10 13} {ih 14 20} {l 21 30} {ih 31 38} {ng 39 52} {sil 53 71}]}
{80 [{sil 0 11} {b 12 15} {ih 16 22} {l 23 33} {ih 34 42} {ng 43 56} {sil 57 78}]}
{91 [{sil 0 13} {b 14 17} {ih 18 26} {l 27 38} {ih 39 46} {ng 47 75} {sil 76 90}]}
{105 [{sil 0 15} {b 16 20} {ih 21 30} {l 31 44} {ih 45 52} {ng 53 75} {sil 76 105}]}
{125 [{sil 0 18} {b 19 22} {ih 23 34} {l 35 50} {ih 51 66} {ng 67 86} {sil 87 123}]}

normalised results =
{72 [{sil 0 9} {b 14 18} {ih 19 28} {l 29 42} {ih 43 53} {ng 54 72} {sil 74 99}]}
{80 [{sil 0 11} {b 15 19} {ih 20 28} {l 29 41} {ih 43 53} {ng 54 70} {sil 71 98}]}
{91 [{sil 0 13} {b 15 19} {ih 20 29} {l 30 42} {ih 43 51} {ng 52 82} {sil 84 99}]}
{105 [{sil 0 15} {b 15 19} {ih 20 29} {l 30 42} {ih 43 50} {ng 50 71} {sil 72 100}]}
{125 [{sil 0 18} {b 15 18} {ih 18 27} {l 28 40} {ih 41 53} {ng 54 69} {sil 70 98}]}

ruleAligned = [{{b 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ih 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{l 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{ih 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{ng 0} [{0 5} {1 5} {2 5} {3 5} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {b 14 18} {ih 19 28} {l 29 42} {ih 43 53} {ng 54 72} {sil 74 74}]}
{80 [{sil 0 0} {b 15 19} {ih 20 28} {l 29 41} {ih 43 53} {ng 54 70} {sil 71 71}]}
{91 [{sil 0 0} {b 15 19} {ih 20 29} {l 30 42} {ih 43 51} {ng 52 82} {sil 84 84}]}
{105 [{sil 0 0} {b 15 19} {ih 20 29} {l 30 42} {ih 43 50} {ng 50 71} {sil 72 72}]}
{125 [{sil 0 0} {b 15 18} {ih 18 27} {l 28 40} {ih 41 53} {ng 54 69} {sil 70 70}]}

timeAligned = [{{b 15 19} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ih 20 28} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{l 29 42} [{0 3} {1 3} {4 3} {2 3} {3 3}]} {{ih 43 53} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{ng 54 71} [{0 5} {1 5} {2 5} {3 5} {4 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 18
i, iTime, newITime, timeStartFrom = 2 1 2 27
i, iTime, newITime, timeStartFrom = 3 2 3 40
i, iTime, newITime, timeStartFrom = 4 3 4 50
combinedVerdict    = [{b 0} {ih 0} {l 0} {ih 0} {ng 0}]
ruleAlignedVerdict = [{b 0} {ih 0} {l 0} {ih 0} {ng 0}]

score->
+2 for b
+2 for ih
+2 for l
+2 for ih
+2 for ng
score<-: 15
testPronounce b good ih good l good ih good ng good
publish->
phonsToAlphas = [{[b] b} {[ih] i} {[l] ll} {[ih] i} {[ng] ng}]
getVerdict<-:new {b [b] 0}
getVerdict<-:new {i [ih] 0}
getVerdict<-:new {ll [l] 0}
getVerdict<-:new {i [ih] 0}
getVerdict<-:new {ng [ng] 0}
lettersVerdicts = [{b [b] 0} {i [ih] 0} {ll [l] 0} {i [ih] 0} {ng [ng] 0}]
publish<-
{
  "word": "billing",
  "results": [
    {
      "letters": "b",
      "phonemes": "b",
      "verdict": "good"
    },
    {
      "letters": "i",
      "phonemes": "ɪ",
      "verdict": "good"
    },
    {
      "letters": "ll",
      "phonemes": "l",
      "verdict": "good"
    },
    {
      "letters": "i",
      "phonemes": "ɪ",
      "verdict": "good"
    },
    {
      "letters": "ng",
      "phonemes": "ŋ",
      "verdict": "good"
    }
  ],
  "err": null
}
