Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_7029b517-92e3-46d4-8564-13e731afc9d9 audiofile /Users/test/go/src/Phonemes/audio_clips/state1_tressa.wav word state dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  1.493



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.52 0.6 1.12

 start3, duration3, end3 =  0.56 0.4 0.9600000000000001

 Initial start, duration, end =  0.42000000000000004 0.7000000000000001 1.12

 Cut at: start, duration =  0.42000000000000004 1.053     guard_end =  1.4729999999999999 

Running scan for frate = 125
Running scan for frate = 125
Considering guard aa with value 1 for s ...
Considering guard oy with value 1 for s ...
candidateGuards = map[aa:true oy:true]
Picking guard, aa

Considering guard ao with value 2 for st ...
Considering guard w with value 2 for st ...
candidateGuards = map[ao:true w:true]
Picking guard, ao

Considering guard w with value 4 for ey ...
Considering guard ao with value 4 for ey ...
candidateGuards = map[ao:true w:true]
Picking guard, ao

Considering guard ao with value 4 for t ...
Considering guard w with value 4 for t ...
candidateGuards = map[ao:true w:true]
Picking guard, ao

Considering guard ao with value 2 for ey ...
candidateGuards = map[ao:true]
Picking guard, ao

Considering guard ao with value 1 for t ...
candidateGuards = map[ao:true]
Picking guard, ao

Considering guard ao with value 1 for t ...
candidateGuards = map[ao:true]
Picking guard, ao

frate, target rule = 125 public <state> = (((sil [((z <any_Cx_st_z_p>) | (<any_Cx_st_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_st_z_p>) | (<any_Cx_st_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ao_p_z_st> ao)] | [(ao <any_Cx_ao_p_z_st>)]) (st | ((<any_Cx_ao_p_z_st> ao) | (ao <any_Cx_ao_p_z_st>)))) ((([(<any_Vx_ao_ao_ey_noSlide> ao)] | [(ao <any_Vx_ao_ao_ey_noSlide>)]) ([(<any_Cx_ao_ao_t_st> ao)] | [(ao <any_Cx_ao_ao_t_st>)])) (ey | ((<any_Vx_ao_ao_ey_noSlide> ao) | (ao <any_Vx_ao_ao_ey_noSlide>)))) (([(<any_Cx_ao_ao_t> ao)] | [(ao <any_Cx_ao_ao_t>)]) (t | ((<any_Cx_ao_ao_t> ao) | (ao <any_Cx_ao_ao_t>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_ao_t_g> g)] | [(g <any_Cx_ao_t_g>)]) sil))
Running scan for frate = 105
frate, target rule = 125 public <state> = (((sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_aa_p_z_s_t> aa)] | [(aa <any_Cx_aa_p_z_s_t>)]) (s | z | ((<any_Cx_aa_p_z_s_t> aa) | (aa <any_Cx_aa_p_z_s_t>)))) (([(<any_Cx_ao_aa_t_s> ao)] | [(ao <any_Cx_ao_aa_t_s>)]) (t | ((<any_Cx_ao_aa_t> ao) | (ao <any_Cx_ao_aa_t>)))) ((([(<any_Vx_ao_ao_ey_noSlide> ao)] | [(ao <any_Vx_ao_ao_ey_noSlide>)]) ([(<any_Cx_ao_ao_t_t> ao)] | [(ao <any_Cx_ao_ao_t_t>)])) (ey | ((<any_Vx_ao_ao_ey_noSlide> ao) | (ao <any_Vx_ao_ao_ey_noSlide>)))) (([(<any_Cx_ao_ao_t> ao)] | [(ao <any_Cx_ao_ao_t>)]) (t | ((<any_Cx_ao_ao_t> ao) | (ao <any_Cx_ao_ao_t>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_ao_t_thr> thr)] | [(thr <any_Cx_ao_t_thr>)]) sil))
Considering guard ao with value 2 for st ...
Considering guard w with value 2 for st ...
candidateGuards = map[ao:true w:true]
Picking guard, ao

Considering guard w with value 4 for ey ...
Considering guard ao with value 4 for ey ...
candidateGuards = map[ao:true w:true]
Picking guard, w

Running scan for frate = 105
Considering guard ao with value 1 for t ...
candidateGuards = map[ao:true]
Picking guard, ao

Considering guard oy with value 1 for s ...
Considering guard aa with value 1 for s ...
candidateGuards = map[aa:true oy:true]
Picking guard, aa

frate, target rule = 105 public <state> = (((sil [((z <any_Cx_st_z_p>) | (<any_Cx_st_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_st_z_p>) | (<any_Cx_st_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ao_p_z_st> ao)] | [(ao <any_Cx_ao_p_z_st>)]) (st | ((<any_Cx_ao_p_z_st> ao) | (ao <any_Cx_ao_p_z_st>)))) ((([(<any_Vx_w_ao_ey_noSlide> w)] | [(w <any_Vx_w_ao_ey_noSlide>)]) ([(<any_Cx_w_ao_t_st> w)] | [(w <any_Cx_w_ao_t_st>)])) (ey | ((<any_Vx_w_ao_ey_noSlide> w) | (w <any_Vx_w_ao_ey_noSlide>)))) (([(<any_Cx_ao_w_t> ao)] | [(ao <any_Cx_ao_w_t>)]) (t | ((<any_Cx_ao_w_t> ao) | (ao <any_Cx_ao_w_t>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_ao_t_g> g)] | [(g <any_Cx_ao_t_g>)]) sil))
Considering guard w with value 4 for t ...
Considering guard ao with value 4 for t ...
candidateGuards = map[ao:true w:true]
Picking guard, ao

Running scan for frate = 91
Considering guard ao with value 2 for ey ...
candidateGuards = map[ao:true]
Picking guard, ao

Considering guard ao with value 1 for t ...
candidateGuards = map[ao:true]
Picking guard, ao

Considering guard w with value 2 for st ...
Considering guard ao with value 2 for st ...
candidateGuards = map[ao:true w:true]
Picking guard, w

Considering guard ao with value 4 for ey ...
Considering guard w with value 4 for ey ...
candidateGuards = map[ao:true w:true]
Picking guard, ao

frate, target rule = 105 public <state> = (((sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]) | (sil p (sil [((th <any_Cx_s_th_p>) | (<any_Cx_s_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]))) (([(<any_Cx_aa_p_th_s_t> aa)] | [(aa <any_Cx_aa_p_th_s_t>)]) (s | z | ((<any_Cx_aa_p_th_s_t> aa) | (aa <any_Cx_aa_p_th_s_t>)))) (([(<any_Cx_ao_aa_t_s> ao)] | [(ao <any_Cx_ao_aa_t_s>)]) (t | ((<any_Cx_ao_aa_t> ao) | (ao <any_Cx_ao_aa_t>)))) ((([(<any_Vx_ao_ao_ey_noSlide> ao)] | [(ao <any_Vx_ao_ao_ey_noSlide>)]) ([(<any_Cx_ao_ao_t_t> ao)] | [(ao <any_Cx_ao_ao_t_t>)])) (ey | ((<any_Vx_ao_ao_ey_noSlide> ao) | (ao <any_Vx_ao_ao_ey_noSlide>)))) (([(<any_Cx_ao_ao_t> ao)] | [(ao <any_Cx_ao_ao_t>)]) (t | ((<any_Cx_ao_ao_t> ao) | (ao <any_Cx_ao_ao_t>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_ao_t_d> d)] | [(d <any_Cx_ao_t_d>)]) sil))
Considering guard ao with value 1 for t ...
candidateGuards = map[ao:true]
Picking guard, ao

Running scan for frate = 91
frate, target rule = 91 public <state> = (((sil [((z <any_Cx_st_z_p>) | (<any_Cx_st_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_st_z_p>) | (<any_Cx_st_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_w_p_z_st> w)] | [(w <any_Cx_w_p_z_st>)]) (st | ((<any_Cx_w_p_z_st> w) | (w <any_Cx_w_p_z_st>)))) ((([(<any_Vx_ao_w_ey_noSlide> ao)] | [(ao <any_Vx_ao_w_ey_noSlide>)]) ([(<any_Cx_ao_w_t_st> ao)] | [(ao <any_Cx_ao_w_t_st>)])) (ey | ((<any_Vx_ao_w_ey_noSlide> ao) | (ao <any_Vx_ao_w_ey_noSlide>)))) (([(<any_Cx_ao_ao_t> ao)] | [(ao <any_Cx_ao_ao_t>)]) (t | ((<any_Cx_ao_ao_t> ao) | (ao <any_Cx_ao_ao_t>)))) (([(<any_vowel_noSlide> ch)] | [(ch <any_vowel_noSlide>)]) ([(<any_Cx_ao_t_ch> ch)] | [(ch <any_Cx_ao_t_ch>)]) sil))
Considering guard oy with value 1 for s ...
Considering guard aa with value 1 for s ...
candidateGuards = map[aa:true oy:true]
Picking guard, oy

Running scan for frate = 80
Considering guard ao with value 4 for t ...
Considering guard w with value 4 for t ...
candidateGuards = map[ao:true w:true]
Picking guard, w

Considering guard w with value 2 for st ...
Considering guard ao with value 2 for st ...
candidateGuards = map[ao:true w:true]
Picking guard, w

Considering guard ao with value 2 for ey ...
candidateGuards = map[ao:true]
Picking guard, ao

Considering guard ao with value 4 for ey ...
Considering guard w with value 4 for ey ...
candidateGuards = map[ao:true w:true]
Picking guard, ao

Considering guard ao with value 1 for t ...
candidateGuards = map[ao:true]
Picking guard, ao

Considering guard ao with value 1 for t ...
candidateGuards = map[ao:true]
Picking guard, ao

frate, target rule = 91 public <state> = (((sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil p (sil [((sh <any_Cx_s_sh_p>) | (<any_Cx_s_sh_p> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_oy_p_sh_s_t> oy)] | [(oy <any_Cx_oy_p_sh_s_t>)]) (s | z | ((<any_Cx_oy_p_sh_s_t> oy) | (oy <any_Cx_oy_p_sh_s_t>)))) (([(<any_Cx_w_oy_t_s> w)] | [(w <any_Cx_w_oy_t_s>)]) (t | ((<any_Cx_w_oy_t> w) | (w <any_Cx_w_oy_t>)))) ((([(<any_Vx_ao_w_ey_noSlide> ao)] | [(ao <any_Vx_ao_w_ey_noSlide>)]) ([(<any_Cx_ao_w_t_t> ao)] | [(ao <any_Cx_ao_w_t_t>)])) (ey | ((<any_Vx_ao_w_ey_noSlide> ao) | (ao <any_Vx_ao_w_ey_noSlide>)))) (([(<any_Cx_ao_ao_t> ao)] | [(ao <any_Cx_ao_ao_t>)]) (t | ((<any_Cx_ao_ao_t> ao) | (ao <any_Cx_ao_ao_t>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_ao_t_d> d)] | [(d <any_Cx_ao_t_d>)]) sil))
frate, target rule = 80 public <state> = (((sil [((z <any_Cx_st_z_p>) | (<any_Cx_st_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_st_z_p>) | (<any_Cx_st_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_w_p_z_st> w)] | [(w <any_Cx_w_p_z_st>)]) (st | ((<any_Cx_w_p_z_st> w) | (w <any_Cx_w_p_z_st>)))) ((([(<any_Vx_ao_w_ey_noSlide> ao)] | [(ao <any_Vx_ao_w_ey_noSlide>)]) ([(<any_Cx_ao_w_t_st> ao)] | [(ao <any_Cx_ao_w_t_st>)])) (ey | ((<any_Vx_ao_w_ey_noSlide> ao) | (ao <any_Vx_ao_w_ey_noSlide>)))) (([(<any_Cx_ao_ao_t> ao)] | [(ao <any_Cx_ao_ao_t>)]) (t | ((<any_Cx_ao_ao_t> ao) | (ao <any_Cx_ao_ao_t>)))) (([(<any_vowel_noSlide> ch)] | [(ch <any_vowel_noSlide>)]) ([(<any_Cx_ao_t_ch> ch)] | [(ch <any_Cx_ao_t_ch>)]) sil))
Running scan for frate = 80
Considering guard oy with value 1 for s ...
Considering guard aa with value 1 for s ...
candidateGuards = map[aa:true oy:true]
Picking guard, oy

Running scan for frate = 72
Considering guard ao with value 4 for t ...
Considering guard w with value 4 for t ...
candidateGuards = map[ao:true w:true]
Picking guard, ao

Considering guard w with value 2 for st ...
Considering guard ao with value 2 for st ...
candidateGuards = map[ao:true w:true]
Picking guard, ao

Considering guard ao with value 2 for ey ...
candidateGuards = map[ao:true]
Picking guard, ao

Considering guard w with value 4 for ey ...
Considering guard ao with value 4 for ey ...
candidateGuards = map[ao:true w:true]
Picking guard, w

Considering guard ao with value 1 for t ...
candidateGuards = map[ao:true]
Picking guard, ao

Considering guard ao with value 1 for t ...
candidateGuards = map[ao:true]
Picking guard, ao

frate, target rule = 80 public <state> = (((sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_oy_p_z_s_t> oy)] | [(oy <any_Cx_oy_p_z_s_t>)]) (s | z | ((<any_Cx_oy_p_z_s_t> oy) | (oy <any_Cx_oy_p_z_s_t>)))) (([(<any_Cx_ao_oy_t_s> ao)] | [(ao <any_Cx_ao_oy_t_s>)]) (t | ((<any_Cx_ao_oy_t> ao) | (ao <any_Cx_ao_oy_t>)))) ((([(<any_Vx_ao_ao_ey_noSlide> ao)] | [(ao <any_Vx_ao_ao_ey_noSlide>)]) ([(<any_Cx_ao_ao_t_t> ao)] | [(ao <any_Cx_ao_ao_t_t>)])) (ey | ((<any_Vx_ao_ao_ey_noSlide> ao) | (ao <any_Vx_ao_ao_ey_noSlide>)))) (([(<any_Cx_ao_ao_t> ao)] | [(ao <any_Cx_ao_ao_t>)]) (t | ((<any_Cx_ao_ao_t> ao) | (ao <any_Cx_ao_ao_t>)))) (([(<any_vowel_noSlide> k)] | [(k <any_vowel_noSlide>)]) ([(<any_Cx_ao_t_k> k)] | [(k <any_Cx_ao_t_k>)]) sil))
frate, target rule = 72 public <state> = (((sil [((z <any_Cx_st_z_p>) | (<any_Cx_st_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_st_z_p>) | (<any_Cx_st_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ao_p_z_st> ao)] | [(ao <any_Cx_ao_p_z_st>)]) (st | ((<any_Cx_ao_p_z_st> ao) | (ao <any_Cx_ao_p_z_st>)))) ((([(<any_Vx_w_ao_ey_noSlide> w)] | [(w <any_Vx_w_ao_ey_noSlide>)]) ([(<any_Cx_w_ao_t_st> w)] | [(w <any_Cx_w_ao_t_st>)])) (ey | ((<any_Vx_w_ao_ey_noSlide> w) | (w <any_Vx_w_ao_ey_noSlide>)))) (([(<any_Cx_ao_w_t> ao)] | [(ao <any_Cx_ao_w_t>)]) (t | ((<any_Cx_ao_w_t> ao) | (ao <any_Cx_ao_w_t>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_ao_t_thr> thr)] | [(thr <any_Cx_ao_t_thr>)]) sil))
Running scan for frate = 72
Considering guard oy with value 1 for s ...
Considering guard aa with value 1 for s ...
candidateGuards = map[aa:true oy:true]
Picking guard, oy

Considering guard ao with value 4 for t ...
Considering guard w with value 4 for t ...
candidateGuards = map[ao:true w:true]
Picking guard, ao

Considering guard ao with value 2 for ey ...
candidateGuards = map[ao:true]
Picking guard, ao

Considering guard ao with value 1 for t ...
candidateGuards = map[ao:true]
Picking guard, ao

frate, target rule = 72 public <state> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_oy_p_ch_s_t> oy)] | [(oy <any_Cx_oy_p_ch_s_t>)]) (s | z | ((<any_Cx_oy_p_ch_s_t> oy) | (oy <any_Cx_oy_p_ch_s_t>)))) (([(<any_Cx_ao_oy_t_s> ao)] | [(ao <any_Cx_ao_oy_t_s>)]) (t | ((<any_Cx_ao_oy_t> ao) | (ao <any_Cx_ao_oy_t>)))) ((([(<any_Vx_ao_ao_ey_noSlide> ao)] | [(ao <any_Vx_ao_ao_ey_noSlide>)]) ([(<any_Cx_ao_ao_t_t> ao)] | [(ao <any_Cx_ao_ao_t_t>)])) (ey | ((<any_Vx_ao_ao_ey_noSlide> ao) | (ao <any_Vx_ao_ao_ey_noSlide>)))) (([(<any_Cx_ao_ao_t> ao)] | [(ao <any_Cx_ao_ao_t>)]) (t | ((<any_Cx_ao_ao_t> ao) | (ao <any_Cx_ao_ao_t>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_ao_t_g> g)] | [(g <any_Cx_ao_t_g>)]) sil))

results =
{72 [{sil 0 2} {s 3 15} {l 16 22} {ao 23 25} {ey 26 33} {t 34 50} {sil 51 68}]}
{80 [{sil 0 2} {s 3 16} {l 17 25} {ao 26 28} {ey 29 37} {t 38 54} {sil 55 79}]}
{91 [{sil 0 2} {s 3 19} {l 20 28} {w 29 31} {ey 32 43} {t 44 62} {sil 63 94}]}
{105 [{sil 0 2} {s 3 22} {l 23 34} {ao 35 39} {ey 40 50} {t 51 72} {sil 73 109}]}
{125 [{sil 0 2} {s 3 24} {l 25 37} {ao 38 40} {ey 41 57} {t 58 83} {sil 84 128}]}

normalised results =
{72 [{sil 0 2} {s 4 21} {l 22 31} {ao 32 32} {ey 36 46} {t 47 69} {sil 71 94}]}
{80 [{sil 0 2} {s 4 20} {l 21 31} {ao 33 33} {ey 36 46} {t 48 68} {sil 69 99}]}
{91 [{sil 0 2} {s 3 21} {l 22 31} {w 32 32} {ey 35 47} {t 48 68} {sil 69 103}]}
{105 [{sil 0 2} {s 3 21} {l 22 32} {ao 33 37} {ey 38 48} {t 49 69} {sil 70 104}]}
{125 [{sil 0 2} {s 2 19} {l 20 30} {ao 30 30} {ey 33 46} {t 46 66} {sil 67 102}]}

ruleAligned = [{{s 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{t 2} []} {{l 3} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{ey 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{t 0} [{0 5} {1 5} {2 5} {3 5} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {s 4 21} {l 22 31} {ao 32 32} {ey 36 46} {t 47 69} {sil 71 71}]}
{80 [{sil 0 0} {s 4 20} {l 21 31} {ao 33 33} {ey 36 46} {t 48 68} {sil 69 69}]}
{91 [{sil 0 0} {s 3 21} {l 22 31} {w 32 32} {ey 35 47} {t 48 68} {sil 69 69}]}
{105 [{sil 0 0} {s 3 21} {l 22 32} {ao 33 33} {ey 38 48} {t 49 69} {sil 70 70}]}
{125 [{sil 0 0} {s 2 19} {l 20 30} {ao 30 30} {ey 33 46} {t 46 66} {sil 67 67}]}

timeAligned = [{{s 3 21} [{2 1} {3 1} {4 1} {0 1} {1 1}]} {{l 22 31} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{ey 36 46} [{0 4} {1 4} {2 4} {4 4} {3 4}]} {{t 48 68} [{0 5} {1 5} {2 5} {4 5} {3 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 -1 19
i, iTime, newITime, timeStartFrom = 2 0 1 19
i, iTime, newITime, timeStartFrom = 3 1 2 30
i, iTime, newITime, timeStartFrom = 4 2 3 46
combinedVerdict    = [{s 0} {t 2} {l 3} {ey 0} {t 0}]
ruleAlignedVerdict = [{s 0} {t 2} {l 3} {ey 0} {t 0}]

score->
+2 for s
-2 for t
-2 for l
+2 for ey
+2 for t
score<-: 2

results =
{72 [{sil 0 2} {st 3 15} {l 16 20} {w 21 23} {ey 24 33} {t 34 50} {sil 51 68}]}
{80 [{sil 0 2} {st 3 16} {l 17 25} {ao 26 28} {ey 29 37} {t 38 54} {sil 55 79}]}
{91 [{sil 0 2} {st 3 19} {l 20 28} {ao 29 31} {ey 32 43} {t 44 62} {sil 63 94}]}
{105 [{sil 0 2} {st 3 22} {l 23 32} {w 33 35} {ey 36 50} {t 51 72} {sil 73 109}]}
{125 [{sil 0 24} {l 25 37} {ao 38 40} {ey 41 57} {t 58 83} {sil 84 128}]}

normalised results =
{72 [{sil 0 2} {st 4 21} {l 22 28} {w 29 29} {ey 33 46} {t 47 69} {sil 71 94}]}
{80 [{sil 0 2} {st 4 20} {l 21 31} {ao 33 33} {ey 36 46} {t 48 68} {sil 69 99}]}
{91 [{sil 0 2} {st 3 21} {l 22 31} {ao 32 32} {ey 35 47} {t 48 68} {sil 69 103}]}
{105 [{sil 0 2} {st 3 21} {l 22 30} {w 31 31} {ey 34 48} {t 49 69} {sil 70 104}]}
{125 [{sil 0 24} {l 20 30} {ao 30 30} {ey 33 46} {t 46 66} {sil 67 102}]}

ruleAligned = [{{st 0} [{0 1} {1 1} {2 1} {3 1}]} {{l 3} [{0 2} {1 2} {2 2} {3 2}]} {{ey 0} [{0 4} {1 4} {2 4} {3 4} {4 3}]} {{t 0} [{0 5} {1 5} {2 5} {3 5} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {st 4 21} {l 22 28} {w 29 29} {ey 33 46} {t 47 69} {sil 71 71}]}
{80 [{sil 0 0} {st 4 20} {l 21 31} {ao 33 33} {ey 36 46} {t 48 68} {sil 69 69}]}
{91 [{sil 0 0} {st 3 21} {l 22 31} {ao 32 32} {ey 35 47} {t 48 68} {sil 69 69}]}
{105 [{sil 0 0} {st 3 21} {l 22 30} {w 31 31} {ey 34 48} {t 49 69} {sil 70 70}]}
{125 [{sil 0 0} {l 20 30} {ao 30 30} {ey 33 46} {t 46 66} {sil 67 67}]}

timeAligned = [{{st 4 21} [{0 1} {1 1} {2 1} {3 1}]} {{l 22 30} [{0 2} {1 2} {2 2} {3 2} {4 1}]} {{ey 34 46} [{0 4} {3 4} {4 3} {2 4} {1 4}]} {{t 48 68} [{0 5} {1 5} {2 5} {4 4} {3 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 20
i, iTime, newITime, timeStartFrom = 2 1 2 28
i, iTime, newITime, timeStartFrom = 3 2 3 46
combinedVerdict    = [{st 0} {l 3} {ey 0} {t 0}]
ruleAlignedVerdict = [{st 0} {l 3} {ey 0} {t 0}]

score->
+2 for st
-2 for l
+2 for ey
+2 for t
score<-: 4
testPronounce st good l surprise ey good t good
publish->
phonsToAlphas = [{[st] st} {[ey] a} {[t] te}]
getVerdict<-:new {st [st] 0}
getVerdict<-:new {a [ey] 0}
getVerdict<-:new {te [t] 0}
lettersVerdicts = [{st [st] 0} {l [l] 3} {a [ey] 0} {te [t] 0}]
publish<-
{
  "word": "state",
  "results": [
    {
      "letters": "st",
      "phonemes": "st",
      "verdict": "good"
    },
    {
      "letters": "l",
      "phonemes": "l",
      "verdict": "surprise"
    },
    {
      "letters": "a",
      "phonemes": "eɪ",
      "verdict": "good"
    },
    {
      "letters": "te",
      "phonemes": "t",
      "verdict": "good"
    }
  ],
  "err": null
}
