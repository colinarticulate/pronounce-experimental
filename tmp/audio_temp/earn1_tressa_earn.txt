Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_7c8a155d-ec22-492b-96ec-c493887825e5 audiofile /Users/test/go/src/Phonemes/audio_clips/earn1_tressa.wav word earn dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  1.685



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.48 0.86 1.3399999999999999

 start3, duration3, end3 =  0.5 0.76 1.26

 Initial start, duration, end =  0.38 0.9599999999999999 1.3399999999999999

 Cut at: start, duration =  0.38 1.2850000000000001     guard_end =  1.665 

Running scan for frate = 125
Considering guard sh with value 0.8 for er ...
Considering guard zh with value 0.8 for er ...
candidateGuards = map[sh:true zh:true]
Picking guard, sh

Considering guard sh with value 0.8 for n ...
Considering guard zh with value 0.8 for n ...
candidateGuards = map[sh:true zh:true]
Picking guard, sh

frate, target rule = 125 public <earn> = (((sil [((l <any_Vx_er_l_p_noSlide>) | (<any_Vx_er_l_p_noSlide> l))] [((l <any_Cx_er_l_p>) | (<any_Cx_er_l_p> l))]) | (sil p (sil [((l <any_Vx_er_l_p_noSlide>) | (<any_Vx_er_l_p_noSlide> l))] [((l <any_Cx_er_l_p>) | (<any_Cx_er_l_p> l))]))) ((([(<any_Vx_sh_p_l_er_noSlide> sh)] | [(sh <any_Vx_sh_p_l_er_noSlide>)]) ([(<any_Cx_sh_p_l_n> sh)] | [(sh <any_Cx_sh_p_l_n>)])) (er | ((<any_Vx_sh_p_l_er_noSlide> sh) | (sh <any_Vx_sh_p_l_er_noSlide>)))) (([(<any_Cx_sh_sh_n> sh)] | [(sh <any_Cx_sh_sh_n>)]) (n | ((<any_Cx_sh_sh_n> sh) | (sh <any_Cx_sh_sh_n>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_sh_n_thr> thr)] | [(thr <any_Cx_sh_n_thr>)]) sil))
Running scan for frate = 105
Considering guard zh with value 0.8 for er ...
Considering guard sh with value 0.8 for er ...
candidateGuards = map[sh:true zh:true]
Picking guard, sh

Considering guard zh with value 0.8 for n ...
Considering guard sh with value 0.8 for n ...
candidateGuards = map[sh:true zh:true]
Picking guard, zh

frate, target rule = 105 public <earn> = (((sil [((hh <any_Vx_er_hh_p_noSlide>) | (<any_Vx_er_hh_p_noSlide> hh))] [((hh <any_Cx_er_hh_p>) | (<any_Cx_er_hh_p> hh))]) | (sil p (sil [((hh <any_Vx_er_hh_p_noSlide>) | (<any_Vx_er_hh_p_noSlide> hh))] [((hh <any_Cx_er_hh_p>) | (<any_Cx_er_hh_p> hh))]))) ((([(<any_Vx_sh_p_hh_er_noSlide> sh)] | [(sh <any_Vx_sh_p_hh_er_noSlide>)]) ([(<any_Cx_sh_p_hh_n> sh)] | [(sh <any_Cx_sh_p_hh_n>)])) (er | ((<any_Vx_sh_p_hh_er_noSlide> sh) | (sh <any_Vx_sh_p_hh_er_noSlide>)))) (([(<any_Cx_zh_sh_n> zh)] | [(zh <any_Cx_zh_sh_n>)]) (n | ((<any_Cx_zh_sh_n> zh) | (zh <any_Cx_zh_sh_n>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_zh_n_b> b)] | [(b <any_Cx_zh_n_b>)]) sil))
Running scan for frate = 91
Considering guard zh with value 0.8 for er ...
Considering guard sh with value 0.8 for er ...
candidateGuards = map[sh:true zh:true]
Picking guard, zh

Considering guard zh with value 0.8 for n ...
Considering guard sh with value 0.8 for n ...
candidateGuards = map[sh:true zh:true]
Picking guard, zh

frate, target rule = 91 public <earn> = (((sil [((r <any_Vx_er_r_p_noSlide>) | (<any_Vx_er_r_p_noSlide> r))] [((r <any_Cx_er_r_p>) | (<any_Cx_er_r_p> r))]) | (sil p (sil [((r <any_Vx_er_r_p_noSlide>) | (<any_Vx_er_r_p_noSlide> r))] [((r <any_Cx_er_r_p>) | (<any_Cx_er_r_p> r))]))) ((([(<any_Vx_zh_p_r_er_noSlide> zh)] | [(zh <any_Vx_zh_p_r_er_noSlide>)]) ([(<any_Cx_zh_p_r_n> zh)] | [(zh <any_Cx_zh_p_r_n>)])) (er | ((<any_Vx_zh_p_r_er_noSlide> zh) | (zh <any_Vx_zh_p_r_er_noSlide>)))) (([(<any_Cx_zh_zh_n> zh)] | [(zh <any_Cx_zh_zh_n>)]) (n | ((<any_Cx_zh_zh_n> zh) | (zh <any_Cx_zh_zh_n>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_zh_n_thr> thr)] | [(thr <any_Cx_zh_n_thr>)]) sil))
Running scan for frate = 80
Considering guard sh with value 0.8 for er ...
Considering guard zh with value 0.8 for er ...
candidateGuards = map[sh:true zh:true]
Picking guard, sh

Considering guard zh with value 0.8 for n ...
Considering guard sh with value 0.8 for n ...
candidateGuards = map[sh:true zh:true]
Picking guard, zh

frate, target rule = 80 public <earn> = (((sil [((hh <any_Vx_er_hh_p_noSlide>) | (<any_Vx_er_hh_p_noSlide> hh))] [((hh <any_Cx_er_hh_p>) | (<any_Cx_er_hh_p> hh))]) | (sil p (sil [((hh <any_Vx_er_hh_p_noSlide>) | (<any_Vx_er_hh_p_noSlide> hh))] [((hh <any_Cx_er_hh_p>) | (<any_Cx_er_hh_p> hh))]))) ((([(<any_Vx_sh_p_hh_er_noSlide> sh)] | [(sh <any_Vx_sh_p_hh_er_noSlide>)]) ([(<any_Cx_sh_p_hh_n> sh)] | [(sh <any_Cx_sh_p_hh_n>)])) (er | ((<any_Vx_sh_p_hh_er_noSlide> sh) | (sh <any_Vx_sh_p_hh_er_noSlide>)))) (([(<any_Cx_zh_sh_n> zh)] | [(zh <any_Cx_zh_sh_n>)]) (n | ((<any_Cx_zh_sh_n> zh) | (zh <any_Cx_zh_sh_n>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_zh_n_d> d)] | [(d <any_Cx_zh_n_d>)]) sil))
Running scan for frate = 72
Considering guard sh with value 0.8 for er ...
Considering guard zh with value 0.8 for er ...
candidateGuards = map[sh:true zh:true]
Picking guard, sh

Considering guard sh with value 0.8 for n ...
Considering guard zh with value 0.8 for n ...
candidateGuards = map[sh:true zh:true]
Picking guard, sh

frate, target rule = 72 public <earn> = (((sil [((hh <any_Vx_er_hh_p_noSlide>) | (<any_Vx_er_hh_p_noSlide> hh))] [((hh <any_Cx_er_hh_p>) | (<any_Cx_er_hh_p> hh))]) | (sil p (sil [((hh <any_Vx_er_hh_p_noSlide>) | (<any_Vx_er_hh_p_noSlide> hh))] [((hh <any_Cx_er_hh_p>) | (<any_Cx_er_hh_p> hh))]))) ((([(<any_Vx_sh_p_hh_er_noSlide> sh)] | [(sh <any_Vx_sh_p_hh_er_noSlide>)]) ([(<any_Cx_sh_p_hh_n> sh)] | [(sh <any_Cx_sh_p_hh_n>)])) (er | ((<any_Vx_sh_p_hh_er_noSlide> sh) | (sh <any_Vx_sh_p_hh_er_noSlide>)))) (([(<any_Cx_sh_sh_n> sh)] | [(sh <any_Cx_sh_sh_n>)]) (n | ((<any_Cx_sh_sh_n> sh) | (sh <any_Cx_sh_sh_n>)))) (([(<any_vowel_noSlide> z)] | [(z <any_vowel_noSlide>)]) ([(<any_Cx_sh_n_z> z)] | [(z <any_Cx_sh_n_z>)]) sil))

results =
{72 [{sil 0 15} {er 16 35} {n 36 50} {b 51 53} {z 54 63} {sil 64 84}]}
{80 [{sil 0 19} {er 20 40} {n 41 57} {d 58 61} {ch 62 70} {sil 71 90}]}
{91 [{sil 0 19} {er 20 47} {n 48 64} {d 65 69} {thr 70 78} {sil 79 115}]}
{105 [{sil 0 22} {er 23 55} {n 56 75} {b 76 79} {z 80 94} {sil 95 134}]}
{125 [{sil 0 25} {er 26 63} {n 64 86} {d 87 92} {thr 93 109} {sil 110 157}]}

normalised results =
{72 [{sil 0 15} {er 22 49} {n 50 69} {b 71 71} {z 75 88} {sil 89 117}]}
{80 [{sil 0 19} {er 25 50} {n 51 71} {d 73 76} {ch 78 88} {sil 89 113}]}
{91 [{sil 0 19} {er 22 52} {n 53 70} {d 71 76} {thr 77 86} {sil 87 126}]}
{105 [{sil 0 22} {er 22 52} {n 53 71} {b 72 75} {z 76 90} {sil 90 128}]}
{125 [{sil 0 25} {er 21 50} {n 51 69} {d 70 74} {thr 74 87} {sil 88 126}]}

ruleAligned = [{{er 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{n 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {er 22 49} {n 50 69} {b 71 71} {z 75 88} {sil 89 89}]}
{80 [{sil 0 0} {er 25 50} {n 51 71} {d 73 73} {ch 78 88} {sil 89 89}]}
{91 [{sil 0 0} {er 22 52} {n 53 70} {d 71 76} {thr 77 86} {sil 87 87}]}
{105 [{sil 0 0} {er 22 52} {n 53 71} {b 72 72} {z 76 90} {sil 90 90}]}
{125 [{sil 0 0} {er 21 50} {n 51 69} {d 70 74} {thr 74 87} {sil 88 88}]}

timeAligned = [{{er 22 50} [{0 1} {2 1} {3 1} {4 1} {1 1}]} {{n 51 70} [{0 2} {1 2} {4 2} {2 2} {3 2}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 49
combinedVerdict    = [{er 0} {n 0}]
ruleAlignedVerdict = [{er 0} {n 0}]

score->
+2 for er
+2 for n
score<-: 9
testPronounce er good n good
publish->
phonsToAlphas = [{[er] ear} {[n] n}]
getVerdict<-:new {ear [er] 0}
getVerdict<-:new {n [n] 0}
lettersVerdicts = [{ear [er] 0} {n [n] 0}]
publish<-
{
  "word": "earn",
  "results": [
    {
      "letters": "ear",
      "phonemes": "ɜɹ",
      "verdict": "good"
    },
    {
      "letters": "n",
      "phonemes": "n",
      "verdict": "good"
    }
  ],
  "err": null
}
