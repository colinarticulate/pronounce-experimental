Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_2bfc43d7-3219-4e44-a419-eba4071a5261 audiofile /Users/test/go/src/Phonemes/audio_clips/time1_paul.wav word time dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  2.204438



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.78 0.9 1.6800000000000002

 start3, duration3, end3 =  0.9 0.72 1.62

 Initial start, duration, end =  0.68 1 1.6800000000000002

 Cut at: start, duration =  0.68 1.45     guard_end =  2.13 

Running scan for frate = 125
Considering guard zh with value 1 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2.4000000000000004 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 1.4 for m ...
candidateGuards = map[ch:true]
Picking guard, ch

frate, target rule = 125 public <time> = (((sil [((d <any_Cx_t_d_p>) | (<any_Cx_t_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil p (sil [((d <any_Cx_t_d_p>) | (<any_Cx_t_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_zh_p_d_t> zh)] | [(zh <any_Cx_zh_p_d_t>)]) (t | ((<any_Cx_zh_p_d_t> zh) | (zh <any_Cx_zh_p_d_t>)))) ((([(<any_Vx_zh_zh_ay_noSlide> zh)] | [(zh <any_Vx_zh_zh_ay_noSlide>)]) ([(<any_Cx_zh_zh_m_t> zh)] | [(zh <any_Cx_zh_zh_m_t>)])) (ay | ((<any_Vx_zh_zh_ay_noSlide> zh) | (zh <any_Vx_zh_zh_ay_noSlide>)))) (([(<any_Cx_ch_zh_m> ch)] | [(ch <any_Cx_ch_zh_m>)]) (m | ((<any_Cx_ch_zh_m> ch) | (ch <any_Cx_ch_zh_m>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_ch_m_b> b)] | [(b <any_Cx_ch_m_b>)]) sil))
Running scan for frate = 105
Considering guard zh with value 1 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2.4000000000000004 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 1.4 for m ...
candidateGuards = map[ch:true]
Picking guard, ch

frate, target rule = 105 public <time> = (((sil [((d <any_Cx_t_d_p>) | (<any_Cx_t_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil p (sil [((d <any_Cx_t_d_p>) | (<any_Cx_t_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_zh_p_d_t> zh)] | [(zh <any_Cx_zh_p_d_t>)]) (t | ((<any_Cx_zh_p_d_t> zh) | (zh <any_Cx_zh_p_d_t>)))) ((([(<any_Vx_zh_zh_ay_noSlide> zh)] | [(zh <any_Vx_zh_zh_ay_noSlide>)]) ([(<any_Cx_zh_zh_m_t> zh)] | [(zh <any_Cx_zh_zh_m_t>)])) (ay | ((<any_Vx_zh_zh_ay_noSlide> zh) | (zh <any_Vx_zh_zh_ay_noSlide>)))) (([(<any_Cx_ch_zh_m> ch)] | [(ch <any_Cx_ch_zh_m>)]) (m | ((<any_Cx_ch_zh_m> ch) | (ch <any_Cx_ch_zh_m>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_ch_m_d> d)] | [(d <any_Cx_ch_m_d>)]) sil))
Running scan for frate = 91
Considering guard zh with value 1 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2.4000000000000004 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 1.4 for m ...
candidateGuards = map[ch:true]
Picking guard, ch

frate, target rule = 91 public <time> = (((sil [((ch <any_Cx_t_ch_p>) | (<any_Cx_t_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_t_ch_p>) | (<any_Cx_t_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_zh_p_ch_t> zh)] | [(zh <any_Cx_zh_p_ch_t>)]) (t | ((<any_Cx_zh_p_ch_t> zh) | (zh <any_Cx_zh_p_ch_t>)))) ((([(<any_Vx_zh_zh_ay_noSlide> zh)] | [(zh <any_Vx_zh_zh_ay_noSlide>)]) ([(<any_Cx_zh_zh_m_t> zh)] | [(zh <any_Cx_zh_zh_m_t>)])) (ay | ((<any_Vx_zh_zh_ay_noSlide> zh) | (zh <any_Vx_zh_zh_ay_noSlide>)))) (([(<any_Cx_ch_zh_m> ch)] | [(ch <any_Cx_ch_zh_m>)]) (m | ((<any_Cx_ch_zh_m> ch) | (ch <any_Cx_ch_zh_m>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_ch_m_d> d)] | [(d <any_Cx_ch_m_d>)]) sil))
Running scan for frate = 80
Considering guard zh with value 1 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2.4000000000000004 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 1.4 for m ...
candidateGuards = map[ch:true]
Picking guard, ch

frate, target rule = 80 public <time> = (((sil [((g <any_Cx_t_g_p>) | (<any_Cx_t_g_p> g))] [((g <any_vowel_noSlide>) | (<any_vowel_noSlide> g))]) | (sil p (sil [((g <any_Cx_t_g_p>) | (<any_Cx_t_g_p> g))] [((g <any_vowel_noSlide>) | (<any_vowel_noSlide> g))]))) (([(<any_Cx_zh_p_g_t> zh)] | [(zh <any_Cx_zh_p_g_t>)]) (t | ((<any_Cx_zh_p_g_t> zh) | (zh <any_Cx_zh_p_g_t>)))) ((([(<any_Vx_zh_zh_ay_noSlide> zh)] | [(zh <any_Vx_zh_zh_ay_noSlide>)]) ([(<any_Cx_zh_zh_m_t> zh)] | [(zh <any_Cx_zh_zh_m_t>)])) (ay | ((<any_Vx_zh_zh_ay_noSlide> zh) | (zh <any_Vx_zh_zh_ay_noSlide>)))) (([(<any_Cx_ch_zh_m> ch)] | [(ch <any_Cx_ch_zh_m>)]) (m | ((<any_Cx_ch_zh_m> ch) | (ch <any_Cx_ch_zh_m>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_ch_m_v> v)] | [(v <any_Cx_ch_m_v>)]) sil))
Running scan for frate = 72
Considering guard zh with value 1 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2.4000000000000004 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 1.4 for m ...
candidateGuards = map[ch:true]
Picking guard, ch

frate, target rule = 72 public <time> = (((sil [((d <any_Cx_t_d_p>) | (<any_Cx_t_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil p (sil [((d <any_Cx_t_d_p>) | (<any_Cx_t_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_zh_p_d_t> zh)] | [(zh <any_Cx_zh_p_d_t>)]) (t | ((<any_Cx_zh_p_d_t> zh) | (zh <any_Cx_zh_p_d_t>)))) ((([(<any_Vx_zh_zh_ay_noSlide> zh)] | [(zh <any_Vx_zh_zh_ay_noSlide>)]) ([(<any_Cx_zh_zh_m_t> zh)] | [(zh <any_Cx_zh_zh_m_t>)])) (ay | ((<any_Vx_zh_zh_ay_noSlide> zh) | (zh <any_Vx_zh_zh_ay_noSlide>)))) (([(<any_Cx_ch_zh_m> ch)] | [(ch <any_Cx_ch_zh_m>)]) (m | ((<any_Cx_ch_zh_m> ch) | (ch <any_Cx_ch_zh_m>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_ch_m_v> v)] | [(v <any_Cx_ch_m_v>)]) sil))

results =
{72 [{sil 0 10} {t 11 19} {ay 20 44} {m 45 51} {v 52 65} {z 66 76} {sil 77 99}]}
{80 [{sil 0 11} {t 12 21} {ay 22 48} {m 49 63} {v 64 69} {z 70 79} {sil 80 103}]}
{91 [{sil 0 14} {t 15 22} {ay 23 55} {m 56 79} {sil 80 130}]}
{105 [{sil 0 17} {t 18 26} {ay 27 63} {m 64 93} {sil 94 151}]}
{125 [{sil 0 19} {t 20 35} {ay 36 74} {m 75 107} {sil 108 178}]}

normalised results =
{72 [{sil 0 10} {t 15 26} {ay 28 61} {m 63 71} {v 72 90} {z 92 106} {sil 107 138}]}
{80 [{sil 0 11} {t 15 26} {ay 28 60} {m 61 79} {v 80 86} {z 88 99} {sil 100 129}]}
{91 [{sil 0 14} {t 16 24} {ay 25 60} {m 62 87} {sil 88 143}]}
{105 [{sil 0 17} {t 17 25} {ay 26 60} {m 61 89} {sil 90 144}]}
{125 [{sil 0 19} {t 16 28} {ay 29 59} {m 60 86} {sil 86 142}]}

ruleAligned = [{{t 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ay 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{m 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {t 15 26} {ay 28 61} {m 63 71} {v 72 90} {z 92 106} {sil 107 107}]}
{80 [{sil 0 0} {t 15 26} {ay 28 60} {m 61 79} {v 80 80} {z 88 99} {sil 100 100}]}
{91 [{sil 0 0} {t 16 24} {ay 25 60} {m 62 87} {sil 88 88}]}
{105 [{sil 0 0} {t 17 25} {ay 26 60} {m 61 89} {sil 90 90}]}
{125 [{sil 0 0} {t 16 28} {ay 29 59} {m 60 86} {sil 86 86}]}

timeAligned = [{{t 16 26} [{0 1} {1 1} {2 1} {4 1} {3 1}]} {{ay 28 60} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{m 61 86} [{1 3} {3 3} {4 3} {2 3} {0 3}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 24
i, iTime, newITime, timeStartFrom = 2 1 2 59
combinedVerdict    = [{t 0} {ay 0} {m 0}]
ruleAlignedVerdict = [{t 0} {ay 0} {m 0}]

score->
+2 for t
+2 for ay
+2 for m
score<-: 11
testPronounce t good ay good m good
publish->
phonsToAlphas = [{[t] t} {[ay] i} {[m] me}]
getVerdict<-:new {t [t] 0}
getVerdict<-:new {i [ay] 0}
getVerdict<-:new {me [m] 0}
lettersVerdicts = [{t [t] 0} {i [ay] 0} {me [m] 0}]
publish<-
{
  "word": "time",
  "results": [
    {
      "letters": "t",
      "phonemes": "t",
      "verdict": "good"
    },
    {
      "letters": "i",
      "phonemes": "ɑɪ",
      "verdict": "good"
    },
    {
      "letters": "me",
      "phonemes": "m",
      "verdict": "good"
    }
  ],
  "err": null
}
