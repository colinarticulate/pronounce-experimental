Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_946a2f3c-7bf0-4fd9-9dc4-3c8785cc89f9 audiofile /Users/test/go/src/Phonemes/audio_clips/emperors1_paul.wav word emperors dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  2.068



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.4600000000000001 1.08 1.54

 start3, duration3, end3 =  0.48 1 1.48

 Initial start, duration, end =  0.3600000000000001 1.18 1.54

 Cut at: start, duration =  0.3600000000000001 1.63     guard_end =  1.99 

Running scan for frate = 125
Considering guard ch with value 1.4 for eh ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard zh with value 4.8 for m ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 4.8 for p ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for ax ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard z with value 2 for r ...
Considering guard y with value 2 for r ...
candidateGuards = map[y:true z:true]
Picking guard, z

Considering guard y with value 5 for ax ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 5 for z ...
Considering guard ch with value 5 for z ...
candidateGuards = map[ch:true y:true]
Picking guard, y

frate, target rule = 125 public <emperors> = (((sil [((b <any_Vx_eh_b_p_noSlide>) | (<any_Vx_eh_b_p_noSlide> b))] [((b <any_Cx_eh_b_p>) | (<any_Cx_eh_b_p> b))]) | (sil p (sil [((b <any_Vx_eh_b_p_noSlide>) | (<any_Vx_eh_b_p_noSlide> b))] [((b <any_Cx_eh_b_p>) | (<any_Cx_eh_b_p> b))]))) ((([(<any_Vx_ch_p_b_eh_noSlide> ch)] | [(ch <any_Vx_ch_p_b_eh_noSlide>)]) ([(<any_Cx_ch_p_b_m> ch)] | [(ch <any_Cx_ch_p_b_m>)])) (eh | ((<any_Vx_ch_p_b_eh_noSlide> ch) | (ch <any_Vx_ch_p_b_eh_noSlide>)))) (([(<any_Cx_zh_ch_m_p> zh)] | [(zh <any_Cx_zh_ch_m_p>)]) (m | ((<any_Cx_zh_ch_m_p> zh) | (zh <any_Cx_zh_ch_m_p>)))) (([(<any_Cx_zh_zh_p_ax_m> zh)] | [(zh <any_Cx_zh_zh_p_ax_m>)]) (p | ((<any_Cx_zh_zh_p_ax_m> zh) | (zh <any_Cx_zh_zh_p_ax_m>)))) (([(<any_Cx_zh_zh_ax_r_p> zh)] | [(zh <any_Cx_zh_zh_ax_r_p>)]) (ax | ((<any_Cx_zh_zh_ax_r_p> zh) | (zh <any_Cx_zh_zh_ax_r_p>)))) (([(<any_Cx_z_zh_r_ax_ax> z)] | [(z <any_Cx_z_zh_r_ax_ax>)]) (r | ((<any_Cx_z_zh_r_ax_ax> z) | (z <any_Cx_z_zh_r_ax_ax>)))) (([(<any_Cx_y_z_ax_r> y)] | [(y <any_Cx_y_z_ax_r>)]) (ax | ((<any_Cx_y_z_ax_z_r> y) | (y <any_Cx_y_z_ax_z_r>)))) (([(<any_Cx_y_y_z_ax> y)] | [(y <any_Cx_y_y_z_ax>)]) (z | ((<any_Cx_y_y_z_ax> y) | (y <any_Cx_y_y_z_ax>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_y_z_v> v)] | [(v <any_Cx_y_z_v>)]) sil))
Running scan for frate = 105
Considering guard ch with value 1.4 for eh ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard zh with value 4.8 for m ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 4.8 for p ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for ax ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard z with value 2 for r ...
Considering guard y with value 2 for r ...
candidateGuards = map[y:true z:true]
Picking guard, z

Considering guard y with value 5 for ax ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard ch with value 5 for z ...
Considering guard y with value 5 for z ...
candidateGuards = map[ch:true y:true]
Picking guard, ch

frate, target rule = 105 public <emperors> = (((sil [((r <any_Vx_eh_r_p_noSlide>) | (<any_Vx_eh_r_p_noSlide> r))] [((r <any_Cx_eh_r_p>) | (<any_Cx_eh_r_p> r))]) | (sil p (sil [((r <any_Vx_eh_r_p_noSlide>) | (<any_Vx_eh_r_p_noSlide> r))] [((r <any_Cx_eh_r_p>) | (<any_Cx_eh_r_p> r))]))) ((([(<any_Vx_ch_p_r_eh_noSlide> ch)] | [(ch <any_Vx_ch_p_r_eh_noSlide>)]) ([(<any_Cx_ch_p_r_m> ch)] | [(ch <any_Cx_ch_p_r_m>)])) (eh | ((<any_Vx_ch_p_r_eh_noSlide> ch) | (ch <any_Vx_ch_p_r_eh_noSlide>)))) (([(<any_Cx_zh_ch_m_p> zh)] | [(zh <any_Cx_zh_ch_m_p>)]) (m | ((<any_Cx_zh_ch_m_p> zh) | (zh <any_Cx_zh_ch_m_p>)))) (([(<any_Cx_zh_zh_p_ax_m> zh)] | [(zh <any_Cx_zh_zh_p_ax_m>)]) (p | ((<any_Cx_zh_zh_p_ax_m> zh) | (zh <any_Cx_zh_zh_p_ax_m>)))) (([(<any_Cx_zh_zh_ax_r_p> zh)] | [(zh <any_Cx_zh_zh_ax_r_p>)]) (ax | ((<any_Cx_zh_zh_ax_r_p> zh) | (zh <any_Cx_zh_zh_ax_r_p>)))) (([(<any_Cx_z_zh_r_ax_ax> z)] | [(z <any_Cx_z_zh_r_ax_ax>)]) (r | ((<any_Cx_z_zh_r_ax_ax> z) | (z <any_Cx_z_zh_r_ax_ax>)))) (([(<any_Cx_y_z_ax_r> y)] | [(y <any_Cx_y_z_ax_r>)]) (ax | ((<any_Cx_y_z_ax_z_r> y) | (y <any_Cx_y_z_ax_z_r>)))) (([(<any_Cx_ch_y_z_ax> ch)] | [(ch <any_Cx_ch_y_z_ax>)]) (z | ((<any_Cx_ch_y_z_ax> ch) | (ch <any_Cx_ch_y_z_ax>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_ch_z_v> v)] | [(v <any_Cx_ch_z_v>)]) sil))
Running scan for frate = 91
Considering guard ch with value 1.4 for eh ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard zh with value 4.8 for m ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 4.8 for p ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for ax ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard y with value 2 for r ...
Considering guard z with value 2 for r ...
candidateGuards = map[y:true z:true]
Picking guard, y

Considering guard y with value 5 for ax ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 5 for z ...
Considering guard ch with value 5 for z ...
candidateGuards = map[ch:true y:true]
Picking guard, y

frate, target rule = 91 public <emperors> = (((sil [((b <any_Vx_eh_b_p_noSlide>) | (<any_Vx_eh_b_p_noSlide> b))] [((b <any_Cx_eh_b_p>) | (<any_Cx_eh_b_p> b))]) | (sil p (sil [((b <any_Vx_eh_b_p_noSlide>) | (<any_Vx_eh_b_p_noSlide> b))] [((b <any_Cx_eh_b_p>) | (<any_Cx_eh_b_p> b))]))) ((([(<any_Vx_ch_p_b_eh_noSlide> ch)] | [(ch <any_Vx_ch_p_b_eh_noSlide>)]) ([(<any_Cx_ch_p_b_m> ch)] | [(ch <any_Cx_ch_p_b_m>)])) (eh | ((<any_Vx_ch_p_b_eh_noSlide> ch) | (ch <any_Vx_ch_p_b_eh_noSlide>)))) (([(<any_Cx_zh_ch_m_p> zh)] | [(zh <any_Cx_zh_ch_m_p>)]) (m | ((<any_Cx_zh_ch_m_p> zh) | (zh <any_Cx_zh_ch_m_p>)))) (([(<any_Cx_zh_zh_p_ax_m> zh)] | [(zh <any_Cx_zh_zh_p_ax_m>)]) (p | ((<any_Cx_zh_zh_p_ax_m> zh) | (zh <any_Cx_zh_zh_p_ax_m>)))) (([(<any_Cx_zh_zh_ax_r_p> zh)] | [(zh <any_Cx_zh_zh_ax_r_p>)]) (ax | ((<any_Cx_zh_zh_ax_r_p> zh) | (zh <any_Cx_zh_zh_ax_r_p>)))) (([(<any_Cx_y_zh_r_ax_ax> y)] | [(y <any_Cx_y_zh_r_ax_ax>)]) (r | ((<any_Cx_y_zh_r_ax_ax> y) | (y <any_Cx_y_zh_r_ax_ax>)))) (([(<any_Cx_y_y_ax_r> y)] | [(y <any_Cx_y_y_ax_r>)]) (ax | ((<any_Cx_y_y_ax_z_r> y) | (y <any_Cx_y_y_ax_z_r>)))) (([(<any_Cx_y_y_z_ax> y)] | [(y <any_Cx_y_y_z_ax>)]) (z | ((<any_Cx_y_y_z_ax> y) | (y <any_Cx_y_y_z_ax>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_y_z_v> v)] | [(v <any_Cx_y_z_v>)]) sil))
Running scan for frate = 80
Considering guard ch with value 1.4 for eh ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard zh with value 4.8 for m ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 4.8 for p ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for ax ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard z with value 2 for r ...
Considering guard y with value 2 for r ...
candidateGuards = map[y:true z:true]
Picking guard, z

Considering guard y with value 5 for ax ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 5 for z ...
Considering guard ch with value 5 for z ...
candidateGuards = map[ch:true y:true]
Picking guard, y

frate, target rule = 80 public <emperors> = (((sil [((hh <any_Vx_eh_hh_p_noSlide>) | (<any_Vx_eh_hh_p_noSlide> hh))] [((hh <any_Cx_eh_hh_p>) | (<any_Cx_eh_hh_p> hh))]) | (sil p (sil [((hh <any_Vx_eh_hh_p_noSlide>) | (<any_Vx_eh_hh_p_noSlide> hh))] [((hh <any_Cx_eh_hh_p>) | (<any_Cx_eh_hh_p> hh))]))) ((([(<any_Vx_ch_p_hh_eh_noSlide> ch)] | [(ch <any_Vx_ch_p_hh_eh_noSlide>)]) ([(<any_Cx_ch_p_hh_m> ch)] | [(ch <any_Cx_ch_p_hh_m>)])) (eh | ((<any_Vx_ch_p_hh_eh_noSlide> ch) | (ch <any_Vx_ch_p_hh_eh_noSlide>)))) (([(<any_Cx_zh_ch_m_p> zh)] | [(zh <any_Cx_zh_ch_m_p>)]) (m | ((<any_Cx_zh_ch_m_p> zh) | (zh <any_Cx_zh_ch_m_p>)))) (([(<any_Cx_zh_zh_p_ax_m> zh)] | [(zh <any_Cx_zh_zh_p_ax_m>)]) (p | ((<any_Cx_zh_zh_p_ax_m> zh) | (zh <any_Cx_zh_zh_p_ax_m>)))) (([(<any_Cx_zh_zh_ax_r_p> zh)] | [(zh <any_Cx_zh_zh_ax_r_p>)]) (ax | ((<any_Cx_zh_zh_ax_r_p> zh) | (zh <any_Cx_zh_zh_ax_r_p>)))) (([(<any_Cx_z_zh_r_ax_ax> z)] | [(z <any_Cx_z_zh_r_ax_ax>)]) (r | ((<any_Cx_z_zh_r_ax_ax> z) | (z <any_Cx_z_zh_r_ax_ax>)))) (([(<any_Cx_y_z_ax_r> y)] | [(y <any_Cx_y_z_ax_r>)]) (ax | ((<any_Cx_y_z_ax_z_r> y) | (y <any_Cx_y_z_ax_z_r>)))) (([(<any_Cx_y_y_z_ax> y)] | [(y <any_Cx_y_y_z_ax>)]) (z | ((<any_Cx_y_y_z_ax> y) | (y <any_Cx_y_y_z_ax>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_y_z_thr> thr)] | [(thr <any_Cx_y_z_thr>)]) sil))
Running scan for frate = 72
Considering guard ch with value 1.4 for eh ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard zh with value 4.8 for m ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 4.8 for p ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for ax ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard y with value 2 for r ...
Considering guard z with value 2 for r ...
candidateGuards = map[y:true z:true]
Picking guard, y

Considering guard y with value 5 for ax ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 5 for z ...
Considering guard ch with value 5 for z ...
candidateGuards = map[ch:true y:true]
Picking guard, y

frate, target rule = 72 public <emperors> = (((sil [((b <any_Vx_eh_b_p_noSlide>) | (<any_Vx_eh_b_p_noSlide> b))] [((b <any_Cx_eh_b_p>) | (<any_Cx_eh_b_p> b))]) | (sil p (sil [((b <any_Vx_eh_b_p_noSlide>) | (<any_Vx_eh_b_p_noSlide> b))] [((b <any_Cx_eh_b_p>) | (<any_Cx_eh_b_p> b))]))) ((([(<any_Vx_ch_p_b_eh_noSlide> ch)] | [(ch <any_Vx_ch_p_b_eh_noSlide>)]) ([(<any_Cx_ch_p_b_m> ch)] | [(ch <any_Cx_ch_p_b_m>)])) (eh | ((<any_Vx_ch_p_b_eh_noSlide> ch) | (ch <any_Vx_ch_p_b_eh_noSlide>)))) (([(<any_Cx_zh_ch_m_p> zh)] | [(zh <any_Cx_zh_ch_m_p>)]) (m | ((<any_Cx_zh_ch_m_p> zh) | (zh <any_Cx_zh_ch_m_p>)))) (([(<any_Cx_zh_zh_p_ax_m> zh)] | [(zh <any_Cx_zh_zh_p_ax_m>)]) (p | ((<any_Cx_zh_zh_p_ax_m> zh) | (zh <any_Cx_zh_zh_p_ax_m>)))) (([(<any_Cx_zh_zh_ax_r_p> zh)] | [(zh <any_Cx_zh_zh_ax_r_p>)]) (ax | ((<any_Cx_zh_zh_ax_r_p> zh) | (zh <any_Cx_zh_zh_ax_r_p>)))) (([(<any_Cx_y_zh_r_ax_ax> y)] | [(y <any_Cx_y_zh_r_ax_ax>)]) (r | ((<any_Cx_y_zh_r_ax_ax> y) | (y <any_Cx_y_zh_r_ax_ax>)))) (([(<any_Cx_y_y_ax_r> y)] | [(y <any_Cx_y_y_ax_r>)]) (ax | ((<any_Cx_y_y_ax_z_r> y) | (y <any_Cx_y_y_ax_z_r>)))) (([(<any_Cx_y_y_z_ax> y)] | [(y <any_Cx_y_y_z_ax>)]) (z | ((<any_Cx_y_y_z_ax> y) | (y <any_Cx_y_y_z_ax>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_y_z_thr> thr)] | [(thr <any_Cx_y_z_thr>)]) sil))

results =
{72 [{sil 0 12} {eh 13 24} {m 25 32} {p 33 40} {ax 41 45} {r 46 57} {ax 58 65} {z 66 80} {sil 81 100}]}
{80 [{sil 0 14} {eh 15 27} {m 28 36} {p 37 45} {ax 46 49} {r 50 63} {ax 64 73} {z 74 89} {sil 90 108}]}
{91 [{sil 0 16} {eh 17 32} {m 33 43} {p 44 51} {ax 52 56} {r 57 73} {ax 74 83} {z 84 101} {sil 102 147}]}
{105 [{sil 0 19} {eh 20 38} {m 39 50} {p 51 60} {ax 61 65} {r 66 85} {ax 86 96} {z 97 117} {sil 118 170}]}
{125 [{sil 0 22} {eh 23 43} {m 44 59} {p 60 69} {ax 70 76} {r 77 105} {ax 106 113} {z 114 137} {sil 138 200}]}

normalised results =
{72 [{sil 0 12} {eh 18 33} {m 35 44} {p 46 56} {ax 57 63} {r 64 79} {ax 81 90} {z 92 111} {sil 113 139}]}
{80 [{sil 0 14} {eh 19 34} {m 35 45} {p 46 56} {ax 58 61} {r 63 79} {ax 80 91} {z 93 111} {sil 113 135}]}
{91 [{sil 0 16} {eh 19 35} {m 36 47} {p 48 56} {ax 57 62} {r 63 80} {ax 81 91} {z 92 111} {sil 112 162}]}
{105 [{sil 0 19} {eh 19 36} {m 37 48} {p 49 57} {ax 58 62} {r 63 81} {ax 82 91} {z 92 111} {sil 112 162}]}
{125 [{sil 0 22} {eh 18 34} {m 35 47} {p 48 55} {ax 56 61} {r 62 84} {ax 85 90} {z 91 110} {sil 110 160}]}

ruleAligned = [{{eh 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{m 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{p 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{ax 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{r 0} [{0 5} {1 5} {2 5} {3 5} {4 5}]} {{ax 0} [{0 6} {1 6} {2 6} {3 6} {4 6}]} {{z 0} [{0 7} {1 7} {2 7} {3 7} {4 7}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {eh 18 33} {m 35 44} {p 46 56} {ax 57 63} {r 64 79} {ax 81 90} {z 92 111} {sil 113 113}]}
{80 [{sil 0 0} {eh 19 34} {m 35 45} {p 46 56} {ax 58 61} {r 63 79} {ax 80 91} {z 93 111} {sil 113 113}]}
{91 [{sil 0 0} {eh 19 35} {m 36 47} {p 48 56} {ax 57 62} {r 63 80} {ax 81 91} {z 92 111} {sil 112 112}]}
{105 [{sil 0 0} {eh 19 36} {m 37 48} {p 49 57} {ax 58 62} {r 63 81} {ax 82 91} {z 92 111} {sil 112 112}]}
{125 [{sil 0 0} {eh 18 34} {m 35 47} {p 48 55} {ax 56 61} {r 62 84} {ax 85 90} {z 91 110} {sil 110 110}]}

timeAligned = [{{eh 19 34} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{m 35 47} [{0 2} {1 2} {4 2} {2 2} {3 2}]} {{p 48 56} [{0 3} {1 3} {2 3} {4 3} {3 3}]} {{ax 57 62} [{0 4} {2 4} {4 4} {1 4} {3 4}]} {{r 63 80} [{1 5} {2 5} {3 5} {4 5} {0 5}]} {{ax 81 91} [{0 6} {1 6} {2 6} {3 6} {4 6}]} {{z 92 111} [{0 7} {2 7} {3 7} {4 7} {1 7}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 33
i, iTime, newITime, timeStartFrom = 2 1 2 44
i, iTime, newITime, timeStartFrom = 3 2 3 55
i, iTime, newITime, timeStartFrom = 4 3 4 61
i, iTime, newITime, timeStartFrom = 5 4 5 79
i, iTime, newITime, timeStartFrom = 6 5 6 90
combinedVerdict    = [{eh 0} {m 0} {p 0} {ax 0} {r 0} {ax 0} {z 0}]
ruleAlignedVerdict = [{eh 0} {m 0} {p 0} {ax 0} {r 0} {ax 0} {z 0}]

score->
+2 for eh
+2 for m
+2 for p
+2 for ax
+2 for r
+2 for ax
+2 for z
score<-: 19
testPronounce eh good m good p good ax good r good ax good z good
publish->
phonsToAlphas = [{[eh] e} {[m] m} {[p] p} {[ax] e} {[r] r} {[ax] or} {[z] s}]
getVerdict<-:new {e [eh] 0}
getVerdict<-:new {m [m] 0}
getVerdict<-:new {p [p] 0}
getVerdict<-:new {e [ax] 0}
getVerdict<-:new {r [r] 0}
getVerdict<-:new {or [ax] 0}
getVerdict<-:new {s [z] 0}
lettersVerdicts = [{e [eh] 0} {m [m] 0} {p [p] 0} {e [ax] 0} {r [r] 0} {or [ax] 0} {s [z] 0}]
publish<-
{
  "word": "emperors",
  "results": [
    {
      "letters": "e",
      "phonemes": "ɛ",
      "verdict": "good"
    },
    {
      "letters": "m",
      "phonemes": "m",
      "verdict": "good"
    },
    {
      "letters": "p",
      "phonemes": "p",
      "verdict": "good"
    },
    {
      "letters": "e",
      "phonemes": "ə",
      "verdict": "good"
    },
    {
      "letters": "r",
      "phonemes": "ɹ",
      "verdict": "good"
    },
    {
      "letters": "or",
      "phonemes": "ə",
      "verdict": "good"
    },
    {
      "letters": "s",
      "phonemes": "z",
      "verdict": "good"
    }
  ],
  "err": null
}
