Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_d76294d7-3827-4093-869e-9cfc90e73f29 audiofile /Users/test/go/src/Phonemes/audio_clips/names1_tressa.wav word names dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  1.429



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0 1.52 1.52

 start3, duration3, end3 =  0.44000000000000006 0.86 1.3

 Initial start, duration, end =  0 1.52 1.52

 Cut at: start, duration =  0 1.409     guard_end =  1.409 

Running scan for frate = 125
Considering guard jh with value 1 for n ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard sh with value 3.2 for ey ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 5 for m ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard g with value 3 for z ...
candidateGuards = map[g:true]
Picking guard, g

frate, target rule = 125 public <names> = (((sil [((z <any_Cx_n_z_p>) | (<any_Cx_n_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_n_z_p>) | (<any_Cx_n_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_jh_p_z_n> jh)] | [(jh <any_Cx_jh_p_z_n>)]) (n | ((<any_Cx_jh_p_z_n> jh) | (jh <any_Cx_jh_p_z_n>)))) ((([(<any_Vx_sh_jh_ey_noSlide> sh)] | [(sh <any_Vx_sh_jh_ey_noSlide>)]) ([(<any_Cx_sh_jh_m_n> sh)] | [(sh <any_Cx_sh_jh_m_n>)])) (ey | ((<any_Vx_sh_jh_ey_noSlide> sh) | (sh <any_Vx_sh_jh_ey_noSlide>)))) (([(<any_Cx_ch_sh_m> ch)] | [(ch <any_Cx_ch_sh_m>)]) (m | ((<any_Cx_ch_sh_m_z> ch) | (ch <any_Cx_ch_sh_m_z>)))) (([(<any_Cx_g_ch_z_m> g)] | [(g <any_Cx_g_ch_z_m>)]) (z | ((<any_Cx_g_ch_z_m> g) | (g <any_Cx_g_ch_z_m>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_g_z_b> b)] | [(b <any_Cx_g_z_b>)]) sil))
Running scan for frate = 105
Considering guard jh with value 1 for n ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard sh with value 3.2 for ey ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 5 for m ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard g with value 3 for z ...
candidateGuards = map[g:true]
Picking guard, g

frate, target rule = 105 public <names> = (((sil [((z <any_Cx_n_z_p>) | (<any_Cx_n_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_n_z_p>) | (<any_Cx_n_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_jh_p_z_n> jh)] | [(jh <any_Cx_jh_p_z_n>)]) (n | ((<any_Cx_jh_p_z_n> jh) | (jh <any_Cx_jh_p_z_n>)))) ((([(<any_Vx_sh_jh_ey_noSlide> sh)] | [(sh <any_Vx_sh_jh_ey_noSlide>)]) ([(<any_Cx_sh_jh_m_n> sh)] | [(sh <any_Cx_sh_jh_m_n>)])) (ey | ((<any_Vx_sh_jh_ey_noSlide> sh) | (sh <any_Vx_sh_jh_ey_noSlide>)))) (([(<any_Cx_ch_sh_m> ch)] | [(ch <any_Cx_ch_sh_m>)]) (m | ((<any_Cx_ch_sh_m_z> ch) | (ch <any_Cx_ch_sh_m_z>)))) (([(<any_Cx_g_ch_z_m> g)] | [(g <any_Cx_g_ch_z_m>)]) (z | ((<any_Cx_g_ch_z_m> g) | (g <any_Cx_g_ch_z_m>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_g_z_b> b)] | [(b <any_Cx_g_z_b>)]) sil))
Running scan for frate = 91
Considering guard jh with value 1 for n ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard sh with value 3.2 for ey ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 5 for m ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard g with value 3 for z ...
candidateGuards = map[g:true]
Picking guard, g

frate, target rule = 91 public <names> = (((sil [((z <any_Cx_n_z_p>) | (<any_Cx_n_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_n_z_p>) | (<any_Cx_n_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_jh_p_z_n> jh)] | [(jh <any_Cx_jh_p_z_n>)]) (n | ((<any_Cx_jh_p_z_n> jh) | (jh <any_Cx_jh_p_z_n>)))) ((([(<any_Vx_sh_jh_ey_noSlide> sh)] | [(sh <any_Vx_sh_jh_ey_noSlide>)]) ([(<any_Cx_sh_jh_m_n> sh)] | [(sh <any_Cx_sh_jh_m_n>)])) (ey | ((<any_Vx_sh_jh_ey_noSlide> sh) | (sh <any_Vx_sh_jh_ey_noSlide>)))) (([(<any_Cx_ch_sh_m> ch)] | [(ch <any_Cx_ch_sh_m>)]) (m | ((<any_Cx_ch_sh_m_z> ch) | (ch <any_Cx_ch_sh_m_z>)))) (([(<any_Cx_g_ch_z_m> g)] | [(g <any_Cx_g_ch_z_m>)]) (z | ((<any_Cx_g_ch_z_m> g) | (g <any_Cx_g_ch_z_m>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_g_z_thr> thr)] | [(thr <any_Cx_g_z_thr>)]) sil))
Running scan for frate = 80
Considering guard jh with value 1 for n ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard sh with value 3.2 for ey ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 5 for m ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard g with value 3 for z ...
candidateGuards = map[g:true]
Picking guard, g

frate, target rule = 80 public <names> = (((sil [((z <any_Cx_n_z_p>) | (<any_Cx_n_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_n_z_p>) | (<any_Cx_n_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_jh_p_z_n> jh)] | [(jh <any_Cx_jh_p_z_n>)]) (n | ((<any_Cx_jh_p_z_n> jh) | (jh <any_Cx_jh_p_z_n>)))) ((([(<any_Vx_sh_jh_ey_noSlide> sh)] | [(sh <any_Vx_sh_jh_ey_noSlide>)]) ([(<any_Cx_sh_jh_m_n> sh)] | [(sh <any_Cx_sh_jh_m_n>)])) (ey | ((<any_Vx_sh_jh_ey_noSlide> sh) | (sh <any_Vx_sh_jh_ey_noSlide>)))) (([(<any_Cx_ch_sh_m> ch)] | [(ch <any_Cx_ch_sh_m>)]) (m | ((<any_Cx_ch_sh_m_z> ch) | (ch <any_Cx_ch_sh_m_z>)))) (([(<any_Cx_g_ch_z_m> g)] | [(g <any_Cx_g_ch_z_m>)]) (z | ((<any_Cx_g_ch_z_m> g) | (g <any_Cx_g_ch_z_m>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_g_z_v> v)] | [(v <any_Cx_g_z_v>)]) sil))
Running scan for frate = 72
Considering guard jh with value 1 for n ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard sh with value 3.2 for ey ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 5 for m ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard g with value 3 for z ...
candidateGuards = map[g:true]
Picking guard, g

frate, target rule = 72 public <names> = (((sil [((z <any_Cx_n_z_p>) | (<any_Cx_n_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_n_z_p>) | (<any_Cx_n_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_jh_p_z_n> jh)] | [(jh <any_Cx_jh_p_z_n>)]) (n | ((<any_Cx_jh_p_z_n> jh) | (jh <any_Cx_jh_p_z_n>)))) ((([(<any_Vx_sh_jh_ey_noSlide> sh)] | [(sh <any_Vx_sh_jh_ey_noSlide>)]) ([(<any_Cx_sh_jh_m_n> sh)] | [(sh <any_Cx_sh_jh_m_n>)])) (ey | ((<any_Vx_sh_jh_ey_noSlide> sh) | (sh <any_Vx_sh_jh_ey_noSlide>)))) (([(<any_Cx_ch_sh_m> ch)] | [(ch <any_Cx_ch_sh_m>)]) (m | ((<any_Cx_ch_sh_m_z> ch) | (ch <any_Cx_ch_sh_m_z>)))) (([(<any_Cx_g_ch_z_m> g)] | [(g <any_Cx_g_ch_z_m>)]) (z | ((<any_Cx_g_ch_z_m> g) | (g <any_Cx_g_ch_z_m>)))) (([(<any_vowel_noSlide> s)] | [(s <any_vowel_noSlide>)]) ([(<any_Cx_g_z_s> s)] | [(s <any_Cx_g_z_s>)]) sil))

results =
{72 [{sil 0 22} {n 23 33} {ey 34 51} {m 52 57} {z 58 73} {sil 74 91}]}
{80 [{sil 0 27} {n 28 37} {ey 38 57} {m 58 64} {z 65 80} {sil 81 99}]}
{91 [{sil 0 31} {n 32 42} {ey 43 65} {m 66 73} {z 74 92} {sil 93 126}]}
{105 [{sil 0 36} {n 37 48} {ey 49 75} {m 76 85} {z 86 106} {sil 107 147}]}
{125 [{sil 0 40} {n 41 56} {ey 57 87} {m 88 100} {z 101 125} {sil 126 173}]}

normalised results =
{72 [{sil 0 22} {n 32 46} {ey 47 71} {m 72 79} {z 81 101} {sil 103 126}]}
{80 [{sil 0 27} {n 35 46} {ey 48 71} {m 73 80} {z 81 100} {sil 101 124}]}
{91 [{sil 0 31} {n 35 46} {ey 47 71} {m 73 80} {z 81 101} {sil 102 138}]}
{105 [{sil 0 36} {n 35 46} {ey 47 71} {m 72 81} {z 82 101} {sil 102 140}]}
{125 [{sil 0 40} {n 33 45} {ey 46 70} {m 70 80} {z 81 100} {sil 101 138}]}

ruleAligned = [{{n 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ey 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{m 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{z 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {n 32 46} {ey 47 71} {m 72 79} {z 81 101} {sil 103 103}]}
{80 [{sil 0 0} {n 35 46} {ey 48 71} {m 73 80} {z 81 100} {sil 101 101}]}
{91 [{sil 0 0} {n 35 46} {ey 47 71} {m 73 80} {z 81 101} {sil 102 102}]}
{105 [{sil 0 0} {n 35 46} {ey 47 71} {m 72 81} {z 82 101} {sil 102 102}]}
{125 [{sil 0 0} {n 33 45} {ey 46 70} {m 70 80} {z 81 100} {sil 101 101}]}

timeAligned = [{{n 35 46} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ey 47 71} [{0 2} {2 2} {3 2} {4 2} {1 2}]} {{m 72 80} [{0 3} {3 3} {4 3} {1 3} {2 3}]} {{z 81 101} [{0 4} {1 4} {2 4} {4 4} {3 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 45
i, iTime, newITime, timeStartFrom = 2 1 2 70
i, iTime, newITime, timeStartFrom = 3 2 3 79
combinedVerdict    = [{n 0} {ey 0} {m 0} {z 0}]
ruleAlignedVerdict = [{n 0} {ey 0} {m 0} {z 0}]

score->
+2 for n
+2 for ey
+2 for m
+2 for z
score<-: 13
testPronounce n good ey good m good z good
publish->
phonsToAlphas = [{[n] n} {[ey] a} {[m] me} {[z] s}]
getVerdict<-:new {n [n] 0}
getVerdict<-:new {a [ey] 0}
getVerdict<-:new {me [m] 0}
getVerdict<-:new {s [z] 0}
lettersVerdicts = [{n [n] 0} {a [ey] 0} {me [m] 0} {s [z] 0}]
publish<-
{
  "word": "names",
  "results": [
    {
      "letters": "n",
      "phonemes": "n",
      "verdict": "good"
    },
    {
      "letters": "a",
      "phonemes": "eÉª",
      "verdict": "good"
    },
    {
      "letters": "me",
      "phonemes": "m",
      "verdict": "good"
    },
    {
      "letters": "s",
      "phonemes": "z",
      "verdict": "good"
    }
  ],
  "err": null
}
