Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_3124bf97-481b-4412-9fcd-ea20641f9486 audiofile /Users/test/go/src/Phonemes/audio_clips/grass1_rishka.wav word grass dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  1.716813



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.5 0.58 1.08

 start3, duration3, end3 =  0.6 0.38 0.98

 Initial start, duration, end =  0.4 0.68 1.08

 Cut at: start, duration =  0.4 1.1300000000000001     guard_end =  1.5300000000000002 

Running scan for frate = 125
Running scan for frate = 125
Running scan for frate = 125
Running scan for frate = 125
Considering guard z with value 1 for g ...
Considering guard th with value 1 for g ...
candidateGuards = map[th:true z:true]
Picking guard, z

Considering guard y with value 1 for gr ...
Considering guard ng with value 1 for gr ...
Considering guard z with value 1 for gr ...
candidateGuards = map[ng:true y:true z:true]
Picking guard, y

Considering guard ng with value 1 for gr ...
Considering guard y with value 1 for gr ...
Considering guard z with value 1 for gr ...
candidateGuards = map[ng:true y:true z:true]
Picking guard, z

Considering guard z with value 1 for g ...
Considering guard th with value 1 for g ...
candidateGuards = map[th:true z:true]
Picking guard, z

Considering guard ng with value 2 for ae ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 2 for aa ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard z with value 2 for r ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard z with value 2 for r ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard ng with value 1.7999999999999998 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 1.8 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 2 for ae ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 2 for aa ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 1.8 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 125 public <grass> = (((sil [((z <any_Cx_gr_z_p>) | (<any_Cx_gr_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_gr_z_p>) | (<any_Cx_gr_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_z_p_z_gr> z)] | [(z <any_Cx_z_p_z_gr>)]) (gr | ((<any_Cx_z_p_z_gr> z) | (z <any_Cx_z_p_z_gr>)))) ((([(<any_Vx_ng_z_ae_noSlide> ng)] | [(ng <any_Vx_ng_z_ae_noSlide>)]) ([(<any_Cx_ng_z_s_gr> ng)] | [(ng <any_Cx_ng_z_s_gr>)])) (ae | ((<any_Vx_ng_z_ae_noSlide> ng) | (ng <any_Vx_ng_z_ae_noSlide>)))) (([(<any_Cx_ng_ng_s> ng)] | [(ng <any_Cx_ng_ng_s>)]) (s | ((<any_Cx_ng_ng_s> ng) | (ng <any_Cx_ng_ng_s>)))) (([(<any_vowel_noSlide> t)] | [(t <any_vowel_noSlide>)]) ([(<any_Cx_ng_s_t> t)] | [(t <any_Cx_ng_s_t>)]) sil))
Considering guard ng with value 1.7999999999999998 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 125 public <grass> = (((sil [((z <any_Cx_gr_z_p>) | (<any_Cx_gr_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_gr_z_p>) | (<any_Cx_gr_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_y_p_z_gr> y)] | [(y <any_Cx_y_p_z_gr>)]) (gr | ((<any_Cx_y_p_z_gr> y) | (y <any_Cx_y_p_z_gr>)))) ((([(<any_Vx_ng_y_aa_noSlide> ng)] | [(ng <any_Vx_ng_y_aa_noSlide>)]) ([(<any_Cx_ng_y_s_gr> ng)] | [(ng <any_Cx_ng_y_s_gr>)])) (aa | ((<any_Vx_ng_y_aa_noSlide> ng) | (ng <any_Vx_ng_y_aa_noSlide>)))) (([(<any_Cx_ng_ng_s> ng)] | [(ng <any_Cx_ng_ng_s>)]) (s | ((<any_Cx_ng_ng_s> ng) | (ng <any_Cx_ng_ng_s>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_ng_s_f> f)] | [(f <any_Cx_ng_s_f>)]) sil))
frate, target rule = 125 public <grass> = (((sil [((ch <any_Cx_g_ch_p>) | (<any_Cx_g_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_g_ch_p>) | (<any_Cx_g_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_z_p_ch_g_r> z)] | [(z <any_Cx_z_p_ch_g_r>)]) (g | ((<any_Cx_z_p_ch_g_r> z) | (z <any_Cx_z_p_ch_g_r>)))) (([(<any_Cx_z_z_r_g> z)] | [(z <any_Cx_z_z_r_g>)]) (r | ((<any_Cx_z_z_r> z) | (z <any_Cx_z_z_r>)))) ((([(<any_Vx_ng_z_ae_noSlide> ng)] | [(ng <any_Vx_ng_z_ae_noSlide>)]) ([(<any_Cx_ng_z_s_r> ng)] | [(ng <any_Cx_ng_z_s_r>)])) (ae | ((<any_Vx_ng_z_ae_noSlide> ng) | (ng <any_Vx_ng_z_ae_noSlide>)))) (([(<any_Cx_ng_ng_s> ng)] | [(ng <any_Cx_ng_ng_s>)]) (s | ((<any_Cx_ng_ng_s> ng) | (ng <any_Cx_ng_ng_s>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_ng_s_thr> thr)] | [(thr <any_Cx_ng_s_thr>)]) sil))
Running scan for frate = 105
Running scan for frate = 105
Considering guard z with value 1 for gr ...
Considering guard ng with value 1 for gr ...
Considering guard y with value 1 for gr ...
candidateGuards = map[ng:true y:true z:true]
Picking guard, z

frate, target rule = 125 public <grass> = (((sil [((k <any_Cx_g_k_p>) | (<any_Cx_g_k_p> k))] [((k <any_vowel_noSlide>) | (<any_vowel_noSlide> k))]) | (sil p (sil [((k <any_Cx_g_k_p>) | (<any_Cx_g_k_p> k))] [((k <any_vowel_noSlide>) | (<any_vowel_noSlide> k))]))) (([(<any_Cx_z_p_k_g_r> z)] | [(z <any_Cx_z_p_k_g_r>)]) (g | ((<any_Cx_z_p_k_g_r> z) | (z <any_Cx_z_p_k_g_r>)))) (([(<any_Cx_z_z_r_g> z)] | [(z <any_Cx_z_z_r_g>)]) (r | ((<any_Cx_z_z_r> z) | (z <any_Cx_z_z_r>)))) ((([(<any_Vx_ng_z_aa_noSlide> ng)] | [(ng <any_Vx_ng_z_aa_noSlide>)]) ([(<any_Cx_ng_z_s_r> ng)] | [(ng <any_Cx_ng_z_s_r>)])) (aa | ((<any_Vx_ng_z_aa_noSlide> ng) | (ng <any_Vx_ng_z_aa_noSlide>)))) (([(<any_Cx_ng_ng_s> ng)] | [(ng <any_Cx_ng_ng_s>)]) (s | ((<any_Cx_ng_ng_s> ng) | (ng <any_Cx_ng_ng_s>)))) (([(<any_vowel_noSlide> th)] | [(th <any_vowel_noSlide>)]) ([(<any_Cx_ng_s_th> th)] | [(th <any_Cx_ng_s_th>)]) sil))
Considering guard ng with value 1 for gr ...
Considering guard z with value 1 for gr ...
Considering guard y with value 1 for gr ...
candidateGuards = map[ng:true y:true z:true]
Picking guard, ng

Considering guard ng with value 2 for ae ...
candidateGuards = map[ng:true]
Picking guard, ng

Running scan for frate = 105
Considering guard ng with value 1.8 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard th with value 1 for g ...
Considering guard z with value 1 for g ...
candidateGuards = map[th:true z:true]
Picking guard, th

Considering guard ng with value 2 for aa ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 105 public <grass> = (((sil [((z <any_Cx_gr_z_p>) | (<any_Cx_gr_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_gr_z_p>) | (<any_Cx_gr_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_z_p_z_gr> z)] | [(z <any_Cx_z_p_z_gr>)]) (gr | ((<any_Cx_z_p_z_gr> z) | (z <any_Cx_z_p_z_gr>)))) ((([(<any_Vx_ng_z_ae_noSlide> ng)] | [(ng <any_Vx_ng_z_ae_noSlide>)]) ([(<any_Cx_ng_z_s_gr> ng)] | [(ng <any_Cx_ng_z_s_gr>)])) (ae | ((<any_Vx_ng_z_ae_noSlide> ng) | (ng <any_Vx_ng_z_ae_noSlide>)))) (([(<any_Cx_ng_ng_s> ng)] | [(ng <any_Cx_ng_ng_s>)]) (s | ((<any_Cx_ng_ng_s> ng) | (ng <any_Cx_ng_ng_s>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_ng_s_thr> thr)] | [(thr <any_Cx_ng_s_thr>)]) sil))
Running scan for frate = 105
Considering guard z with value 2 for r ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard ng with value 1.7999999999999998 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

Running scan for frate = 91
Considering guard th with value 1 for g ...
Considering guard z with value 1 for g ...
candidateGuards = map[th:true z:true]
Picking guard, z

Considering guard ng with value 2 for ae ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 105 public <grass> = (((sil [((z <any_Cx_gr_z_p>) | (<any_Cx_gr_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_gr_z_p>) | (<any_Cx_gr_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ng_p_z_gr> ng)] | [(ng <any_Cx_ng_p_z_gr>)]) (gr | ((<any_Cx_ng_p_z_gr> ng) | (ng <any_Cx_ng_p_z_gr>)))) ((([(<any_Vx_ng_ng_aa_noSlide> ng)] | [(ng <any_Vx_ng_ng_aa_noSlide>)]) ([(<any_Cx_ng_ng_s_gr> ng)] | [(ng <any_Cx_ng_ng_s_gr>)])) (aa | ((<any_Vx_ng_ng_aa_noSlide> ng) | (ng <any_Vx_ng_ng_aa_noSlide>)))) (([(<any_Cx_ng_ng_s> ng)] | [(ng <any_Cx_ng_ng_s>)]) (s | ((<any_Cx_ng_ng_s> ng) | (ng <any_Cx_ng_ng_s>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_ng_s_hh> hh)] | [(hh <any_Cx_ng_s_hh>)]) sil))
Considering guard y with value 1 for gr ...
Considering guard z with value 1 for gr ...
Considering guard ng with value 1 for gr ...
candidateGuards = map[ng:true y:true z:true]
Picking guard, y

Considering guard z with value 2 for r ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard ng with value 1.8 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 2 for ae ...
candidateGuards = map[ng:true]
Picking guard, ng

Running scan for frate = 91
Considering guard ng with value 2 for aa ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 1.8 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard y with value 1 for gr ...
Considering guard ng with value 1 for gr ...
Considering guard z with value 1 for gr ...
candidateGuards = map[ng:true y:true z:true]
Picking guard, y

Considering guard ng with value 1.7999999999999998 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 105 public <grass> = (((sil [((d <any_Cx_g_d_p>) | (<any_Cx_g_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil p (sil [((d <any_Cx_g_d_p>) | (<any_Cx_g_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_th_p_d_g_r> th)] | [(th <any_Cx_th_p_d_g_r>)]) (g | ((<any_Cx_th_p_d_g_r> th) | (th <any_Cx_th_p_d_g_r>)))) (([(<any_Cx_z_th_r_g> z)] | [(z <any_Cx_z_th_r_g>)]) (r | ((<any_Cx_z_th_r> z) | (z <any_Cx_z_th_r>)))) ((([(<any_Vx_ng_z_ae_noSlide> ng)] | [(ng <any_Vx_ng_z_ae_noSlide>)]) ([(<any_Cx_ng_z_s_r> ng)] | [(ng <any_Cx_ng_z_s_r>)])) (ae | ((<any_Vx_ng_z_ae_noSlide> ng) | (ng <any_Vx_ng_z_ae_noSlide>)))) (([(<any_Cx_ng_ng_s> ng)] | [(ng <any_Cx_ng_ng_s>)]) (s | ((<any_Cx_ng_ng_s> ng) | (ng <any_Cx_ng_ng_s>)))) (([(<any_vowel_noSlide> z)] | [(z <any_vowel_noSlide>)]) ([(<any_Cx_ng_s_z> z)] | [(z <any_Cx_ng_s_z>)]) sil))
frate, target rule = 91 public <grass> = (((sil [((z <any_Cx_gr_z_p>) | (<any_Cx_gr_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_gr_z_p>) | (<any_Cx_gr_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_y_p_z_gr> y)] | [(y <any_Cx_y_p_z_gr>)]) (gr | ((<any_Cx_y_p_z_gr> y) | (y <any_Cx_y_p_z_gr>)))) ((([(<any_Vx_ng_y_ae_noSlide> ng)] | [(ng <any_Vx_ng_y_ae_noSlide>)]) ([(<any_Cx_ng_y_s_gr> ng)] | [(ng <any_Cx_ng_y_s_gr>)])) (ae | ((<any_Vx_ng_y_ae_noSlide> ng) | (ng <any_Vx_ng_y_ae_noSlide>)))) (([(<any_Cx_ng_ng_s> ng)] | [(ng <any_Cx_ng_ng_s>)]) (s | ((<any_Cx_ng_ng_s> ng) | (ng <any_Cx_ng_ng_s>)))) (([(<any_vowel_noSlide> th)] | [(th <any_vowel_noSlide>)]) ([(<any_Cx_ng_s_th> th)] | [(th <any_Cx_ng_s_th>)]) sil))
Considering guard ng with value 2 for aa ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 105 public <grass> = (((sil [((d <any_Cx_g_d_p>) | (<any_Cx_g_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil p (sil [((d <any_Cx_g_d_p>) | (<any_Cx_g_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_z_p_d_g_r> z)] | [(z <any_Cx_z_p_d_g_r>)]) (g | ((<any_Cx_z_p_d_g_r> z) | (z <any_Cx_z_p_d_g_r>)))) (([(<any_Cx_z_z_r_g> z)] | [(z <any_Cx_z_z_r_g>)]) (r | ((<any_Cx_z_z_r> z) | (z <any_Cx_z_z_r>)))) ((([(<any_Vx_ng_z_aa_noSlide> ng)] | [(ng <any_Vx_ng_z_aa_noSlide>)]) ([(<any_Cx_ng_z_s_r> ng)] | [(ng <any_Cx_ng_z_s_r>)])) (aa | ((<any_Vx_ng_z_aa_noSlide> ng) | (ng <any_Vx_ng_z_aa_noSlide>)))) (([(<any_Cx_ng_ng_s> ng)] | [(ng <any_Cx_ng_ng_s>)]) (s | ((<any_Cx_ng_ng_s> ng) | (ng <any_Cx_ng_ng_s>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_ng_s_hh> hh)] | [(hh <any_Cx_ng_s_hh>)]) sil))
Running scan for frate = 91
Running scan for frate = 80
Considering guard ng with value 1.7999999999999998 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

Running scan for frate = 91
frate, target rule = 91 public <grass> = (((sil [((z <any_Cx_gr_z_p>) | (<any_Cx_gr_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_gr_z_p>) | (<any_Cx_gr_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_y_p_z_gr> y)] | [(y <any_Cx_y_p_z_gr>)]) (gr | ((<any_Cx_y_p_z_gr> y) | (y <any_Cx_y_p_z_gr>)))) ((([(<any_Vx_ng_y_aa_noSlide> ng)] | [(ng <any_Vx_ng_y_aa_noSlide>)]) ([(<any_Cx_ng_y_s_gr> ng)] | [(ng <any_Cx_ng_y_s_gr>)])) (aa | ((<any_Vx_ng_y_aa_noSlide> ng) | (ng <any_Vx_ng_y_aa_noSlide>)))) (([(<any_Cx_ng_ng_s> ng)] | [(ng <any_Cx_ng_ng_s>)]) (s | ((<any_Cx_ng_ng_s> ng) | (ng <any_Cx_ng_ng_s>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_ng_s_thr> thr)] | [(thr <any_Cx_ng_s_thr>)]) sil))
Considering guard z with value 1 for g ...
Considering guard th with value 1 for g ...
candidateGuards = map[th:true z:true]
Picking guard, z

Considering guard y with value 1 for gr ...
Considering guard z with value 1 for gr ...
Considering guard ng with value 1 for gr ...
candidateGuards = map[ng:true y:true z:true]
Picking guard, y

Considering guard th with value 1 for g ...
Considering guard z with value 1 for g ...
candidateGuards = map[th:true z:true]
Picking guard, th

Running scan for frate = 80
Considering guard z with value 2 for r ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard z with value 2 for r ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard z with value 1 for gr ...
Considering guard y with value 1 for gr ...
Considering guard ng with value 1 for gr ...
candidateGuards = map[ng:true y:true z:true]
Picking guard, ng

Considering guard ng with value 2 for ae ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 2 for ae ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 2 for aa ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 1.8 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 2 for aa ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 1.8 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 1.7999999999999998 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 1.7999999999999998 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 80 public <grass> = (((sil [((z <any_Cx_gr_z_p>) | (<any_Cx_gr_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_gr_z_p>) | (<any_Cx_gr_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_y_p_z_gr> y)] | [(y <any_Cx_y_p_z_gr>)]) (gr | ((<any_Cx_y_p_z_gr> y) | (y <any_Cx_y_p_z_gr>)))) ((([(<any_Vx_ng_y_ae_noSlide> ng)] | [(ng <any_Vx_ng_y_ae_noSlide>)]) ([(<any_Cx_ng_y_s_gr> ng)] | [(ng <any_Cx_ng_y_s_gr>)])) (ae | ((<any_Vx_ng_y_ae_noSlide> ng) | (ng <any_Vx_ng_y_ae_noSlide>)))) (([(<any_Cx_ng_ng_s> ng)] | [(ng <any_Cx_ng_ng_s>)]) (s | ((<any_Cx_ng_ng_s> ng) | (ng <any_Cx_ng_ng_s>)))) (([(<any_vowel_noSlide> ch)] | [(ch <any_vowel_noSlide>)]) ([(<any_Cx_ng_s_ch> ch)] | [(ch <any_Cx_ng_s_ch>)]) sil))
frate, target rule = 91 public <grass> = (((sil [((d <any_Cx_g_d_p>) | (<any_Cx_g_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil p (sil [((d <any_Cx_g_d_p>) | (<any_Cx_g_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_z_p_d_g_r> z)] | [(z <any_Cx_z_p_d_g_r>)]) (g | ((<any_Cx_z_p_d_g_r> z) | (z <any_Cx_z_p_d_g_r>)))) (([(<any_Cx_z_z_r_g> z)] | [(z <any_Cx_z_z_r_g>)]) (r | ((<any_Cx_z_z_r> z) | (z <any_Cx_z_z_r>)))) ((([(<any_Vx_ng_z_ae_noSlide> ng)] | [(ng <any_Vx_ng_z_ae_noSlide>)]) ([(<any_Cx_ng_z_s_r> ng)] | [(ng <any_Cx_ng_z_s_r>)])) (ae | ((<any_Vx_ng_z_ae_noSlide> ng) | (ng <any_Vx_ng_z_ae_noSlide>)))) (([(<any_Cx_ng_ng_s> ng)] | [(ng <any_Cx_ng_ng_s>)]) (s | ((<any_Cx_ng_ng_s> ng) | (ng <any_Cx_ng_ng_s>)))) (([(<any_vowel_noSlide> th)] | [(th <any_vowel_noSlide>)]) ([(<any_Cx_ng_s_th> th)] | [(th <any_Cx_ng_s_th>)]) sil))
frate, target rule = 80 public <grass> = (((sil [((z <any_Cx_gr_z_p>) | (<any_Cx_gr_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_gr_z_p>) | (<any_Cx_gr_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ng_p_z_gr> ng)] | [(ng <any_Cx_ng_p_z_gr>)]) (gr | ((<any_Cx_ng_p_z_gr> ng) | (ng <any_Cx_ng_p_z_gr>)))) ((([(<any_Vx_ng_ng_aa_noSlide> ng)] | [(ng <any_Vx_ng_ng_aa_noSlide>)]) ([(<any_Cx_ng_ng_s_gr> ng)] | [(ng <any_Cx_ng_ng_s_gr>)])) (aa | ((<any_Vx_ng_ng_aa_noSlide> ng) | (ng <any_Vx_ng_ng_aa_noSlide>)))) (([(<any_Cx_ng_ng_s> ng)] | [(ng <any_Cx_ng_ng_s>)]) (s | ((<any_Cx_ng_ng_s> ng) | (ng <any_Cx_ng_ng_s>)))) (([(<any_vowel_noSlide> t)] | [(t <any_vowel_noSlide>)]) ([(<any_Cx_ng_s_t> t)] | [(t <any_Cx_ng_s_t>)]) sil))
frate, target rule = 91 public <grass> = (((sil [((d <any_Cx_g_d_p>) | (<any_Cx_g_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil p (sil [((d <any_Cx_g_d_p>) | (<any_Cx_g_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_th_p_d_g_r> th)] | [(th <any_Cx_th_p_d_g_r>)]) (g | ((<any_Cx_th_p_d_g_r> th) | (th <any_Cx_th_p_d_g_r>)))) (([(<any_Cx_z_th_r_g> z)] | [(z <any_Cx_z_th_r_g>)]) (r | ((<any_Cx_z_th_r> z) | (z <any_Cx_z_th_r>)))) ((([(<any_Vx_ng_z_aa_noSlide> ng)] | [(ng <any_Vx_ng_z_aa_noSlide>)]) ([(<any_Cx_ng_z_s_r> ng)] | [(ng <any_Cx_ng_z_s_r>)])) (aa | ((<any_Vx_ng_z_aa_noSlide> ng) | (ng <any_Vx_ng_z_aa_noSlide>)))) (([(<any_Cx_ng_ng_s> ng)] | [(ng <any_Cx_ng_ng_s>)]) (s | ((<any_Cx_ng_ng_s> ng) | (ng <any_Cx_ng_ng_s>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_ng_s_thr> thr)] | [(thr <any_Cx_ng_s_thr>)]) sil))
Running scan for frate = 72
Running scan for frate = 80
Running scan for frate = 72
Running scan for frate = 80
Considering guard ng with value 1 for gr ...
Considering guard y with value 1 for gr ...
Considering guard z with value 1 for gr ...
candidateGuards = map[ng:true y:true z:true]
Picking guard, ng

Considering guard ng with value 2 for ae ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard th with value 1 for g ...
Considering guard z with value 1 for g ...
candidateGuards = map[th:true z:true]
Picking guard, th

Considering guard th with value 1 for g ...
Considering guard z with value 1 for g ...
candidateGuards = map[th:true z:true]
Picking guard, z

Considering guard ng with value 1 for gr ...
Considering guard y with value 1 for gr ...
Considering guard z with value 1 for gr ...
candidateGuards = map[ng:true y:true z:true]
Picking guard, ng

Considering guard ng with value 1.8 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard z with value 2 for r ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard z with value 2 for r ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard ng with value 2 for aa ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 2 for aa ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 72 public <grass> = (((sil [((z <any_Cx_gr_z_p>) | (<any_Cx_gr_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_gr_z_p>) | (<any_Cx_gr_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ng_p_z_gr> ng)] | [(ng <any_Cx_ng_p_z_gr>)]) (gr | ((<any_Cx_ng_p_z_gr> ng) | (ng <any_Cx_ng_p_z_gr>)))) ((([(<any_Vx_ng_ng_ae_noSlide> ng)] | [(ng <any_Vx_ng_ng_ae_noSlide>)]) ([(<any_Cx_ng_ng_s_gr> ng)] | [(ng <any_Cx_ng_ng_s_gr>)])) (ae | ((<any_Vx_ng_ng_ae_noSlide> ng) | (ng <any_Vx_ng_ng_ae_noSlide>)))) (([(<any_Cx_ng_ng_s> ng)] | [(ng <any_Cx_ng_ng_s>)]) (s | ((<any_Cx_ng_ng_s> ng) | (ng <any_Cx_ng_ng_s>)))) (([(<any_vowel_noSlide> ch)] | [(ch <any_vowel_noSlide>)]) ([(<any_Cx_ng_s_ch> ch)] | [(ch <any_Cx_ng_s_ch>)]) sil))
Considering guard ng with value 2 for ae ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 1.7999999999999998 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 1.8 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 1.7999999999999998 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 72 public <grass> = (((sil [((z <any_Cx_gr_z_p>) | (<any_Cx_gr_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_gr_z_p>) | (<any_Cx_gr_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ng_p_z_gr> ng)] | [(ng <any_Cx_ng_p_z_gr>)]) (gr | ((<any_Cx_ng_p_z_gr> ng) | (ng <any_Cx_ng_p_z_gr>)))) ((([(<any_Vx_ng_ng_aa_noSlide> ng)] | [(ng <any_Vx_ng_ng_aa_noSlide>)]) ([(<any_Cx_ng_ng_s_gr> ng)] | [(ng <any_Cx_ng_ng_s_gr>)])) (aa | ((<any_Vx_ng_ng_aa_noSlide> ng) | (ng <any_Vx_ng_ng_aa_noSlide>)))) (([(<any_Cx_ng_ng_s> ng)] | [(ng <any_Cx_ng_ng_s>)]) (s | ((<any_Cx_ng_ng_s> ng) | (ng <any_Cx_ng_ng_s>)))) (([(<any_vowel_noSlide> ch)] | [(ch <any_vowel_noSlide>)]) ([(<any_Cx_ng_s_ch> ch)] | [(ch <any_Cx_ng_s_ch>)]) sil))
frate, target rule = 80 public <grass> = (((sil [((jh <any_Cx_g_jh_p>) | (<any_Cx_g_jh_p> jh))] [((jh <any_vowel_noSlide>) | (<any_vowel_noSlide> jh))]) | (sil p (sil [((jh <any_Cx_g_jh_p>) | (<any_Cx_g_jh_p> jh))] [((jh <any_vowel_noSlide>) | (<any_vowel_noSlide> jh))]))) (([(<any_Cx_z_p_jh_g_r> z)] | [(z <any_Cx_z_p_jh_g_r>)]) (g | ((<any_Cx_z_p_jh_g_r> z) | (z <any_Cx_z_p_jh_g_r>)))) (([(<any_Cx_z_z_r_g> z)] | [(z <any_Cx_z_z_r_g>)]) (r | ((<any_Cx_z_z_r> z) | (z <any_Cx_z_z_r>)))) ((([(<any_Vx_ng_z_ae_noSlide> ng)] | [(ng <any_Vx_ng_z_ae_noSlide>)]) ([(<any_Cx_ng_z_s_r> ng)] | [(ng <any_Cx_ng_z_s_r>)])) (ae | ((<any_Vx_ng_z_ae_noSlide> ng) | (ng <any_Vx_ng_z_ae_noSlide>)))) (([(<any_Cx_ng_ng_s> ng)] | [(ng <any_Cx_ng_ng_s>)]) (s | ((<any_Cx_ng_ng_s> ng) | (ng <any_Cx_ng_ng_s>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_ng_s_thr> thr)] | [(thr <any_Cx_ng_s_thr>)]) sil))
frate, target rule = 80 public <grass> = (((sil [((d <any_Cx_g_d_p>) | (<any_Cx_g_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil p (sil [((d <any_Cx_g_d_p>) | (<any_Cx_g_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_th_p_d_g_r> th)] | [(th <any_Cx_th_p_d_g_r>)]) (g | ((<any_Cx_th_p_d_g_r> th) | (th <any_Cx_th_p_d_g_r>)))) (([(<any_Cx_z_th_r_g> z)] | [(z <any_Cx_z_th_r_g>)]) (r | ((<any_Cx_z_th_r> z) | (z <any_Cx_z_th_r>)))) ((([(<any_Vx_ng_z_aa_noSlide> ng)] | [(ng <any_Vx_ng_z_aa_noSlide>)]) ([(<any_Cx_ng_z_s_r> ng)] | [(ng <any_Cx_ng_z_s_r>)])) (aa | ((<any_Vx_ng_z_aa_noSlide> ng) | (ng <any_Vx_ng_z_aa_noSlide>)))) (([(<any_Cx_ng_ng_s> ng)] | [(ng <any_Cx_ng_ng_s>)]) (s | ((<any_Cx_ng_ng_s> ng) | (ng <any_Cx_ng_ng_s>)))) (([(<any_vowel_noSlide> th)] | [(th <any_vowel_noSlide>)]) ([(<any_Cx_ng_s_th> th)] | [(th <any_Cx_ng_s_th>)]) sil))
Running scan for frate = 72
Running scan for frate = 72
Considering guard th with value 1 for g ...
Considering guard z with value 1 for g ...
candidateGuards = map[th:true z:true]
Picking guard, th

Considering guard th with value 1 for g ...
Considering guard z with value 1 for g ...
candidateGuards = map[th:true z:true]
Picking guard, th

Considering guard z with value 2 for r ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard z with value 2 for r ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard ng with value 2 for ae ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 1.8 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 2 for aa ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 72 public <grass> = (((sil [((d <any_Cx_g_d_p>) | (<any_Cx_g_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil p (sil [((d <any_Cx_g_d_p>) | (<any_Cx_g_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_th_p_d_g_r> th)] | [(th <any_Cx_th_p_d_g_r>)]) (g | ((<any_Cx_th_p_d_g_r> th) | (th <any_Cx_th_p_d_g_r>)))) (([(<any_Cx_z_th_r_g> z)] | [(z <any_Cx_z_th_r_g>)]) (r | ((<any_Cx_z_th_r> z) | (z <any_Cx_z_th_r>)))) ((([(<any_Vx_ng_z_ae_noSlide> ng)] | [(ng <any_Vx_ng_z_ae_noSlide>)]) ([(<any_Cx_ng_z_s_r> ng)] | [(ng <any_Cx_ng_z_s_r>)])) (ae | ((<any_Vx_ng_z_ae_noSlide> ng) | (ng <any_Vx_ng_z_ae_noSlide>)))) (([(<any_Cx_ng_ng_s> ng)] | [(ng <any_Cx_ng_ng_s>)]) (s | ((<any_Cx_ng_ng_s> ng) | (ng <any_Cx_ng_ng_s>)))) (([(<any_vowel_noSlide> sh)] | [(sh <any_vowel_noSlide>)]) ([(<any_Cx_ng_s_sh> sh)] | [(sh <any_Cx_ng_s_sh>)]) sil))
Considering guard ng with value 1.7999999999999998 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 72 public <grass> = (((sil [((k <any_Cx_g_k_p>) | (<any_Cx_g_k_p> k))] [((k <any_vowel_noSlide>) | (<any_vowel_noSlide> k))]) | (sil p (sil [((k <any_Cx_g_k_p>) | (<any_Cx_g_k_p> k))] [((k <any_vowel_noSlide>) | (<any_vowel_noSlide> k))]))) (([(<any_Cx_th_p_k_g_r> th)] | [(th <any_Cx_th_p_k_g_r>)]) (g | ((<any_Cx_th_p_k_g_r> th) | (th <any_Cx_th_p_k_g_r>)))) (([(<any_Cx_z_th_r_g> z)] | [(z <any_Cx_z_th_r_g>)]) (r | ((<any_Cx_z_th_r> z) | (z <any_Cx_z_th_r>)))) ((([(<any_Vx_ng_z_aa_noSlide> ng)] | [(ng <any_Vx_ng_z_aa_noSlide>)]) ([(<any_Cx_ng_z_s_r> ng)] | [(ng <any_Cx_ng_z_s_r>)])) (aa | ((<any_Vx_ng_z_aa_noSlide> ng) | (ng <any_Vx_ng_z_aa_noSlide>)))) (([(<any_Cx_ng_ng_s> ng)] | [(ng <any_Cx_ng_ng_s>)]) (s | ((<any_Cx_ng_ng_s> ng) | (ng <any_Cx_ng_ng_s>)))) (([(<any_vowel_noSlide> t)] | [(t <any_vowel_noSlide>)]) ([(<any_Cx_ng_s_t> t)] | [(t <any_Cx_ng_s_t>)]) sil))

results =
{72 [{sil 0 10} {g 11 16} {r 17 21} {ae 22 39} {ng 40 42} {s 43 63} {sil 64 80}]}
{80 [{sil 0 12} {g 13 18} {r 19 23} {ae 24 44} {ng 45 47} {s 48 70} {sil 71 87}]}
{91 [{sil 0 13} {g 14 20} {r 21 28} {ae 29 52} {ng 53 55} {s 56 79} {sil 80 101}]}
{105 [{sil 0 16} {g 17 24} {r 25 32} {ae 33 60} {ng 61 63} {s 64 90} {sil 91 117}]}
{125 [{sil 0 19} {g 20 25} {r 26 36} {ae 37 70} {ng 71 73} {s 74 105} {sil 106 138}]}

normalised results =
{72 [{sil 0 10} {g 15 22} {r 24 29} {ae 31 54} {ng 56 56} {s 60 88} {sil 89 111}]}
{80 [{sil 0 12} {g 16 23} {r 24 29} {ae 30 55} {ng 56 56} {s 60 88} {sil 89 109}]}
{91 [{sil 0 13} {g 15 22} {r 23 31} {ae 32 57} {ng 58 58} {s 62 87} {sil 88 111}]}
{105 [{sil 0 16} {g 16 23} {r 24 30} {ae 31 57} {ng 58 58} {s 61 86} {sil 87 111}]}
{125 [{sil 0 19} {g 16 20} {r 21 29} {ae 30 56} {ng 57 57} {s 59 84} {sil 85 110}]}

ruleAligned = [{{g 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{r 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{aa 2} []} {{ae 3} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{s 0} [{0 5} {1 5} {2 5} {3 5} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {g 15 22} {r 24 29} {ae 31 54} {ng 56 56} {s 60 88} {sil 89 89}]}
{80 [{sil 0 0} {g 16 23} {r 24 29} {ae 30 55} {ng 56 56} {s 60 88} {sil 89 89}]}
{91 [{sil 0 0} {g 15 22} {r 23 31} {ae 32 57} {ng 58 58} {s 62 87} {sil 88 88}]}
{105 [{sil 0 0} {g 16 23} {r 24 30} {ae 31 57} {ng 58 58} {s 61 86} {sil 87 87}]}
{125 [{sil 0 0} {g 16 20} {r 21 29} {ae 30 56} {ng 57 57} {s 59 84} {sil 85 85}]}

timeAligned = [{{g 16 22} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{r 24 29} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{ae 31 56} [{0 3} {1 3} {3 3} {4 3} {2 3}]} {{s 60 87} [{0 5} {1 5} {4 5} {3 5} {2 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 20
i, iTime, newITime, timeStartFrom = 2 1 -1 29
i, iTime, newITime, timeStartFrom = 3 1 2 29
i, iTime, newITime, timeStartFrom = 4 2 3 54
combinedVerdict    = [{g 0} {r 0} {aa 2} {ae 3} {s 0}]
ruleAlignedVerdict = [{g 0} {r 0} {aa 2} {ae 3} {s 0}]

score->
+2 for g
+2 for r
-2 for aa
-2 for ae
+2 for s
score<-: 2

results =
{72 [{sil 0 12} {gr 13 19} {ae 20 39} {ng 40 42} {s 43 63} {sil 64 80}]}
{80 [{sil 0 14} {gr 15 22} {ae 23 44} {ng 45 47} {s 48 70} {sil 71 87}]}
{91 [{sil 0 13} {g 14 21} {y 22 27} {ae 28 52} {ng 53 55} {s 56 79} {sil 80 101}]}
{105 [{sil 0 16} {gr 17 30} {ae 31 60} {ng 61 63} {s 64 90} {sil 91 117}]}
{125 [{sil 0 19} {gr 20 32} {ae 33 70} {ng 71 73} {s 74 105} {sil 106 138}]}

normalised results =
{72 [{sil 0 12} {gr 18 26} {ae 28 54} {ng 56 56} {s 60 88} {sil 89 111}]}
{80 [{sil 0 14} {gr 19 28} {ae 29 55} {ng 56 56} {s 60 88} {sil 89 109}]}
{91 [{sil 0 13} {g 15 23} {y 24 30} {ae 31 57} {ng 58 58} {s 62 87} {sil 88 111}]}
{105 [{sil 0 16} {gr 16 29} {ae 30 57} {ng 58 58} {s 61 86} {sil 87 111}]}
{125 [{sil 0 19} {gr 16 26} {ae 26 56} {ng 57 57} {s 59 84} {sil 85 110}]}

ruleAligned = [{{gr 0} [{0 1} {1 1} {3 1} {4 1}]} {{aa 2} []} {{ae 3} [{0 2} {1 2} {2 3} {3 2} {4 2}]} {{s 0} [{0 4} {1 4} {2 5} {3 4} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {gr 18 26} {ae 28 54} {ng 56 56} {s 60 88} {sil 89 89}]}
{80 [{sil 0 0} {gr 19 28} {ae 29 55} {ng 56 56} {s 60 88} {sil 89 89}]}
{91 [{sil 0 0} {g 15 23} {y 24 30} {ae 31 57} {ng 58 58} {s 62 87} {sil 88 88}]}
{105 [{sil 0 0} {gr 16 29} {ae 30 57} {ng 58 58} {s 61 86} {sil 87 87}]}
{125 [{sil 0 0} {gr 16 26} {ae 26 56} {ng 57 57} {s 59 84} {sil 85 85}]}

timeAligned = [{{gr 18 26} [{0 1} {3 1} {4 1} {1 1}]} {{ae 29 56} [{0 2} {1 2} {4 2} {3 2} {2 3}]} {{s 60 87} [{0 4} {1 4} {4 4} {3 4} {2 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 -1 26
i, iTime, newITime, timeStartFrom = 2 0 1 26
i, iTime, newITime, timeStartFrom = 3 1 2 54
combinedVerdict    = [{gr 0} {aa 2} {ae 3} {s 0}]
ruleAlignedVerdict = [{gr 0} {aa 2} {ae 3} {s 0}]

score->
+2 for gr
-2 for aa
-2 for ae
+2 for s
score<-: 0

results =
{72 [{sil 0 12} {gr 13 19} {ae 20 43} {s 44 63} {sil 64 80}]}
{80 [{sil 0 14} {gr 15 22} {ae 23 48} {s 49 70} {sil 71 87}]}
{91 [{sil 0 13} {g 14 21} {y 22 27} {ae 28 55} {s 56 79} {sil 80 101}]}
{105 [{sil 0 16} {gr 17 30} {ae 31 63} {s 64 90} {sil 91 117}]}
{125 [{sil 0 19} {gr 20 32} {ae 33 73} {s 74 105} {sil 106 138}]}

normalised results =
{72 [{sil 0 12} {gr 18 26} {ae 28 60} {s 61 88} {sil 89 111}]}
{80 [{sil 0 14} {gr 19 28} {ae 29 60} {s 61 88} {sil 89 109}]}
{91 [{sil 0 13} {g 15 23} {y 24 30} {ae 31 60} {s 62 87} {sil 88 111}]}
{105 [{sil 0 16} {gr 16 29} {ae 30 60} {s 61 86} {sil 87 111}]}
{125 [{sil 0 19} {gr 16 26} {ae 26 58} {s 59 84} {sil 85 110}]}

ruleAligned = [{{gr 0} [{0 1} {1 1} {3 1} {4 1}]} {{ae 0} [{0 2} {1 2} {2 3} {3 2} {4 2}]} {{s 0} [{0 3} {1 3} {2 4} {3 3} {4 3}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {gr 18 26} {ae 28 60} {s 61 88} {sil 89 89}]}
{80 [{sil 0 0} {gr 19 28} {ae 29 60} {s 61 88} {sil 89 89}]}
{91 [{sil 0 0} {g 15 23} {y 24 30} {ae 31 60} {s 62 87} {sil 88 88}]}
{105 [{sil 0 0} {gr 16 29} {ae 30 60} {s 61 86} {sil 87 87}]}
{125 [{sil 0 0} {gr 16 26} {ae 26 58} {s 59 84} {sil 85 85}]}

timeAligned = [{{gr 18 26} [{0 1} {3 1} {4 1} {1 1}]} {{ae 29 60} [{0 2} {1 2} {4 2} {3 2} {2 3}]} {{s 61 87} [{0 3} {1 3} {3 3} {4 3} {2 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 26
i, iTime, newITime, timeStartFrom = 2 1 2 58
combinedVerdict    = [{gr 0} {ae 0} {s 0}]
ruleAlignedVerdict = [{gr 0} {ae 0} {s 0}]

score->
+2 for gr
+2 for ae
+2 for s
score<-: 11

results =
{72 [{sil 0 10} {g 11 16} {r 17 21} {ae 22 43} {s 44 63} {sil 64 80}]}
{80 [{sil 0 12} {g 13 18} {r 19 23} {ae 24 48} {s 49 70} {sil 71 87}]}
{91 [{sil 0 13} {g 14 20} {r 21 28} {ae 29 55} {s 56 79} {sil 80 101}]}
{105 [{sil 0 16} {g 17 24} {r 25 32} {ae 33 63} {s 64 90} {sil 91 117}]}
{125 [{sil 0 19} {g 20 25} {r 26 36} {ae 37 73} {s 74 105} {sil 106 138}]}

normalised results =
{72 [{sil 0 10} {g 15 22} {r 24 29} {ae 31 60} {s 61 88} {sil 89 111}]}
{80 [{sil 0 12} {g 16 23} {r 24 29} {ae 30 60} {s 61 88} {sil 89 109}]}
{91 [{sil 0 13} {g 15 22} {r 23 31} {ae 32 60} {s 62 87} {sil 88 111}]}
{105 [{sil 0 16} {g 16 23} {r 24 30} {ae 31 60} {s 61 86} {sil 87 111}]}
{125 [{sil 0 19} {g 16 20} {r 21 29} {ae 30 58} {s 59 84} {sil 85 110}]}

ruleAligned = [{{g 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{r 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{ae 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{s 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {g 15 22} {r 24 29} {ae 31 60} {s 61 88} {sil 89 89}]}
{80 [{sil 0 0} {g 16 23} {r 24 29} {ae 30 60} {s 61 88} {sil 89 89}]}
{91 [{sil 0 0} {g 15 22} {r 23 31} {ae 32 60} {s 62 87} {sil 88 88}]}
{105 [{sil 0 0} {g 16 23} {r 24 30} {ae 31 60} {s 61 86} {sil 87 87}]}
{125 [{sil 0 0} {g 16 20} {r 21 29} {ae 30 58} {s 59 84} {sil 85 85}]}

timeAligned = [{{g 16 22} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{r 24 29} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{ae 31 60} [{0 3} {1 3} {3 3} {4 3} {2 3}]} {{s 61 87} [{0 4} {1 4} {3 4} {4 4} {2 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 20
i, iTime, newITime, timeStartFrom = 2 1 2 29
i, iTime, newITime, timeStartFrom = 3 2 3 58
combinedVerdict    = [{g 0} {r 0} {ae 0} {s 0}]
ruleAlignedVerdict = [{g 0} {r 0} {ae 0} {s 0}]

score->
+2 for g
+2 for r
+2 for ae
+2 for s
score<-: 13
testPronounce g good r good ae good s good
publish->
phonsToAlphas = [{[g] g} {[r] r} {[ae] a} {[s] ss}]
getVerdict<-:new {g [g] 0}
getVerdict<-:new {r [r] 0}
getVerdict<-:new {a [ae] 0}
getVerdict<-:new {ss [s] 0}
lettersVerdicts = [{g [g] 0} {r [r] 0} {a [ae] 0} {ss [s] 0}]
publish<-
{
  "word": "grass",
  "results": [
    {
      "letters": "g",
      "phonemes": "g",
      "verdict": "good"
    },
    {
      "letters": "r",
      "phonemes": "ɹ",
      "verdict": "good"
    },
    {
      "letters": "a",
      "phonemes": "æ",
      "verdict": "good"
    },
    {
      "letters": "ss",
      "phonemes": "s",
      "verdict": "good"
    }
  ],
  "err": null
}
