Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_95de30fa-3c3b-4eec-a7b5-165cc05684f9 audiofile /Users/test/go/src/Phonemes/audio_clips/hardly1_tomo.wav word hardly dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  1.312188



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.26 0.7999999999999999 1.06

 start3, duration3, end3 =  0.26 0.76 1.02

 Initial start, duration, end =  0.16 0.9 1.06

 Cut at: start, duration =  0.16 1.132188     guard_end =  1.292188 

Running scan for frate = 125
Considering guard z with value 1 for hh ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard ch with value 8 for aa ...
Considering guard ng with value 8 for aa ...
Considering guard zh with value 8 for aa ...
Considering guard sh with value 8 for aa ...
Considering guard s with value 8 for aa ...
candidateGuards = map[ch:true ng:true s:true sh:true zh:true]
Picking guard, ch

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 125 public <hardly> = (((sil [((b <any_Cx_hh_b_b>) | (<any_Cx_hh_b_b> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]) | (sil b (sil [((b <any_Cx_hh_b_b>) | (<any_Cx_hh_b_b> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]))) (([(<any_Cx_z_b_b_hh> z)] | [(z <any_Cx_z_b_b_hh>)]) (hh | ((<any_Cx_z_b_b_hh> z) | (z <any_Cx_z_b_b_hh>)))) ((([(<any_Vx_ch_z_aa_noSlide> ch)] | [(ch <any_Vx_ch_z_aa_noSlide>)]) ([(<any_Cx_ch_z_d_hh> ch)] | [(ch <any_Cx_ch_z_d_hh>)])) (aa | ((<any_Vx_ch_z_aa_noSlide> ch) | (ch <any_Vx_ch_z_aa_noSlide>)))) (([(<any_Cx_sh_ch_d_l> sh)] | [(sh <any_Cx_sh_ch_d_l>)]) (d | ((<any_Cx_sh_ch_d_l> sh) | (sh <any_Cx_sh_ch_d_l>)))) (([(<any_Cx_sh_sh_l_d> sh)] | [(sh <any_Cx_sh_sh_l_d>)]) (l | ((<any_Cx_sh_sh_l_d> sh) | (sh <any_Cx_sh_sh_l_d>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_iy_m> m)] | [(m <any_Cx_sh_iy_m>)]) ([(<any_Vx_sh_iy_m> m)] | [(m <any_Vx_sh_iy_m>)]) sil))
Running scan for frate = 105
Considering guard z with value 1 for hh ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard ch with value 8 for aa ...
Considering guard s with value 8 for aa ...
Considering guard sh with value 8 for aa ...
Considering guard zh with value 8 for aa ...
Considering guard ng with value 8 for aa ...
candidateGuards = map[ch:true ng:true s:true sh:true zh:true]
Picking guard, zh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 105 public <hardly> = (((sil [((iy <any_Cx_hh_iy_b>) | (<any_Cx_hh_iy_b> iy))] [((iy <any_vowel_noSlide>) | (<any_vowel_noSlide> iy))]) | (sil b (sil [((iy <any_Cx_hh_iy_b>) | (<any_Cx_hh_iy_b> iy))] [((iy <any_vowel_noSlide>) | (<any_vowel_noSlide> iy))]))) (([(<any_Cx_z_b_iy_hh> z)] | [(z <any_Cx_z_b_iy_hh>)]) (hh | ((<any_Cx_z_b_iy_hh> z) | (z <any_Cx_z_b_iy_hh>)))) ((([(<any_Vx_zh_z_aa_noSlide> zh)] | [(zh <any_Vx_zh_z_aa_noSlide>)]) ([(<any_Cx_zh_z_d_hh> zh)] | [(zh <any_Cx_zh_z_d_hh>)])) (aa | ((<any_Vx_zh_z_aa_noSlide> zh) | (zh <any_Vx_zh_z_aa_noSlide>)))) (([(<any_Cx_sh_zh_d_l> sh)] | [(sh <any_Cx_sh_zh_d_l>)]) (d | ((<any_Cx_sh_zh_d_l> sh) | (sh <any_Cx_sh_zh_d_l>)))) (([(<any_Cx_sh_sh_l_d> sh)] | [(sh <any_Cx_sh_sh_l_d>)]) (l | ((<any_Cx_sh_sh_l_d> sh) | (sh <any_Cx_sh_sh_l_d>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_iy_m> m)] | [(m <any_Cx_sh_iy_m>)]) ([(<any_Vx_sh_iy_m> m)] | [(m <any_Vx_sh_iy_m>)]) sil))
Running scan for frate = 91
Considering guard z with value 1 for hh ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard ng with value 8 for aa ...
Considering guard ch with value 8 for aa ...
Considering guard s with value 8 for aa ...
Considering guard sh with value 8 for aa ...
Considering guard zh with value 8 for aa ...
candidateGuards = map[ch:true ng:true s:true sh:true zh:true]
Picking guard, ng

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 91 public <hardly> = (((sil [((b <any_Cx_hh_b_b>) | (<any_Cx_hh_b_b> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]) | (sil b (sil [((b <any_Cx_hh_b_b>) | (<any_Cx_hh_b_b> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]))) (([(<any_Cx_z_b_b_hh> z)] | [(z <any_Cx_z_b_b_hh>)]) (hh | ((<any_Cx_z_b_b_hh> z) | (z <any_Cx_z_b_b_hh>)))) ((([(<any_Vx_ng_z_aa_noSlide> ng)] | [(ng <any_Vx_ng_z_aa_noSlide>)]) ([(<any_Cx_ng_z_d_hh> ng)] | [(ng <any_Cx_ng_z_d_hh>)])) (aa | ((<any_Vx_ng_z_aa_noSlide> ng) | (ng <any_Vx_ng_z_aa_noSlide>)))) (([(<any_Cx_sh_ng_d_l> sh)] | [(sh <any_Cx_sh_ng_d_l>)]) (d | ((<any_Cx_sh_ng_d_l> sh) | (sh <any_Cx_sh_ng_d_l>)))) (([(<any_Cx_sh_sh_l_d> sh)] | [(sh <any_Cx_sh_sh_l_d>)]) (l | ((<any_Cx_sh_sh_l_d> sh) | (sh <any_Cx_sh_sh_l_d>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_iy_thr> thr)] | [(thr <any_Cx_sh_iy_thr>)]) ([(<any_Vx_sh_iy_thr> thr)] | [(thr <any_Vx_sh_iy_thr>)]) sil))
Running scan for frate = 80
Considering guard z with value 1 for hh ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard ch with value 8 for aa ...
Considering guard zh with value 8 for aa ...
Considering guard s with value 8 for aa ...
Considering guard sh with value 8 for aa ...
Considering guard ng with value 8 for aa ...
candidateGuards = map[ch:true ng:true s:true sh:true zh:true]
Picking guard, ng

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 80 public <hardly> = (((sil [((b <any_Cx_hh_b_b>) | (<any_Cx_hh_b_b> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]) | (sil b (sil [((b <any_Cx_hh_b_b>) | (<any_Cx_hh_b_b> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]))) (([(<any_Cx_z_b_b_hh> z)] | [(z <any_Cx_z_b_b_hh>)]) (hh | ((<any_Cx_z_b_b_hh> z) | (z <any_Cx_z_b_b_hh>)))) ((([(<any_Vx_ng_z_aa_noSlide> ng)] | [(ng <any_Vx_ng_z_aa_noSlide>)]) ([(<any_Cx_ng_z_d_hh> ng)] | [(ng <any_Cx_ng_z_d_hh>)])) (aa | ((<any_Vx_ng_z_aa_noSlide> ng) | (ng <any_Vx_ng_z_aa_noSlide>)))) (([(<any_Cx_sh_ng_d_l> sh)] | [(sh <any_Cx_sh_ng_d_l>)]) (d | ((<any_Cx_sh_ng_d_l> sh) | (sh <any_Cx_sh_ng_d_l>)))) (([(<any_Cx_sh_sh_l_d> sh)] | [(sh <any_Cx_sh_sh_l_d>)]) (l | ((<any_Cx_sh_sh_l_d> sh) | (sh <any_Cx_sh_sh_l_d>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_iy_thr> thr)] | [(thr <any_Cx_sh_iy_thr>)]) ([(<any_Vx_sh_iy_thr> thr)] | [(thr <any_Vx_sh_iy_thr>)]) sil))
Running scan for frate = 72
Considering guard z with value 1 for hh ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard s with value 8 for aa ...
Considering guard sh with value 8 for aa ...
Considering guard zh with value 8 for aa ...
Considering guard ng with value 8 for aa ...
Considering guard ch with value 8 for aa ...
candidateGuards = map[ch:true ng:true s:true sh:true zh:true]
Picking guard, sh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 72 public <hardly> = (((sil [((b <any_Cx_hh_b_b>) | (<any_Cx_hh_b_b> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]) | (sil b (sil [((b <any_Cx_hh_b_b>) | (<any_Cx_hh_b_b> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]))) (([(<any_Cx_z_b_b_hh> z)] | [(z <any_Cx_z_b_b_hh>)]) (hh | ((<any_Cx_z_b_b_hh> z) | (z <any_Cx_z_b_b_hh>)))) ((([(<any_Vx_sh_z_aa_noSlide> sh)] | [(sh <any_Vx_sh_z_aa_noSlide>)]) ([(<any_Cx_sh_z_d_hh> sh)] | [(sh <any_Cx_sh_z_d_hh>)])) (aa | ((<any_Vx_sh_z_aa_noSlide> sh) | (sh <any_Vx_sh_z_aa_noSlide>)))) (([(<any_Cx_sh_sh_d_l> sh)] | [(sh <any_Cx_sh_sh_d_l>)]) (d | ((<any_Cx_sh_sh_d_l> sh) | (sh <any_Cx_sh_sh_d_l>)))) (([(<any_Cx_sh_sh_l_d> sh)] | [(sh <any_Cx_sh_sh_l_d>)]) (l | ((<any_Cx_sh_sh_l_d> sh) | (sh <any_Cx_sh_sh_l_d>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_iy_m> m)] | [(m <any_Cx_sh_iy_m>)]) ([(<any_Vx_sh_iy_m> m)] | [(m <any_Vx_sh_iy_m>)]) sil))

results =
{72 [{sil 0 8} {hh 9 20} {aa 21 30} {v 31 34} {sh 35 40} {l 41 43} {iy 44 55} {sil 56 75}]}
{80 [{sil 0 9} {hh 10 22} {aa 23 32} {d 33 35} {v 36 38} {sh 39 45} {iy 46 60} {sil 61 81}]}
{91 [{sil 0 11} {hh 12 25} {aa 26 39} {d 40 43} {sh 44 51} {m 52 54} {iy 55 70} {sil 71 101}]}
{105 [{sil 0 20} {hh 21 29} {aa 30 45} {d 46 49} {sh 50 59} {m 60 62} {iy 63 80} {g 81 89} {m 90 92} {sil 93 118}]}
{125 [{sil 0 23} {hh 24 33} {aa 34 53} {d 54 68} {l 69 73} {iy 74 93} {sil 94 138}]}

normalised results =
{72 [{sil 0 8} {hh 13 28} {aa 29 42} {v 43 47} {sh 49 56} {l 57 57} {iy 61 76} {sil 78 104}]}
{80 [{sil 0 9} {hh 13 28} {aa 29 40} {d 41 41} {v 45 45} {sh 49 56} {iy 58 75} {sil 76 101}]}
{91 [{sil 0 11} {hh 13 27} {aa 29 43} {d 44 47} {sh 48 56} {m 57 57} {iy 60 77} {sil 78 111}]}
{105 [{sil 0 20} {hh 20 28} {aa 29 43} {d 44 47} {sh 48 56} {m 57 57} {iy 60 76} {g 77 85} {m 86 86} {sil 89 112}]}
{125 [{sil 0 23} {hh 19 26} {aa 27 42} {d 43 54} {l 55 58} {iy 59 74} {sil 75 110}]}

ruleAligned = [{{hh 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{aa 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{d 1} [{2 3} {3 3} {4 3}]} {{l 2} [{4 4}]} {{sh 3} [{1 5} {2 4} {3 4}]} {{iy 0} [{0 6} {1 6} {2 6} {3 6} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {hh 13 28} {aa 29 42} {v 43 47} {sh 49 56} {l 57 57} {iy 61 76} {sil 78 78}]}
{80 [{sil 0 0} {hh 13 28} {aa 29 40} {d 41 41} {v 45 45} {sh 49 56} {iy 58 75} {sil 76 76}]}
{91 [{sil 0 0} {hh 13 27} {aa 29 43} {d 44 47} {sh 48 56} {m 57 57} {iy 60 77} {sil 78 78}]}
{105 [{sil 0 0} {hh 20 28} {aa 29 43} {d 44 47} {sh 48 56} {m 57 57} {iy 60 76} {g 77 85} {m 86 86} {sil 89 89}]}
{125 [{sil 0 0} {hh 19 26} {aa 27 42} {d 43 54} {l 55 58} {iy 59 74} {sil 75 75}]}

timeAligned = [{{hh 13 28} [{0 1} {1 1} {2 1} {4 1} {3 1}]} {{aa 29 42} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{d 44 47} [{2 3} {3 3} {4 3}]} {{sh 49 56} [{0 4} {1 5} {2 4} {3 4}]} {{iy 60 76} [{1 6} {2 6} {3 6} {4 5} {0 6}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 26
i, iTime, newITime, timeStartFrom = 2 1 2 40
i, iTime, newITime, timeStartFrom = 3 2 -1 47
i, iTime, newITime, timeStartFrom = 4 2 3 47
i, iTime, newITime, timeStartFrom = 5 3 4 56
combinedVerdict    = [{hh 0} {aa 0} {d 1} {l 2} {sh 3} {iy 0}]
ruleAlignedVerdict = [{hh 0} {aa 0} {d 1} {l 2} {sh 3} {iy 0}]

score->
+2 for hh
+2 for aa
+1 for d
-2 for l
-2 for sh
+2 for iy
score<-: 3
bestResult = {3 [{hh 0} {aa 0} {d 1} {l 2} {sh 3} {iy 0}] [hh aa d l iy]}
testPronounce hh good aa good d possible l missing sh surprise iy good
publish->
phonsToAlphas = [{[hh] h} {[aa] ar} {[d] d} {[l] l} {[iy] y}]
getVerdict<-:new {h [hh] 0}
getVerdict<-:new {ar [aa] 0}
getVerdict<-:new {d [d] 1}
getVerdict<-:new {l [l] 2}
getVerdict<-:new {y [iy] 0}
lettersVerdicts = [{h [hh] 0} {ar [aa] 0} {d [d] 1} {l [l] 2} {sh [sh] 3} {y [iy] 0}]
publish<-
{
  "word": "hardly",
  "results": [
    {
      "letters": "h",
      "phonemes": "h",
      "verdict": "good"
    },
    {
      "letters": "ar",
      "phonemes": "ɑ",
      "verdict": "good"
    },
    {
      "letters": "d",
      "phonemes": "d",
      "verdict": "possible"
    },
    {
      "letters": "l",
      "phonemes": "l",
      "verdict": "missing"
    },
    {
      "letters": "sh",
      "phonemes": "ʃ",
      "verdict": "surprise"
    },
    {
      "letters": "y",
      "phonemes": "iː",
      "verdict": "good"
    }
  ],
  "err": null
}
