Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_2f7649fb-12e6-4043-896e-734dfac05201 audiofile /Users/test/go/src/Phonemes/audio_clips/either1_80.wav word either dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  1.43925



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.64 0.66 1.3

 start3, duration3, end3 =  0.66 0.58 1.24

 Initial start, duration, end =  0.54 0.76 1.3

 Cut at: start, duration =  0.54 0.8792499999999999     guard_end =  1.41925 

Running scan for frate = 125
Running scan for frate = 125
Considering guard ch with value 3 for iy ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 1 for ay ...
Considering guard zh with value 1 for ay ...
candidateGuards = map[ch:true zh:true]
Picking guard, ch

Considering guard ch with value 6 for dh ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 2 for dh ...
Considering guard zh with value 2 for dh ...
candidateGuards = map[ch:true zh:true]
Picking guard, ch

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 125 public <either> = (((sil [((z <any_Vx_iy_z_p_noSlide>) | (<any_Vx_iy_z_p_noSlide> z))] [((z <any_Cx_iy_z_p>) | (<any_Cx_iy_z_p> z))]) | (sil p (sil [((z <any_Vx_iy_z_p_noSlide>) | (<any_Vx_iy_z_p_noSlide> z))] [((z <any_Cx_iy_z_p>) | (<any_Cx_iy_z_p> z))]))) ((([(<any_Vx_ch_p_z_iy_noSlide> ch)] | [(ch <any_Vx_ch_p_z_iy_noSlide>)]) ([(<any_Cx_ch_p_z_dh> ch)] | [(ch <any_Cx_ch_p_z_dh>)])) (iy | ((<any_Vx_ch_p_z_iy_noSlide> ch) | (ch <any_Vx_ch_p_z_iy_noSlide>)))) (([(<any_Cx_ch_ch_dh> ch)] | [(ch <any_Cx_ch_ch_dh>)]) (dh | ((<any_Cx_ch_ch_dh_axr> ch) | (ch <any_Cx_ch_ch_dh_axr>)))) (([(<any_Cx_zh_ch_axr_dh> zh)] | [(zh <any_Cx_zh_ch_axr_dh>)]) (axr | ((<any_Cx_zh_ch_axr_dh> zh) | (zh <any_Cx_zh_ch_axr_dh>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_m> m)] | [(m <any_Cx_zh_axr_m>)]) sil))
frate, target rule = 125 public <either> = (((sil [((z <any_Vx_ay_z_p_noSlide>) | (<any_Vx_ay_z_p_noSlide> z))] [((z <any_Cx_ay_z_p>) | (<any_Cx_ay_z_p> z))]) | (sil p (sil [((z <any_Vx_ay_z_p_noSlide>) | (<any_Vx_ay_z_p_noSlide> z))] [((z <any_Cx_ay_z_p>) | (<any_Cx_ay_z_p> z))]))) ((([(<any_Vx_ch_p_z_ay_noSlide> ch)] | [(ch <any_Vx_ch_p_z_ay_noSlide>)]) ([(<any_Cx_ch_p_z_dh> ch)] | [(ch <any_Cx_ch_p_z_dh>)])) (ay | ((<any_Vx_ch_p_z_ay_noSlide> ch) | (ch <any_Vx_ch_p_z_ay_noSlide>)))) (([(<any_Cx_ch_ch_dh> ch)] | [(ch <any_Cx_ch_ch_dh>)]) (dh | ((<any_Cx_ch_ch_dh_axr> ch) | (ch <any_Cx_ch_ch_dh_axr>)))) (([(<any_Cx_zh_ch_axr_dh> zh)] | [(zh <any_Cx_zh_ch_axr_dh>)]) (axr | ((<any_Cx_zh_ch_axr_dh> zh) | (zh <any_Cx_zh_ch_axr_dh>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_f> f)] | [(f <any_Cx_zh_axr_f>)]) sil))
Running scan for frate = 105
Running scan for frate = 105
Considering guard ch with value 3 for iy ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 1 for ay ...
Considering guard zh with value 1 for ay ...
candidateGuards = map[ch:true zh:true]
Picking guard, ch

Considering guard ch with value 6 for dh ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard zh with value 2 for dh ...
Considering guard ch with value 2 for dh ...
candidateGuards = map[ch:true zh:true]
Picking guard, zh

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 105 public <either> = (((sil [((z <any_Vx_iy_z_p_noSlide>) | (<any_Vx_iy_z_p_noSlide> z))] [((z <any_Cx_iy_z_p>) | (<any_Cx_iy_z_p> z))]) | (sil p (sil [((z <any_Vx_iy_z_p_noSlide>) | (<any_Vx_iy_z_p_noSlide> z))] [((z <any_Cx_iy_z_p>) | (<any_Cx_iy_z_p> z))]))) ((([(<any_Vx_ch_p_z_iy_noSlide> ch)] | [(ch <any_Vx_ch_p_z_iy_noSlide>)]) ([(<any_Cx_ch_p_z_dh> ch)] | [(ch <any_Cx_ch_p_z_dh>)])) (iy | ((<any_Vx_ch_p_z_iy_noSlide> ch) | (ch <any_Vx_ch_p_z_iy_noSlide>)))) (([(<any_Cx_ch_ch_dh> ch)] | [(ch <any_Cx_ch_ch_dh>)]) (dh | ((<any_Cx_ch_ch_dh_axr> ch) | (ch <any_Cx_ch_ch_dh_axr>)))) (([(<any_Cx_zh_ch_axr_dh> zh)] | [(zh <any_Cx_zh_ch_axr_dh>)]) (axr | ((<any_Cx_zh_ch_axr_dh> zh) | (zh <any_Cx_zh_ch_axr_dh>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_thr> thr)] | [(thr <any_Cx_zh_axr_thr>)]) sil))
frate, target rule = 105 public <either> = (((sil [((z <any_Vx_ay_z_p_noSlide>) | (<any_Vx_ay_z_p_noSlide> z))] [((z <any_Cx_ay_z_p>) | (<any_Cx_ay_z_p> z))]) | (sil p (sil [((z <any_Vx_ay_z_p_noSlide>) | (<any_Vx_ay_z_p_noSlide> z))] [((z <any_Cx_ay_z_p>) | (<any_Cx_ay_z_p> z))]))) ((([(<any_Vx_ch_p_z_ay_noSlide> ch)] | [(ch <any_Vx_ch_p_z_ay_noSlide>)]) ([(<any_Cx_ch_p_z_dh> ch)] | [(ch <any_Cx_ch_p_z_dh>)])) (ay | ((<any_Vx_ch_p_z_ay_noSlide> ch) | (ch <any_Vx_ch_p_z_ay_noSlide>)))) (([(<any_Cx_zh_ch_dh> zh)] | [(zh <any_Cx_zh_ch_dh>)]) (dh | ((<any_Cx_zh_ch_dh_axr> zh) | (zh <any_Cx_zh_ch_dh_axr>)))) (([(<any_Cx_zh_zh_axr_dh> zh)] | [(zh <any_Cx_zh_zh_axr_dh>)]) (axr | ((<any_Cx_zh_zh_axr_dh> zh) | (zh <any_Cx_zh_zh_axr_dh>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_hh> hh)] | [(hh <any_Cx_zh_axr_hh>)]) sil))
Running scan for frate = 91
Running scan for frate = 91
Considering guard ch with value 3 for iy ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard zh with value 1 for ay ...
Considering guard ch with value 1 for ay ...
candidateGuards = map[ch:true zh:true]
Picking guard, zh

Considering guard ch with value 6 for dh ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 2 for dh ...
Considering guard zh with value 2 for dh ...
candidateGuards = map[ch:true zh:true]
Picking guard, ch

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 91 public <either> = (((sil [((z <any_Vx_ay_z_p_noSlide>) | (<any_Vx_ay_z_p_noSlide> z))] [((z <any_Cx_ay_z_p>) | (<any_Cx_ay_z_p> z))]) | (sil p (sil [((z <any_Vx_ay_z_p_noSlide>) | (<any_Vx_ay_z_p_noSlide> z))] [((z <any_Cx_ay_z_p>) | (<any_Cx_ay_z_p> z))]))) ((([(<any_Vx_zh_p_z_ay_noSlide> zh)] | [(zh <any_Vx_zh_p_z_ay_noSlide>)]) ([(<any_Cx_zh_p_z_dh> zh)] | [(zh <any_Cx_zh_p_z_dh>)])) (ay | ((<any_Vx_zh_p_z_ay_noSlide> zh) | (zh <any_Vx_zh_p_z_ay_noSlide>)))) (([(<any_Cx_ch_zh_dh> ch)] | [(ch <any_Cx_ch_zh_dh>)]) (dh | ((<any_Cx_ch_zh_dh_axr> ch) | (ch <any_Cx_ch_zh_dh_axr>)))) (([(<any_Cx_zh_ch_axr_dh> zh)] | [(zh <any_Cx_zh_ch_axr_dh>)]) (axr | ((<any_Cx_zh_ch_axr_dh> zh) | (zh <any_Cx_zh_ch_axr_dh>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_ng> ng)] | [(ng <any_Cx_zh_axr_ng>)]) sil))
Running scan for frate = 80
Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 1 for ay ...
Considering guard zh with value 1 for ay ...
candidateGuards = map[ch:true zh:true]
Picking guard, ch

frate, target rule = 91 public <either> = (((sil [((z <any_Vx_iy_z_p_noSlide>) | (<any_Vx_iy_z_p_noSlide> z))] [((z <any_Cx_iy_z_p>) | (<any_Cx_iy_z_p> z))]) | (sil p (sil [((z <any_Vx_iy_z_p_noSlide>) | (<any_Vx_iy_z_p_noSlide> z))] [((z <any_Cx_iy_z_p>) | (<any_Cx_iy_z_p> z))]))) ((([(<any_Vx_ch_p_z_iy_noSlide> ch)] | [(ch <any_Vx_ch_p_z_iy_noSlide>)]) ([(<any_Cx_ch_p_z_dh> ch)] | [(ch <any_Cx_ch_p_z_dh>)])) (iy | ((<any_Vx_ch_p_z_iy_noSlide> ch) | (ch <any_Vx_ch_p_z_iy_noSlide>)))) (([(<any_Cx_ch_ch_dh> ch)] | [(ch <any_Cx_ch_ch_dh>)]) (dh | ((<any_Cx_ch_ch_dh_axr> ch) | (ch <any_Cx_ch_ch_dh_axr>)))) (([(<any_Cx_zh_ch_axr_dh> zh)] | [(zh <any_Cx_zh_ch_axr_dh>)]) (axr | ((<any_Cx_zh_ch_axr_dh> zh) | (zh <any_Cx_zh_ch_axr_dh>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_m> m)] | [(m <any_Cx_zh_axr_m>)]) sil))
Considering guard ch with value 2 for dh ...
Considering guard zh with value 2 for dh ...
candidateGuards = map[ch:true zh:true]
Picking guard, ch

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

Running scan for frate = 80
frate, target rule = 80 public <either> = (((sil [((z <any_Vx_ay_z_p_noSlide>) | (<any_Vx_ay_z_p_noSlide> z))] [((z <any_Cx_ay_z_p>) | (<any_Cx_ay_z_p> z))]) | (sil p (sil [((z <any_Vx_ay_z_p_noSlide>) | (<any_Vx_ay_z_p_noSlide> z))] [((z <any_Cx_ay_z_p>) | (<any_Cx_ay_z_p> z))]))) ((([(<any_Vx_ch_p_z_ay_noSlide> ch)] | [(ch <any_Vx_ch_p_z_ay_noSlide>)]) ([(<any_Cx_ch_p_z_dh> ch)] | [(ch <any_Cx_ch_p_z_dh>)])) (ay | ((<any_Vx_ch_p_z_ay_noSlide> ch) | (ch <any_Vx_ch_p_z_ay_noSlide>)))) (([(<any_Cx_ch_ch_dh> ch)] | [(ch <any_Cx_ch_ch_dh>)]) (dh | ((<any_Cx_ch_ch_dh_axr> ch) | (ch <any_Cx_ch_ch_dh_axr>)))) (([(<any_Cx_zh_ch_axr_dh> zh)] | [(zh <any_Cx_zh_ch_axr_dh>)]) (axr | ((<any_Cx_zh_ch_axr_dh> zh) | (zh <any_Cx_zh_ch_axr_dh>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_f> f)] | [(f <any_Cx_zh_axr_f>)]) sil))
Considering guard ch with value 3 for iy ...
candidateGuards = map[ch:true]
Picking guard, ch

Running scan for frate = 72
Considering guard ch with value 6 for dh ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for ay ...
Considering guard ch with value 1 for ay ...
candidateGuards = map[ch:true zh:true]
Picking guard, zh

frate, target rule = 80 public <either> = (((sil [((z <any_Vx_iy_z_p_noSlide>) | (<any_Vx_iy_z_p_noSlide> z))] [((z <any_Cx_iy_z_p>) | (<any_Cx_iy_z_p> z))]) | (sil p (sil [((z <any_Vx_iy_z_p_noSlide>) | (<any_Vx_iy_z_p_noSlide> z))] [((z <any_Cx_iy_z_p>) | (<any_Cx_iy_z_p> z))]))) ((([(<any_Vx_ch_p_z_iy_noSlide> ch)] | [(ch <any_Vx_ch_p_z_iy_noSlide>)]) ([(<any_Cx_ch_p_z_dh> ch)] | [(ch <any_Cx_ch_p_z_dh>)])) (iy | ((<any_Vx_ch_p_z_iy_noSlide> ch) | (ch <any_Vx_ch_p_z_iy_noSlide>)))) (([(<any_Cx_ch_ch_dh> ch)] | [(ch <any_Cx_ch_ch_dh>)]) (dh | ((<any_Cx_ch_ch_dh_axr> ch) | (ch <any_Cx_ch_ch_dh_axr>)))) (([(<any_Cx_zh_ch_axr_dh> zh)] | [(zh <any_Cx_zh_ch_axr_dh>)]) (axr | ((<any_Cx_zh_ch_axr_dh> zh) | (zh <any_Cx_zh_ch_axr_dh>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_f> f)] | [(f <any_Cx_zh_axr_f>)]) sil))
Considering guard zh with value 2 for dh ...
Considering guard ch with value 2 for dh ...
candidateGuards = map[ch:true zh:true]
Picking guard, zh

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

Running scan for frate = 72
frate, target rule = 72 public <either> = (((sil [((z <any_Vx_ay_z_p_noSlide>) | (<any_Vx_ay_z_p_noSlide> z))] [((z <any_Cx_ay_z_p>) | (<any_Cx_ay_z_p> z))]) | (sil p (sil [((z <any_Vx_ay_z_p_noSlide>) | (<any_Vx_ay_z_p_noSlide> z))] [((z <any_Cx_ay_z_p>) | (<any_Cx_ay_z_p> z))]))) ((([(<any_Vx_zh_p_z_ay_noSlide> zh)] | [(zh <any_Vx_zh_p_z_ay_noSlide>)]) ([(<any_Cx_zh_p_z_dh> zh)] | [(zh <any_Cx_zh_p_z_dh>)])) (ay | ((<any_Vx_zh_p_z_ay_noSlide> zh) | (zh <any_Vx_zh_p_z_ay_noSlide>)))) (([(<any_Cx_zh_zh_dh> zh)] | [(zh <any_Cx_zh_zh_dh>)]) (dh | ((<any_Cx_zh_zh_dh_axr> zh) | (zh <any_Cx_zh_zh_dh_axr>)))) (([(<any_Cx_zh_zh_axr_dh> zh)] | [(zh <any_Cx_zh_zh_axr_dh>)]) (axr | ((<any_Cx_zh_zh_axr_dh> zh) | (zh <any_Cx_zh_zh_axr_dh>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_hh> hh)] | [(hh <any_Cx_zh_axr_hh>)]) sil))
Considering guard ch with value 3 for iy ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 6 for dh ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 72 public <either> = (((sil [((z <any_Vx_iy_z_p_noSlide>) | (<any_Vx_iy_z_p_noSlide> z))] [((z <any_Cx_iy_z_p>) | (<any_Cx_iy_z_p> z))]) | (sil p (sil [((z <any_Vx_iy_z_p_noSlide>) | (<any_Vx_iy_z_p_noSlide> z))] [((z <any_Cx_iy_z_p>) | (<any_Cx_iy_z_p> z))]))) ((([(<any_Vx_ch_p_z_iy_noSlide> ch)] | [(ch <any_Vx_ch_p_z_iy_noSlide>)]) ([(<any_Cx_ch_p_z_dh> ch)] | [(ch <any_Cx_ch_p_z_dh>)])) (iy | ((<any_Vx_ch_p_z_iy_noSlide> ch) | (ch <any_Vx_ch_p_z_iy_noSlide>)))) (([(<any_Cx_ch_ch_dh> ch)] | [(ch <any_Cx_ch_ch_dh>)]) (dh | ((<any_Cx_ch_ch_dh_axr> ch) | (ch <any_Cx_ch_ch_dh_axr>)))) (([(<any_Cx_zh_ch_axr_dh> zh)] | [(zh <any_Cx_zh_ch_axr_dh>)]) (axr | ((<any_Cx_zh_ch_axr_dh> zh) | (zh <any_Cx_zh_ch_axr_dh>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_ng> ng)] | [(ng <any_Cx_zh_axr_ng>)]) sil))

results =
{72 [{sil 0 15} {ay 16 30} {dh 31 35} {axr 36 50} {sil 51 59}]}
{80 [{sil 0 16} {ay 17 33} {dh 34 39} {axr 40 55} {sil 56 62}]}
{91 [{sil 0 19} {ay 20 38} {dh 39 45} {axr 46 75} {sil 76 78}]}
{105 [{sil 0 17} {z 18 20} {ao 21 28} {ay 29 44} {dh 45 52} {axr 53 88} {sil 89 91}]}
{125 [{sil 0 26} {ay 27 50} {dh 51 59} {axr 60 86} {sil 87 106}]}

normalised results =
{72 [{sil 0 15} {ay 22 42} {dh 43 49} {axr 50 69} {sil 71 82}]}
{80 [{sil 0 16} {ay 21 41} {dh 43 49} {axr 50 69} {sil 70 78}]}
{91 [{sil 0 19} {ay 22 42} {dh 43 49} {axr 51 82} {sil 84 84}]}
{105 [{sil 0 17} {z 17 17} {ao 20 27} {ay 28 42} {dh 43 50} {axr 50 84} {sil 85 85}]}
{125 [{sil 0 26} {ay 22 40} {dh 41 47} {axr 48 69} {sil 70 85}]}

ruleAligned = [{{ay 0} [{0 1} {1 1} {2 1} {3 3} {4 1}]} {{dh 0} [{0 2} {1 2} {2 2} {3 4} {4 2}]} {{axr 0} [{0 3} {1 3} {2 3} {3 5} {4 3}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {ay 22 42} {dh 43 49} {axr 50 69} {sil 71 71}]}
{80 [{sil 0 0} {ay 21 41} {dh 43 49} {axr 50 69} {sil 70 70}]}
{91 [{sil 0 0} {ay 22 42} {dh 43 49} {axr 51 82} {sil 84 84}]}
{105 [{sil 0 0} {z 17 17} {ao 20 27} {ay 28 42} {dh 43 50} {axr 50 84} {sil 85 85}]}
{125 [{sil 0 0} {ay 22 40} {dh 41 47} {axr 48 69} {sil 70 70}]}

timeAligned = [{{ay 22 42} [{0 1} {1 1} {2 1} {4 1} {3 3}]} {{dh 43 49} [{0 2} {1 2} {2 2} {3 4} {4 2}]} {{axr 50 69} [{0 3} {1 3} {3 5} {4 3} {2 3}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 40
i, iTime, newITime, timeStartFrom = 2 1 2 47
combinedVerdict    = [{ay 0} {dh 0} {axr 0}]
ruleAlignedVerdict = [{ay 0} {dh 0} {axr 0}]

score->
+2 for ay
+2 for dh
+2 for axr
score<-: 11

results =
{72 [{sil 0 8} {z 9 11} {w 12 24} {iy 25 30} {dh 31 35} {axr 36 50} {sil 51 59}]}
{80 [{sil 0 10} {z 11 13} {l 14 27} {iy 28 33} {dh 34 39} {axr 40 55} {sil 56 62}]}
{91 [{sil 0 12} {z 13 15} {w 16 30} {iy 31 38} {dh 39 45} {axr 46 75} {sil 76 78}]}
{105 [{sil 0 14} {z 15 17} {w 18 35} {iy 36 45} {dh 46 52} {axr 53 88} {sil 89 91}]}
{125 [{sil 0 19} {z 20 22} {l 23 40} {iy 41 50} {dh 51 59} {axr 60 86} {sil 87 106}]}

normalised results =
{72 [{sil 0 8} {z 13 13} {w 17 33} {iy 35 42} {dh 43 49} {axr 50 69} {sil 71 82}]}
{80 [{sil 0 10} {z 14 14} {l 18 34} {iy 35 41} {dh 43 49} {axr 50 69} {sil 70 78}]}
{91 [{sil 0 12} {z 14 14} {w 18 33} {iy 34 42} {dh 43 49} {axr 51 82} {sil 84 84}]}
{105 [{sil 0 14} {z 14 14} {w 17 33} {iy 34 43} {dh 44 50} {axr 50 84} {sil 85 85}]}
{125 [{sil 0 19} {z 16 16} {l 18 32} {iy 33 40} {dh 41 47} {axr 48 69} {sil 70 85}]}

ruleAligned = [{{w 3} [{0 2} {2 2} {3 2}]} {{iy 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{dh 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{axr 0} [{0 5} {1 5} {2 5} {3 5} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {z 13 13} {w 17 33} {iy 35 42} {dh 43 49} {axr 50 69} {sil 71 71}]}
{80 [{sil 0 0} {z 14 14} {l 18 34} {iy 35 41} {dh 43 49} {axr 50 69} {sil 70 70}]}
{91 [{sil 0 0} {z 14 14} {w 18 33} {iy 34 42} {dh 43 49} {axr 51 82} {sil 84 84}]}
{105 [{sil 0 0} {z 14 14} {w 17 33} {iy 34 43} {dh 44 50} {axr 50 84} {sil 85 85}]}
{125 [{sil 0 0} {z 16 16} {l 18 32} {iy 33 40} {dh 41 47} {axr 48 69} {sil 70 70}]}

timeAligned = [{{w 18 33} [{0 2} {2 2} {3 2}]} {{iy 34 42} [{2 3} {3 3} {4 3} {0 3} {1 3}]} {{dh 43 49} [{0 4} {1 4} {2 4} {4 4} {3 4}]} {{axr 50 69} [{0 5} {1 5} {3 5} {4 5} {2 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 33
i, iTime, newITime, timeStartFrom = 2 1 2 40
i, iTime, newITime, timeStartFrom = 3 2 3 47
combinedVerdict    = [{w 3} {iy 0} {dh 0} {axr 0}]
ruleAlignedVerdict = [{w 3} {iy 0} {dh 0} {axr 0}]

score->
-2 for w
+2 for iy
+2 for dh
+2 for axr
score<-: 4
testPronounce ay good dh good axr good
publish->
phonsToAlphas = [{[ay] ei} {[dh] th} {[axr] er}]
getVerdict<-:new {ei [ay] 0}
getVerdict<-:new {th [dh] 0}
getVerdict<-:new {er [axr] 0}
lettersVerdicts = [{ei [ay] 0} {th [dh] 0} {er [axr] 0}]
publish<-
{
  "word": "either",
  "results": [
    {
      "letters": "ei",
      "phonemes": "ɑɪ",
      "verdict": "good"
    },
    {
      "letters": "th",
      "phonemes": "ð",
      "verdict": "good"
    },
    {
      "letters": "er",
      "phonemes": "əɹ",
      "verdict": "good"
    }
  ],
  "err": null
}
