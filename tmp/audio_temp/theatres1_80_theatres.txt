Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_d9bd8c67-8e01-46da-b615-c7cce54fe351 audiofile /Users/test/go/src/Phonemes/audio_clips/theatres1_80.wav word theatres dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  1.81075



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.64 0.98 1.62

 start3, duration3, end3 =  0.64 0.44000000000000006 1.08

 Initial start, duration, end =  0.54 1.08 1.62

 Cut at: start, duration =  0.54 1.25075     guard_end =  1.79075 

Running scan for frate = 125
Considering guard ch with value 4.8 for th ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 9.6 for iy ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard sh with value 5.4 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 2 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard y with value 6 for ax ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 5 for z ...
Considering guard ch with value 5 for z ...
candidateGuards = map[ch:true y:true]
Picking guard, y

frate, target rule = 125 public <theatres> = (((sil [((z <any_Cx_th_z_p>) | (<any_Cx_th_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_th_z_p>) | (<any_Cx_th_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ch_p_z_th> ch)] | [(ch <any_Cx_ch_p_z_th>)]) (th | t | d | s | ((<any_Cx_ch_p_z_th> ch) | (ch <any_Cx_ch_p_z_th>)))) ((([(<any_Vx_ch_ch_iy_noSlide> ch)] | [(ch <any_Vx_ch_ch_iy_noSlide>)]) ([(<any_Cx_ch_ch_ax_th> ch)] | [(ch <any_Cx_ch_ch_ax_th>)])) (iy | ((<any_Vx_ch_ch_iy_noSlide> ch) | (ch <any_Vx_ch_ch_iy_noSlide>)))) (([(<any_Cx_sh_ch_ax_t> sh)] | [(sh <any_Cx_sh_ch_ax_t>)]) (ax | ((<any_Cx_sh_ch_ax_t> sh) | (sh <any_Cx_sh_ch_ax_t>)))) (([(<any_Cx_zh_sh_t_ax_ax> zh)] | [(zh <any_Cx_zh_sh_t_ax_ax>)]) (t | ((<any_Cx_zh_sh_t_ax_ax> zh) | (zh <any_Cx_zh_sh_t_ax_ax>)))) (([(<any_Cx_y_zh_ax_t> y)] | [(y <any_Cx_y_zh_ax_t>)]) (ax | ((<any_Cx_y_zh_ax_z_t> y) | (y <any_Cx_y_zh_ax_z_t>)))) (([(<any_Cx_y_y_z_ax> y)] | [(y <any_Cx_y_y_z_ax>)]) (z | ((<any_Cx_y_y_z_ax> y) | (y <any_Cx_y_y_z_ax>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_y_z_b> b)] | [(b <any_Cx_y_z_b>)]) sil))
Running scan for frate = 105
Considering guard ch with value 4.8 for th ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 9.6 for iy ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard sh with value 5.4 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 2 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard y with value 6 for ax ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 5 for z ...
Considering guard ch with value 5 for z ...
candidateGuards = map[ch:true y:true]
Picking guard, y

frate, target rule = 105 public <theatres> = (((sil [((z <any_Cx_th_z_p>) | (<any_Cx_th_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_th_z_p>) | (<any_Cx_th_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ch_p_z_th> ch)] | [(ch <any_Cx_ch_p_z_th>)]) (th | t | d | s | ((<any_Cx_ch_p_z_th> ch) | (ch <any_Cx_ch_p_z_th>)))) ((([(<any_Vx_ch_ch_iy_noSlide> ch)] | [(ch <any_Vx_ch_ch_iy_noSlide>)]) ([(<any_Cx_ch_ch_ax_th> ch)] | [(ch <any_Cx_ch_ch_ax_th>)])) (iy | ((<any_Vx_ch_ch_iy_noSlide> ch) | (ch <any_Vx_ch_ch_iy_noSlide>)))) (([(<any_Cx_sh_ch_ax_t> sh)] | [(sh <any_Cx_sh_ch_ax_t>)]) (ax | ((<any_Cx_sh_ch_ax_t> sh) | (sh <any_Cx_sh_ch_ax_t>)))) (([(<any_Cx_zh_sh_t_ax_ax> zh)] | [(zh <any_Cx_zh_sh_t_ax_ax>)]) (t | ((<any_Cx_zh_sh_t_ax_ax> zh) | (zh <any_Cx_zh_sh_t_ax_ax>)))) (([(<any_Cx_y_zh_ax_t> y)] | [(y <any_Cx_y_zh_ax_t>)]) (ax | ((<any_Cx_y_zh_ax_z_t> y) | (y <any_Cx_y_zh_ax_z_t>)))) (([(<any_Cx_y_y_z_ax> y)] | [(y <any_Cx_y_y_z_ax>)]) (z | ((<any_Cx_y_y_z_ax> y) | (y <any_Cx_y_y_z_ax>)))) (([(<any_vowel_noSlide> s)] | [(s <any_vowel_noSlide>)]) ([(<any_Cx_y_z_s> s)] | [(s <any_Cx_y_z_s>)]) sil))
Running scan for frate = 91
Considering guard ch with value 4.8 for th ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 9.6 for iy ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard sh with value 5.4 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 2 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard y with value 6 for ax ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard ch with value 5 for z ...
Considering guard y with value 5 for z ...
candidateGuards = map[ch:true y:true]
Picking guard, ch

frate, target rule = 91 public <theatres> = (((sil [((z <any_Cx_th_z_p>) | (<any_Cx_th_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_th_z_p>) | (<any_Cx_th_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ch_p_z_th> ch)] | [(ch <any_Cx_ch_p_z_th>)]) (th | t | d | s | ((<any_Cx_ch_p_z_th> ch) | (ch <any_Cx_ch_p_z_th>)))) ((([(<any_Vx_ch_ch_iy_noSlide> ch)] | [(ch <any_Vx_ch_ch_iy_noSlide>)]) ([(<any_Cx_ch_ch_ax_th> ch)] | [(ch <any_Cx_ch_ch_ax_th>)])) (iy | ((<any_Vx_ch_ch_iy_noSlide> ch) | (ch <any_Vx_ch_ch_iy_noSlide>)))) (([(<any_Cx_sh_ch_ax_t> sh)] | [(sh <any_Cx_sh_ch_ax_t>)]) (ax | ((<any_Cx_sh_ch_ax_t> sh) | (sh <any_Cx_sh_ch_ax_t>)))) (([(<any_Cx_zh_sh_t_ax_ax> zh)] | [(zh <any_Cx_zh_sh_t_ax_ax>)]) (t | ((<any_Cx_zh_sh_t_ax_ax> zh) | (zh <any_Cx_zh_sh_t_ax_ax>)))) (([(<any_Cx_y_zh_ax_t> y)] | [(y <any_Cx_y_zh_ax_t>)]) (ax | ((<any_Cx_y_zh_ax_z_t> y) | (y <any_Cx_y_zh_ax_z_t>)))) (([(<any_Cx_ch_y_z_ax> ch)] | [(ch <any_Cx_ch_y_z_ax>)]) (z | ((<any_Cx_ch_y_z_ax> ch) | (ch <any_Cx_ch_y_z_ax>)))) (([(<any_vowel_noSlide> s)] | [(s <any_vowel_noSlide>)]) ([(<any_Cx_ch_z_s> s)] | [(s <any_Cx_ch_z_s>)]) sil))
Running scan for frate = 80
Considering guard ch with value 4.8 for th ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 9.6 for iy ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard sh with value 5.4 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 2 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard y with value 6 for ax ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard y with value 5 for z ...
Considering guard ch with value 5 for z ...
candidateGuards = map[ch:true y:true]
Picking guard, ch

frate, target rule = 80 public <theatres> = (((sil [((dh <any_Cx_th_dh_p>) | (<any_Cx_th_dh_p> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]) | (sil p (sil [((dh <any_Cx_th_dh_p>) | (<any_Cx_th_dh_p> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]))) (([(<any_Cx_ch_p_dh_th> ch)] | [(ch <any_Cx_ch_p_dh_th>)]) (th | t | d | s | ((<any_Cx_ch_p_dh_th> ch) | (ch <any_Cx_ch_p_dh_th>)))) ((([(<any_Vx_ch_ch_iy_noSlide> ch)] | [(ch <any_Vx_ch_ch_iy_noSlide>)]) ([(<any_Cx_ch_ch_ax_th> ch)] | [(ch <any_Cx_ch_ch_ax_th>)])) (iy | ((<any_Vx_ch_ch_iy_noSlide> ch) | (ch <any_Vx_ch_ch_iy_noSlide>)))) (([(<any_Cx_sh_ch_ax_t> sh)] | [(sh <any_Cx_sh_ch_ax_t>)]) (ax | ((<any_Cx_sh_ch_ax_t> sh) | (sh <any_Cx_sh_ch_ax_t>)))) (([(<any_Cx_zh_sh_t_ax_ax> zh)] | [(zh <any_Cx_zh_sh_t_ax_ax>)]) (t | ((<any_Cx_zh_sh_t_ax_ax> zh) | (zh <any_Cx_zh_sh_t_ax_ax>)))) (([(<any_Cx_y_zh_ax_t> y)] | [(y <any_Cx_y_zh_ax_t>)]) (ax | ((<any_Cx_y_zh_ax_z_t> y) | (y <any_Cx_y_zh_ax_z_t>)))) (([(<any_Cx_ch_y_z_ax> ch)] | [(ch <any_Cx_ch_y_z_ax>)]) (z | ((<any_Cx_ch_y_z_ax> ch) | (ch <any_Cx_ch_y_z_ax>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_ch_z_v> v)] | [(v <any_Cx_ch_z_v>)]) sil))
Running scan for frate = 72
Considering guard ch with value 4.8 for th ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 9.6 for iy ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard sh with value 5.4 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 2 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard y with value 6 for ax ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard ch with value 5 for z ...
Considering guard y with value 5 for z ...
candidateGuards = map[ch:true y:true]
Picking guard, y

frate, target rule = 72 public <theatres> = (((sil [((s <any_Cx_th_s_p>) | (<any_Cx_th_s_p> s))] [((s <any_vowel_noSlide>) | (<any_vowel_noSlide> s))]) | (sil p (sil [((s <any_Cx_th_s_p>) | (<any_Cx_th_s_p> s))] [((s <any_vowel_noSlide>) | (<any_vowel_noSlide> s))]))) (([(<any_Cx_ch_p_s_th> ch)] | [(ch <any_Cx_ch_p_s_th>)]) (th | t | d | s | ((<any_Cx_ch_p_s_th> ch) | (ch <any_Cx_ch_p_s_th>)))) ((([(<any_Vx_ch_ch_iy_noSlide> ch)] | [(ch <any_Vx_ch_ch_iy_noSlide>)]) ([(<any_Cx_ch_ch_ax_th> ch)] | [(ch <any_Cx_ch_ch_ax_th>)])) (iy | ((<any_Vx_ch_ch_iy_noSlide> ch) | (ch <any_Vx_ch_ch_iy_noSlide>)))) (([(<any_Cx_sh_ch_ax_t> sh)] | [(sh <any_Cx_sh_ch_ax_t>)]) (ax | ((<any_Cx_sh_ch_ax_t> sh) | (sh <any_Cx_sh_ch_ax_t>)))) (([(<any_Cx_zh_sh_t_ax_ax> zh)] | [(zh <any_Cx_zh_sh_t_ax_ax>)]) (t | ((<any_Cx_zh_sh_t_ax_ax> zh) | (zh <any_Cx_zh_sh_t_ax_ax>)))) (([(<any_Cx_y_zh_ax_t> y)] | [(y <any_Cx_y_zh_ax_t>)]) (ax | ((<any_Cx_y_zh_ax_z_t> y) | (y <any_Cx_y_zh_ax_z_t>)))) (([(<any_Cx_y_y_z_ax> y)] | [(y <any_Cx_y_y_z_ax>)]) (z | ((<any_Cx_y_y_z_ax> y) | (y <any_Cx_y_y_z_ax>)))) (([(<any_vowel_noSlide> s)] | [(s <any_vowel_noSlide>)]) ([(<any_Cx_y_z_s> s)] | [(s <any_Cx_y_z_s>)]) sil))

results =
{72 [{sil 0 6} {t 7 9} {ch 10 12} {y 13 24} {ax 25 32} {t 33 41} {ax 42 47} {z 48 71} {sil 72 87}]}
{80 [{sil 0 8} {s 9 11} {ch 12 14} {y 15 27} {ax 28 36} {t 37 45} {ax 46 52} {z 53 79} {sil 80 95}]}
{91 [{sil 0 5} {th 6 13} {ch 14 16} {y 17 30} {ae 31 44} {ch 45 52} {ax 53 56} {t 57 59} {ax 60 62} {z 63 92} {sil 93 112}]}
{105 [{sil 0 6} {th 7 17} {ch 18 20} {y 21 34} {ae 35 52} {ch 53 61} {ax 62 65} {t 66 68} {ax 69 71} {z 72 107} {sil 108 130}]}
{125 [{sil 0 10} {th 11 19} {ch 20 23} {y 24 42} {ax 43 56} {t 57 70} {ax 71 81} {z 82 121} {sil 122 153}]}

normalised results =
{72 [{sil 0 6} {t 10 10} {ch 14 14} {y 18 33} {ax 35 44} {t 46 57} {ax 58 65} {z 67 99} {sil 100 121}]}
{80 [{sil 0 8} {s 11 11} {ch 15 15} {y 19 34} {ax 35 45} {t 46 56} {ax 58 65} {z 66 99} {sil 100 119}]}
{91 [{sil 0 5} {th 7 14} {ch 15 15} {y 19 33} {ae 34 48} {ch 49 57} {ax 58 62} {t 63 63} {ax 66 66} {z 69 101} {sil 102 123}]}
{105 [{sil 0 6} {th 7 16} {ch 17 17} {y 20 32} {ae 33 50} {ch 50 58} {ax 59 62} {t 63 63} {ax 66 66} {z 69 102} {sil 103 124}]}
{125 [{sil 0 10} {th 9 15} {ch 16 18} {y 19 34} {ax 34 45} {t 46 56} {ax 57 65} {z 66 97} {sil 98 122}]}

ruleAligned = [{{th 1} [{2 1} {3 1} {4 1}]} {{iy 2} []} {{y 3} [{0 3} {1 3} {4 3}]} {{ax 0} [{0 4} {1 4} {2 6} {3 6} {4 4}]} {{t 1} [{0 5} {1 5} {4 5}]} {{ax 1} [{0 6} {1 6} {4 6}]} {{z 0} [{0 7} {1 7} {2 9} {3 9} {4 7}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {t 10 10} {ch 14 14} {y 18 33} {ax 35 44} {t 46 57} {ax 58 65} {z 67 99} {sil 100 100}]}
{80 [{sil 0 0} {s 11 11} {ch 15 15} {y 19 34} {ax 35 45} {t 46 56} {ax 58 65} {z 66 99} {sil 100 100}]}
{91 [{sil 0 0} {th 7 14} {ch 15 15} {y 19 33} {ae 34 48} {ch 49 57} {ax 58 62} {t 63 63} {ax 66 66} {z 69 101} {sil 102 102}]}
{105 [{sil 0 0} {th 7 16} {ch 17 17} {y 20 32} {ae 33 50} {ch 50 58} {ax 59 62} {t 63 63} {ax 66 66} {z 69 102} {sil 103 103}]}
{125 [{sil 0 0} {th 9 15} {ch 16 16} {y 19 34} {ax 34 45} {t 46 56} {ax 57 65} {z 66 97} {sil 98 98}]}

timeAligned = [{{th 9 14} [{2 1} {3 1} {4 1}]} {{y 19 33} [{0 3} {1 3} {2 3} {4 3} {3 3}]} {{ax 35 44} [{0 4} {1 4} {4 4}]} {{t 46 56} [{0 5} {1 5} {4 5}]} {{ax 58 65} [{0 6} {1 6} {2 6} {4 6} {3 6}]} {{z 67 99} [{0 7} {1 7} {4 7} {2 9} {3 9}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 -1 14
i, iTime, newITime, timeStartFrom = 2 0 1 14
i, iTime, newITime, timeStartFrom = 3 1 2 33
i, iTime, newITime, timeStartFrom = 4 2 3 44
i, iTime, newITime, timeStartFrom = 5 3 4 56
i, iTime, newITime, timeStartFrom = 6 4 5 65
combinedVerdict    = [{th 1} {iy 2} {y 3} {ax 0} {t 1} {ax 1} {z 0}]
ruleAlignedVerdict = [{th 1} {iy 2} {y 3} {ax 0} {t 1} {ax 1} {z 0}]

score->
+1 for th
-2 for iy
-2 for y
+2 for ax
+1 for t
+1 for ax
+2 for z
score<-: 3
bestResult = {3 [{th 1} {iy 2} {y 3} {ax 0} {t 1} {ax 1} {z 0}] [th iy ax t ax z]}
testPronounce th possible iy missing y surprise ax good t possible ax possible z good
publish->
phonsToAlphas = [{[th] th} {[iy] e} {[ax] a} {[t] t} {[ax] re} {[z] s}]
getVerdict<-:new {th [th] 1}
getVerdict<-:new {e [iy] 2}
getVerdict<-:new {a [ax] 0}
getVerdict<-:new {t [t] 1}
getVerdict<-:new {re [ax] 1}
getVerdict<-:new {s [z] 0}
lettersVerdicts = [{th [th] 1} {e [iy] 2} {y [y] 3} {a [ax] 0} {t [t] 1} {re [ax] 1} {s [z] 0}]
publish<-
{
  "word": "theatres",
  "results": [
    {
      "letters": "th",
      "phonemes": "θ",
      "verdict": "possible"
    },
    {
      "letters": "e",
      "phonemes": "iː",
      "verdict": "missing"
    },
    {
      "letters": "y",
      "phonemes": "j",
      "verdict": "surprise"
    },
    {
      "letters": "a",
      "phonemes": "ə",
      "verdict": "good"
    },
    {
      "letters": "t",
      "phonemes": "t",
      "verdict": "possible"
    },
    {
      "letters": "re",
      "phonemes": "ə",
      "verdict": "possible"
    },
    {
      "letters": "s",
      "phonemes": "z",
      "verdict": "good"
    }
  ],
  "err": null
}
