Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_48f0367c-1edc-459a-9010-75618f7489ba audiofile /Users/test/go/src/Phonemes/audio_clips/clay1_h_philip.wav word hay dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  2.282313



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.76 0.94 1.7

 start3, duration3, end3 =  0.86 0.76 1.62

 Initial start, duration, end =  0.66 1.04 1.7

 Cut at: start, duration =  0.66 1.49     guard_end =  2.15 

Running scan for frate = 125
Considering guard g with value 2.6 for hh ...
candidateGuards = map[g:true]
Picking guard, g

Considering guard g with value 2.6 for ey ...
candidateGuards = map[g:true]
Picking guard, g

frate, target rule = 125 public <hay> = (((sil [((z <any_Cx_hh_z_b>) | (<any_Cx_hh_z_b> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil b (sil [((z <any_Cx_hh_z_b>) | (<any_Cx_hh_z_b> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_g_b_z_hh> g)] | [(g <any_Cx_g_b_z_hh>)]) (hh | ((<any_Cx_g_b_z_hh> g) | (g <any_Cx_g_b_z_hh>)))) ((([(<any_Vx_g_g_ey_noSlide> g)] | [(g <any_Vx_g_g_ey_noSlide>)]) ([(<any_Cx_g_g_hh> g)] | [(g <any_Cx_g_g_hh>)])) (ey | ((<any_Vx_g_g_ey_noSlide> g) | (g <any_Vx_g_g_ey_noSlide>)))) (([(<any_Cx_g_ey_f> f)] | [(f <any_Cx_g_ey_f>)]) ([(<any_Vx_g_ey_f> f)] | [(f <any_Vx_g_ey_f>)]) sil))
Running scan for frate = 105
Considering guard g with value 2.6 for hh ...
candidateGuards = map[g:true]
Picking guard, g

Considering guard g with value 2.6 for ey ...
candidateGuards = map[g:true]
Picking guard, g

frate, target rule = 105 public <hay> = (((sil [((b <any_Cx_hh_b_b>) | (<any_Cx_hh_b_b> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]) | (sil b (sil [((b <any_Cx_hh_b_b>) | (<any_Cx_hh_b_b> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]))) (([(<any_Cx_g_b_b_hh> g)] | [(g <any_Cx_g_b_b_hh>)]) (hh | ((<any_Cx_g_b_b_hh> g) | (g <any_Cx_g_b_b_hh>)))) ((([(<any_Vx_g_g_ey_noSlide> g)] | [(g <any_Vx_g_g_ey_noSlide>)]) ([(<any_Cx_g_g_hh> g)] | [(g <any_Cx_g_g_hh>)])) (ey | ((<any_Vx_g_g_ey_noSlide> g) | (g <any_Vx_g_g_ey_noSlide>)))) (([(<any_Cx_g_ey_hh> hh)] | [(hh <any_Cx_g_ey_hh>)]) ([(<any_Vx_g_ey_hh> hh)] | [(hh <any_Vx_g_ey_hh>)]) sil))
Running scan for frate = 91
Considering guard g with value 2.6 for hh ...
candidateGuards = map[g:true]
Picking guard, g

Considering guard g with value 2.6 for ey ...
candidateGuards = map[g:true]
Picking guard, g

frate, target rule = 91 public <hay> = (((sil [((b <any_Cx_hh_b_b>) | (<any_Cx_hh_b_b> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]) | (sil b (sil [((b <any_Cx_hh_b_b>) | (<any_Cx_hh_b_b> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]))) (([(<any_Cx_g_b_b_hh> g)] | [(g <any_Cx_g_b_b_hh>)]) (hh | ((<any_Cx_g_b_b_hh> g) | (g <any_Cx_g_b_b_hh>)))) ((([(<any_Vx_g_g_ey_noSlide> g)] | [(g <any_Vx_g_g_ey_noSlide>)]) ([(<any_Cx_g_g_hh> g)] | [(g <any_Cx_g_g_hh>)])) (ey | ((<any_Vx_g_g_ey_noSlide> g) | (g <any_Vx_g_g_ey_noSlide>)))) (([(<any_Cx_g_ey_z> z)] | [(z <any_Cx_g_ey_z>)]) ([(<any_Vx_g_ey_z> z)] | [(z <any_Vx_g_ey_z>)]) sil))
Running scan for frate = 80
Considering guard g with value 2.6 for hh ...
candidateGuards = map[g:true]
Picking guard, g

Considering guard g with value 2.6 for ey ...
candidateGuards = map[g:true]
Picking guard, g

frate, target rule = 80 public <hay> = (((sil [((iy <any_Cx_hh_iy_b>) | (<any_Cx_hh_iy_b> iy))] [((iy <any_vowel_noSlide>) | (<any_vowel_noSlide> iy))]) | (sil b (sil [((iy <any_Cx_hh_iy_b>) | (<any_Cx_hh_iy_b> iy))] [((iy <any_vowel_noSlide>) | (<any_vowel_noSlide> iy))]))) (([(<any_Cx_g_b_iy_hh> g)] | [(g <any_Cx_g_b_iy_hh>)]) (hh | ((<any_Cx_g_b_iy_hh> g) | (g <any_Cx_g_b_iy_hh>)))) ((([(<any_Vx_g_g_ey_noSlide> g)] | [(g <any_Vx_g_g_ey_noSlide>)]) ([(<any_Cx_g_g_hh> g)] | [(g <any_Cx_g_g_hh>)])) (ey | ((<any_Vx_g_g_ey_noSlide> g) | (g <any_Vx_g_g_ey_noSlide>)))) (([(<any_Cx_g_ey_hh> hh)] | [(hh <any_Cx_g_ey_hh>)]) ([(<any_Vx_g_ey_hh> hh)] | [(hh <any_Vx_g_ey_hh>)]) sil))
Running scan for frate = 72
Considering guard g with value 2.6 for hh ...
candidateGuards = map[g:true]
Picking guard, g

Considering guard g with value 2.6 for ey ...
candidateGuards = map[g:true]
Picking guard, g

frate, target rule = 72 public <hay> = (((sil [((z <any_Cx_hh_z_b>) | (<any_Cx_hh_z_b> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil b (sil [((z <any_Cx_hh_z_b>) | (<any_Cx_hh_z_b> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_g_b_z_hh> g)] | [(g <any_Cx_g_b_z_hh>)]) (hh | ((<any_Cx_g_b_z_hh> g) | (g <any_Cx_g_b_z_hh>)))) ((([(<any_Vx_g_g_ey_noSlide> g)] | [(g <any_Vx_g_g_ey_noSlide>)]) ([(<any_Cx_g_g_hh> g)] | [(g <any_Cx_g_g_hh>)])) (ey | ((<any_Vx_g_g_ey_noSlide> g) | (g <any_Vx_g_g_ey_noSlide>)))) (([(<any_Cx_g_ey_hh> hh)] | [(hh <any_Cx_g_ey_hh>)]) ([(<any_Vx_g_ey_hh> hh)] | [(hh <any_Vx_g_ey_hh>)]) sil))

results =
{72 [{sil 0 9} {g 10 19} {l 20 30} {ey 31 54} {sil 55 66}]}
{80 [{sil 0 10} {g 11 20} {l 21 33} {ey 34 60} {sil 61 71}]}
{91 [{sil 0 12} {g 13 25} {l 26 37} {ey 38 62} {z 63 65} {uw 66 82} {sil 83 134}]}
{105 [{sil 0 14} {g 15 20} {v 21 27} {g 28 30} {l 31 42} {eh 43 63} {g 64 66} {g 67 70} {uw 71 95} {sil 96 155}]}
{125 [{sil 0 15} {g 16 34} {l 35 49} {uw 50 106} {g 107 110} {sil 111 183}]}

normalised results =
{72 [{sil 0 9} {g 14 26} {l 28 42} {ey 43 75} {sil 76 92}]}
{80 [{sil 0 10} {g 14 25} {l 26 41} {ey 43 75} {sil 76 89}]}
{91 [{sil 0 12} {g 14 27} {l 29 41} {ey 42 68} {z 69 69} {uw 73 90} {sil 91 147}]}
{105 [{sil 0 14} {g 14 19} {v 20 26} {g 27 27} {l 30 40} {eh 41 60} {g 61 61} {g 64 67} {uw 68 90} {sil 91 148}]}
{125 [{sil 0 15} {g 13 27} {l 28 39} {uw 40 85} {g 86 88} {sil 89 146}]}

ruleAligned = [{{hh 2} []} {{g 3} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{l 3} [{0 2} {1 2} {2 2} {4 2}]} {{ey 1} [{0 3} {1 3} {2 3}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {g 14 26} {l 28 42} {ey 43 75} {sil 76 76}]}
{80 [{sil 0 0} {g 14 25} {l 26 41} {ey 43 75} {sil 76 76}]}
{91 [{sil 0 0} {g 14 27} {l 29 41} {ey 42 68} {z 69 69} {uw 73 90} {sil 91 91}]}
{105 [{sil 0 0} {g 14 19} {v 20 26} {g 27 27} {l 30 40} {eh 41 60} {g 61 61} {g 64 64} {uw 68 90} {sil 91 91}]}
{125 [{sil 0 0} {g 13 27} {l 28 39} {uw 40 85} {g 86 86} {sil 89 89}]}

timeAligned = [{{g 14 26} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{l 28 41} [{0 2} {1 2} {4 2} {2 2} {3 4}]} {{ey 43 68} [{0 3} {1 3} {2 3}]} {{uw 73 85} [{2 5} {3 8} {4 3}]}]

i, iTime, newITime, timeStartFrom = 0 0 -1 0
i, iTime, newITime, timeStartFrom = 1 0 0 0
i, iTime, newITime, timeStartFrom = 2 0 1 19
i, iTime, newITime, timeStartFrom = 3 1 2 39
combinedVerdict    = [{hh 2} {g 3} {l 3} {ey 1} {uw 3}]
ruleAlignedVerdict = [{hh 2} {g 3} {l 3} {ey 1}]

score->
-2 for hh
-2 for g
-2 for l
+1 for ey
-2 for uw
score<-: -7
bestResult = {-7 [{hh 2} {g 3} {l 3} {ey 1} {uw 3}] [hh ey]}
testPronounce hh missing g surprise l surprise ey possible uw surprise
publish->
phonsToAlphas = [{[hh] h} {[ey] ay}]
getVerdict<-:new {h [hh] 2}
getVerdict<-:new {ay [ey] 1}
lettersVerdicts = [{h [hh] 2} {g [g] 3} {l [l] 3} {ay [ey] 1} {uw [uw] 3}]
publish<-
{
  "word": "hay",
  "results": [
    {
      "letters": "h",
      "phonemes": "h",
      "verdict": "missing"
    },
    {
      "letters": "g",
      "phonemes": "g",
      "verdict": "surprise"
    },
    {
      "letters": "l",
      "phonemes": "l",
      "verdict": "surprise"
    },
    {
      "letters": "ay",
      "phonemes": "eÉª",
      "verdict": "possible"
    },
    {
      "letters": "uw",
      "phonemes": "u",
      "verdict": "surprise"
    }
  ],
  "err": null
}
