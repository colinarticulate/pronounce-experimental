Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_3fddf451-1173-4fc3-be87-305cafcb7b4b audiofile /Users/test/go/src/Phonemes/audio_clips/clay1_philip.wav word clay dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  2.282313



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.76 0.94 1.7

 start3, duration3, end3 =  0.86 0.76 1.62

 Initial start, duration, end =  0.66 1.04 1.7

 Cut at: start, duration =  0.66 1.49     guard_end =  2.15 

Running scan for frate = 125
Running scan for frate = 125
Considering guard n with value 3 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard y with value 7.200000000000001 for l ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 1.6 for ey ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard w with value 2 for kl ...
candidateGuards = map[w:true]
Picking guard, w

Considering guard w with value 2 for ey ...
candidateGuards = map[w:true]
Picking guard, w

frate, target rule = 125 public <clay> = (((sil [((ch <any_Cx_k_ch_b>) | (<any_Cx_k_ch_b> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil b (sil [((ch <any_Cx_k_ch_b>) | (<any_Cx_k_ch_b> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_n_b_ch_k_l> n)] | [(n <any_Cx_n_b_ch_k_l>)]) (k | d | ((<any_Cx_n_b_ch_k_l> n) | (n <any_Cx_n_b_ch_k_l>)))) (([(<any_Cx_y_n_l_k> y)] | [(y <any_Cx_y_n_l_k>)]) (l | ((<any_Cx_y_n_l> y) | (y <any_Cx_y_n_l>)))) ((([(<any_Vx_sh_y_ey_noSlide> sh)] | [(sh <any_Vx_sh_y_ey_noSlide>)]) ([(<any_Cx_sh_y_l> sh)] | [(sh <any_Cx_sh_y_l>)])) (ey | ((<any_Vx_sh_y_ey_noSlide> sh) | (sh <any_Vx_sh_y_ey_noSlide>)))) (([(<any_Cx_sh_ey_f> f)] | [(f <any_Cx_sh_ey_f>)]) ([(<any_Vx_sh_ey_f> f)] | [(f <any_Vx_sh_ey_f>)]) sil))
frate, target rule = 125 public <clay> = (((sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_w_p_z_kl> w)] | [(w <any_Cx_w_p_z_kl>)]) (kl | ((<any_Cx_w_p_z_kl> w) | (w <any_Cx_w_p_z_kl>)))) ((([(<any_Vx_w_w_ey_noSlide> w)] | [(w <any_Vx_w_w_ey_noSlide>)]) ([(<any_Cx_w_w_kl> w)] | [(w <any_Cx_w_w_kl>)])) (ey | ((<any_Vx_w_w_ey_noSlide> w) | (w <any_Vx_w_w_ey_noSlide>)))) (([(<any_Cx_w_ey_n> n)] | [(n <any_Cx_w_ey_n>)]) ([(<any_Vx_w_ey_n> n)] | [(n <any_Vx_w_ey_n>)]) sil))
Running scan for frate = 105
Running scan for frate = 105
Considering guard n with value 3 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard y with value 7.200000000000001 for l ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard w with value 2 for kl ...
candidateGuards = map[w:true]
Picking guard, w

Considering guard w with value 2 for ey ...
candidateGuards = map[w:true]
Picking guard, w

Considering guard sh with value 1.6 for ey ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 105 public <clay> = (((sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_w_p_z_kl> w)] | [(w <any_Cx_w_p_z_kl>)]) (kl | ((<any_Cx_w_p_z_kl> w) | (w <any_Cx_w_p_z_kl>)))) ((([(<any_Vx_w_w_ey_noSlide> w)] | [(w <any_Vx_w_w_ey_noSlide>)]) ([(<any_Cx_w_w_kl> w)] | [(w <any_Cx_w_w_kl>)])) (ey | ((<any_Vx_w_w_ey_noSlide> w) | (w <any_Vx_w_w_ey_noSlide>)))) (([(<any_Cx_w_ey_n> n)] | [(n <any_Cx_w_ey_n>)]) ([(<any_Vx_w_ey_n> n)] | [(n <any_Vx_w_ey_n>)]) sil))
frate, target rule = 105 public <clay> = (((sil [((ch <any_Cx_k_ch_b>) | (<any_Cx_k_ch_b> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil b (sil [((ch <any_Cx_k_ch_b>) | (<any_Cx_k_ch_b> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_n_b_ch_k_l> n)] | [(n <any_Cx_n_b_ch_k_l>)]) (k | d | ((<any_Cx_n_b_ch_k_l> n) | (n <any_Cx_n_b_ch_k_l>)))) (([(<any_Cx_y_n_l_k> y)] | [(y <any_Cx_y_n_l_k>)]) (l | ((<any_Cx_y_n_l> y) | (y <any_Cx_y_n_l>)))) ((([(<any_Vx_sh_y_ey_noSlide> sh)] | [(sh <any_Vx_sh_y_ey_noSlide>)]) ([(<any_Cx_sh_y_l> sh)] | [(sh <any_Cx_sh_y_l>)])) (ey | ((<any_Vx_sh_y_ey_noSlide> sh) | (sh <any_Vx_sh_y_ey_noSlide>)))) (([(<any_Cx_sh_ey_thr> thr)] | [(thr <any_Cx_sh_ey_thr>)]) ([(<any_Vx_sh_ey_thr> thr)] | [(thr <any_Vx_sh_ey_thr>)]) sil))
Running scan for frate = 91
Running scan for frate = 91
Considering guard w with value 2 for kl ...
candidateGuards = map[w:true]
Picking guard, w

Considering guard n with value 3 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard w with value 2 for ey ...
candidateGuards = map[w:true]
Picking guard, w

Considering guard y with value 7.200000000000001 for l ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 1.6 for ey ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 91 public <clay> = (((sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_w_p_z_kl> w)] | [(w <any_Cx_w_p_z_kl>)]) (kl | ((<any_Cx_w_p_z_kl> w) | (w <any_Cx_w_p_z_kl>)))) ((([(<any_Vx_w_w_ey_noSlide> w)] | [(w <any_Vx_w_w_ey_noSlide>)]) ([(<any_Cx_w_w_kl> w)] | [(w <any_Cx_w_w_kl>)])) (ey | ((<any_Vx_w_w_ey_noSlide> w) | (w <any_Vx_w_w_ey_noSlide>)))) (([(<any_Cx_w_ey_w> w)] | [(w <any_Cx_w_ey_w>)]) ([(<any_Vx_w_ey_w> w)] | [(w <any_Vx_w_ey_w>)]) sil))
Running scan for frate = 80
frate, target rule = 91 public <clay> = (((sil [((t <any_Cx_k_t_b>) | (<any_Cx_k_t_b> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil b (sil [((t <any_Cx_k_t_b>) | (<any_Cx_k_t_b> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_n_b_t_k_l> n)] | [(n <any_Cx_n_b_t_k_l>)]) (k | d | ((<any_Cx_n_b_t_k_l> n) | (n <any_Cx_n_b_t_k_l>)))) (([(<any_Cx_y_n_l_k> y)] | [(y <any_Cx_y_n_l_k>)]) (l | ((<any_Cx_y_n_l> y) | (y <any_Cx_y_n_l>)))) ((([(<any_Vx_sh_y_ey_noSlide> sh)] | [(sh <any_Vx_sh_y_ey_noSlide>)]) ([(<any_Cx_sh_y_l> sh)] | [(sh <any_Cx_sh_y_l>)])) (ey | ((<any_Vx_sh_y_ey_noSlide> sh) | (sh <any_Vx_sh_y_ey_noSlide>)))) (([(<any_Cx_sh_ey_w> w)] | [(w <any_Cx_sh_ey_w>)]) ([(<any_Vx_sh_ey_w> w)] | [(w <any_Vx_sh_ey_w>)]) sil))
Considering guard w with value 2 for kl ...
candidateGuards = map[w:true]
Picking guard, w

Considering guard w with value 2 for ey ...
candidateGuards = map[w:true]
Picking guard, w

Running scan for frate = 80
Considering guard n with value 3 for k ...
candidateGuards = map[n:true]
Picking guard, n

frate, target rule = 80 public <clay> = (((sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_w_p_z_kl> w)] | [(w <any_Cx_w_p_z_kl>)]) (kl | ((<any_Cx_w_p_z_kl> w) | (w <any_Cx_w_p_z_kl>)))) ((([(<any_Vx_w_w_ey_noSlide> w)] | [(w <any_Vx_w_w_ey_noSlide>)]) ([(<any_Cx_w_w_kl> w)] | [(w <any_Cx_w_w_kl>)])) (ey | ((<any_Vx_w_w_ey_noSlide> w) | (w <any_Vx_w_w_ey_noSlide>)))) (([(<any_Cx_w_ey_n> n)] | [(n <any_Cx_w_ey_n>)]) ([(<any_Vx_w_ey_n> n)] | [(n <any_Vx_w_ey_n>)]) sil))
Considering guard y with value 7.200000000000001 for l ...
candidateGuards = map[y:true]
Picking guard, y

Running scan for frate = 72
Considering guard sh with value 1.6 for ey ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard w with value 2 for kl ...
candidateGuards = map[w:true]
Picking guard, w

Considering guard w with value 2 for ey ...
candidateGuards = map[w:true]
Picking guard, w

frate, target rule = 80 public <clay> = (((sil [((g <any_Cx_k_g_b>) | (<any_Cx_k_g_b> g))] [((g <any_vowel_noSlide>) | (<any_vowel_noSlide> g))]) | (sil b (sil [((g <any_Cx_k_g_b>) | (<any_Cx_k_g_b> g))] [((g <any_vowel_noSlide>) | (<any_vowel_noSlide> g))]))) (([(<any_Cx_n_b_g_k_l> n)] | [(n <any_Cx_n_b_g_k_l>)]) (k | d | ((<any_Cx_n_b_g_k_l> n) | (n <any_Cx_n_b_g_k_l>)))) (([(<any_Cx_y_n_l_k> y)] | [(y <any_Cx_y_n_l_k>)]) (l | ((<any_Cx_y_n_l> y) | (y <any_Cx_y_n_l>)))) ((([(<any_Vx_sh_y_ey_noSlide> sh)] | [(sh <any_Vx_sh_y_ey_noSlide>)]) ([(<any_Cx_sh_y_l> sh)] | [(sh <any_Cx_sh_y_l>)])) (ey | ((<any_Vx_sh_y_ey_noSlide> sh) | (sh <any_Vx_sh_y_ey_noSlide>)))) (([(<any_Cx_sh_ey_hh> hh)] | [(hh <any_Cx_sh_ey_hh>)]) ([(<any_Vx_sh_ey_hh> hh)] | [(hh <any_Vx_sh_ey_hh>)]) sil))
frate, target rule = 72 public <clay> = (((sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_w_p_z_kl> w)] | [(w <any_Cx_w_p_z_kl>)]) (kl | ((<any_Cx_w_p_z_kl> w) | (w <any_Cx_w_p_z_kl>)))) ((([(<any_Vx_w_w_ey_noSlide> w)] | [(w <any_Vx_w_w_ey_noSlide>)]) ([(<any_Cx_w_w_kl> w)] | [(w <any_Cx_w_w_kl>)])) (ey | ((<any_Vx_w_w_ey_noSlide> w) | (w <any_Vx_w_w_ey_noSlide>)))) (([(<any_Cx_w_ey_n> n)] | [(n <any_Cx_w_ey_n>)]) ([(<any_Vx_w_ey_n> n)] | [(n <any_Vx_w_ey_n>)]) sil))
Running scan for frate = 72
Considering guard n with value 3 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard y with value 7.200000000000001 for l ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 1.6 for ey ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 72 public <clay> = (((sil [((t <any_Cx_k_t_b>) | (<any_Cx_k_t_b> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil b (sil [((t <any_Cx_k_t_b>) | (<any_Cx_k_t_b> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_n_b_t_k_l> n)] | [(n <any_Cx_n_b_t_k_l>)]) (k | d | ((<any_Cx_n_b_t_k_l> n) | (n <any_Cx_n_b_t_k_l>)))) (([(<any_Cx_y_n_l_k> y)] | [(y <any_Cx_y_n_l_k>)]) (l | ((<any_Cx_y_n_l> y) | (y <any_Cx_y_n_l>)))) ((([(<any_Vx_sh_y_ey_noSlide> sh)] | [(sh <any_Vx_sh_y_ey_noSlide>)]) ([(<any_Cx_sh_y_l> sh)] | [(sh <any_Cx_sh_y_l>)])) (ey | ((<any_Vx_sh_y_ey_noSlide> sh) | (sh <any_Vx_sh_y_ey_noSlide>)))) (([(<any_Cx_sh_ey_n> n)] | [(n <any_Cx_sh_ey_n>)]) ([(<any_Vx_sh_ey_n> n)] | [(n <any_Vx_sh_ey_n>)]) sil))

results =
{72 [{sil 0 9} {g 10 17} {w 18 29} {ey 30 32} {ay 33 47} {n 48 60} {sil 61 66}]}
{80 [{sil 0 10} {g 11 20} {w 21 27} {w 28 31} {eh 32 41} {ay 42 52} {n 53 67} {sil 68 71}]}
{91 [{sil 0 12} {g 13 18} {z 19 21} {kl 22 30} {w 31 37} {uw 38 82} {sil 83 134}]}
{105 [{sil 0 14} {g 15 20} {z 21 23} {kl 24 33} {uh 34 37} {w 38 42} {er 43 69} {n 70 89} {sil 90 155}]}
{125 [{sil 0 23} {kl 24 37} {uh 38 42} {w 43 48} {er 49 81} {n 82 111} {sil 112 183}]}

normalised results =
{72 [{sil 0 9} {g 14 24} {w 25 40} {ey 42 42} {ay 46 65} {n 67 83} {sil 85 92}]}
{80 [{sil 0 10} {g 14 25} {w 26 34} {w 35 39} {eh 40 51} {ay 53 65} {n 66 84} {sil 85 89}]}
{91 [{sil 0 12} {g 14 20} {z 21 21} {kl 24 33} {w 34 41} {uw 42 90} {sil 91 147}]}
{105 [{sil 0 14} {g 14 19} {z 20 20} {kl 23 31} {uh 32 35} {w 36 40} {er 41 66} {n 67 85} {sil 86 148}]}
{125 [{sil 0 23} {kl 19 30} {uh 30 34} {w 34 38} {er 39 65} {n 66 89} {sil 90 146}]}

ruleAligned = [{{kl 1} [{2 3} {3 3} {4 1}]} {{ey 2} []} {{n 3} [{0 5} {1 6} {3 7} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {g 14 24} {w 25 40} {ey 42 42} {ay 46 65} {n 67 83} {sil 85 85}]}
{80 [{sil 0 0} {g 14 25} {w 26 34} {w 35 35} {eh 40 51} {ay 53 65} {n 66 84} {sil 85 85}]}
{91 [{sil 0 0} {g 14 20} {z 21 21} {kl 24 33} {w 34 41} {uw 42 90} {sil 91 91}]}
{105 [{sil 0 0} {g 14 19} {z 20 20} {kl 23 31} {uh 32 32} {w 36 36} {er 41 66} {n 67 85} {sil 86 86}]}
{125 [{sil 0 0} {kl 19 30} {uh 30 34} {w 34 34} {er 39 65} {n 66 89} {sil 90 90}]}

timeAligned = [{{g 14 20} [{0 1} {1 1} {2 1} {3 1}]} {{kl 24 30} [{2 3} {3 3} {4 1}]} {{n 67 84} [{0 5} {1 6} {3 7} {4 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 1 0
i, iTime, newITime, timeStartFrom = 1 1 -1 30
i, iTime, newITime, timeStartFrom = 2 1 2 30
combinedVerdict    = [{g 3} {kl 1} {ey 2} {n 3}]
ruleAlignedVerdict = [{kl 1} {ey 2} {n 3}]

score->
-2 for g
+1 for kl
-2 for ey
-2 for n
score<-: -5

results =
{72 [{sil 0 8} {k 9 19} {l 20 29} {ey 30 32} {ay 33 47} {n 48 60} {sil 61 66}]}
{80 [{sil 0 10} {k 11 22} {l 23 33} {ey 34 60} {sil 61 71}]}
{91 [{sil 0 12} {k 13 26} {l 27 37} {ey 38 76} {sil 77 134}]}
{105 [{sil 0 14} {k 15 31} {l 32 43} {uw 44 90} {sh 91 93} {sil 94 155}]}
{125 [{sil 0 15} {k 16 35} {l 36 49} {ey 50 103} {sil 104 183}]}

normalised results =
{72 [{sil 0 8} {k 13 26} {l 28 40} {ey 42 42} {ay 46 65} {n 67 83} {sil 85 92}]}
{80 [{sil 0 10} {k 14 28} {l 29 41} {ey 43 75} {sil 76 89}]}
{91 [{sil 0 12} {k 14 29} {l 30 41} {ey 42 84} {sil 85 147}]}
{105 [{sil 0 14} {k 14 30} {l 30 41} {uw 42 86} {sh 87 87} {sil 90 148}]}
{125 [{sil 0 15} {k 13 28} {l 29 39} {ey 40 82} {sil 83 146}]}

ruleAligned = [{{k 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{l 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{ey 1} [{1 3} {2 3} {4 3}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {k 13 26} {l 28 40} {ey 42 42} {ay 46 65} {n 67 83} {sil 85 85}]}
{80 [{sil 0 0} {k 14 28} {l 29 41} {ey 43 75} {sil 76 76}]}
{91 [{sil 0 0} {k 14 29} {l 30 41} {ey 42 84} {sil 85 85}]}
{105 [{sil 0 0} {k 14 30} {l 30 41} {uw 42 86} {sh 87 87} {sil 90 90}]}
{125 [{sil 0 0} {k 13 28} {l 29 39} {ey 40 82} {sil 83 83}]}

timeAligned = [{{k 14 28} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{l 29 41} [{0 2} {1 2} {4 2} {2 2} {3 2}]} {{ey 43 75} [{1 3} {2 3} {4 3}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 26
i, iTime, newITime, timeStartFrom = 2 1 2 39
combinedVerdict    = [{k 0} {l 0} {ey 1}]
ruleAlignedVerdict = [{k 0} {l 0} {ey 1}]

score->
+2 for k
+2 for l
+1 for ey
score<-: 10
testPronounce k good l good ey possible
publish->
phonsToAlphas = [{[k] c} {[l] l} {[ey] ay}]
getVerdict<-:new {c [k] 0}
getVerdict<-:new {l [l] 0}
getVerdict<-:new {ay [ey] 1}
lettersVerdicts = [{c [k] 0} {l [l] 0} {ay [ey] 1}]
publish<-
{
  "word": "clay",
  "results": [
    {
      "letters": "c",
      "phonemes": "k",
      "verdict": "good"
    },
    {
      "letters": "l",
      "phonemes": "l",
      "verdict": "good"
    },
    {
      "letters": "ay",
      "phonemes": "eɪ",
      "verdict": "possible"
    }
  ],
  "err": null
}
