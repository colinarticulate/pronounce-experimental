Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_d2f62691-2f87-4438-adc7-9132cd8a31db audiofile /Users/test/go/src/Phonemes/audio_clips/climbed1_colin.wav word climbed dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  1.500563



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.5800000000000001 0.74 1.32

 start3, duration3, end3 =  0.5800000000000001 0.58 1.1600000000000001

 Initial start, duration, end =  0.4800000000000001 0.84 1.32

 Cut at: start, duration =  0.4800000000000001 1.000563     guard_end =  1.480563 

Running scan for frate = 125
Running scan for frate = 125
Considering guard zh with value 1 for kl ...
Considering guard z with value 1 for kl ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard n with value 3 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard zh with value 2.4000000000000004 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard y with value 7.199999999999999 for l ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 125 public <climbed> = (((sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_kl> zh)] | [(zh <any_Cx_zh_p_z_kl>)]) (kl | ((<any_Cx_zh_p_z_kl> zh) | (zh <any_Cx_zh_p_z_kl>)))) ((([(<any_Vx_zh_zh_ay_noSlide> zh)] | [(zh <any_Vx_zh_zh_ay_noSlide>)]) ([(<any_Cx_zh_zh_m_kl> zh)] | [(zh <any_Cx_zh_zh_m_kl>)])) (ay | ((<any_Vx_zh_zh_ay_noSlide> zh) | (zh <any_Vx_zh_zh_ay_noSlide>)))) (([(<any_Cx_sh_zh_m> sh)] | [(sh <any_Cx_sh_zh_m>)]) (m | ((<any_Cx_sh_zh_m_d> sh) | (sh <any_Cx_sh_zh_m_d>)))) (([(<any_Cx_sh_sh_d_m> sh)] | [(sh <any_Cx_sh_sh_d_m>)]) (d | ((<any_Cx_sh_sh_d_m> sh) | (sh <any_Cx_sh_sh_d_m>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_b> b)] | [(b <any_Cx_sh_d_b>)]) sil))
frate, target rule = 125 public <climbed> = (((sil [((d <any_Cx_k_d_b>) | (<any_Cx_k_d_b> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil b (sil [((d <any_Cx_k_d_b>) | (<any_Cx_k_d_b> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_n_b_d_k_l> n)] | [(n <any_Cx_n_b_d_k_l>)]) (k | d | ((<any_Cx_n_b_d_k_l> n) | (n <any_Cx_n_b_d_k_l>)))) (([(<any_Cx_y_n_l_k> y)] | [(y <any_Cx_y_n_l_k>)]) (l | ((<any_Cx_y_n_l> y) | (y <any_Cx_y_n_l>)))) ((([(<any_Vx_sh_y_ay_noSlide> sh)] | [(sh <any_Vx_sh_y_ay_noSlide>)]) ([(<any_Cx_sh_y_m_l> sh)] | [(sh <any_Cx_sh_y_m_l>)])) (ay | ((<any_Vx_sh_y_ay_noSlide> sh) | (sh <any_Vx_sh_y_ay_noSlide>)))) (([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)]) (m | ((<any_Cx_sh_sh_m_d> sh) | (sh <any_Cx_sh_sh_m_d>)))) (([(<any_Cx_sh_sh_d_m> sh)] | [(sh <any_Cx_sh_sh_d_m>)]) (d | ((<any_Cx_sh_sh_d_m> sh) | (sh <any_Cx_sh_sh_d_m>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_v> v)] | [(v <any_Cx_sh_d_v>)]) sil))
Running scan for frate = 105
Running scan for frate = 105
Considering guard z with value 1 for kl ...
Considering guard zh with value 1 for kl ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard n with value 3 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard zh with value 2.4000000000000004 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard y with value 7.199999999999999 for l ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 105 public <climbed> = (((sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_kl> zh)] | [(zh <any_Cx_zh_p_z_kl>)]) (kl | ((<any_Cx_zh_p_z_kl> zh) | (zh <any_Cx_zh_p_z_kl>)))) ((([(<any_Vx_zh_zh_ay_noSlide> zh)] | [(zh <any_Vx_zh_zh_ay_noSlide>)]) ([(<any_Cx_zh_zh_m_kl> zh)] | [(zh <any_Cx_zh_zh_m_kl>)])) (ay | ((<any_Vx_zh_zh_ay_noSlide> zh) | (zh <any_Vx_zh_zh_ay_noSlide>)))) (([(<any_Cx_sh_zh_m> sh)] | [(sh <any_Cx_sh_zh_m>)]) (m | ((<any_Cx_sh_zh_m_d> sh) | (sh <any_Cx_sh_zh_m_d>)))) (([(<any_Cx_sh_sh_d_m> sh)] | [(sh <any_Cx_sh_sh_d_m>)]) (d | ((<any_Cx_sh_sh_d_m> sh) | (sh <any_Cx_sh_sh_d_m>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_thr> thr)] | [(thr <any_Cx_sh_d_thr>)]) sil))
Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 91
frate, target rule = 105 public <climbed> = (((sil [((t <any_Cx_k_t_b>) | (<any_Cx_k_t_b> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil b (sil [((t <any_Cx_k_t_b>) | (<any_Cx_k_t_b> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_n_b_t_k_l> n)] | [(n <any_Cx_n_b_t_k_l>)]) (k | d | ((<any_Cx_n_b_t_k_l> n) | (n <any_Cx_n_b_t_k_l>)))) (([(<any_Cx_y_n_l_k> y)] | [(y <any_Cx_y_n_l_k>)]) (l | ((<any_Cx_y_n_l> y) | (y <any_Cx_y_n_l>)))) ((([(<any_Vx_sh_y_ay_noSlide> sh)] | [(sh <any_Vx_sh_y_ay_noSlide>)]) ([(<any_Cx_sh_y_m_l> sh)] | [(sh <any_Cx_sh_y_m_l>)])) (ay | ((<any_Vx_sh_y_ay_noSlide> sh) | (sh <any_Vx_sh_y_ay_noSlide>)))) (([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)]) (m | ((<any_Cx_sh_sh_m_d> sh) | (sh <any_Cx_sh_sh_m_d>)))) (([(<any_Cx_sh_sh_d_m> sh)] | [(sh <any_Cx_sh_sh_d_m>)]) (d | ((<any_Cx_sh_sh_d_m> sh) | (sh <any_Cx_sh_sh_d_m>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_thr> thr)] | [(thr <any_Cx_sh_d_thr>)]) sil))
Considering guard z with value 1 for kl ...
Considering guard zh with value 1 for kl ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard zh with value 2.4000000000000004 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

Running scan for frate = 91
Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard n with value 3 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard y with value 7.199999999999999 for l ...
candidateGuards = map[y:true]
Picking guard, y

frate, target rule = 91 public <climbed> = (((sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_z_p_z_kl> z)] | [(z <any_Cx_z_p_z_kl>)]) (kl | ((<any_Cx_z_p_z_kl> z) | (z <any_Cx_z_p_z_kl>)))) ((([(<any_Vx_zh_z_ay_noSlide> zh)] | [(zh <any_Vx_zh_z_ay_noSlide>)]) ([(<any_Cx_zh_z_m_kl> zh)] | [(zh <any_Cx_zh_z_m_kl>)])) (ay | ((<any_Vx_zh_z_ay_noSlide> zh) | (zh <any_Vx_zh_z_ay_noSlide>)))) (([(<any_Cx_sh_zh_m> sh)] | [(sh <any_Cx_sh_zh_m>)]) (m | ((<any_Cx_sh_zh_m_d> sh) | (sh <any_Cx_sh_zh_m_d>)))) (([(<any_Cx_sh_sh_d_m> sh)] | [(sh <any_Cx_sh_sh_d_m>)]) (d | ((<any_Cx_sh_sh_d_m> sh) | (sh <any_Cx_sh_sh_d_m>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_v> v)] | [(v <any_Cx_sh_d_v>)]) sil))
Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 80
Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard z with value 1 for kl ...
Considering guard zh with value 1 for kl ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard zh with value 2.4000000000000004 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 91 public <climbed> = (((sil [((t <any_Cx_k_t_b>) | (<any_Cx_k_t_b> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil b (sil [((t <any_Cx_k_t_b>) | (<any_Cx_k_t_b> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_n_b_t_k_l> n)] | [(n <any_Cx_n_b_t_k_l>)]) (k | d | ((<any_Cx_n_b_t_k_l> n) | (n <any_Cx_n_b_t_k_l>)))) (([(<any_Cx_y_n_l_k> y)] | [(y <any_Cx_y_n_l_k>)]) (l | ((<any_Cx_y_n_l> y) | (y <any_Cx_y_n_l>)))) ((([(<any_Vx_sh_y_ay_noSlide> sh)] | [(sh <any_Vx_sh_y_ay_noSlide>)]) ([(<any_Cx_sh_y_m_l> sh)] | [(sh <any_Cx_sh_y_m_l>)])) (ay | ((<any_Vx_sh_y_ay_noSlide> sh) | (sh <any_Vx_sh_y_ay_noSlide>)))) (([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)]) (m | ((<any_Cx_sh_sh_m_d> sh) | (sh <any_Cx_sh_sh_m_d>)))) (([(<any_Cx_sh_sh_d_m> sh)] | [(sh <any_Cx_sh_sh_d_m>)]) (d | ((<any_Cx_sh_sh_d_m> sh) | (sh <any_Cx_sh_sh_d_m>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_b> b)] | [(b <any_Cx_sh_d_b>)]) sil))
Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 80
Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard n with value 3 for k ...
candidateGuards = map[n:true]
Picking guard, n

frate, target rule = 80 public <climbed> = (((sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_kl> zh)] | [(zh <any_Cx_zh_p_z_kl>)]) (kl | ((<any_Cx_zh_p_z_kl> zh) | (zh <any_Cx_zh_p_z_kl>)))) ((([(<any_Vx_zh_zh_ay_noSlide> zh)] | [(zh <any_Vx_zh_zh_ay_noSlide>)]) ([(<any_Cx_zh_zh_m_kl> zh)] | [(zh <any_Cx_zh_zh_m_kl>)])) (ay | ((<any_Vx_zh_zh_ay_noSlide> zh) | (zh <any_Vx_zh_zh_ay_noSlide>)))) (([(<any_Cx_sh_zh_m> sh)] | [(sh <any_Cx_sh_zh_m>)]) (m | ((<any_Cx_sh_zh_m_d> sh) | (sh <any_Cx_sh_zh_m_d>)))) (([(<any_Cx_sh_sh_d_m> sh)] | [(sh <any_Cx_sh_sh_d_m>)]) (d | ((<any_Cx_sh_sh_d_m> sh) | (sh <any_Cx_sh_sh_d_m>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_g> g)] | [(g <any_Cx_sh_d_g>)]) sil))
Considering guard y with value 7.199999999999999 for l ...
candidateGuards = map[y:true]
Picking guard, y

Running scan for frate = 72
Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 1 for kl ...
Considering guard z with value 1 for kl ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 2.4000000000000004 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 80 public <climbed> = (((sil [((p <any_Cx_k_p_b>) | (<any_Cx_k_p_b> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]) | (sil b (sil [((p <any_Cx_k_p_b>) | (<any_Cx_k_p_b> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]))) (([(<any_Cx_n_b_p_k_l> n)] | [(n <any_Cx_n_b_p_k_l>)]) (k | d | ((<any_Cx_n_b_p_k_l> n) | (n <any_Cx_n_b_p_k_l>)))) (([(<any_Cx_y_n_l_k> y)] | [(y <any_Cx_y_n_l_k>)]) (l | ((<any_Cx_y_n_l> y) | (y <any_Cx_y_n_l>)))) ((([(<any_Vx_sh_y_ay_noSlide> sh)] | [(sh <any_Vx_sh_y_ay_noSlide>)]) ([(<any_Cx_sh_y_m_l> sh)] | [(sh <any_Cx_sh_y_m_l>)])) (ay | ((<any_Vx_sh_y_ay_noSlide> sh) | (sh <any_Vx_sh_y_ay_noSlide>)))) (([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)]) (m | ((<any_Cx_sh_sh_m_d> sh) | (sh <any_Cx_sh_sh_m_d>)))) (([(<any_Cx_sh_sh_d_m> sh)] | [(sh <any_Cx_sh_sh_d_m>)]) (d | ((<any_Cx_sh_sh_d_m> sh) | (sh <any_Cx_sh_sh_d_m>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_thr> thr)] | [(thr <any_Cx_sh_d_thr>)]) sil))
frate, target rule = 72 public <climbed> = (((sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_kl_z_p>) | (<any_Cx_kl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_kl> zh)] | [(zh <any_Cx_zh_p_z_kl>)]) (kl | ((<any_Cx_zh_p_z_kl> zh) | (zh <any_Cx_zh_p_z_kl>)))) ((([(<any_Vx_zh_zh_ay_noSlide> zh)] | [(zh <any_Vx_zh_zh_ay_noSlide>)]) ([(<any_Cx_zh_zh_m_kl> zh)] | [(zh <any_Cx_zh_zh_m_kl>)])) (ay | ((<any_Vx_zh_zh_ay_noSlide> zh) | (zh <any_Vx_zh_zh_ay_noSlide>)))) (([(<any_Cx_sh_zh_m> sh)] | [(sh <any_Cx_sh_zh_m>)]) (m | ((<any_Cx_sh_zh_m_d> sh) | (sh <any_Cx_sh_zh_m_d>)))) (([(<any_Cx_sh_sh_d_m> sh)] | [(sh <any_Cx_sh_sh_d_m>)]) (d | ((<any_Cx_sh_sh_d_m> sh) | (sh <any_Cx_sh_sh_d_m>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_v> v)] | [(v <any_Cx_sh_d_v>)]) sil))
Running scan for frate = 72
Considering guard n with value 3 for k ...
candidateGuards = map[n:true]
Picking guard, n

Considering guard y with value 7.199999999999999 for l ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard sh with value 2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 72 public <climbed> = (((sil [((ch <any_Cx_k_ch_b>) | (<any_Cx_k_ch_b> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil b (sil [((ch <any_Cx_k_ch_b>) | (<any_Cx_k_ch_b> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_n_b_ch_k_l> n)] | [(n <any_Cx_n_b_ch_k_l>)]) (k | d | ((<any_Cx_n_b_ch_k_l> n) | (n <any_Cx_n_b_ch_k_l>)))) (([(<any_Cx_y_n_l_k> y)] | [(y <any_Cx_y_n_l_k>)]) (l | ((<any_Cx_y_n_l> y) | (y <any_Cx_y_n_l>)))) ((([(<any_Vx_sh_y_ay_noSlide> sh)] | [(sh <any_Vx_sh_y_ay_noSlide>)]) ([(<any_Cx_sh_y_m_l> sh)] | [(sh <any_Cx_sh_y_m_l>)])) (ay | ((<any_Vx_sh_y_ay_noSlide> sh) | (sh <any_Vx_sh_y_ay_noSlide>)))) (([(<any_Cx_sh_sh_m> sh)] | [(sh <any_Cx_sh_sh_m>)]) (m | ((<any_Cx_sh_sh_m_d> sh) | (sh <any_Cx_sh_sh_m_d>)))) (([(<any_Cx_sh_sh_d_m> sh)] | [(sh <any_Cx_sh_sh_d_m>)]) (d | ((<any_Cx_sh_sh_d_m> sh) | (sh <any_Cx_sh_sh_d_m>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_v> v)] | [(v <any_Cx_sh_d_v>)]) sil))

results =
{72 [{sil 0 10} {kl 11 19} {ay 20 33} {m 34 36} {d 37 52} {sil 53 70}]}
{80 [{sil 0 11} {kl 12 21} {ay 22 36} {m 37 40} {d 41 58} {sil 59 74}]}
{91 [{sil 0 16} {kl 17 23} {ay 24 40} {m 41 47} {d 48 66} {sil 67 89}]}
{105 [{sil 0 19} {kl 20 28} {ay 29 47} {m 48 55} {d 56 77} {sil 78 104}]}
{125 [{sil 0 21} {kl 22 31} {ay 32 54} {m 55 64} {d 65 87} {sil 88 122}]}

normalised results =
{72 [{sil 0 10} {kl 15 26} {ay 28 46} {m 47 47} {d 51 72} {sil 74 97}]}
{80 [{sil 0 11} {kl 15 26} {ay 28 45} {m 46 50} {d 51 73} {sil 74 93}]}
{91 [{sil 0 16} {kl 19 25} {ay 26 44} {m 45 52} {d 53 73} {sil 74 98}]}
{105 [{sil 0 19} {kl 19 27} {ay 28 45} {m 46 52} {d 53 73} {sil 74 99}]}
{125 [{sil 0 21} {kl 18 25} {ay 26 43} {m 44 51} {d 52 70} {sil 70 98}]}

ruleAligned = [{{kl 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ay 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{m 0} [{1 3} {2 3} {3 3} {4 3}]} {{d 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {kl 15 26} {ay 28 46} {m 47 47} {d 51 72} {sil 74 74}]}
{80 [{sil 0 0} {kl 15 26} {ay 28 45} {m 46 50} {d 51 73} {sil 74 74}]}
{91 [{sil 0 0} {kl 19 25} {ay 26 44} {m 45 52} {d 53 73} {sil 74 74}]}
{105 [{sil 0 0} {kl 19 27} {ay 28 45} {m 46 52} {d 53 73} {sil 74 74}]}
{125 [{sil 0 0} {kl 18 25} {ay 26 43} {m 44 51} {d 52 70} {sil 70 70}]}

timeAligned = [{{kl 18 26} [{0 1} {1 1} {4 1} {2 1} {3 1}]} {{ay 28 45} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{m 46 51} [{1 3} {2 3} {3 3} {4 3}]} {{d 52 73} [{0 4} {1 4} {4 4} {2 4} {3 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 25
i, iTime, newITime, timeStartFrom = 2 1 2 43
i, iTime, newITime, timeStartFrom = 3 2 3 50
combinedVerdict    = [{kl 0} {ay 0} {m 0} {d 0}]
ruleAlignedVerdict = [{kl 0} {ay 0} {m 0} {d 0}]

score->
+2 for kl
+2 for ay
+2 for m
+2 for d
score<-: 13

results =
{72 [{sil 0 9} {k 10 16} {l 17 20} {ay 21 33} {m 34 36} {d 37 52} {sil 53 70}]}
{80 [{sil 0 11} {k 12 18} {l 19 21} {ay 22 36} {m 37 40} {d 41 58} {sil 59 74}]}
{91 [{sil 0 16} {k 17 21} {l 22 24} {ay 25 40} {m 41 47} {d 48 66} {sil 67 89}]}
{105 [{sil 0 19} {k 20 24} {l 25 28} {ay 29 47} {m 48 55} {d 56 77} {sil 78 104}]}
{125 [{sil 0 21} {k 22 27} {l 28 31} {ay 32 54} {m 55 64} {d 65 87} {sil 88 122}]}

normalised results =
{72 [{sil 0 9} {k 14 22} {l 24 28} {ay 29 46} {m 47 47} {d 51 72} {sil 74 97}]}
{80 [{sil 0 11} {k 15 23} {l 24 24} {ay 28 45} {m 46 50} {d 51 73} {sil 74 93}]}
{91 [{sil 0 16} {k 19 23} {l 24 24} {ay 27 44} {m 45 52} {d 53 73} {sil 74 98}]}
{105 [{sil 0 19} {k 19 23} {l 24 27} {ay 28 45} {m 46 52} {d 53 73} {sil 74 99}]}
{125 [{sil 0 21} {k 18 22} {l 22 25} {ay 26 43} {m 44 51} {d 52 70} {sil 70 98}]}

ruleAligned = [{{k 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{l 1} [{0 2} {3 2} {4 2}]} {{ay 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{m 0} [{1 4} {2 4} {3 4} {4 4}]} {{d 0} [{0 5} {1 5} {2 5} {3 5} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {k 14 22} {l 24 28} {ay 29 46} {m 47 47} {d 51 72} {sil 74 74}]}
{80 [{sil 0 0} {k 15 23} {l 24 24} {ay 28 45} {m 46 50} {d 51 73} {sil 74 74}]}
{91 [{sil 0 0} {k 19 23} {l 24 24} {ay 27 44} {m 45 52} {d 53 73} {sil 74 74}]}
{105 [{sil 0 0} {k 19 23} {l 24 27} {ay 28 45} {m 46 52} {d 53 73} {sil 74 74}]}
{125 [{sil 0 0} {k 18 22} {l 22 25} {ay 26 43} {m 44 51} {d 52 70} {sil 70 70}]}

timeAligned = [{{k 18 23} [{0 1} {1 1} {4 1} {2 1} {3 1}]} {{ay 28 45} [{1 3} {2 3} {3 3} {4 3} {0 3}]} {{m 46 51} [{1 4} {2 4} {3 4} {4 4}]} {{d 52 73} [{0 5} {1 5} {4 5} {2 5} {3 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 -1 22
i, iTime, newITime, timeStartFrom = 2 0 1 22
i, iTime, newITime, timeStartFrom = 3 1 2 43
i, iTime, newITime, timeStartFrom = 4 2 3 50
combinedVerdict    = [{k 0} {l 2} {ay 0} {m 0} {d 0}]
ruleAlignedVerdict = [{k 0} {l 1} {ay 0} {m 0} {d 0}]

score->
+2 for k
-2 for l
+2 for ay
+2 for m
+2 for d
score<-: 6
testPronounce kl good ay good m good d good
publish->
phonsToAlphas = [{[kl] cl} {[ay] i} {[m] mbe} {[d] d}]
getVerdict<-:new {cl [kl] 0}
getVerdict<-:new {i [ay] 0}
getVerdict<-:new {mbe [m] 0}
getVerdict<-:new {d [d] 0}
lettersVerdicts = [{cl [kl] 0} {i [ay] 0} {mbe [m] 0} {d [d] 0}]
publish<-
{
  "word": "climbed",
  "results": [
    {
      "letters": "cl",
      "phonemes": "kl",
      "verdict": "good"
    },
    {
      "letters": "i",
      "phonemes": "ɑɪ",
      "verdict": "good"
    },
    {
      "letters": "mbe",
      "phonemes": "m",
      "verdict": "good"
    },
    {
      "letters": "d",
      "phonemes": "d",
      "verdict": "good"
    }
  ],
  "err": null
}
