Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_5b464a6c-119d-4f5d-933d-9b6a83301efd audiofile /Users/test/go/src/Phonemes/audio_clips/billing1_tressa.wav word billing dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  1.877



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.5800000000000001 0.72 1.3

 start3, duration3, end3 =  0.5800000000000001 0.66 1.2400000000000002

 Initial start, duration, end =  0.4800000000000001 0.82 1.3

 Cut at: start, duration =  0.4800000000000001 1.27     guard_end =  1.75 

Running scan for frate = 125
Running scan for frate = 125
Running scan for frate = 125
Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard jh with value 1 for b ...
Considering guard s with value 1 for b ...
Considering guard sh with value 1 for b ...
candidateGuards = map[jh:true s:true sh:true]
Picking guard, sh

Considering guard sh with value 2 for ihl ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for b ...
Considering guard jh with value 1 for b ...
Considering guard s with value 1 for b ...
candidateGuards = map[jh:true s:true sh:true]
Picking guard, s

Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard z with value 1 for ng ...
Considering guard sh with value 1 for ng ...
Considering guard s with value 1 for ng ...
Considering guard jh with value 1 for ng ...
candidateGuards = map[jh:true s:true sh:true z:true]
Picking guard, sh

Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 125
Considering guard sh with value 1 for ng ...
Considering guard jh with value 1 for ng ...
Considering guard s with value 1 for ng ...
Considering guard z with value 1 for ng ...
candidateGuards = map[jh:true s:true sh:true z:true]
Picking guard, jh

Considering guard sh with value 1 for ing ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 125 public <billing> = (((sil [((sh <any_Cx_b_sh_hh>) | (<any_Cx_b_sh_hh> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil hh (sil [((sh <any_Cx_b_sh_hh>) | (<any_Cx_b_sh_hh> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_sh_hh_sh_b> sh)] | [(sh <any_Cx_sh_hh_sh_b>)]) (b | ((<any_Cx_sh_hh_sh_b> sh) | (sh <any_Cx_sh_hh_sh_b>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_l_b> sh)] | [(sh <any_Cx_sh_sh_l_b>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_ng_l> sh)] | [(sh <any_Cx_sh_sh_ng_l>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_jh_sh_ng> jh)] | [(jh <any_Cx_jh_sh_ng>)]) (ng | ((<any_Cx_jh_sh_ng> jh) | (jh <any_Cx_jh_sh_ng>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_jh_ng_n> n)] | [(n <any_Cx_jh_ng_n>)]) sil))
Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 125 public <billing> = (((sil [((hh <any_Cx_b_hh_hh>) | (<any_Cx_b_hh_hh> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil hh (sil [((hh <any_Cx_b_hh_hh>) | (<any_Cx_b_hh_hh> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_sh_hh_hh_b_ihl> sh)] | [(sh <any_Cx_sh_hh_hh_b_ihl>)]) (b | ((<any_Cx_sh_hh_hh_b_ihl> sh) | (sh <any_Cx_sh_hh_hh_b_ihl>)))) (([(<any_Cx_sh_sh_ihl_b> sh)] | [(sh <any_Cx_sh_sh_ihl_b>)]) (ihl | ((<any_Cx_sh_sh_ihl> sh) | (sh <any_Cx_sh_sh_ihl>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_ng_ihl> sh)] | [(sh <any_Cx_sh_sh_ng_ihl>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_sh_sh_ng> sh)] | [(sh <any_Cx_sh_sh_ng>)]) (ng | ((<any_Cx_sh_sh_ng> sh) | (sh <any_Cx_sh_sh_ng>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_sh_ng_n> n)] | [(n <any_Cx_sh_ng_n>)]) sil))
frate, target rule = 125 public <billing> = (((sil [((l <any_Cx_b_l_hh>) | (<any_Cx_b_l_hh> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]) | (sil hh (sil [((l <any_Cx_b_l_hh>) | (<any_Cx_b_l_hh> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]))) (([(<any_Cx_s_hh_l_b> s)] | [(s <any_Cx_s_hh_l_b>)]) (b | ((<any_Cx_s_hh_l_b> s) | (s <any_Cx_s_hh_l_b>)))) ((([(<any_Vx_sh_s_ih_noSlide> sh)] | [(sh <any_Vx_sh_s_ih_noSlide>)]) ([(<any_Cx_sh_s_l_b> sh)] | [(sh <any_Cx_sh_s_l_b>)])) (ih | ((<any_Vx_sh_s_ih_noSlide> sh) | (sh <any_Vx_sh_s_ih_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l_ing> sh) | (sh <any_Cx_sh_sh_l_ing>)))) (([(<any_Cx_sh_sh_ing_l> sh)] | [(sh <any_Cx_sh_sh_ing_l>)]) (ing | ((<any_Cx_sh_sh_ing_l> sh) | (sh <any_Cx_sh_sh_ing_l>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_sh_ing_m> m)] | [(m <any_Cx_sh_ing_m>)]) sil))
Considering guard sh with value 2 for ihl ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 105
Considering guard sh with value 1 for ing ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 105
Running scan for frate = 105
Considering guard jh with value 1 for b ...
Considering guard s with value 1 for b ...
Considering guard sh with value 1 for b ...
candidateGuards = map[jh:true s:true sh:true]
Picking guard, jh

Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 125 public <billing> = (((sil [((hh <any_Cx_b_hh_hh>) | (<any_Cx_b_hh_hh> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil hh (sil [((hh <any_Cx_b_hh_hh>) | (<any_Cx_b_hh_hh> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_sh_hh_hh_b_ihl> sh)] | [(sh <any_Cx_sh_hh_hh_b_ihl>)]) (b | ((<any_Cx_sh_hh_hh_b_ihl> sh) | (sh <any_Cx_sh_hh_hh_b_ihl>)))) (([(<any_Cx_sh_sh_ihl_b> sh)] | [(sh <any_Cx_sh_sh_ihl_b>)]) (ihl | ((<any_Cx_sh_sh_ihl_ing> sh) | (sh <any_Cx_sh_sh_ihl_ing>)))) (([(<any_Cx_sh_sh_ing_ihl> sh)] | [(sh <any_Cx_sh_sh_ing_ihl>)]) (ing | ((<any_Cx_sh_sh_ing_ihl> sh) | (sh <any_Cx_sh_sh_ing_ihl>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_sh_ing_hh> hh)] | [(hh <any_Cx_sh_ing_hh>)]) sil))
Considering guard sh with value 1 for b ...
Considering guard jh with value 1 for b ...
Considering guard s with value 1 for b ...
candidateGuards = map[jh:true s:true sh:true]
Picking guard, sh

Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ihl ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 105
Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard s with value 1 for ng ...
Considering guard jh with value 1 for ng ...
Considering guard z with value 1 for ng ...
Considering guard sh with value 1 for ng ...
candidateGuards = map[jh:true s:true sh:true z:true]
Picking guard, z

Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ihl ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for ing ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for ng ...
Considering guard s with value 1 for ng ...
Considering guard jh with value 1 for ng ...
Considering guard z with value 1 for ng ...
candidateGuards = map[jh:true s:true sh:true z:true]
Picking guard, jh

Considering guard sh with value 1 for ing ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 105 public <billing> = (((sil [((hh <any_Cx_b_hh_hh>) | (<any_Cx_b_hh_hh> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil hh (sil [((hh <any_Cx_b_hh_hh>) | (<any_Cx_b_hh_hh> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_sh_hh_hh_b_ihl> sh)] | [(sh <any_Cx_sh_hh_hh_b_ihl>)]) (b | ((<any_Cx_sh_hh_hh_b_ihl> sh) | (sh <any_Cx_sh_hh_hh_b_ihl>)))) (([(<any_Cx_sh_sh_ihl_b> sh)] | [(sh <any_Cx_sh_sh_ihl_b>)]) (ihl | ((<any_Cx_sh_sh_ihl> sh) | (sh <any_Cx_sh_sh_ihl>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_ng_ihl> sh)] | [(sh <any_Cx_sh_sh_ng_ihl>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_z_sh_ng> z)] | [(z <any_Cx_z_sh_ng>)]) (ng | ((<any_Cx_z_sh_ng> z) | (z <any_Cx_z_sh_ng>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_z_ng_f> f)] | [(f <any_Cx_z_ng_f>)]) sil))
frate, target rule = 105 public <billing> = (((sil [((p <any_Cx_b_p_hh>) | (<any_Cx_b_p_hh> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]) | (sil hh (sil [((p <any_Cx_b_p_hh>) | (<any_Cx_b_p_hh> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]))) (([(<any_Cx_sh_hh_p_b> sh)] | [(sh <any_Cx_sh_hh_p_b>)]) (b | ((<any_Cx_sh_hh_p_b> sh) | (sh <any_Cx_sh_hh_p_b>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_l_b> sh)] | [(sh <any_Cx_sh_sh_l_b>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l_ing> sh) | (sh <any_Cx_sh_sh_l_ing>)))) (([(<any_Cx_sh_sh_ing_l> sh)] | [(sh <any_Cx_sh_sh_ing_l>)]) (ing | ((<any_Cx_sh_sh_ing_l> sh) | (sh <any_Cx_sh_sh_ing_l>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_sh_ing_n> n)] | [(n <any_Cx_sh_ing_n>)]) sil))
frate, target rule = 105 public <billing> = (((sil [((f <any_Cx_b_f_hh>) | (<any_Cx_b_f_hh> f))] [((f <any_vowel_noSlide>) | (<any_vowel_noSlide> f))]) | (sil hh (sil [((f <any_Cx_b_f_hh>) | (<any_Cx_b_f_hh> f))] [((f <any_vowel_noSlide>) | (<any_vowel_noSlide> f))]))) (([(<any_Cx_sh_hh_f_b_ihl> sh)] | [(sh <any_Cx_sh_hh_f_b_ihl>)]) (b | ((<any_Cx_sh_hh_f_b_ihl> sh) | (sh <any_Cx_sh_hh_f_b_ihl>)))) (([(<any_Cx_sh_sh_ihl_b> sh)] | [(sh <any_Cx_sh_sh_ihl_b>)]) (ihl | ((<any_Cx_sh_sh_ihl_ing> sh) | (sh <any_Cx_sh_sh_ihl_ing>)))) (([(<any_Cx_sh_sh_ing_ihl> sh)] | [(sh <any_Cx_sh_sh_ing_ihl>)]) (ing | ((<any_Cx_sh_sh_ing_ihl> sh) | (sh <any_Cx_sh_sh_ing_ihl>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_sh_ing_p> p)] | [(p <any_Cx_sh_ing_p>)]) sil))
frate, target rule = 105 public <billing> = (((sil [((f <any_Cx_b_f_hh>) | (<any_Cx_b_f_hh> f))] [((f <any_vowel_noSlide>) | (<any_vowel_noSlide> f))]) | (sil hh (sil [((f <any_Cx_b_f_hh>) | (<any_Cx_b_f_hh> f))] [((f <any_vowel_noSlide>) | (<any_vowel_noSlide> f))]))) (([(<any_Cx_jh_hh_f_b> jh)] | [(jh <any_Cx_jh_hh_f_b>)]) (b | ((<any_Cx_jh_hh_f_b> jh) | (jh <any_Cx_jh_hh_f_b>)))) ((([(<any_Vx_sh_jh_ih_noSlide> sh)] | [(sh <any_Vx_sh_jh_ih_noSlide>)]) ([(<any_Cx_sh_jh_l_b> sh)] | [(sh <any_Cx_sh_jh_l_b>)])) (ih | ((<any_Vx_sh_jh_ih_noSlide> sh) | (sh <any_Vx_sh_jh_ih_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_ng_l> sh)] | [(sh <any_Cx_sh_sh_ng_l>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_jh_sh_ng> jh)] | [(jh <any_Cx_jh_sh_ng>)]) (ng | ((<any_Cx_jh_sh_ng> jh) | (jh <any_Cx_jh_sh_ng>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_jh_ng_hh> hh)] | [(hh <any_Cx_jh_ng_hh>)]) sil))
Running scan for frate = 91
Running scan for frate = 91
Running scan for frate = 91
Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 91
Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard s with value 1 for b ...
Considering guard jh with value 1 for b ...
Considering guard sh with value 1 for b ...
candidateGuards = map[jh:true s:true sh:true]
Picking guard, s

Considering guard sh with value 2 for ihl ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ihl ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for b ...
Considering guard s with value 1 for b ...
Considering guard jh with value 1 for b ...
candidateGuards = map[jh:true s:true sh:true]
Picking guard, sh

Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for ing ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 91 public <billing> = (((sil [((l <any_Cx_b_l_hh>) | (<any_Cx_b_l_hh> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]) | (sil hh (sil [((l <any_Cx_b_l_hh>) | (<any_Cx_b_l_hh> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]))) (([(<any_Cx_sh_hh_l_b_ihl> sh)] | [(sh <any_Cx_sh_hh_l_b_ihl>)]) (b | ((<any_Cx_sh_hh_l_b_ihl> sh) | (sh <any_Cx_sh_hh_l_b_ihl>)))) (([(<any_Cx_sh_sh_ihl_b> sh)] | [(sh <any_Cx_sh_sh_ihl_b>)]) (ihl | ((<any_Cx_sh_sh_ihl_ing> sh) | (sh <any_Cx_sh_sh_ihl_ing>)))) (([(<any_Cx_sh_sh_ing_ihl> sh)] | [(sh <any_Cx_sh_sh_ing_ihl>)]) (ing | ((<any_Cx_sh_sh_ing_ihl> sh) | (sh <any_Cx_sh_sh_ing_ihl>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_sh_ing_thr> thr)] | [(thr <any_Cx_sh_ing_thr>)]) sil))
Considering guard sh with value 1 for ing ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard jh with value 1 for ng ...
Considering guard sh with value 1 for ng ...
Considering guard z with value 1 for ng ...
Considering guard s with value 1 for ng ...
candidateGuards = map[jh:true s:true sh:true z:true]
Picking guard, s

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 80
Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 91 public <billing> = (((sil [((v <any_Cx_b_v_hh>) | (<any_Cx_b_v_hh> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]) | (sil hh (sil [((v <any_Cx_b_v_hh>) | (<any_Cx_b_v_hh> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]))) (([(<any_Cx_sh_hh_v_b_ihl> sh)] | [(sh <any_Cx_sh_hh_v_b_ihl>)]) (b | ((<any_Cx_sh_hh_v_b_ihl> sh) | (sh <any_Cx_sh_hh_v_b_ihl>)))) (([(<any_Cx_sh_sh_ihl_b> sh)] | [(sh <any_Cx_sh_sh_ihl_b>)]) (ihl | ((<any_Cx_sh_sh_ihl> sh) | (sh <any_Cx_sh_sh_ihl>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_ng_ihl> sh)] | [(sh <any_Cx_sh_sh_ng_ihl>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_s_sh_ng> s)] | [(s <any_Cx_s_sh_ng>)]) (ng | ((<any_Cx_s_sh_ng> s) | (s <any_Cx_s_sh_ng>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_s_ng_n> n)] | [(n <any_Cx_s_ng_n>)]) sil))
frate, target rule = 91 public <billing> = (((sil [((dh <any_Cx_b_dh_hh>) | (<any_Cx_b_dh_hh> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]) | (sil hh (sil [((dh <any_Cx_b_dh_hh>) | (<any_Cx_b_dh_hh> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]))) (([(<any_Cx_s_hh_dh_b> s)] | [(s <any_Cx_s_hh_dh_b>)]) (b | ((<any_Cx_s_hh_dh_b> s) | (s <any_Cx_s_hh_dh_b>)))) ((([(<any_Vx_sh_s_ih_noSlide> sh)] | [(sh <any_Vx_sh_s_ih_noSlide>)]) ([(<any_Cx_sh_s_l_b> sh)] | [(sh <any_Cx_sh_s_l_b>)])) (ih | ((<any_Vx_sh_s_ih_noSlide> sh) | (sh <any_Vx_sh_s_ih_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l_ing> sh) | (sh <any_Cx_sh_sh_l_ing>)))) (([(<any_Cx_sh_sh_ing_l> sh)] | [(sh <any_Cx_sh_sh_ing_l>)]) (ing | ((<any_Cx_sh_sh_ing_l> sh) | (sh <any_Cx_sh_sh_ing_l>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_sh_ing_ng> ng)] | [(ng <any_Cx_sh_ing_ng>)]) sil))
Considering guard s with value 1 for ng ...
Considering guard sh with value 1 for ng ...
Considering guard jh with value 1 for ng ...
Considering guard z with value 1 for ng ...
candidateGuards = map[jh:true s:true sh:true z:true]
Picking guard, s

Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 80
frate, target rule = 91 public <billing> = (((sil [((l <any_Cx_b_l_hh>) | (<any_Cx_b_l_hh> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]) | (sil hh (sil [((l <any_Cx_b_l_hh>) | (<any_Cx_b_l_hh> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]))) (([(<any_Cx_sh_hh_l_b> sh)] | [(sh <any_Cx_sh_hh_l_b>)]) (b | ((<any_Cx_sh_hh_l_b> sh) | (sh <any_Cx_sh_hh_l_b>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_l_b> sh)] | [(sh <any_Cx_sh_sh_l_b>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_ng_l> sh)] | [(sh <any_Cx_sh_sh_ng_l>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_s_sh_ng> s)] | [(s <any_Cx_s_sh_ng>)]) (ng | ((<any_Cx_s_sh_ng> s) | (s <any_Cx_s_sh_ng>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_s_ng_hh> hh)] | [(hh <any_Cx_s_ng_hh>)]) sil))
Considering guard sh with value 2 for ihl ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 80
Considering guard sh with value 1 for ing ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard s with value 1 for b ...
Considering guard sh with value 1 for b ...
Considering guard jh with value 1 for b ...
candidateGuards = map[jh:true s:true sh:true]
Picking guard, s

Running scan for frate = 80
Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 80 public <billing> = (((sil [((d <any_Cx_b_d_hh>) | (<any_Cx_b_d_hh> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil hh (sil [((d <any_Cx_b_d_hh>) | (<any_Cx_b_d_hh> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_sh_hh_d_b_ihl> sh)] | [(sh <any_Cx_sh_hh_d_b_ihl>)]) (b | ((<any_Cx_sh_hh_d_b_ihl> sh) | (sh <any_Cx_sh_hh_d_b_ihl>)))) (([(<any_Cx_sh_sh_ihl_b> sh)] | [(sh <any_Cx_sh_sh_ihl_b>)]) (ihl | ((<any_Cx_sh_sh_ihl_ing> sh) | (sh <any_Cx_sh_sh_ihl_ing>)))) (([(<any_Cx_sh_sh_ing_ihl> sh)] | [(sh <any_Cx_sh_sh_ing_ihl>)]) (ing | ((<any_Cx_sh_sh_ing_ihl> sh) | (sh <any_Cx_sh_sh_ing_ihl>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_sh_ing_n> n)] | [(n <any_Cx_sh_ing_n>)]) sil))
Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for b ...
Considering guard jh with value 1 for b ...
Considering guard s with value 1 for b ...
candidateGuards = map[jh:true s:true sh:true]
Picking guard, sh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ihl ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 72
Considering guard sh with value 1 for ing ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for ng ...
Considering guard jh with value 1 for ng ...
Considering guard s with value 1 for ng ...
Considering guard z with value 1 for ng ...
candidateGuards = map[jh:true s:true sh:true z:true]
Picking guard, sh

Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ihl ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for ng ...
Considering guard jh with value 1 for ng ...
Considering guard s with value 1 for ng ...
Considering guard z with value 1 for ng ...
candidateGuards = map[jh:true s:true sh:true z:true]
Picking guard, jh

frate, target rule = 80 public <billing> = (((sil [((d <any_Cx_b_d_hh>) | (<any_Cx_b_d_hh> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil hh (sil [((d <any_Cx_b_d_hh>) | (<any_Cx_b_d_hh> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_sh_hh_d_b_ihl> sh)] | [(sh <any_Cx_sh_hh_d_b_ihl>)]) (b | ((<any_Cx_sh_hh_d_b_ihl> sh) | (sh <any_Cx_sh_hh_d_b_ihl>)))) (([(<any_Cx_sh_sh_ihl_b> sh)] | [(sh <any_Cx_sh_sh_ihl_b>)]) (ihl | ((<any_Cx_sh_sh_ihl> sh) | (sh <any_Cx_sh_sh_ihl>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_ng_ihl> sh)] | [(sh <any_Cx_sh_sh_ng_ihl>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_sh_sh_ng> sh)] | [(sh <any_Cx_sh_sh_ng>)]) (ng | ((<any_Cx_sh_sh_ng> sh) | (sh <any_Cx_sh_sh_ng>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_sh_ng_f> f)] | [(f <any_Cx_sh_ng_f>)]) sil))
frate, target rule = 80 public <billing> = (((sil [((v <any_Cx_b_v_hh>) | (<any_Cx_b_v_hh> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]) | (sil hh (sil [((v <any_Cx_b_v_hh>) | (<any_Cx_b_v_hh> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]))) (([(<any_Cx_s_hh_v_b> s)] | [(s <any_Cx_s_hh_v_b>)]) (b | ((<any_Cx_s_hh_v_b> s) | (s <any_Cx_s_hh_v_b>)))) ((([(<any_Vx_sh_s_ih_noSlide> sh)] | [(sh <any_Vx_sh_s_ih_noSlide>)]) ([(<any_Cx_sh_s_l_b> sh)] | [(sh <any_Cx_sh_s_l_b>)])) (ih | ((<any_Vx_sh_s_ih_noSlide> sh) | (sh <any_Vx_sh_s_ih_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l_ing> sh) | (sh <any_Cx_sh_sh_l_ing>)))) (([(<any_Cx_sh_sh_ing_l> sh)] | [(sh <any_Cx_sh_sh_ing_l>)]) (ing | ((<any_Cx_sh_sh_ing_l> sh) | (sh <any_Cx_sh_sh_ing_l>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_sh_ing_n> n)] | [(n <any_Cx_sh_ing_n>)]) sil))
Considering guard sh with value 1 for ing ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 80 public <billing> = (((sil [((d <any_Cx_b_d_hh>) | (<any_Cx_b_d_hh> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil hh (sil [((d <any_Cx_b_d_hh>) | (<any_Cx_b_d_hh> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_sh_hh_d_b> sh)] | [(sh <any_Cx_sh_hh_d_b>)]) (b | ((<any_Cx_sh_hh_d_b> sh) | (sh <any_Cx_sh_hh_d_b>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_l_b> sh)] | [(sh <any_Cx_sh_sh_l_b>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_ng_l> sh)] | [(sh <any_Cx_sh_sh_ng_l>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_jh_sh_ng> jh)] | [(jh <any_Cx_jh_sh_ng>)]) (ng | ((<any_Cx_jh_sh_ng> jh) | (jh <any_Cx_jh_sh_ng>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_jh_ng_thr> thr)] | [(thr <any_Cx_jh_ng_thr>)]) sil))
Running scan for frate = 72
Running scan for frate = 72
frate, target rule = 72 public <billing> = (((sil [((d <any_Cx_b_d_hh>) | (<any_Cx_b_d_hh> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil hh (sil [((d <any_Cx_b_d_hh>) | (<any_Cx_b_d_hh> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_sh_hh_d_b_ihl> sh)] | [(sh <any_Cx_sh_hh_d_b_ihl>)]) (b | ((<any_Cx_sh_hh_d_b_ihl> sh) | (sh <any_Cx_sh_hh_d_b_ihl>)))) (([(<any_Cx_sh_sh_ihl_b> sh)] | [(sh <any_Cx_sh_sh_ihl_b>)]) (ihl | ((<any_Cx_sh_sh_ihl_ing> sh) | (sh <any_Cx_sh_sh_ihl_ing>)))) (([(<any_Cx_sh_sh_ing_ihl> sh)] | [(sh <any_Cx_sh_sh_ing_ihl>)]) (ing | ((<any_Cx_sh_sh_ing_ihl> sh) | (sh <any_Cx_sh_sh_ing_ihl>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_sh_ing_thr> thr)] | [(thr <any_Cx_sh_ing_thr>)]) sil))
Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 72
Considering guard s with value 1 for b ...
Considering guard sh with value 1 for b ...
Considering guard jh with value 1 for b ...
candidateGuards = map[jh:true s:true sh:true]
Picking guard, sh

Considering guard sh with value 2 for ihl ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for b ...
Considering guard jh with value 1 for b ...
Considering guard s with value 1 for b ...
candidateGuards = map[jh:true s:true sh:true]
Picking guard, sh

Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard s with value 1 for ng ...
Considering guard sh with value 1 for ng ...
Considering guard z with value 1 for ng ...
Considering guard jh with value 1 for ng ...
candidateGuards = map[jh:true s:true sh:true z:true]
Picking guard, s

Considering guard sh with value 1 for ing ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 72 public <billing> = (((sil [((hh <any_Cx_b_hh_hh>) | (<any_Cx_b_hh_hh> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil hh (sil [((hh <any_Cx_b_hh_hh>) | (<any_Cx_b_hh_hh> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_sh_hh_hh_b_ihl> sh)] | [(sh <any_Cx_sh_hh_hh_b_ihl>)]) (b | ((<any_Cx_sh_hh_hh_b_ihl> sh) | (sh <any_Cx_sh_hh_hh_b_ihl>)))) (([(<any_Cx_sh_sh_ihl_b> sh)] | [(sh <any_Cx_sh_sh_ihl_b>)]) (ihl | ((<any_Cx_sh_sh_ihl> sh) | (sh <any_Cx_sh_sh_ihl>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_ng_ihl> sh)] | [(sh <any_Cx_sh_sh_ng_ihl>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_s_sh_ng> s)] | [(s <any_Cx_s_sh_ng>)]) (ng | ((<any_Cx_s_sh_ng> s) | (s <any_Cx_s_sh_ng>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_s_ng_hh> hh)] | [(hh <any_Cx_s_ng_hh>)]) sil))
frate, target rule = 72 public <billing> = (((sil [((hh <any_Cx_b_hh_hh>) | (<any_Cx_b_hh_hh> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil hh (sil [((hh <any_Cx_b_hh_hh>) | (<any_Cx_b_hh_hh> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_sh_hh_hh_b> sh)] | [(sh <any_Cx_sh_hh_hh_b>)]) (b | ((<any_Cx_sh_hh_hh_b> sh) | (sh <any_Cx_sh_hh_hh_b>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_l_b> sh)] | [(sh <any_Cx_sh_sh_l_b>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l_ing> sh) | (sh <any_Cx_sh_sh_l_ing>)))) (([(<any_Cx_sh_sh_ing_l> sh)] | [(sh <any_Cx_sh_sh_ing_l>)]) (ing | ((<any_Cx_sh_sh_ing_l> sh) | (sh <any_Cx_sh_sh_ing_l>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_sh_ing_ng> ng)] | [(ng <any_Cx_sh_ing_ng>)]) sil))
Considering guard jh with value 1 for ng ...
Considering guard sh with value 1 for ng ...
Considering guard z with value 1 for ng ...
Considering guard s with value 1 for ng ...
candidateGuards = map[jh:true s:true sh:true z:true]
Picking guard, jh

frate, target rule = 72 public <billing> = (((sil [((l <any_Cx_b_l_hh>) | (<any_Cx_b_l_hh> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]) | (sil hh (sil [((l <any_Cx_b_l_hh>) | (<any_Cx_b_l_hh> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]))) (([(<any_Cx_sh_hh_l_b> sh)] | [(sh <any_Cx_sh_hh_l_b>)]) (b | ((<any_Cx_sh_hh_l_b> sh) | (sh <any_Cx_sh_hh_l_b>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_l_b> sh)] | [(sh <any_Cx_sh_sh_l_b>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_ng_l> sh)] | [(sh <any_Cx_sh_sh_ng_l>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_jh_sh_ng> jh)] | [(jh <any_Cx_jh_sh_ng>)]) (ng | ((<any_Cx_jh_sh_ng> jh) | (jh <any_Cx_jh_sh_ng>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_jh_ng_hh> hh)] | [(hh <any_Cx_jh_ng_hh>)]) sil))

results =
{72 [{sil 0 10} {b 11 15} {ih 16 22} {l 23 26} {ing 27 47} {sil 48 61}]}
{80 [{sil 0 12} {b 13 17} {ih 18 25} {l 26 30} {ing 31 53} {sil 54 64}]}
{91 [{sil 0 14} {b 15 19} {ih 20 28} {l 29 34} {ing 35 60} {sil 61 114}]}
{105 [{sil 0 18} {b 19 22} {ih 23 33} {l 34 40} {ing 41 51} {z 52 54} {n 55 70} {sil 71 132}]}
{125 [{sil 0 19} {b 20 25} {ih 26 37} {l 38 46} {ing 47 82} {sil 83 155}]}

normalised results =
{72 [{sil 0 10} {b 15 21} {ih 22 31} {l 32 36} {ing 38 65} {sil 67 85}]}
{80 [{sil 0 12} {b 16 21} {ih 23 31} {l 33 38} {ing 39 66} {sil 68 80}]}
{91 [{sil 0 14} {b 16 21} {ih 22 31} {l 32 37} {ing 38 66} {sil 67 125}]}
{105 [{sil 0 18} {b 18 21} {ih 22 31} {l 32 38} {ing 39 49} {z 50 50} {n 52 67} {sil 68 126}]}
{125 [{sil 0 19} {b 16 20} {ih 21 30} {l 30 37} {ing 38 66} {sil 66 124}]}

ruleAligned = [{{b 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ih 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{l 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{ing 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {b 15 21} {ih 22 31} {l 32 36} {ing 38 65} {sil 67 67}]}
{80 [{sil 0 0} {b 16 21} {ih 23 31} {l 33 38} {ing 39 66} {sil 68 68}]}
{91 [{sil 0 0} {b 16 21} {ih 22 31} {l 32 37} {ing 38 66} {sil 67 67}]}
{105 [{sil 0 0} {b 18 21} {ih 22 31} {l 32 38} {ing 39 49} {z 50 50} {n 52 67} {sil 68 68}]}
{125 [{sil 0 0} {b 16 20} {ih 21 30} {l 30 37} {ing 38 66} {sil 66 66}]}

timeAligned = [{{b 16 21} [{0 1} {1 1} {2 1} {4 1} {3 1}]} {{ih 22 31} [{0 2} {2 2} {3 2} {4 2} {1 2}]} {{l 32 37} [{0 3} {2 3} {3 3} {4 3} {1 3}]} {{ing 38 66} [{0 4} {2 4} {4 4} {1 4} {3 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 20
i, iTime, newITime, timeStartFrom = 2 1 2 30
i, iTime, newITime, timeStartFrom = 3 2 3 36
combinedVerdict    = [{b 0} {ih 0} {l 0} {ing 0}]
ruleAlignedVerdict = [{b 0} {ih 0} {l 0} {ing 0}]

score->
+2 for b
+2 for ih
+2 for l
+2 for ing
score<-: 13

results =
{72 [{sil 0 10} {b 11 16} {ihl 17 26} {ih 27 35} {ng 36 48} {sil 49 61}]}
{80 [{sil 0 12} {b 13 17} {ihl 18 29} {ih 30 39} {ng 40 53} {sil 54 64}]}
{91 [{sil 0 14} {b 15 20} {ihl 21 34} {ih 35 44} {ng 45 60} {sil 61 114}]}
{105 [{sil 0 18} {b 19 23} {ihl 24 39} {iy 40 52} {sh 53 55} {ng 56 69} {sil 70 132}]}
{125 [{sil 0 19} {b 20 25} {ihl 26 46} {ih 47 62} {ng 63 82} {sil 83 155}]}

normalised results =
{72 [{sil 0 10} {b 15 22} {ihl 24 36} {ih 38 49} {ng 50 67} {sil 68 85}]}
{80 [{sil 0 12} {b 16 21} {ihl 23 36} {ih 38 49} {ng 50 66} {sil 68 80}]}
{91 [{sil 0 14} {b 16 22} {ihl 23 37} {ih 38 48} {ng 49 66} {sil 67 125}]}
{105 [{sil 0 18} {b 18 22} {ihl 23 37} {iy 38 50} {sh 50 50} {ng 53 66} {sil 67 126}]}
{125 [{sil 0 19} {b 16 20} {ihl 21 37} {ih 38 50} {ng 50 66} {sil 66 124}]}

ruleAligned = [{{b 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ihl 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{ih 0} [{0 3} {1 3} {2 3} {4 3}]} {{ng 0} [{0 4} {1 4} {2 4} {3 5} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {b 15 22} {ihl 24 36} {ih 38 49} {ng 50 67} {sil 68 68}]}
{80 [{sil 0 0} {b 16 21} {ihl 23 36} {ih 38 49} {ng 50 66} {sil 68 68}]}
{91 [{sil 0 0} {b 16 22} {ihl 23 37} {ih 38 48} {ng 49 66} {sil 67 67}]}
{105 [{sil 0 0} {b 18 22} {ihl 23 37} {iy 38 50} {sh 50 50} {ng 53 66} {sil 67 67}]}
{125 [{sil 0 0} {b 16 20} {ihl 21 37} {ih 38 50} {ng 50 66} {sil 66 66}]}

timeAligned = [{{b 16 22} [{0 1} {1 1} {2 1} {4 1} {3 1}]} {{ihl 23 37} [{1 2} {2 2} {3 2} {4 2} {0 2}]} {{ih 38 49} [{0 3} {1 3} {2 3} {4 3}]} {{ng 50 66} [{0 4} {1 4} {2 4} {4 4} {3 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 20
i, iTime, newITime, timeStartFrom = 2 1 2 36
i, iTime, newITime, timeStartFrom = 3 2 3 48
combinedVerdict    = [{b 0} {ihl 0} {ih 0} {ng 0}]
ruleAlignedVerdict = [{b 0} {ihl 0} {ih 0} {ng 0}]

score->
+2 for b
+2 for ihl
+2 for ih
+2 for ng
score<-: 13

results =
{72 [{sil 0 10} {b 11 15} {ih 16 22} {l 23 26} {ih 27 35} {ng 36 48} {sil 49 61}]}
{80 [{sil 0 12} {b 13 17} {ih 18 25} {l 26 29} {ih 30 39} {ng 40 53} {sil 54 64}]}
{91 [{sil 0 14} {b 15 19} {ih 20 28} {l 29 34} {ih 35 44} {ng 45 60} {sil 61 114}]}
{105 [{sil 0 18} {b 19 22} {ih 23 33} {l 34 40} {iy 41 52} {sh 53 55} {ng 56 69} {sil 70 132}]}
{125 [{sil 0 19} {b 20 25} {ih 26 37} {l 38 46} {ih 47 62} {ng 63 82} {sil 83 155}]}

normalised results =
{72 [{sil 0 10} {b 15 21} {ih 22 31} {l 32 36} {ih 38 49} {ng 50 67} {sil 68 85}]}
{80 [{sil 0 12} {b 16 21} {ih 23 31} {l 33 36} {ih 38 49} {ng 50 66} {sil 68 80}]}
{91 [{sil 0 14} {b 16 21} {ih 22 31} {l 32 37} {ih 38 48} {ng 49 66} {sil 67 125}]}
{105 [{sil 0 18} {b 18 21} {ih 22 31} {l 32 38} {iy 39 50} {sh 50 50} {ng 53 66} {sil 67 126}]}
{125 [{sil 0 19} {b 16 20} {ih 21 30} {l 30 37} {ih 38 50} {ng 50 66} {sil 66 124}]}

ruleAligned = [{{b 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ih 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{l 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{ih 0} [{0 4} {1 4} {2 4} {4 4}]} {{ng 0} [{0 5} {1 5} {2 5} {3 6} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {b 15 21} {ih 22 31} {l 32 36} {ih 38 49} {ng 50 67} {sil 68 68}]}
{80 [{sil 0 0} {b 16 21} {ih 23 31} {l 33 36} {ih 38 49} {ng 50 66} {sil 68 68}]}
{91 [{sil 0 0} {b 16 21} {ih 22 31} {l 32 37} {ih 38 48} {ng 49 66} {sil 67 67}]}
{105 [{sil 0 0} {b 18 21} {ih 22 31} {l 32 38} {iy 39 50} {sh 50 50} {ng 53 66} {sil 67 67}]}
{125 [{sil 0 0} {b 16 20} {ih 21 30} {l 30 37} {ih 38 50} {ng 50 66} {sil 66 66}]}

timeAligned = [{{b 16 21} [{0 1} {1 1} {2 1} {4 1} {3 1}]} {{ih 22 31} [{0 2} {2 2} {3 2} {4 2} {1 2}]} {{l 32 37} [{0 3} {2 3} {3 3} {4 3} {1 3}]} {{ih 38 49} [{0 4} {1 4} {2 4} {4 4}]} {{ng 50 66} [{0 5} {1 5} {2 5} {4 5} {3 6}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 20
i, iTime, newITime, timeStartFrom = 2 1 2 30
i, iTime, newITime, timeStartFrom = 3 2 3 36
i, iTime, newITime, timeStartFrom = 4 3 4 48
combinedVerdict    = [{b 0} {ih 0} {l 0} {ih 0} {ng 0}]
ruleAlignedVerdict = [{b 0} {ih 0} {l 0} {ih 0} {ng 0}]

score->
+2 for b
+2 for ih
+2 for l
+2 for ih
+2 for ng
score<-: 15

results =
{72 [{sil 0 10} {b 11 16} {ihl 17 26} {ing 27 47} {sil 48 61}]}
{80 [{sil 0 12} {b 13 17} {ihl 18 29} {ing 30 53} {sil 54 64}]}
{91 [{sil 0 14} {b 15 20} {ihl 21 34} {ing 35 60} {sil 61 114}]}
{105 [{sil 0 18} {b 19 23} {ihl 24 40} {ing 41 69} {sil 70 132}]}
{125 [{sil 0 19} {b 20 25} {ihl 26 45} {ing 46 82} {sil 83 155}]}

normalised results =
{72 [{sil 0 10} {b 15 22} {ihl 24 36} {ing 38 65} {sil 67 85}]}
{80 [{sil 0 12} {b 16 21} {ihl 23 36} {ing 38 66} {sil 68 80}]}
{91 [{sil 0 14} {b 16 22} {ihl 23 37} {ing 38 66} {sil 67 125}]}
{105 [{sil 0 18} {b 18 22} {ihl 23 38} {ing 39 66} {sil 67 126}]}
{125 [{sil 0 19} {b 16 20} {ihl 21 36} {ing 37 66} {sil 66 124}]}

ruleAligned = [{{b 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ihl 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{ing 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {b 15 22} {ihl 24 36} {ing 38 65} {sil 67 67}]}
{80 [{sil 0 0} {b 16 21} {ihl 23 36} {ing 38 66} {sil 68 68}]}
{91 [{sil 0 0} {b 16 22} {ihl 23 37} {ing 38 66} {sil 67 67}]}
{105 [{sil 0 0} {b 18 22} {ihl 23 38} {ing 39 66} {sil 67 67}]}
{125 [{sil 0 0} {b 16 20} {ihl 21 36} {ing 37 66} {sil 66 66}]}

timeAligned = [{{b 16 22} [{0 1} {1 1} {2 1} {4 1} {3 1}]} {{ihl 23 36} [{1 2} {2 2} {3 2} {4 2} {0 2}]} {{ing 38 66} [{0 3} {1 3} {2 3} {4 3} {3 3}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 20
i, iTime, newITime, timeStartFrom = 2 1 2 36
combinedVerdict    = [{b 0} {ihl 0} {ing 0}]
ruleAlignedVerdict = [{b 0} {ihl 0} {ing 0}]

score->
+2 for b
+2 for ihl
+2 for ing
score<-: 11
testPronounce b good ih good l good ih good ng good
publish->
phonsToAlphas = [{[b] b} {[ih] i} {[l] ll} {[ih] i} {[ng] ng}]
getVerdict<-:new {b [b] 0}
getVerdict<-:new {i [ih] 0}
getVerdict<-:new {ll [l] 0}
getVerdict<-:new {i [ih] 0}
getVerdict<-:new {ng [ng] 0}
lettersVerdicts = [{b [b] 0} {i [ih] 0} {ll [l] 0} {i [ih] 0} {ng [ng] 0}]
publish<-
{
  "word": "billing",
  "results": [
    {
      "letters": "b",
      "phonemes": "b",
      "verdict": "good"
    },
    {
      "letters": "i",
      "phonemes": "ɪ",
      "verdict": "good"
    },
    {
      "letters": "ll",
      "phonemes": "l",
      "verdict": "good"
    },
    {
      "letters": "i",
      "phonemes": "ɪ",
      "verdict": "good"
    },
    {
      "letters": "ng",
      "phonemes": "ŋ",
      "verdict": "good"
    }
  ],
  "err": null
}
