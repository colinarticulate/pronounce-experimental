Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_fb4e47ff-9d96-4aaa-9fce-659fc7f173d7 audiofile /Users/test/go/src/Phonemes/audio_clips/theirs1_paul.wav word theirs dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  1.741125



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.42000000000000004 1.02 1.44

 start3, duration3, end3 =  0.42000000000000004 0.88 1.3

 Initial start, duration, end =  0.32000000000000006 1.1199999999999999 1.44

 Cut at: start, duration =  0.32000000000000006 1.401125     guard_end =  1.721125 

Running scan for frate = 125
Considering guard zh with value 1 for dh ...
Considering guard ch with value 1 for dh ...
candidateGuards = map[ch:true zh:true]
Picking guard, zh

Considering guard ch with value 5 for ehr ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard oy with value 1 for z ...
candidateGuards = map[oy:true]
Picking guard, oy

frate, target rule = 125 public <theirs> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_dh_ehr> zh)] | [(zh <any_Cx_zh_p_z_dh_ehr>)]) (dh | t | ((<any_Cx_zh_p_z_dh_ehr> zh) | (zh <any_Cx_zh_p_z_dh_ehr>)))) (([(<any_Cx_ch_zh_ehr_dh> ch)] | [(ch <any_Cx_ch_zh_ehr_dh>)]) (ehr | ((<any_Cx_ch_zh_ehr_z> ch) | (ch <any_Cx_ch_zh_ehr_z>)))) (([(<any_Cx_oy_ch_z_ehr> oy)] | [(oy <any_Cx_oy_ch_z_ehr>)]) (z | ((<any_Cx_oy_ch_z_ehr> oy) | (oy <any_Cx_oy_ch_z_ehr>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_oy_z_v> v)] | [(v <any_Cx_oy_z_v>)]) sil))
Running scan for frate = 105
Considering guard ch with value 1 for dh ...
Considering guard zh with value 1 for dh ...
candidateGuards = map[ch:true zh:true]
Picking guard, ch

Considering guard ch with value 5 for ehr ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard oy with value 1 for z ...
candidateGuards = map[oy:true]
Picking guard, oy

frate, target rule = 105 public <theirs> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ch_p_z_dh_ehr> ch)] | [(ch <any_Cx_ch_p_z_dh_ehr>)]) (dh | t | ((<any_Cx_ch_p_z_dh_ehr> ch) | (ch <any_Cx_ch_p_z_dh_ehr>)))) (([(<any_Cx_ch_ch_ehr_dh> ch)] | [(ch <any_Cx_ch_ch_ehr_dh>)]) (ehr | ((<any_Cx_ch_ch_ehr_z> ch) | (ch <any_Cx_ch_ch_ehr_z>)))) (([(<any_Cx_oy_ch_z_ehr> oy)] | [(oy <any_Cx_oy_ch_z_ehr>)]) (z | ((<any_Cx_oy_ch_z_ehr> oy) | (oy <any_Cx_oy_ch_z_ehr>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_oy_z_b> b)] | [(b <any_Cx_oy_z_b>)]) sil))
Running scan for frate = 91
Considering guard zh with value 1 for dh ...
Considering guard ch with value 1 for dh ...
candidateGuards = map[ch:true zh:true]
Picking guard, ch

Considering guard ch with value 5 for ehr ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard oy with value 1 for z ...
candidateGuards = map[oy:true]
Picking guard, oy

frate, target rule = 91 public <theirs> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ch_p_z_dh_ehr> ch)] | [(ch <any_Cx_ch_p_z_dh_ehr>)]) (dh | t | ((<any_Cx_ch_p_z_dh_ehr> ch) | (ch <any_Cx_ch_p_z_dh_ehr>)))) (([(<any_Cx_ch_ch_ehr_dh> ch)] | [(ch <any_Cx_ch_ch_ehr_dh>)]) (ehr | ((<any_Cx_ch_ch_ehr_z> ch) | (ch <any_Cx_ch_ch_ehr_z>)))) (([(<any_Cx_oy_ch_z_ehr> oy)] | [(oy <any_Cx_oy_ch_z_ehr>)]) (z | ((<any_Cx_oy_ch_z_ehr> oy) | (oy <any_Cx_oy_ch_z_ehr>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_oy_z_b> b)] | [(b <any_Cx_oy_z_b>)]) sil))
Running scan for frate = 80
Considering guard ch with value 1 for dh ...
Considering guard zh with value 1 for dh ...
candidateGuards = map[ch:true zh:true]
Picking guard, ch

Considering guard ch with value 5 for ehr ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard oy with value 1 for z ...
candidateGuards = map[oy:true]
Picking guard, oy

frate, target rule = 80 public <theirs> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ch_p_z_dh_ehr> ch)] | [(ch <any_Cx_ch_p_z_dh_ehr>)]) (dh | t | ((<any_Cx_ch_p_z_dh_ehr> ch) | (ch <any_Cx_ch_p_z_dh_ehr>)))) (([(<any_Cx_ch_ch_ehr_dh> ch)] | [(ch <any_Cx_ch_ch_ehr_dh>)]) (ehr | ((<any_Cx_ch_ch_ehr_z> ch) | (ch <any_Cx_ch_ch_ehr_z>)))) (([(<any_Cx_oy_ch_z_ehr> oy)] | [(oy <any_Cx_oy_ch_z_ehr>)]) (z | ((<any_Cx_oy_ch_z_ehr> oy) | (oy <any_Cx_oy_ch_z_ehr>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_oy_z_b> b)] | [(b <any_Cx_oy_z_b>)]) sil))
Running scan for frate = 72
Considering guard ch with value 1 for dh ...
Considering guard zh with value 1 for dh ...
candidateGuards = map[ch:true zh:true]
Picking guard, ch

Considering guard ch with value 5 for ehr ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard oy with value 1 for z ...
candidateGuards = map[oy:true]
Picking guard, oy

frate, target rule = 72 public <theirs> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ch_p_z_dh_ehr> ch)] | [(ch <any_Cx_ch_p_z_dh_ehr>)]) (dh | t | ((<any_Cx_ch_p_z_dh_ehr> ch) | (ch <any_Cx_ch_p_z_dh_ehr>)))) (([(<any_Cx_ch_ch_ehr_dh> ch)] | [(ch <any_Cx_ch_ch_ehr_dh>)]) (ehr | ((<any_Cx_ch_ch_ehr_z> ch) | (ch <any_Cx_ch_ch_ehr_z>)))) (([(<any_Cx_oy_ch_z_ehr> oy)] | [(oy <any_Cx_oy_ch_z_ehr>)]) (z | ((<any_Cx_oy_ch_z_ehr> oy) | (oy <any_Cx_oy_ch_z_ehr>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_oy_z_thr> thr)] | [(thr <any_Cx_oy_z_thr>)]) sil))

results =
{72 [{sil 0 10} {dh 11 23} {ehr 24 41} {m 42 50} {oy 51 53} {z 54 69} {sil 70 88}]}
{80 [{sil 0 12} {dh 13 25} {ehr 26 46} {m 47 56} {oy 57 59} {z 60 76} {sil 77 96}]}
{91 [{sil 0 14} {dh 15 29} {ehr 30 54} {m 55 65} {oy 66 68} {z 69 86} {sil 87 126}]}
{105 [{sil 0 17} {dh 18 34} {ehr 35 62} {m 63 75} {oy 76 79} {z 80 100} {sil 101 146}]}
{125 [{sil 0 20} {dh 21 38} {ehr 39 92} {z 93 117} {sil 118 172}]}

normalised results =
{72 [{sil 0 10} {dh 15 32} {ehr 33 57} {m 58 69} {oy 71 71} {z 75 96} {sil 97 122}]}
{80 [{sil 0 12} {dh 16 31} {ehr 33 58} {m 59 70} {oy 71 71} {z 75 95} {sil 96 120}]}
{91 [{sil 0 14} {dh 16 32} {ehr 33 59} {m 60 71} {oy 73 73} {z 76 95} {sil 96 138}]}
{105 [{sil 0 17} {dh 17 32} {ehr 33 59} {m 60 71} {oy 72 75} {z 76 95} {sil 96 139}]}
{125 [{sil 0 20} {dh 17 30} {ehr 31 74} {z 74 94} {sil 94 138}]}

ruleAligned = [{{dh 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ehr 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{m 3} [{0 3} {1 3} {2 3} {3 3}]} {{z 0} [{0 5} {1 5} {2 5} {3 5} {4 3}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {dh 15 32} {ehr 33 57} {m 58 69} {oy 71 71} {z 75 96} {sil 97 97}]}
{80 [{sil 0 0} {dh 16 31} {ehr 33 58} {m 59 70} {oy 71 71} {z 75 95} {sil 96 96}]}
{91 [{sil 0 0} {dh 16 32} {ehr 33 59} {m 60 71} {oy 73 73} {z 76 95} {sil 96 96}]}
{105 [{sil 0 0} {dh 17 32} {ehr 33 59} {m 60 71} {oy 72 72} {z 76 95} {sil 96 96}]}
{125 [{sil 0 0} {dh 17 30} {ehr 31 74} {z 74 94} {sil 94 94}]}

timeAligned = [{{dh 16 32} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ehr 33 59} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{m 60 70} [{0 3} {1 3} {2 3} {3 3}]} {{z 75 95} [{0 5} {1 5} {4 3} {2 5} {3 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 30
i, iTime, newITime, timeStartFrom = 2 1 2 57
i, iTime, newITime, timeStartFrom = 3 2 3 69
combinedVerdict    = [{dh 0} {ehr 0} {m 3} {z 0}]
ruleAlignedVerdict = [{dh 0} {ehr 0} {m 3} {z 0}]

score->
+2 for dh
+2 for ehr
-2 for m
+2 for z
score<-: 4
testPronounce dh good ehr good m surprise z good
publish->
phonsToAlphas = [{[dh] th} {[ehr] eir} {[z] s}]
getVerdict<-:new {th [dh] 0}
getVerdict<-:new {eir [ehr] 0}
getVerdict<-:new {s [z] 0}
lettersVerdicts = [{th [dh] 0} {eir [ehr] 0} {m [m] 3} {s [z] 0}]
publish<-
{
  "word": "theirs",
  "results": [
    {
      "letters": "th",
      "phonemes": "ð",
      "verdict": "good"
    },
    {
      "letters": "eir",
      "phonemes": "ɛː",
      "verdict": "good"
    },
    {
      "letters": "m",
      "phonemes": "m",
      "verdict": "surprise"
    },
    {
      "letters": "s",
      "phonemes": "z",
      "verdict": "good"
    }
  ],
  "err": null
}
