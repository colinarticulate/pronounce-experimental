Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_02e1b7e0-37c5-4953-ace1-4b4ce0a5667b audiofile /Users/test/go/src/Phonemes/audio_clips/toothed1_paul.wav word toothed dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  1.880437



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.72 0.88 1.6

 start3, duration3, end3 =  0.72 0.45999999999999996 1.18

 Initial start, duration, end =  0.62 0.9800000000000001 1.6

 Cut at: start, duration =  0.62 1.240437     guard_end =  1.8604370000000001 

Running scan for frate = 125
Considering guard zh with value 1 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for uw ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for th ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 125 public <toothed> = (((sil [((d <any_Cx_t_d_p>) | (<any_Cx_t_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil p (sil [((d <any_Cx_t_d_p>) | (<any_Cx_t_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_zh_p_d_t> zh)] | [(zh <any_Cx_zh_p_d_t>)]) (t | ((<any_Cx_zh_p_d_t> zh) | (zh <any_Cx_zh_p_d_t>)))) ((([(<any_Vx_zh_zh_uw_noSlide> zh)] | [(zh <any_Vx_zh_zh_uw_noSlide>)]) ([(<any_Cx_zh_zh_th_t> zh)] | [(zh <any_Cx_zh_zh_th_t>)])) (uw | ((<any_Vx_zh_zh_uw_noSlide> zh) | (zh <any_Vx_zh_zh_uw_noSlide>)))) (([(<any_Cx_zh_zh_th> zh)] | [(zh <any_Cx_zh_zh_th>)]) (th | ((<any_Cx_zh_zh_th_t> zh) | (zh <any_Cx_zh_zh_th_t>)))) (([(<any_Cx_zh_zh_t_th> zh)] | [(zh <any_Cx_zh_zh_t_th>)]) (t | ((<any_Cx_zh_zh_t_th> zh) | (zh <any_Cx_zh_zh_t_th>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_thr> thr)] | [(thr <any_Cx_zh_t_thr>)]) sil))
Running scan for frate = 105
Considering guard zh with value 1 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for uw ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for th ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 105 public <toothed> = (((sil [((s <any_Cx_t_s_p>) | (<any_Cx_t_s_p> s))] [((s <any_vowel_noSlide>) | (<any_vowel_noSlide> s))]) | (sil p (sil [((s <any_Cx_t_s_p>) | (<any_Cx_t_s_p> s))] [((s <any_vowel_noSlide>) | (<any_vowel_noSlide> s))]))) (([(<any_Cx_zh_p_s_t> zh)] | [(zh <any_Cx_zh_p_s_t>)]) (t | ((<any_Cx_zh_p_s_t> zh) | (zh <any_Cx_zh_p_s_t>)))) ((([(<any_Vx_zh_zh_uw_noSlide> zh)] | [(zh <any_Vx_zh_zh_uw_noSlide>)]) ([(<any_Cx_zh_zh_th_t> zh)] | [(zh <any_Cx_zh_zh_th_t>)])) (uw | ((<any_Vx_zh_zh_uw_noSlide> zh) | (zh <any_Vx_zh_zh_uw_noSlide>)))) (([(<any_Cx_zh_zh_th> zh)] | [(zh <any_Cx_zh_zh_th>)]) (th | ((<any_Cx_zh_zh_th_t> zh) | (zh <any_Cx_zh_zh_th_t>)))) (([(<any_Cx_zh_zh_t_th> zh)] | [(zh <any_Cx_zh_zh_t_th>)]) (t | ((<any_Cx_zh_zh_t_th> zh) | (zh <any_Cx_zh_zh_t_th>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_d> d)] | [(d <any_Cx_zh_t_d>)]) sil))
Running scan for frate = 91
Considering guard zh with value 1 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for uw ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for th ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 91 public <toothed> = (((sil [((g <any_Cx_t_g_p>) | (<any_Cx_t_g_p> g))] [((g <any_vowel_noSlide>) | (<any_vowel_noSlide> g))]) | (sil p (sil [((g <any_Cx_t_g_p>) | (<any_Cx_t_g_p> g))] [((g <any_vowel_noSlide>) | (<any_vowel_noSlide> g))]))) (([(<any_Cx_zh_p_g_t> zh)] | [(zh <any_Cx_zh_p_g_t>)]) (t | ((<any_Cx_zh_p_g_t> zh) | (zh <any_Cx_zh_p_g_t>)))) ((([(<any_Vx_zh_zh_uw_noSlide> zh)] | [(zh <any_Vx_zh_zh_uw_noSlide>)]) ([(<any_Cx_zh_zh_th_t> zh)] | [(zh <any_Cx_zh_zh_th_t>)])) (uw | ((<any_Vx_zh_zh_uw_noSlide> zh) | (zh <any_Vx_zh_zh_uw_noSlide>)))) (([(<any_Cx_zh_zh_th> zh)] | [(zh <any_Cx_zh_zh_th>)]) (th | ((<any_Cx_zh_zh_th_t> zh) | (zh <any_Cx_zh_zh_th_t>)))) (([(<any_Cx_zh_zh_t_th> zh)] | [(zh <any_Cx_zh_zh_t_th>)]) (t | ((<any_Cx_zh_zh_t_th> zh) | (zh <any_Cx_zh_zh_t_th>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_thr> thr)] | [(thr <any_Cx_zh_t_thr>)]) sil))
Running scan for frate = 80
Considering guard zh with value 1 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for uw ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for th ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 80 public <toothed> = (((sil [((s <any_Cx_t_s_p>) | (<any_Cx_t_s_p> s))] [((s <any_vowel_noSlide>) | (<any_vowel_noSlide> s))]) | (sil p (sil [((s <any_Cx_t_s_p>) | (<any_Cx_t_s_p> s))] [((s <any_vowel_noSlide>) | (<any_vowel_noSlide> s))]))) (([(<any_Cx_zh_p_s_t> zh)] | [(zh <any_Cx_zh_p_s_t>)]) (t | ((<any_Cx_zh_p_s_t> zh) | (zh <any_Cx_zh_p_s_t>)))) ((([(<any_Vx_zh_zh_uw_noSlide> zh)] | [(zh <any_Vx_zh_zh_uw_noSlide>)]) ([(<any_Cx_zh_zh_th_t> zh)] | [(zh <any_Cx_zh_zh_th_t>)])) (uw | ((<any_Vx_zh_zh_uw_noSlide> zh) | (zh <any_Vx_zh_zh_uw_noSlide>)))) (([(<any_Cx_zh_zh_th> zh)] | [(zh <any_Cx_zh_zh_th>)]) (th | ((<any_Cx_zh_zh_th_t> zh) | (zh <any_Cx_zh_zh_th_t>)))) (([(<any_Cx_zh_zh_t_th> zh)] | [(zh <any_Cx_zh_zh_t_th>)]) (t | ((<any_Cx_zh_zh_t_th> zh) | (zh <any_Cx_zh_zh_t_th>)))) (([(<any_vowel_noSlide> ch)] | [(ch <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_ch> ch)] | [(ch <any_Cx_zh_t_ch>)]) sil))
Running scan for frate = 72
Considering guard zh with value 1 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for uw ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for th ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 72 public <toothed> = (((sil [((f <any_Cx_t_f_p>) | (<any_Cx_t_f_p> f))] [((f <any_vowel_noSlide>) | (<any_vowel_noSlide> f))]) | (sil p (sil [((f <any_Cx_t_f_p>) | (<any_Cx_t_f_p> f))] [((f <any_vowel_noSlide>) | (<any_vowel_noSlide> f))]))) (([(<any_Cx_zh_p_f_t> zh)] | [(zh <any_Cx_zh_p_f_t>)]) (t | ((<any_Cx_zh_p_f_t> zh) | (zh <any_Cx_zh_p_f_t>)))) ((([(<any_Vx_zh_zh_uw_noSlide> zh)] | [(zh <any_Vx_zh_zh_uw_noSlide>)]) ([(<any_Cx_zh_zh_th_t> zh)] | [(zh <any_Cx_zh_zh_th_t>)])) (uw | ((<any_Vx_zh_zh_uw_noSlide> zh) | (zh <any_Vx_zh_zh_uw_noSlide>)))) (([(<any_Cx_zh_zh_th> zh)] | [(zh <any_Cx_zh_zh_th>)]) (th | ((<any_Cx_zh_zh_th_t> zh) | (zh <any_Cx_zh_zh_th_t>)))) (([(<any_Cx_zh_zh_t_th> zh)] | [(zh <any_Cx_zh_zh_t_th>)]) (t | ((<any_Cx_zh_zh_t_th> zh) | (zh <any_Cx_zh_zh_t_th>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_d> d)] | [(d <any_Cx_zh_t_d>)]) sil))

results =
{72 [{sil 0 11} {t 12 21} {uw 22 31} {th 32 46} {t 47 60} {sil 61 88}]}
{80 [{sil 0 12} {t 13 23} {uw 24 35} {th 36 50} {t 51 66} {sil 67 96}]}
{91 [{sil 0 14} {t 15 26} {uw 27 44} {th 45 57} {t 58 75} {sil 76 111}]}
{105 [{sil 0 17} {t 18 30} {uw 31 51} {th 52 66} {t 67 86} {sil 87 129}]}
{125 [{sil 0 19} {t 20 34} {uw 35 63} {th 64 76} {t 77 100} {sil 101 152}]}

normalised results =
{72 [{sil 0 11} {t 17 29} {uw 31 43} {th 44 64} {t 65 83} {sil 85 122}]}
{80 [{sil 0 12} {t 16 29} {uw 30 44} {th 45 63} {t 64 83} {sil 84 120}]}
{91 [{sil 0 14} {t 16 29} {uw 30 48} {th 49 63} {t 64 82} {sil 84 122}]}
{105 [{sil 0 17} {t 17 29} {uw 30 49} {th 50 63} {t 64 82} {sil 83 123}]}
{125 [{sil 0 19} {t 16 27} {uw 28 50} {th 51 61} {t 62 80} {sil 81 122}]}

ruleAligned = [{{t 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{uw 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{th 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{t 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {t 17 29} {uw 31 43} {th 44 64} {t 65 83} {sil 85 85}]}
{80 [{sil 0 0} {t 16 29} {uw 30 44} {th 45 63} {t 64 83} {sil 84 84}]}
{91 [{sil 0 0} {t 16 29} {uw 30 48} {th 49 63} {t 64 82} {sil 84 84}]}
{105 [{sil 0 0} {t 17 29} {uw 30 49} {th 50 63} {t 64 82} {sil 83 83}]}
{125 [{sil 0 0} {t 16 27} {uw 28 50} {th 51 61} {t 62 80} {sil 81 81}]}

timeAligned = [{{t 16 29} [{1 1} {2 1} {4 1} {0 1} {3 1}]} {{uw 30 48} [{1 2} {2 2} {3 2} {4 2} {0 2}]} {{th 49 63} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{t 64 82} [{1 4} {2 4} {3 4} {4 4} {0 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 27
i, iTime, newITime, timeStartFrom = 2 1 2 43
i, iTime, newITime, timeStartFrom = 3 2 3 61
combinedVerdict    = [{t 0} {uw 0} {th 0} {t 0}]
ruleAlignedVerdict = [{t 0} {uw 0} {th 0} {t 0}]

score->
+2 for t
+2 for uw
+2 for th
+2 for t
score<-: 13
testPronounce t good uw good th good t good
publish->
phonsToAlphas = [{[t] t} {[uw] oo} {[th] the} {[t] d}]
getVerdict<-:new {t [t] 0}
getVerdict<-:new {oo [uw] 0}
getVerdict<-:new {the [th] 0}
getVerdict<-:new {d [t] 0}
lettersVerdicts = [{t [t] 0} {oo [uw] 0} {the [th] 0} {d [t] 0}]
publish<-
{
  "word": "toothed",
  "results": [
    {
      "letters": "t",
      "phonemes": "t",
      "verdict": "good"
    },
    {
      "letters": "oo",
      "phonemes": "u",
      "verdict": "good"
    },
    {
      "letters": "the",
      "phonemes": "θ",
      "verdict": "good"
    },
    {
      "letters": "d",
      "phonemes": "t",
      "verdict": "good"
    }
  ],
  "err": null
}
