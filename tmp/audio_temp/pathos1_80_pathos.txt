Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_d4833c29-e620-4dcb-8607-7be45bd28a9a audiofile /Users/test/go/src/Phonemes/audio_clips/pathos1_80.wav word pathos dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  2.089375



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.9 0.58 1.48

 start3, duration3, end3 =  0.9 0.48 1.38

 Initial start, duration, end =  0.8 0.6799999999999999 1.48

 Cut at: start, duration =  0.8 1.13     guard_end =  1.93 

Running scan for frate = 125
Considering guard jh with value 1 for p ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard jh with value 2 for ey ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard jh with value 2 for th ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard ng with value 2 for oh ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 1.7999999999999998 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 125 public <pathos> = (((sil [((b <any_Cx_p_b_d>) | (<any_Cx_p_b_d> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]) | (sil d (sil [((b <any_Cx_p_b_d>) | (<any_Cx_p_b_d> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]))) (([(<any_Cx_jh_d_b_p> jh)] | [(jh <any_Cx_jh_d_b_p>)]) (p | ((<any_Cx_jh_d_b_p> jh) | (jh <any_Cx_jh_d_b_p>)))) ((([(<any_Vx_jh_jh_ey_noSlide> jh)] | [(jh <any_Vx_jh_jh_ey_noSlide>)]) ([(<any_Cx_jh_jh_th_p> jh)] | [(jh <any_Cx_jh_jh_th_p>)])) (ey | ((<any_Vx_jh_jh_ey_noSlide> jh) | (jh <any_Vx_jh_jh_ey_noSlide>)))) (([(<any_Cx_jh_jh_th_oh> jh)] | [(jh <any_Cx_jh_jh_th_oh>)]) (th | ((<any_Cx_jh_jh_th_oh> jh) | (jh <any_Cx_jh_jh_th_oh>)))) (([(<any_Cx_ng_jh_oh_th> ng)] | [(ng <any_Cx_ng_jh_oh_th>)]) (oh | ((<any_Cx_ng_jh_oh_s_th> ng) | (ng <any_Cx_ng_jh_oh_s_th>)))) (([(<any_Cx_ng_ng_s_oh> ng)] | [(ng <any_Cx_ng_ng_s_oh>)]) (s | ((<any_Cx_ng_ng_s_oh> ng) | (ng <any_Cx_ng_ng_s_oh>)))) (([(<any_vowel_noSlide> z)] | [(z <any_vowel_noSlide>)]) ([(<any_Cx_ng_s_z> z)] | [(z <any_Cx_ng_s_z>)]) sil))
Running scan for frate = 105
Considering guard jh with value 1 for p ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard jh with value 2 for ey ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard jh with value 2 for th ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard ng with value 2 for oh ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 1.7999999999999998 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 105 public <pathos> = (((sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil d (sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_jh_d_hh_p> jh)] | [(jh <any_Cx_jh_d_hh_p>)]) (p | ((<any_Cx_jh_d_hh_p> jh) | (jh <any_Cx_jh_d_hh_p>)))) ((([(<any_Vx_jh_jh_ey_noSlide> jh)] | [(jh <any_Vx_jh_jh_ey_noSlide>)]) ([(<any_Cx_jh_jh_th_p> jh)] | [(jh <any_Cx_jh_jh_th_p>)])) (ey | ((<any_Vx_jh_jh_ey_noSlide> jh) | (jh <any_Vx_jh_jh_ey_noSlide>)))) (([(<any_Cx_jh_jh_th_oh> jh)] | [(jh <any_Cx_jh_jh_th_oh>)]) (th | ((<any_Cx_jh_jh_th_oh> jh) | (jh <any_Cx_jh_jh_th_oh>)))) (([(<any_Cx_ng_jh_oh_th> ng)] | [(ng <any_Cx_ng_jh_oh_th>)]) (oh | ((<any_Cx_ng_jh_oh_s_th> ng) | (ng <any_Cx_ng_jh_oh_s_th>)))) (([(<any_Cx_ng_ng_s_oh> ng)] | [(ng <any_Cx_ng_ng_s_oh>)]) (s | ((<any_Cx_ng_ng_s_oh> ng) | (ng <any_Cx_ng_ng_s_oh>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_ng_s_hh> hh)] | [(hh <any_Cx_ng_s_hh>)]) sil))
Running scan for frate = 91
Considering guard jh with value 1 for p ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard jh with value 2 for ey ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard jh with value 2 for th ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard ng with value 2 for oh ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 1.7999999999999998 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 91 public <pathos> = (((sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil d (sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_jh_d_hh_p> jh)] | [(jh <any_Cx_jh_d_hh_p>)]) (p | ((<any_Cx_jh_d_hh_p> jh) | (jh <any_Cx_jh_d_hh_p>)))) ((([(<any_Vx_jh_jh_ey_noSlide> jh)] | [(jh <any_Vx_jh_jh_ey_noSlide>)]) ([(<any_Cx_jh_jh_th_p> jh)] | [(jh <any_Cx_jh_jh_th_p>)])) (ey | ((<any_Vx_jh_jh_ey_noSlide> jh) | (jh <any_Vx_jh_jh_ey_noSlide>)))) (([(<any_Cx_jh_jh_th_oh> jh)] | [(jh <any_Cx_jh_jh_th_oh>)]) (th | ((<any_Cx_jh_jh_th_oh> jh) | (jh <any_Cx_jh_jh_th_oh>)))) (([(<any_Cx_ng_jh_oh_th> ng)] | [(ng <any_Cx_ng_jh_oh_th>)]) (oh | ((<any_Cx_ng_jh_oh_s_th> ng) | (ng <any_Cx_ng_jh_oh_s_th>)))) (([(<any_Cx_ng_ng_s_oh> ng)] | [(ng <any_Cx_ng_ng_s_oh>)]) (s | ((<any_Cx_ng_ng_s_oh> ng) | (ng <any_Cx_ng_ng_s_oh>)))) (([(<any_vowel_noSlide> z)] | [(z <any_vowel_noSlide>)]) ([(<any_Cx_ng_s_z> z)] | [(z <any_Cx_ng_s_z>)]) sil))
Running scan for frate = 80
Considering guard jh with value 1 for p ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard jh with value 2 for ey ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard jh with value 2 for th ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard ng with value 2 for oh ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 1.7999999999999998 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 80 public <pathos> = (((sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil d (sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_jh_d_hh_p> jh)] | [(jh <any_Cx_jh_d_hh_p>)]) (p | ((<any_Cx_jh_d_hh_p> jh) | (jh <any_Cx_jh_d_hh_p>)))) ((([(<any_Vx_jh_jh_ey_noSlide> jh)] | [(jh <any_Vx_jh_jh_ey_noSlide>)]) ([(<any_Cx_jh_jh_th_p> jh)] | [(jh <any_Cx_jh_jh_th_p>)])) (ey | ((<any_Vx_jh_jh_ey_noSlide> jh) | (jh <any_Vx_jh_jh_ey_noSlide>)))) (([(<any_Cx_jh_jh_th_oh> jh)] | [(jh <any_Cx_jh_jh_th_oh>)]) (th | ((<any_Cx_jh_jh_th_oh> jh) | (jh <any_Cx_jh_jh_th_oh>)))) (([(<any_Cx_ng_jh_oh_th> ng)] | [(ng <any_Cx_ng_jh_oh_th>)]) (oh | ((<any_Cx_ng_jh_oh_s_th> ng) | (ng <any_Cx_ng_jh_oh_s_th>)))) (([(<any_Cx_ng_ng_s_oh> ng)] | [(ng <any_Cx_ng_ng_s_oh>)]) (s | ((<any_Cx_ng_ng_s_oh> ng) | (ng <any_Cx_ng_ng_s_oh>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_ng_s_hh> hh)] | [(hh <any_Cx_ng_s_hh>)]) sil))
Running scan for frate = 72
Considering guard jh with value 1 for p ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard jh with value 2 for ey ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard jh with value 2 for th ...
candidateGuards = map[jh:true]
Picking guard, jh

Considering guard ng with value 2 for oh ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 1.7999999999999998 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 72 public <pathos> = (((sil [((b <any_Cx_p_b_d>) | (<any_Cx_p_b_d> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]) | (sil d (sil [((b <any_Cx_p_b_d>) | (<any_Cx_p_b_d> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]))) (([(<any_Cx_jh_d_b_p> jh)] | [(jh <any_Cx_jh_d_b_p>)]) (p | ((<any_Cx_jh_d_b_p> jh) | (jh <any_Cx_jh_d_b_p>)))) ((([(<any_Vx_jh_jh_ey_noSlide> jh)] | [(jh <any_Vx_jh_jh_ey_noSlide>)]) ([(<any_Cx_jh_jh_th_p> jh)] | [(jh <any_Cx_jh_jh_th_p>)])) (ey | ((<any_Vx_jh_jh_ey_noSlide> jh) | (jh <any_Vx_jh_jh_ey_noSlide>)))) (([(<any_Cx_jh_jh_th_oh> jh)] | [(jh <any_Cx_jh_jh_th_oh>)]) (th | ((<any_Cx_jh_jh_th_oh> jh) | (jh <any_Cx_jh_jh_th_oh>)))) (([(<any_Cx_ng_jh_oh_th> ng)] | [(ng <any_Cx_ng_jh_oh_th>)]) (oh | ((<any_Cx_ng_jh_oh_s_th> ng) | (ng <any_Cx_ng_jh_oh_s_th>)))) (([(<any_Cx_ng_ng_s_oh> ng)] | [(ng <any_Cx_ng_ng_s_oh>)]) (s | ((<any_Cx_ng_ng_s_oh> ng) | (ng <any_Cx_ng_ng_s_oh>)))) (([(<any_vowel_noSlide> z)] | [(z <any_vowel_noSlide>)]) ([(<any_Cx_ng_s_z> z)] | [(z <any_Cx_ng_s_z>)]) sil))

results =
{72 [{sil 0 9} {p 10 14} {ey 15 24} {th 25 30} {oh 31 36} {s 37 56} {sil 57 72}]}
{80 [{sil 0 11} {p 12 16} {ey 17 27} {th 28 32} {oh 33 40} {s 41 62} {sil 63 78}]}
{91 [{sil 0 13} {p 14 18} {ey 19 31} {th 32 36} {oh 37 46} {s 47 71} {sil 72 101}]}
{105 [{sil 0 16} {p 17 22} {ey 23 37} {th 38 42} {oh 43 53} {s 54 82} {sil 83 117}]}
{125 [{sil 0 18} {p 19 24} {ey 25 42} {th 43 48} {oh 49 61} {s 62 96} {sil 97 138}]}

normalised results =
{72 [{sil 0 9} {p 14 19} {ey 21 33} {th 35 42} {oh 43 50} {s 51 78} {sil 79 100}]}
{80 [{sil 0 11} {p 15 20} {ey 21 34} {th 35 40} {oh 41 50} {s 51 78} {sil 79 98}]}
{91 [{sil 0 13} {p 15 20} {ey 21 34} {th 35 40} {oh 41 51} {s 52 78} {sil 79 111}]}
{105 [{sil 0 16} {p 16 21} {ey 22 35} {th 36 40} {oh 41 50} {s 51 78} {sil 79 111}]}
{125 [{sil 0 18} {p 15 19} {ey 20 34} {th 34 38} {oh 39 49} {s 50 77} {sil 78 110}]}

ruleAligned = [{{p 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ey 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{th 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{oh 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{s 0} [{0 5} {1 5} {2 5} {3 5} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {p 14 19} {ey 21 33} {th 35 42} {oh 43 50} {s 51 78} {sil 79 79}]}
{80 [{sil 0 0} {p 15 20} {ey 21 34} {th 35 40} {oh 41 50} {s 51 78} {sil 79 79}]}
{91 [{sil 0 0} {p 15 20} {ey 21 34} {th 35 40} {oh 41 51} {s 52 78} {sil 79 79}]}
{105 [{sil 0 0} {p 16 21} {ey 22 35} {th 36 40} {oh 41 50} {s 51 78} {sil 79 79}]}
{125 [{sil 0 0} {p 15 19} {ey 20 34} {th 34 38} {oh 39 49} {s 50 77} {sil 78 78}]}

timeAligned = [{{p 15 20} [{0 1} {1 1} {2 1} {4 1} {3 1}]} {{ey 21 34} [{0 2} {1 2} {2 2} {4 2} {3 2}]} {{th 35 40} [{0 3} {1 3} {2 3} {4 3} {3 3}]} {{oh 41 50} [{1 4} {2 4} {3 4} {4 4} {0 4}]} {{s 51 78} [{0 5} {1 5} {3 5} {4 5} {2 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 19
i, iTime, newITime, timeStartFrom = 2 1 2 33
i, iTime, newITime, timeStartFrom = 3 2 3 38
i, iTime, newITime, timeStartFrom = 4 3 4 49
combinedVerdict    = [{p 0} {ey 0} {th 0} {oh 0} {s 0}]
ruleAlignedVerdict = [{p 0} {ey 0} {th 0} {oh 0} {s 0}]

score->
+2 for p
+2 for ey
+2 for th
+2 for oh
+2 for s
score<-: 15
testPronounce p good ey good th good oh good s good
publish->
phonsToAlphas = [{[p] p} {[ey] a} {[th] th} {[oh] o} {[s] s}]
getVerdict<-:new {p [p] 0}
getVerdict<-:new {a [ey] 0}
getVerdict<-:new {th [th] 0}
getVerdict<-:new {o [oh] 0}
getVerdict<-:new {s [s] 0}
lettersVerdicts = [{p [p] 0} {a [ey] 0} {th [th] 0} {o [oh] 0} {s [s] 0}]
publish<-
{
  "word": "pathos",
  "results": [
    {
      "letters": "p",
      "phonemes": "p",
      "verdict": "good"
    },
    {
      "letters": "a",
      "phonemes": "eɪ",
      "verdict": "good"
    },
    {
      "letters": "th",
      "phonemes": "θ",
      "verdict": "good"
    },
    {
      "letters": "o",
      "phonemes": "ɒ",
      "verdict": "good"
    },
    {
      "letters": "s",
      "phonemes": "s",
      "verdict": "good"
    }
  ],
  "err": null
}
