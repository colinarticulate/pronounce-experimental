Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_788c5446-fe53-45df-bc3b-56556511cd84 audiofile /Users/test/go/src/Phonemes/audio_clips/cat1_paul.wav word cat dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  1.902625



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.54 0.6 1.1400000000000001

 start3, duration3, end3 =  0.54 0.48 1.02

 Initial start, duration, end =  0.44000000000000006 0.7000000000000001 1.1400000000000001

 Cut at: start, duration =  0.44000000000000006 1.1500000000000001     guard_end =  1.5900000000000003 

Running scan for frate = 125
Considering guard zh with value 1 for k ...
Considering guard z with value 1 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for ae ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ao with value 1 for t ...
Considering guard zh with value 1 for t ...
candidateGuards = map[ao:true zh:true]
Picking guard, ao

frate, target rule = 125 public <cat> = (((sil [((t <any_Cx_k_t_b>) | (<any_Cx_k_t_b> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil b (sil [((t <any_Cx_k_t_b>) | (<any_Cx_k_t_b> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_zh_b_t_k> zh)] | [(zh <any_Cx_zh_b_t_k>)]) (k | d | ((<any_Cx_zh_b_t_k> zh) | (zh <any_Cx_zh_b_t_k>)))) ((([(<any_Vx_zh_zh_ae_noSlide> zh)] | [(zh <any_Vx_zh_zh_ae_noSlide>)]) ([(<any_Cx_zh_zh_t_k> zh)] | [(zh <any_Cx_zh_zh_t_k>)])) (ae | ((<any_Vx_zh_zh_ae_noSlide> zh) | (zh <any_Vx_zh_zh_ae_noSlide>)))) (([(<any_Cx_ao_zh_t> ao)] | [(ao <any_Cx_ao_zh_t>)]) (t | ((<any_Cx_ao_zh_t> ao) | (ao <any_Cx_ao_zh_t>)))) (([(<any_vowel_noSlide> k)] | [(k <any_vowel_noSlide>)]) ([(<any_Cx_ao_t_k> k)] | [(k <any_Cx_ao_t_k>)]) sil))
Running scan for frate = 105
Considering guard zh with value 1 for k ...
Considering guard z with value 1 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for ae ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for t ...
Considering guard ao with value 1 for t ...
candidateGuards = map[ao:true zh:true]
Picking guard, zh

frate, target rule = 105 public <cat> = (((sil [((t <any_Cx_k_t_b>) | (<any_Cx_k_t_b> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil b (sil [((t <any_Cx_k_t_b>) | (<any_Cx_k_t_b> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_zh_b_t_k> zh)] | [(zh <any_Cx_zh_b_t_k>)]) (k | d | ((<any_Cx_zh_b_t_k> zh) | (zh <any_Cx_zh_b_t_k>)))) ((([(<any_Vx_zh_zh_ae_noSlide> zh)] | [(zh <any_Vx_zh_zh_ae_noSlide>)]) ([(<any_Cx_zh_zh_t_k> zh)] | [(zh <any_Cx_zh_zh_t_k>)])) (ae | ((<any_Vx_zh_zh_ae_noSlide> zh) | (zh <any_Vx_zh_zh_ae_noSlide>)))) (([(<any_Cx_zh_zh_t> zh)] | [(zh <any_Cx_zh_zh_t>)]) (t | ((<any_Cx_zh_zh_t> zh) | (zh <any_Cx_zh_zh_t>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_g> g)] | [(g <any_Cx_zh_t_g>)]) sil))
Running scan for frate = 91
Considering guard zh with value 1 for k ...
Considering guard z with value 1 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for ae ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ao with value 1 for t ...
Considering guard zh with value 1 for t ...
candidateGuards = map[ao:true zh:true]
Picking guard, ao

frate, target rule = 91 public <cat> = (((sil [((t <any_Cx_k_t_b>) | (<any_Cx_k_t_b> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil b (sil [((t <any_Cx_k_t_b>) | (<any_Cx_k_t_b> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_zh_b_t_k> zh)] | [(zh <any_Cx_zh_b_t_k>)]) (k | d | ((<any_Cx_zh_b_t_k> zh) | (zh <any_Cx_zh_b_t_k>)))) ((([(<any_Vx_zh_zh_ae_noSlide> zh)] | [(zh <any_Vx_zh_zh_ae_noSlide>)]) ([(<any_Cx_zh_zh_t_k> zh)] | [(zh <any_Cx_zh_zh_t_k>)])) (ae | ((<any_Vx_zh_zh_ae_noSlide> zh) | (zh <any_Vx_zh_zh_ae_noSlide>)))) (([(<any_Cx_ao_zh_t> ao)] | [(ao <any_Cx_ao_zh_t>)]) (t | ((<any_Cx_ao_zh_t> ao) | (ao <any_Cx_ao_zh_t>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_ao_t_g> g)] | [(g <any_Cx_ao_t_g>)]) sil))
Running scan for frate = 80
Considering guard z with value 1 for k ...
Considering guard zh with value 1 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard zh with value 2 for ae ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ao with value 1 for t ...
Considering guard zh with value 1 for t ...
candidateGuards = map[ao:true zh:true]
Picking guard, ao

frate, target rule = 80 public <cat> = (((sil [((ch <any_Cx_k_ch_b>) | (<any_Cx_k_ch_b> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil b (sil [((ch <any_Cx_k_ch_b>) | (<any_Cx_k_ch_b> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_z_b_ch_k> z)] | [(z <any_Cx_z_b_ch_k>)]) (k | d | ((<any_Cx_z_b_ch_k> z) | (z <any_Cx_z_b_ch_k>)))) ((([(<any_Vx_zh_z_ae_noSlide> zh)] | [(zh <any_Vx_zh_z_ae_noSlide>)]) ([(<any_Cx_zh_z_t_k> zh)] | [(zh <any_Cx_zh_z_t_k>)])) (ae | ((<any_Vx_zh_z_ae_noSlide> zh) | (zh <any_Vx_zh_z_ae_noSlide>)))) (([(<any_Cx_ao_zh_t> ao)] | [(ao <any_Cx_ao_zh_t>)]) (t | ((<any_Cx_ao_zh_t> ao) | (ao <any_Cx_ao_zh_t>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_ao_t_d> d)] | [(d <any_Cx_ao_t_d>)]) sil))
Running scan for frate = 72
Considering guard zh with value 1 for k ...
Considering guard z with value 1 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for ae ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for t ...
Considering guard ao with value 1 for t ...
candidateGuards = map[ao:true zh:true]
Picking guard, zh

frate, target rule = 72 public <cat> = (((sil [((g <any_Cx_k_g_b>) | (<any_Cx_k_g_b> g))] [((g <any_vowel_noSlide>) | (<any_vowel_noSlide> g))]) | (sil b (sil [((g <any_Cx_k_g_b>) | (<any_Cx_k_g_b> g))] [((g <any_vowel_noSlide>) | (<any_vowel_noSlide> g))]))) (([(<any_Cx_zh_b_g_k> zh)] | [(zh <any_Cx_zh_b_g_k>)]) (k | d | ((<any_Cx_zh_b_g_k> zh) | (zh <any_Cx_zh_b_g_k>)))) ((([(<any_Vx_zh_zh_ae_noSlide> zh)] | [(zh <any_Vx_zh_zh_ae_noSlide>)]) ([(<any_Cx_zh_zh_t_k> zh)] | [(zh <any_Cx_zh_zh_t_k>)])) (ae | ((<any_Vx_zh_zh_ae_noSlide> zh) | (zh <any_Vx_zh_zh_ae_noSlide>)))) (([(<any_Cx_zh_zh_t> zh)] | [(zh <any_Cx_zh_zh_t>)]) (t | ((<any_Cx_zh_zh_t> zh) | (zh <any_Cx_zh_zh_t>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_thr> thr)] | [(thr <any_Cx_zh_t_thr>)]) sil))

results =
{72 [{sil 0 10} {k 11 18} {ae 19 34} {t 35 48} {sil 49 67}]}
{80 [{sil 0 12} {k 13 20} {ae 21 38} {t 39 53} {sil 54 72}]}
{91 [{sil 0 14} {k 15 23} {ae 24 45} {t 46 61} {sil 62 103}]}
{105 [{sil 0 18} {k 19 27} {ae 28 53} {t 54 70} {sil 71 119}]}
{125 [{sil 0 20} {k 21 30} {ae 31 62} {t 63 81} {sil 82 140}]}

normalised results =
{72 [{sil 0 10} {k 15 25} {ae 26 47} {t 49 67} {sil 68 93}]}
{80 [{sil 0 12} {k 16 25} {ae 26 48} {t 49 66} {sil 68 90}]}
{91 [{sil 0 14} {k 16 25} {ae 26 49} {t 51 67} {sil 68 113}]}
{105 [{sil 0 18} {k 18 26} {ae 27 50} {t 51 67} {sil 68 113}]}
{125 [{sil 0 20} {k 17 24} {ae 25 50} {t 50 65} {sil 66 112}]}

ruleAligned = [{{k 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ae 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{t 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {k 15 25} {ae 26 47} {t 49 67} {sil 68 68}]}
{80 [{sil 0 0} {k 16 25} {ae 26 48} {t 49 66} {sil 68 68}]}
{91 [{sil 0 0} {k 16 25} {ae 26 49} {t 51 67} {sil 68 68}]}
{105 [{sil 0 0} {k 18 26} {ae 27 50} {t 51 67} {sil 68 68}]}
{125 [{sil 0 0} {k 17 24} {ae 25 50} {t 50 65} {sil 66 66}]}

timeAligned = [{{k 16 25} [{0 1} {1 1} {2 1} {4 1} {3 1}]} {{ae 26 49} [{0 2} {1 2} {2 2} {4 2} {3 2}]} {{t 50 67} [{0 3} {1 3} {4 3} {2 3} {3 3}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 24
i, iTime, newITime, timeStartFrom = 2 1 2 47
combinedVerdict    = [{k 0} {ae 0} {t 0}]
ruleAlignedVerdict = [{k 0} {ae 0} {t 0}]

score->
+2 for k
+2 for ae
+2 for t
score<-: 11
testPronounce k good ae good t good
publish->
phonsToAlphas = [{[k] c} {[ae] a} {[t] t}]
getVerdict<-:new {c [k] 0}
getVerdict<-:new {a [ae] 0}
getVerdict<-:new {t [t] 0}
lettersVerdicts = [{c [k] 0} {a [ae] 0} {t [t] 0}]
publish<-
{
  "word": "cat",
  "results": [
    {
      "letters": "c",
      "phonemes": "k",
      "verdict": "good"
    },
    {
      "letters": "a",
      "phonemes": "Ã¦",
      "verdict": "good"
    },
    {
      "letters": "t",
      "phonemes": "t",
      "verdict": "good"
    }
  ],
  "err": null
}
