Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_91c381cf-3974-4e4a-9ab9-9db8f3f4f440 audiofile /Users/test/go/src/Phonemes/audio_clips/writhe1_80.wav word writhe dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  2.4145



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.4600000000000001 1.9400000000000002 2.4000000000000004

 start3, duration3, end3 =  1.0999999999999999 0.94 2.04

 Initial start, duration, end =  0.3600000000000001 2.04 2.4000000000000004

 Cut at: start, duration =  0.3600000000000001 2.0345     guard_end =  2.3945 

Running scan for frate = 125
Considering guard z with value 1 for r ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard zh with value 4 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for dh ...
Considering guard ch with value 1 for dh ...
candidateGuards = map[ch:true zh:true]
Picking guard, zh

frate, target rule = 125 public <writhe> = (((sil [((hh <any_Cx_r_hh_p>) | (<any_Cx_r_hh_p> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil p (sil [((hh <any_Cx_r_hh_p>) | (<any_Cx_r_hh_p> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_z_p_hh_r> z)] | [(z <any_Cx_z_p_hh_r>)]) (r | l | w | ((<any_Cx_z_p_hh_r> z) | (z <any_Cx_z_p_hh_r>)))) ((([(<any_Vx_zh_z_ay_noSlide> zh)] | [(zh <any_Vx_zh_z_ay_noSlide>)]) ([(<any_Cx_zh_z_dh_r> zh)] | [(zh <any_Cx_zh_z_dh_r>)])) (ay | ((<any_Vx_zh_z_ay_noSlide> zh) | (zh <any_Vx_zh_z_ay_noSlide>)))) (([(<any_Cx_zh_zh_dh> zh)] | [(zh <any_Cx_zh_zh_dh>)]) (dh | ((<any_Cx_zh_zh_dh> zh) | (zh <any_Cx_zh_zh_dh>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_zh_dh_f> f)] | [(f <any_Cx_zh_dh_f>)]) sil))
Running scan for frate = 105
Considering guard z with value 1 for r ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard zh with value 4 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 1 for dh ...
Considering guard zh with value 1 for dh ...
candidateGuards = map[ch:true zh:true]
Picking guard, ch

frate, target rule = 105 public <writhe> = (((sil [((n <any_Cx_r_n_p>) | (<any_Cx_r_n_p> n))] [((n <any_vowel_noSlide>) | (<any_vowel_noSlide> n))]) | (sil p (sil [((n <any_Cx_r_n_p>) | (<any_Cx_r_n_p> n))] [((n <any_vowel_noSlide>) | (<any_vowel_noSlide> n))]))) (([(<any_Cx_z_p_n_r> z)] | [(z <any_Cx_z_p_n_r>)]) (r | l | w | ((<any_Cx_z_p_n_r> z) | (z <any_Cx_z_p_n_r>)))) ((([(<any_Vx_zh_z_ay_noSlide> zh)] | [(zh <any_Vx_zh_z_ay_noSlide>)]) ([(<any_Cx_zh_z_dh_r> zh)] | [(zh <any_Cx_zh_z_dh_r>)])) (ay | ((<any_Vx_zh_z_ay_noSlide> zh) | (zh <any_Vx_zh_z_ay_noSlide>)))) (([(<any_Cx_ch_zh_dh> ch)] | [(ch <any_Cx_ch_zh_dh>)]) (dh | ((<any_Cx_ch_zh_dh> ch) | (ch <any_Cx_ch_zh_dh>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_ch_dh_f> f)] | [(f <any_Cx_ch_dh_f>)]) sil))
Running scan for frate = 91
Considering guard z with value 1 for r ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard zh with value 4 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for dh ...
Considering guard ch with value 1 for dh ...
candidateGuards = map[ch:true zh:true]
Picking guard, zh

frate, target rule = 91 public <writhe> = (((sil [((m <any_Cx_r_m_p>) | (<any_Cx_r_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]) | (sil p (sil [((m <any_Cx_r_m_p>) | (<any_Cx_r_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]))) (([(<any_Cx_z_p_m_r> z)] | [(z <any_Cx_z_p_m_r>)]) (r | l | w | ((<any_Cx_z_p_m_r> z) | (z <any_Cx_z_p_m_r>)))) ((([(<any_Vx_zh_z_ay_noSlide> zh)] | [(zh <any_Vx_zh_z_ay_noSlide>)]) ([(<any_Cx_zh_z_dh_r> zh)] | [(zh <any_Cx_zh_z_dh_r>)])) (ay | ((<any_Vx_zh_z_ay_noSlide> zh) | (zh <any_Vx_zh_z_ay_noSlide>)))) (([(<any_Cx_zh_zh_dh> zh)] | [(zh <any_Cx_zh_zh_dh>)]) (dh | ((<any_Cx_zh_zh_dh> zh) | (zh <any_Cx_zh_zh_dh>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_zh_dh_hh> hh)] | [(hh <any_Cx_zh_dh_hh>)]) sil))
Running scan for frate = 80
Considering guard z with value 1 for r ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard zh with value 4 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 1 for dh ...
Considering guard zh with value 1 for dh ...
candidateGuards = map[ch:true zh:true]
Picking guard, ch

frate, target rule = 80 public <writhe> = (((sil [((m <any_Cx_r_m_p>) | (<any_Cx_r_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]) | (sil p (sil [((m <any_Cx_r_m_p>) | (<any_Cx_r_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]))) (([(<any_Cx_z_p_m_r> z)] | [(z <any_Cx_z_p_m_r>)]) (r | l | w | ((<any_Cx_z_p_m_r> z) | (z <any_Cx_z_p_m_r>)))) ((([(<any_Vx_zh_z_ay_noSlide> zh)] | [(zh <any_Vx_zh_z_ay_noSlide>)]) ([(<any_Cx_zh_z_dh_r> zh)] | [(zh <any_Cx_zh_z_dh_r>)])) (ay | ((<any_Vx_zh_z_ay_noSlide> zh) | (zh <any_Vx_zh_z_ay_noSlide>)))) (([(<any_Cx_ch_zh_dh> ch)] | [(ch <any_Cx_ch_zh_dh>)]) (dh | ((<any_Cx_ch_zh_dh> ch) | (ch <any_Cx_ch_zh_dh>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_ch_dh_ng> ng)] | [(ng <any_Cx_ch_dh_ng>)]) sil))
Running scan for frate = 72
Considering guard z with value 1 for r ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard zh with value 4 for ay ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 1 for dh ...
Considering guard zh with value 1 for dh ...
candidateGuards = map[ch:true zh:true]
Picking guard, ch

frate, target rule = 72 public <writhe> = (((sil [((m <any_Cx_r_m_p>) | (<any_Cx_r_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]) | (sil p (sil [((m <any_Cx_r_m_p>) | (<any_Cx_r_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]))) (([(<any_Cx_z_p_m_r> z)] | [(z <any_Cx_z_p_m_r>)]) (r | l | w | ((<any_Cx_z_p_m_r> z) | (z <any_Cx_z_p_m_r>)))) ((([(<any_Vx_zh_z_ay_noSlide> zh)] | [(zh <any_Vx_zh_z_ay_noSlide>)]) ([(<any_Cx_zh_z_dh_r> zh)] | [(zh <any_Cx_zh_z_dh_r>)])) (ay | ((<any_Vx_zh_z_ay_noSlide> zh) | (zh <any_Vx_zh_z_ay_noSlide>)))) (([(<any_Cx_ch_zh_dh> ch)] | [(ch <any_Cx_ch_zh_dh>)]) (dh | ((<any_Cx_ch_zh_dh> ch) | (ch <any_Cx_ch_zh_dh>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_ch_dh_m> m)] | [(m <any_Cx_ch_dh_m>)]) sil))

results =
{72 [{sil 0 10} {r 11 22} {ay 23 43} {ch 44 58} {v 59 69} {aa 70 86} {m 87 100} {sil 101 145}]}
{80 [{sil 0 11} {r 12 27} {ay 28 48} {dh 49 68} {ng 69 74} {aa 75 92} {v 93 105} {ng 106 118} {sil 119 161}]}
{91 [{sil 0 13} {r 14 31} {ay 32 57} {zh 58 62} {z 63 82} {hh 83 85} {ah 86 101} {hh 102 109} {m 110 134} {sil 135 183}]}
{105 [{sil 0 16} {r 17 35} {ay 36 65} {ch 66 73} {z 74 94} {f 95 97} {ah 98 148} {sil 149 213}]}
{125 [{sil 0 18} {r 19 40} {ay 41 75} {dh 76 80} {f 81 105} {ah 106 180} {sil 181 251}]}

normalised results =
{72 [{sil 0 10} {r 15 31} {ay 32 60} {ch 61 81} {v 82 96} {aa 97 119} {m 121 139} {sil 140 201}]}
{80 [{sil 0 11} {r 15 34} {ay 35 60} {dh 61 85} {ng 86 93} {aa 94 115} {v 116 131} {ng 133 148} {sil 149 201}]}
{91 [{sil 0 13} {r 15 34} {ay 35 63} {zh 64 68} {z 69 90} {hh 91 91} {ah 95 111} {hh 112 120} {m 121 147} {sil 148 201}]}
{105 [{sil 0 16} {r 16 33} {ay 34 62} {ch 63 70} {z 70 90} {f 90 90} {ah 93 141} {sil 142 203}]}
{125 [{sil 0 18} {r 15 32} {ay 33 60} {dh 61 64} {f 65 84} {ah 85 144} {sil 145 201}]}

ruleAligned = [{{r 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ay 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{dh 2} [{1 3} {4 3}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {r 15 31} {ay 32 60} {ch 61 81} {v 82 96} {aa 97 119} {m 121 139} {sil 140 140}]}
{80 [{sil 0 0} {r 15 34} {ay 35 60} {dh 61 85} {ng 86 93} {aa 94 115} {v 116 131} {ng 133 148} {sil 149 149}]}
{91 [{sil 0 0} {r 15 34} {ay 35 63} {zh 64 64} {z 69 90} {hh 91 91} {ah 95 111} {hh 112 120} {m 121 147} {sil 148 148}]}
{105 [{sil 0 0} {r 16 33} {ay 34 62} {ch 63 70} {z 70 90} {f 90 90} {ah 93 93} {sil 142 142}]}
{125 [{sil 0 0} {r 15 32} {ay 33 60} {dh 61 64} {f 65 84} {ah 85 85} {sil 145 145}]}

timeAligned = [{{r 15 33} [{0 1} {1 1} {2 1} {4 1} {3 1}]} {{ay 34 60} [{0 2} {3 2} {4 2} {1 2} {2 2}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 31
i, iTime, newITime, timeStartFrom = 2 1 -1 60
combinedVerdict    = [{r 0} {ay 0} {dh 2}]
ruleAlignedVerdict = [{r 0} {ay 0} {dh 2}]

score->
+2 for r
+2 for ay
-2 for dh
score<-: 2
bestResult = {2 [{r 0} {ay 0} {dh 2}] [r ay dh]}
testPronounce r good ay good dh missing
publish->
phonsToAlphas = [{[r] wr} {[ay] i} {[dh] the}]
getVerdict<-:new {wr [r] 0}
getVerdict<-:new {i [ay] 0}
getVerdict<-:new {the [dh] 2}
lettersVerdicts = [{wr [r] 0} {i [ay] 0} {the [dh] 2}]
publish<-
{
  "word": "writhe",
  "results": [
    {
      "letters": "wr",
      "phonemes": "ɹ",
      "verdict": "good"
    },
    {
      "letters": "i",
      "phonemes": "ɑɪ",
      "verdict": "good"
    },
    {
      "letters": "the",
      "phonemes": "ð",
      "verdict": "missing"
    }
  ],
  "err": null
}
