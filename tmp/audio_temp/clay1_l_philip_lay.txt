Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_e6b59a9d-1eec-4dd8-ae6f-676b9dd1f009 audiofile /Users/test/go/src/Phonemes/audio_clips/clay1_l_philip.wav word lay dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  2.282313



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.76 0.94 1.7

 start3, duration3, end3 =  0.86 0.76 1.62

 Initial start, duration, end =  0.66 1.04 1.7

 Cut at: start, duration =  0.66 1.49     guard_end =  2.15 

Running scan for frate = 125
Considering guard sh with value 1.6 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ey ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 125 public <lay> = (((sil [((m <any_Cx_l_m_p>) | (<any_Cx_l_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]) | (sil p (sil [((m <any_Cx_l_m_p>) | (<any_Cx_l_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]))) (([(<any_Cx_sh_p_m_l> sh)] | [(sh <any_Cx_sh_p_m_l>)]) (l | ((<any_Cx_sh_p_m_l> sh) | (sh <any_Cx_sh_p_m_l>)))) ((([(<any_Vx_sh_sh_ey_noSlide> sh)] | [(sh <any_Vx_sh_sh_ey_noSlide>)]) ([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)])) (ey | ((<any_Vx_sh_sh_ey_noSlide> sh) | (sh <any_Vx_sh_sh_ey_noSlide>)))) (([(<any_Cx_sh_ey_r> r)] | [(r <any_Cx_sh_ey_r>)]) ([(<any_Vx_sh_ey_r> r)] | [(r <any_Vx_sh_ey_r>)]) sil))
Running scan for frate = 105
Considering guard sh with value 1.6 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ey ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 105 public <lay> = (((sil [((r <any_Cx_l_r_p>) | (<any_Cx_l_r_p> r))] [((r <any_vowel_noSlide>) | (<any_vowel_noSlide> r))]) | (sil p (sil [((r <any_Cx_l_r_p>) | (<any_Cx_l_r_p> r))] [((r <any_vowel_noSlide>) | (<any_vowel_noSlide> r))]))) (([(<any_Cx_sh_p_r_l> sh)] | [(sh <any_Cx_sh_p_r_l>)]) (l | ((<any_Cx_sh_p_r_l> sh) | (sh <any_Cx_sh_p_r_l>)))) ((([(<any_Vx_sh_sh_ey_noSlide> sh)] | [(sh <any_Vx_sh_sh_ey_noSlide>)]) ([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)])) (ey | ((<any_Vx_sh_sh_ey_noSlide> sh) | (sh <any_Vx_sh_sh_ey_noSlide>)))) (([(<any_Cx_sh_ey_f> f)] | [(f <any_Cx_sh_ey_f>)]) ([(<any_Vx_sh_ey_f> f)] | [(f <any_Vx_sh_ey_f>)]) sil))
Running scan for frate = 91
Considering guard sh with value 1.6 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ey ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 91 public <lay> = (((sil [((m <any_Cx_l_m_p>) | (<any_Cx_l_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]) | (sil p (sil [((m <any_Cx_l_m_p>) | (<any_Cx_l_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]))) (([(<any_Cx_sh_p_m_l> sh)] | [(sh <any_Cx_sh_p_m_l>)]) (l | ((<any_Cx_sh_p_m_l> sh) | (sh <any_Cx_sh_p_m_l>)))) ((([(<any_Vx_sh_sh_ey_noSlide> sh)] | [(sh <any_Vx_sh_sh_ey_noSlide>)]) ([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)])) (ey | ((<any_Vx_sh_sh_ey_noSlide> sh) | (sh <any_Vx_sh_sh_ey_noSlide>)))) (([(<any_Cx_sh_ey_hh> hh)] | [(hh <any_Cx_sh_ey_hh>)]) ([(<any_Vx_sh_ey_hh> hh)] | [(hh <any_Vx_sh_ey_hh>)]) sil))
Running scan for frate = 80
Considering guard sh with value 1.6 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ey ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 80 public <lay> = (((sil [((m <any_Cx_l_m_p>) | (<any_Cx_l_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]) | (sil p (sil [((m <any_Cx_l_m_p>) | (<any_Cx_l_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]))) (([(<any_Cx_sh_p_m_l> sh)] | [(sh <any_Cx_sh_p_m_l>)]) (l | ((<any_Cx_sh_p_m_l> sh) | (sh <any_Cx_sh_p_m_l>)))) ((([(<any_Vx_sh_sh_ey_noSlide> sh)] | [(sh <any_Vx_sh_sh_ey_noSlide>)]) ([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)])) (ey | ((<any_Vx_sh_sh_ey_noSlide> sh) | (sh <any_Vx_sh_sh_ey_noSlide>)))) (([(<any_Cx_sh_ey_hh> hh)] | [(hh <any_Cx_sh_ey_hh>)]) ([(<any_Vx_sh_ey_hh> hh)] | [(hh <any_Vx_sh_ey_hh>)]) sil))
Running scan for frate = 72
Considering guard sh with value 1.6 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ey ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 72 public <lay> = (((sil [((m <any_Cx_l_m_p>) | (<any_Cx_l_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]) | (sil p (sil [((m <any_Cx_l_m_p>) | (<any_Cx_l_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]))) (([(<any_Cx_sh_p_m_l> sh)] | [(sh <any_Cx_sh_p_m_l>)]) (l | ((<any_Cx_sh_p_m_l> sh) | (sh <any_Cx_sh_p_m_l>)))) ((([(<any_Vx_sh_sh_ey_noSlide> sh)] | [(sh <any_Vx_sh_sh_ey_noSlide>)]) ([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)])) (ey | ((<any_Vx_sh_sh_ey_noSlide> sh) | (sh <any_Vx_sh_sh_ey_noSlide>)))) (([(<any_Cx_sh_ey_thr> thr)] | [(thr <any_Cx_sh_ey_thr>)]) ([(<any_Vx_sh_ey_thr> thr)] | [(thr <any_Vx_sh_ey_thr>)]) sil))

results =
{72 [{sil 0 9} {g 10 14} {sh 15 17} {l 18 30} {ey 31 54} {sil 55 66}]}
{80 [{sil 0 10} {g 11 16} {sh 17 19} {l 20 33} {ey 34 60} {sil 61 71}]}
{91 [{sil 0 12} {g 13 22} {sh 23 26} {l 27 37} {ey 38 63} {hh 64 66} {uw 67 82} {sil 83 134}]}
{105 [{sil 0 14} {g 15 26} {sh 27 30} {l 31 43} {ey 44 69} {axn 70 89} {f 90 94} {sil 95 155}]}
{125 [{sil 0 15} {g 16 30} {sh 31 34} {l 35 49} {ey 50 103} {sil 104 183}]}

normalised results =
{72 [{sil 0 9} {g 14 19} {sh 21 21} {l 25 42} {ey 43 75} {sil 76 92}]}
{80 [{sil 0 10} {g 14 20} {sh 21 21} {l 25 41} {ey 43 75} {sil 76 89}]}
{91 [{sil 0 12} {g 14 24} {sh 25 29} {l 30 41} {ey 42 69} {hh 70 70} {uw 74 90} {sil 91 147}]}
{105 [{sil 0 14} {g 14 25} {sh 26 29} {l 30 41} {ey 42 66} {axn 67 85} {f 86 90} {sil 90 148}]}
{125 [{sil 0 15} {g 13 24} {sh 25 27} {l 28 39} {ey 40 82} {sil 83 146}]}

ruleAligned = [{{g 3} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{l 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{ey 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {g 14 19} {sh 21 21} {l 25 42} {ey 43 75} {sil 76 76}]}
{80 [{sil 0 0} {g 14 20} {sh 21 21} {l 25 41} {ey 43 75} {sil 76 76}]}
{91 [{sil 0 0} {g 14 24} {sh 25 25} {l 30 41} {ey 42 69} {hh 70 70} {uw 74 90} {sil 91 91}]}
{105 [{sil 0 0} {g 14 25} {sh 26 26} {l 30 41} {ey 42 66} {axn 67 85} {f 86 90} {sil 90 90}]}
{125 [{sil 0 0} {g 13 24} {sh 25 25} {l 28 39} {ey 40 82} {sil 83 83}]}

timeAligned = [{{g 14 24} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{l 28 41} [{0 3} {1 3} {4 3} {2 3} {3 3}]} {{ey 42 75} [{2 4} {3 4} {4 4} {0 4} {1 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 19
i, iTime, newITime, timeStartFrom = 2 1 2 39
combinedVerdict    = [{g 3} {l 0} {ey 0}]
ruleAlignedVerdict = [{g 3} {l 0} {ey 0}]

score->
-2 for g
+2 for l
+2 for ey
score<-: 2
testPronounce g surprise l good ey good
publish->
phonsToAlphas = [{[l] l} {[ey] ay}]
getVerdict<-:new {l [l] 0}
getVerdict<-:new {ay [ey] 0}
lettersVerdicts = [{g [g] 3} {l [l] 0} {ay [ey] 0}]
publish<-
{
  "word": "lay",
  "results": [
    {
      "letters": "g",
      "phonemes": "g",
      "verdict": "surprise"
    },
    {
      "letters": "l",
      "phonemes": "l",
      "verdict": "good"
    },
    {
      "letters": "ay",
      "phonemes": "eÉª",
      "verdict": "good"
    }
  ],
  "err": null
}
