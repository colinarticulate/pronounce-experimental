Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_5ede64f6-16d5-4b59-a22f-84f5e9cc5386 audiofile /Users/test/go/src/Phonemes/audio_clips/fuses1_philip.wav word fuses dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  1.983625



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.56 0.98 1.54

 start3, duration3, end3 =  0.92 0.56 1.48

 Initial start, duration, end =  0.4600000000000001 1.08 1.54

 Cut at: start, duration =  0.4600000000000001 1.503625     guard_end =  1.963625 

Running scan for frate = 125
Running scan for frate = 125
Considering guard zh with value 2 for f ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for f ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ng with value 4.8 for yuw ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard zh with value 4 for y ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ng with value 4 for z ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ch with value 5 for uw ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 3 for z ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard ch with value 10 for z ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

frate, target rule = 125 public <fuses> = (((sil [((th <any_Cx_f_th_p>) | (<any_Cx_f_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]) | (sil p (sil [((th <any_Cx_f_th_p>) | (<any_Cx_f_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]))) (([(<any_Cx_zh_p_th_f_yuw> zh)] | [(zh <any_Cx_zh_p_th_f_yuw>)]) (f | s | p | ((<any_Cx_zh_p_th_f_yuw> zh) | (zh <any_Cx_zh_p_th_f_yuw>)))) (([(<any_Cx_ng_zh_yuw_z_f> ng)] | [(ng <any_Cx_ng_zh_yuw_z_f>)]) (yuw | ((<any_Cx_ng_zh_yuw_z> ng) | (ng <any_Cx_ng_zh_yuw_z>)))) (([(<any_Cx_ng_ng_z_yuw> ng)] | [(ng <any_Cx_ng_ng_z_yuw>)]) (z | ((<any_Cx_ng_ng_z_yuw> ng) | (ng <any_Cx_ng_ng_z_yuw>)))) ((([(<any_Vx_r_ng_ih_noSlide> r)] | [(r <any_Vx_r_ng_ih_noSlide>)]) ([(<any_Cx_r_ng_z_z> r)] | [(r <any_Cx_r_ng_z_z>)])) (ih | ((<any_Vx_r_ng_ih_noSlide> r) | (r <any_Vx_r_ng_ih_noSlide>)))) (([(<any_Cx_r_r_z> r)] | [(r <any_Cx_r_r_z>)]) (z | ((<any_Cx_r_r_z> r) | (r <any_Cx_r_r_z>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_r_z_thr> thr)] | [(thr <any_Cx_r_z_thr>)]) sil))
Considering guard r with value 3 for z ...
candidateGuards = map[r:true]
Picking guard, r

Running scan for frate = 105
frate, target rule = 125 public <fuses> = (((sil [((z <any_Cx_f_z_p>) | (<any_Cx_f_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_f_z_p>) | (<any_Cx_f_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_f> zh)] | [(zh <any_Cx_zh_p_z_f>)]) (f | s | p | ((<any_Cx_zh_p_z_f> zh) | (zh <any_Cx_zh_p_z_f>)))) ((([(<any_Vx_zh_zh_y_uw_noSlide> zh)] | [(zh <any_Vx_zh_zh_y_uw_noSlide>)]) ([(<any_Cx_zh_zh_f> zh)] | [(zh <any_Cx_zh_zh_f>)])) (y | ((<any_Vx_zh_zh_y_uw_noSlide> zh) | (zh <any_Vx_zh_zh_y_uw_noSlide>)))) ((([(<any_Vx_ch_zh_uw_y_noSlide> ch)] | [(ch <any_Vx_ch_zh_uw_y_noSlide>)]) ([(<any_Cx_ch_zh_z> ch)] | [(ch <any_Cx_ch_zh_z>)])) (uw | ((<any_Vx_ch_zh_uw_y_noSlide> ch) | (ch <any_Vx_ch_zh_uw_y_noSlide>)))) (([(<any_Cx_ch_ch_z> ch)] | [(ch <any_Cx_ch_ch_z>)]) (z | ((<any_Cx_ch_ch_z> ch) | (ch <any_Cx_ch_ch_z>)))) ((([(<any_Vx_r_ch_ih_noSlide> r)] | [(r <any_Vx_r_ch_ih_noSlide>)]) ([(<any_Cx_r_ch_z_z> r)] | [(r <any_Cx_r_ch_z_z>)])) (ih | ((<any_Vx_r_ch_ih_noSlide> r) | (r <any_Vx_r_ch_ih_noSlide>)))) (([(<any_Cx_r_r_z> r)] | [(r <any_Cx_r_r_z>)]) (z | ((<any_Cx_r_r_z> r) | (r <any_Cx_r_r_z>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_r_z_b> b)] | [(b <any_Cx_r_z_b>)]) sil))
Considering guard zh with value 2 for f ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ng with value 4.8 for yuw ...
candidateGuards = map[ng:true]
Picking guard, ng

Running scan for frate = 105
Considering guard ng with value 4 for z ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 3 for z ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard zh with value 2 for f ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 105 public <fuses> = (((sil [((v <any_Cx_f_v_p>) | (<any_Cx_f_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]) | (sil p (sil [((v <any_Cx_f_v_p>) | (<any_Cx_f_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]))) (([(<any_Cx_zh_p_v_f_yuw> zh)] | [(zh <any_Cx_zh_p_v_f_yuw>)]) (f | s | p | ((<any_Cx_zh_p_v_f_yuw> zh) | (zh <any_Cx_zh_p_v_f_yuw>)))) (([(<any_Cx_ng_zh_yuw_z_f> ng)] | [(ng <any_Cx_ng_zh_yuw_z_f>)]) (yuw | ((<any_Cx_ng_zh_yuw_z> ng) | (ng <any_Cx_ng_zh_yuw_z>)))) (([(<any_Cx_ng_ng_z_yuw> ng)] | [(ng <any_Cx_ng_ng_z_yuw>)]) (z | ((<any_Cx_ng_ng_z_yuw> ng) | (ng <any_Cx_ng_ng_z_yuw>)))) ((([(<any_Vx_r_ng_ih_noSlide> r)] | [(r <any_Vx_r_ng_ih_noSlide>)]) ([(<any_Cx_r_ng_z_z> r)] | [(r <any_Cx_r_ng_z_z>)])) (ih | ((<any_Vx_r_ng_ih_noSlide> r) | (r <any_Vx_r_ng_ih_noSlide>)))) (([(<any_Cx_r_r_z> r)] | [(r <any_Cx_r_r_z>)]) (z | ((<any_Cx_r_r_z> r) | (r <any_Cx_r_r_z>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_r_z_thr> thr)] | [(thr <any_Cx_r_z_thr>)]) sil))
Considering guard zh with value 4 for y ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 5 for uw ...
candidateGuards = map[ch:true]
Picking guard, ch

Running scan for frate = 91
Considering guard ch with value 10 for z ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard zh with value 2 for f ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard ng with value 4.8 for yuw ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 4 for z ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard r with value 3 for z ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 3 for z ...
candidateGuards = map[r:true]
Picking guard, r

frate, target rule = 105 public <fuses> = (((sil [((s <any_Cx_f_s_p>) | (<any_Cx_f_s_p> s))] [((s <any_vowel_noSlide>) | (<any_vowel_noSlide> s))]) | (sil p (sil [((s <any_Cx_f_s_p>) | (<any_Cx_f_s_p> s))] [((s <any_vowel_noSlide>) | (<any_vowel_noSlide> s))]))) (([(<any_Cx_zh_p_s_f> zh)] | [(zh <any_Cx_zh_p_s_f>)]) (f | s | p | ((<any_Cx_zh_p_s_f> zh) | (zh <any_Cx_zh_p_s_f>)))) ((([(<any_Vx_zh_zh_y_uw_noSlide> zh)] | [(zh <any_Vx_zh_zh_y_uw_noSlide>)]) ([(<any_Cx_zh_zh_f> zh)] | [(zh <any_Cx_zh_zh_f>)])) (y | ((<any_Vx_zh_zh_y_uw_noSlide> zh) | (zh <any_Vx_zh_zh_y_uw_noSlide>)))) ((([(<any_Vx_ch_zh_uw_y_noSlide> ch)] | [(ch <any_Vx_ch_zh_uw_y_noSlide>)]) ([(<any_Cx_ch_zh_z> ch)] | [(ch <any_Cx_ch_zh_z>)])) (uw | ((<any_Vx_ch_zh_uw_y_noSlide> ch) | (ch <any_Vx_ch_zh_uw_y_noSlide>)))) (([(<any_Cx_ch_ch_z> ch)] | [(ch <any_Cx_ch_ch_z>)]) (z | ((<any_Cx_ch_ch_z> ch) | (ch <any_Cx_ch_ch_z>)))) ((([(<any_Vx_r_ch_ih_noSlide> r)] | [(r <any_Vx_r_ch_ih_noSlide>)]) ([(<any_Cx_r_ch_z_z> r)] | [(r <any_Cx_r_ch_z_z>)])) (ih | ((<any_Vx_r_ch_ih_noSlide> r) | (r <any_Vx_r_ch_ih_noSlide>)))) (([(<any_Cx_r_r_z> r)] | [(r <any_Cx_r_r_z>)]) (z | ((<any_Cx_r_r_z> r) | (r <any_Cx_r_r_z>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_r_z_v> v)] | [(v <any_Cx_r_z_v>)]) sil))
frate, target rule = 91 public <fuses> = (((sil [((dh <any_Cx_f_dh_p>) | (<any_Cx_f_dh_p> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]) | (sil p (sil [((dh <any_Cx_f_dh_p>) | (<any_Cx_f_dh_p> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]))) (([(<any_Cx_zh_p_dh_f_yuw> zh)] | [(zh <any_Cx_zh_p_dh_f_yuw>)]) (f | s | p | ((<any_Cx_zh_p_dh_f_yuw> zh) | (zh <any_Cx_zh_p_dh_f_yuw>)))) (([(<any_Cx_ng_zh_yuw_z_f> ng)] | [(ng <any_Cx_ng_zh_yuw_z_f>)]) (yuw | ((<any_Cx_ng_zh_yuw_z> ng) | (ng <any_Cx_ng_zh_yuw_z>)))) (([(<any_Cx_ng_ng_z_yuw> ng)] | [(ng <any_Cx_ng_ng_z_yuw>)]) (z | ((<any_Cx_ng_ng_z_yuw> ng) | (ng <any_Cx_ng_ng_z_yuw>)))) ((([(<any_Vx_r_ng_ih_noSlide> r)] | [(r <any_Vx_r_ng_ih_noSlide>)]) ([(<any_Cx_r_ng_z_z> r)] | [(r <any_Cx_r_ng_z_z>)])) (ih | ((<any_Vx_r_ng_ih_noSlide> r) | (r <any_Vx_r_ng_ih_noSlide>)))) (([(<any_Cx_r_r_z> r)] | [(r <any_Cx_r_r_z>)]) (z | ((<any_Cx_r_r_z> r) | (r <any_Cx_r_r_z>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_r_z_v> v)] | [(v <any_Cx_r_z_v>)]) sil))
Running scan for frate = 91
Running scan for frate = 80
Considering guard zh with value 2 for f ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for f ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 4 for y ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ng with value 4.8 for yuw ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ch with value 5 for uw ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ng with value 4 for z ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ch with value 10 for z ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 3 for z ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 3 for z ...
candidateGuards = map[r:true]
Picking guard, r

frate, target rule = 80 public <fuses> = (((sil [((s <any_Cx_f_s_p>) | (<any_Cx_f_s_p> s))] [((s <any_vowel_noSlide>) | (<any_vowel_noSlide> s))]) | (sil p (sil [((s <any_Cx_f_s_p>) | (<any_Cx_f_s_p> s))] [((s <any_vowel_noSlide>) | (<any_vowel_noSlide> s))]))) (([(<any_Cx_zh_p_s_f_yuw> zh)] | [(zh <any_Cx_zh_p_s_f_yuw>)]) (f | s | p | ((<any_Cx_zh_p_s_f_yuw> zh) | (zh <any_Cx_zh_p_s_f_yuw>)))) (([(<any_Cx_ng_zh_yuw_z_f> ng)] | [(ng <any_Cx_ng_zh_yuw_z_f>)]) (yuw | ((<any_Cx_ng_zh_yuw_z> ng) | (ng <any_Cx_ng_zh_yuw_z>)))) (([(<any_Cx_ng_ng_z_yuw> ng)] | [(ng <any_Cx_ng_ng_z_yuw>)]) (z | ((<any_Cx_ng_ng_z_yuw> ng) | (ng <any_Cx_ng_ng_z_yuw>)))) ((([(<any_Vx_r_ng_ih_noSlide> r)] | [(r <any_Vx_r_ng_ih_noSlide>)]) ([(<any_Cx_r_ng_z_z> r)] | [(r <any_Cx_r_ng_z_z>)])) (ih | ((<any_Vx_r_ng_ih_noSlide> r) | (r <any_Vx_r_ng_ih_noSlide>)))) (([(<any_Cx_r_r_z> r)] | [(r <any_Cx_r_r_z>)]) (z | ((<any_Cx_r_r_z> r) | (r <any_Cx_r_r_z>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_r_z_v> v)] | [(v <any_Cx_r_z_v>)]) sil))
frate, target rule = 91 public <fuses> = (((sil [((z <any_Cx_f_z_p>) | (<any_Cx_f_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_f_z_p>) | (<any_Cx_f_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_f> zh)] | [(zh <any_Cx_zh_p_z_f>)]) (f | s | p | ((<any_Cx_zh_p_z_f> zh) | (zh <any_Cx_zh_p_z_f>)))) ((([(<any_Vx_zh_zh_y_uw_noSlide> zh)] | [(zh <any_Vx_zh_zh_y_uw_noSlide>)]) ([(<any_Cx_zh_zh_f> zh)] | [(zh <any_Cx_zh_zh_f>)])) (y | ((<any_Vx_zh_zh_y_uw_noSlide> zh) | (zh <any_Vx_zh_zh_y_uw_noSlide>)))) ((([(<any_Vx_ch_zh_uw_y_noSlide> ch)] | [(ch <any_Vx_ch_zh_uw_y_noSlide>)]) ([(<any_Cx_ch_zh_z> ch)] | [(ch <any_Cx_ch_zh_z>)])) (uw | ((<any_Vx_ch_zh_uw_y_noSlide> ch) | (ch <any_Vx_ch_zh_uw_y_noSlide>)))) (([(<any_Cx_ch_ch_z> ch)] | [(ch <any_Cx_ch_ch_z>)]) (z | ((<any_Cx_ch_ch_z> ch) | (ch <any_Cx_ch_ch_z>)))) ((([(<any_Vx_r_ch_ih_noSlide> r)] | [(r <any_Vx_r_ch_ih_noSlide>)]) ([(<any_Cx_r_ch_z_z> r)] | [(r <any_Cx_r_ch_z_z>)])) (ih | ((<any_Vx_r_ch_ih_noSlide> r) | (r <any_Vx_r_ch_ih_noSlide>)))) (([(<any_Cx_r_r_z> r)] | [(r <any_Cx_r_r_z>)]) (z | ((<any_Cx_r_r_z> r) | (r <any_Cx_r_r_z>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_r_z_b> b)] | [(b <any_Cx_r_z_b>)]) sil))
Running scan for frate = 72
Considering guard zh with value 2 for f ...
candidateGuards = map[zh:true]
Picking guard, zh

Running scan for frate = 80
Considering guard ng with value 4.8 for yuw ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard zh with value 2 for f ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ng with value 4 for z ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard zh with value 4 for y ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 3 for z ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard ch with value 5 for uw ...
candidateGuards = map[ch:true]
Picking guard, ch

frate, target rule = 72 public <fuses> = (((sil [((v <any_Cx_f_v_p>) | (<any_Cx_f_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]) | (sil p (sil [((v <any_Cx_f_v_p>) | (<any_Cx_f_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]))) (([(<any_Cx_zh_p_v_f_yuw> zh)] | [(zh <any_Cx_zh_p_v_f_yuw>)]) (f | s | p | ((<any_Cx_zh_p_v_f_yuw> zh) | (zh <any_Cx_zh_p_v_f_yuw>)))) (([(<any_Cx_ng_zh_yuw_z_f> ng)] | [(ng <any_Cx_ng_zh_yuw_z_f>)]) (yuw | ((<any_Cx_ng_zh_yuw_z> ng) | (ng <any_Cx_ng_zh_yuw_z>)))) (([(<any_Cx_ng_ng_z_yuw> ng)] | [(ng <any_Cx_ng_ng_z_yuw>)]) (z | ((<any_Cx_ng_ng_z_yuw> ng) | (ng <any_Cx_ng_ng_z_yuw>)))) ((([(<any_Vx_r_ng_ih_noSlide> r)] | [(r <any_Vx_r_ng_ih_noSlide>)]) ([(<any_Cx_r_ng_z_z> r)] | [(r <any_Cx_r_ng_z_z>)])) (ih | ((<any_Vx_r_ng_ih_noSlide> r) | (r <any_Vx_r_ng_ih_noSlide>)))) (([(<any_Cx_r_r_z> r)] | [(r <any_Cx_r_r_z>)]) (z | ((<any_Cx_r_r_z> r) | (r <any_Cx_r_r_z>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_r_z_v> v)] | [(v <any_Cx_r_z_v>)]) sil))
Considering guard ch with value 10 for z ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 3 for z ...
candidateGuards = map[r:true]
Picking guard, r

frate, target rule = 80 public <fuses> = (((sil [((th <any_Cx_f_th_p>) | (<any_Cx_f_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]) | (sil p (sil [((th <any_Cx_f_th_p>) | (<any_Cx_f_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]))) (([(<any_Cx_zh_p_th_f> zh)] | [(zh <any_Cx_zh_p_th_f>)]) (f | s | p | ((<any_Cx_zh_p_th_f> zh) | (zh <any_Cx_zh_p_th_f>)))) ((([(<any_Vx_zh_zh_y_uw_noSlide> zh)] | [(zh <any_Vx_zh_zh_y_uw_noSlide>)]) ([(<any_Cx_zh_zh_f> zh)] | [(zh <any_Cx_zh_zh_f>)])) (y | ((<any_Vx_zh_zh_y_uw_noSlide> zh) | (zh <any_Vx_zh_zh_y_uw_noSlide>)))) ((([(<any_Vx_ch_zh_uw_y_noSlide> ch)] | [(ch <any_Vx_ch_zh_uw_y_noSlide>)]) ([(<any_Cx_ch_zh_z> ch)] | [(ch <any_Cx_ch_zh_z>)])) (uw | ((<any_Vx_ch_zh_uw_y_noSlide> ch) | (ch <any_Vx_ch_zh_uw_y_noSlide>)))) (([(<any_Cx_ch_ch_z> ch)] | [(ch <any_Cx_ch_ch_z>)]) (z | ((<any_Cx_ch_ch_z> ch) | (ch <any_Cx_ch_ch_z>)))) ((([(<any_Vx_r_ch_ih_noSlide> r)] | [(r <any_Vx_r_ch_ih_noSlide>)]) ([(<any_Cx_r_ch_z_z> r)] | [(r <any_Cx_r_ch_z_z>)])) (ih | ((<any_Vx_r_ch_ih_noSlide> r) | (r <any_Vx_r_ch_ih_noSlide>)))) (([(<any_Cx_r_r_z> r)] | [(r <any_Cx_r_r_z>)]) (z | ((<any_Cx_r_r_z> r) | (r <any_Cx_r_r_z>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_r_z_v> v)] | [(v <any_Cx_r_z_v>)]) sil))
Running scan for frate = 72
Considering guard zh with value 2 for f ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 4 for y ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ch with value 5 for uw ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 10 for z ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 3 for z ...
candidateGuards = map[r:true]
Picking guard, r

frate, target rule = 72 public <fuses> = (((sil [((th <any_Cx_f_th_p>) | (<any_Cx_f_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]) | (sil p (sil [((th <any_Cx_f_th_p>) | (<any_Cx_f_th_p> th))] [((th <any_vowel_noSlide>) | (<any_vowel_noSlide> th))]))) (([(<any_Cx_zh_p_th_f> zh)] | [(zh <any_Cx_zh_p_th_f>)]) (f | s | p | ((<any_Cx_zh_p_th_f> zh) | (zh <any_Cx_zh_p_th_f>)))) ((([(<any_Vx_zh_zh_y_uw_noSlide> zh)] | [(zh <any_Vx_zh_zh_y_uw_noSlide>)]) ([(<any_Cx_zh_zh_f> zh)] | [(zh <any_Cx_zh_zh_f>)])) (y | ((<any_Vx_zh_zh_y_uw_noSlide> zh) | (zh <any_Vx_zh_zh_y_uw_noSlide>)))) ((([(<any_Vx_ch_zh_uw_y_noSlide> ch)] | [(ch <any_Vx_ch_zh_uw_y_noSlide>)]) ([(<any_Cx_ch_zh_z> ch)] | [(ch <any_Cx_ch_zh_z>)])) (uw | ((<any_Vx_ch_zh_uw_y_noSlide> ch) | (ch <any_Vx_ch_zh_uw_y_noSlide>)))) (([(<any_Cx_ch_ch_z> ch)] | [(ch <any_Cx_ch_ch_z>)]) (z | ((<any_Cx_ch_ch_z> ch) | (ch <any_Cx_ch_ch_z>)))) ((([(<any_Vx_r_ch_ih_noSlide> r)] | [(r <any_Vx_r_ch_ih_noSlide>)]) ([(<any_Cx_r_ch_z_z> r)] | [(r <any_Cx_r_ch_z_z>)])) (ih | ((<any_Vx_r_ch_ih_noSlide> r) | (r <any_Vx_r_ch_ih_noSlide>)))) (([(<any_Cx_r_r_z> r)] | [(r <any_Cx_r_r_z>)]) (z | ((<any_Cx_r_r_z> r) | (r <any_Cx_r_r_z>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_r_z_v> v)] | [(v <any_Cx_r_z_v>)]) sil))

results =
{72 [{sil 0 2} {f 3 17} {yuw 18 38} {z 39 47} {ih 48 57} {z 58 77} {sil 78 96}]}
{80 [{sil 0 2} {f 3 19} {yuw 20 42} {z 43 52} {ih 53 64} {z 65 85} {sil 86 104}]}
{91 [{sil 0 2} {f 3 22} {yuw 23 48} {z 49 59} {ih 60 72} {z 73 101} {sil 102 135}]}
{105 [{sil 0 2} {f 3 26} {yuw 27 57} {z 58 69} {ih 70 84} {z 85 114} {sil 115 157}]}
{125 [{sil 0 3} {f 4 29} {yuw 30 65} {z 66 80} {ih 81 98} {z 99 129} {sil 130 184}]}

normalised results =
{72 [{sil 0 2} {f 4 24} {yuw 25 53} {z 54 65} {ih 67 79} {z 81 107} {sil 108 133}]}
{80 [{sil 0 2} {f 4 24} {yuw 25 53} {z 54 65} {ih 66 80} {z 81 106} {sil 108 130}]}
{91 [{sil 0 2} {f 3 24} {yuw 25 53} {z 54 65} {ih 66 79} {z 80 111} {sil 112 148}]}
{105 [{sil 0 2} {f 3 25} {yuw 26 54} {z 55 66} {ih 67 80} {z 81 109} {sil 110 150}]}
{125 [{sil 0 3} {f 3 23} {yuw 24 52} {z 53 64} {ih 65 78} {z 79 103} {sil 104 147}]}

ruleAligned = [{{f 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{yuw 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{z 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{ih 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{z 0} [{0 5} {1 5} {2 5} {3 5} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {f 4 24} {yuw 25 53} {z 54 65} {ih 67 79} {z 81 107} {sil 108 108}]}
{80 [{sil 0 0} {f 4 24} {yuw 25 53} {z 54 65} {ih 66 80} {z 81 106} {sil 108 108}]}
{91 [{sil 0 0} {f 3 24} {yuw 25 53} {z 54 65} {ih 66 79} {z 80 111} {sil 112 112}]}
{105 [{sil 0 0} {f 3 25} {yuw 26 54} {z 55 66} {ih 67 80} {z 81 109} {sil 110 110}]}
{125 [{sil 0 0} {f 3 23} {yuw 24 52} {z 53 64} {ih 65 78} {z 79 103} {sil 104 104}]}

timeAligned = [{{f 3 24} [{2 1} {3 1} {4 1} {0 1} {1 1}]} {{yuw 25 53} [{0 2} {1 2} {2 2} {4 2} {3 2}]} {{z 54 65} [{0 3} {1 3} {2 3} {4 3} {3 3}]} {{ih 66 79} [{1 4} {2 4} {4 4} {0 4} {3 4}]} {{z 81 107} [{0 5} {1 5} {2 5} {3 5} {4 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 23
i, iTime, newITime, timeStartFrom = 2 1 2 52
i, iTime, newITime, timeStartFrom = 3 2 3 64
i, iTime, newITime, timeStartFrom = 4 3 4 78
combinedVerdict    = [{f 0} {yuw 0} {z 0} {ih 0} {z 0}]
ruleAlignedVerdict = [{f 0} {yuw 0} {z 0} {ih 0} {z 0}]

score->
+2 for f
+2 for yuw
+2 for z
+2 for ih
+2 for z
score<-: 15

results =
{72 [{sil 0 2} {f 3 17} {y 18 26} {uw 27 38} {z 39 47} {ih 48 57} {z 58 77} {sil 78 96}]}
{80 [{sil 0 2} {f 3 19} {y 20 27} {uw 28 40} {v 41 47} {ch 48 52} {ih 53 64} {z 65 85} {sil 86 104}]}
{91 [{sil 0 2} {f 3 22} {y 23 32} {uw 33 48} {z 49 59} {ih 60 72} {z 73 101} {sil 102 135}]}
{105 [{sil 0 2} {f 3 26} {y 27 37} {uw 38 56} {z 57 69} {ih 70 84} {z 85 114} {sil 115 157}]}
{125 [{sil 0 3} {f 4 29} {y 30 43} {uw 44 66} {z 67 80} {ih 81 98} {z 99 129} {sil 130 184}]}

normalised results =
{72 [{sil 0 2} {f 4 24} {y 25 36} {uw 38 53} {z 54 65} {ih 67 79} {z 81 107} {sil 108 133}]}
{80 [{sil 0 2} {f 4 24} {y 25 34} {uw 35 50} {v 51 59} {ch 60 65} {ih 66 80} {z 81 106} {sil 108 130}]}
{91 [{sil 0 2} {f 3 24} {y 25 35} {uw 36 53} {z 54 65} {ih 66 79} {z 80 111} {sil 112 148}]}
{105 [{sil 0 2} {f 3 25} {y 26 35} {uw 36 53} {z 54 66} {ih 67 80} {z 81 109} {sil 110 150}]}
{125 [{sil 0 3} {f 3 23} {y 24 34} {uw 35 53} {z 54 64} {ih 65 78} {z 79 103} {sil 104 147}]}

ruleAligned = [{{f 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{y 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{uw 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{z 0} [{0 4} {2 4} {3 4} {4 4}]} {{ih 0} [{0 5} {1 6} {2 5} {3 5} {4 5}]} {{z 0} [{0 6} {1 7} {2 6} {3 6} {4 6}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {f 4 24} {y 25 36} {uw 38 53} {z 54 65} {ih 67 79} {z 81 107} {sil 108 108}]}
{80 [{sil 0 0} {f 4 24} {y 25 34} {uw 35 50} {v 51 59} {ch 60 65} {ih 66 80} {z 81 106} {sil 108 108}]}
{91 [{sil 0 0} {f 3 24} {y 25 35} {uw 36 53} {z 54 65} {ih 66 79} {z 80 111} {sil 112 112}]}
{105 [{sil 0 0} {f 3 25} {y 26 35} {uw 36 53} {z 54 66} {ih 67 80} {z 81 109} {sil 110 110}]}
{125 [{sil 0 0} {f 3 23} {y 24 34} {uw 35 53} {z 54 64} {ih 65 78} {z 79 103} {sil 104 104}]}

timeAligned = [{{f 3 24} [{2 1} {3 1} {4 1} {0 1} {1 1}]} {{y 25 35} [{0 2} {1 2} {2 2} {4 2} {3 2}]} {{uw 36 53} [{1 3} {2 3} {3 3} {4 3} {0 3}]} {{z 54 65} [{0 4} {2 4} {3 4} {4 4}]} {{ih 66 79} [{1 6} {2 5} {4 5} {0 5} {3 5}]} {{z 81 107} [{0 6} {1 7} {2 6} {3 6} {4 6}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 23
i, iTime, newITime, timeStartFrom = 2 1 2 34
i, iTime, newITime, timeStartFrom = 3 2 3 50
i, iTime, newITime, timeStartFrom = 4 3 4 64
i, iTime, newITime, timeStartFrom = 5 4 5 78
combinedVerdict    = [{f 0} {y 0} {uw 0} {z 0} {ih 0} {z 0}]
ruleAlignedVerdict = [{f 0} {y 0} {uw 0} {z 0} {ih 0} {z 0}]

score->
+2 for f
+2 for y
+2 for uw
+2 for z
+2 for ih
+2 for z
score<-: 17
testPronounce f good y good uw good z good ih good z good
publish->
phonsToAlphas = [{[f] f} {[y uw] u} {[z] s} {[ih] e} {[z] s}]
getVerdict<-:new {f [f] 0}
getVerdict<-:new {s [z] 0}
getVerdict<-:new {e [ih] 0}
getVerdict<-:new {s [z] 0}
lettersVerdicts = [{f [f] 0} {u [y uw] 0} {s [z] 0} {e [ih] 0} {s [z] 0}]
publish<-
{
  "word": "fuses",
  "results": [
    {
      "letters": "f",
      "phonemes": "f",
      "verdict": "good"
    },
    {
      "letters": "u",
      "phonemes": "j u",
      "verdict": "good"
    },
    {
      "letters": "s",
      "phonemes": "z",
      "verdict": "good"
    },
    {
      "letters": "e",
      "phonemes": "ɪ",
      "verdict": "good"
    },
    {
      "letters": "s",
      "phonemes": "z",
      "verdict": "good"
    }
  ],
  "err": null
}
