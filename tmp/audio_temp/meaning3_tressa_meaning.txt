Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_244fd60e-48c4-4ede-b55c-6ccfd0287b2d audiofile /Users/test/go/src/Phonemes/audio_clips/meaning3_tressa.wav word meaning dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  2.694875



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.66 1.4000000000000001 2.06

 start3, duration3, end3 =  1.22 0.54 1.76

 Initial start, duration, end =  0.56 1.5 2.06

 Cut at: start, duration =  0.56 1.95     guard_end =  2.51 

Running scan for frate = 125
Running scan for frate = 125
Considering guard sh with value 1.6 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for ng ...
Considering guard z with value 1 for ng ...
Considering guard s with value 1 for ng ...
Considering guard jh with value 1 for ng ...
candidateGuards = map[jh:true s:true sh:true z:true]
Picking guard, s

Considering guard sh with value 2 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 125 public <meaning> = (((sil [((d <any_Cx_m_d_p>) | (<any_Cx_m_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil p (sil [((d <any_Cx_m_d_p>) | (<any_Cx_m_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_sh_p_d_m> sh)] | [(sh <any_Cx_sh_p_d_m>)]) (m | ((<any_Cx_sh_p_d_m> sh) | (sh <any_Cx_sh_p_d_m>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_n_m> sh)] | [(sh <any_Cx_sh_sh_n_m>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_sh_n> sh)] | [(sh <any_Cx_sh_sh_n>)]) (n | ((<any_Cx_sh_sh_n> sh) | (sh <any_Cx_sh_sh_n>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_ng_n> sh)] | [(sh <any_Cx_sh_sh_ng_n>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_s_sh_ng> s)] | [(s <any_Cx_s_sh_ng>)]) (ng | ((<any_Cx_s_sh_ng> s) | (s <any_Cx_s_sh_ng>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_s_ng_n> n)] | [(n <any_Cx_s_ng_n>)]) sil))
Considering guard sh with value 1 for ing ...
Considering guard ch with value 1 for ing ...
Considering guard jh with value 1 for ing ...
Considering guard zh with value 1 for ing ...
candidateGuards = map[ch:true jh:true sh:true zh:true]
Picking guard, sh

Running scan for frate = 105
frate, target rule = 125 public <meaning> = (((sil [((l <any_Cx_m_l_p>) | (<any_Cx_m_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]) | (sil p (sil [((l <any_Cx_m_l_p>) | (<any_Cx_m_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]))) (([(<any_Cx_sh_p_l_m> sh)] | [(sh <any_Cx_sh_p_l_m>)]) (m | ((<any_Cx_sh_p_l_m> sh) | (sh <any_Cx_sh_p_l_m>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_n_m> sh)] | [(sh <any_Cx_sh_sh_n_m>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_sh_n> sh)] | [(sh <any_Cx_sh_sh_n>)]) (n | ((<any_Cx_sh_sh_n_ing> sh) | (sh <any_Cx_sh_sh_n_ing>)))) (([(<any_Cx_sh_sh_ing_n> sh)] | [(sh <any_Cx_sh_sh_ing_n>)]) (ing | ((<any_Cx_sh_sh_ing_n> sh) | (sh <any_Cx_sh_sh_ing_n>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_sh_ing_p> p)] | [(p <any_Cx_sh_ing_p>)]) sil))
Considering guard sh with value 1.6 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 105
Considering guard sh with value 2 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for ng ...
Considering guard s with value 1 for ng ...
Considering guard jh with value 1 for ng ...
Considering guard z with value 1 for ng ...
candidateGuards = map[jh:true s:true sh:true z:true]
Picking guard, sh

Considering guard sh with value 1.6 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 105 public <meaning> = (((sil [((l <any_Cx_m_l_p>) | (<any_Cx_m_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]) | (sil p (sil [((l <any_Cx_m_l_p>) | (<any_Cx_m_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]))) (([(<any_Cx_sh_p_l_m> sh)] | [(sh <any_Cx_sh_p_l_m>)]) (m | ((<any_Cx_sh_p_l_m> sh) | (sh <any_Cx_sh_p_l_m>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_n_m> sh)] | [(sh <any_Cx_sh_sh_n_m>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_sh_n> sh)] | [(sh <any_Cx_sh_sh_n>)]) (n | ((<any_Cx_sh_sh_n> sh) | (sh <any_Cx_sh_sh_n>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_ng_n> sh)] | [(sh <any_Cx_sh_sh_ng_n>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_sh_sh_ng> sh)] | [(sh <any_Cx_sh_sh_ng>)]) (ng | ((<any_Cx_sh_sh_ng> sh) | (sh <any_Cx_sh_sh_ng>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_sh_ng_p> p)] | [(p <any_Cx_sh_ng_p>)]) sil))
Considering guard sh with value 2 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard jh with value 1 for ing ...
Considering guard ch with value 1 for ing ...
Considering guard zh with value 1 for ing ...
Considering guard sh with value 1 for ing ...
candidateGuards = map[ch:true jh:true sh:true zh:true]
Picking guard, jh

Running scan for frate = 91
Considering guard sh with value 1.6 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 105 public <meaning> = (((sil [((v <any_Cx_m_v_p>) | (<any_Cx_m_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]) | (sil p (sil [((v <any_Cx_m_v_p>) | (<any_Cx_m_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]))) (([(<any_Cx_sh_p_v_m> sh)] | [(sh <any_Cx_sh_p_v_m>)]) (m | ((<any_Cx_sh_p_v_m> sh) | (sh <any_Cx_sh_p_v_m>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_n_m> sh)] | [(sh <any_Cx_sh_sh_n_m>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_sh_n> sh)] | [(sh <any_Cx_sh_sh_n>)]) (n | ((<any_Cx_sh_sh_n_ing> sh) | (sh <any_Cx_sh_sh_n_ing>)))) (([(<any_Cx_jh_sh_ing_n> jh)] | [(jh <any_Cx_jh_sh_ing_n>)]) (ing | ((<any_Cx_jh_sh_ing_n> jh) | (jh <any_Cx_jh_sh_ing_n>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_jh_ing_m> m)] | [(m <any_Cx_jh_ing_m>)]) sil))
Considering guard sh with value 3.2 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard s with value 1 for ng ...
Considering guard sh with value 1 for ng ...
Considering guard jh with value 1 for ng ...
Considering guard z with value 1 for ng ...
candidateGuards = map[jh:true s:true sh:true z:true]
Picking guard, z

frate, target rule = 91 public <meaning> = (((sil [((l <any_Cx_m_l_p>) | (<any_Cx_m_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]) | (sil p (sil [((l <any_Cx_m_l_p>) | (<any_Cx_m_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]))) (([(<any_Cx_sh_p_l_m> sh)] | [(sh <any_Cx_sh_p_l_m>)]) (m | ((<any_Cx_sh_p_l_m> sh) | (sh <any_Cx_sh_p_l_m>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_n_m> sh)] | [(sh <any_Cx_sh_sh_n_m>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_sh_n> sh)] | [(sh <any_Cx_sh_sh_n>)]) (n | ((<any_Cx_sh_sh_n> sh) | (sh <any_Cx_sh_sh_n>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_ng_n> sh)] | [(sh <any_Cx_sh_sh_ng_n>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_z_sh_ng> z)] | [(z <any_Cx_z_sh_ng>)]) (ng | ((<any_Cx_z_sh_ng> z) | (z <any_Cx_z_sh_ng>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_z_ng_hh> hh)] | [(hh <any_Cx_z_ng_hh>)]) sil))
Running scan for frate = 91
Running scan for frate = 80
Considering guard sh with value 1.6 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 1 for ing ...
Considering guard ch with value 1 for ing ...
Considering guard jh with value 1 for ing ...
Considering guard sh with value 1 for ing ...
candidateGuards = map[ch:true jh:true sh:true zh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard jh with value 1 for ng ...
Considering guard s with value 1 for ng ...
Considering guard sh with value 1 for ng ...
Considering guard z with value 1 for ng ...
candidateGuards = map[jh:true s:true sh:true z:true]
Picking guard, jh

frate, target rule = 91 public <meaning> = (((sil [((l <any_Cx_m_l_p>) | (<any_Cx_m_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]) | (sil p (sil [((l <any_Cx_m_l_p>) | (<any_Cx_m_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]))) (([(<any_Cx_sh_p_l_m> sh)] | [(sh <any_Cx_sh_p_l_m>)]) (m | ((<any_Cx_sh_p_l_m> sh) | (sh <any_Cx_sh_p_l_m>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_n_m> sh)] | [(sh <any_Cx_sh_sh_n_m>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_sh_n> sh)] | [(sh <any_Cx_sh_sh_n>)]) (n | ((<any_Cx_sh_sh_n_ing> sh) | (sh <any_Cx_sh_sh_n_ing>)))) (([(<any_Cx_sh_sh_ing_n> sh)] | [(sh <any_Cx_sh_sh_ing_n>)]) (ing | ((<any_Cx_sh_sh_ing_n> sh) | (sh <any_Cx_sh_sh_ing_n>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_sh_ing_m> m)] | [(m <any_Cx_sh_ing_m>)]) sil))
frate, target rule = 80 public <meaning> = (((sil [((l <any_Cx_m_l_p>) | (<any_Cx_m_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]) | (sil p (sil [((l <any_Cx_m_l_p>) | (<any_Cx_m_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]))) (([(<any_Cx_sh_p_l_m> sh)] | [(sh <any_Cx_sh_p_l_m>)]) (m | ((<any_Cx_sh_p_l_m> sh) | (sh <any_Cx_sh_p_l_m>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_n_m> sh)] | [(sh <any_Cx_sh_sh_n_m>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_sh_n> sh)] | [(sh <any_Cx_sh_sh_n>)]) (n | ((<any_Cx_sh_sh_n> sh) | (sh <any_Cx_sh_sh_n>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_ng_n> sh)] | [(sh <any_Cx_sh_sh_ng_n>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_jh_sh_ng> jh)] | [(jh <any_Cx_jh_sh_ng>)]) (ng | ((<any_Cx_jh_sh_ng> jh) | (jh <any_Cx_jh_sh_ng>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_jh_ng_f> f)] | [(f <any_Cx_jh_ng_f>)]) sil))
Running scan for frate = 80
Running scan for frate = 72
Considering guard sh with value 1.6 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1.6 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard z with value 1 for ng ...
Considering guard s with value 1 for ng ...
Considering guard sh with value 1 for ng ...
Considering guard jh with value 1 for ng ...
candidateGuards = map[jh:true s:true sh:true z:true]
Picking guard, s

frate, target rule = 72 public <meaning> = (((sil [((d <any_Cx_m_d_p>) | (<any_Cx_m_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil p (sil [((d <any_Cx_m_d_p>) | (<any_Cx_m_d_p> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_sh_p_d_m> sh)] | [(sh <any_Cx_sh_p_d_m>)]) (m | ((<any_Cx_sh_p_d_m> sh) | (sh <any_Cx_sh_p_d_m>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_n_m> sh)] | [(sh <any_Cx_sh_sh_n_m>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_sh_n> sh)] | [(sh <any_Cx_sh_sh_n>)]) (n | ((<any_Cx_sh_sh_n> sh) | (sh <any_Cx_sh_sh_n>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_ng_n> sh)] | [(sh <any_Cx_sh_sh_ng_n>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_s_sh_ng> s)] | [(s <any_Cx_s_sh_ng>)]) (ng | ((<any_Cx_s_sh_ng> s) | (s <any_Cx_s_sh_ng>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_s_ng_f> f)] | [(f <any_Cx_s_ng_f>)]) sil))
Considering guard sh with value 1.6 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard ch with value 1 for ing ...
Considering guard jh with value 1 for ing ...
Considering guard zh with value 1 for ing ...
Considering guard sh with value 1 for ing ...
candidateGuards = map[ch:true jh:true sh:true zh:true]
Picking guard, jh

frate, target rule = 80 public <meaning> = (((sil [((l <any_Cx_m_l_p>) | (<any_Cx_m_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]) | (sil p (sil [((l <any_Cx_m_l_p>) | (<any_Cx_m_l_p> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]))) (([(<any_Cx_sh_p_l_m> sh)] | [(sh <any_Cx_sh_p_l_m>)]) (m | ((<any_Cx_sh_p_l_m> sh) | (sh <any_Cx_sh_p_l_m>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_n_m> sh)] | [(sh <any_Cx_sh_sh_n_m>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_sh_n> sh)] | [(sh <any_Cx_sh_sh_n>)]) (n | ((<any_Cx_sh_sh_n_ing> sh) | (sh <any_Cx_sh_sh_n_ing>)))) (([(<any_Cx_jh_sh_ing_n> jh)] | [(jh <any_Cx_jh_sh_ing_n>)]) (ing | ((<any_Cx_jh_sh_ing_n> jh) | (jh <any_Cx_jh_sh_ing_n>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_jh_ing_ng> ng)] | [(ng <any_Cx_jh_ing_ng>)]) sil))
Running scan for frate = 72
Considering guard sh with value 1.6 for m ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3.2 for iy ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for ing ...
Considering guard ch with value 1 for ing ...
Considering guard jh with value 1 for ing ...
Considering guard zh with value 1 for ing ...
candidateGuards = map[ch:true jh:true sh:true zh:true]
Picking guard, sh

frate, target rule = 72 public <meaning> = (((sil [((v <any_Cx_m_v_p>) | (<any_Cx_m_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]) | (sil p (sil [((v <any_Cx_m_v_p>) | (<any_Cx_m_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]))) (([(<any_Cx_sh_p_v_m> sh)] | [(sh <any_Cx_sh_p_v_m>)]) (m | ((<any_Cx_sh_p_v_m> sh) | (sh <any_Cx_sh_p_v_m>)))) ((([(<any_Vx_sh_sh_iy_noSlide> sh)] | [(sh <any_Vx_sh_sh_iy_noSlide>)]) ([(<any_Cx_sh_sh_n_m> sh)] | [(sh <any_Cx_sh_sh_n_m>)])) (iy | ((<any_Vx_sh_sh_iy_noSlide> sh) | (sh <any_Vx_sh_sh_iy_noSlide>)))) (([(<any_Cx_sh_sh_n> sh)] | [(sh <any_Cx_sh_sh_n>)]) (n | ((<any_Cx_sh_sh_n_ing> sh) | (sh <any_Cx_sh_sh_n_ing>)))) (([(<any_Cx_sh_sh_ing_n> sh)] | [(sh <any_Cx_sh_sh_ing_n>)]) (ing | ((<any_Cx_sh_sh_ing_n> sh) | (sh <any_Cx_sh_sh_ing_n>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_sh_ing_m> m)] | [(m <any_Cx_sh_ing_m>)]) sil))

results =
{72 [{sil 0 11} {m 12 25} {ao 26 46} {sh 47 49} {n 50 57} {ing 58 94} {sil 95 121}]}
{80 [{sil 0 12} {m 13 28} {ao 29 51} {sh 52 54} {n 55 63} {ing 64 105} {sil 106 130}]}
{91 [{sil 0 15} {m 16 32} {ao 33 58} {sh 59 61} {n 62 72} {ing 73 119} {sil 120 176}]}
{105 [{sil 0 18} {m 19 37} {ao 38 68} {sh 69 71} {n 72 83} {ing 84 138} {sil 139 204}]}
{125 [{sil 0 19} {m 20 42} {ao 43 78} {sh 79 81} {n 82 97} {ing 98 161} {sil 162 240}]}

normalised results =
{72 [{sil 0 11} {m 17 35} {ao 36 64} {sh 65 65} {n 69 79} {ing 81 131} {sil 132 168}]}
{80 [{sil 0 12} {m 16 35} {ao 36 64} {sh 65 65} {n 69 79} {ing 80 131} {sil 133 163}]}
{91 [{sil 0 15} {m 18 35} {ao 36 64} {sh 65 65} {n 68 79} {ing 80 131} {sil 132 193}]}
{105 [{sil 0 18} {m 18 35} {ao 36 65} {sh 66 66} {n 69 79} {ing 80 131} {sil 132 194}]}
{125 [{sil 0 19} {m 16 34} {ao 34 62} {sh 63 63} {n 66 78} {ing 78 129} {sil 130 192}]}

ruleAligned = [{{m 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{iy 2} []} {{ao 3} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{n 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{ing 0} [{0 5} {1 5} {2 5} {3 5} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {m 17 35} {ao 36 64} {sh 65 65} {n 69 79} {ing 81 131} {sil 132 132}]}
{80 [{sil 0 0} {m 16 35} {ao 36 64} {sh 65 65} {n 69 79} {ing 80 131} {sil 133 133}]}
{91 [{sil 0 0} {m 18 35} {ao 36 64} {sh 65 65} {n 68 79} {ing 80 131} {sil 132 132}]}
{105 [{sil 0 0} {m 18 35} {ao 36 65} {sh 66 66} {n 69 79} {ing 80 131} {sil 132 132}]}
{125 [{sil 0 0} {m 16 34} {ao 34 62} {sh 63 63} {n 66 78} {ing 78 129} {sil 130 130}]}

timeAligned = [{{m 17 35} [{0 1} {1 1} {4 1} {2 1} {3 1}]} {{ao 36 64} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{n 69 79} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{ing 80 131} [{1 5} {2 5} {3 5} {4 5} {0 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 -1 34
i, iTime, newITime, timeStartFrom = 2 0 1 34
i, iTime, newITime, timeStartFrom = 3 1 2 62
i, iTime, newITime, timeStartFrom = 4 2 3 78
combinedVerdict    = [{m 0} {iy 2} {ao 3} {n 0} {ing 0}]
ruleAlignedVerdict = [{m 0} {iy 2} {ao 3} {n 0} {ing 0}]

score->
+2 for m
-2 for iy
-2 for ao
+2 for n
+2 for ing
score<-: 2

results =
{72 [{sil 0 11} {m 12 25} {ao 26 46} {sh 47 49} {n 50 56} {ih 57 72} {ng 73 94} {sil 95 121}]}
{80 [{sil 0 12} {m 13 28} {ao 29 51} {sh 52 54} {n 55 63} {ih 64 80} {ng 81 105} {sil 106 130}]}
{91 [{sil 0 15} {m 16 32} {ao 33 58} {sh 59 61} {n 62 72} {ih 73 90} {ng 91 119} {sil 120 176}]}
{105 [{sil 0 18} {m 19 37} {ao 38 68} {sh 69 71} {n 72 83} {ih 84 105} {ng 106 138} {sil 139 204}]}
{125 [{sil 0 19} {m 20 42} {ao 43 78} {sh 79 81} {n 82 97} {ih 98 123} {ng 124 161} {sil 162 240}]}

normalised results =
{72 [{sil 0 11} {m 17 35} {ao 36 64} {sh 65 65} {n 69 78} {ih 79 100} {ng 101 131} {sil 132 168}]}
{80 [{sil 0 12} {m 16 35} {ao 36 64} {sh 65 65} {n 69 79} {ih 80 100} {ng 101 131} {sil 133 163}]}
{91 [{sil 0 15} {m 18 35} {ao 36 64} {sh 65 65} {n 68 79} {ih 80 99} {ng 100 131} {sil 132 193}]}
{105 [{sil 0 18} {m 18 35} {ao 36 65} {sh 66 66} {n 69 79} {ih 80 100} {ng 101 131} {sil 132 194}]}
{125 [{sil 0 19} {m 16 34} {ao 34 62} {sh 63 63} {n 66 78} {ih 78 98} {ng 99 129} {sil 130 192}]}

ruleAligned = [{{m 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{iy 2} []} {{ao 3} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{n 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{ih 0} [{0 5} {1 5} {2 5} {3 5} {4 5}]} {{ng 0} [{0 6} {1 6} {2 6} {3 6} {4 6}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {m 17 35} {ao 36 64} {sh 65 65} {n 69 78} {ih 79 100} {ng 101 131} {sil 132 132}]}
{80 [{sil 0 0} {m 16 35} {ao 36 64} {sh 65 65} {n 69 79} {ih 80 100} {ng 101 131} {sil 133 133}]}
{91 [{sil 0 0} {m 18 35} {ao 36 64} {sh 65 65} {n 68 79} {ih 80 99} {ng 100 131} {sil 132 132}]}
{105 [{sil 0 0} {m 18 35} {ao 36 65} {sh 66 66} {n 69 79} {ih 80 100} {ng 101 131} {sil 132 132}]}
{125 [{sil 0 0} {m 16 34} {ao 34 62} {sh 63 63} {n 66 78} {ih 78 98} {ng 99 129} {sil 130 130}]}

timeAligned = [{{m 17 35} [{0 1} {1 1} {4 1} {2 1} {3 1}]} {{ao 36 64} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{n 69 79} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{ih 80 100} [{0 5} {1 5} {2 5} {3 5} {4 5}]} {{ng 101 131} [{0 6} {1 6} {2 6} {3 6} {4 6}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 -1 34
i, iTime, newITime, timeStartFrom = 2 0 1 34
i, iTime, newITime, timeStartFrom = 3 1 2 62
i, iTime, newITime, timeStartFrom = 4 2 3 78
i, iTime, newITime, timeStartFrom = 5 3 4 98
combinedVerdict    = [{m 0} {iy 2} {ao 3} {n 0} {ih 0} {ng 0}]
ruleAlignedVerdict = [{m 0} {iy 2} {ao 3} {n 0} {ih 0} {ng 0}]

score->
+2 for m
-2 for iy
-2 for ao
+2 for n
+2 for ih
+2 for ng
score<-: 4
bestResult = {4 [{m 0} {iy 2} {ao 3} {n 0} {ih 0} {ng 0}] [m iy n ih ng]}
testPronounce m good iy missing ao surprise n good ih good ng good
publish->
phonsToAlphas = [{[m] m} {[iy] ea} {[n] n} {[ih] i} {[ng] ng}]
getVerdict<-:new {m [m] 0}
getVerdict<-:new {ea [iy] 2}
getVerdict<-:new {n [n] 0}
getVerdict<-:new {i [ih] 0}
getVerdict<-:new {ng [ng] 0}
lettersVerdicts = [{m [m] 0} {ea [iy] 2} {ao [ao] 3} {n [n] 0} {i [ih] 0} {ng [ng] 0}]
publish<-
{
  "word": "meaning",
  "results": [
    {
      "letters": "m",
      "phonemes": "m",
      "verdict": "good"
    },
    {
      "letters": "ea",
      "phonemes": "iː",
      "verdict": "missing"
    },
    {
      "letters": "ao",
      "phonemes": "ɔ",
      "verdict": "surprise"
    },
    {
      "letters": "n",
      "phonemes": "n",
      "verdict": "good"
    },
    {
      "letters": "i",
      "phonemes": "ɪ",
      "verdict": "good"
    },
    {
      "letters": "ng",
      "phonemes": "ŋ",
      "verdict": "good"
    }
  ],
  "err": null
}
