Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_a62ea115-0b45-4d6e-b76f-ae9581a395ab audiofile /Users/test/go/src/Phonemes/audio_clips/otter1_d_paul.wav word other dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  2.413438



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.76 0.74 1.5

 start3, duration3, end3 =  0.78 0.33999999999999997 1.12

 Initial start, duration, end =  0.66 0.84 1.5

 Cut at: start, duration =  0.66 1.29     guard_end =  1.9500000000000002 

Running scan for frate = 125
Considering guard zh with value 1 for ah ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for dh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 125 public <other> = (((sil [((r <any_Vx_ah_r_p_noSlide>) | (<any_Vx_ah_r_p_noSlide> r))] [((r <any_Cx_ah_r_p>) | (<any_Cx_ah_r_p> r))]) | (sil p (sil [((r <any_Vx_ah_r_p_noSlide>) | (<any_Vx_ah_r_p_noSlide> r))] [((r <any_Cx_ah_r_p>) | (<any_Cx_ah_r_p> r))]))) ((([(<any_Vx_zh_p_r_ah_noSlide> zh)] | [(zh <any_Vx_zh_p_r_ah_noSlide>)]) ([(<any_Cx_zh_p_r_dh> zh)] | [(zh <any_Cx_zh_p_r_dh>)])) (ah | ((<any_Vx_zh_p_r_ah_noSlide> zh) | (zh <any_Vx_zh_p_r_ah_noSlide>)))) (([(<any_Cx_zh_zh_dh> zh)] | [(zh <any_Cx_zh_zh_dh>)]) (dh | ((<any_Cx_zh_zh_dh_axr> zh) | (zh <any_Cx_zh_zh_dh_axr>)))) (([(<any_Cx_zh_zh_axr_dh> zh)] | [(zh <any_Cx_zh_zh_axr_dh>)]) (axr | ((<any_Cx_zh_zh_axr_dh> zh) | (zh <any_Cx_zh_zh_axr_dh>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_m> m)] | [(m <any_Cx_zh_axr_m>)]) sil))
Running scan for frate = 105
Considering guard zh with value 1 for ah ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for dh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 105 public <other> = (((sil [((hh <any_Vx_ah_hh_p_noSlide>) | (<any_Vx_ah_hh_p_noSlide> hh))] [((hh <any_Cx_ah_hh_p>) | (<any_Cx_ah_hh_p> hh))]) | (sil p (sil [((hh <any_Vx_ah_hh_p_noSlide>) | (<any_Vx_ah_hh_p_noSlide> hh))] [((hh <any_Cx_ah_hh_p>) | (<any_Cx_ah_hh_p> hh))]))) ((([(<any_Vx_zh_p_hh_ah_noSlide> zh)] | [(zh <any_Vx_zh_p_hh_ah_noSlide>)]) ([(<any_Cx_zh_p_hh_dh> zh)] | [(zh <any_Cx_zh_p_hh_dh>)])) (ah | ((<any_Vx_zh_p_hh_ah_noSlide> zh) | (zh <any_Vx_zh_p_hh_ah_noSlide>)))) (([(<any_Cx_zh_zh_dh> zh)] | [(zh <any_Cx_zh_zh_dh>)]) (dh | ((<any_Cx_zh_zh_dh_axr> zh) | (zh <any_Cx_zh_zh_dh_axr>)))) (([(<any_Cx_zh_zh_axr_dh> zh)] | [(zh <any_Cx_zh_zh_axr_dh>)]) (axr | ((<any_Cx_zh_zh_axr_dh> zh) | (zh <any_Cx_zh_zh_axr_dh>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_n> n)] | [(n <any_Cx_zh_axr_n>)]) sil))
Running scan for frate = 91
Considering guard zh with value 1 for ah ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for dh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 91 public <other> = (((sil [((hh <any_Vx_ah_hh_p_noSlide>) | (<any_Vx_ah_hh_p_noSlide> hh))] [((hh <any_Cx_ah_hh_p>) | (<any_Cx_ah_hh_p> hh))]) | (sil p (sil [((hh <any_Vx_ah_hh_p_noSlide>) | (<any_Vx_ah_hh_p_noSlide> hh))] [((hh <any_Cx_ah_hh_p>) | (<any_Cx_ah_hh_p> hh))]))) ((([(<any_Vx_zh_p_hh_ah_noSlide> zh)] | [(zh <any_Vx_zh_p_hh_ah_noSlide>)]) ([(<any_Cx_zh_p_hh_dh> zh)] | [(zh <any_Cx_zh_p_hh_dh>)])) (ah | ((<any_Vx_zh_p_hh_ah_noSlide> zh) | (zh <any_Vx_zh_p_hh_ah_noSlide>)))) (([(<any_Cx_zh_zh_dh> zh)] | [(zh <any_Cx_zh_zh_dh>)]) (dh | ((<any_Cx_zh_zh_dh_axr> zh) | (zh <any_Cx_zh_zh_dh_axr>)))) (([(<any_Cx_zh_zh_axr_dh> zh)] | [(zh <any_Cx_zh_zh_axr_dh>)]) (axr | ((<any_Cx_zh_zh_axr_dh> zh) | (zh <any_Cx_zh_zh_axr_dh>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_m> m)] | [(m <any_Cx_zh_axr_m>)]) sil))
Running scan for frate = 80
Considering guard zh with value 1 for ah ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for dh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 80 public <other> = (((sil [((r <any_Vx_ah_r_p_noSlide>) | (<any_Vx_ah_r_p_noSlide> r))] [((r <any_Cx_ah_r_p>) | (<any_Cx_ah_r_p> r))]) | (sil p (sil [((r <any_Vx_ah_r_p_noSlide>) | (<any_Vx_ah_r_p_noSlide> r))] [((r <any_Cx_ah_r_p>) | (<any_Cx_ah_r_p> r))]))) ((([(<any_Vx_zh_p_r_ah_noSlide> zh)] | [(zh <any_Vx_zh_p_r_ah_noSlide>)]) ([(<any_Cx_zh_p_r_dh> zh)] | [(zh <any_Cx_zh_p_r_dh>)])) (ah | ((<any_Vx_zh_p_r_ah_noSlide> zh) | (zh <any_Vx_zh_p_r_ah_noSlide>)))) (([(<any_Cx_zh_zh_dh> zh)] | [(zh <any_Cx_zh_zh_dh>)]) (dh | ((<any_Cx_zh_zh_dh_axr> zh) | (zh <any_Cx_zh_zh_dh_axr>)))) (([(<any_Cx_zh_zh_axr_dh> zh)] | [(zh <any_Cx_zh_zh_axr_dh>)]) (axr | ((<any_Cx_zh_zh_axr_dh> zh) | (zh <any_Cx_zh_zh_axr_dh>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_thr> thr)] | [(thr <any_Cx_zh_axr_thr>)]) sil))
Running scan for frate = 72
Considering guard zh with value 1 for ah ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for dh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 72 public <other> = (((sil [((b <any_Vx_ah_b_p_noSlide>) | (<any_Vx_ah_b_p_noSlide> b))] [((b <any_Cx_ah_b_p>) | (<any_Cx_ah_b_p> b))]) | (sil p (sil [((b <any_Vx_ah_b_p_noSlide>) | (<any_Vx_ah_b_p_noSlide> b))] [((b <any_Cx_ah_b_p>) | (<any_Cx_ah_b_p> b))]))) ((([(<any_Vx_zh_p_b_ah_noSlide> zh)] | [(zh <any_Vx_zh_p_b_ah_noSlide>)]) ([(<any_Cx_zh_p_b_dh> zh)] | [(zh <any_Cx_zh_p_b_dh>)])) (ah | ((<any_Vx_zh_p_b_ah_noSlide> zh) | (zh <any_Vx_zh_p_b_ah_noSlide>)))) (([(<any_Cx_zh_zh_dh> zh)] | [(zh <any_Cx_zh_zh_dh>)]) (dh | ((<any_Cx_zh_zh_dh_axr> zh) | (zh <any_Cx_zh_zh_dh_axr>)))) (([(<any_Cx_zh_zh_axr_dh> zh)] | [(zh <any_Cx_zh_zh_axr_dh>)]) (axr | ((<any_Cx_zh_zh_axr_dh> zh) | (zh <any_Cx_zh_zh_axr_dh>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_p> p)] | [(p <any_Cx_zh_axr_p>)]) sil))

results =
{72 [{sil 0 11} {oh 12 29} {zh 30 33} {dh 34 37} {axr 38 55} {sil 56 69}]}
{80 [{sil 0 13} {oh 14 32} {zh 33 37} {dh 38 41} {axr 42 61} {sil 62 74}]}
{91 [{sil 0 15} {oh 16 36} {zh 37 39} {zh 40 42} {v 43 47} {axr 48 75} {sil 76 116}]}
{105 [{sil 0 18} {oh 19 42} {zh 43 45} {zh 46 48} {v 49 54} {axr 55 104} {sil 105 134}]}
{125 [{sil 0 20} {oh 21 48} {zh 49 51} {zh 52 54} {d 55 63} {axr 64 113} {sil 114 158}]}

normalised results =
{72 [{sil 0 11} {oh 17 40} {zh 42 46} {dh 47 51} {axr 53 76} {sil 78 96}]}
{80 [{sil 0 13} {oh 18 40} {zh 41 46} {dh 48 51} {axr 53 76} {sil 78 93}]}
{91 [{sil 0 15} {oh 18 40} {zh 41 41} {zh 44 44} {v 47 52} {axr 53 82} {sil 84 127}]}
{105 [{sil 0 18} {oh 18 40} {zh 41 41} {zh 44 44} {v 47 51} {axr 52 99} {sil 100 128}]}
{125 [{sil 0 20} {oh 17 38} {zh 39 39} {zh 42 42} {d 44 50} {axr 51 90} {sil 91 126}]}

ruleAligned = [{{ah 2} []} {{oh 3} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{dh 2} [{0 3} {1 3}]} {{axr 0} [{0 4} {1 4} {2 5} {3 5} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {oh 17 40} {zh 42 42} {dh 47 51} {axr 53 76} {sil 78 78}]}
{80 [{sil 0 0} {oh 18 40} {zh 41 46} {dh 48 51} {axr 53 76} {sil 78 78}]}
{91 [{sil 0 0} {oh 18 40} {zh 41 41} {zh 44 44} {v 47 52} {axr 53 82} {sil 84 84}]}
{105 [{sil 0 0} {oh 18 40} {zh 41 41} {zh 44 44} {v 47 51} {axr 52 99} {sil 100 100}]}
{125 [{sil 0 0} {oh 17 38} {zh 39 39} {zh 42 42} {d 44 50} {axr 51 90} {sil 91 91}]}

timeAligned = [{{oh 18 40} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{axr 53 82} [{0 4} {1 4} {2 5} {3 5} {4 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 -1 0
i, iTime, newITime, timeStartFrom = 1 0 0 0
i, iTime, newITime, timeStartFrom = 2 0 -1 38
i, iTime, newITime, timeStartFrom = 3 0 1 38
combinedVerdict    = [{ah 2} {oh 3} {dh 2} {axr 0}]
ruleAlignedVerdict = [{ah 2} {oh 3} {dh 2} {axr 0}]

score->
-2 for ah
-2 for oh
-2 for dh
+2 for axr
score<-: -4
bestResult = {-4 [{ah 2} {oh 3} {dh 2} {axr 0}] [ah dh axr]}
testPronounce ah missing oh surprise dh missing axr good
publish->
phonsToAlphas = [{[ah] o} {[dh] th} {[axr] er}]
getVerdict<-:new {o [ah] 2}
getVerdict<-:new {th [dh] 2}
getVerdict<-:new {er [axr] 0}
lettersVerdicts = [{o [ah] 2} {oh [oh] 3} {th [dh] 2} {er [axr] 0}]
publish<-
{
  "word": "other",
  "results": [
    {
      "letters": "o",
      "phonemes": "ʌ",
      "verdict": "missing"
    },
    {
      "letters": "oh",
      "phonemes": "ɒ",
      "verdict": "surprise"
    },
    {
      "letters": "th",
      "phonemes": "ð",
      "verdict": "missing"
    },
    {
      "letters": "er",
      "phonemes": "əɹ",
      "verdict": "good"
    }
  ],
  "err": null
}
