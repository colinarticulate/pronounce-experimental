Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_6e65a3f3-2f3e-43a3-8871-cb3847464527 audiofile /Users/test/go/src/Phonemes/audio_clips/bland1_k_paul.wav word black dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  2.111562



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.7000000000000001 0.9199999999999999 1.62

 start3, duration3, end3 =  0.7000000000000001 0.82 1.52

 Initial start, duration, end =  0.6000000000000001 1.02 1.62

 Cut at: start, duration =  0.6000000000000001 1.47     guard_end =  2.0700000000000003 

Running scan for frate = 125
Running scan for frate = 125
Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard jh with value 1 for bl ...
Considering guard sh with value 1 for bl ...
Considering guard zh with value 1 for bl ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, sh

Considering guard zh with value 2 for ae ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 1 for k ...
Considering guard z with value 1 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Considering guard y with value 7.199999999999999 for ae ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard zh with value 1 for k ...
Considering guard z with value 1 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

frate, target rule = 125 public <black> = (((sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_bl> sh)] | [(sh <any_Cx_sh_p_z_bl>)]) (bl | ((<any_Cx_sh_p_z_bl> sh) | (sh <any_Cx_sh_p_z_bl>)))) ((([(<any_Vx_zh_sh_ae_noSlide> zh)] | [(zh <any_Vx_zh_sh_ae_noSlide>)]) ([(<any_Cx_zh_sh_k_bl> zh)] | [(zh <any_Cx_zh_sh_k_bl>)])) (ae | ((<any_Vx_zh_sh_ae_noSlide> zh) | (zh <any_Vx_zh_sh_ae_noSlide>)))) (([(<any_Cx_zh_zh_k> zh)] | [(zh <any_Cx_zh_zh_k>)]) (k | ((<any_Cx_zh_zh_k> zh) | (zh <any_Cx_zh_zh_k>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_zh_k_g> g)] | [(g <any_Cx_zh_k_g>)]) sil))
frate, target rule = 125 public <black> = (((sil [((p <any_Cx_b_p_hh>) | (<any_Cx_b_p_hh> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]) | (sil hh (sil [((p <any_Cx_b_p_hh>) | (<any_Cx_b_p_hh> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]))) (([(<any_Cx_sh_hh_p_b_l> sh)] | [(sh <any_Cx_sh_hh_p_b_l>)]) (b | ((<any_Cx_sh_hh_p_b_l> sh) | (sh <any_Cx_sh_hh_p_b_l>)))) (([(<any_Cx_sh_sh_l_b> sh)] | [(sh <any_Cx_sh_sh_l_b>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_y_sh_ae_noSlide> y)] | [(y <any_Vx_y_sh_ae_noSlide>)]) ([(<any_Cx_y_sh_k_l> y)] | [(y <any_Cx_y_sh_k_l>)])) (ae | ((<any_Vx_y_sh_ae_noSlide> y) | (y <any_Vx_y_sh_ae_noSlide>)))) (([(<any_Cx_zh_y_k> zh)] | [(zh <any_Cx_zh_y_k>)]) (k | ((<any_Cx_zh_y_k> zh) | (zh <any_Cx_zh_y_k>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_zh_k_g> g)] | [(g <any_Cx_zh_k_g>)]) sil))
Running scan for frate = 105
Running scan for frate = 105
Considering guard zh with value 1 for bl ...
Considering guard sh with value 1 for bl ...
Considering guard jh with value 1 for bl ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, zh

Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 2 for ae ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard z with value 1 for k ...
Considering guard zh with value 1 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard y with value 7.199999999999999 for ae ...
candidateGuards = map[y:true]
Picking guard, y

frate, target rule = 105 public <black> = (((sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_bl> zh)] | [(zh <any_Cx_zh_p_z_bl>)]) (bl | ((<any_Cx_zh_p_z_bl> zh) | (zh <any_Cx_zh_p_z_bl>)))) ((([(<any_Vx_zh_zh_ae_noSlide> zh)] | [(zh <any_Vx_zh_zh_ae_noSlide>)]) ([(<any_Cx_zh_zh_k_bl> zh)] | [(zh <any_Cx_zh_zh_k_bl>)])) (ae | ((<any_Vx_zh_zh_ae_noSlide> zh) | (zh <any_Vx_zh_zh_ae_noSlide>)))) (([(<any_Cx_z_zh_k> z)] | [(z <any_Cx_z_zh_k>)]) (k | ((<any_Cx_z_zh_k> z) | (z <any_Cx_z_zh_k>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_z_k_p> p)] | [(p <any_Cx_z_k_p>)]) sil))
Considering guard zh with value 1 for k ...
Considering guard z with value 1 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Running scan for frate = 91
Considering guard sh with value 1 for bl ...
Considering guard zh with value 1 for bl ...
Considering guard jh with value 1 for bl ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, sh

Considering guard zh with value 2 for ae ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard z with value 1 for k ...
Considering guard zh with value 1 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, z

frate, target rule = 105 public <black> = (((sil [((l <any_Cx_b_l_hh>) | (<any_Cx_b_l_hh> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]) | (sil hh (sil [((l <any_Cx_b_l_hh>) | (<any_Cx_b_l_hh> l))] [((l <any_vowel_noSlide>) | (<any_vowel_noSlide> l))]))) (([(<any_Cx_sh_hh_l_b_l> sh)] | [(sh <any_Cx_sh_hh_l_b_l>)]) (b | ((<any_Cx_sh_hh_l_b_l> sh) | (sh <any_Cx_sh_hh_l_b_l>)))) (([(<any_Cx_sh_sh_l_b> sh)] | [(sh <any_Cx_sh_sh_l_b>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_y_sh_ae_noSlide> y)] | [(y <any_Vx_y_sh_ae_noSlide>)]) ([(<any_Cx_y_sh_k_l> y)] | [(y <any_Cx_y_sh_k_l>)])) (ae | ((<any_Vx_y_sh_ae_noSlide> y) | (y <any_Vx_y_sh_ae_noSlide>)))) (([(<any_Cx_zh_y_k> zh)] | [(zh <any_Cx_zh_y_k>)]) (k | ((<any_Cx_zh_y_k> zh) | (zh <any_Cx_zh_y_k>)))) (([(<any_vowel_noSlide> t)] | [(t <any_vowel_noSlide>)]) ([(<any_Cx_zh_k_t> t)] | [(t <any_Cx_zh_k_t>)]) sil))
frate, target rule = 91 public <black> = (((sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_bl> sh)] | [(sh <any_Cx_sh_p_z_bl>)]) (bl | ((<any_Cx_sh_p_z_bl> sh) | (sh <any_Cx_sh_p_z_bl>)))) ((([(<any_Vx_zh_sh_ae_noSlide> zh)] | [(zh <any_Vx_zh_sh_ae_noSlide>)]) ([(<any_Cx_zh_sh_k_bl> zh)] | [(zh <any_Cx_zh_sh_k_bl>)])) (ae | ((<any_Vx_zh_sh_ae_noSlide> zh) | (zh <any_Vx_zh_sh_ae_noSlide>)))) (([(<any_Cx_z_zh_k> z)] | [(z <any_Cx_z_zh_k>)]) (k | ((<any_Cx_z_zh_k> z) | (z <any_Cx_z_zh_k>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_z_k_thr> thr)] | [(thr <any_Cx_z_k_thr>)]) sil))
Running scan for frate = 91
Running scan for frate = 80
Considering guard sh with value 1 for bl ...
Considering guard zh with value 1 for bl ...
Considering guard jh with value 1 for bl ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, sh

Considering guard zh with value 2 for ae ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard z with value 1 for k ...
Considering guard zh with value 1 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 80 public <black> = (((sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_bl> sh)] | [(sh <any_Cx_sh_p_z_bl>)]) (bl | ((<any_Cx_sh_p_z_bl> sh) | (sh <any_Cx_sh_p_z_bl>)))) ((([(<any_Vx_zh_sh_ae_noSlide> zh)] | [(zh <any_Vx_zh_sh_ae_noSlide>)]) ([(<any_Cx_zh_sh_k_bl> zh)] | [(zh <any_Cx_zh_sh_k_bl>)])) (ae | ((<any_Vx_zh_sh_ae_noSlide> zh) | (zh <any_Vx_zh_sh_ae_noSlide>)))) (([(<any_Cx_z_zh_k> z)] | [(z <any_Cx_z_zh_k>)]) (k | ((<any_Cx_z_zh_k> z) | (z <any_Cx_z_zh_k>)))) (([(<any_vowel_noSlide> t)] | [(t <any_vowel_noSlide>)]) ([(<any_Cx_z_k_t> t)] | [(t <any_Cx_z_k_t>)]) sil))
Considering guard y with value 7.199999999999999 for ae ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard zh with value 1 for k ...
Considering guard z with value 1 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

Running scan for frate = 72
frate, target rule = 91 public <black> = (((sil [((hh <any_Cx_b_hh_hh>) | (<any_Cx_b_hh_hh> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil hh (sil [((hh <any_Cx_b_hh_hh>) | (<any_Cx_b_hh_hh> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_sh_hh_hh_b_l> sh)] | [(sh <any_Cx_sh_hh_hh_b_l>)]) (b | ((<any_Cx_sh_hh_hh_b_l> sh) | (sh <any_Cx_sh_hh_hh_b_l>)))) (([(<any_Cx_sh_sh_l_b> sh)] | [(sh <any_Cx_sh_sh_l_b>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_y_sh_ae_noSlide> y)] | [(y <any_Vx_y_sh_ae_noSlide>)]) ([(<any_Cx_y_sh_k_l> y)] | [(y <any_Cx_y_sh_k_l>)])) (ae | ((<any_Vx_y_sh_ae_noSlide> y) | (y <any_Vx_y_sh_ae_noSlide>)))) (([(<any_Cx_zh_y_k> zh)] | [(zh <any_Cx_zh_y_k>)]) (k | ((<any_Cx_zh_y_k> zh) | (zh <any_Cx_zh_y_k>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_zh_k_thr> thr)] | [(thr <any_Cx_zh_k_thr>)]) sil))
Considering guard jh with value 1 for bl ...
Considering guard sh with value 1 for bl ...
Considering guard zh with value 1 for bl ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, jh

Considering guard zh with value 2 for ae ...
candidateGuards = map[zh:true]
Picking guard, zh

Running scan for frate = 80
Considering guard z with value 1 for k ...
Considering guard zh with value 1 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, z

Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 72 public <black> = (((sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_jh_p_z_bl> jh)] | [(jh <any_Cx_jh_p_z_bl>)]) (bl | ((<any_Cx_jh_p_z_bl> jh) | (jh <any_Cx_jh_p_z_bl>)))) ((([(<any_Vx_zh_jh_ae_noSlide> zh)] | [(zh <any_Vx_zh_jh_ae_noSlide>)]) ([(<any_Cx_zh_jh_k_bl> zh)] | [(zh <any_Cx_zh_jh_k_bl>)])) (ae | ((<any_Vx_zh_jh_ae_noSlide> zh) | (zh <any_Vx_zh_jh_ae_noSlide>)))) (([(<any_Cx_z_zh_k> z)] | [(z <any_Cx_z_zh_k>)]) (k | ((<any_Cx_z_zh_k> z) | (z <any_Cx_z_zh_k>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_z_k_g> g)] | [(g <any_Cx_z_k_g>)]) sil))
Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard y with value 7.199999999999999 for ae ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard zh with value 1 for k ...
Considering guard z with value 1 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, zh

frate, target rule = 80 public <black> = (((sil [((dh <any_Cx_b_dh_hh>) | (<any_Cx_b_dh_hh> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]) | (sil hh (sil [((dh <any_Cx_b_dh_hh>) | (<any_Cx_b_dh_hh> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]))) (([(<any_Cx_sh_hh_dh_b_l> sh)] | [(sh <any_Cx_sh_hh_dh_b_l>)]) (b | ((<any_Cx_sh_hh_dh_b_l> sh) | (sh <any_Cx_sh_hh_dh_b_l>)))) (([(<any_Cx_sh_sh_l_b> sh)] | [(sh <any_Cx_sh_sh_l_b>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_y_sh_ae_noSlide> y)] | [(y <any_Vx_y_sh_ae_noSlide>)]) ([(<any_Cx_y_sh_k_l> y)] | [(y <any_Cx_y_sh_k_l>)])) (ae | ((<any_Vx_y_sh_ae_noSlide> y) | (y <any_Vx_y_sh_ae_noSlide>)))) (([(<any_Cx_zh_y_k> zh)] | [(zh <any_Cx_zh_y_k>)]) (k | ((<any_Cx_zh_y_k> zh) | (zh <any_Cx_zh_y_k>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_zh_k_g> g)] | [(g <any_Cx_zh_k_g>)]) sil))
Running scan for frate = 72
Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard y with value 7.199999999999999 for ae ...
candidateGuards = map[y:true]
Picking guard, y

Considering guard z with value 1 for k ...
Considering guard zh with value 1 for k ...
candidateGuards = map[z:true zh:true]
Picking guard, z

frate, target rule = 72 public <black> = (((sil [((dh <any_Cx_b_dh_hh>) | (<any_Cx_b_dh_hh> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]) | (sil hh (sil [((dh <any_Cx_b_dh_hh>) | (<any_Cx_b_dh_hh> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]))) (([(<any_Cx_sh_hh_dh_b_l> sh)] | [(sh <any_Cx_sh_hh_dh_b_l>)]) (b | ((<any_Cx_sh_hh_dh_b_l> sh) | (sh <any_Cx_sh_hh_dh_b_l>)))) (([(<any_Cx_sh_sh_l_b> sh)] | [(sh <any_Cx_sh_sh_l_b>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_y_sh_ae_noSlide> y)] | [(y <any_Vx_y_sh_ae_noSlide>)]) ([(<any_Cx_y_sh_k_l> y)] | [(y <any_Cx_y_sh_k_l>)])) (ae | ((<any_Vx_y_sh_ae_noSlide> y) | (y <any_Vx_y_sh_ae_noSlide>)))) (([(<any_Cx_z_y_k> z)] | [(z <any_Cx_z_y_k>)]) (k | ((<any_Cx_z_y_k> z) | (z <any_Cx_z_y_k>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_z_k_p> p)] | [(p <any_Cx_z_k_p>)]) sil))

results =
{72 [{sil 0 11} {b 12 16} {l 17 24} {ae 25 37} {m 38 54} {z 55 61} {sil 62 82}]}
{80 [{sil 0 12} {b 13 18} {l 19 27} {ae 28 40} {k 41 43} {m 44 57} {g 58 67} {sil 68 87}]}
{91 [{sil 0 14} {b 15 20} {l 21 30} {ae 31 47} {m 48 63} {zh 64 66} {d 67 79} {thr 80 84} {sil 85 132}]}
{105 [{sil 0 17} {b 18 23} {l 24 35} {ae 36 55} {m 56 74} {zh 75 77} {d 78 92} {t 93 98} {sil 99 153}]}
{125 [{sil 0 20} {b 21 25} {l 26 40} {ae 41 63} {m 64 87} {zh 88 90} {d 91 108} {g 109 111} {sil 112 180}]}

normalised results =
{72 [{sil 0 11} {b 17 22} {l 24 33} {ae 35 51} {m 53 75} {z 76 85} {sil 86 114}]}
{80 [{sil 0 12} {b 16 23} {l 24 34} {ae 35 50} {k 51 51} {m 55 71} {g 73 84} {sil 85 109}]}
{91 [{sil 0 14} {b 16 22} {l 23 33} {ae 34 52} {m 53 69} {zh 70 70} {d 74 87} {thr 88 92} {sil 93 145}]}
{105 [{sil 0 17} {b 17 22} {l 23 33} {ae 34 52} {m 53 70} {zh 71 71} {d 74 88} {t 89 93} {sil 94 146}]}
{125 [{sil 0 20} {b 17 20} {l 21 32} {ae 33 50} {m 51 70} {zh 70 70} {d 73 86} {g 87 87} {sil 90 144}]}

ruleAligned = [{{b 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{l 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{ae 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{k 2} []} {{m 3} [{0 4} {2 4} {3 4} {4 4}]} {{d 3} [{2 6} {3 6} {4 6}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {b 17 22} {l 24 33} {ae 35 51} {m 53 75} {z 76 85} {sil 86 86}]}
{80 [{sil 0 0} {b 16 23} {l 24 34} {ae 35 50} {k 51 51} {m 55 71} {g 73 84} {sil 85 85}]}
{91 [{sil 0 0} {b 16 22} {l 23 33} {ae 34 52} {m 53 69} {zh 70 70} {d 74 87} {thr 88 92} {sil 93 93}]}
{105 [{sil 0 0} {b 17 22} {l 23 33} {ae 34 52} {m 53 70} {zh 71 71} {d 74 88} {t 89 93} {sil 94 94}]}
{125 [{sil 0 0} {b 17 20} {l 21 32} {ae 33 50} {m 51 70} {zh 70 70} {d 73 86} {g 87 87} {sil 90 90}]}

timeAligned = [{{b 17 22} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{l 23 33} [{2 2} {3 2} {4 2} {0 2} {1 2}]} {{ae 34 51} [{2 3} {3 3} {4 3} {0 3} {1 3}]} {{m 53 70} [{0 4} {2 4} {3 4} {4 4} {1 5}]} {{d 74 86} [{2 6} {3 6} {4 6}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 20
i, iTime, newITime, timeStartFrom = 2 1 2 32
i, iTime, newITime, timeStartFrom = 3 2 -1 50
i, iTime, newITime, timeStartFrom = 4 2 3 50
i, iTime, newITime, timeStartFrom = 5 3 4 69
combinedVerdict    = [{b 0} {l 0} {ae 0} {k 2} {m 3} {d 3}]
ruleAlignedVerdict = [{b 0} {l 0} {ae 0} {k 2} {m 3} {d 3}]

score->
+2 for b
+2 for l
+2 for ae
-2 for k
-2 for m
-2 for d
score<-: 0

results =
{72 [{sil 0 11} {bl 12 24} {ae 25 37} {m 38 54} {z 55 61} {sil 62 82}]}
{80 [{sil 0 12} {bl 13 26} {ae 27 41} {m 42 59} {z 60 67} {sil 68 87}]}
{91 [{sil 0 14} {bl 15 30} {ae 31 47} {m 48 63} {z 64 66} {d 67 80} {z 81 84} {sil 85 132}]}
{105 [{sil 0 17} {bl 18 35} {ae 36 55} {m 56 76} {z 77 79} {d 80 93} {z 94 98} {sil 99 153}]}
{125 [{sil 0 20} {bl 21 40} {ae 41 63} {m 64 87} {zh 88 90} {d 91 108} {g 109 111} {sil 112 180}]}

normalised results =
{72 [{sil 0 11} {bl 17 33} {ae 35 51} {m 53 75} {z 76 85} {sil 86 114}]}
{80 [{sil 0 12} {bl 16 33} {ae 34 51} {m 53 74} {z 75 84} {sil 85 109}]}
{91 [{sil 0 14} {bl 16 33} {ae 34 52} {m 53 69} {z 70 70} {d 74 88} {z 89 92} {sil 93 145}]}
{105 [{sil 0 17} {bl 17 33} {ae 34 52} {m 53 72} {z 73 73} {d 76 89} {z 90 93} {sil 94 146}]}
{125 [{sil 0 20} {bl 17 32} {ae 33 50} {m 51 70} {zh 70 70} {d 73 86} {g 87 87} {sil 90 144}]}

ruleAligned = [{{bl 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ae 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{k 2} []} {{m 3} [{0 3} {1 3} {4 3}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {bl 17 33} {ae 35 51} {m 53 75} {z 76 85} {sil 86 86}]}
{80 [{sil 0 0} {bl 16 33} {ae 34 51} {m 53 74} {z 75 84} {sil 85 85}]}
{91 [{sil 0 0} {bl 16 33} {ae 34 52} {m 53 69} {z 70 70} {d 74 88} {z 89 89} {sil 93 93}]}
{105 [{sil 0 0} {bl 17 33} {ae 34 52} {m 53 72} {z 73 73} {d 76 89} {z 90 90} {sil 94 94}]}
{125 [{sil 0 0} {bl 17 32} {ae 33 50} {m 51 70} {zh 70 70} {d 73 86} {g 87 87} {sil 90 90}]}

timeAligned = [{{bl 17 33} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ae 34 51} [{1 2} {2 2} {3 2} {4 2} {0 2}]} {{m 53 72} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{d 76 86} [{2 5} {3 5} {4 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 32
i, iTime, newITime, timeStartFrom = 2 1 -1 50
i, iTime, newITime, timeStartFrom = 3 1 2 50
combinedVerdict    = [{bl 0} {ae 0} {k 2} {m 3} {d 3}]
ruleAlignedVerdict = [{bl 0} {ae 0} {k 2} {m 3}]

score->
+2 for bl
+2 for ae
-2 for k
-2 for m
-2 for d
score<-: -2
bestResult = {0 [{b 0} {l 0} {ae 0} {k 2} {m 3} {d 3}] [b l ae k]}
testPronounce b good l good ae good k missing m surprise d surprise
publish->
phonsToAlphas = [{[b] b} {[l] l} {[ae] a} {[k] ck}]
getVerdict<-:new {b [b] 0}
getVerdict<-:new {l [l] 0}
getVerdict<-:new {a [ae] 0}
getVerdict<-:new {ck [k] 2}
lettersVerdicts = [{b [b] 0} {l [l] 0} {a [ae] 0} {ck [k] 2} {m [m] 3} {d [d] 3}]
publish<-
{
  "word": "black",
  "results": [
    {
      "letters": "b",
      "phonemes": "b",
      "verdict": "good"
    },
    {
      "letters": "l",
      "phonemes": "l",
      "verdict": "good"
    },
    {
      "letters": "a",
      "phonemes": "æ",
      "verdict": "good"
    },
    {
      "letters": "ck",
      "phonemes": "k",
      "verdict": "missing"
    },
    {
      "letters": "m",
      "phonemes": "m",
      "verdict": "surprise"
    },
    {
      "letters": "d",
      "phonemes": "d",
      "verdict": "surprise"
    }
  ],
  "err": null
}
