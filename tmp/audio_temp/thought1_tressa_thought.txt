Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_132fbd13-d60e-44f1-b42b-dab8bf30517a audiofile /Users/test/go/src/Phonemes/audio_clips/thought1_tressa.wav word thought dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  2.167312



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.68 0.62 1.3

 start3, duration3, end3 =  0.72 0.4 1.12

 Initial start, duration, end =  0.5800000000000001 0.72 1.3

 Cut at: start, duration =  0.5800000000000001 1.17     guard_end =  1.75 

Running scan for frate = 125
Considering guard jh with value 1 for th ...
Considering guard zh with value 1 for th ...
candidateGuards = map[jh:true zh:true]
Picking guard, jh

Considering guard zh with value 2 for ao ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 125 public <thought> = (((sil [((t <any_Cx_th_t_p>) | (<any_Cx_th_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil p (sil [((t <any_Cx_th_t_p>) | (<any_Cx_th_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_jh_p_t_th> jh)] | [(jh <any_Cx_jh_p_t_th>)]) (th | t | d | s | ((<any_Cx_jh_p_t_th> jh) | (jh <any_Cx_jh_p_t_th>)))) ((([(<any_Vx_zh_jh_ao_noSlide> zh)] | [(zh <any_Vx_zh_jh_ao_noSlide>)]) ([(<any_Cx_zh_jh_t_th> zh)] | [(zh <any_Cx_zh_jh_t_th>)])) (ao | ((<any_Vx_zh_jh_ao_noSlide> zh) | (zh <any_Vx_zh_jh_ao_noSlide>)))) (([(<any_Cx_zh_zh_t> zh)] | [(zh <any_Cx_zh_zh_t>)]) (t | ((<any_Cx_zh_zh_t> zh) | (zh <any_Cx_zh_zh_t>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_g> g)] | [(g <any_Cx_zh_t_g>)]) sil))
Running scan for frate = 105
Considering guard zh with value 1 for th ...
Considering guard jh with value 1 for th ...
candidateGuards = map[jh:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for ao ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 105 public <thought> = (((sil [((s <any_Cx_th_s_p>) | (<any_Cx_th_s_p> s))] [((s <any_vowel_noSlide>) | (<any_vowel_noSlide> s))]) | (sil p (sil [((s <any_Cx_th_s_p>) | (<any_Cx_th_s_p> s))] [((s <any_vowel_noSlide>) | (<any_vowel_noSlide> s))]))) (([(<any_Cx_zh_p_s_th> zh)] | [(zh <any_Cx_zh_p_s_th>)]) (th | t | d | s | ((<any_Cx_zh_p_s_th> zh) | (zh <any_Cx_zh_p_s_th>)))) ((([(<any_Vx_zh_zh_ao_noSlide> zh)] | [(zh <any_Vx_zh_zh_ao_noSlide>)]) ([(<any_Cx_zh_zh_t_th> zh)] | [(zh <any_Cx_zh_zh_t_th>)])) (ao | ((<any_Vx_zh_zh_ao_noSlide> zh) | (zh <any_Vx_zh_zh_ao_noSlide>)))) (([(<any_Cx_zh_zh_t> zh)] | [(zh <any_Cx_zh_zh_t>)]) (t | ((<any_Cx_zh_zh_t> zh) | (zh <any_Cx_zh_zh_t>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_g> g)] | [(g <any_Cx_zh_t_g>)]) sil))
Running scan for frate = 91
Considering guard jh with value 1 for th ...
Considering guard zh with value 1 for th ...
candidateGuards = map[jh:true zh:true]
Picking guard, jh

Considering guard zh with value 2 for ao ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 91 public <thought> = (((sil [((s <any_Cx_th_s_p>) | (<any_Cx_th_s_p> s))] [((s <any_vowel_noSlide>) | (<any_vowel_noSlide> s))]) | (sil p (sil [((s <any_Cx_th_s_p>) | (<any_Cx_th_s_p> s))] [((s <any_vowel_noSlide>) | (<any_vowel_noSlide> s))]))) (([(<any_Cx_jh_p_s_th> jh)] | [(jh <any_Cx_jh_p_s_th>)]) (th | t | d | s | ((<any_Cx_jh_p_s_th> jh) | (jh <any_Cx_jh_p_s_th>)))) ((([(<any_Vx_zh_jh_ao_noSlide> zh)] | [(zh <any_Vx_zh_jh_ao_noSlide>)]) ([(<any_Cx_zh_jh_t_th> zh)] | [(zh <any_Cx_zh_jh_t_th>)])) (ao | ((<any_Vx_zh_jh_ao_noSlide> zh) | (zh <any_Vx_zh_jh_ao_noSlide>)))) (([(<any_Cx_zh_zh_t> zh)] | [(zh <any_Cx_zh_zh_t>)]) (t | ((<any_Cx_zh_zh_t> zh) | (zh <any_Cx_zh_zh_t>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_g> g)] | [(g <any_Cx_zh_t_g>)]) sil))
Running scan for frate = 80
Considering guard zh with value 1 for th ...
Considering guard jh with value 1 for th ...
candidateGuards = map[jh:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for ao ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 80 public <thought> = (((sil [((t <any_Cx_th_t_p>) | (<any_Cx_th_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil p (sil [((t <any_Cx_th_t_p>) | (<any_Cx_th_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_zh_p_t_th> zh)] | [(zh <any_Cx_zh_p_t_th>)]) (th | t | d | s | ((<any_Cx_zh_p_t_th> zh) | (zh <any_Cx_zh_p_t_th>)))) ((([(<any_Vx_zh_zh_ao_noSlide> zh)] | [(zh <any_Vx_zh_zh_ao_noSlide>)]) ([(<any_Cx_zh_zh_t_th> zh)] | [(zh <any_Cx_zh_zh_t_th>)])) (ao | ((<any_Vx_zh_zh_ao_noSlide> zh) | (zh <any_Vx_zh_zh_ao_noSlide>)))) (([(<any_Cx_zh_zh_t> zh)] | [(zh <any_Cx_zh_zh_t>)]) (t | ((<any_Cx_zh_zh_t> zh) | (zh <any_Cx_zh_zh_t>)))) (([(<any_vowel_noSlide> k)] | [(k <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_k> k)] | [(k <any_Cx_zh_t_k>)]) sil))
Running scan for frate = 72
Considering guard jh with value 1 for th ...
Considering guard zh with value 1 for th ...
candidateGuards = map[jh:true zh:true]
Picking guard, jh

Considering guard zh with value 2 for ao ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for t ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 72 public <thought> = (((sil [((s <any_Cx_th_s_p>) | (<any_Cx_th_s_p> s))] [((s <any_vowel_noSlide>) | (<any_vowel_noSlide> s))]) | (sil p (sil [((s <any_Cx_th_s_p>) | (<any_Cx_th_s_p> s))] [((s <any_vowel_noSlide>) | (<any_vowel_noSlide> s))]))) (([(<any_Cx_jh_p_s_th> jh)] | [(jh <any_Cx_jh_p_s_th>)]) (th | t | d | s | ((<any_Cx_jh_p_s_th> jh) | (jh <any_Cx_jh_p_s_th>)))) ((([(<any_Vx_zh_jh_ao_noSlide> zh)] | [(zh <any_Vx_zh_jh_ao_noSlide>)]) ([(<any_Cx_zh_jh_t_th> zh)] | [(zh <any_Cx_zh_jh_t_th>)])) (ao | ((<any_Vx_zh_jh_ao_noSlide> zh) | (zh <any_Vx_zh_jh_ao_noSlide>)))) (([(<any_Cx_zh_zh_t> zh)] | [(zh <any_Cx_zh_zh_t>)]) (t | ((<any_Cx_zh_zh_t> zh) | (zh <any_Cx_zh_zh_t>)))) (([(<any_vowel_noSlide> ch)] | [(ch <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_ch> ch)] | [(ch <any_Cx_zh_t_ch>)]) sil))

results =
{72 [{sil 0 4} {th 5 15} {ao 16 30} {t 31 51} {sil 52 68}]}
{80 [{sil 0 4} {th 5 17} {ao 18 34} {t 35 56} {sil 57 73}]}
{91 [{sil 0 4} {th 5 19} {ao 20 46} {t 47 64} {sil 65 105}]}
{105 [{sil 0 4} {th 5 23} {ao 24 54} {t 55 74} {sil 75 122}]}
{125 [{sil 0 4} {th 5 26} {ao 27 62} {t 63 86} {sil 87 143}]}

normalised results =
{72 [{sil 0 4} {th 7 21} {ao 22 42} {t 43 71} {sil 72 94}]}
{80 [{sil 0 4} {th 6 21} {ao 23 43} {t 44 70} {sil 71 91}]}
{91 [{sil 0 4} {th 5 21} {ao 22 51} {t 52 70} {sil 71 115}]}
{105 [{sil 0 4} {th 5 22} {ao 23 51} {t 52 70} {sil 71 116}]}
{125 [{sil 0 4} {th 4 21} {ao 22 50} {t 50 69} {sil 70 114}]}

ruleAligned = [{{th 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ao 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{t 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {th 7 21} {ao 22 42} {t 43 71} {sil 72 72}]}
{80 [{sil 0 0} {th 6 21} {ao 23 43} {t 44 70} {sil 71 71}]}
{91 [{sil 0 0} {th 5 21} {ao 22 51} {t 52 70} {sil 71 71}]}
{105 [{sil 0 0} {th 5 22} {ao 23 51} {t 52 70} {sil 71 71}]}
{125 [{sil 0 0} {th 4 21} {ao 22 50} {t 50 69} {sil 70 70}]}

timeAligned = [{{th 5 21} [{2 1} {3 1} {4 1} {1 1} {0 1}]} {{ao 22 50} [{0 2} {2 2} {4 2} {1 2} {3 2}]} {{t 50 70} [{0 3} {1 3} {4 3} {2 3} {3 3}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 21
i, iTime, newITime, timeStartFrom = 2 1 2 42
combinedVerdict    = [{th 0} {ao 0} {t 0}]
ruleAlignedVerdict = [{th 0} {ao 0} {t 0}]

score->
+2 for th
+2 for ao
+2 for t
score<-: 11
testPronounce th good ao good t good
publish->
phonsToAlphas = [{[th] th} {[ao] ou} {[t] ght}]
getVerdict<-:new {th [th] 0}
getVerdict<-:new {ou [ao] 0}
getVerdict<-:new {ght [t] 0}
lettersVerdicts = [{th [th] 0} {ou [ao] 0} {ght [t] 0}]
publish<-
{
  "word": "thought",
  "results": [
    {
      "letters": "th",
      "phonemes": "θ",
      "verdict": "good"
    },
    {
      "letters": "ou",
      "phonemes": "ɔ",
      "verdict": "good"
    },
    {
      "letters": "ght",
      "phonemes": "t",
      "verdict": "good"
    }
  ],
  "err": null
}
