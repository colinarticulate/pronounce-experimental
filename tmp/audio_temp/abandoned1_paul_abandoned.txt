Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_446f008e-8d1c-4e84-9604-2048a3229bac audiofile /Users/test/go/src/Phonemes/audio_clips/abandoned1_paul.wav word abandoned dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  1.514312



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.31999999999999995 1.02 1.3399999999999999

 start3, duration3, end3 =  0.31999999999999995 0.52 0.84

 Initial start, duration, end =  0.21999999999999995 1.1199999999999999 1.3399999999999999

 Cut at: start, duration =  0.21999999999999995 1.2743120000000001     guard_end =  1.494312 

Running scan for frate = 125
Considering guard zh with value 1 for ax ...
Considering guard jh with value 1 for ax ...
Considering guard sh with value 1 for ax ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, sh

Running scan for frate = 125
Considering guard zh with value 2 for b ...
Considering guard jh with value 2 for b ...
Considering guard sh with value 2 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for ae ...
Considering guard jh with value 2 for ae ...
Considering guard sh with value 2 for ae ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, zh

Considering guard sh with value 1 for ax ...
Considering guard jh with value 1 for ax ...
Considering guard zh with value 1 for ax ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, sh

Considering guard sh with value 2 for b ...
Considering guard jh with value 2 for b ...
Considering guard zh with value 2 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, sh

Considering guard jh with value 2 for ae ...
Considering guard sh with value 2 for ae ...
Considering guard zh with value 2 for ae ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, zh

Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for axn ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 125 public <abandoned> = (((sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_ax_b> sh)] | [(sh <any_Cx_sh_p_z_ax_b>)]) (ax | ((<any_Cx_sh_p_z_ax_b> sh) | (sh <any_Cx_sh_p_z_ax_b>)))) (([(<any_Cx_sh_sh_b_ax> sh)] | [(sh <any_Cx_sh_sh_b_ax>)]) (b | ((<any_Cx_sh_sh_b> sh) | (sh <any_Cx_sh_sh_b>)))) ((([(<any_Vx_zh_sh_ae_noSlide> zh)] | [(zh <any_Vx_zh_sh_ae_noSlide>)]) ([(<any_Cx_zh_sh_n_b> zh)] | [(zh <any_Cx_zh_sh_n_b>)])) (ae | ((<any_Vx_zh_sh_ae_noSlide> zh) | (zh <any_Vx_zh_sh_ae_noSlide>)))) (([(<any_Cx_sh_zh_n_d> sh)] | [(sh <any_Cx_sh_zh_n_d>)]) (n | ((<any_Cx_sh_zh_n_d> sh) | (sh <any_Cx_sh_zh_n_d>)))) (([(<any_Cx_sh_sh_d_axn_n> sh)] | [(sh <any_Cx_sh_sh_d_axn_n>)]) (d | ((<any_Cx_sh_sh_d_axn_n> sh) | (sh <any_Cx_sh_sh_d_axn_n>)))) (([(<any_Cx_sh_sh_axn_d> sh)] | [(sh <any_Cx_sh_sh_axn_d>)]) (axn | ((<any_Cx_sh_sh_axn_d_d> sh) | (sh <any_Cx_sh_sh_axn_d_d>)))) (([(<any_Cx_sh_sh_d_axn> sh)] | [(sh <any_Cx_sh_sh_d_axn>)]) (d | ((<any_Cx_sh_sh_d_axn> sh) | (sh <any_Cx_sh_sh_d_axn>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_thr> thr)] | [(thr <any_Cx_sh_d_thr>)]) sil))
Considering guard sh with value 6 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 105
Considering guard zh with value 1 for ax ...
Considering guard jh with value 1 for ax ...
Considering guard sh with value 1 for ax ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, zh

frate, target rule = 125 public <abandoned> = (((sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_ax_b> sh)] | [(sh <any_Cx_sh_p_z_ax_b>)]) (ax | ((<any_Cx_sh_p_z_ax_b> sh) | (sh <any_Cx_sh_p_z_ax_b>)))) (([(<any_Cx_zh_sh_b_ax> zh)] | [(zh <any_Cx_zh_sh_b_ax>)]) (b | ((<any_Cx_zh_sh_b> zh) | (zh <any_Cx_zh_sh_b>)))) ((([(<any_Vx_zh_zh_ae_noSlide> zh)] | [(zh <any_Vx_zh_zh_ae_noSlide>)]) ([(<any_Cx_zh_zh_n_b> zh)] | [(zh <any_Cx_zh_zh_n_b>)])) (ae | ((<any_Vx_zh_zh_ae_noSlide> zh) | (zh <any_Vx_zh_zh_ae_noSlide>)))) (([(<any_Cx_sh_zh_n_d> sh)] | [(sh <any_Cx_sh_zh_n_d>)]) (n | ((<any_Cx_sh_zh_n_d> sh) | (sh <any_Cx_sh_zh_n_d>)))) (([(<any_Cx_sh_sh_d_ax_n> sh)] | [(sh <any_Cx_sh_sh_d_ax_n>)]) (d | ((<any_Cx_sh_sh_d_ax_n> sh) | (sh <any_Cx_sh_sh_d_ax_n>)))) (([(<any_Cx_sh_sh_ax_n_d> sh)] | [(sh <any_Cx_sh_sh_ax_n_d>)]) (ax | ((<any_Cx_sh_sh_ax_n_d> sh) | (sh <any_Cx_sh_sh_ax_n_d>)))) (([(<any_Cx_sh_sh_n_ax> sh)] | [(sh <any_Cx_sh_sh_n_ax>)]) (n | ((<any_Cx_sh_sh_n_d_ax> sh) | (sh <any_Cx_sh_sh_n_d_ax>)))) (([(<any_Cx_sh_sh_d_n> sh)] | [(sh <any_Cx_sh_sh_d_n>)]) (d | ((<any_Cx_sh_sh_d_n> sh) | (sh <any_Cx_sh_sh_d_n>)))) (([(<any_vowel_noSlide> dh)] | [(dh <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_dh> dh)] | [(dh <any_Cx_sh_d_dh>)]) sil))
Considering guard zh with value 2 for b ...
Considering guard sh with value 2 for b ...
Considering guard jh with value 2 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, jh

Considering guard zh with value 2 for ae ...
Considering guard sh with value 2 for ae ...
Considering guard jh with value 2 for ae ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, sh

Running scan for frate = 105
Considering guard zh with value 1 for ax ...
Considering guard sh with value 1 for ax ...
Considering guard jh with value 1 for ax ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, zh

Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for b ...
Considering guard zh with value 2 for b ...
Considering guard jh with value 2 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, zh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard jh with value 2 for ae ...
Considering guard sh with value 2 for ae ...
Considering guard zh with value 2 for ae ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, jh

Considering guard sh with value 6 for axn ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 105 public <abandoned> = (((sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_ax_b> zh)] | [(zh <any_Cx_zh_p_z_ax_b>)]) (ax | ((<any_Cx_zh_p_z_ax_b> zh) | (zh <any_Cx_zh_p_z_ax_b>)))) (([(<any_Cx_jh_zh_b_ax> jh)] | [(jh <any_Cx_jh_zh_b_ax>)]) (b | ((<any_Cx_jh_zh_b> jh) | (jh <any_Cx_jh_zh_b>)))) ((([(<any_Vx_sh_jh_ae_noSlide> sh)] | [(sh <any_Vx_sh_jh_ae_noSlide>)]) ([(<any_Cx_sh_jh_n_b> sh)] | [(sh <any_Cx_sh_jh_n_b>)])) (ae | ((<any_Vx_sh_jh_ae_noSlide> sh) | (sh <any_Vx_sh_jh_ae_noSlide>)))) (([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)]) (n | ((<any_Cx_sh_sh_n_d> sh) | (sh <any_Cx_sh_sh_n_d>)))) (([(<any_Cx_sh_sh_d_axn_n> sh)] | [(sh <any_Cx_sh_sh_d_axn_n>)]) (d | ((<any_Cx_sh_sh_d_axn_n> sh) | (sh <any_Cx_sh_sh_d_axn_n>)))) (([(<any_Cx_sh_sh_axn_d> sh)] | [(sh <any_Cx_sh_sh_axn_d>)]) (axn | ((<any_Cx_sh_sh_axn_d_d> sh) | (sh <any_Cx_sh_sh_axn_d_d>)))) (([(<any_Cx_sh_sh_d_axn> sh)] | [(sh <any_Cx_sh_sh_d_axn>)]) (d | ((<any_Cx_sh_sh_d_axn> sh) | (sh <any_Cx_sh_sh_d_axn>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_b> b)] | [(b <any_Cx_sh_d_b>)]) sil))
Considering guard sh with value 6 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 91
Considering guard jh with value 1 for ax ...
Considering guard zh with value 1 for ax ...
Considering guard sh with value 1 for ax ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, sh

frate, target rule = 105 public <abandoned> = (((sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_ax_b> zh)] | [(zh <any_Cx_zh_p_z_ax_b>)]) (ax | ((<any_Cx_zh_p_z_ax_b> zh) | (zh <any_Cx_zh_p_z_ax_b>)))) (([(<any_Cx_zh_zh_b_ax> zh)] | [(zh <any_Cx_zh_zh_b_ax>)]) (b | ((<any_Cx_zh_zh_b> zh) | (zh <any_Cx_zh_zh_b>)))) ((([(<any_Vx_jh_zh_ae_noSlide> jh)] | [(jh <any_Vx_jh_zh_ae_noSlide>)]) ([(<any_Cx_jh_zh_n_b> jh)] | [(jh <any_Cx_jh_zh_n_b>)])) (ae | ((<any_Vx_jh_zh_ae_noSlide> jh) | (jh <any_Vx_jh_zh_ae_noSlide>)))) (([(<any_Cx_sh_jh_n_d> sh)] | [(sh <any_Cx_sh_jh_n_d>)]) (n | ((<any_Cx_sh_jh_n_d> sh) | (sh <any_Cx_sh_jh_n_d>)))) (([(<any_Cx_sh_sh_d_ax_n> sh)] | [(sh <any_Cx_sh_sh_d_ax_n>)]) (d | ((<any_Cx_sh_sh_d_ax_n> sh) | (sh <any_Cx_sh_sh_d_ax_n>)))) (([(<any_Cx_sh_sh_ax_n_d> sh)] | [(sh <any_Cx_sh_sh_ax_n_d>)]) (ax | ((<any_Cx_sh_sh_ax_n_d> sh) | (sh <any_Cx_sh_sh_ax_n_d>)))) (([(<any_Cx_sh_sh_n_ax> sh)] | [(sh <any_Cx_sh_sh_n_ax>)]) (n | ((<any_Cx_sh_sh_n_d_ax> sh) | (sh <any_Cx_sh_sh_n_d_ax>)))) (([(<any_Cx_sh_sh_d_n> sh)] | [(sh <any_Cx_sh_sh_d_n>)]) (d | ((<any_Cx_sh_sh_d_n> sh) | (sh <any_Cx_sh_sh_d_n>)))) (([(<any_vowel_noSlide> dh)] | [(dh <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_dh> dh)] | [(dh <any_Cx_sh_d_dh>)]) sil))
Considering guard sh with value 2 for b ...
Considering guard zh with value 2 for b ...
Considering guard jh with value 2 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, sh

Running scan for frate = 91
Considering guard zh with value 1 for ax ...
Considering guard jh with value 1 for ax ...
Considering guard sh with value 1 for ax ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, zh

Considering guard sh with value 2 for ae ...
Considering guard jh with value 2 for ae ...
Considering guard zh with value 2 for ae ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, zh

Considering guard sh with value 2 for b ...
Considering guard jh with value 2 for b ...
Considering guard zh with value 2 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, sh

Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 2 for ae ...
Considering guard jh with value 2 for ae ...
Considering guard sh with value 2 for ae ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, sh

Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for axn ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 91 public <abandoned> = (((sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_ax_b> zh)] | [(zh <any_Cx_zh_p_z_ax_b>)]) (ax | ((<any_Cx_zh_p_z_ax_b> zh) | (zh <any_Cx_zh_p_z_ax_b>)))) (([(<any_Cx_sh_zh_b_ax> sh)] | [(sh <any_Cx_sh_zh_b_ax>)]) (b | ((<any_Cx_sh_zh_b> sh) | (sh <any_Cx_sh_zh_b>)))) ((([(<any_Vx_sh_sh_ae_noSlide> sh)] | [(sh <any_Vx_sh_sh_ae_noSlide>)]) ([(<any_Cx_sh_sh_n_b> sh)] | [(sh <any_Cx_sh_sh_n_b>)])) (ae | ((<any_Vx_sh_sh_ae_noSlide> sh) | (sh <any_Vx_sh_sh_ae_noSlide>)))) (([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)]) (n | ((<any_Cx_sh_sh_n_d> sh) | (sh <any_Cx_sh_sh_n_d>)))) (([(<any_Cx_sh_sh_d_ax_n> sh)] | [(sh <any_Cx_sh_sh_d_ax_n>)]) (d | ((<any_Cx_sh_sh_d_ax_n> sh) | (sh <any_Cx_sh_sh_d_ax_n>)))) (([(<any_Cx_sh_sh_ax_n_d> sh)] | [(sh <any_Cx_sh_sh_ax_n_d>)]) (ax | ((<any_Cx_sh_sh_ax_n_d> sh) | (sh <any_Cx_sh_sh_ax_n_d>)))) (([(<any_Cx_sh_sh_n_ax> sh)] | [(sh <any_Cx_sh_sh_n_ax>)]) (n | ((<any_Cx_sh_sh_n_d_ax> sh) | (sh <any_Cx_sh_sh_n_d_ax>)))) (([(<any_Cx_sh_sh_d_n> sh)] | [(sh <any_Cx_sh_sh_d_n>)]) (d | ((<any_Cx_sh_sh_d_n> sh) | (sh <any_Cx_sh_sh_d_n>)))) (([(<any_vowel_noSlide> dh)] | [(dh <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_dh> dh)] | [(dh <any_Cx_sh_d_dh>)]) sil))
frate, target rule = 91 public <abandoned> = (((sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_ax_b> sh)] | [(sh <any_Cx_sh_p_z_ax_b>)]) (ax | ((<any_Cx_sh_p_z_ax_b> sh) | (sh <any_Cx_sh_p_z_ax_b>)))) (([(<any_Cx_sh_sh_b_ax> sh)] | [(sh <any_Cx_sh_sh_b_ax>)]) (b | ((<any_Cx_sh_sh_b> sh) | (sh <any_Cx_sh_sh_b>)))) ((([(<any_Vx_zh_sh_ae_noSlide> zh)] | [(zh <any_Vx_zh_sh_ae_noSlide>)]) ([(<any_Cx_zh_sh_n_b> zh)] | [(zh <any_Cx_zh_sh_n_b>)])) (ae | ((<any_Vx_zh_sh_ae_noSlide> zh) | (zh <any_Vx_zh_sh_ae_noSlide>)))) (([(<any_Cx_sh_zh_n_d> sh)] | [(sh <any_Cx_sh_zh_n_d>)]) (n | ((<any_Cx_sh_zh_n_d> sh) | (sh <any_Cx_sh_zh_n_d>)))) (([(<any_Cx_sh_sh_d_axn_n> sh)] | [(sh <any_Cx_sh_sh_d_axn_n>)]) (d | ((<any_Cx_sh_sh_d_axn_n> sh) | (sh <any_Cx_sh_sh_d_axn_n>)))) (([(<any_Cx_sh_sh_axn_d> sh)] | [(sh <any_Cx_sh_sh_axn_d>)]) (axn | ((<any_Cx_sh_sh_axn_d_d> sh) | (sh <any_Cx_sh_sh_axn_d_d>)))) (([(<any_Cx_sh_sh_d_axn> sh)] | [(sh <any_Cx_sh_sh_d_axn>)]) (d | ((<any_Cx_sh_sh_d_axn> sh) | (sh <any_Cx_sh_sh_d_axn>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_v> v)] | [(v <any_Cx_sh_d_v>)]) sil))
Running scan for frate = 80
Running scan for frate = 80
Considering guard zh with value 1 for ax ...
Considering guard sh with value 1 for ax ...
Considering guard jh with value 1 for ax ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, zh

Considering guard zh with value 1 for ax ...
Considering guard sh with value 1 for ax ...
Considering guard jh with value 1 for ax ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, jh

Considering guard zh with value 2 for b ...
Considering guard jh with value 2 for b ...
Considering guard sh with value 2 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, sh

Considering guard sh with value 2 for b ...
Considering guard zh with value 2 for b ...
Considering guard jh with value 2 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, sh

Considering guard jh with value 2 for ae ...
Considering guard sh with value 2 for ae ...
Considering guard zh with value 2 for ae ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, jh

Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 80 public <abandoned> = (((sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_jh_p_z_ax_b> jh)] | [(jh <any_Cx_jh_p_z_ax_b>)]) (ax | ((<any_Cx_jh_p_z_ax_b> jh) | (jh <any_Cx_jh_p_z_ax_b>)))) (([(<any_Cx_sh_jh_b_ax> sh)] | [(sh <any_Cx_sh_jh_b_ax>)]) (b | ((<any_Cx_sh_jh_b> sh) | (sh <any_Cx_sh_jh_b>)))) ((([(<any_Vx_jh_sh_ae_noSlide> jh)] | [(jh <any_Vx_jh_sh_ae_noSlide>)]) ([(<any_Cx_jh_sh_n_b> jh)] | [(jh <any_Cx_jh_sh_n_b>)])) (ae | ((<any_Vx_jh_sh_ae_noSlide> jh) | (jh <any_Vx_jh_sh_ae_noSlide>)))) (([(<any_Cx_sh_jh_n_d> sh)] | [(sh <any_Cx_sh_jh_n_d>)]) (n | ((<any_Cx_sh_jh_n_d> sh) | (sh <any_Cx_sh_jh_n_d>)))) (([(<any_Cx_sh_sh_d_ax_n> sh)] | [(sh <any_Cx_sh_sh_d_ax_n>)]) (d | ((<any_Cx_sh_sh_d_ax_n> sh) | (sh <any_Cx_sh_sh_d_ax_n>)))) (([(<any_Cx_sh_sh_ax_n_d> sh)] | [(sh <any_Cx_sh_sh_ax_n_d>)]) (ax | ((<any_Cx_sh_sh_ax_n_d> sh) | (sh <any_Cx_sh_sh_ax_n_d>)))) (([(<any_Cx_sh_sh_n_ax> sh)] | [(sh <any_Cx_sh_sh_n_ax>)]) (n | ((<any_Cx_sh_sh_n_d_ax> sh) | (sh <any_Cx_sh_sh_n_d_ax>)))) (([(<any_Cx_sh_sh_d_n> sh)] | [(sh <any_Cx_sh_sh_d_n>)]) (d | ((<any_Cx_sh_sh_d_n> sh) | (sh <any_Cx_sh_sh_d_n>)))) (([(<any_vowel_noSlide> dh)] | [(dh <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_dh> dh)] | [(dh <any_Cx_sh_d_dh>)]) sil))
Running scan for frate = 72
Considering guard sh with value 1 for ax ...
Considering guard jh with value 1 for ax ...
Considering guard zh with value 1 for ax ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, sh

Considering guard sh with value 2 for b ...
Considering guard zh with value 2 for b ...
Considering guard jh with value 2 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, zh

Considering guard sh with value 2 for ae ...
Considering guard zh with value 2 for ae ...
Considering guard jh with value 2 for ae ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, sh

Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for ax ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 72 public <abandoned> = (((sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_ax_b> sh)] | [(sh <any_Cx_sh_p_z_ax_b>)]) (ax | ((<any_Cx_sh_p_z_ax_b> sh) | (sh <any_Cx_sh_p_z_ax_b>)))) (([(<any_Cx_zh_sh_b_ax> zh)] | [(zh <any_Cx_zh_sh_b_ax>)]) (b | ((<any_Cx_zh_sh_b> zh) | (zh <any_Cx_zh_sh_b>)))) ((([(<any_Vx_sh_zh_ae_noSlide> sh)] | [(sh <any_Vx_sh_zh_ae_noSlide>)]) ([(<any_Cx_sh_zh_n_b> sh)] | [(sh <any_Cx_sh_zh_n_b>)])) (ae | ((<any_Vx_sh_zh_ae_noSlide> sh) | (sh <any_Vx_sh_zh_ae_noSlide>)))) (([(<any_Cx_sh_sh_n_d> sh)] | [(sh <any_Cx_sh_sh_n_d>)]) (n | ((<any_Cx_sh_sh_n_d> sh) | (sh <any_Cx_sh_sh_n_d>)))) (([(<any_Cx_sh_sh_d_ax_n> sh)] | [(sh <any_Cx_sh_sh_d_ax_n>)]) (d | ((<any_Cx_sh_sh_d_ax_n> sh) | (sh <any_Cx_sh_sh_d_ax_n>)))) (([(<any_Cx_sh_sh_ax_n_d> sh)] | [(sh <any_Cx_sh_sh_ax_n_d>)]) (ax | ((<any_Cx_sh_sh_ax_n_d> sh) | (sh <any_Cx_sh_sh_ax_n_d>)))) (([(<any_Cx_sh_sh_n_ax> sh)] | [(sh <any_Cx_sh_sh_n_ax>)]) (n | ((<any_Cx_sh_sh_n_d_ax> sh) | (sh <any_Cx_sh_sh_n_d_ax>)))) (([(<any_Cx_sh_sh_d_n> sh)] | [(sh <any_Cx_sh_sh_d_n>)]) (d | ((<any_Cx_sh_sh_d_n> sh) | (sh <any_Cx_sh_sh_d_n>)))) (([(<any_vowel_noSlide> b)] | [(b <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_b> b)] | [(b <any_Cx_sh_d_b>)]) sil))
Considering guard zh with value 2 for ae ...
Considering guard jh with value 2 for ae ...
Considering guard sh with value 2 for ae ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, zh

Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for axn ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 80 public <abandoned> = (((sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_ax_b> zh)] | [(zh <any_Cx_zh_p_z_ax_b>)]) (ax | ((<any_Cx_zh_p_z_ax_b> zh) | (zh <any_Cx_zh_p_z_ax_b>)))) (([(<any_Cx_sh_zh_b_ax> sh)] | [(sh <any_Cx_sh_zh_b_ax>)]) (b | ((<any_Cx_sh_zh_b> sh) | (sh <any_Cx_sh_zh_b>)))) ((([(<any_Vx_zh_sh_ae_noSlide> zh)] | [(zh <any_Vx_zh_sh_ae_noSlide>)]) ([(<any_Cx_zh_sh_n_b> zh)] | [(zh <any_Cx_zh_sh_n_b>)])) (ae | ((<any_Vx_zh_sh_ae_noSlide> zh) | (zh <any_Vx_zh_sh_ae_noSlide>)))) (([(<any_Cx_sh_zh_n_d> sh)] | [(sh <any_Cx_sh_zh_n_d>)]) (n | ((<any_Cx_sh_zh_n_d> sh) | (sh <any_Cx_sh_zh_n_d>)))) (([(<any_Cx_sh_sh_d_axn_n> sh)] | [(sh <any_Cx_sh_sh_d_axn_n>)]) (d | ((<any_Cx_sh_sh_d_axn_n> sh) | (sh <any_Cx_sh_sh_d_axn_n>)))) (([(<any_Cx_sh_sh_axn_d> sh)] | [(sh <any_Cx_sh_sh_axn_d>)]) (axn | ((<any_Cx_sh_sh_axn_d_d> sh) | (sh <any_Cx_sh_sh_axn_d_d>)))) (([(<any_Cx_sh_sh_d_axn> sh)] | [(sh <any_Cx_sh_sh_d_axn>)]) (d | ((<any_Cx_sh_sh_d_axn> sh) | (sh <any_Cx_sh_sh_d_axn>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_thr> thr)] | [(thr <any_Cx_sh_d_thr>)]) sil))
Running scan for frate = 72
Considering guard zh with value 1 for ax ...
Considering guard sh with value 1 for ax ...
Considering guard jh with value 1 for ax ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for b ...
Considering guard jh with value 2 for b ...
Considering guard sh with value 2 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, sh

Considering guard zh with value 2 for ae ...
Considering guard sh with value 2 for ae ...
Considering guard jh with value 2 for ae ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, zh

Considering guard sh with value 3 for n ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 6 for axn ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 3 for d ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 72 public <abandoned> = (((sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_ax_z_p>) | (<any_Cx_ax_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_ax_b> zh)] | [(zh <any_Cx_zh_p_z_ax_b>)]) (ax | ((<any_Cx_zh_p_z_ax_b> zh) | (zh <any_Cx_zh_p_z_ax_b>)))) (([(<any_Cx_sh_zh_b_ax> sh)] | [(sh <any_Cx_sh_zh_b_ax>)]) (b | ((<any_Cx_sh_zh_b> sh) | (sh <any_Cx_sh_zh_b>)))) ((([(<any_Vx_zh_sh_ae_noSlide> zh)] | [(zh <any_Vx_zh_sh_ae_noSlide>)]) ([(<any_Cx_zh_sh_n_b> zh)] | [(zh <any_Cx_zh_sh_n_b>)])) (ae | ((<any_Vx_zh_sh_ae_noSlide> zh) | (zh <any_Vx_zh_sh_ae_noSlide>)))) (([(<any_Cx_sh_zh_n_d> sh)] | [(sh <any_Cx_sh_zh_n_d>)]) (n | ((<any_Cx_sh_zh_n_d> sh) | (sh <any_Cx_sh_zh_n_d>)))) (([(<any_Cx_sh_sh_d_axn_n> sh)] | [(sh <any_Cx_sh_sh_d_axn_n>)]) (d | ((<any_Cx_sh_sh_d_axn_n> sh) | (sh <any_Cx_sh_sh_d_axn_n>)))) (([(<any_Cx_sh_sh_axn_d> sh)] | [(sh <any_Cx_sh_sh_axn_d>)]) (axn | ((<any_Cx_sh_sh_axn_d_d> sh) | (sh <any_Cx_sh_sh_axn_d_d>)))) (([(<any_Cx_sh_sh_d_axn> sh)] | [(sh <any_Cx_sh_sh_d_axn>)]) (d | ((<any_Cx_sh_sh_d_axn> sh) | (sh <any_Cx_sh_sh_d_axn>)))) (([(<any_vowel_noSlide> v)] | [(v <any_vowel_noSlide>)]) ([(<any_Cx_sh_d_v> v)] | [(v <any_Cx_sh_d_v>)]) sil))

results =
{72 [{sil 0 12} {ax 13 19} {b 20 24} {ae 25 36} {n 37 44} {d 45 47} {ax 48 52} {n 53 63} {d 64 73} {sil 74 90}]}
{80 [{sil 0 14} {ax 15 22} {b 23 27} {ae 28 40} {n 41 49} {d 50 53} {ax 54 58} {n 59 70} {d 71 80} {sil 81 100}]}
{91 [{sil 0 16} {ax 17 27} {b 28 31} {ae 32 46} {n 47 56} {d 57 60} {ax 61 67} {n 68 80} {d 81 92} {sil 93 114}]}
{105 [{sil 0 19} {ax 20 32} {b 33 36} {ae 37 53} {n 54 65} {d 66 69} {ax 70 77} {n 78 93} {d 94 105} {sil 106 133}]}
{125 [{sil 0 21} {ax 22 37} {b 38 41} {ae 42 61} {n 62 75} {d 76 81} {ax 82 92} {n 93 109} {d 110 124} {sil 125 156}]}

normalised results =
{72 [{sil 0 12} {ax 18 26} {b 28 33} {ae 35 50} {n 51 61} {d 63 63} {ax 67 72} {n 74 88} {d 89 101} {sil 103 125}]}
{80 [{sil 0 14} {ax 19 28} {b 29 34} {ae 35 50} {n 51 61} {d 63 66} {ax 68 73} {n 74 88} {d 89 100} {sil 101 125}]}
{91 [{sil 0 16} {ax 19 30} {b 31 34} {ae 35 51} {n 52 62} {d 63 66} {ax 67 74} {n 75 88} {d 89 101} {sil 102 125}]}
{105 [{sil 0 19} {ax 19 30} {b 31 34} {ae 35 50} {n 51 62} {d 63 66} {ax 67 73} {n 74 89} {d 90 100} {sil 101 127}]}
{125 [{sil 0 21} {ax 18 30} {b 30 33} {ae 34 49} {n 50 60} {d 61 65} {ax 66 74} {n 74 87} {d 88 99} {sil 100 125}]}

ruleAligned = [{{ax 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{b 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{ae 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{n 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{d 0} [{1 5} {2 5} {3 5} {4 5}]} {{ax 0} [{0 6} {1 6} {2 6} {3 6} {4 6}]} {{n 0} [{0 7} {1 7} {2 7} {3 7} {4 7}]} {{d 0} [{0 8} {1 8} {2 8} {3 8} {4 8}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {ax 18 26} {b 28 33} {ae 35 50} {n 51 61} {d 63 63} {ax 67 72} {n 74 88} {d 89 101} {sil 103 103}]}
{80 [{sil 0 0} {ax 19 28} {b 29 34} {ae 35 50} {n 51 61} {d 63 66} {ax 68 73} {n 74 88} {d 89 100} {sil 101 101}]}
{91 [{sil 0 0} {ax 19 30} {b 31 34} {ae 35 51} {n 52 62} {d 63 66} {ax 67 74} {n 75 88} {d 89 101} {sil 102 102}]}
{105 [{sil 0 0} {ax 19 30} {b 31 34} {ae 35 50} {n 51 62} {d 63 66} {ax 67 73} {n 74 89} {d 90 100} {sil 101 101}]}
{125 [{sil 0 0} {ax 18 30} {b 30 33} {ae 34 49} {n 50 60} {d 61 65} {ax 66 74} {n 74 87} {d 88 99} {sil 100 100}]}

timeAligned = [{{ax 19 30} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{b 30 34} [{0 2} {1 2} {4 2} {2 2} {3 2}]} {{ae 35 50} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{n 51 61} [{0 4} {1 4} {3 4} {4 4} {2 4}]} {{d 63 66} [{1 5} {2 5} {3 5} {4 5}]} {{ax 67 73} [{0 6} {2 6} {3 6} {4 6} {1 6}]} {{n 74 88} [{0 7} {1 7} {3 7} {4 7} {2 7}]} {{d 89 100} [{0 8} {1 8} {2 8} {4 8} {3 8}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 26
i, iTime, newITime, timeStartFrom = 2 1 2 33
i, iTime, newITime, timeStartFrom = 3 2 3 49
i, iTime, newITime, timeStartFrom = 4 3 4 60
i, iTime, newITime, timeStartFrom = 5 4 5 65
i, iTime, newITime, timeStartFrom = 6 5 6 72
i, iTime, newITime, timeStartFrom = 7 6 7 87
combinedVerdict    = [{ax 0} {b 0} {ae 0} {n 0} {d 0} {ax 0} {n 0} {d 0}]
ruleAlignedVerdict = [{ax 0} {b 0} {ae 0} {n 0} {d 0} {ax 0} {n 0} {d 0}]

score->
+2 for ax
+2 for b
+2 for ae
+2 for n
+2 for d
+2 for ax
+2 for n
+2 for d
score<-: 21

results =
{72 [{sil 0 12} {ax 13 19} {b 20 24} {ae 25 36} {n 37 44} {d 45 47} {axn 48 63} {d 64 73} {sil 74 90}]}
{80 [{sil 0 14} {ax 15 22} {b 23 27} {ae 28 40} {n 41 49} {d 50 52} {axn 53 70} {d 71 80} {sil 81 100}]}
{91 [{sil 0 16} {ax 17 27} {b 28 31} {ae 32 46} {n 47 56} {d 57 60} {axn 61 79} {d 80 92} {sil 93 114}]}
{105 [{sil 0 19} {ax 20 32} {b 33 36} {ae 37 53} {n 54 65} {d 66 69} {axn 70 92} {d 93 105} {sil 106 133}]}
{125 [{sil 0 21} {ax 22 37} {b 38 41} {ae 42 61} {n 62 75} {d 76 80} {axn 81 109} {d 110 124} {sil 125 156}]}

normalised results =
{72 [{sil 0 12} {ax 18 26} {b 28 33} {ae 35 50} {n 51 61} {d 63 63} {axn 67 88} {d 89 101} {sil 103 125}]}
{80 [{sil 0 14} {ax 19 28} {b 29 34} {ae 35 50} {n 51 61} {d 63 63} {axn 66 88} {d 89 100} {sil 101 125}]}
{91 [{sil 0 16} {ax 19 30} {b 31 34} {ae 35 51} {n 52 62} {d 63 66} {axn 67 87} {d 88 101} {sil 102 125}]}
{105 [{sil 0 19} {ax 19 30} {b 31 34} {ae 35 50} {n 51 62} {d 63 66} {axn 67 88} {d 89 100} {sil 101 127}]}
{125 [{sil 0 21} {ax 18 30} {b 30 33} {ae 34 49} {n 50 60} {d 61 64} {axn 65 87} {d 88 99} {sil 100 125}]}

ruleAligned = [{{ax 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{b 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{ae 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{n 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{d 1} [{2 5} {3 5} {4 5}]} {{axn 0} [{0 6} {1 6} {2 6} {3 6} {4 6}]} {{d 0} [{0 7} {1 7} {2 7} {3 7} {4 7}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {ax 18 26} {b 28 33} {ae 35 50} {n 51 61} {d 63 63} {axn 67 88} {d 89 101} {sil 103 103}]}
{80 [{sil 0 0} {ax 19 28} {b 29 34} {ae 35 50} {n 51 61} {d 63 63} {axn 66 88} {d 89 100} {sil 101 101}]}
{91 [{sil 0 0} {ax 19 30} {b 31 34} {ae 35 51} {n 52 62} {d 63 66} {axn 67 87} {d 88 101} {sil 102 102}]}
{105 [{sil 0 0} {ax 19 30} {b 31 34} {ae 35 50} {n 51 62} {d 63 66} {axn 67 88} {d 89 100} {sil 101 101}]}
{125 [{sil 0 0} {ax 18 30} {b 30 33} {ae 34 49} {n 50 60} {d 61 64} {axn 65 87} {d 88 99} {sil 100 100}]}

timeAligned = [{{ax 19 30} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{b 30 34} [{0 2} {1 2} {4 2} {2 2} {3 2}]} {{ae 35 50} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{n 51 61} [{0 4} {1 4} {3 4} {4 4} {2 4}]} {{d 63 64} [{2 5} {3 5} {4 5}]} {{axn 67 88} [{0 6} {1 6} {2 6} {3 6} {4 6}]} {{d 89 100} [{0 7} {1 7} {2 7} {3 7} {4 7}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 26
i, iTime, newITime, timeStartFrom = 2 1 2 33
i, iTime, newITime, timeStartFrom = 3 2 3 49
i, iTime, newITime, timeStartFrom = 4 3 4 60
i, iTime, newITime, timeStartFrom = 5 4 5 64
i, iTime, newITime, timeStartFrom = 6 5 6 87
combinedVerdict    = [{ax 0} {b 0} {ae 0} {n 0} {d 1} {axn 0} {d 0}]
ruleAlignedVerdict = [{ax 0} {b 0} {ae 0} {n 0} {d 1} {axn 0} {d 0}]

score->
+2 for ax
+2 for b
+2 for ae
+2 for n
+1 for d
+2 for axn
+2 for d
score<-: 18
testPronounce ax good b good ae good n good d good ax good n good d good
publish->
phonsToAlphas = [{[ax] a} {[b] b} {[ae] a} {[n] n} {[d] d} {[ax] o} {[n] ne} {[d] d}]
getVerdict<-:new {a [ax] 0}
getVerdict<-:new {b [b] 0}
getVerdict<-:new {a [ae] 0}
getVerdict<-:new {n [n] 0}
getVerdict<-:new {d [d] 0}
getVerdict<-:new {o [ax] 0}
getVerdict<-:new {ne [n] 0}
getVerdict<-:new {d [d] 0}
lettersVerdicts = [{a [ax] 0} {b [b] 0} {a [ae] 0} {n [n] 0} {d [d] 0} {o [ax] 0} {ne [n] 0} {d [d] 0}]
publish<-
{
  "word": "abandoned",
  "results": [
    {
      "letters": "a",
      "phonemes": "ə",
      "verdict": "good"
    },
    {
      "letters": "b",
      "phonemes": "b",
      "verdict": "good"
    },
    {
      "letters": "a",
      "phonemes": "æ",
      "verdict": "good"
    },
    {
      "letters": "n",
      "phonemes": "n",
      "verdict": "good"
    },
    {
      "letters": "d",
      "phonemes": "d",
      "verdict": "good"
    },
    {
      "letters": "o",
      "phonemes": "ə",
      "verdict": "good"
    },
    {
      "letters": "ne",
      "phonemes": "n",
      "verdict": "good"
    },
    {
      "letters": "d",
      "phonemes": "d",
      "verdict": "good"
    }
  ],
  "err": null
}
