Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_3be02888-d09c-4c74-b407-da2857a7e38d audiofile /Users/test/go/src/Phonemes/audio_clips/yet1_paul.wav word yet dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  2.042937



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.9600000000000001 1.08 2.04

 start3, duration3, end3 =  1.0799999999999998 0.52 1.5999999999999999

 Initial start, duration, end =  0.8600000000000001 1.18 2.04

 Cut at: start, duration =  0.8600000000000001 1.1629369999999997     guard_end =  2.0229369999999998 

Running scan for frate = 125
Considering guard zh with value 1 for y ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for eh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for t ...
Considering guard oy with value 1 for t ...
candidateGuards = map[oy:true zh:true]
Picking guard, zh

frate, target rule = 125 public <yet> = (((sil [((b <any_Vx_y_b_p_noSlide>) | (<any_Vx_y_b_p_noSlide> b))] [((b <any_Cx_y_b_p>) | (<any_Cx_y_b_p> b))]) | (sil p (sil [((b <any_Vx_y_b_p_noSlide>) | (<any_Vx_y_b_p_noSlide> b))] [((b <any_Cx_y_b_p>) | (<any_Cx_y_b_p> b))]))) ((([(<any_Vx_zh_p_b_y_eh_noSlide> zh)] | [(zh <any_Vx_zh_p_b_y_eh_noSlide>)]) ([(<any_Cx_zh_p_b> zh)] | [(zh <any_Cx_zh_p_b>)])) (y | ((<any_Vx_zh_p_b_y_eh_noSlide> zh) | (zh <any_Vx_zh_p_b_y_eh_noSlide>)))) ((([(<any_Vx_zh_zh_eh_y_noSlide> zh)] | [(zh <any_Vx_zh_zh_eh_y_noSlide>)]) ([(<any_Cx_zh_zh_t> zh)] | [(zh <any_Cx_zh_zh_t>)])) (eh | ((<any_Vx_zh_zh_eh_noSlide> zh) | (zh <any_Vx_zh_zh_eh_noSlide>)))) (([(<any_Cx_zh_zh_t> zh)] | [(zh <any_Cx_zh_zh_t>)]) (t | ((<any_Cx_zh_zh_t> zh) | (zh <any_Cx_zh_zh_t>)))) (([(<any_vowel_noSlide> k)] | [(k <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_k> k)] | [(k <any_Cx_zh_t_k>)]) sil))
Running scan for frate = 105
Considering guard zh with value 1 for y ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for eh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard oy with value 1 for t ...
Considering guard zh with value 1 for t ...
candidateGuards = map[oy:true zh:true]
Picking guard, zh

frate, target rule = 105 public <yet> = (((sil [((r <any_Vx_y_r_p_noSlide>) | (<any_Vx_y_r_p_noSlide> r))] [((r <any_Cx_y_r_p>) | (<any_Cx_y_r_p> r))]) | (sil p (sil [((r <any_Vx_y_r_p_noSlide>) | (<any_Vx_y_r_p_noSlide> r))] [((r <any_Cx_y_r_p>) | (<any_Cx_y_r_p> r))]))) ((([(<any_Vx_zh_p_r_y_eh_noSlide> zh)] | [(zh <any_Vx_zh_p_r_y_eh_noSlide>)]) ([(<any_Cx_zh_p_r> zh)] | [(zh <any_Cx_zh_p_r>)])) (y | ((<any_Vx_zh_p_r_y_eh_noSlide> zh) | (zh <any_Vx_zh_p_r_y_eh_noSlide>)))) ((([(<any_Vx_zh_zh_eh_y_noSlide> zh)] | [(zh <any_Vx_zh_zh_eh_y_noSlide>)]) ([(<any_Cx_zh_zh_t> zh)] | [(zh <any_Cx_zh_zh_t>)])) (eh | ((<any_Vx_zh_zh_eh_noSlide> zh) | (zh <any_Vx_zh_zh_eh_noSlide>)))) (([(<any_Cx_zh_zh_t> zh)] | [(zh <any_Cx_zh_zh_t>)]) (t | ((<any_Cx_zh_zh_t> zh) | (zh <any_Cx_zh_zh_t>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_d> d)] | [(d <any_Cx_zh_t_d>)]) sil))
Running scan for frate = 91
Considering guard zh with value 1 for y ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for eh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for t ...
Considering guard oy with value 1 for t ...
candidateGuards = map[oy:true zh:true]
Picking guard, zh

frate, target rule = 91 public <yet> = (((sil [((hh <any_Vx_y_hh_p_noSlide>) | (<any_Vx_y_hh_p_noSlide> hh))] [((hh <any_Cx_y_hh_p>) | (<any_Cx_y_hh_p> hh))]) | (sil p (sil [((hh <any_Vx_y_hh_p_noSlide>) | (<any_Vx_y_hh_p_noSlide> hh))] [((hh <any_Cx_y_hh_p>) | (<any_Cx_y_hh_p> hh))]))) ((([(<any_Vx_zh_p_hh_y_eh_noSlide> zh)] | [(zh <any_Vx_zh_p_hh_y_eh_noSlide>)]) ([(<any_Cx_zh_p_hh> zh)] | [(zh <any_Cx_zh_p_hh>)])) (y | ((<any_Vx_zh_p_hh_y_eh_noSlide> zh) | (zh <any_Vx_zh_p_hh_y_eh_noSlide>)))) ((([(<any_Vx_zh_zh_eh_y_noSlide> zh)] | [(zh <any_Vx_zh_zh_eh_y_noSlide>)]) ([(<any_Cx_zh_zh_t> zh)] | [(zh <any_Cx_zh_zh_t>)])) (eh | ((<any_Vx_zh_zh_eh_noSlide> zh) | (zh <any_Vx_zh_zh_eh_noSlide>)))) (([(<any_Cx_zh_zh_t> zh)] | [(zh <any_Cx_zh_zh_t>)]) (t | ((<any_Cx_zh_zh_t> zh) | (zh <any_Cx_zh_zh_t>)))) (([(<any_vowel_noSlide> k)] | [(k <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_k> k)] | [(k <any_Cx_zh_t_k>)]) sil))
Running scan for frate = 80
Considering guard zh with value 1 for y ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for eh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard oy with value 1 for t ...
Considering guard zh with value 1 for t ...
candidateGuards = map[oy:true zh:true]
Picking guard, zh

frate, target rule = 80 public <yet> = (((sil [((l <any_Vx_y_l_p_noSlide>) | (<any_Vx_y_l_p_noSlide> l))] [((l <any_Cx_y_l_p>) | (<any_Cx_y_l_p> l))]) | (sil p (sil [((l <any_Vx_y_l_p_noSlide>) | (<any_Vx_y_l_p_noSlide> l))] [((l <any_Cx_y_l_p>) | (<any_Cx_y_l_p> l))]))) ((([(<any_Vx_zh_p_l_y_eh_noSlide> zh)] | [(zh <any_Vx_zh_p_l_y_eh_noSlide>)]) ([(<any_Cx_zh_p_l> zh)] | [(zh <any_Cx_zh_p_l>)])) (y | ((<any_Vx_zh_p_l_y_eh_noSlide> zh) | (zh <any_Vx_zh_p_l_y_eh_noSlide>)))) ((([(<any_Vx_zh_zh_eh_y_noSlide> zh)] | [(zh <any_Vx_zh_zh_eh_y_noSlide>)]) ([(<any_Cx_zh_zh_t> zh)] | [(zh <any_Cx_zh_zh_t>)])) (eh | ((<any_Vx_zh_zh_eh_noSlide> zh) | (zh <any_Vx_zh_zh_eh_noSlide>)))) (([(<any_Cx_zh_zh_t> zh)] | [(zh <any_Cx_zh_zh_t>)]) (t | ((<any_Cx_zh_zh_t> zh) | (zh <any_Cx_zh_zh_t>)))) (([(<any_vowel_noSlide> k)] | [(k <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_k> k)] | [(k <any_Cx_zh_t_k>)]) sil))
Running scan for frate = 72
Considering guard zh with value 1 for y ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for eh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for t ...
Considering guard oy with value 1 for t ...
candidateGuards = map[oy:true zh:true]
Picking guard, zh

frate, target rule = 72 public <yet> = (((sil [((r <any_Vx_y_r_p_noSlide>) | (<any_Vx_y_r_p_noSlide> r))] [((r <any_Cx_y_r_p>) | (<any_Cx_y_r_p> r))]) | (sil p (sil [((r <any_Vx_y_r_p_noSlide>) | (<any_Vx_y_r_p_noSlide> r))] [((r <any_Cx_y_r_p>) | (<any_Cx_y_r_p> r))]))) ((([(<any_Vx_zh_p_r_y_eh_noSlide> zh)] | [(zh <any_Vx_zh_p_r_y_eh_noSlide>)]) ([(<any_Cx_zh_p_r> zh)] | [(zh <any_Cx_zh_p_r>)])) (y | ((<any_Vx_zh_p_r_y_eh_noSlide> zh) | (zh <any_Vx_zh_p_r_y_eh_noSlide>)))) ((([(<any_Vx_zh_zh_eh_y_noSlide> zh)] | [(zh <any_Vx_zh_zh_eh_y_noSlide>)]) ([(<any_Cx_zh_zh_t> zh)] | [(zh <any_Cx_zh_zh_t>)])) (eh | ((<any_Vx_zh_zh_eh_noSlide> zh) | (zh <any_Vx_zh_zh_eh_noSlide>)))) (([(<any_Cx_zh_zh_t> zh)] | [(zh <any_Cx_zh_zh_t>)]) (t | ((<any_Cx_zh_zh_t> zh) | (zh <any_Cx_zh_zh_t>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_g> g)] | [(g <any_Cx_zh_t_g>)]) sil))

results =
{72 [{sil 0 20} {y 21 33} {eh 34 49} {t 50 68} {sil 69 82}]}
{80 [{sil 0 23} {y 24 37} {eh 38 54} {t 55 74} {sil 75 91}]}
{91 [{sil 0 26} {y 27 42} {eh 43 66} {t 67 84} {sil 85 104}]}
{105 [{sil 0 29} {y 30 49} {eh 50 77} {t 78 98} {sil 99 121}]}
{125 [{sil 0 33} {y 34 56} {eh 57 90} {t 91 114} {sil 115 142}]}

normalised results =
{72 [{sil 0 20} {y 29 46} {eh 47 68} {t 69 94} {sil 96 114}]}
{80 [{sil 0 23} {y 30 46} {eh 48 68} {t 69 93} {sil 94 114}]}
{91 [{sil 0 26} {y 30 46} {eh 47 73} {t 74 92} {sil 93 114}]}
{105 [{sil 0 29} {y 29 47} {eh 48 73} {t 74 93} {sil 94 115}]}
{125 [{sil 0 33} {y 27 45} {eh 46 72} {t 73 91} {sil 92 114}]}

ruleAligned = [{{y 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{eh 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{t 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {y 29 46} {eh 47 68} {t 69 94} {sil 96 96}]}
{80 [{sil 0 0} {y 30 46} {eh 48 68} {t 69 93} {sil 94 94}]}
{91 [{sil 0 0} {y 30 46} {eh 47 73} {t 74 92} {sil 93 93}]}
{105 [{sil 0 0} {y 29 47} {eh 48 73} {t 74 93} {sil 94 94}]}
{125 [{sil 0 0} {y 27 45} {eh 46 72} {t 73 91} {sil 92 92}]}

timeAligned = [{{y 29 46} [{0 1} {3 1} {4 1} {1 1} {2 1}]} {{eh 47 72} [{0 2} {2 2} {4 2} {1 2} {3 2}]} {{t 73 93} [{0 3} {1 3} {4 3} {2 3} {3 3}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 45
i, iTime, newITime, timeStartFrom = 2 1 2 68
combinedVerdict    = [{y 0} {eh 0} {t 0}]
ruleAlignedVerdict = [{y 0} {eh 0} {t 0}]

score->
+2 for y
+2 for eh
+2 for t
score<-: 11
testPronounce y good eh good t good
publish->
phonsToAlphas = [{[y] y} {[eh] e} {[t] t}]
getVerdict<-:new {y [y] 0}
getVerdict<-:new {e [eh] 0}
getVerdict<-:new {t [t] 0}
lettersVerdicts = [{y [y] 0} {e [eh] 0} {t [t] 0}]
publish<-
{
  "word": "yet",
  "results": [
    {
      "letters": "y",
      "phonemes": "j",
      "verdict": "good"
    },
    {
      "letters": "e",
      "phonemes": "É›",
      "verdict": "good"
    },
    {
      "letters": "t",
      "phonemes": "t",
      "verdict": "good"
    }
  ],
  "err": null
}
