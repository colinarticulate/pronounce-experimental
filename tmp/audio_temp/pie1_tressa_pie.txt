Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_0313a057-2f35-4c62-9eb1-211998b25848 audiofile /Users/test/go/src/Phonemes/audio_clips/pie1_tressa.wav word pie dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  3.199625



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.4 0.74 1.1400000000000001

 start3, duration3, end3 =  0.42000000000000004 0.64 1.06

 Initial start, duration, end =  0.30000000000000004 0.8400000000000001 1.1400000000000001

 Cut at: start, duration =  0.30000000000000004 1.29     guard_end =  1.59 

Running scan for frate = 125
Considering guard jh with value 1 for p ...
Considering guard zh with value 1 for p ...
candidateGuards = map[jh:true zh:true]
Picking guard, jh

Considering guard jh with value 1 for ay ...
Considering guard zh with value 1 for ay ...
candidateGuards = map[jh:true zh:true]
Picking guard, jh

frate, target rule = 125 public <pie> = (((sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil d (sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_jh_d_hh_p> jh)] | [(jh <any_Cx_jh_d_hh_p>)]) (p | ((<any_Cx_jh_d_hh_p> jh) | (jh <any_Cx_jh_d_hh_p>)))) ((([(<any_Vx_jh_jh_ay_noSlide> jh)] | [(jh <any_Vx_jh_jh_ay_noSlide>)]) ([(<any_Cx_jh_jh_p> jh)] | [(jh <any_Cx_jh_jh_p>)])) (ay | ((<any_Vx_jh_jh_ay_noSlide> jh) | (jh <any_Vx_jh_jh_ay_noSlide>)))) (([(<any_Cx_jh_ay_thr> thr)] | [(thr <any_Cx_jh_ay_thr>)]) ([(<any_Vx_jh_ay_thr> thr)] | [(thr <any_Vx_jh_ay_thr>)]) sil))
Running scan for frate = 105
Considering guard zh with value 1 for p ...
Considering guard jh with value 1 for p ...
candidateGuards = map[jh:true zh:true]
Picking guard, zh

Considering guard jh with value 1 for ay ...
Considering guard zh with value 1 for ay ...
candidateGuards = map[jh:true zh:true]
Picking guard, jh

frate, target rule = 105 public <pie> = (((sil [((sh <any_Cx_p_sh_d>) | (<any_Cx_p_sh_d> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil d (sil [((sh <any_Cx_p_sh_d>) | (<any_Cx_p_sh_d> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_zh_d_sh_p> zh)] | [(zh <any_Cx_zh_d_sh_p>)]) (p | ((<any_Cx_zh_d_sh_p> zh) | (zh <any_Cx_zh_d_sh_p>)))) ((([(<any_Vx_jh_zh_ay_noSlide> jh)] | [(jh <any_Vx_jh_zh_ay_noSlide>)]) ([(<any_Cx_jh_zh_p> jh)] | [(jh <any_Cx_jh_zh_p>)])) (ay | ((<any_Vx_jh_zh_ay_noSlide> jh) | (jh <any_Vx_jh_zh_ay_noSlide>)))) (([(<any_Cx_jh_ay_hh> hh)] | [(hh <any_Cx_jh_ay_hh>)]) ([(<any_Vx_jh_ay_hh> hh)] | [(hh <any_Vx_jh_ay_hh>)]) sil))
Running scan for frate = 91
Considering guard zh with value 1 for p ...
Considering guard jh with value 1 for p ...
candidateGuards = map[jh:true zh:true]
Picking guard, zh

Considering guard jh with value 1 for ay ...
Considering guard zh with value 1 for ay ...
candidateGuards = map[jh:true zh:true]
Picking guard, zh

frate, target rule = 91 public <pie> = (((sil [((sh <any_Cx_p_sh_d>) | (<any_Cx_p_sh_d> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil d (sil [((sh <any_Cx_p_sh_d>) | (<any_Cx_p_sh_d> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_zh_d_sh_p> zh)] | [(zh <any_Cx_zh_d_sh_p>)]) (p | ((<any_Cx_zh_d_sh_p> zh) | (zh <any_Cx_zh_d_sh_p>)))) ((([(<any_Vx_zh_zh_ay_noSlide> zh)] | [(zh <any_Vx_zh_zh_ay_noSlide>)]) ([(<any_Cx_zh_zh_p> zh)] | [(zh <any_Cx_zh_zh_p>)])) (ay | ((<any_Vx_zh_zh_ay_noSlide> zh) | (zh <any_Vx_zh_zh_ay_noSlide>)))) (([(<any_Cx_zh_ay_hh> hh)] | [(hh <any_Cx_zh_ay_hh>)]) ([(<any_Vx_zh_ay_hh> hh)] | [(hh <any_Vx_zh_ay_hh>)]) sil))
Running scan for frate = 80
Considering guard zh with value 1 for p ...
Considering guard jh with value 1 for p ...
candidateGuards = map[jh:true zh:true]
Picking guard, zh

Considering guard jh with value 1 for ay ...
Considering guard zh with value 1 for ay ...
candidateGuards = map[jh:true zh:true]
Picking guard, jh

frate, target rule = 80 public <pie> = (((sil [((sh <any_Cx_p_sh_d>) | (<any_Cx_p_sh_d> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]) | (sil d (sil [((sh <any_Cx_p_sh_d>) | (<any_Cx_p_sh_d> sh))] [((sh <any_vowel_noSlide>) | (<any_vowel_noSlide> sh))]))) (([(<any_Cx_zh_d_sh_p> zh)] | [(zh <any_Cx_zh_d_sh_p>)]) (p | ((<any_Cx_zh_d_sh_p> zh) | (zh <any_Cx_zh_d_sh_p>)))) ((([(<any_Vx_jh_zh_ay_noSlide> jh)] | [(jh <any_Vx_jh_zh_ay_noSlide>)]) ([(<any_Cx_jh_zh_p> jh)] | [(jh <any_Cx_jh_zh_p>)])) (ay | ((<any_Vx_jh_zh_ay_noSlide> jh) | (jh <any_Vx_jh_zh_ay_noSlide>)))) (([(<any_Cx_jh_ay_ng> ng)] | [(ng <any_Cx_jh_ay_ng>)]) ([(<any_Vx_jh_ay_ng> ng)] | [(ng <any_Vx_jh_ay_ng>)]) sil))
Running scan for frate = 72
Considering guard jh with value 1 for p ...
Considering guard zh with value 1 for p ...
candidateGuards = map[jh:true zh:true]
Picking guard, zh

Considering guard jh with value 1 for ay ...
Considering guard zh with value 1 for ay ...
candidateGuards = map[jh:true zh:true]
Picking guard, jh

frate, target rule = 72 public <pie> = (((sil [((b <any_Cx_p_b_d>) | (<any_Cx_p_b_d> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]) | (sil d (sil [((b <any_Cx_p_b_d>) | (<any_Cx_p_b_d> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]))) (([(<any_Cx_zh_d_b_p> zh)] | [(zh <any_Cx_zh_d_b_p>)]) (p | ((<any_Cx_zh_d_b_p> zh) | (zh <any_Cx_zh_d_b_p>)))) ((([(<any_Vx_jh_zh_ay_noSlide> jh)] | [(jh <any_Vx_jh_zh_ay_noSlide>)]) ([(<any_Cx_jh_zh_p> jh)] | [(jh <any_Cx_jh_zh_p>)])) (ay | ((<any_Vx_jh_zh_ay_noSlide> jh) | (jh <any_Vx_jh_zh_ay_noSlide>)))) (([(<any_Cx_jh_ay_hh> hh)] | [(hh <any_Cx_jh_ay_hh>)]) ([(<any_Vx_jh_ay_hh> hh)] | [(hh <any_Vx_jh_ay_hh>)]) sil))

results =
{72 [{sil 0 10} {p 11 22} {ay 23 44} {sil 45 69}]}
{80 [{sil 0 12} {p 13 25} {ay 26 49} {sil 50 75}]}
{91 [{sil 0 14} {p 15 28} {ay 29 55} {hh 56 58} {v 59 66} {sil 67 116}]}
{105 [{sil 0 17} {p 18 32} {ay 33 64} {d 65 74} {hh 75 77} {sil 78 134}]}
{125 [{sil 0 19} {p 20 37} {ay 38 85} {sil 86 158}]}

normalised results =
{72 [{sil 0 10} {p 15 31} {ay 32 61} {sil 63 96}]}
{80 [{sil 0 12} {p 16 31} {ay 33 61} {sil 63 94}]}
{91 [{sil 0 14} {p 16 31} {ay 32 60} {hh 62 62} {v 65 73} {sil 74 127}]}
{105 [{sil 0 17} {p 17 30} {ay 31 61} {d 62 70} {hh 71 71} {sil 74 128}]}
{125 [{sil 0 19} {p 16 30} {ay 30 68} {sil 69 126}]}

ruleAligned = [{{p 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ay 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {p 15 31} {ay 32 61} {sil 63 63}]}
{80 [{sil 0 0} {p 16 31} {ay 33 61} {sil 63 63}]}
{91 [{sil 0 0} {p 16 31} {ay 32 60} {hh 62 62} {v 65 73} {sil 74 74}]}
{105 [{sil 0 0} {p 17 30} {ay 31 61} {d 62 70} {hh 71 71} {sil 74 74}]}
{125 [{sil 0 0} {p 16 30} {ay 30 68} {sil 69 69}]}

timeAligned = [{{p 16 31} [{0 1} {1 1} {2 1} {4 1} {3 1}]} {{ay 32 61} [{0 2} {2 2} {3 2} {4 2} {1 2}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 30
combinedVerdict    = [{p 0} {ay 0}]
ruleAlignedVerdict = [{p 0} {ay 0}]

score->
+2 for p
+2 for ay
score<-: 9
testPronounce p good ay good
publish->
phonsToAlphas = [{[p] p} {[ay] ie}]
getVerdict<-:new {p [p] 0}
getVerdict<-:new {ie [ay] 0}
lettersVerdicts = [{p [p] 0} {ie [ay] 0}]
publish<-
{
  "word": "pie",
  "results": [
    {
      "letters": "p",
      "phonemes": "p",
      "verdict": "good"
    },
    {
      "letters": "ie",
      "phonemes": "ɑɪ",
      "verdict": "good"
    }
  ],
  "err": null
}
