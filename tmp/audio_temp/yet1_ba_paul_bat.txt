Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_8871369e-0e64-4064-8a59-1eb9a2344c4f audiofile /Users/test/go/src/Phonemes/audio_clips/yet1_ba_paul.wav word bat dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  2.042937



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.9600000000000001 1.08 2.04

 start3, duration3, end3 =  1.0799999999999998 0.52 1.5999999999999999

 Initial start, duration, end =  0.8600000000000001 1.18 2.04

 Cut at: start, duration =  0.8600000000000001 1.1629369999999997     guard_end =  2.0229369999999998 

Running scan for frate = 125
Considering guard sh with value 1 for b ...
Considering guard zh with value 1 for b ...
Considering guard jh with value 1 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for ae ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ao with value 1 for t ...
Considering guard zh with value 1 for t ...
candidateGuards = map[ao:true zh:true]
Picking guard, ao

frate, target rule = 125 public <bat> = (((sil [((dh <any_Cx_b_dh_hh>) | (<any_Cx_b_dh_hh> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]) | (sil hh (sil [((dh <any_Cx_b_dh_hh>) | (<any_Cx_b_dh_hh> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]))) (([(<any_Cx_zh_hh_dh_b> zh)] | [(zh <any_Cx_zh_hh_dh_b>)]) (b | ((<any_Cx_zh_hh_dh_b> zh) | (zh <any_Cx_zh_hh_dh_b>)))) ((([(<any_Vx_zh_zh_ae_noSlide> zh)] | [(zh <any_Vx_zh_zh_ae_noSlide>)]) ([(<any_Cx_zh_zh_t_b> zh)] | [(zh <any_Cx_zh_zh_t_b>)])) (ae | ((<any_Vx_zh_zh_ae_noSlide> zh) | (zh <any_Vx_zh_zh_ae_noSlide>)))) (([(<any_Cx_ao_zh_t> ao)] | [(ao <any_Cx_ao_zh_t>)]) (t | ((<any_Cx_ao_zh_t> ao) | (ao <any_Cx_ao_zh_t>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_ao_t_g> g)] | [(g <any_Cx_ao_t_g>)]) sil))
Running scan for frate = 105
Considering guard zh with value 1 for b ...
Considering guard jh with value 1 for b ...
Considering guard sh with value 1 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, jh

Considering guard zh with value 2 for ae ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ao with value 1 for t ...
Considering guard zh with value 1 for t ...
candidateGuards = map[ao:true zh:true]
Picking guard, ao

frate, target rule = 105 public <bat> = (((sil [((dh <any_Cx_b_dh_hh>) | (<any_Cx_b_dh_hh> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]) | (sil hh (sil [((dh <any_Cx_b_dh_hh>) | (<any_Cx_b_dh_hh> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]))) (([(<any_Cx_jh_hh_dh_b> jh)] | [(jh <any_Cx_jh_hh_dh_b>)]) (b | ((<any_Cx_jh_hh_dh_b> jh) | (jh <any_Cx_jh_hh_dh_b>)))) ((([(<any_Vx_zh_jh_ae_noSlide> zh)] | [(zh <any_Vx_zh_jh_ae_noSlide>)]) ([(<any_Cx_zh_jh_t_b> zh)] | [(zh <any_Cx_zh_jh_t_b>)])) (ae | ((<any_Vx_zh_jh_ae_noSlide> zh) | (zh <any_Vx_zh_jh_ae_noSlide>)))) (([(<any_Cx_ao_zh_t> ao)] | [(ao <any_Cx_ao_zh_t>)]) (t | ((<any_Cx_ao_zh_t> ao) | (ao <any_Cx_ao_zh_t>)))) (([(<any_vowel_noSlide> k)] | [(k <any_vowel_noSlide>)]) ([(<any_Cx_ao_t_k> k)] | [(k <any_Cx_ao_t_k>)]) sil))
Running scan for frate = 91
Considering guard jh with value 1 for b ...
Considering guard sh with value 1 for b ...
Considering guard zh with value 1 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, jh

Considering guard zh with value 2 for ae ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ao with value 1 for t ...
Considering guard zh with value 1 for t ...
candidateGuards = map[ao:true zh:true]
Picking guard, zh

frate, target rule = 91 public <bat> = (((sil [((v <any_Cx_b_v_hh>) | (<any_Cx_b_v_hh> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]) | (sil hh (sil [((v <any_Cx_b_v_hh>) | (<any_Cx_b_v_hh> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]))) (([(<any_Cx_jh_hh_v_b> jh)] | [(jh <any_Cx_jh_hh_v_b>)]) (b | ((<any_Cx_jh_hh_v_b> jh) | (jh <any_Cx_jh_hh_v_b>)))) ((([(<any_Vx_zh_jh_ae_noSlide> zh)] | [(zh <any_Vx_zh_jh_ae_noSlide>)]) ([(<any_Cx_zh_jh_t_b> zh)] | [(zh <any_Cx_zh_jh_t_b>)])) (ae | ((<any_Vx_zh_jh_ae_noSlide> zh) | (zh <any_Vx_zh_jh_ae_noSlide>)))) (([(<any_Cx_zh_zh_t> zh)] | [(zh <any_Cx_zh_zh_t>)]) (t | ((<any_Cx_zh_zh_t> zh) | (zh <any_Cx_zh_zh_t>)))) (([(<any_vowel_noSlide> g)] | [(g <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_g> g)] | [(g <any_Cx_zh_t_g>)]) sil))
Running scan for frate = 80
Considering guard jh with value 1 for b ...
Considering guard sh with value 1 for b ...
Considering guard zh with value 1 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, jh

Considering guard zh with value 2 for ae ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard ao with value 1 for t ...
Considering guard zh with value 1 for t ...
candidateGuards = map[ao:true zh:true]
Picking guard, ao

frate, target rule = 80 public <bat> = (((sil [((p <any_Cx_b_p_hh>) | (<any_Cx_b_p_hh> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]) | (sil hh (sil [((p <any_Cx_b_p_hh>) | (<any_Cx_b_p_hh> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]))) (([(<any_Cx_jh_hh_p_b> jh)] | [(jh <any_Cx_jh_hh_p_b>)]) (b | ((<any_Cx_jh_hh_p_b> jh) | (jh <any_Cx_jh_hh_p_b>)))) ((([(<any_Vx_zh_jh_ae_noSlide> zh)] | [(zh <any_Vx_zh_jh_ae_noSlide>)]) ([(<any_Cx_zh_jh_t_b> zh)] | [(zh <any_Cx_zh_jh_t_b>)])) (ae | ((<any_Vx_zh_jh_ae_noSlide> zh) | (zh <any_Vx_zh_jh_ae_noSlide>)))) (([(<any_Cx_ao_zh_t> ao)] | [(ao <any_Cx_ao_zh_t>)]) (t | ((<any_Cx_ao_zh_t> ao) | (ao <any_Cx_ao_zh_t>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_ao_t_thr> thr)] | [(thr <any_Cx_ao_t_thr>)]) sil))
Running scan for frate = 72
Considering guard sh with value 1 for b ...
Considering guard jh with value 1 for b ...
Considering guard zh with value 1 for b ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, sh

Considering guard zh with value 2 for ae ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for t ...
Considering guard ao with value 1 for t ...
candidateGuards = map[ao:true zh:true]
Picking guard, zh

frate, target rule = 72 public <bat> = (((sil [((p <any_Cx_b_p_hh>) | (<any_Cx_b_p_hh> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]) | (sil hh (sil [((p <any_Cx_b_p_hh>) | (<any_Cx_b_p_hh> p))] [((p <any_vowel_noSlide>) | (<any_vowel_noSlide> p))]))) (([(<any_Cx_sh_hh_p_b> sh)] | [(sh <any_Cx_sh_hh_p_b>)]) (b | ((<any_Cx_sh_hh_p_b> sh) | (sh <any_Cx_sh_hh_p_b>)))) ((([(<any_Vx_zh_sh_ae_noSlide> zh)] | [(zh <any_Vx_zh_sh_ae_noSlide>)]) ([(<any_Cx_zh_sh_t_b> zh)] | [(zh <any_Cx_zh_sh_t_b>)])) (ae | ((<any_Vx_zh_sh_ae_noSlide> zh) | (zh <any_Vx_zh_sh_ae_noSlide>)))) (([(<any_Cx_zh_zh_t> zh)] | [(zh <any_Cx_zh_zh_t>)]) (t | ((<any_Cx_zh_zh_t> zh) | (zh <any_Cx_zh_zh_t>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_zh_t_p> p)] | [(p <any_Cx_zh_t_p>)]) sil))

results =
{72 [{sil 0 19} {sh 20 22} {g 23 33} {ae 34 46} {t 47 68} {sil 69 82}]}
{80 [{sil 0 24} {g 25 28} {jh 29 37} {ae 38 52} {t 53 74} {sil 75 91}]}
{91 [{sil 0 20} {v 21 26} {y 27 39} {b 40 42} {eh 43 63} {zh 64 66} {t 67 84} {sil 85 104}]}
{105 [{sil 0 22} {b 23 25} {zh 26 28} {y 29 49} {eh 50 74} {zh 75 77} {t 78 98} {sil 99 121}]}
{125 [{sil 0 25} {b 26 28} {zh 29 31} {y 32 56} {eh 57 86} {zh 87 89} {t 90 114} {sil 115 142}]}

normalised results =
{72 [{sil 0 19} {sh 28 28} {g 32 46} {ae 47 64} {t 65 94} {sil 96 114}]}
{80 [{sil 0 24} {g 31 35} {jh 36 46} {ae 48 65} {t 66 93} {sil 94 114}]}
{91 [{sil 0 20} {v 23 29} {y 30 43} {b 44 44} {eh 47 69} {zh 70 70} {t 74 92} {sil 93 114}]}
{105 [{sil 0 22} {b 22 22} {zh 25 25} {y 28 47} {eh 48 70} {zh 71 71} {t 74 93} {sil 94 115}]}
{125 [{sil 0 25} {b 21 21} {zh 23 23} {y 26 45} {eh 46 69} {zh 70 70} {t 72 91} {sil 92 114}]}

ruleAligned = [{{b 2} []} {{ae 2} [{0 3} {1 3}]} {{eh 3} [{2 4} {3 4} {4 4}]} {{t 0} [{0 4} {1 4} {2 6} {3 6} {4 6}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {sh 28 28} {g 32 46} {ae 47 64} {t 65 94} {sil 96 96}]}
{80 [{sil 0 0} {g 31 35} {jh 36 46} {ae 48 65} {t 66 93} {sil 94 94}]}
{91 [{sil 0 0} {v 23 29} {y 30 43} {b 44 44} {eh 47 69} {zh 70 70} {t 74 92} {sil 93 93}]}
{105 [{sil 0 0} {b 22 22} {zh 25 25} {y 28 47} {eh 48 70} {zh 71 71} {t 74 93} {sil 94 94}]}
{125 [{sil 0 0} {b 21 21} {zh 23 23} {y 26 45} {eh 46 69} {zh 70 70} {t 72 91} {sil 92 92}]}

timeAligned = [{{y 30 43} [{2 2} {3 3} {4 3}]} {{eh 48 69} [{2 4} {3 4} {4 4}]} {{t 72 93} [{0 4} {1 4} {4 6} {2 6} {3 6}]}]

i, iTime, newITime, timeStartFrom = 0 0 -1 0
i, iTime, newITime, timeStartFrom = 1 0 -1 0
i, iTime, newITime, timeStartFrom = 2 0 1 0
i, iTime, newITime, timeStartFrom = 3 1 2 69
combinedVerdict    = [{b 2} {ae 2} {y 3} {eh 3} {t 0}]
ruleAlignedVerdict = [{b 2} {ae 2} {eh 3} {t 0}]

score->
-2 for b
-2 for ae
-2 for y
-2 for eh
+2 for t
score<-: -6
bestResult = {-6 [{b 2} {ae 2} {y 3} {eh 3} {t 0}] [b ae t]}
testPronounce b missing ae missing y surprise eh surprise t good
publish->
phonsToAlphas = [{[b] b} {[ae] a} {[t] t}]
getVerdict<-:new {b [b] 2}
getVerdict<-:new {a [ae] 2}
getVerdict<-:new {t [t] 0}
lettersVerdicts = [{b [b] 2} {a [ae] 2} {y [y] 3} {eh [eh] 3} {t [t] 0}]
publish<-
{
  "word": "bat",
  "results": [
    {
      "letters": "b",
      "phonemes": "b",
      "verdict": "missing"
    },
    {
      "letters": "a",
      "phonemes": "æ",
      "verdict": "missing"
    },
    {
      "letters": "y",
      "phonemes": "j",
      "verdict": "surprise"
    },
    {
      "letters": "eh",
      "phonemes": "ɛ",
      "verdict": "surprise"
    },
    {
      "letters": "t",
      "phonemes": "t",
      "verdict": "good"
    }
  ],
  "err": null
}
