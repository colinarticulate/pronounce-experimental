Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_cba127cb-8599-4e95-85b1-26221fb7ff1f audiofile /Users/test/go/src/Phonemes/audio_clips/there1_philip.wav word there dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  1.979625



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.52 0.86 1.38

 start3, duration3, end3 =  0.52 0.7999999999999999 1.3199999999999998

 Initial start, duration, end =  0.42000000000000004 0.9599999999999999 1.38

 Cut at: start, duration =  0.42000000000000004 1.41     guard_end =  1.83 

Running scan for frate = 125
Considering guard ch with value 1 for dh ...
Considering guard zh with value 1 for dh ...
candidateGuards = map[ch:true zh:true]
Picking guard, ch

Considering guard zh with value 1 for ehr ...
Considering guard ch with value 1 for ehr ...
candidateGuards = map[ch:true zh:true]
Picking guard, zh

frate, target rule = 125 public <there> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ch_p_z_dh> ch)] | [(ch <any_Cx_ch_p_z_dh>)]) (dh | t | ((<any_Cx_ch_p_z_dh_ehr> ch) | (ch <any_Cx_ch_p_z_dh_ehr>)))) (([(<any_Cx_zh_ch_ehr_dh> zh)] | [(zh <any_Cx_zh_ch_ehr_dh>)]) (ehr | ((<any_Cx_zh_ch_ehr> zh) | (zh <any_Cx_zh_ch_ehr>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_zh_ehr_f> f)] | [(f <any_Cx_zh_ehr_f>)]) sil))
Running scan for frate = 105
Considering guard zh with value 1 for dh ...
Considering guard ch with value 1 for dh ...
candidateGuards = map[ch:true zh:true]
Picking guard, zh

Considering guard ch with value 1 for ehr ...
Considering guard zh with value 1 for ehr ...
candidateGuards = map[ch:true zh:true]
Picking guard, ch

frate, target rule = 105 public <there> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_dh> zh)] | [(zh <any_Cx_zh_p_z_dh>)]) (dh | t | ((<any_Cx_zh_p_z_dh_ehr> zh) | (zh <any_Cx_zh_p_z_dh_ehr>)))) (([(<any_Cx_ch_zh_ehr_dh> ch)] | [(ch <any_Cx_ch_zh_ehr_dh>)]) (ehr | ((<any_Cx_ch_zh_ehr> ch) | (ch <any_Cx_ch_zh_ehr>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_ch_ehr_f> f)] | [(f <any_Cx_ch_ehr_f>)]) sil))
Running scan for frate = 91
Considering guard zh with value 1 for dh ...
Considering guard ch with value 1 for dh ...
candidateGuards = map[ch:true zh:true]
Picking guard, zh

Considering guard zh with value 1 for ehr ...
Considering guard ch with value 1 for ehr ...
candidateGuards = map[ch:true zh:true]
Picking guard, zh

frate, target rule = 91 public <there> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_dh> zh)] | [(zh <any_Cx_zh_p_z_dh>)]) (dh | t | ((<any_Cx_zh_p_z_dh_ehr> zh) | (zh <any_Cx_zh_p_z_dh_ehr>)))) (([(<any_Cx_zh_zh_ehr_dh> zh)] | [(zh <any_Cx_zh_zh_ehr_dh>)]) (ehr | ((<any_Cx_zh_zh_ehr> zh) | (zh <any_Cx_zh_zh_ehr>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_zh_ehr_p> p)] | [(p <any_Cx_zh_ehr_p>)]) sil))
Running scan for frate = 80
Considering guard ch with value 1 for dh ...
Considering guard zh with value 1 for dh ...
candidateGuards = map[ch:true zh:true]
Picking guard, zh

Considering guard ch with value 1 for ehr ...
Considering guard zh with value 1 for ehr ...
candidateGuards = map[ch:true zh:true]
Picking guard, ch

frate, target rule = 80 public <there> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_dh> zh)] | [(zh <any_Cx_zh_p_z_dh>)]) (dh | t | ((<any_Cx_zh_p_z_dh_ehr> zh) | (zh <any_Cx_zh_p_z_dh_ehr>)))) (([(<any_Cx_ch_zh_ehr_dh> ch)] | [(ch <any_Cx_ch_zh_ehr_dh>)]) (ehr | ((<any_Cx_ch_zh_ehr> ch) | (ch <any_Cx_ch_zh_ehr>)))) (([(<any_vowel_noSlide> hh)] | [(hh <any_vowel_noSlide>)]) ([(<any_Cx_ch_ehr_hh> hh)] | [(hh <any_Cx_ch_ehr_hh>)]) sil))
Running scan for frate = 72
Considering guard zh with value 1 for dh ...
Considering guard ch with value 1 for dh ...
candidateGuards = map[ch:true zh:true]
Picking guard, zh

Considering guard zh with value 1 for ehr ...
Considering guard ch with value 1 for ehr ...
candidateGuards = map[ch:true zh:true]
Picking guard, zh

frate, target rule = 72 public <there> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_dh> zh)] | [(zh <any_Cx_zh_p_z_dh>)]) (dh | t | ((<any_Cx_zh_p_z_dh_ehr> zh) | (zh <any_Cx_zh_p_z_dh_ehr>)))) (([(<any_Cx_zh_zh_ehr_dh> zh)] | [(zh <any_Cx_zh_zh_ehr_dh>)]) (ehr | ((<any_Cx_zh_zh_ehr> zh) | (zh <any_Cx_zh_zh_ehr>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_zh_ehr_n> n)] | [(n <any_Cx_zh_ehr_n>)]) sil))

results =
{72 [{sil 0 11} {dh 12 30} {ehr 31 59} {sil 60 72}]}
{80 [{sil 0 12} {dh 13 38} {ehr 39 66} {sil 67 95}]}
{91 [{sil 0 15} {dh 16 44} {ehr 45 75} {sil 76 127}]}
{105 [{sil 0 18} {dh 19 51} {ehr 52 87} {sil 88 147}]}
{125 [{sil 0 19} {dh 20 56} {ehr 57 102} {sil 103 173}]}

normalised results =
{72 [{sil 0 11} {dh 17 42} {ehr 43 82} {sil 83 100}]}
{80 [{sil 0 12} {dh 16 48} {ehr 49 83} {sil 84 119}]}
{91 [{sil 0 15} {dh 18 48} {ehr 49 82} {sil 84 140}]}
{105 [{sil 0 18} {dh 18 49} {ehr 50 83} {sil 84 140}]}
{125 [{sil 0 19} {dh 16 45} {ehr 46 82} {sil 82 138}]}

ruleAligned = [{{dh 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ehr 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {dh 17 42} {ehr 43 82} {sil 83 83}]}
{80 [{sil 0 0} {dh 16 48} {ehr 49 83} {sil 84 84}]}
{91 [{sil 0 0} {dh 18 48} {ehr 49 82} {sil 84 84}]}
{105 [{sil 0 0} {dh 18 49} {ehr 50 83} {sil 84 84}]}
{125 [{sil 0 0} {dh 16 45} {ehr 46 82} {sil 82 82}]}

timeAligned = [{{dh 17 48} [{0 1} {1 1} {4 1} {2 1} {3 1}]} {{ehr 49 82} [{0 2} {1 2} {2 2} {4 2} {3 2}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 42
combinedVerdict    = [{dh 0} {ehr 0}]
ruleAlignedVerdict = [{dh 0} {ehr 0}]

score->
+2 for dh
+2 for ehr
score<-: 9
testPronounce dh good ehr good
publish->
phonsToAlphas = [{[dh] th} {[ehr] ere}]
getVerdict<-:new {th [dh] 0}
getVerdict<-:new {ere [ehr] 0}
lettersVerdicts = [{th [dh] 0} {ere [ehr] 0}]
publish<-
{
  "word": "there",
  "results": [
    {
      "letters": "th",
      "phonemes": "ð",
      "verdict": "good"
    },
    {
      "letters": "ere",
      "phonemes": "ɛː",
      "verdict": "good"
    }
  ],
  "err": null
}
