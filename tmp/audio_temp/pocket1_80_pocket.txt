Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_d0a11514-06a9-4f4d-b289-f489cf901a26 audiofile /Users/test/go/src/Phonemes/audio_clips/pocket1_80.wav word pocket dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  2.530562



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  1.18 0.7 1.88

 start3, duration3, end3 =  1.46 0.36 1.8199999999999998

 Initial start, duration, end =  1.0799999999999998 0.8 1.88

 Cut at: start, duration =  1.0799999999999998 1.25     guard_end =  2.33 

Running scan for frate = 125
Considering guard jh with value 1 for p ...
Considering guard ng with value 1 for p ...
Considering guard zh with value 1 for p ...
candidateGuards = map[jh:true ng:true zh:true]
Picking guard, jh

Considering guard zh with value 2 for oh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard z with value 2 for k ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 3 for t ...
candidateGuards = map[r:true]
Picking guard, r

frate, target rule = 125 public <pocket> = (((sil [((b <any_Cx_p_b_d>) | (<any_Cx_p_b_d> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]) | (sil d (sil [((b <any_Cx_p_b_d>) | (<any_Cx_p_b_d> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]))) (([(<any_Cx_jh_d_b_p_oh> jh)] | [(jh <any_Cx_jh_d_b_p_oh>)]) (p | ((<any_Cx_jh_d_b_p_oh> jh) | (jh <any_Cx_jh_d_b_p_oh>)))) (([(<any_Cx_zh_jh_oh_k_p> zh)] | [(zh <any_Cx_zh_jh_oh_k_p>)]) (oh | ((<any_Cx_zh_jh_oh_k> zh) | (zh <any_Cx_zh_jh_oh_k>)))) (([(<any_Cx_z_zh_k_oh> z)] | [(z <any_Cx_z_zh_k_oh>)]) (k | ((<any_Cx_z_zh_k_oh> z) | (z <any_Cx_z_zh_k_oh>)))) ((([(<any_Vx_r_z_ih_noSlide> r)] | [(r <any_Vx_r_z_ih_noSlide>)]) ([(<any_Cx_r_z_t_k> r)] | [(r <any_Cx_r_z_t_k>)])) (ih | ((<any_Vx_r_z_ih_noSlide> r) | (r <any_Vx_r_z_ih_noSlide>)))) (([(<any_Cx_r_r_t> r)] | [(r <any_Cx_r_r_t>)]) (t | ((<any_Cx_r_r_t> r) | (r <any_Cx_r_r_t>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_r_t_thr> thr)] | [(thr <any_Cx_r_t_thr>)]) sil))
Running scan for frate = 105
Considering guard zh with value 1 for p ...
Considering guard ng with value 1 for p ...
Considering guard jh with value 1 for p ...
candidateGuards = map[jh:true ng:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for oh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard z with value 2 for k ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 3 for t ...
candidateGuards = map[r:true]
Picking guard, r

frate, target rule = 105 public <pocket> = (((sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil d (sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_zh_d_hh_p_oh> zh)] | [(zh <any_Cx_zh_d_hh_p_oh>)]) (p | ((<any_Cx_zh_d_hh_p_oh> zh) | (zh <any_Cx_zh_d_hh_p_oh>)))) (([(<any_Cx_zh_zh_oh_k_p> zh)] | [(zh <any_Cx_zh_zh_oh_k_p>)]) (oh | ((<any_Cx_zh_zh_oh_k> zh) | (zh <any_Cx_zh_zh_oh_k>)))) (([(<any_Cx_z_zh_k_oh> z)] | [(z <any_Cx_z_zh_k_oh>)]) (k | ((<any_Cx_z_zh_k_oh> z) | (z <any_Cx_z_zh_k_oh>)))) ((([(<any_Vx_r_z_ih_noSlide> r)] | [(r <any_Vx_r_z_ih_noSlide>)]) ([(<any_Cx_r_z_t_k> r)] | [(r <any_Cx_r_z_t_k>)])) (ih | ((<any_Vx_r_z_ih_noSlide> r) | (r <any_Vx_r_z_ih_noSlide>)))) (([(<any_Cx_r_r_t> r)] | [(r <any_Cx_r_r_t>)]) (t | ((<any_Cx_r_r_t> r) | (r <any_Cx_r_r_t>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_r_t_p> p)] | [(p <any_Cx_r_t_p>)]) sil))
Running scan for frate = 91
Considering guard jh with value 1 for p ...
Considering guard zh with value 1 for p ...
Considering guard ng with value 1 for p ...
candidateGuards = map[jh:true ng:true zh:true]
Picking guard, jh

Considering guard zh with value 2 for oh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard z with value 2 for k ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 3 for t ...
candidateGuards = map[r:true]
Picking guard, r

frate, target rule = 91 public <pocket> = (((sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]) | (sil d (sil [((hh <any_Cx_p_hh_d>) | (<any_Cx_p_hh_d> hh))] [((hh <any_vowel_noSlide>) | (<any_vowel_noSlide> hh))]))) (([(<any_Cx_jh_d_hh_p_oh> jh)] | [(jh <any_Cx_jh_d_hh_p_oh>)]) (p | ((<any_Cx_jh_d_hh_p_oh> jh) | (jh <any_Cx_jh_d_hh_p_oh>)))) (([(<any_Cx_zh_jh_oh_k_p> zh)] | [(zh <any_Cx_zh_jh_oh_k_p>)]) (oh | ((<any_Cx_zh_jh_oh_k> zh) | (zh <any_Cx_zh_jh_oh_k>)))) (([(<any_Cx_z_zh_k_oh> z)] | [(z <any_Cx_z_zh_k_oh>)]) (k | ((<any_Cx_z_zh_k_oh> z) | (z <any_Cx_z_zh_k_oh>)))) ((([(<any_Vx_r_z_ih_noSlide> r)] | [(r <any_Vx_r_z_ih_noSlide>)]) ([(<any_Cx_r_z_t_k> r)] | [(r <any_Cx_r_z_t_k>)])) (ih | ((<any_Vx_r_z_ih_noSlide> r) | (r <any_Vx_r_z_ih_noSlide>)))) (([(<any_Cx_r_r_t> r)] | [(r <any_Cx_r_r_t>)]) (t | ((<any_Cx_r_r_t> r) | (r <any_Cx_r_r_t>)))) (([(<any_vowel_noSlide> ch)] | [(ch <any_vowel_noSlide>)]) ([(<any_Cx_r_t_ch> ch)] | [(ch <any_Cx_r_t_ch>)]) sil))
Running scan for frate = 80
Considering guard zh with value 1 for p ...
Considering guard jh with value 1 for p ...
Considering guard ng with value 1 for p ...
candidateGuards = map[jh:true ng:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for oh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard z with value 2 for k ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 3 for t ...
candidateGuards = map[r:true]
Picking guard, r

frate, target rule = 80 public <pocket> = (((sil [((b <any_Cx_p_b_d>) | (<any_Cx_p_b_d> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]) | (sil d (sil [((b <any_Cx_p_b_d>) | (<any_Cx_p_b_d> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]))) (([(<any_Cx_zh_d_b_p_oh> zh)] | [(zh <any_Cx_zh_d_b_p_oh>)]) (p | ((<any_Cx_zh_d_b_p_oh> zh) | (zh <any_Cx_zh_d_b_p_oh>)))) (([(<any_Cx_zh_zh_oh_k_p> zh)] | [(zh <any_Cx_zh_zh_oh_k_p>)]) (oh | ((<any_Cx_zh_zh_oh_k> zh) | (zh <any_Cx_zh_zh_oh_k>)))) (([(<any_Cx_z_zh_k_oh> z)] | [(z <any_Cx_z_zh_k_oh>)]) (k | ((<any_Cx_z_zh_k_oh> z) | (z <any_Cx_z_zh_k_oh>)))) ((([(<any_Vx_r_z_ih_noSlide> r)] | [(r <any_Vx_r_z_ih_noSlide>)]) ([(<any_Cx_r_z_t_k> r)] | [(r <any_Cx_r_z_t_k>)])) (ih | ((<any_Vx_r_z_ih_noSlide> r) | (r <any_Vx_r_z_ih_noSlide>)))) (([(<any_Cx_r_r_t> r)] | [(r <any_Cx_r_r_t>)]) (t | ((<any_Cx_r_r_t> r) | (r <any_Cx_r_r_t>)))) (([(<any_vowel_noSlide> ch)] | [(ch <any_vowel_noSlide>)]) ([(<any_Cx_r_t_ch> ch)] | [(ch <any_Cx_r_t_ch>)]) sil))
Running scan for frate = 72
Considering guard zh with value 1 for p ...
Considering guard jh with value 1 for p ...
Considering guard ng with value 1 for p ...
candidateGuards = map[jh:true ng:true zh:true]
Picking guard, zh

Considering guard zh with value 2 for oh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard z with value 2 for k ...
candidateGuards = map[z:true]
Picking guard, z

Considering guard r with value 6 for ih ...
candidateGuards = map[r:true]
Picking guard, r

Considering guard r with value 3 for t ...
candidateGuards = map[r:true]
Picking guard, r

frate, target rule = 72 public <pocket> = (((sil [((b <any_Cx_p_b_d>) | (<any_Cx_p_b_d> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]) | (sil d (sil [((b <any_Cx_p_b_d>) | (<any_Cx_p_b_d> b))] [((b <any_vowel_noSlide>) | (<any_vowel_noSlide> b))]))) (([(<any_Cx_zh_d_b_p_oh> zh)] | [(zh <any_Cx_zh_d_b_p_oh>)]) (p | ((<any_Cx_zh_d_b_p_oh> zh) | (zh <any_Cx_zh_d_b_p_oh>)))) (([(<any_Cx_zh_zh_oh_k_p> zh)] | [(zh <any_Cx_zh_zh_oh_k_p>)]) (oh | ((<any_Cx_zh_zh_oh_k> zh) | (zh <any_Cx_zh_zh_oh_k>)))) (([(<any_Cx_z_zh_k_oh> z)] | [(z <any_Cx_z_zh_k_oh>)]) (k | ((<any_Cx_z_zh_k_oh> z) | (z <any_Cx_z_zh_k_oh>)))) ((([(<any_Vx_r_z_ih_noSlide> r)] | [(r <any_Vx_r_z_ih_noSlide>)]) ([(<any_Cx_r_z_t_k> r)] | [(r <any_Cx_r_z_t_k>)])) (ih | ((<any_Vx_r_z_ih_noSlide> r) | (r <any_Vx_r_z_ih_noSlide>)))) (([(<any_Cx_r_r_t> r)] | [(r <any_Cx_r_r_t>)]) (t | ((<any_Cx_r_r_t> r) | (r <any_Cx_r_r_t>)))) (([(<any_vowel_noSlide> p)] | [(p <any_vowel_noSlide>)]) ([(<any_Cx_r_t_p> p)] | [(p <any_Cx_r_t_p>)]) sil))

results =
{72 [{sil 0 8} {p 9 16} {oh 17 28} {k 29 33} {ih 34 47} {t 48 64} {sil 65 79}]}
{80 [{sil 0 10} {p 11 18} {oh 19 32} {k 33 37} {ih 38 53} {t 54 71} {sil 72 86}]}
{91 [{sil 0 11} {p 12 21} {oh 22 36} {k 37 43} {ih 44 62} {t 63 81} {sil 82 112}]}
{105 [{sil 0 14} {p 15 25} {oh 26 43} {k 44 50} {ih 51 72} {t 73 91} {sil 92 130}]}
{125 [{sil 0 15} {p 16 28} {oh 29 49} {k 50 57} {ih 58 84} {t 85 107} {sil 108 153}]}

normalised results =
{72 [{sil 0 8} {p 13 22} {oh 24 39} {k 40 46} {ih 47 65} {t 67 89} {sil 90 110}]}
{80 [{sil 0 10} {p 14 23} {oh 24 40} {k 41 46} {ih 48 66} {t 68 89} {sil 90 108}]}
{91 [{sil 0 11} {p 13 23} {oh 24 40} {k 41 47} {ih 48 68} {t 69 89} {sil 90 123}]}
{105 [{sil 0 14} {p 14 24} {oh 25 41} {k 42 48} {ih 49 69} {t 70 87} {sil 88 124}]}
{125 [{sil 0 15} {p 13 22} {oh 23 39} {k 40 46} {ih 46 67} {t 68 86} {sil 86 122}]}

ruleAligned = [{{p 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{oh 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{k 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]} {{ih 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]} {{t 0} [{0 5} {1 5} {2 5} {3 5} {4 5}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {p 13 22} {oh 24 39} {k 40 46} {ih 47 65} {t 67 89} {sil 90 90}]}
{80 [{sil 0 0} {p 14 23} {oh 24 40} {k 41 46} {ih 48 66} {t 68 89} {sil 90 90}]}
{91 [{sil 0 0} {p 13 23} {oh 24 40} {k 41 47} {ih 48 68} {t 69 89} {sil 90 90}]}
{105 [{sil 0 0} {p 14 24} {oh 25 41} {k 42 48} {ih 49 69} {t 70 87} {sil 88 88}]}
{125 [{sil 0 0} {p 13 22} {oh 23 39} {k 40 46} {ih 46 67} {t 68 86} {sil 86 86}]}

timeAligned = [{{p 13 23} [{0 1} {2 1} {4 1} {1 1} {3 1}]} {{oh 24 40} [{0 2} {1 2} {2 2} {4 2} {3 2}]} {{k 41 46} [{0 3} {1 3} {2 3} {4 3} {3 3}]} {{ih 48 67} [{0 4} {1 4} {2 4} {4 4} {3 4}]} {{t 68 89} [{0 5} {1 5} {4 5} {2 5} {3 5}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 22
i, iTime, newITime, timeStartFrom = 2 1 2 39
i, iTime, newITime, timeStartFrom = 3 2 3 46
i, iTime, newITime, timeStartFrom = 4 3 4 65
combinedVerdict    = [{p 0} {oh 0} {k 0} {ih 0} {t 0}]
ruleAlignedVerdict = [{p 0} {oh 0} {k 0} {ih 0} {t 0}]

score->
+2 for p
+2 for oh
+2 for k
+2 for ih
+2 for t
score<-: 15
testPronounce p good oh good k good ih good t good
publish->
phonsToAlphas = [{[p] p} {[oh] o} {[k] ck} {[ih] e} {[t] t}]
getVerdict<-:new {p [p] 0}
getVerdict<-:new {o [oh] 0}
getVerdict<-:new {ck [k] 0}
getVerdict<-:new {e [ih] 0}
getVerdict<-:new {t [t] 0}
lettersVerdicts = [{p [p] 0} {o [oh] 0} {ck [k] 0} {e [ih] 0} {t [t] 0}]
publish<-
{
  "word": "pocket",
  "results": [
    {
      "letters": "p",
      "phonemes": "p",
      "verdict": "good"
    },
    {
      "letters": "o",
      "phonemes": "ɒ",
      "verdict": "good"
    },
    {
      "letters": "ck",
      "phonemes": "k",
      "verdict": "good"
    },
    {
      "letters": "e",
      "phonemes": "ɪ",
      "verdict": "good"
    },
    {
      "letters": "t",
      "phonemes": "t",
      "verdict": "good"
    }
  ],
  "err": null
}
