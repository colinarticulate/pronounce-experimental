Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_3a0a4e75-6d86-49fe-8868-a89179cb31ce audiofile /Users/test/go/src/Phonemes/audio_clips/other1_paul.wav word other dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  2.320562



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.84 0.78 1.62

 start3, duration3, end3 =  0.84 0.62 1.46

 Initial start, duration, end =  0.74 0.8800000000000001 1.62

 Cut at: start, duration =  0.74 1.33     guard_end =  2.0700000000000003 

Running scan for frate = 125
Considering guard zh with value 1 for ah ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for dh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 125 public <other> = (((sil [((l <any_Vx_ah_l_p_noSlide>) | (<any_Vx_ah_l_p_noSlide> l))] [((l <any_Cx_ah_l_p>) | (<any_Cx_ah_l_p> l))]) | (sil p (sil [((l <any_Vx_ah_l_p_noSlide>) | (<any_Vx_ah_l_p_noSlide> l))] [((l <any_Cx_ah_l_p>) | (<any_Cx_ah_l_p> l))]))) ((([(<any_Vx_zh_p_l_ah_noSlide> zh)] | [(zh <any_Vx_zh_p_l_ah_noSlide>)]) ([(<any_Cx_zh_p_l_dh> zh)] | [(zh <any_Cx_zh_p_l_dh>)])) (ah | ((<any_Vx_zh_p_l_ah_noSlide> zh) | (zh <any_Vx_zh_p_l_ah_noSlide>)))) (([(<any_Cx_zh_zh_dh> zh)] | [(zh <any_Cx_zh_zh_dh>)]) (dh | ((<any_Cx_zh_zh_dh_axr> zh) | (zh <any_Cx_zh_zh_dh_axr>)))) (([(<any_Cx_zh_zh_axr_dh> zh)] | [(zh <any_Cx_zh_zh_axr_dh>)]) (axr | ((<any_Cx_zh_zh_axr_dh> zh) | (zh <any_Cx_zh_zh_axr_dh>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_f> f)] | [(f <any_Cx_zh_axr_f>)]) sil))
Running scan for frate = 105
Considering guard zh with value 1 for ah ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for dh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 105 public <other> = (((sil [((r <any_Vx_ah_r_p_noSlide>) | (<any_Vx_ah_r_p_noSlide> r))] [((r <any_Cx_ah_r_p>) | (<any_Cx_ah_r_p> r))]) | (sil p (sil [((r <any_Vx_ah_r_p_noSlide>) | (<any_Vx_ah_r_p_noSlide> r))] [((r <any_Cx_ah_r_p>) | (<any_Cx_ah_r_p> r))]))) ((([(<any_Vx_zh_p_r_ah_noSlide> zh)] | [(zh <any_Vx_zh_p_r_ah_noSlide>)]) ([(<any_Cx_zh_p_r_dh> zh)] | [(zh <any_Cx_zh_p_r_dh>)])) (ah | ((<any_Vx_zh_p_r_ah_noSlide> zh) | (zh <any_Vx_zh_p_r_ah_noSlide>)))) (([(<any_Cx_zh_zh_dh> zh)] | [(zh <any_Cx_zh_zh_dh>)]) (dh | ((<any_Cx_zh_zh_dh_axr> zh) | (zh <any_Cx_zh_zh_dh_axr>)))) (([(<any_Cx_zh_zh_axr_dh> zh)] | [(zh <any_Cx_zh_zh_axr_dh>)]) (axr | ((<any_Cx_zh_zh_axr_dh> zh) | (zh <any_Cx_zh_zh_axr_dh>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_thr> thr)] | [(thr <any_Cx_zh_axr_thr>)]) sil))
Running scan for frate = 91
Considering guard zh with value 1 for ah ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for dh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 91 public <other> = (((sil [((hh <any_Vx_ah_hh_p_noSlide>) | (<any_Vx_ah_hh_p_noSlide> hh))] [((hh <any_Cx_ah_hh_p>) | (<any_Cx_ah_hh_p> hh))]) | (sil p (sil [((hh <any_Vx_ah_hh_p_noSlide>) | (<any_Vx_ah_hh_p_noSlide> hh))] [((hh <any_Cx_ah_hh_p>) | (<any_Cx_ah_hh_p> hh))]))) ((([(<any_Vx_zh_p_hh_ah_noSlide> zh)] | [(zh <any_Vx_zh_p_hh_ah_noSlide>)]) ([(<any_Cx_zh_p_hh_dh> zh)] | [(zh <any_Cx_zh_p_hh_dh>)])) (ah | ((<any_Vx_zh_p_hh_ah_noSlide> zh) | (zh <any_Vx_zh_p_hh_ah_noSlide>)))) (([(<any_Cx_zh_zh_dh> zh)] | [(zh <any_Cx_zh_zh_dh>)]) (dh | ((<any_Cx_zh_zh_dh_axr> zh) | (zh <any_Cx_zh_zh_dh_axr>)))) (([(<any_Cx_zh_zh_axr_dh> zh)] | [(zh <any_Cx_zh_zh_axr_dh>)]) (axr | ((<any_Cx_zh_zh_axr_dh> zh) | (zh <any_Cx_zh_zh_axr_dh>)))) (([(<any_vowel_noSlide> f)] | [(f <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_f> f)] | [(f <any_Cx_zh_axr_f>)]) sil))
Running scan for frate = 80
Considering guard zh with value 1 for ah ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for dh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 80 public <other> = (((sil [((hh <any_Vx_ah_hh_p_noSlide>) | (<any_Vx_ah_hh_p_noSlide> hh))] [((hh <any_Cx_ah_hh_p>) | (<any_Cx_ah_hh_p> hh))]) | (sil p (sil [((hh <any_Vx_ah_hh_p_noSlide>) | (<any_Vx_ah_hh_p_noSlide> hh))] [((hh <any_Cx_ah_hh_p>) | (<any_Cx_ah_hh_p> hh))]))) ((([(<any_Vx_zh_p_hh_ah_noSlide> zh)] | [(zh <any_Vx_zh_p_hh_ah_noSlide>)]) ([(<any_Cx_zh_p_hh_dh> zh)] | [(zh <any_Cx_zh_p_hh_dh>)])) (ah | ((<any_Vx_zh_p_hh_ah_noSlide> zh) | (zh <any_Vx_zh_p_hh_ah_noSlide>)))) (([(<any_Cx_zh_zh_dh> zh)] | [(zh <any_Cx_zh_zh_dh>)]) (dh | ((<any_Cx_zh_zh_dh_axr> zh) | (zh <any_Cx_zh_zh_dh_axr>)))) (([(<any_Cx_zh_zh_axr_dh> zh)] | [(zh <any_Cx_zh_zh_axr_dh>)]) (axr | ((<any_Cx_zh_zh_axr_dh> zh) | (zh <any_Cx_zh_zh_axr_dh>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_thr> thr)] | [(thr <any_Cx_zh_axr_thr>)]) sil))
Running scan for frate = 72
Considering guard zh with value 1 for ah ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 2 for dh ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 72 public <other> = (((sil [((l <any_Vx_ah_l_p_noSlide>) | (<any_Vx_ah_l_p_noSlide> l))] [((l <any_Cx_ah_l_p>) | (<any_Cx_ah_l_p> l))]) | (sil p (sil [((l <any_Vx_ah_l_p_noSlide>) | (<any_Vx_ah_l_p_noSlide> l))] [((l <any_Cx_ah_l_p>) | (<any_Cx_ah_l_p> l))]))) ((([(<any_Vx_zh_p_l_ah_noSlide> zh)] | [(zh <any_Vx_zh_p_l_ah_noSlide>)]) ([(<any_Cx_zh_p_l_dh> zh)] | [(zh <any_Cx_zh_p_l_dh>)])) (ah | ((<any_Vx_zh_p_l_ah_noSlide> zh) | (zh <any_Vx_zh_p_l_ah_noSlide>)))) (([(<any_Cx_zh_zh_dh> zh)] | [(zh <any_Cx_zh_zh_dh>)]) (dh | ((<any_Cx_zh_zh_dh_axr> zh) | (zh <any_Cx_zh_zh_dh_axr>)))) (([(<any_Cx_zh_zh_axr_dh> zh)] | [(zh <any_Cx_zh_zh_axr_dh>)]) (axr | ((<any_Cx_zh_zh_axr_dh> zh) | (zh <any_Cx_zh_zh_axr_dh>)))) (([(<any_vowel_noSlide> thr)] | [(thr <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_thr> thr)] | [(thr <any_Cx_zh_axr_thr>)]) sil))

results =
{72 [{sil 0 10} {ah 11 27} {dh 28 35} {axr 36 51} {sil 52 62}]}
{80 [{sil 0 12} {ah 13 25} {dh 26 39} {axr 40 57} {sil 58 66}]}
{91 [{sil 0 14} {ah 15 33} {dh 34 44} {axr 45 98} {sil 99 119}]}
{105 [{sil 0 17} {ah 18 39} {dh 40 51} {axr 52 107} {sil 108 138}]}
{125 [{sil 0 19} {ah 20 45} {dh 46 58} {axr 59 114} {sil 115 163}]}

normalised results =
{72 [{sil 0 10} {ah 15 38} {dh 39 49} {axr 50 71} {sil 72 86}]}
{80 [{sil 0 12} {ah 16 31} {dh 33 49} {axr 50 71} {sil 73 83}]}
{91 [{sil 0 14} {ah 16 36} {dh 37 48} {axr 49 108} {sil 109 131}]}
{105 [{sil 0 17} {ah 17 37} {dh 38 49} {axr 50 102} {sil 103 131}]}
{125 [{sil 0 19} {ah 16 36} {dh 37 46} {axr 47 91} {sil 92 130}]}

ruleAligned = [{{ah 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{dh 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{axr 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {ah 15 38} {dh 39 49} {axr 50 71} {sil 72 72}]}
{80 [{sil 0 0} {ah 16 31} {dh 33 49} {axr 50 71} {sil 73 73}]}
{91 [{sil 0 0} {ah 16 36} {dh 37 48} {axr 49 108} {sil 109 109}]}
{105 [{sil 0 0} {ah 17 37} {dh 38 49} {axr 50 102} {sil 103 103}]}
{125 [{sil 0 0} {ah 16 36} {dh 37 46} {axr 47 91} {sil 92 92}]}

timeAligned = [{{ah 16 36} [{0 1} {1 1} {2 1} {4 1} {3 1}]} {{dh 37 49} [{1 2} {2 2} {4 2} {3 2} {0 2}]} {{axr 50 91} [{0 3} {1 3} {2 3} {3 3} {4 3}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 31
i, iTime, newITime, timeStartFrom = 2 1 2 46
combinedVerdict    = [{ah 0} {dh 0} {axr 0}]
ruleAlignedVerdict = [{ah 0} {dh 0} {axr 0}]

score->
+2 for ah
+2 for dh
+2 for axr
score<-: 11
testPronounce ah good dh good axr good
publish->
phonsToAlphas = [{[ah] o} {[dh] th} {[axr] er}]
getVerdict<-:new {o [ah] 0}
getVerdict<-:new {th [dh] 0}
getVerdict<-:new {er [axr] 0}
lettersVerdicts = [{o [ah] 0} {th [dh] 0} {er [axr] 0}]
publish<-
{
  "word": "other",
  "results": [
    {
      "letters": "o",
      "phonemes": "ʌ",
      "verdict": "good"
    },
    {
      "letters": "th",
      "phonemes": "ð",
      "verdict": "good"
    },
    {
      "letters": "er",
      "phonemes": "əɹ",
      "verdict": "good"
    }
  ],
  "err": null
}
