Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_8381d3b6-c927-4219-91ae-d69c514b9b46 audiofile /Users/test/go/src/Phonemes/audio_clips/blah1_paul.wav word blah dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  1.60075



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.5 0.78 1.28

 start3, duration3, end3 =  0.64 0.56 1.2000000000000002

 Initial start, duration, end =  0.4 0.88 1.28

 Cut at: start, duration =  0.4 1.1807499999999997     guard_end =  1.5807499999999997 

Running scan for frate = 125
Running scan for frate = 125
Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard jh with value 1 for bl ...
Considering guard sh with value 1 for bl ...
Considering guard zh with value 1 for bl ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, jh

Considering guard zh with value 1 for aa ...
Considering guard sh with value 1 for aa ...
Considering guard jh with value 1 for aa ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, zh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for aa ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 125 public <blah> = (((sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_jh_p_z_bl> jh)] | [(jh <any_Cx_jh_p_z_bl>)]) (bl | ((<any_Cx_jh_p_z_bl> jh) | (jh <any_Cx_jh_p_z_bl>)))) ((([(<any_Vx_zh_jh_aa_noSlide> zh)] | [(zh <any_Vx_zh_jh_aa_noSlide>)]) ([(<any_Cx_zh_jh_bl> zh)] | [(zh <any_Cx_zh_jh_bl>)])) (aa | ((<any_Vx_zh_jh_aa_noSlide> zh) | (zh <any_Vx_zh_jh_aa_noSlide>)))) (([(<any_Cx_zh_aa_f> f)] | [(f <any_Cx_zh_aa_f>)]) ([(<any_Vx_zh_aa_f> f)] | [(f <any_Vx_zh_aa_f>)]) sil))
frate, target rule = 125 public <blah> = (((sil [((f <any_Cx_b_f_hh>) | (<any_Cx_b_f_hh> f))] [((f <any_vowel_noSlide>) | (<any_vowel_noSlide> f))]) | (sil hh (sil [((f <any_Cx_b_f_hh>) | (<any_Cx_b_f_hh> f))] [((f <any_vowel_noSlide>) | (<any_vowel_noSlide> f))]))) (([(<any_Cx_sh_hh_f_b_l> sh)] | [(sh <any_Cx_sh_hh_f_b_l>)]) (b | ((<any_Cx_sh_hh_f_b_l> sh) | (sh <any_Cx_sh_hh_f_b_l>)))) (([(<any_Cx_sh_sh_l_b> sh)] | [(sh <any_Cx_sh_sh_l_b>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_sh_sh_aa_noSlide> sh)] | [(sh <any_Vx_sh_sh_aa_noSlide>)]) ([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)])) (aa | ((<any_Vx_sh_sh_aa_noSlide> sh) | (sh <any_Vx_sh_sh_aa_noSlide>)))) (([(<any_Cx_sh_aa_f> f)] | [(f <any_Cx_sh_aa_f>)]) ([(<any_Vx_sh_aa_f> f)] | [(f <any_Vx_sh_aa_f>)]) sil))
Running scan for frate = 105
Running scan for frate = 105
Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 1 for bl ...
Considering guard sh with value 1 for bl ...
Considering guard jh with value 1 for bl ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, sh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for aa ...
Considering guard zh with value 1 for aa ...
Considering guard jh with value 1 for aa ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, sh

Considering guard sh with value 1 for aa ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 105 public <blah> = (((sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_bl> sh)] | [(sh <any_Cx_sh_p_z_bl>)]) (bl | ((<any_Cx_sh_p_z_bl> sh) | (sh <any_Cx_sh_p_z_bl>)))) ((([(<any_Vx_sh_sh_aa_noSlide> sh)] | [(sh <any_Vx_sh_sh_aa_noSlide>)]) ([(<any_Cx_sh_sh_bl> sh)] | [(sh <any_Cx_sh_sh_bl>)])) (aa | ((<any_Vx_sh_sh_aa_noSlide> sh) | (sh <any_Vx_sh_sh_aa_noSlide>)))) (([(<any_Cx_sh_aa_p> p)] | [(p <any_Cx_sh_aa_p>)]) ([(<any_Vx_sh_aa_p> p)] | [(p <any_Vx_sh_aa_p>)]) sil))
frate, target rule = 105 public <blah> = (((sil [((f <any_Cx_b_f_hh>) | (<any_Cx_b_f_hh> f))] [((f <any_vowel_noSlide>) | (<any_vowel_noSlide> f))]) | (sil hh (sil [((f <any_Cx_b_f_hh>) | (<any_Cx_b_f_hh> f))] [((f <any_vowel_noSlide>) | (<any_vowel_noSlide> f))]))) (([(<any_Cx_sh_hh_f_b_l> sh)] | [(sh <any_Cx_sh_hh_f_b_l>)]) (b | ((<any_Cx_sh_hh_f_b_l> sh) | (sh <any_Cx_sh_hh_f_b_l>)))) (([(<any_Cx_sh_sh_l_b> sh)] | [(sh <any_Cx_sh_sh_l_b>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_sh_sh_aa_noSlide> sh)] | [(sh <any_Vx_sh_sh_aa_noSlide>)]) ([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)])) (aa | ((<any_Vx_sh_sh_aa_noSlide> sh) | (sh <any_Vx_sh_sh_aa_noSlide>)))) (([(<any_Cx_sh_aa_p> p)] | [(p <any_Cx_sh_aa_p>)]) ([(<any_Vx_sh_aa_p> p)] | [(p <any_Vx_sh_aa_p>)]) sil))
Running scan for frate = 91
Running scan for frate = 91
Considering guard jh with value 1 for bl ...
Considering guard zh with value 1 for bl ...
Considering guard sh with value 1 for bl ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, jh

Considering guard sh with value 1 for aa ...
Considering guard zh with value 1 for aa ...
Considering guard jh with value 1 for aa ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, zh

Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 91 public <blah> = (((sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_jh_p_z_bl> jh)] | [(jh <any_Cx_jh_p_z_bl>)]) (bl | ((<any_Cx_jh_p_z_bl> jh) | (jh <any_Cx_jh_p_z_bl>)))) ((([(<any_Vx_zh_jh_aa_noSlide> zh)] | [(zh <any_Vx_zh_jh_aa_noSlide>)]) ([(<any_Cx_zh_jh_bl> zh)] | [(zh <any_Cx_zh_jh_bl>)])) (aa | ((<any_Vx_zh_jh_aa_noSlide> zh) | (zh <any_Vx_zh_jh_aa_noSlide>)))) (([(<any_Cx_zh_aa_f> f)] | [(f <any_Cx_zh_aa_f>)]) ([(<any_Vx_zh_aa_f> f)] | [(f <any_Vx_zh_aa_f>)]) sil))
Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 80
Considering guard sh with value 1 for aa ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 1 for bl ...
Considering guard sh with value 1 for bl ...
Considering guard jh with value 1 for bl ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, jh

frate, target rule = 91 public <blah> = (((sil [((v <any_Cx_b_v_hh>) | (<any_Cx_b_v_hh> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]) | (sil hh (sil [((v <any_Cx_b_v_hh>) | (<any_Cx_b_v_hh> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]))) (([(<any_Cx_sh_hh_v_b_l> sh)] | [(sh <any_Cx_sh_hh_v_b_l>)]) (b | ((<any_Cx_sh_hh_v_b_l> sh) | (sh <any_Cx_sh_hh_v_b_l>)))) (([(<any_Cx_sh_sh_l_b> sh)] | [(sh <any_Cx_sh_sh_l_b>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_sh_sh_aa_noSlide> sh)] | [(sh <any_Vx_sh_sh_aa_noSlide>)]) ([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)])) (aa | ((<any_Vx_sh_sh_aa_noSlide> sh) | (sh <any_Vx_sh_sh_aa_noSlide>)))) (([(<any_Cx_sh_aa_n> n)] | [(n <any_Cx_sh_aa_n>)]) ([(<any_Vx_sh_aa_n> n)] | [(n <any_Vx_sh_aa_n>)]) sil))
Considering guard sh with value 1 for aa ...
Considering guard zh with value 1 for aa ...
Considering guard jh with value 1 for aa ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, zh

frate, target rule = 80 public <blah> = (((sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_jh_p_z_bl> jh)] | [(jh <any_Cx_jh_p_z_bl>)]) (bl | ((<any_Cx_jh_p_z_bl> jh) | (jh <any_Cx_jh_p_z_bl>)))) ((([(<any_Vx_zh_jh_aa_noSlide> zh)] | [(zh <any_Vx_zh_jh_aa_noSlide>)]) ([(<any_Cx_zh_jh_bl> zh)] | [(zh <any_Cx_zh_jh_bl>)])) (aa | ((<any_Vx_zh_jh_aa_noSlide> zh) | (zh <any_Vx_zh_jh_aa_noSlide>)))) (([(<any_Cx_zh_aa_ng> ng)] | [(ng <any_Cx_zh_aa_ng>)]) ([(<any_Vx_zh_aa_ng> ng)] | [(ng <any_Vx_zh_aa_ng>)]) sil))
Running scan for frate = 80
Running scan for frate = 72
Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for bl ...
Considering guard zh with value 1 for bl ...
Considering guard jh with value 1 for bl ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, zh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard jh with value 1 for aa ...
Considering guard zh with value 1 for aa ...
Considering guard sh with value 1 for aa ...
candidateGuards = map[jh:true sh:true zh:true]
Picking guard, jh

Considering guard sh with value 1 for aa ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 72 public <blah> = (((sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_bl_z_p>) | (<any_Cx_bl_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_zh_p_z_bl> zh)] | [(zh <any_Cx_zh_p_z_bl>)]) (bl | ((<any_Cx_zh_p_z_bl> zh) | (zh <any_Cx_zh_p_z_bl>)))) ((([(<any_Vx_jh_zh_aa_noSlide> jh)] | [(jh <any_Vx_jh_zh_aa_noSlide>)]) ([(<any_Cx_jh_zh_bl> jh)] | [(jh <any_Cx_jh_zh_bl>)])) (aa | ((<any_Vx_jh_zh_aa_noSlide> jh) | (jh <any_Vx_jh_zh_aa_noSlide>)))) (([(<any_Cx_jh_aa_hh> hh)] | [(hh <any_Cx_jh_aa_hh>)]) ([(<any_Vx_jh_aa_hh> hh)] | [(hh <any_Vx_jh_aa_hh>)]) sil))
frate, target rule = 80 public <blah> = (((sil [((d <any_Cx_b_d_hh>) | (<any_Cx_b_d_hh> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil hh (sil [((d <any_Cx_b_d_hh>) | (<any_Cx_b_d_hh> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_sh_hh_d_b_l> sh)] | [(sh <any_Cx_sh_hh_d_b_l>)]) (b | ((<any_Cx_sh_hh_d_b_l> sh) | (sh <any_Cx_sh_hh_d_b_l>)))) (([(<any_Cx_sh_sh_l_b> sh)] | [(sh <any_Cx_sh_sh_l_b>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_sh_sh_aa_noSlide> sh)] | [(sh <any_Vx_sh_sh_aa_noSlide>)]) ([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)])) (aa | ((<any_Vx_sh_sh_aa_noSlide> sh) | (sh <any_Vx_sh_sh_aa_noSlide>)))) (([(<any_Cx_sh_aa_p> p)] | [(p <any_Cx_sh_aa_p>)]) ([(<any_Vx_sh_aa_p> p)] | [(p <any_Vx_sh_aa_p>)]) sil))
Running scan for frate = 72
Considering guard sh with value 1 for b ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 2 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for aa ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 72 public <blah> = (((sil [((d <any_Cx_b_d_hh>) | (<any_Cx_b_d_hh> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]) | (sil hh (sil [((d <any_Cx_b_d_hh>) | (<any_Cx_b_d_hh> d))] [((d <any_vowel_noSlide>) | (<any_vowel_noSlide> d))]))) (([(<any_Cx_sh_hh_d_b_l> sh)] | [(sh <any_Cx_sh_hh_d_b_l>)]) (b | ((<any_Cx_sh_hh_d_b_l> sh) | (sh <any_Cx_sh_hh_d_b_l>)))) (([(<any_Cx_sh_sh_l_b> sh)] | [(sh <any_Cx_sh_sh_l_b>)]) (l | ((<any_Cx_sh_sh_l> sh) | (sh <any_Cx_sh_sh_l>)))) ((([(<any_Vx_sh_sh_aa_noSlide> sh)] | [(sh <any_Vx_sh_sh_aa_noSlide>)]) ([(<any_Cx_sh_sh_l> sh)] | [(sh <any_Cx_sh_sh_l>)])) (aa | ((<any_Vx_sh_sh_aa_noSlide> sh) | (sh <any_Vx_sh_sh_aa_noSlide>)))) (([(<any_Cx_sh_aa_n> n)] | [(n <any_Cx_sh_aa_n>)]) ([(<any_Vx_sh_aa_n> n)] | [(n <any_Vx_sh_aa_n>)]) sil))

results =
{72 [{sil 0 20} {bl 21 31} {aa 32 55} {sil 56 70}]}
{80 [{sil 0 22} {bl 23 35} {aa 36 61} {sil 62 75}]}
{91 [{sil 0 26} {bl 27 39} {aa 40 70} {sil 71 106}]}
{105 [{sil 0 31} {bl 32 46} {aa 47 82} {sil 83 123}]}
{125 [{sil 0 35} {bl 36 53} {aa 54 94} {sil 95 144}]}

normalised results =
{72 [{sil 0 20} {bl 29 43} {aa 44 76} {sil 78 97}]}
{80 [{sil 0 22} {bl 29 44} {aa 45 76} {sil 78 94}]}
{91 [{sil 0 26} {bl 30 43} {aa 44 77} {sil 78 116}]}
{105 [{sil 0 31} {bl 30 44} {aa 45 78} {sil 79 117}]}
{125 [{sil 0 35} {bl 29 42} {aa 43 75} {sil 76 115}]}

ruleAligned = [{{bl 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{aa 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {bl 29 43} {aa 44 76} {sil 78 78}]}
{80 [{sil 0 0} {bl 29 44} {aa 45 76} {sil 78 78}]}
{91 [{sil 0 0} {bl 30 43} {aa 44 77} {sil 78 78}]}
{105 [{sil 0 0} {bl 30 44} {aa 45 78} {sil 79 79}]}
{125 [{sil 0 0} {bl 29 42} {aa 43 75} {sil 76 76}]}

timeAligned = [{{bl 29 43} [{0 1} {1 1} {4 1} {2 1} {3 1}]} {{aa 44 76} [{0 2} {2 2} {4 2} {1 2} {3 2}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 42
combinedVerdict    = [{bl 0} {aa 0}]
ruleAlignedVerdict = [{bl 0} {aa 0}]

score->
+2 for bl
+2 for aa
score<-: 9

results =
{72 [{sil 0 19} {b 20 25} {l 26 31} {aa 32 55} {sil 56 70}]}
{80 [{sil 0 22} {b 23 28} {l 29 35} {aa 36 61} {sil 62 75}]}
{91 [{sil 0 14} {b 15 31} {l 32 40} {aa 41 70} {sil 71 106}]}
{105 [{sil 0 17} {b 18 36} {l 37 46} {aa 47 82} {sil 83 123}]}
{125 [{sil 0 35} {b 36 41} {l 42 53} {aa 54 94} {sil 95 144}]}

normalised results =
{72 [{sil 0 19} {b 28 35} {l 36 43} {aa 44 76} {sil 78 97}]}
{80 [{sil 0 22} {b 29 35} {l 36 44} {aa 45 76} {sil 78 94}]}
{91 [{sil 0 14} {b 16 34} {l 35 44} {aa 45 77} {sil 78 116}]}
{105 [{sil 0 17} {b 17 34} {l 35 44} {aa 45 78} {sil 79 117}]}
{125 [{sil 0 35} {b 29 33} {l 34 42} {aa 43 75} {sil 76 115}]}

ruleAligned = [{{b 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{l 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{aa 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {b 28 35} {l 36 43} {aa 44 76} {sil 78 78}]}
{80 [{sil 0 0} {b 29 35} {l 36 44} {aa 45 76} {sil 78 78}]}
{91 [{sil 0 0} {b 16 34} {l 35 44} {aa 45 77} {sil 78 78}]}
{105 [{sil 0 0} {b 17 34} {l 35 44} {aa 45 78} {sil 79 79}]}
{125 [{sil 0 0} {b 29 33} {l 34 42} {aa 43 75} {sil 76 76}]}

timeAligned = [{{b 28 34} [{0 1} {2 1} {3 1} {1 1} {4 1}]} {{l 35 44} [{2 2} {3 2} {4 2} {0 2} {1 2}]} {{aa 45 76} [{0 3} {1 3} {2 3} {3 3} {4 3}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 33
i, iTime, newITime, timeStartFrom = 2 1 2 42
combinedVerdict    = [{b 0} {l 0} {aa 0}]
ruleAlignedVerdict = [{b 0} {l 0} {aa 0}]

score->
+2 for b
+2 for l
+2 for aa
score<-: 11
testPronounce b good l good aa good
publish->
phonsToAlphas = [{[b] b} {[l] l} {[aa] ah}]
getVerdict<-:new {b [b] 0}
getVerdict<-:new {l [l] 0}
getVerdict<-:new {ah [aa] 0}
lettersVerdicts = [{b [b] 0} {l [l] 0} {ah [aa] 0}]
publish<-
{
  "word": "blah",
  "results": [
    {
      "letters": "b",
      "phonemes": "b",
      "verdict": "good"
    },
    {
      "letters": "l",
      "phonemes": "l",
      "verdict": "good"
    },
    {
      "letters": "ah",
      "phonemes": "ɑ",
      "verdict": "good"
    }
  ],
  "err": null
}
