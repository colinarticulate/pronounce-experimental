Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_2fb4643a-ed9d-4110-88ab-de287b9ca22d audiofile /Users/test/go/src/Phonemes/audio_clips/they1_96.wav word they dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  1.514312



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.22 0.86 1.08

 start3, duration3, end3 =  0.22 0.7999999999999999 1.02

 Initial start, duration, end =  0.12 0.9600000000000001 1.08

 Cut at: start, duration =  0.12 1.3743120000000002     guard_end =  1.4943120000000003 

Running scan for frate = 125
Considering guard ch with value 1.7999999999999998 for dh ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 1.7999999999999998 for ey ...
candidateGuards = map[ch:true]
Picking guard, ch

frate, target rule = 125 public <they> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ch_p_z_dh> ch)] | [(ch <any_Cx_ch_p_z_dh>)]) (dh | t | ((<any_Cx_ch_p_z_dh> ch) | (ch <any_Cx_ch_p_z_dh>)))) ((([(<any_Vx_ch_ch_ey_noSlide> ch)] | [(ch <any_Vx_ch_ch_ey_noSlide>)]) ([(<any_Cx_ch_ch_dh> ch)] | [(ch <any_Cx_ch_ch_dh>)])) (ey | ((<any_Vx_ch_ch_ey_noSlide> ch) | (ch <any_Vx_ch_ch_ey_noSlide>)))) (([(<any_Cx_ch_ey_hh> hh)] | [(hh <any_Cx_ch_ey_hh>)]) ([(<any_Vx_ch_ey_hh> hh)] | [(hh <any_Vx_ch_ey_hh>)]) sil))
Running scan for frate = 105
Considering guard ch with value 1.7999999999999998 for dh ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 1.7999999999999998 for ey ...
candidateGuards = map[ch:true]
Picking guard, ch

frate, target rule = 105 public <they> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ch_p_z_dh> ch)] | [(ch <any_Cx_ch_p_z_dh>)]) (dh | t | ((<any_Cx_ch_p_z_dh> ch) | (ch <any_Cx_ch_p_z_dh>)))) ((([(<any_Vx_ch_ch_ey_noSlide> ch)] | [(ch <any_Vx_ch_ch_ey_noSlide>)]) ([(<any_Cx_ch_ch_dh> ch)] | [(ch <any_Cx_ch_ch_dh>)])) (ey | ((<any_Vx_ch_ch_ey_noSlide> ch) | (ch <any_Vx_ch_ch_ey_noSlide>)))) (([(<any_Cx_ch_ey_z> z)] | [(z <any_Cx_ch_ey_z>)]) ([(<any_Vx_ch_ey_z> z)] | [(z <any_Vx_ch_ey_z>)]) sil))
Running scan for frate = 91
Considering guard ch with value 1.7999999999999998 for dh ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 1.7999999999999998 for ey ...
candidateGuards = map[ch:true]
Picking guard, ch

frate, target rule = 91 public <they> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ch_p_z_dh> ch)] | [(ch <any_Cx_ch_p_z_dh>)]) (dh | t | ((<any_Cx_ch_p_z_dh> ch) | (ch <any_Cx_ch_p_z_dh>)))) ((([(<any_Vx_ch_ch_ey_noSlide> ch)] | [(ch <any_Vx_ch_ch_ey_noSlide>)]) ([(<any_Cx_ch_ch_dh> ch)] | [(ch <any_Cx_ch_ch_dh>)])) (ey | ((<any_Vx_ch_ch_ey_noSlide> ch) | (ch <any_Vx_ch_ch_ey_noSlide>)))) (([(<any_Cx_ch_ey_f> f)] | [(f <any_Cx_ch_ey_f>)]) ([(<any_Vx_ch_ey_f> f)] | [(f <any_Vx_ch_ey_f>)]) sil))
Running scan for frate = 80
Considering guard ch with value 1.7999999999999998 for dh ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 1.7999999999999998 for ey ...
candidateGuards = map[ch:true]
Picking guard, ch

frate, target rule = 80 public <they> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ch_p_z_dh> ch)] | [(ch <any_Cx_ch_p_z_dh>)]) (dh | t | ((<any_Cx_ch_p_z_dh> ch) | (ch <any_Cx_ch_p_z_dh>)))) ((([(<any_Vx_ch_ch_ey_noSlide> ch)] | [(ch <any_Vx_ch_ch_ey_noSlide>)]) ([(<any_Cx_ch_ch_dh> ch)] | [(ch <any_Cx_ch_ch_dh>)])) (ey | ((<any_Vx_ch_ch_ey_noSlide> ch) | (ch <any_Vx_ch_ch_ey_noSlide>)))) (([(<any_Cx_ch_ey_f> f)] | [(f <any_Cx_ch_ey_f>)]) ([(<any_Vx_ch_ey_f> f)] | [(f <any_Vx_ch_ey_f>)]) sil))
Running scan for frate = 72
Considering guard ch with value 1.7999999999999998 for dh ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 1.7999999999999998 for ey ...
candidateGuards = map[ch:true]
Picking guard, ch

frate, target rule = 72 public <they> = (((sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_dh_z_p>) | (<any_Cx_dh_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ch_p_z_dh> ch)] | [(ch <any_Cx_ch_p_z_dh>)]) (dh | t | ((<any_Cx_ch_p_z_dh> ch) | (ch <any_Cx_ch_p_z_dh>)))) ((([(<any_Vx_ch_ch_ey_noSlide> ch)] | [(ch <any_Vx_ch_ch_ey_noSlide>)]) ([(<any_Cx_ch_ch_dh> ch)] | [(ch <any_Cx_ch_ch_dh>)])) (ey | ((<any_Vx_ch_ch_ey_noSlide> ch) | (ch <any_Vx_ch_ch_ey_noSlide>)))) (([(<any_Cx_ch_ey_w> w)] | [(w <any_Cx_ch_ey_w>)]) ([(<any_Vx_ch_ey_w> w)] | [(w <any_Vx_ch_ey_w>)]) sil))

results =
{72 [{sil 0 10} {dh 11 24} {ey 25 59} {sil 60 71}]}
{80 [{sil 0 11} {dh 12 27} {ey 28 66} {sil 67 75}]}
{91 [{sil 0 15} {dh 16 30} {ey 31 75} {sil 76 123}]}
{105 [{sil 0 18} {dh 19 35} {ey 36 87} {sil 88 143}]}
{125 [{sil 0 18} {dh 19 40} {ey 41 100} {sil 101 168}]}

normalised results =
{72 [{sil 0 10} {dh 15 33} {ey 35 82} {sil 83 99}]}
{80 [{sil 0 11} {dh 15 34} {ey 35 83} {sil 84 94}]}
{91 [{sil 0 15} {dh 18 33} {ey 34 82} {sil 84 135}]}
{105 [{sil 0 18} {dh 18 33} {ey 34 83} {sil 84 136}]}
{125 [{sil 0 18} {dh 15 32} {ey 33 80} {sil 81 134}]}

ruleAligned = [{{dh 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ey 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {dh 15 33} {ey 35 82} {sil 83 83}]}
{80 [{sil 0 0} {dh 15 34} {ey 35 83} {sil 84 84}]}
{91 [{sil 0 0} {dh 18 33} {ey 34 82} {sil 84 84}]}
{105 [{sil 0 0} {dh 18 33} {ey 34 83} {sil 84 84}]}
{125 [{sil 0 0} {dh 15 32} {ey 33 80} {sil 81 81}]}

timeAligned = [{{dh 15 33} [{0 1} {1 1} {4 1} {2 1} {3 1}]} {{ey 34 82} [{2 2} {3 2} {4 2} {0 2} {1 2}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 32
combinedVerdict    = [{dh 0} {ey 0}]
ruleAlignedVerdict = [{dh 0} {ey 0}]

score->
+2 for dh
+2 for ey
score<-: 9
testPronounce dh good ey good
publish->
phonsToAlphas = [{[dh] th} {[ey] ey}]
getVerdict<-:new {th [dh] 0}
getVerdict<-:new {ey [ey] 0}
lettersVerdicts = [{th [dh] 0} {ey [ey] 0}]
publish<-
{
  "word": "they",
  "results": [
    {
      "letters": "th",
      "phonemes": "ð",
      "verdict": "good"
    },
    {
      "letters": "ey",
      "phonemes": "eɪ",
      "verdict": "good"
    }
  ],
  "err": null
}
