Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_1fc83260-5dd2-41c5-9a28-bb18a2a8342c audiofile /Users/test/go/src/Phonemes/audio_clips/live1_hossein.wav word live dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  3.007625



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.86 0.58 1.44

 start3, duration3, end3 =  0.86 0.44000000000000006 1.3

 Initial start, duration, end =  0.76 0.6799999999999999 1.44

 Cut at: start, duration =  0.76 1.13     guard_end =  1.89 

Running scan for frate = 125
Running scan for frate = 125
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 4.2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 1 for v ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 4.2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 125 public <live> = (((sil [((w <any_Cx_l_w_p>) | (<any_Cx_l_w_p> w))] [((w <any_vowel_noSlide>) | (<any_vowel_noSlide> w))]) | (sil p (sil [((w <any_Cx_l_w_p>) | (<any_Cx_l_w_p> w))] [((w <any_vowel_noSlide>) | (<any_vowel_noSlide> w))]))) (([(<any_Cx_sh_p_w_l> sh)] | [(sh <any_Cx_sh_p_w_l>)]) (l | ((<any_Cx_sh_p_w_l> sh) | (sh <any_Cx_sh_p_w_l>)))) ((([(<any_Vx_sh_sh_ay_noSlide> sh)] | [(sh <any_Vx_sh_sh_ay_noSlide>)]) ([(<any_Cx_sh_sh_v_l> sh)] | [(sh <any_Cx_sh_sh_v_l>)])) (ay | ((<any_Vx_sh_sh_ay_noSlide> sh) | (sh <any_Vx_sh_sh_ay_noSlide>)))) (([(<any_Cx_zh_sh_v> zh)] | [(zh <any_Cx_zh_sh_v>)]) (v | ((<any_Cx_zh_sh_v> zh) | (zh <any_Cx_zh_sh_v>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_zh_v_d> d)] | [(d <any_Cx_zh_v_d>)]) sil))
Considering guard zh with value 4 for v ...
candidateGuards = map[zh:true]
Picking guard, zh

Running scan for frate = 105
frate, target rule = 125 public <live> = (((sil [((z <any_Cx_l_z_p>) | (<any_Cx_l_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_l_z_p>) | (<any_Cx_l_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_l> sh)] | [(sh <any_Cx_sh_p_z_l>)]) (l | ((<any_Cx_sh_p_z_l> sh) | (sh <any_Cx_sh_p_z_l>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_v_l> sh)] | [(sh <any_Cx_sh_sh_v_l>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_zh_sh_v> zh)] | [(zh <any_Cx_zh_sh_v>)]) (v | ((<any_Cx_zh_sh_v> zh) | (zh <any_Cx_zh_sh_v>)))) (([(<any_vowel_noSlide> z)] | [(z <any_vowel_noSlide>)]) ([(<any_Cx_zh_v_z> z)] | [(z <any_Cx_zh_v_z>)]) sil))
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 4.2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 105
Considering guard zh with value 1 for v ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 105 public <live> = (((sil [((m <any_Cx_l_m_p>) | (<any_Cx_l_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]) | (sil p (sil [((m <any_Cx_l_m_p>) | (<any_Cx_l_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]))) (([(<any_Cx_sh_p_m_l> sh)] | [(sh <any_Cx_sh_p_m_l>)]) (l | ((<any_Cx_sh_p_m_l> sh) | (sh <any_Cx_sh_p_m_l>)))) ((([(<any_Vx_sh_sh_ay_noSlide> sh)] | [(sh <any_Vx_sh_sh_ay_noSlide>)]) ([(<any_Cx_sh_sh_v_l> sh)] | [(sh <any_Cx_sh_sh_v_l>)])) (ay | ((<any_Vx_sh_sh_ay_noSlide> sh) | (sh <any_Vx_sh_sh_ay_noSlide>)))) (([(<any_Cx_zh_sh_v> zh)] | [(zh <any_Cx_zh_sh_v>)]) (v | ((<any_Cx_zh_sh_v> zh) | (zh <any_Cx_zh_sh_v>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_zh_v_m> m)] | [(m <any_Cx_zh_v_m>)]) sil))
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 4.2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 4 for v ...
candidateGuards = map[zh:true]
Picking guard, zh

Running scan for frate = 91
frate, target rule = 105 public <live> = (((sil [((v <any_Cx_l_v_p>) | (<any_Cx_l_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]) | (sil p (sil [((v <any_Cx_l_v_p>) | (<any_Cx_l_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]))) (([(<any_Cx_sh_p_v_l> sh)] | [(sh <any_Cx_sh_p_v_l>)]) (l | ((<any_Cx_sh_p_v_l> sh) | (sh <any_Cx_sh_p_v_l>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_v_l> sh)] | [(sh <any_Cx_sh_sh_v_l>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_zh_sh_v> zh)] | [(zh <any_Cx_zh_sh_v>)]) (v | ((<any_Cx_zh_sh_v> zh) | (zh <any_Cx_zh_sh_v>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_zh_v_m> m)] | [(m <any_Cx_zh_v_m>)]) sil))
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 91
Considering guard sh with value 4.2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 1 for v ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 4.2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 91 public <live> = (((sil [((m <any_Cx_l_m_p>) | (<any_Cx_l_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]) | (sil p (sil [((m <any_Cx_l_m_p>) | (<any_Cx_l_m_p> m))] [((m <any_vowel_noSlide>) | (<any_vowel_noSlide> m))]))) (([(<any_Cx_sh_p_m_l> sh)] | [(sh <any_Cx_sh_p_m_l>)]) (l | ((<any_Cx_sh_p_m_l> sh) | (sh <any_Cx_sh_p_m_l>)))) ((([(<any_Vx_sh_sh_ay_noSlide> sh)] | [(sh <any_Vx_sh_sh_ay_noSlide>)]) ([(<any_Cx_sh_sh_v_l> sh)] | [(sh <any_Cx_sh_sh_v_l>)])) (ay | ((<any_Vx_sh_sh_ay_noSlide> sh) | (sh <any_Vx_sh_sh_ay_noSlide>)))) (([(<any_Cx_zh_sh_v> zh)] | [(zh <any_Cx_zh_sh_v>)]) (v | ((<any_Cx_zh_sh_v> zh) | (zh <any_Cx_zh_sh_v>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_zh_v_m> m)] | [(m <any_Cx_zh_v_m>)]) sil))
Considering guard zh with value 4 for v ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 91 public <live> = (((sil [((z <any_Cx_l_z_p>) | (<any_Cx_l_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_l_z_p>) | (<any_Cx_l_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_sh_p_z_l> sh)] | [(sh <any_Cx_sh_p_z_l>)]) (l | ((<any_Cx_sh_p_z_l> sh) | (sh <any_Cx_sh_p_z_l>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_v_l> sh)] | [(sh <any_Cx_sh_sh_v_l>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_zh_sh_v> zh)] | [(zh <any_Cx_zh_sh_v>)]) (v | ((<any_Cx_zh_sh_v> zh) | (zh <any_Cx_zh_sh_v>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_zh_v_d> d)] | [(d <any_Cx_zh_v_d>)]) sil))
Running scan for frate = 80
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 80
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 4.2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 4.2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 1 for v ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard zh with value 4 for v ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 80 public <live> = (((sil [((w <any_Cx_l_w_p>) | (<any_Cx_l_w_p> w))] [((w <any_vowel_noSlide>) | (<any_vowel_noSlide> w))]) | (sil p (sil [((w <any_Cx_l_w_p>) | (<any_Cx_l_w_p> w))] [((w <any_vowel_noSlide>) | (<any_vowel_noSlide> w))]))) (([(<any_Cx_sh_p_w_l> sh)] | [(sh <any_Cx_sh_p_w_l>)]) (l | ((<any_Cx_sh_p_w_l> sh) | (sh <any_Cx_sh_p_w_l>)))) ((([(<any_Vx_sh_sh_ay_noSlide> sh)] | [(sh <any_Vx_sh_sh_ay_noSlide>)]) ([(<any_Cx_sh_sh_v_l> sh)] | [(sh <any_Cx_sh_sh_v_l>)])) (ay | ((<any_Vx_sh_sh_ay_noSlide> sh) | (sh <any_Vx_sh_sh_ay_noSlide>)))) (([(<any_Cx_zh_sh_v> zh)] | [(zh <any_Cx_zh_sh_v>)]) (v | ((<any_Cx_zh_sh_v> zh) | (zh <any_Cx_zh_sh_v>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_zh_v_d> d)] | [(d <any_Cx_zh_v_d>)]) sil))
Running scan for frate = 72
frate, target rule = 80 public <live> = (((sil [((r <any_Cx_l_r_p>) | (<any_Cx_l_r_p> r))] [((r <any_vowel_noSlide>) | (<any_vowel_noSlide> r))]) | (sil p (sil [((r <any_Cx_l_r_p>) | (<any_Cx_l_r_p> r))] [((r <any_vowel_noSlide>) | (<any_vowel_noSlide> r))]))) (([(<any_Cx_sh_p_r_l> sh)] | [(sh <any_Cx_sh_p_r_l>)]) (l | ((<any_Cx_sh_p_r_l> sh) | (sh <any_Cx_sh_p_r_l>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_v_l> sh)] | [(sh <any_Cx_sh_sh_v_l>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_zh_sh_v> zh)] | [(zh <any_Cx_zh_sh_v>)]) (v | ((<any_Cx_zh_sh_v> zh) | (zh <any_Cx_zh_sh_v>)))) (([(<any_vowel_noSlide> z)] | [(z <any_vowel_noSlide>)]) ([(<any_Cx_zh_v_z> z)] | [(z <any_Cx_zh_v_z>)]) sil))
Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Running scan for frate = 72
Considering guard sh with value 4.2 for ay ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard sh with value 1 for l ...
candidateGuards = map[sh:true]
Picking guard, sh

Considering guard zh with value 1 for v ...
candidateGuards = map[zh:true]
Picking guard, zh

Considering guard sh with value 4.2 for ih ...
candidateGuards = map[sh:true]
Picking guard, sh

frate, target rule = 72 public <live> = (((sil [((r <any_Cx_l_r_p>) | (<any_Cx_l_r_p> r))] [((r <any_vowel_noSlide>) | (<any_vowel_noSlide> r))]) | (sil p (sil [((r <any_Cx_l_r_p>) | (<any_Cx_l_r_p> r))] [((r <any_vowel_noSlide>) | (<any_vowel_noSlide> r))]))) (([(<any_Cx_sh_p_r_l> sh)] | [(sh <any_Cx_sh_p_r_l>)]) (l | ((<any_Cx_sh_p_r_l> sh) | (sh <any_Cx_sh_p_r_l>)))) ((([(<any_Vx_sh_sh_ay_noSlide> sh)] | [(sh <any_Vx_sh_sh_ay_noSlide>)]) ([(<any_Cx_sh_sh_v_l> sh)] | [(sh <any_Cx_sh_sh_v_l>)])) (ay | ((<any_Vx_sh_sh_ay_noSlide> sh) | (sh <any_Vx_sh_sh_ay_noSlide>)))) (([(<any_Cx_zh_sh_v> zh)] | [(zh <any_Cx_zh_sh_v>)]) (v | ((<any_Cx_zh_sh_v> zh) | (zh <any_Cx_zh_sh_v>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_zh_v_n> n)] | [(n <any_Cx_zh_v_n>)]) sil))
Considering guard zh with value 4 for v ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 72 public <live> = (((sil [((r <any_Cx_l_r_p>) | (<any_Cx_l_r_p> r))] [((r <any_vowel_noSlide>) | (<any_vowel_noSlide> r))]) | (sil p (sil [((r <any_Cx_l_r_p>) | (<any_Cx_l_r_p> r))] [((r <any_vowel_noSlide>) | (<any_vowel_noSlide> r))]))) (([(<any_Cx_sh_p_r_l> sh)] | [(sh <any_Cx_sh_p_r_l>)]) (l | ((<any_Cx_sh_p_r_l> sh) | (sh <any_Cx_sh_p_r_l>)))) ((([(<any_Vx_sh_sh_ih_noSlide> sh)] | [(sh <any_Vx_sh_sh_ih_noSlide>)]) ([(<any_Cx_sh_sh_v_l> sh)] | [(sh <any_Cx_sh_sh_v_l>)])) (ih | ((<any_Vx_sh_sh_ih_noSlide> sh) | (sh <any_Vx_sh_sh_ih_noSlide>)))) (([(<any_Cx_zh_sh_v> zh)] | [(zh <any_Cx_zh_sh_v>)]) (v | ((<any_Cx_zh_sh_v> zh) | (zh <any_Cx_zh_sh_v>)))) (([(<any_vowel_noSlide> d)] | [(d <any_vowel_noSlide>)]) ([(<any_Cx_zh_v_d> d)] | [(d <any_Cx_zh_v_d>)]) sil))

results =
{72 [{sil 0 13} {l 14 17} {ih 18 26} {v 27 40} {sil 41 71}]}
{80 [{sil 0 14} {l 15 19} {ih 20 29} {v 30 45} {sil 46 77}]}
{91 [{sil 0 15} {l 16 21} {ih 22 34} {v 35 51} {sil 52 101}]}
{105 [{sil 0 18} {l 19 25} {ih 26 39} {v 40 59} {sil 60 117}]}
{125 [{sil 0 21} {l 22 28} {ih 29 45} {v 46 67} {sil 68 138}]}

normalised results =
{72 [{sil 0 13} {l 19 24} {ih 25 36} {v 38 56} {sil 57 99}]}
{80 [{sil 0 14} {l 19 24} {ih 25 36} {v 38 56} {sil 58 96}]}
{91 [{sil 0 15} {l 18 23} {ih 24 37} {v 38 56} {sil 57 111}]}
{105 [{sil 0 18} {l 18 24} {ih 25 37} {v 38 56} {sil 57 111}]}
{125 [{sil 0 21} {l 18 22} {ih 23 36} {v 37 54} {sil 54 110}]}

ruleAligned = [{{l 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ih 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{v 0} [{0 3} {1 3} {2 3} {3 3} {4 3}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {l 19 24} {ih 25 36} {v 38 56} {sil 57 57}]}
{80 [{sil 0 0} {l 19 24} {ih 25 36} {v 38 56} {sil 58 58}]}
{91 [{sil 0 0} {l 18 23} {ih 24 37} {v 38 56} {sil 57 57}]}
{105 [{sil 0 0} {l 18 24} {ih 25 37} {v 38 56} {sil 57 57}]}
{125 [{sil 0 0} {l 18 22} {ih 23 36} {v 37 54} {sil 54 54}]}

timeAligned = [{{l 18 24} [{2 1} {3 1} {4 1} {0 1} {1 1}]} {{ih 25 36} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{v 38 56} [{0 3} {1 3} {2 3} {3 3} {4 3}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 22
i, iTime, newITime, timeStartFrom = 2 1 2 36
combinedVerdict    = [{l 0} {ih 0} {v 0}]
ruleAlignedVerdict = [{l 0} {ih 0} {v 0}]

score->
+2 for l
+2 for ih
+2 for v
score<-: 11

results =
{72 [{sil 0 13} {l 14 17} {ay 18 27} {v 28 40} {sil 41 71}]}
{80 [{sil 0 14} {l 15 19} {ay 20 30} {v 31 45} {sil 46 77}]}
{91 [{sil 0 15} {l 16 22} {ay 23 34} {v 35 51} {sil 52 101}]}
{105 [{sil 0 18} {l 19 25} {iy 26 36} {sh 37 39} {v 40 59} {sil 60 117}]}
{125 [{sil 0 21} {l 22 28} {iy 29 41} {sh 42 44} {v 45 67} {sil 68 138}]}

normalised results =
{72 [{sil 0 13} {l 19 24} {ay 25 38} {v 39 56} {sil 57 99}]}
{80 [{sil 0 14} {l 19 24} {ay 25 38} {v 39 56} {sil 58 96}]}
{91 [{sil 0 15} {l 18 24} {ay 25 37} {v 38 56} {sil 57 111}]}
{105 [{sil 0 18} {l 18 24} {iy 25 34} {sh 35 35} {v 38 56} {sil 57 111}]}
{125 [{sil 0 21} {l 18 22} {iy 23 33} {sh 34 34} {v 36 54} {sil 54 110}]}

ruleAligned = [{{l 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{ay 1} [{0 2} {1 2} {2 2}]} {{v 0} [{0 3} {1 3} {2 3} {3 4} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {l 19 24} {ay 25 38} {v 39 56} {sil 57 57}]}
{80 [{sil 0 0} {l 19 24} {ay 25 38} {v 39 56} {sil 58 58}]}
{91 [{sil 0 0} {l 18 24} {ay 25 37} {v 38 56} {sil 57 57}]}
{105 [{sil 0 0} {l 18 24} {iy 25 34} {sh 35 35} {v 38 56} {sil 57 57}]}
{125 [{sil 0 0} {l 18 22} {iy 23 33} {sh 34 34} {v 36 54} {sil 54 54}]}

timeAligned = [{{l 18 24} [{2 1} {3 1} {4 1} {0 1} {1 1}]} {{ay 25 37} [{0 2} {1 2} {2 2}]} {{v 38 56} [{2 3} {3 4} {4 4} {0 3} {1 3}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 22
i, iTime, newITime, timeStartFrom = 2 1 2 37
combinedVerdict    = [{l 0} {ay 1} {v 0}]
ruleAlignedVerdict = [{l 0} {ay 1} {v 0}]

score->
+2 for l
+1 for ay
+2 for v
score<-: 10
testPronounce l good ih good v good
publish->
phonsToAlphas = [{[l] l} {[ih] i} {[v] ve}]
getVerdict<-:new {l [l] 0}
getVerdict<-:new {i [ih] 0}
getVerdict<-:new {ve [v] 0}
lettersVerdicts = [{l [l] 0} {i [ih] 0} {ve [v] 0}]
publish<-
{
  "word": "live",
  "results": [
    {
      "letters": "l",
      "phonemes": "l",
      "verdict": "good"
    },
    {
      "letters": "i",
      "phonemes": "ɪ",
      "verdict": "good"
    },
    {
      "letters": "ve",
      "phonemes": "v",
      "verdict": "good"
    }
  ],
  "err": null
}
