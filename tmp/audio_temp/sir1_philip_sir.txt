Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_5b2617ef-7752-4051-96fa-3c406b847125 audiofile /Users/test/go/src/Phonemes/audio_clips/sir1_philip.wav word sir dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  1.962312



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.86 0.64 1.5

 start3, duration3, end3 =  0.86 0.58 1.44

 Initial start, duration, end =  0.76 0.74 1.5

 Cut at: start, duration =  0.76 1.19     guard_end =  1.95 

Running scan for frate = 125
Considering guard ng with value 1.7999999999999998 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 1.7999999999999998 for er ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 125 public <sir> = (((sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]) | (sil p (sil [((z <any_Cx_s_z_p>) | (<any_Cx_s_z_p> z))] [((z <any_vowel_noSlide>) | (<any_vowel_noSlide> z))]))) (([(<any_Cx_ng_p_z_s> ng)] | [(ng <any_Cx_ng_p_z_s>)]) (s | z | ((<any_Cx_ng_p_z_s> ng) | (ng <any_Cx_ng_p_z_s>)))) ((([(<any_Vx_ng_ng_er_noSlide> ng)] | [(ng <any_Vx_ng_ng_er_noSlide>)]) ([(<any_Cx_ng_ng_s> ng)] | [(ng <any_Cx_ng_ng_s>)])) (er | ((<any_Vx_ng_ng_er_noSlide> ng) | (ng <any_Vx_ng_ng_er_noSlide>)))) (([(<any_Cx_ng_er_r> r)] | [(r <any_Cx_ng_er_r>)]) ([(<any_Vx_ng_er_r> r)] | [(r <any_Vx_ng_er_r>)]) sil))
Running scan for frate = 105
Considering guard ng with value 1.7999999999999998 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 1.7999999999999998 for er ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 105 public <sir> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_ng_p_ch_s> ng)] | [(ng <any_Cx_ng_p_ch_s>)]) (s | z | ((<any_Cx_ng_p_ch_s> ng) | (ng <any_Cx_ng_p_ch_s>)))) ((([(<any_Vx_ng_ng_er_noSlide> ng)] | [(ng <any_Vx_ng_ng_er_noSlide>)]) ([(<any_Cx_ng_ng_s> ng)] | [(ng <any_Cx_ng_ng_s>)])) (er | ((<any_Vx_ng_ng_er_noSlide> ng) | (ng <any_Vx_ng_ng_er_noSlide>)))) (([(<any_Cx_ng_er_d> d)] | [(d <any_Cx_ng_er_d>)]) ([(<any_Vx_ng_er_d> d)] | [(d <any_Vx_ng_er_d>)]) sil))
Running scan for frate = 91
Considering guard ng with value 1.7999999999999998 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 1.7999999999999998 for er ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 91 public <sir> = (((sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil p (sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_ng_p_t_s> ng)] | [(ng <any_Cx_ng_p_t_s>)]) (s | z | ((<any_Cx_ng_p_t_s> ng) | (ng <any_Cx_ng_p_t_s>)))) ((([(<any_Vx_ng_ng_er_noSlide> ng)] | [(ng <any_Vx_ng_ng_er_noSlide>)]) ([(<any_Cx_ng_ng_s> ng)] | [(ng <any_Cx_ng_ng_s>)])) (er | ((<any_Vx_ng_ng_er_noSlide> ng) | (ng <any_Vx_ng_ng_er_noSlide>)))) (([(<any_Cx_ng_er_thr> thr)] | [(thr <any_Cx_ng_er_thr>)]) ([(<any_Vx_ng_er_thr> thr)] | [(thr <any_Vx_ng_er_thr>)]) sil))
Running scan for frate = 80
Considering guard ng with value 1.7999999999999998 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 1.7999999999999998 for er ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 80 public <sir> = (((sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]) | (sil p (sil [((t <any_Cx_s_t_p>) | (<any_Cx_s_t_p> t))] [((t <any_vowel_noSlide>) | (<any_vowel_noSlide> t))]))) (([(<any_Cx_ng_p_t_s> ng)] | [(ng <any_Cx_ng_p_t_s>)]) (s | z | ((<any_Cx_ng_p_t_s> ng) | (ng <any_Cx_ng_p_t_s>)))) ((([(<any_Vx_ng_ng_er_noSlide> ng)] | [(ng <any_Vx_ng_ng_er_noSlide>)]) ([(<any_Cx_ng_ng_s> ng)] | [(ng <any_Cx_ng_ng_s>)])) (er | ((<any_Vx_ng_ng_er_noSlide> ng) | (ng <any_Vx_ng_ng_er_noSlide>)))) (([(<any_Cx_ng_er_thr> thr)] | [(thr <any_Cx_ng_er_thr>)]) ([(<any_Vx_ng_er_thr> thr)] | [(thr <any_Vx_ng_er_thr>)]) sil))
Running scan for frate = 72
Considering guard ng with value 1.7999999999999998 for s ...
candidateGuards = map[ng:true]
Picking guard, ng

Considering guard ng with value 1.7999999999999998 for er ...
candidateGuards = map[ng:true]
Picking guard, ng

frate, target rule = 72 public <sir> = (((sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]) | (sil p (sil [((ch <any_Cx_s_ch_p>) | (<any_Cx_s_ch_p> ch))] [((ch <any_vowel_noSlide>) | (<any_vowel_noSlide> ch))]))) (([(<any_Cx_ng_p_ch_s> ng)] | [(ng <any_Cx_ng_p_ch_s>)]) (s | z | ((<any_Cx_ng_p_ch_s> ng) | (ng <any_Cx_ng_p_ch_s>)))) ((([(<any_Vx_ng_ng_er_noSlide> ng)] | [(ng <any_Vx_ng_ng_er_noSlide>)]) ([(<any_Cx_ng_ng_s> ng)] | [(ng <any_Cx_ng_ng_s>)])) (er | ((<any_Vx_ng_ng_er_noSlide> ng) | (ng <any_Vx_ng_ng_er_noSlide>)))) (([(<any_Cx_ng_er_n> n)] | [(n <any_Cx_ng_er_n>)]) ([(<any_Vx_ng_er_n> n)] | [(n <any_Vx_ng_er_n>)]) sil))

results =
{72 [{sil 0 2} {s 3 15} {er 16 38} {sil 39 55}]}
{80 [{sil 0 2} {s 3 17} {er 18 42} {sil 43 58}]}
{91 [{sil 0 2} {s 3 19} {er 20 38} {thr 39 41} {axr 42 82} {sil 83 107}]}
{105 [{sil 0 2} {s 3 22} {er 23 47} {axr 48 83} {d 84 86} {sil 87 124}]}
{125 [{sil 0 2} {s 3 24} {er 25 52} {r 53 55} {axr 56 97} {sil 98 145}]}

normalised results =
{72 [{sil 0 2} {s 4 21} {er 22 53} {sil 54 76}]}
{80 [{sil 0 2} {s 4 21} {er 23 53} {sil 54 73}]}
{91 [{sil 0 2} {s 3 21} {er 22 42} {thr 43 43} {axr 46 90} {sil 91 118}]}
{105 [{sil 0 2} {s 3 21} {er 22 45} {axr 46 79} {d 80 80} {sil 83 118}]}
{125 [{sil 0 2} {s 2 19} {er 20 42} {r 42 42} {axr 45 78} {sil 78 116}]}

ruleAligned = [{{s 0} [{0 1} {1 1} {2 1} {3 1} {4 1}]} {{er 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {s 4 21} {er 22 53} {sil 54 54}]}
{80 [{sil 0 0} {s 4 21} {er 23 53} {sil 54 54}]}
{91 [{sil 0 0} {s 3 21} {er 22 42} {thr 43 43} {axr 46 46} {sil 91 91}]}
{105 [{sil 0 0} {s 3 21} {er 22 45} {axr 46 79} {d 80 80} {sil 83 83}]}
{125 [{sil 0 0} {s 2 19} {er 20 42} {r 42 42} {axr 45 78} {sil 78 78}]}

timeAligned = [{{s 3 21} [{2 1} {3 1} {4 1} {0 1} {1 1}]} {{er 22 45} [{0 2} {2 2} {3 2} {4 2} {1 2}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 19
combinedVerdict    = [{s 0} {er 0}]
ruleAlignedVerdict = [{s 0} {er 0}]

score->
+2 for s
+2 for er
score<-: 9
testPronounce s good er good
publish->
phonsToAlphas = [{[s] s} {[er] ir}]
getVerdict<-:new {s [s] 0}
getVerdict<-:new {ir [er] 0}
lettersVerdicts = [{s [s] 0} {ir [er] 0}]
publish<-
{
  "word": "sir",
  "results": [
    {
      "letters": "s",
      "phonemes": "s",
      "verdict": "good"
    },
    {
      "letters": "ir",
      "phonemes": "ɜɹ",
      "verdict": "good"
    }
  ],
  "err": null
}
