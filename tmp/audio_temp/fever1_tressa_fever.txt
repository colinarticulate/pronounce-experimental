Calling Pronounce with args: outfolder /Users/test/go/src/Phonemes/audio_clips/Temp_c6ca79b8-a685-4675-8f73-3fd12dbe0b1d audiofile /Users/test/go/src/Phonemes/audio_clips/fever1_tressa.wav word fever dictfile /Users/test/Downloads/sourceFiltered_exp3Mar22.dict phdictfile /Users/test/Documents/GitHub/pronounce-experimental/Dictionaries/art_db_v3_inference.phone featureparams /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model/feat.params hmm /Users/test/Documents/GitHub/pronounce-experimental/Models/Bare.ci_cont_29Jun22/model

 length of audio =  1.983625



len(frame)= 640
rate = 16000



len(frame)= 640
rate = 16000

 start2, duration2, end2 =  0.8 0.6 1.4

 start3, duration3, end3 =  0.9800000000000001 0.38 1.36

 Initial start, duration, end =  0.7000000000000001 0.6999999999999998 1.4

 Cut at: start, duration =  0.7000000000000001 1.15     guard_end =  1.85 

Running scan for frate = 125
Considering guard ch with value 4.2 for f ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 8.4 for iy ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 6 for v ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 125 public <fever> = (((sil [((v <any_Cx_f_v_p>) | (<any_Cx_f_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]) | (sil p (sil [((v <any_Cx_f_v_p>) | (<any_Cx_f_v_p> v))] [((v <any_vowel_noSlide>) | (<any_vowel_noSlide> v))]))) (([(<any_Cx_ch_p_v_f> ch)] | [(ch <any_Cx_ch_p_v_f>)]) (f | s | p | ((<any_Cx_ch_p_v_f> ch) | (ch <any_Cx_ch_p_v_f>)))) ((([(<any_Vx_ch_ch_iy_noSlide> ch)] | [(ch <any_Vx_ch_ch_iy_noSlide>)]) ([(<any_Cx_ch_ch_v_f> ch)] | [(ch <any_Cx_ch_ch_v_f>)])) (iy | ((<any_Vx_ch_ch_iy_noSlide> ch) | (ch <any_Vx_ch_ch_iy_noSlide>)))) (([(<any_Cx_ch_ch_v> ch)] | [(ch <any_Cx_ch_ch_v>)]) (v | ((<any_Cx_ch_ch_v_axr> ch) | (ch <any_Cx_ch_ch_v_axr>)))) (([(<any_Cx_zh_ch_axr_v> zh)] | [(zh <any_Cx_zh_ch_axr_v>)]) (axr | ((<any_Cx_zh_ch_axr_v> zh) | (zh <any_Cx_zh_ch_axr_v>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_ng> ng)] | [(ng <any_Cx_zh_axr_ng>)]) sil))
Running scan for frate = 105
Considering guard ch with value 4.2 for f ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 8.4 for iy ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 6 for v ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 105 public <fever> = (((sil [((dh <any_Cx_f_dh_p>) | (<any_Cx_f_dh_p> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]) | (sil p (sil [((dh <any_Cx_f_dh_p>) | (<any_Cx_f_dh_p> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]))) (([(<any_Cx_ch_p_dh_f> ch)] | [(ch <any_Cx_ch_p_dh_f>)]) (f | s | p | ((<any_Cx_ch_p_dh_f> ch) | (ch <any_Cx_ch_p_dh_f>)))) ((([(<any_Vx_ch_ch_iy_noSlide> ch)] | [(ch <any_Vx_ch_ch_iy_noSlide>)]) ([(<any_Cx_ch_ch_v_f> ch)] | [(ch <any_Cx_ch_ch_v_f>)])) (iy | ((<any_Vx_ch_ch_iy_noSlide> ch) | (ch <any_Vx_ch_ch_iy_noSlide>)))) (([(<any_Cx_ch_ch_v> ch)] | [(ch <any_Cx_ch_ch_v>)]) (v | ((<any_Cx_ch_ch_v_axr> ch) | (ch <any_Cx_ch_ch_v_axr>)))) (([(<any_Cx_zh_ch_axr_v> zh)] | [(zh <any_Cx_zh_ch_axr_v>)]) (axr | ((<any_Cx_zh_ch_axr_v> zh) | (zh <any_Cx_zh_ch_axr_v>)))) (([(<any_vowel_noSlide> m)] | [(m <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_m> m)] | [(m <any_Cx_zh_axr_m>)]) sil))
Running scan for frate = 91
Considering guard ch with value 4.2 for f ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 8.4 for iy ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 6 for v ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 91 public <fever> = (((sil [((dh <any_Cx_f_dh_p>) | (<any_Cx_f_dh_p> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]) | (sil p (sil [((dh <any_Cx_f_dh_p>) | (<any_Cx_f_dh_p> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]))) (([(<any_Cx_ch_p_dh_f> ch)] | [(ch <any_Cx_ch_p_dh_f>)]) (f | s | p | ((<any_Cx_ch_p_dh_f> ch) | (ch <any_Cx_ch_p_dh_f>)))) ((([(<any_Vx_ch_ch_iy_noSlide> ch)] | [(ch <any_Vx_ch_ch_iy_noSlide>)]) ([(<any_Cx_ch_ch_v_f> ch)] | [(ch <any_Cx_ch_ch_v_f>)])) (iy | ((<any_Vx_ch_ch_iy_noSlide> ch) | (ch <any_Vx_ch_ch_iy_noSlide>)))) (([(<any_Cx_ch_ch_v> ch)] | [(ch <any_Cx_ch_ch_v>)]) (v | ((<any_Cx_ch_ch_v_axr> ch) | (ch <any_Cx_ch_ch_v_axr>)))) (([(<any_Cx_zh_ch_axr_v> zh)] | [(zh <any_Cx_zh_ch_axr_v>)]) (axr | ((<any_Cx_zh_ch_axr_v> zh) | (zh <any_Cx_zh_ch_axr_v>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_ng> ng)] | [(ng <any_Cx_zh_axr_ng>)]) sil))
Running scan for frate = 80
Considering guard ch with value 4.2 for f ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 8.4 for iy ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 6 for v ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 80 public <fever> = (((sil [((s <any_Cx_f_s_p>) | (<any_Cx_f_s_p> s))] [((s <any_vowel_noSlide>) | (<any_vowel_noSlide> s))]) | (sil p (sil [((s <any_Cx_f_s_p>) | (<any_Cx_f_s_p> s))] [((s <any_vowel_noSlide>) | (<any_vowel_noSlide> s))]))) (([(<any_Cx_ch_p_s_f> ch)] | [(ch <any_Cx_ch_p_s_f>)]) (f | s | p | ((<any_Cx_ch_p_s_f> ch) | (ch <any_Cx_ch_p_s_f>)))) ((([(<any_Vx_ch_ch_iy_noSlide> ch)] | [(ch <any_Vx_ch_ch_iy_noSlide>)]) ([(<any_Cx_ch_ch_v_f> ch)] | [(ch <any_Cx_ch_ch_v_f>)])) (iy | ((<any_Vx_ch_ch_iy_noSlide> ch) | (ch <any_Vx_ch_ch_iy_noSlide>)))) (([(<any_Cx_ch_ch_v> ch)] | [(ch <any_Cx_ch_ch_v>)]) (v | ((<any_Cx_ch_ch_v_axr> ch) | (ch <any_Cx_ch_ch_v_axr>)))) (([(<any_Cx_zh_ch_axr_v> zh)] | [(zh <any_Cx_zh_ch_axr_v>)]) (axr | ((<any_Cx_zh_ch_axr_v> zh) | (zh <any_Cx_zh_ch_axr_v>)))) (([(<any_vowel_noSlide> n)] | [(n <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_n> n)] | [(n <any_Cx_zh_axr_n>)]) sil))
Running scan for frate = 72
Considering guard ch with value 4.2 for f ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 8.4 for iy ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard ch with value 6 for v ...
candidateGuards = map[ch:true]
Picking guard, ch

Considering guard zh with value 1 for axr ...
candidateGuards = map[zh:true]
Picking guard, zh

frate, target rule = 72 public <fever> = (((sil [((dh <any_Cx_f_dh_p>) | (<any_Cx_f_dh_p> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]) | (sil p (sil [((dh <any_Cx_f_dh_p>) | (<any_Cx_f_dh_p> dh))] [((dh <any_vowel_noSlide>) | (<any_vowel_noSlide> dh))]))) (([(<any_Cx_ch_p_dh_f> ch)] | [(ch <any_Cx_ch_p_dh_f>)]) (f | s | p | ((<any_Cx_ch_p_dh_f> ch) | (ch <any_Cx_ch_p_dh_f>)))) ((([(<any_Vx_ch_ch_iy_noSlide> ch)] | [(ch <any_Vx_ch_ch_iy_noSlide>)]) ([(<any_Cx_ch_ch_v_f> ch)] | [(ch <any_Cx_ch_ch_v_f>)])) (iy | ((<any_Vx_ch_ch_iy_noSlide> ch) | (ch <any_Vx_ch_ch_iy_noSlide>)))) (([(<any_Cx_ch_ch_v> ch)] | [(ch <any_Cx_ch_ch_v>)]) (v | ((<any_Cx_ch_ch_v_axr> ch) | (ch <any_Cx_ch_ch_v_axr>)))) (([(<any_Cx_zh_ch_axr_v> zh)] | [(zh <any_Cx_zh_ch_axr_v>)]) (axr | ((<any_Cx_zh_ch_axr_v> zh) | (zh <any_Cx_zh_ch_axr_v>)))) (([(<any_vowel_noSlide> ng)] | [(ng <any_vowel_noSlide>)]) ([(<any_Cx_zh_axr_ng> ng)] | [(ng <any_Cx_zh_axr_ng>)]) sil))

results =
{72 [{sil 0 11} {p 12 14} {iy 15 26} {v 27 29} {axr 30 44} {sil 45 79}]}
{80 [{sil 0 11} {f 12 15} {iy 16 29} {v 30 33} {axr 34 49} {sil 50 85}]}
{91 [{sil 0 13} {f 14 18} {iy 19 33} {v 34 37} {axr 38 79} {sil 80 103}]}
{105 [{sil 0 16} {f 17 21} {iy 22 39} {v 40 43} {axr 44 93} {sil 94 119}]}
{125 [{sil 0 17} {f 18 23} {iy 24 45} {v 46 50} {axr 51 108} {sil 109 140}]}

normalised results =
{72 [{sil 0 11} {p 17 17} {iy 21 36} {v 38 38} {axr 42 61} {sil 63 110}]}
{80 [{sil 0 11} {f 15 19} {iy 20 36} {v 38 41} {axr 43 61} {sil 63 106}]}
{91 [{sil 0 13} {f 15 20} {iy 21 36} {v 37 41} {axr 42 87} {sil 88 113}]}
{105 [{sil 0 16} {f 16 20} {iy 21 37} {v 38 41} {axr 42 89} {sil 90 113}]}
{125 [{sil 0 17} {f 14 18} {iy 19 36} {v 37 40} {axr 41 86} {sil 87 112}]}

ruleAligned = [{{f 0} [{1 1} {2 1} {3 1} {4 1}]} {{iy 0} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{v 0} [{1 3} {2 3} {3 3} {4 3}]} {{axr 0} [{0 4} {1 4} {2 4} {3 4} {4 4}]}]

results (after rule-alignment) =
{72 [{sil 0 0} {p 17 17} {iy 21 36} {v 38 38} {axr 42 61} {sil 63 63}]}
{80 [{sil 0 0} {f 15 19} {iy 20 36} {v 38 41} {axr 43 61} {sil 63 63}]}
{91 [{sil 0 0} {f 15 20} {iy 21 36} {v 37 41} {axr 42 87} {sil 88 88}]}
{105 [{sil 0 0} {f 16 20} {iy 21 37} {v 38 41} {axr 42 89} {sil 90 90}]}
{125 [{sil 0 0} {f 14 18} {iy 19 36} {v 37 40} {axr 41 86} {sil 87 87}]}

timeAligned = [{{f 15 19} [{1 1} {2 1} {4 1} {3 1}]} {{iy 21 36} [{0 2} {1 2} {2 2} {3 2} {4 2}]} {{v 38 41} [{1 3} {2 3} {3 3} {4 3}]} {{axr 42 86} [{0 4} {2 4} {3 4} {4 4} {1 4}]}]

i, iTime, newITime, timeStartFrom = 0 0 0 0
i, iTime, newITime, timeStartFrom = 1 0 1 18
i, iTime, newITime, timeStartFrom = 2 1 2 36
i, iTime, newITime, timeStartFrom = 3 2 3 40
combinedVerdict    = [{f 0} {iy 0} {v 0} {axr 0}]
ruleAlignedVerdict = [{f 0} {iy 0} {v 0} {axr 0}]

score->
+2 for f
+2 for iy
+2 for v
+2 for axr
score<-: 13
testPronounce f good iy good v good axr good
publish->
phonsToAlphas = [{[f] f} {[iy] e} {[v] v} {[axr] er}]
getVerdict<-:new {f [f] 0}
getVerdict<-:new {e [iy] 0}
getVerdict<-:new {v [v] 0}
getVerdict<-:new {er [axr] 0}
lettersVerdicts = [{f [f] 0} {e [iy] 0} {v [v] 0} {er [axr] 0}]
publish<-
{
  "word": "fever",
  "results": [
    {
      "letters": "f",
      "phonemes": "f",
      "verdict": "good"
    },
    {
      "letters": "e",
      "phonemes": "iː",
      "verdict": "good"
    },
    {
      "letters": "v",
      "phonemes": "v",
      "verdict": "good"
    },
    {
      "letters": "er",
      "phonemes": "əɹ",
      "verdict": "good"
    }
  ],
  "err": null
}
